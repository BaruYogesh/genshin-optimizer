import { CssBaseline } from '@mui/material'
import { AppRouterCacheProvider } from '@mui/material-nextjs/v14-appRouter'
import ThemeProvider from '@mui/material/styles/ThemeProvider'
import type { Metadata, Viewport } from 'next'
import TranslationsProvider from '../../components/TranslationsProvider'
import initTranslations from '../../i18n'
import { locales } from '../../i18nConfig'
import theme from '../../theme'
import { getSupabase } from '../../utils/supabase/server'
import Header from '../components/Header'
import { UserProfileContextProvider } from '../context/UserProfileContext'
import getAccount from '../util/getAccount'
import getProfile from '../util/getProfile'
import getUser from '../util/getUser'
import './global.css'

export const metadata: Metadata = {
  title: 'Welcome to gi-frontend',
  description: 'Generated by create-nx-workspace',
}

export const viewport: Viewport = {
  themeColor: '#0c1020',
}
const i18nNamespaces = ['home']

// Allow static generation of pages for each language
export function generateStaticParams() {
  return locales.map((locale) => ({ locale }))
}

export default async function RootLayout({
  children,
  params: { locale },
}: {
  children: React.ReactNode
  params: { locale: string }
}) {
  console.log({ locale })
  const supabase = getSupabase()
  const user = await getUser(supabase)
  const profile = await getProfile(supabase, user)
  const account = await getAccount(supabase, profile)
  const { resources } = await initTranslations(locale, i18nNamespaces)
  console.log({ resources })
  return (
    <html lang="en">
      <body
        style={{
          background:
            'radial-gradient(ellipse at bottom, #1b2735 0%, #0c1020 100%)',
          minHeight: '100vh',
        }}
      >
        <AppRouterCacheProvider>
          <ThemeProvider theme={theme}>
            <CssBaseline enableColorScheme />
            <UserProfileContextProvider
              user={user}
              profile={profile}
              account={account}
            >
              <TranslationsProvider
                namespaces={i18nNamespaces}
                locale={locale}
                resources={resources}
              >
                <Content>{children}</Content>
              </TranslationsProvider>
            </UserProfileContextProvider>
          </ThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  )
}
function Content({ children }: { children: React.ReactNode }) {
  return (
    <>
      <Header />
      {children}
    </>
  )
}
