{"version":3,"sources":["Components/FieldDisplay.tsx","Components/CustomFormControl.tsx","Character/CharacterUtil.tsx","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Character/StatInput.tsx","Components/StatDisplay.tsx","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/DamageOptionsAndCalculation.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","../node_modules/react-bootstrap/esm/ToastContext.js","../node_modules/react-bootstrap/esm/ToastHeader.js","../node_modules/react-bootstrap/esm/ToastBody.js","../node_modules/react-bootstrap/esm/Toast.js","FlexPage/CodingUtil.ts","FlexPage/Schemas.ts","FlexPage/FlexUtil.ts","FlexPage/FlexDisplay.tsx"],"names":["FieldDisplay","field","index","className","useContext","buildContext","newBuild","equippedBuild","compareBuild","build","canShow","useMemo","fixedVal","fixed","fieldVal","value","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","parseInt","toFixed","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","id","icon","faQuestionCircle","style","cursor","unit","Item","variant","CustomFormControl","onChange","disabled","float","placeholder","allowEmpty","max","min","useState","state","setState","sendChange","useCallback","undefined","parseFunc","parseFloat","useEffect","toString","aria-label","type","e","target","onBlur","onKeyDown","key","getFormulaTargetsDisplayHeading","characterSheet","weaponSheet","artifactSheets","eleKey","startsWith","subkey","split","getTalentOfKey","name","setKey","num","initialCharacter","level","ascension","hitMode","reactionMode","equippedArtifacts","objectFromKeyMap","allSlotKeys","equippedWeapon","conditionalValues","baseStatOverrides","buildSettings","initialBuildSettings","talent","auto","skill","burst","infusionAura","constellation","ConditionalSelector","conditional","conditionalValue","setConditional","stats","conditionalNum","conditionalStateKey","states","Object","values","text","evalIfFunc","maxStack","badge","Badge","Dropdown","Toggle","size","whiteSpace","Menu","onClick","entries","map","i","stateKey","condial","Fragment","Array","keys","v","stack","Button","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","fieldClassName","Conditional","resolve","conditionalStats","fields","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","DocumentDisplay","sections","section","talentText","length","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Prepend","Text","Append","Boolean","pointerEvents","faUndo","DisplayStatDiff","label","val","oldVal","oldText","diffText","xs","StatDisplay","character","statKey","usePromise","isArray","Formula","get","invalid","getStatValueWithOverride","characterHP","characterDEF","characterATK","weaponATK","Stat","getStatUnit","fixedUnit","StatIcon","getStatName","labelVariant","hasOverride","SetEffectDisplay","setNumKey","sheet","ArtifactSheet","setEffectText","setEffectDesc","setStats","setNumStats","setStatsFields","document","setEffectDocument","infusionVals","uncoloredEleIcons","pyro","cryo","InfusionAuraDropdown","isMelee","ReactionToggle","charEleKey","characterEle","includes","s","hydro","HitModeToggle","m","CalculationDisplay","sheets","displayStatKeys","getDisplayStatKeys","sectionKey","header","Body","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","reverse","as","eventKey","printStat","Collapse","subKey","expand","formulaField","fieldFixed","fieldUnit","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","callback","currentEventKey","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","DamageOptionsAndCalculation","href","rel","xl","getStatNameRaw","getBaseStatValue","allElements","immunityStatKey","elementImmunity","StatDisplayComponent","statsDisplayKeys","cardbg","sectionValues","md","JSON","stringify","ToastContext","React","createContext","onClose","_excluded","ToastHeader","forwardRef","_ref","ref","bsPrefix","closeLabel","closeButton","children","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","context","handleClick","useEventCallback","createElement","_extends","classNames","CloseButton","displayName","defaultProps","createWithBsPrefix","Toast","_ref$transition","transition","Transition","Fade","_ref$show","show","_ref$animation","animation","_ref$delay","delay","_ref$autohide","autohide","delayRef","useRef","onCloseRef","current","autohideTimeout","useTimeout","autohideToast","autohideFunc","set","toastContext","hasAnimation","toast","role","Provider","in","unmountOnExit","assign","ToastBody","decode","string","schema","stream","BlockStream","result","decodeItem","end","encodeItem","data","pathItem","encode","uint","uintToString","encodeLength","encodeUInt","match","Error","encodeString","schemas","defaultSchema","item","join","encodeArray","default","encodeObject","keySchema","valueSchema","items","filter","encodeSparse","error","path","push","decodeLength","stringToUInt","take","decodeUInt","decodeString","unused","decodeArray","fromEntries","decodeObject","decodeSparse","number","remainder","Math","floor","String","fromCharCode","padEnd","multiplier","code","charCodeAt","offset","this","count","slice","replace","array","other","object","sparse","optional","list","indexOf","stat","artifactSet","allArtifactSets","slot","characterKey","allCharacterKeys","allHitModes","allReactionModes","element","substat","factor","endsWith","crawlObject","c","pathvalues","weapon","artifact","last","pop","next","artifactV2","numStars","mainStatKey","slotKey","substats","art","lock","weaponV2","levelKey","refineIndex","overrideMainVal","overrideSubVal","lvla","ascensionMaxLevel","findIndex","maxLevel","addAsc","characterV2","overrideLevel","talentLevelKeys","reserved","isAscended","levelString","characterLevel","weaponLevel","elementKey","flexV2","artifacts","artifactV3","location","raritySlotKey","rarity","weaponV3","ascensionRefine","levelDiff","refine","characterV3","ascensionConstellation","flexV3","characters","weapons","createFlexObj","database","_getChar","_getWeapon","_getArt","parseFlexObj","parameters","decoded","newCharacterKey","toLowerCase","storage","SandboxStorage","setString","forEach","ArtCharDatabase","parseFlexObjV2","d","charKey","parseFlexObjV3","FlexDisplay","useLocation","DatabaseContext","searchStr","search","flexResult","substring","to","Database","Display","flexObj","window","scrollTo","settoast","url","Container","position","top","right","InputGroup","navigator","clipboard","writeText","then","catch","console","faLink","Form","Control","readOnly","select","CharacterDisplayCard"],"mappings":"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","file":"static/js/13.e6395a07.chunk.js","sourcesContent":["import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { buildContext } from \"../Build/Build\";\r\nimport Character from \"../Character/Character\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\n\r\nexport default function FieldDisplay({ field, index, className = \"p-2\" }: { field: IFieldDisplay, index: number, className?: string }) {\r\n  const { newBuild, equippedBuild, compareBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild)\r\n  const canShow = useMemo(() => build ? field?.canShow?.(build) : false, [field, build])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", build)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      //compareAgainstEquipped\r\n      if (compareBuild && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareBuild, fixedVal, equippedBuild, field, build])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", build), [field, build])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", build), [field, build])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip id=\"field-formula\">{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, build])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", build), [field, build])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\ntype props = {\r\n  value: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  className?: string\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  placeholder?: string,\r\n  allowEmpty?: boolean,\r\n  max?: string | number,\r\n  min?: string | number,\r\n}\r\nexport default function CustomFormControl({ value, onChange, className = \"\", disabled = false, float = false, placeholder, allowEmpty = false, max, min }: props) {\r\n  const [state, setState] = useState(\"\")\r\n  const sendChange = useCallback(\r\n    () => {\r\n      if (allowEmpty && state === \"\") return onChange(undefined)\r\n      if (state === \"\") return onChange(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state))\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setState(value?.toString() ?? \"\"), [value, setState]) // update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className={`hide-appearance ${className}`}\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={(e: any) => setState(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={(e: any) => e.key === \"Enter\" && sendChange()}\r\n    max={max}\r\n    min={min}\r\n  />\r\n}","import { Badge } from \"react-bootstrap\"\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\"\r\nimport { initialBuildSettings } from \"../Build/BuildSetting\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { allSlotKeys, ArtifactSetKey, CharacterKey, ElementKey } from \"../Types/consts\"\r\nimport { objectFromKeyMap } from \"../Util/Util\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport CharacterSheet from \"./CharacterSheet\"\r\n\r\nexport function getFormulaTargetsDisplayHeading(key: string, { characterSheet, weaponSheet, artifactSheets }: { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet> }, eleKey: ElementKey = \"anemo\") {\r\n  if (key === \"basicKeys\") return \"Basic Stats\"\r\n  else if (key === \"genericAvgHit\") return \"Generic Optimization Values\"\r\n  else if (key === \"transReactions\") return \"Transformation Reaction\"\r\n  else if (key.startsWith(\"talentKey_\")) {\r\n    const subkey = key.split(\"talentKey_\")[1]\r\n    return (characterSheet?.getTalentOfKey(subkey, eleKey)?.name ?? subkey)\r\n  } else if (key.startsWith(\"weapon_\")) {\r\n    const subkey = key.split(\"weapon_\")[1]\r\n    return (weaponSheet?.name ?? subkey)\r\n  } else if (key.startsWith(\"artifact_\")) {\r\n    const [, setKey, num] = key.split('_')\r\n    return <span>{artifactSheets[setKey]?.name} <Badge variant=\"success\">{num}-Set</Badge></span>\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key, // the game character this is based off\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: objectFromKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    conditionalValues: {},\r\n    baseStatOverrides: {}, // overriding the baseStat\r\n    buildSettings: initialBuildSettings(),\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n  }\r\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled?: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial]: any, i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n          <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setConditional([0])}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n            <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n              {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n            </Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n        <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { useCallback, useContext, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\r\nimport IConditional from \"../Types/IConditional\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  characterDispatch: (any) => void,//TODO: characterDispatch type\r\n  fieldClassName?: string\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, characterDispatch, fieldClassName }: ConditionalDisplayProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    if (!stats) return\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else if (conditional.keys)\r\n      layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats, characterDispatch])\r\n\r\n  if (!canShow || !stats) return null\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} field={field} className={fieldClassName} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","import { useContext } from \"react\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport { DocumentSection } from \"../Types/character\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport ConditionalDisplay from \"./ConditionalDisplay\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\n\r\ntype SkillDisplayCardProps = {\r\n  sections: DocumentSection[],\r\n  characterDispatch: (any) => void,\r\n}\r\nexport default function DocumentDisplay({ sections, characterDispatch }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  return <div className=\"w-100\">{sections?.map((section, i) => {\r\n    if (!section.canShow!(build)) return null\r\n    const talentText = evalIfFunc(section.text, build)\r\n    const fields = section.fields ?? []\r\n    return <div className=\"my-2\" key={\"section\" + i}>\r\n      <div>\r\n        <div className=\"mb-2\">{talentText}</div>\r\n        {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n          {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} field={field} />)}\r\n        </ListGroup>}\r\n      </div>\r\n      {!!section.conditional && <ConditionalDisplay conditional={section.conditional} characterDispatch={characterDispatch} />}\r\n    </div>\r\n  })}</div>\r\n}\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\ntype StatInputInput = {\r\n  name: Displayable,\r\n  prependEle?: Displayable,\r\n  value: number,\r\n  placeholder: string,\r\n  defaultValue: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n  className?: any,\r\n}\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent = false, disabled = false, ...restProps }: StatInputInput) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip id=\"reset-tooltip\">Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport StatIcon from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\ntype StatDisplayProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ characterSheet, weaponSheet, character, equippedBuild, newBuild, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined, [statKey])\r\n\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\" //can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey) ?? invalid\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (build) {\r\n          if (statKey === \"finalHP\")\r\n            oldVal = build.characterHP\r\n          else if (statKey === \"finalDEF\")\r\n            oldVal = build.characterDEF\r\n          else if (statKey === \"finalATK\")\r\n            oldVal = build.characterATK + build.weaponATK\r\n        }\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, characterSheet, weaponSheet, equippedBuild, newBuild, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label: label as any }} />\r\n}","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\"\r\nimport FieldDisplay from \"../../Components/FieldDisplay\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n  characterDispatch: (arg0: any) => void,\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, characterDispatch }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectDesc(setNumKey)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const document = sheet.setEffectDocument(setNumKey)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} field={field} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {document ? <DocumentDisplay sections={document} characterDispatch={characterDispatch} /> : null}\r\n  </>\r\n}\r\n","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\";\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport StatIcon, { uncoloredEleIcons } from \"../../Components/StatIcon\";\r\nimport Formula from \"../../Formula\";\r\nimport Stat, { FormulaDisplay } from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allElements, ArtifactSetKey } from \"../../Types/consts\";\r\nimport { IFieldDisplay } from \"../../Types/IFieldDisplay\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport { usePromise } from \"../../Util/ReactUtil\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport type { characterReducerAction } from \"../CharacterDisplayCard\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport { getFormulaTargetsDisplayHeading } from \"../CharacterUtil\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No External Infusion</span>,\r\n  \"pyro\": <span >{uncoloredEleIcons.pyro} Pyro Infusion</span>,\r\n  \"cryo\": <span >{uncoloredEleIcons.cryo} Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  className?: string\r\n  disabled?: boolean\r\n}\r\nexport function InfusionAuraDropdown({ characterSheet, character: { infusionAura = \"\" }, characterDispatch, className, disabled = false }: InfusionAuraDropdownProps) {\r\n  if (!characterSheet.isMelee()) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"} disabled={disabled}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\ntype ReactionToggleProps = {\r\n  character: ICachedCharacter,\r\n  build: ICalculatedStats,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  className: string\r\n  disabled?: boolean\r\n}\r\nexport function ReactionToggle({ character: { reactionMode = null, infusionAura }, build, characterDispatch, className, disabled = false }: ReactionToggleProps) {\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  const v = s => s ? \"success\" : \"secondary\"\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={v(!reactionMode)} disabled={disabled}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={v(reactionMode === \"pyro_vaporize\")} disabled={disabled}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) {StatIcon.hydro}+{StatIcon.pyro}</span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={v(reactionMode === \"pyro_melt\")} disabled={disabled}>\r\n      <span className=\"text-melt\">Melt(Pyro) {StatIcon.cryo}+{StatIcon.pyro}</span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={v(reactionMode === \"hydro_vaporize\")} disabled={disabled}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) {StatIcon.pyro}+{StatIcon.hydro}</span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={v(reactionMode === \"cryo_melt\")} disabled={disabled}>\r\n      <span className=\"text-melt\">Melt(Cryo) {StatIcon.pyro}+{StatIcon.cryo}</span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className, disabled = false }) {\r\n  const v = s => s ? \"success\" : \"secondary\"\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className} >\r\n    <ToggleButton value=\"avgHit\" variant={v(hitMode === \"avgHit\")} disabled={disabled} >Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={v(hitMode === \"hit\")} disabled={disabled} >Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={v(hitMode === \"critHit\")} disabled={disabled} >Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ sheets, build }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  build: ICalculatedStats\r\n}) {\r\n  const displayStatKeys = useMemo(() => build && Character.getDisplayStatKeys(build, sheets), [build, sheets])\r\n  if (!build) return null\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([sectionKey, fields]: [string, any]) => {\r\n      const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build.characterEle)\r\n      return <Card bg=\"darkcontent\" text={\"lightfont\" as any} key={sectionKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              if (Array.isArray(field))\r\n                return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} fieldIndex={fieldIndex} />\r\n              else if (typeof field === \"string\") {//simple statKey field\r\n                const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              return null\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\nfunction FormulaCalculationField({ fieldKeys, build, fieldIndex }: { fieldKeys: string[], build: ICalculatedStats, fieldIndex: number, }) {\r\n  const formula = usePromise(Formula.get(fieldKeys), [fieldKeys])\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const fieldFixed = Character.getTalentFieldValue(formulaField, \"fixed\", build) ?? 0\r\n  const fieldUnit = Character.getTalentFieldValue(formulaField, \"unit\", build) ?? \"\"\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.(fieldFixed)\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n      <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}{fieldUnit}</span>\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n      <Card.Body className=\"p-2\">\r\n        <div className=\"mb-n2\">\r\n          <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n          {subFormulaKeys.map(subKey =>\r\n            <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></p>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\ntype DamageOptionsAndCalculationProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  className: string\r\n}\r\nexport default function DamageOptionsAndCalculation({ sheets, sheets: { characterSheet, weaponSheet }, character, character: { hitMode }, characterDispatch, className }: DamageOptionsAndCalculationProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle character={character} build={build} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle callback={undefined} {...{ as: Button }} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value })}\r\n                    />\r\n                  </Col>\r\n                  {[\"physical\", ...allElements].map(eleKey => {\r\n                    let statKey = `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay sheets={sheets} build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICachedCharacter } from \"../../Types/character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport { ArtifactSetKey } from \"../../Types/consts\"\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../CharacterUtil\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  character: ICachedCharacter\r\n  statsDisplayKeys: any,\r\n  cardbg?: string\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ sheets, sheets: { characterSheet, weaponSheet }, character, equippedBuild, newBuild, statsDisplayKeys, cardbg = \"darkcontent\" }: StatDisplayComponentProps) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([sectionKey, sectionValues]: any) => {\r\n    const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build?.characterEle)\r\n    return <Col key={sectionKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text={\"lightfont\" as any} className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import React from 'react'; // TODO: check\n\nvar ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose: function onClose() {}\n});\nexport default ToastContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"closeLabel\", \"closeButton\", \"className\", \"children\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nvar defaultProps = {\n  closeLabel: 'Close',\n  closeButton: true\n};\nvar ToastHeader = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      closeLabel = _ref.closeLabel,\n      closeButton = _ref.closeButton,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  var context = useContext(ToastContext);\n  var handleClick = useEventCallback(function (e) {\n    if (context && context.onClose) {\n      context.onClose(e);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(bsPrefix, className)\n  }), children, closeButton && /*#__PURE__*/React.createElement(CloseButton, {\n    label: closeLabel,\n    onClick: handleClick,\n    className: \"ml-2 mb-1\",\n    \"data-dismiss\": \"toast\"\n  }));\n});\nToastHeader.displayName = 'ToastHeader';\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('toast-body');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\"];\nimport React, { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Fade from './Fade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nvar Toast = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$transition = _ref.transition,\n      Transition = _ref$transition === void 0 ? Fade : _ref$transition,\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? true : _ref$show,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? true : _ref$animation,\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 3000 : _ref$delay,\n      _ref$autohide = _ref.autohide,\n      autohide = _ref$autohide === void 0 ? false : _ref$autohide,\n      onClose = _ref.onClose,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose);\n  useEffect(function () {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  var autohideTimeout = useTimeout();\n  var autohideToast = !!(autohide && show);\n  var autohideFunc = useCallback(function () {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(function () {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  var toastContext = useMemo(function () {\n    return {\n      onClose: onClose\n    };\n  }, [onClose]);\n  var hasAnimation = !!(Transition && animation);\n  var toast = /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(bsPrefix, className, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: toastContext\n  }, hasAnimation && Transition ? /*#__PURE__*/React.createElement(Transition, {\n    in: show,\n    unmountOnExit: true\n  }, toast) : toast);\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","// @ts-nocheck\r\n// The *type* of these data are in schema and so are unknown at compile time.\r\n// Type annotation here will only amount to adding `any` everywhere\r\n\r\n/// Schema keys\r\n/// Common {\r\n///   encode?: A function that transform encoding object into the specified format\r\n///   decode?: A function that transform object in the specified format into the decoded object\r\n/// }\r\n///\r\n/// UInt: { type: \"uint\",\r\n///   length?: number of bytes, uses variable-length format if not set,\r\n/// }\r\n/// String: { type: \"string\" }\r\n/// Array: { type: \"array\",\r\n///   schemas?: Array of schemas, in the same order as the item,\r\n///   defaultSchema?: Default schema for when `schemas[i]` is `null`,\r\n/// }\r\n/// Object: { type: \"object\",\r\n///   schemas: A key-schema dictionary. All keys are encoded\r\n///   default: default value if the object[key] doesn't exist\r\n/// }\r\n/// Sparse: { type: \"sparse\",\r\n///   keys?: A list of permitted keys, `null` if all keys are permitted,\r\n///   keySchema: Common schema for keys,\r\n///   valueSchema: Common schema for values,\r\n/// }\r\n\r\nexport function encode(data, schema) {\r\n  return encodeItem(data, schema, null)\r\n}\r\nexport function decode(string, schema) {\r\n  const stream = new BlockStream(string)\r\n  const result = decodeItem(stream, schema, null)\r\n  stream.end()\r\n  return result\r\n}\r\n\r\nfunction encodeItem(data, schema, pathItem) {\r\n  try {\r\n    if (schema.encode)\r\n      data = schema.encode(data)\r\n    switch (schema.type) {\r\n      case \"uint\": return encodeUInt(data, schema)\r\n      case \"string\": return encodeString(data, schema)\r\n      case \"array\": return encodeArray(data, schema)\r\n      case \"object\": return encodeObject(data, schema)\r\n      case \"sparse\": return encodeSparse(data, schema)\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\nfunction decodeItem(stream, schema, pathItem) {\r\n  try {\r\n    let result\r\n    switch (schema.type) {\r\n      case \"uint\": result = decodeUInt(stream, schema); break\r\n      case \"string\": result = decodeString(stream, schema); break\r\n      case \"array\": result = decodeArray(stream, schema); break\r\n      case \"object\": result = decodeObject(stream, schema); break\r\n      case \"sparse\": result = decodeSparse(stream, schema); break\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n    if (schema.decode)\r\n      return schema.decode(result)\r\n    return result\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\n\r\nfunction encodeSparse(data, schema) {\r\n  const { keySchema, keys, valueSchema } = schema\r\n  const items = Object.entries(data).filter(([key]) => keys?.includes(key) ?? true)\r\n\r\n  return encodeLength(items.length) + items.map(([key, value]) =>\r\n    encodeItem(key, keySchema, key) + encodeItem(value, valueSchema, key)\r\n  ).join('')\r\n}\r\nfunction decodeSparse(stream, schema) {\r\n  const { keys, keySchema, valueSchema } = schema\r\n  const length = decodeLength(stream)\r\n\r\n  return Object.fromEntries([...new Array(length)].map(() => {\r\n    const key = decodeItem(stream, keySchema, null)\r\n    const value = decodeItem(stream, valueSchema, key)\r\n    return [key, value]\r\n  }).filter(([key]) => keys?.includes(key) ?? true))\r\n}\r\n\r\nfunction encodeObject(data, schema: { schemas: any[], default: any }) {\r\n  const { schemas = [] } = schema\r\n  return Object.entries(schemas).map(([key, schema]) =>\r\n    encodeItem(key in data ? data[key] : schema.default, schema, key)\r\n  ).join('')\r\n}\r\nfunction decodeObject(stream, schema) {\r\n  const { schemas = [] } = schema\r\n  return Object.fromEntries(Object.entries(schemas).map(([key, schema]) =>\r\n    [key, decodeItem(stream, schema, key)]\r\n  ))\r\n}\r\n\r\nfunction encodeArray(data, schema) {\r\n  const { schemas = [], defaultSchema } = schema\r\n  return encodeLength(data.length) + data.map((item, i) =>\r\n    encodeItem(item, schemas[i] ?? defaultSchema, i)\r\n  ).join('')\r\n}\r\nfunction decodeArray(stream, schema) {\r\n  const { schemas = [], defaultSchema } = schema, length = decodeLength(stream)\r\n  return [...new Array(length)].map((unused, i) =>\r\n    decodeItem(stream, schemas[i] ?? defaultSchema, i))\r\n}\r\n\r\nfunction encodeString(string, schema) {\r\n  if (!string.match(/^[a-z0-9\\-_]*$/i))\r\n    throw new Error(`Cannot encode string ${string}: not alphanumeric or -_`)\r\n  return encodeLength(string.length) + string\r\n}\r\nfunction decodeString(stream, schema) {\r\n  const string = stream.take(decodeLength(stream))\r\n  if (!string.match(/^[a-z0-9\\-_]*$/i))\r\n    throw new Error(`Cannot decode string ${string}: not alphanumeric or -_`)\r\n  return string\r\n}\r\n\r\nfunction encodeUInt(uint, schema) {\r\n  const string = uintToString(uint, schema.length)\r\n  return schema.length ? string : (encodeLength(string.length) + string)\r\n}\r\nfunction decodeUInt(stream, schema) {\r\n  let length = schema.length || decodeLength(stream)\r\n  return stringToUInt(stream.take(length))\r\n}\r\n\r\n// Keep the length low. We might want to reserve high bits for later extension.\r\nfunction encodeLength(length) {\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return uintToString(length, 1)\r\n}\r\nfunction decodeLength(stream) {\r\n  let length = stringToUInt(stream.take(1))\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return length\r\n}\r\n\r\nexport function uintToString(number, length = 0) {\r\n  if (number < 0) throw new Error(`Cannot encode negative number ${number}`)\r\n\r\n  var string = \"\"\r\n  while (number > 0) {\r\n    const remainder = number % 64\r\n    number = Math.floor(number / 64)\r\n    if (remainder < 10) // 0-9\r\n      string += String.fromCharCode(remainder + 48 - 0)\r\n    else if (remainder < 36) // a-z\r\n      string += String.fromCharCode(remainder + 97 - 10)\r\n    else if (remainder < 62) // A-Z\r\n      string += String.fromCharCode(remainder + 65 - 36)\r\n    else if (remainder === 62) // -\r\n      string += \"-\"\r\n    else if (remainder === 63) // _\r\n      string += \"_\"\r\n  }\r\n\r\n  if (!length)\r\n    return string\r\n\r\n  if (string.length > length)\r\n    throw new Error(`Cannot encode uint ${number}: value too large`)\r\n  return string.padEnd(length, \"0\")\r\n}\r\nexport function stringToUInt(string) {\r\n  let result = 0, multiplier = 1\r\n\r\n  for (let i = 0; i < string.length; i++) {\r\n    let code = string.charCodeAt(i)\r\n\r\n    if (48 <= code && code < 58) // 0-9\r\n      result += multiplier * (code - 48 + 0)\r\n    else if (97 <= code && code < 123) // a-z\r\n      result += multiplier * (code - 97 + 10)\r\n    else if (65 <= code && code < 91) // A-Z\r\n      result += multiplier * (code - 65 + 36)\r\n    else if (string[i] === '-')\r\n      result += multiplier * 62\r\n    else if (string[i] === '_')\r\n      result += multiplier * 63\r\n    else throw new Error(`Cannot parse UInt from \"${string}\", which contains \"${String.fromCharCode(code)}\"`)\r\n\r\n    multiplier *= 64\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nclass BlockStream {\r\n  string: string\r\n  offset: number\r\n  constructor(string) {\r\n    this.string = string\r\n    this.offset = 0\r\n  }\r\n  take(count) {\r\n    if (this.offset + count > this.string.length)\r\n      throw new Error(`Cannot take ${count} items from ${this.string.slice(this.offset)}`)\r\n\r\n    const result = this.string.slice(this.offset, this.offset + count)\r\n    this.offset += count\r\n    return result\r\n  }\r\n  end() {\r\n    if (this.string.length !== this.offset)\r\n      throw new Error(`Unused string ${this.string.slice(this.offset)}`)\r\n  }\r\n}\r\n","import { ascensionMaxLevel } from \"../Data/CharacterData\"\r\nimport { allSlotKeys, allElements, allArtifactSets, allHitModes, allReactionModes, allCharacterKeys, CharacterKey } from \"../Types/consts\"\r\nimport { crawlObject } from \"../Util/Util\"\r\nimport { uintToString, stringToUInt } from \"./CodingUtil\"\r\n\r\n// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nconst stats = [\r\n  \"\", \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n  \"physical_dmg_\", \"anemo_dmg_\", \"cryo_dmg_\", \"dendro_dmg_\", \"electro_dmg_\", \"geo_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\",\r\n] as const\r\n\r\n// Common schemas\r\n\r\nconst uint = (length) => ({ type: \"uint\", length })\r\nconst float = {\r\n  type: \"string\",\r\n  encode: (value) => value.toString().replace(/\\./g, '_'),\r\n  decode: (string) => parseFloat(string.replace(/_/g, '.')),\r\n}\r\nconst string = { type: \"string\" }\r\nconst array = (defaultSchema, other = {}) => ({ type: \"array\", defaultSchema, ...other })\r\nconst object = (schemas, other = {}) => ({ type: \"object\", schemas, ...other })\r\nconst sparse = (keySchema, valueSchema, keys = null) => ({ type: \"sparse\", keys, keySchema, valueSchema })\r\n\r\n// Util schema\r\n\r\nconst optional = (list, defaultValue: any = undefined, length = 1) => ({\r\n  type: \"uint\", length,\r\n  encode: item => list.indexOf(item) + 1,\r\n  decode: index => list[index - 1] ?? defaultValue,\r\n})\r\nconst fixed = (list, length = 1) => ({\r\n  type: \"uint\", length,\r\n  encode: (item) => list.indexOf(item),\r\n  decode: (index) => list[index],\r\n})\r\nconst stat = fixed(stats)\r\nconst artifactSet = fixed(allArtifactSets)\r\nconst slot = fixed(allSlotKeys)\r\nconst characterKey = fixed(allCharacterKeys)\r\nconst hitMode = fixed(allHitModes)\r\nconst reactionMode = fixed([null, ...allReactionModes])\r\nconst element = optional(allElements, '')\r\n\r\n// Complex schema\r\n\r\nconst substat = object({\r\n  key: stat,\r\n  value: uint(2),\r\n}, {\r\n  encode: ({ key, value }) => {\r\n    let factor = key.endsWith(\"_\") ? 10 : 1 // one decimal place for percentage\r\n    return { key, value: value * factor }\r\n  },\r\n  decode: ({ key, value }) => {\r\n    let factor = key.endsWith(\"_\") ? 10 : 1 // one decomal place for percentage\r\n    return { key, value: value / factor }\r\n  }\r\n})\r\nconst conditionalValues = array(object({\r\n  path: array(string), value: array(string)\r\n}), {\r\n  encode: (conditionalValues) => {\r\n    let result: { path, value }[] = []\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (value, path) => {\r\n      result.push({ path, value: value.map(item => item.toString()) })\r\n    })\r\n    result.filter(({ path }) => {\r\n      switch (path[0]) {\r\n        case \"character\":\r\n          path[0] = \"c\"\r\n          path[1] = uintToString(allCharacterKeys.indexOf(path[1]))\r\n          break\r\n        case \"weapon\":\r\n          path[0] = \"w\"\r\n          break\r\n        case \"artifact\":\r\n          path[0] = \"a\"\r\n          path[1] = uintToString(allArtifactSets.indexOf(path[1]))\r\n          break\r\n        default: return false\r\n      }\r\n      return true\r\n    })\r\n    return result\r\n  },\r\n  decode: (pathvalues) => {\r\n    const conditionalValues = { weapon: {}, artifact: {}, character: {} }\r\n    for (const { path, value } of pathvalues) {\r\n      switch (path[0]) {\r\n        case \"c\":\r\n          path[0] = \"character\"\r\n          path[1] = allCharacterKeys[stringToUInt(path[1])]\r\n          break\r\n        case \"w\":\r\n          path[0] = \"weapon\"\r\n          break\r\n        case \"a\":\r\n          path[0] = \"artifact\"\r\n          path[1] = allArtifactSets[stringToUInt(path[1])]\r\n          break\r\n        default:\r\n          continue\r\n      }\r\n      const last = path.pop()\r\n      let current = conditionalValues\r\n      for (const key of path) {\r\n        const next = current[key] ?? {}\r\n        current[key] = next\r\n        current = next\r\n      }\r\n      value[0] = parseFloat(value[0])\r\n      current[last] = value\r\n    }\r\n    return conditionalValues\r\n  }\r\n})\r\n\r\n// V2\r\n\r\nconst artifactV2 = object({\r\n  setKey: artifactSet,\r\n  numStars: uint(1),\r\n  level: uint(2),\r\n  mainStatKey: stat,\r\n  slotKey: slot,\r\n  substats: array(substat)\r\n}, {\r\n  decode: art => {\r\n    art.id = \"\"\r\n    art.lock = false\r\n    return art\r\n  }\r\n})\r\nconst weaponV2 = object({\r\n  key: string,\r\n  levelKey: string,\r\n  refineIndex: uint(1),\r\n  overrideMainVal: float,\r\n  overrideSubVal: float,\r\n}, {\r\n  decode: object => {\r\n    const levelKey = object.levelKey\r\n    delete object.levelKey\r\n    delete object.overrideMainVal\r\n    delete object.overrideSubVal\r\n    const [, lvla] = levelKey.split(\"L\")\r\n    const level = parseInt(lvla)\r\n    const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n    const addAsc = lvla.includes(\"A\")\r\n    if (level < 0 || level > 90 || ascension < 0) {\r\n      object.level = 1\r\n      object.ascension = 0\r\n    } else {\r\n      object.level = level\r\n      object.ascension = ascension + (addAsc ? 1 : 0)\r\n    }\r\n    return object\r\n  }\r\n})\r\nconst characterV2 = object({\r\n  characterKey,\r\n  hitMode,\r\n  reactionMode,\r\n  constellation: uint(1),\r\n  overrideLevel: uint(2),\r\n  levelKey: string,\r\n  infusionAura: element,\r\n  talentLevelKeys: object({ auto: uint(1), skill: uint(1), burst: uint(1) }),\r\n  baseStatOverrides: sparse(string, float),\r\n  weapon: weaponV2,\r\n  conditionalValues,\r\n  reserved: array(uint(1)),\r\n}, {\r\n  decode: (value) => {\r\n    const isAscended = value.levelKey.slice(-1) === \"A\"\r\n    const levelString = isAscended ? value.levelKey.slice(1, -1) : value.levelKey.slice(1)\r\n    value.level = parseInt(levelString)\r\n    switch (value.level) {\r\n      case 1: value.ascension = 0; break\r\n      case 20: value.ascension = 0; break\r\n      case 40: value.ascension = 1; break\r\n      case 50: value.ascension = 2; break\r\n      case 60: value.ascension = 3; break\r\n      case 70: value.ascension = 4; break\r\n      case 80: value.ascension = 5; break\r\n      case 90: value.ascension = 6; break\r\n    }\r\n    if (isAscended) {\r\n      value.ascension += 1\r\n    }\r\n    if (value.baseStatOverrides.characterLevel) {\r\n      value.level = value.baseStatOverrides.characterLevel\r\n      delete value.baseStatOverrides.characterLevel\r\n    }\r\n    if (value.baseStatOverrides.weaponLevel) {\r\n      value.weapon.level = value.baseStatOverrides.weaponLevel\r\n      delete value.baseStatOverrides.weaponLevel\r\n    }\r\n    if (value.overrideLevel) {\r\n      value.level = value.overrideLevel\r\n    }\r\n    delete value.overrideLevel\r\n    delete value.levelKey\r\n\r\n    if (value.characterKey === \"Traveler\") {\r\n      value.elementKey = allElements[value.reserved[0] - 1] ?? \"anemo\"\r\n    }\r\n    delete value.reserved\r\n    return value\r\n  },\r\n})\r\n\r\nconst flexV2 = object({\r\n  artifacts: array(artifactV2),\r\n  character: characterV2,\r\n})\r\n\r\n// V3\r\n\r\nconst artifactV3 = object({\r\n  setKey: artifactSet,\r\n  // numStars\r\n  level: uint(2),\r\n  // slotKey\r\n  mainStatKey: stat,\r\n  substats: array(substat),\r\n  location: optional(allCharacterKeys),\r\n\r\n  // Mixed\r\n  raritySlotKey: uint(1),\r\n}, {\r\n  encode: value => {\r\n    value.raritySlotKey = allSlotKeys.indexOf(value.slotKey) * 8 + value.rarity\r\n    return value\r\n  },\r\n  decode: value => {\r\n    value.rarity = value.raritySlotKey % 8\r\n    value.slotKey = allSlotKeys[(value.raritySlotKey - value.rarity) / 8]\r\n    return value\r\n  }\r\n})\r\nconst weaponV3 = object({\r\n  key: string,\r\n  // level, ascension, refine\r\n  location: optional(allCharacterKeys),\r\n\r\n  // Mixed\r\n  ascensionRefine: uint(1),\r\n  levelDiff: uint(1),\r\n}, {\r\n  encode: object => {\r\n    object.ascensionRefine = object.ascension * 8 + object.refine\r\n    object.levelDiff = ascensionMaxLevel[object.ascension] - object.level\r\n    return object\r\n  },\r\n  decode: object => {\r\n    object.refine = object.ascensionRefine % 8\r\n    object.ascension = (object.ascensionRefine - object.refine) / 8\r\n    object.level = ascensionMaxLevel[object.ascension] - object.levelDiff\r\n    return object\r\n  }\r\n})\r\nconst characterV3 = object({\r\n  key: characterKey,\r\n  // level, ascension\r\n  hitMode,\r\n  // elementKey\r\n  reactionMode,\r\n  conditionalValues,\r\n  baseStatOverrides: sparse(string, float),\r\n  talent: object({ auto: uint(1), skill: uint(1), burst: uint(1) }),\r\n  infusionAura: element,\r\n  // constellation\r\n\r\n  // Mixed\r\n  levelDiff: uint(1),\r\n  ascensionConstellation: uint(1),\r\n  reserved: array(uint(1)),\r\n}, {\r\n  encode: (value) => {\r\n    value.levelDiff = ascensionMaxLevel[value.ascension] - value.level\r\n    value.ascensionConstellation = value.ascension * 8 + value.constellation\r\n\r\n    if ((value.characterKey as CharacterKey) !== \"Traveler\") value.reserved = []\r\n    else value.reserved = [allElements.indexOf(value.elementKey)]\r\n\r\n    return value\r\n  },\r\n  decode: (value) => {\r\n    value.constellation = value.ascensionConstellation % 8\r\n    value.ascension = (value.ascensionConstellation - value.constellation) / 8\r\n    value.level = ascensionMaxLevel[value.ascension] - value.levelDiff\r\n\r\n    if ((value.characterKey as CharacterKey) === \"Traveler\")\r\n      value.elementKey = allElements[value.reserved[0]] ?? \"anemo\"\r\n    return value\r\n  },\r\n})\r\n\r\nconst flexV3 = object({\r\n  characters: array(characterV3),\r\n  artifacts: array(artifactV3),\r\n  weapons: array(weaponV3),\r\n})\r\n\r\nexport const schemas = {\r\n  flexV2, flexV3\r\n}\r\n// For testing purpose only, no need to maintain strict ordering\r\nexport const constants = {\r\n  reactionModes: [null, ...allReactionModes], stats\r\n}\r\n","import { ArtCharDatabase } from \"../Database/Database\";\r\nimport { SandboxStorage } from \"../Database/DBStorage\";\r\nimport { IArtifact } from \"../Types/artifact\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { decode, encode } from \"./CodingUtil\";\r\nimport { schemas } from \"./Schemas\";\r\n\r\nexport function createFlexObj(characterKey: CharacterKey, database: ArtCharDatabase): string | null {\r\n  const character = database._getChar(characterKey)\r\n  if (!character) return null;\r\n\r\n  const weapon = database._getWeapon(character.equippedWeapon)!\r\n  const artifacts = Object.values(character.equippedArtifacts)\r\n    .filter(art => art)\r\n    .map(id => database._getArt(id)!)\r\n\r\n  try {\r\n    return \"v=3&d=\" + encode({ characters: [character], weapons: [weapon], artifacts }, schemas.flexV3)\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${(error as any).path?.reverse() ?? []}: ${error}`)\r\n    return null\r\n  }\r\n}\r\n\r\nexport function parseFlexObj(string: string): [ArtCharDatabase, CharacterKey, number] | undefined {\r\n  const parameters = Object.fromEntries(string.split('&').map(s => s.split('=')))\r\n\r\n  try {\r\n    switch (parseInt(parameters.v)) {\r\n      case 2: return [...parseFlexObjV2(parameters.d), 2]\r\n      case 3: return [...parseFlexObjV3(parameters.d), 3]\r\n      default: return\r\n    }\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${(error as any).path?.reverse() ?? []}: ${error}`)\r\n    return\r\n  }\r\n}\r\n\r\nfunction parseFlexObjV2(string: string): [ArtCharDatabase, CharacterKey] {\r\n  const schema = schemas.flexV2\r\n  const decoded = decode(string, schema) as { character: any, artifacts: IArtifact[] }\r\n  const { character, artifacts } = decoded, newCharacterKey = character.characterKey, characterKey = newCharacterKey.toLowerCase() as CharacterKey\r\n  character.characterKey = characterKey\r\n\r\n  const storage = new SandboxStorage()\r\n  // DON'T CHANGE THIS.\r\n  // Flex v2 (decoding) scheme won't be updated even when newer\r\n  // db versions come along. So the object created from the url\r\n  // will remain a valid dbv7. The actual migration happens\r\n  // together with the validation down below.\r\n  storage.setString(\"db_ver\", \"7\")\r\n\r\n  storage.set(`char_${characterKey}`, character)\r\n  artifacts.forEach((artifact, i) => {\r\n    artifact.location = characterKey\r\n    storage.set(`artifact_${i + 1}`, artifact)\r\n  })\r\n\r\n  const database = new ArtCharDatabase(storage) // Validate storage\r\n\r\n  if (!database._getChar(newCharacterKey))\r\n    throw new Error(`Invalid flex object`)\r\n  return [database, newCharacterKey]\r\n}\r\n\r\nfunction parseFlexObjV3(string: string): [ArtCharDatabase, CharacterKey] {\r\n  const schema = schemas.flexV3\r\n  const { characters, artifacts, weapons } = decode(string, schema) as { characters: { key: CharacterKey }[], artifacts: any[], weapons: any[] }\r\n  const charKey = characters[0].key\r\n\r\n  const storage = new SandboxStorage()\r\n  // DON'T CHANGE THIS.\r\n  // Flex v3 (decoding) scheme won't be updated even when newer\r\n  // db versions come along. So the object created from the url\r\n  // will remain a valid dbv8. The actual migration happens\r\n  // together with the validation down below.\r\n  storage.setString(\"db_ver\", \"8\")\r\n\r\n  characters.forEach(character => storage.set(`char_${character.key}`, character))\r\n  artifacts.forEach((artifact, i) => storage.set(`artifact_${i}`, artifact))\r\n  weapons.forEach((weapon, i) => storage.set(`weapon_${i}`, weapon))\r\n\r\n  const database = new ArtCharDatabase(storage) // Validate storage\r\n\r\n  if (!database._getChar(charKey as any))\r\n    throw new Error(`Invalid flex object`)\r\n  return [database, charKey]\r\n}\r\n","import { Alert, Button, Card, Container, Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport '../StatDependency'\r\nimport { createFlexObj, parseFlexObj } from \"./FlexUtil\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useContext, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function FlexDisplay() {\r\n  const location = useLocation()\r\n  const database = useContext(DatabaseContext)\r\n  const searchStr = location.search\r\n  if (searchStr) {\r\n    const flexResult = parseFlexObj(searchStr.substring(1))\r\n    if (!flexResult) return <Redirect to={`/`} />\r\n    const [database, charKey, version] = flexResult\r\n    if (version !== 3)\r\n      return <Redirect to={`/flex?${createFlexObj(charKey, database)}`} />\r\n    return <DatabaseContext.Provider value={database}><Display characterKey={charKey} /></DatabaseContext.Provider>\r\n  } else {\r\n    const characterKey = (location as any).characterKey\r\n    if (!characterKey) return <Redirect to={`/`} />\r\n    const flexObj = createFlexObj(characterKey, database)\r\n    if (!flexObj) return <Redirect to={`/`} />\r\n    window.scrollTo(0, 0)//sometimes the window isnt scrolled to the top on redirect.\r\n    return <Redirect to={`/flex?${flexObj}`} />\r\n  }\r\n}\r\nfunction Display({ characterKey }) {\r\n  const [toast, settoast] = useState(false)\r\n  const url = window.location.href\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(url).then(() => settoast(true)).catch(console.error)\r\n  }\r\n  const isUpToDate = false\r\n  return <Container className=\"my-2\">\r\n    <Toast onClose={() => settoast(false)} show={toast} delay={3000} autohide style={{\r\n      position: 'absolute',\r\n      top: 50,\r\n      right: 50,\r\n    }}>\r\n      <Toast.Header><b className=\"mr-auto\">Genshin Optimizer</b></Toast.Header>\r\n      <Toast.Body>URL copied to clipboard.</Toast.Body>\r\n    </Toast>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <InputGroup className=\"mb-0\">\r\n          <InputGroup.Prepend>\r\n            <Button onClick={copyToClipboard}>\r\n              <span><FontAwesomeIcon icon={faLink} /> Copy URL to clipboard</span>\r\n            </Button>\r\n          </InputGroup.Prepend>\r\n          <Form.Control readOnly value={window.location.href} onClick={e => e.target.select()} />\r\n        </InputGroup>\r\n        {isUpToDate && <Alert variant=\"warning\" className=\"py-2 mt-2 mb-0\">This URL is generated on an older database version of Genshin Optimizer. The character data below might not be displayed as intended.</Alert>}\r\n      </Card.Body>\r\n    </Card>\r\n    <CharacterDisplayCard characterKey={characterKey} />\r\n  </Container>\r\n}"],"sourceRoot":""}