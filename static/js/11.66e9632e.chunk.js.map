{"version":3,"sources":["Character/Character.js","Components/SlotIcon.js","Data/ArtifactLookupTable.js","Artifact/Artifact.js","Data/ElementalData.js","Util/FieldUtil.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Conditional/Conditional.js","Data/WeaponData.js","StatData.js","Weapon/Weapon.js","Character/CharacterDisplay/Components/FieldDisplay.jsx","Components/StarDisplay.js","Components/StatIcon.js","Components/CustomFormControl.js","Formula.js","Data/CharacterData.js","Conditional/ConditionalSelector.jsx","Character/CharacterDisplay/Components/ConditionalDisplay.jsx","StatDependency.js","Util/ReactUtil.js","Data/ArtifactData.js","StatConstants.js","Components/CharacterSelection.js","Components/StatDisplay.jsx","Character/StatInput.jsx","Artifact/ArtifactCard.jsx","Artifact/PercentBadge.tsx","Character/CharacterDisplay/CharacterArtifactPane.jsx","Character/CharacterDisplay/CharacterOverviewPane.jsx","Character/CharacterDisplay/CharacterTalentPane.jsx","Character/CharacterDisplayCard.jsx","Components/WIPComponent.js","Artifact/Component/SetEffectDisplay.jsx","Character/CharacterDisplay/StatDisplayComponent.jsx","Character/CharacterDisplay/DamageOptionsAndCalculation.jsx","Character/CharacterCard.jsx","Util/TimeUtil.js","../node_modules/react-bootstrap/esm/ProgressBar.js","Build/BuildWorker.js","Build/BuildDisplay.jsx","Stat.js","Build/Build.js"],"names":["Character","this","Error","characterKey","talentKey","formula","formulaDB","getCDataObj","formulaKey","tk","Object","entries","find","character","CharacterDatabase","get","equippedArtifacts","values","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getCharacterDataImport","CharacterDataImport","getBaseStatValue","statKey","defVal","levelKey","getSpecializedStatKey","getSpeicalizedStatVal","Weapon","getWeaponMainStatValWithOverride","weapon","getLevel","includes","characterStatBase","characterObj","baseStat","getIndexFromlevelkey","charKey","CharacterData","getElementalName","elementalKey","ElementalData","name","getAllCharacterKeys","keys","getName","getStar","star","getElementalKey","elementKey","getElementalKeys","getElementalKeysWithoutPhysical","filter","e","getWeaponTypeKey","weaponTypeKey","getConstellationName","constellationName","getTitles","titles","getlevelKeys","LevelsData","getlevelTemplateName","getLevelString","levelOverride","getStatValueWithOverride","indexOf","level","getAscension","asend","getSpecializedStat","specializeStat","key","value","getThumb","thumbImg","getCard","cardImg","getTalentImg","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","constellation","talents","i","talentBoost","boostEntry","getTalentDocument","document","getTalentDocumentSections","stats","map","section","getTalentField","sectionIndex","fieldIndex","field","fields","getTalentFieldValue","getTalentStats","talentStats","getTalentStatsAll","statsArr","push","isAutoElemental","isMelee","hasTalentPage","Boolean","length","getDisplayStatKeys","basicKeys","eleKey","transReactions","deepClone","ElementToReactionKeys","Formula","formulas","charFormulas","canShow","genericAvgHit","reactions","startsWith","replace","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","Artifact","getSlotKeys","slotKey","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifact","fromEntries","sKey","update","calculateBuild","artifacts","mainStatAssumptionLevel","art","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","artifactSetEffectsStats","getArtifactSetEffectsStats","mainStatKey","getMainStatValue","numStars","Math","max","min","substats","substat","stat","statVal","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","condStats","resolve","val","dependencies","GetDependencies","modifiers","PreprocessFormulas","mergeStats","modifier","mkey","multiplier","undefined","hitMode","infusionAura","reactionMode","talentLevelKeys","ascension","statKeys","characterEle","weaponType","tlvl","overrides","hasOwnProperty","specializedStatVal","specialStatKey","s","weaponSubKey","getWeaponSubStatKey","getWeaponSubStatValWithOverride","getWeaponBonusStat","weaponCond","otherCond","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactSubstatLookupTable","hp","3","4","5","eleMas","atk","def","def_","critRate_","atk_","critDMG_","hp_","enerRech_","state","errors","getArtifactEfficiency","currentEfficiency","maximumEfficiency","allSubstatRolls","total","index","substatRolls","getSubstatRolls","Set","roll","size","rolls","efficiency","getSubstatEfficiency","Stat","getStatNameWithPercent","some","minimum","getBaseSubRollNumLow","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","reduce","accu","current","totalPossbleRolls","totalCurrentEfficiency","sum","cur","maxPerRoll","ArtifactSubstatsMinMax","getSubstatAllMax","clampPercent","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getDataImport","ArtifactDataImport","getSetKeys","ArtifactData","getSetName","getSetsByMaxStarEntries","setobj","rarity","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","getSetEffects","setNumKeys","getSetEffectText","setEffectText","text","getSetEffectConditionals","setEffect","conditionals","default","ArtifactSlotsData","getSlotName","getSlotIcon","icon","className","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","ArtifactStarsData","getRarityArr","getMainStatKeys","ArtifactMainSlotKeys","getMainStatValues","numStar","ArtifactMainStatsData","main","subsBaselow","getBaseSubRollNumHigh","subBaseHigh","getNumUpgradesOrUnlocks","numUpgradesOrUnlocks","getSubStatKeys","ArtifactSubStatsData","subStatCloseEnough","value1","value2","getStatUnit","closeEnoughFloat","closeEnoughInt","ceil","numberOfSubstatUnlocked","getSubstatRollData","subStatKey","subStatValue","rollData","table","lookupValue","toFixed","a","b","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffectObj","physical","anemo","geo","electro","hydro","pyro","cryo","modifiersToFields","mStatKey","getStatName","variant","getStatVariant","formulaText","printStat","fixed","fixedUnit","unit","statsToFields","statVals","StatIconEle","flat","fieldProcessing","Assets","elements","dendro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","processed","Promise","charImport","res","then","addConditional","artImport","setNumObj","c","weaponImport","WeaponDataImport","WeaponData","all","source","findConditionals","obj","callback","condKey","states","maxStack","layeredAssignment","objPathValue","trigger","stacks","stateKey","conditionalStats","objMultiplication","crawlObject","Array","isArray","imp","WeaponLevelKeys","LevelNameData","WeaponTypeData","StatData","characterHP","pretty","const","characterDEF","characterATK","characterLevel","weaponATK","baseATK","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","infusionSelf","Formulas","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","dependencyKeys","debug","constData","formulaList","tmp","constModifier","k","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","func","console","log","error","assign","hitMoves","move","moveName","clamp","hitElements","ele","eleName","opt","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","getWeaponDataImport","getLevelName","getLevelIndex","getWeaponName","weaponKey","getWeaponRarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","charFinalStats","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","getWeaponTypeName","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","FieldDisplay","equippedBuild","newBuild","compareAgainstEquipped","useContext","compareAgainstEquippedContext","useMemo","fixedVal","fieldVal","retVal","fieldEquippedVal","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","faQuestionCircle","style","cursor","Item","StarIcon","faStar","Stars","stars","colored","_","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","CustomFormControl","onChange","disabled","float","placeholder","allowEmpty","useState","setstate","stateDirty","setstateDirty","sendChange","useCallback","parseFunc","parseFloat","useEffect","aria-label","target","onBlur","onKeyDown","CharacterFormulaImport","src","f","CharacterSpecializedStatKey","ConditionalSelector","setConditional","conditionalNum","conditionalStateKey","badge","Badge","Dropdown","Toggle","whiteSpace","Menu","onClick","condial","Fragment","v","stack","Button","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","editable","fieldClassName","conditionalFields","displayFields","condV","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","GetFormulaDependency","dependency","Proxy","prop","receiver","add","formulaKeyDependency","freeze","InsertDependencies","has","useForceUpdate","1","physical_dmg_","ele_dmg_","2","getArrLastElement","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","DisplayStatDiff","label","oldVal","oldText","diffText","xs","StatDisplay","build","invalid","labelVariant","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Prepend","Text","Append","pointerEvents","faUndo","ArtifactCard","artifactObj","onEdit","onDelete","forceUpdateHook","registerArtListener","unregisterArtListener","equipOnChar","equipArtifactOnChar","substatsValidation","lock","mainStatLevel","mainStatVal","artifactValid","every","sstat","border","md","thumbnail","Body","Title","numRolls","effOpacity","statName","opacity","valid","Footer","Divider","ckey","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","badgeColor","artLayoutSize","lg","CharacterArtifactPane","history","useHistory","edit","pathname","artToEditId","equipArts","window","confirm","unequipArts","StatDisplayComponent","statsDisplayKeys","Alert","Row","Col","setNumKeyArr","SetEffectDisplay","CharacterOverviewPane","editLevel","setEditLevel","Img","Image","InputGroup","OverlayTrigger","Tooltip","faSave","roundedCircle","WeaponStatsEditorCard","MainStatsCards","WeaponStatsCard","title","statsVals","editing","SetEditing","showDescription","setShowDescription","setStateWeapon","talentConditionals","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","faQuoteLeft","DropdownButton","reverse","arr","ItemText","refineIndex","faGavel","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","miscStatkeys","specializedStatKey","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","as","getStatNameRaw","xl","CharacterTalentPane","props","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","charEleKey","eleInterArr","Ele","talentLimits","header","talentLvlKey","talentLvlKeyRaw","levelBoost","newTalentLevelKey","statsEle","Subtitle","talentText","createContext","CustomMenu","React","forwardRef","ref","children","labeledBy","minWidth","aria-labelledby","Children","toArray","child","initialCharacter","artifactConditionals","auto","characterReducer","action","CharacterDisplayCard","propCharacterKey","propCharacter","propSetCharacterKey","setCharacterKey","footer","propNewBuild","onClose","tabName","useReducer","setcompareAgainstEquipped","firstUpdate","useRef","updateState","forceUpdate","char","newCKey","flexArts","HeaderIconDisplay","commonPaneProps","DamageOptionsAndCalculationEle","DamageOptionsAndCalculation","ButtonGroup","DropdownToggle","lvlKey","faTimes","Provider","Tab","Container","defaultActiveKey","mountOnEnter","unmountOnExit","Nav","fill","Link","eventKey","WIPComponent","Content","Pane","setStats","setStatsFields","cardbg","sectionValues","JSON","stringify","infusionVals","InfusionAuraDropdown","ReactionToggle","HitModeToggle","CalculationDisplay","subFormulaKeys","getPrintableFormulaStatKeyList","Collapse","subKey","printFormula","talentField","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","currentEventKey","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","href","rel","immunityStatKey","elementImmunity","CharacterCard","cardClassName","registerCharListener","unregisterCharListener","weaponName","weaponMainVal","weaponSubVal","weaponLevelName","artifactSetName","highestNum","to","msToUnits","ms","milliseconds","seconds","minutes","hours","timeString","timeText","strPadLeft","timeStringMs","getPercentage","now","percentage","round","renderProgressBar","_ref","_classNames","srOnly","striped","animated","bsPrefix","_objectWithoutPropertiesLoose","createElement","_extends","role","classNames","width","ProgressBar","_ref2","isChild","useBootstrapPrefix","wrapperProps","cloneElement","displayName","defaultProps","Worker_fn","Worker","lazy","warningBuildNumber","maxBuildsToShowList","artifactsSlotsToSelectMainStats","buildSettingsReducer","mainStatKeys","num","setFilters","optimizationTarget","BuildDisplay","setcharacterKey","statFilters","useLockedArts","useEquippedArts","ascending","buildSettings","buildSettingsDispatch","builds","setbuilds","maxBuildsToShow","setmaxBuildsToShow","modalBuild","setmodalBuild","showArtCondModal","setshowArtCondModal","showCharacterModal","setshowCharacterModal","generatingBuilds","setgeneratingBuilds","generationProgress","setgenerationProgress","generationDuration","setgenerationDuration","generationSkipped","setgenerationSkipped","charDirty","setcharDirty","setCharDirty","prevCharKey","isMounted","worker","ReactGA","pageview","terminate","selectCharacter","cKey","localStorage","loadFromLocalStorage","saveToLocalStorage","artifactDatabase","getArtifactDatabase","split","totBuildNumber","calculateTotalBuildNumber","generateBuilds","turbo","artifactSetEffects","splitArtifacts","minFilters","maxFilters","data","onmessage","progress","timing","skipped","category","variable","postMessage","dropdownitemsForStar","setsNumArr","artsAccountedOther","ind","characterDropDown","CharacterSelection","sortByText","characterName","artsAccounted","artifactCondCount","count","hasMinFilters","hasMaxFilters","disabledTurbo","BuildModal","ArtConditionalModal","HitModeCard","StatFilterCard","setStatFilters","sFs","setNum","setNkey","AssumeFullLevelToggle","setmainStatAssumptionLevel","BuildAlert","drop","align","faSortAmountDownAlt","faSortAmountUp","ArtifactDisplayItem","closeModal","Modal","show","onHide","contentClassName","Suspense","fallback","closeArtCondModal","artSetKeyList","StatFilterItem","close","setFilter","isFloat","inputProps","minInputProps","maxInputProps","faTrash","setHitmode","setReactionMode","setInfusionAura","remainingKeys","slotarr1","slotarr","totalBuildNumberString","toLocaleString","totalUnskipped","generationProgressString","generationSkippedString","totalUnskippedString","generationSkippedText","progPercent","levels","0","8","12","16","20","htmlStatsData","expand","statList","FormulaText","modifierText","options","statUnit","o","artifactsBySlot","setKeys","filteredArtifactsBySlot","slotKeys","artifactsBySet","setCount","result","slotPerm","artifactSetPermutations","getTalentStatKey","skillKey","useCharElement","getTalentStatKeyVariant"],"mappings":"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AG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhDE,IAAK,CACDJ,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDG,IAAK,CACDL,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDI,KAAM,CACFN,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,KAC/KC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3sBC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EA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AG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EA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","file":"static/js/11.66e9632e.chunk.js","sourcesContent":["import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport Formula from \"../Formula\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelTemplateName = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getLevelString = (character) => {\r\n    const levelOverride = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n    return Character.getLevel(character.levelKey) === levelOverride ? Character.getlevelTemplateName(character.levelKey) : `Lvl. ${levelOverride}`\r\n  }\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentDocumentSections = (stats, talentKey) =>\r\n    this.getTalentDocument(stats.characterKey, talentKey).map(section => typeof section === \"function\" ? section(stats) : section)\r\n\r\n  static getTalentField = (stats, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\r\n    if (!stats) return defVal\r\n    const field = this.getTalentDocumentSections(stats, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\r\n    if (!field) return defVal\r\n    return typeof field === \"function\" ? field(stats) : field\r\n  }\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return typeof field?.[key] === \"function\" ? field[key](stats) : field[key]\r\n  }\r\n\r\n  static getTalentStats = (charKey, talentKey, stats, defVal = null) => {\r\n    const talentStats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof talentStats === \"function\")\r\n      return talentStats(stats)\r\n    return talentStats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, stats) => {\r\n    const talents = this.getCDataObj(charKey)?.talent || {}\r\n    const statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(charKey, talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isMelee = (charKey, defVal = false) => {\r\n    const weaponTypeKey = this.getWeaponTypeKey(charKey)\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\" || defVal\r\n  }\r\n\r\n  //look up the formula, and generate the formulaPath to send to worker.\r\n  static getFormulaPath(characterKey, talentKey, formula) {\r\n    const formulaDB = this.getCDataObj(characterKey)?.formula\r\n    if (!formulaDB) return\r\n    let formulaKey\r\n    if (talentKey === \"auto\") {\r\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\r\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\r\n        if (formulaKey) {\r\n          talentKey = tk\r\n          break;\r\n        }\r\n      }\r\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\r\n    if (!formulaKey) return\r\n    return { characterKey, talentKey, formulaKey }\r\n  }\r\n\r\n  static hasTalentPage = (characterKey) => Boolean(Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).length)//TODO: remove when all chararacter sheets are complete\r\n\r\n  static getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats || !Object.keys(stats).length) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = Character.isAutoElemental(characterKey)\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (Formula.formulas.character?.[characterKey]) {\r\n      const charFormulas = {}\r\n      Object.entries(Formula.formulas.character[characterKey]).forEach(([talentKey, formulas]) => {\r\n        Object.values(formulas).forEach(formula => {\r\n          if (!formula.field.canShow(stats)) return\r\n          if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n          if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n          charFormulas[talentKey].push(formula.keys)\r\n        })\r\n      })\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {//TODO: doesnt have character sheet\r\n      //generic average hit parameters.\r\n      const genericAvgHit = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical \r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst \r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    const artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      const artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar?.location === characterKey) return; //it is already equipped\r\n      const artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      const notCharLoc = (artNotOnChar?.location ?? \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = Object.fromEntries(Artifact.getSlotKeys().map(sKey => [sKey, \"\"]))\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character, mainStatAssumptionLevel = 0) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.createInitialStats(character)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return this.calculateBuildwithArtifact(initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats, artifacts) => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(stats.mainStatAssumptionLevel, art.numStars * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return stats\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n\r\n  static createInitialStats = (character) => {\r\n    if (!character) return {}\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, infusionAura, reactionMode, talentLevelKeys, constellation, equippedArtifacts, conditionalValues = {}, weapon = { key: \"\" } } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    initialStats.characterEle = this.getElementalKey(characterKey);\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = weapon\r\n    initialStats.equippedArtifacts = equippedArtifacts\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, initialStats).forEach(s => this.mergeStats(initialStats, s))\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, initialStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      this.mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats\r\n  }\r\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export const ArtifactSubstatLookupTable = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport Conditional from '../Conditional/Conditional';\r\nimport { ArtifactData, ArtifactDataImport, ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, stats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(stats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditionals = (setKey, setNumKey, defVal = null) => {\r\n    const setEffect = this.getSetEffectsObj(setKey)?.[setNumKey]\r\n    if (setEffect?.conditional || setEffect?.conditionals) {\r\n      return {\r\n        ...setEffect?.conditional && { default: setEffect?.conditional },\r\n        ...setEffect?.conditionals && setEffect?.conditionals\r\n      }\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\r\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return []\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return []\r\n\r\n    let table = ArtifactSubstatLookupTable[subStatKey][numStars]\r\n    let lookupValue = subStatValue.toFixed(1)\r\n\r\n    if (table[lookupValue])\r\n      return table[lookupValue].map(roll => roll.map(i => rollData[i]))\r\n    else return [] // Lookup fails\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls) => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = this.getSubstatAllMax(subStatKey) * rolls.length\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    const { numStars, level, substats } = state, errors = []\r\n\r\n    const { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n\r\n    const allSubstatRolls = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = Artifact.getSubstatRolls(key, value, numStars)\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => substat.rolls.length > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const minimum = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls, maxRolls, total) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(substats[index].key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + current.rolls.length, 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  static getAllArtifactSetEffectsObj = stats => {\r\n    let ArtifactSetEffectsObj = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n      ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.unequipArtifactOnSlot(location, slotKey)\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey] * multiplier, 0),\r\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}) {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { ArtifactData, ArtifactDataImport } from \"../Data/ArtifactData\"\r\nimport { CharacterDataImport, CharacterData } from \"../Data/CharacterData\"\r\nimport { WeaponData, WeaponDataImport } from \"../Data/WeaponData\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\"\r\n\r\nconst processed = new Promise(resolve => {\r\n  //attach character conditionals to Conditional\r\n  const charImport = new Promise(res =>\r\n    Promise.resolve(CharacterDataImport).then(() => {\r\n      addConditional(CharacterData, \"character\")\r\n      res()\r\n    }))\r\n\r\n  const artImport = new Promise(res =>\r\n    Promise.resolve(ArtifactDataImport).then(() => {\r\n      addConditional(ArtifactData, \"artifact\")\r\n      //attach metadata prop setNumKey to the conditional\r\n      Object.values(ArtifactData).forEach(setObj =>\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n          if (setNumObj.conditional) setNumObj.conditional.setNumKey = setNumKey\r\n          if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach(c => c.setNumKey = setNumKey)\r\n        }))\r\n      res()\r\n    }))\r\n\r\n  const weaponImport = new Promise(res =>\r\n    Promise.resolve(WeaponDataImport).then(() => {\r\n      addConditional(WeaponData, \"weapon\")\r\n      res()\r\n    }))\r\n\r\n  Promise.all([charImport, artImport, weaponImport]).then(resolve)\r\n})\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    if (!conditionalValue) conditionalValue = conditional.trigger?.(stats)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(this.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = this.get(keys, null)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach(state => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20/40\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40/50\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50/60\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60/70\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70/80\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80/90\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nconst StatData = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" }\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\r\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, charFinalStats, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(charFinalStats) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, stats, defVal = {}) => WeaponData[weaponKey]?.stats?.(stats) ?? WeaponData[weaponKey]?.stats ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Character from \"../../Character\";\r\nimport { compareAgainstEquippedContext } from \"../../CharacterDisplayCard\";\r\n\r\nexport default function FieldDisplay({ field, index, equippedBuild, newBuild, className = \"p-2\" }) {\r\n  const compareAgainstEquipped = useContext(compareAgainstEquippedContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => field.canShow(stats), [field, stats])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", stats)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", stats)?.[0]?.(stats)\r\n      //compareAgainstEquipped\r\n      if (compareAgainstEquipped && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareAgainstEquipped, fixedVal, equippedBuild, field, stats])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", stats), [field, stats])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", stats), [field, stats])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", stats)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, stats])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", stats), [field, stats])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import { crawlObject, objPathValue } from './Util/Util';\r\nexport let CharacterFormulaImport = import('./Data/Characters/formula')\r\nCharacterFormulaImport.then(imp => {\r\n  addFormula(imp.default, \"character\")\r\n  CharacterFormulaImport = null\r\n})\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas = {}\r\n  static get = (keys, defVal = null) => objPathValue(this.formulas, keys) ?? defVal\r\n}\r\n\r\nfunction addFormula(src, key) {\r\n  Formula.formulas[key] = src\r\n  crawlObject(src, [key], f => typeof f === \"function\", (formula, keys) => {\r\n    formula.keys = keys\r\n  })\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20/40\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40/50\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50/60\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60/70\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70/80\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80/90\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled }) {\r\n  const [conditionalNum=0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name\r\n  if (conditional.states) {//complex conditional \r\n    const state = conditional.states[conditionalStateKey] ?? {}\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(state.maxStack > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial], i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {//single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n    </Button>\r\n  }\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport Conditional from \"../../../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../../../Conditional/ConditionalSelector\"\r\nimport statsToFields from \"../../../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../../../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\n\r\nexport default function ConditionalDisplay({ conditional, equippedBuild, newBuild, characterDispatch, editable, fieldClassName }) {\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else layeredAssignment(stats.conditionalValues, conditional.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [stats.conditionalValues, conditional.keys, characterDispatch])\r\n\r\n  if (!canShow) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector disabled={!editable}\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild, className: fieldClassName }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","import { useCallback, useState } from \"react\"\r\n\r\nexport function useForceUpdate() {\r\n  const [, update] = useState()\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return forceUpdateHook\r\n}","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [ \"pyro\" ] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [ \"physical\" ] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [ \"electro\" ] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [ \"cryo\" ] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [ \"pyro\", \"hydro\", \"electro\", \"cryo\" ] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [ 0,\r\n  17.2,  18.5,  19.9,  21.3,  22.6,  24.6,  26.6,  28.9,  31.4,  34.1,\r\n  37.2,  40.7,  44.4,  48.6,  53.7,  59.1,  64.4,  69.7,  75.1,  80.6,\r\n  86.1,  91.7,  97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n 142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n 215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n 336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n 509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n 742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n 968.6, 991.0,1013.5,1036.1,1066.6,1090.0,1115.0,1141.7,1171.9,1202.8,\r\n1202.8,1233.9,1264.7,1305.7,1346.1,1468.9,1524.0,1577.0,1627.6,1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [ 0,\r\n  91,  99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n 170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n 320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n 448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n 574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n 733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n 915, 936, 956, 982,1003,1017,1036,1057,1075,1096,\r\n1114,1135,1149,1170,1191,1205,1224,1243,1260,1277,\r\n1293,1308,1317,1327,1336,1349,1366,1384,1403,1424,\r\n1450,1478,1507,1543,1570,1580,1589,1673,1682,1691,\r\n]","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\nexport default function StatDisplay({ character, equippedBuild, newBuild, editable, statKey }) {\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (statKey === \"finalHP\")\r\n          oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n        else if (statKey === \"finalDEF\")\r\n          oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n        else if (statKey === \"finalATK\")\r\n          oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n    } else {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const formula = Formula.get(statKey)\r\n      const field = formula.field\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, equippedBuild, newBuild, editable, statKey])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Character from '../Character/Character';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { useForceUpdate } from '../Util/ReactUtil';\r\nimport Artifact from './Artifact';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }) {\r\n  const forceUpdateHook = useForceUpdate()\r\n  useEffect(() => {\r\n    Artifact.getDataImport()?.then(forceUpdateHook)\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () =>\r\n      artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook)\r\n  }, [artifactId, forceUpdateHook])\r\n  const equipOnChar = useCallback(\r\n    (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey),\r\n    [artifactId],\r\n  )\r\n  if (!artifactId && !artifactObj) return null;\r\n  const editable = !artifactObj//dont allow edit for flex artifacts\r\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\r\n  if (!art) return null;\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n  const { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} className=\"float-right\" /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location, \"Inventory\")}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.update(art);\r\n                  }}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport Character from \"../Character\";\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\nconst artLayoutSize = { xs: 12, md: 6, lg: 4 }\r\nfunction CharacterArtifactPane({ character, character: { characterKey }, equippedBuild, newBuild, editable, characterDispatch, artifacts }) {\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => Character.getDisplayStatKeys(stats), [stats])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    }), [history])\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    Character.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, newBuild?.equippedArtifacts, characterDispatch])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    Character.equipArtifacts(characterKey, Object.fromEntries(Artifact.getSlotKeys().map(sKey => [sKey, \"\"])))\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, characterDispatch])\r\n  return <>\r\n    <Card className=\"h-100 mb-2\" bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Body>\r\n        <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, editable }} />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        {newBuild ? <Button onClick={equipArts}>Equip all artifacts to current character</Button> : (editable && <Button onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n        {Boolean(mainStatAssumptionLevel) && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert>}\r\n      </Card.Footer>\r\n    </Card>\r\n    <Row className=\"mb-n2\">\r\n      <Col {...artLayoutSize} className=\"d-flex flex-column\">\r\n        {Object.entries(Artifact.getSetEffects(stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n          <Card key={setKey} className=\"mb-2 flex-grow-1\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>{Artifact.getSetName(setKey)}</Card.Header>\r\n            <Card.Body className=\"p-2 mb-n2\">\r\n              {setNumKeyArr.map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      {artifacts ?\r\n        Artifact.getSlotKeys().map(slotKey => {//from flex\r\n          const art = artifacts.find(art => art.slotKey === slotKey)\r\n          return Boolean(art) && <Col {...artLayoutSize} key={slotKey} className=\"mb-2\">\r\n            <ArtifactCard artifactObj={art} />\r\n          </Col>\r\n        }) : Artifact.getSlotKeys().map(slotKey =>\r\n          Boolean(stats.equippedArtifacts[slotKey]) && <Col {...artLayoutSize} key={stats.equippedArtifacts[slotKey]} className=\"mb-2\">\r\n            <ArtifactCard artifactId={stats.equippedArtifacts[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats.equippedArtifacts[slotKey])} />\r\n          </Col>\r\n        )}\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport Conditional from \"../../Conditional/Conditional\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nimport ConditionalDisplay from \"./Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"./Components/FieldDisplay\"\r\nexport default function CharacterOverviewPane({ editable, character, character: { characterKey, constellation }, characterDispatch, equippedBuild, newBuild }) {\r\n  const [editLevel, setEditLevel] = useState(false)\r\n  const elementKey = Character.getElementalKey(characterKey)\r\n  const weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  const level = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl onChange={val => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: clamp(val, 1, 90) })} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: Character.getLevel(character.levelKey) })} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"success\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...{ editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n      <MainStatsCards {...{ editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n    </Col>\r\n  </Row >\r\n}\r\n\r\nfunction WeaponStatsCard({ title, statsVals = {}, stats = {} }) {\r\n  if (Object.keys(statsVals ?? {}).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild: stats, className: \"px-3 py-2\" }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}\r\n\r\nfunction WeaponStatsEditorCard({ editable, character, character: { characterKey, weapon = {} }, characterDispatch, equippedBuild, newBuild }) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => {\r\n    if (key === \"key\") {\r\n      if (value === weapon.key) return\r\n      else {\r\n        //reset the conditionalNum when we switch weapons\r\n        const { talentConditionals } = character\r\n        delete talentConditionals.weapon\r\n        characterDispatch({ talentConditionals })\r\n      }\r\n    }\r\n    character.weapon[key] = value\r\n    characterDispatch({ weapon: character.weapon })\r\n  }\r\n  const subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  const weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  const weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  const weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  const weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, build)\r\n  const conditionals = Conditional.conditionals.weapon[weapon.key]\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      <Row className=\"mb-n2\">\r\n        <Col xs={12} md={3} lg={4}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n            <p><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></p>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, build)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} stats={build} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            {Boolean(conditionals) && Object.entries(conditionals).map(([stateKey, conditional]) =>\r\n              <ConditionalDisplay key={stateKey} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} fieldClassName=\"py-2 px-3\" />)}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <small>{Weapon.getWeaponDescription(weapon.key)}</small>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards({ editable, character, characterDispatch, equippedBuild, newBuild }) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = []\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: key })} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\r\n                  onChange={value => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value })} />\r\n                <InputGroup.Append>\r\n                  {isPercentSpecialStatSelect && <InputGroup.Text>%</InputGroup.Text>}\r\n                  <Button onClick={() => {\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: Character.getBaseStatValue(character, \"specializedStatKey\") })\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value: Character.getBaseStatValue(character, \"specializedStatVal\") })\r\n                  }}\r\n                    disabled={!Character.hasOverride(character, \"specializedStatKey\") && !Character.hasOverride(character, \"specializedStatVal\")}\r\n                  >\r\n                    <FontAwesomeIcon icon={faUndo} />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from 'react';\r\nimport { Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport Character from \"../Character\";\r\nimport ConditionalDisplay from './Components/ConditionalDisplay';\r\nimport FieldDisplay from './Components/FieldDisplay';\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  const { character, character: { characterKey, levelKey, constellation }, editable, characterDispatch, newBuild, equippedBuild } = props\r\n  const ascension = Character.getAscension(levelKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col><ReactionDisplay {...{ character, newBuild, equippedBuild }} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey }, newBuild, equippedBuild }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard({ character: { characterKey, constellation, talentLevelKeys = {}, }, characterDispatch, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, onClickTitle }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n        talentLevelKeys[tKey] = newTalentLevelKey\r\n        characterDispatch({ talentLevelKeys })\r\n      }\r\n      header = <Card.Header>\r\n        <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" ? 1 : 0)).keys()].map(i =>\r\n            <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>{`Talent Level: ${talentLvlKey + 1}`}</Card.Header>\r\n    }\r\n  }\r\n  const talentStats = Character.getTalentStats(characterKey, talentKey, build)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {/* Display document sections */}\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (!section.canShow(build)) return null\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(build)\r\n        let fields = section.fields ?? []\r\n        return <div className=\"my-2\" key={\"section\" + i}>\r\n          <div xs={12}>\r\n            <div className=\"mb-2\">{talentText}</div>\r\n            {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n              {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n            </ListGroup>}\r\n          </div>\r\n          {Boolean(section.conditional) && <ConditionalDisplay {...{ conditional: section.conditional, equippedBuild, newBuild, characterDispatch, editable }} />}\r\n        </div>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { createContext, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { deepClone } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport DamageOptionsAndCalculation from './CharacterDisplay/DamageOptionsAndCalculation';\r\nimport { CharacterFormulaImport } from '../Formula';\r\n\r\nexport const compareAgainstEquippedContext = createContext()\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\nconst initialCharacter = (characterKey) => ({\r\n  characterKey: characterKey ?? \"\",//the game character this is based off\r\n  levelKey: \"L1\",//combination of level and ascension\r\n  hitMode: \"hit\",\r\n  reactionMode: null,\r\n  equippedArtifacts: {},\r\n  artifactConditionals: [],\r\n  conditionalValues: {},\r\n  baseStatOverrides: {},//overriding the baseStat\r\n  weapon: {\r\n    key: Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0] ?? \"\",\r\n    levelKey: WeaponLevelKeys[0],\r\n    refineIndex: 0,\r\n    overrideMainVal: 0,\r\n    overrideSubVal: 0,\r\n  },\r\n  talentLevelKeys: {\r\n    auto: 0,\r\n    skill: 0,\r\n    burst: 0,\r\n  },\r\n  infusionAura: \"\",\r\n  talentConditionals: [],\r\n  constellation: 0,\r\n})\r\n\r\nfunction characterReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"overwrite\":\r\n      return { ...state, ...action.character }\r\n    case \"fromDB\"://for equipping artifacts, that makes the changes in DB instead of in state.\r\n      return { ...state, ...CharacterDatabase.get(state.characterKey, {}) }\r\n    case \"statOverride\": {\r\n      const { statKey, value } = action\r\n      const baseStatOverrides = state.baseStatOverrides\r\n      const baseStatVal = Character.getBaseStatValue(state, statKey)\r\n      if (baseStatVal === value)\r\n        delete baseStatOverrides[statKey]\r\n      else\r\n        baseStatOverrides[statKey] = value\r\n      return { ...state, baseStatOverrides }\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\nexport default function CharacterDisplayCard({ characterKey: propCharacterKey, character: propCharacter, setCharacterKey: propSetCharacterKey, footer, newBuild: propNewBuild, editable, onClose, tabName }) {\r\n  const [character, characterDispatch] = useReducer(characterReducer, initialCharacter(propCharacterKey))\r\n  const [compareAgainstEquipped, setcompareAgainstEquipped] = useState(false)\r\n  const firstUpdate = useRef(true)\r\n  const [updateState, update] = useState({})\r\n  const forceUpdate = useCallback(() => update({}), [])\r\n  useEffect(() => {\r\n    if (!propCharacterKey) return\r\n    const char = { ...initialCharacter(propCharacterKey), ...CharacterDatabase.get(propCharacterKey, {}) }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacterKey])\r\n  useEffect(() => {\r\n    if (!propCharacter) return\r\n    const char = { ...initialCharacter(propCharacter.characterKey), ...propCharacter }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacter])\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n      CharacterFormulaImport\r\n    ]).then(forceUpdate)\r\n  }, [forceUpdate])\r\n\r\n  useEffect(() => {\r\n    //skip saving on the first update, since those updates are from loading from DB\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false\r\n      return\r\n    }\r\n    //save character to DB\r\n    editable && CharacterDatabase.update(character)\r\n  }, [character, editable])\r\n\r\n  const characterKey = propCharacter?.characterKey ?? character.characterKey\r\n\r\n  const setCharacterKey = useCallback(\r\n    newCKey => {\r\n      let state = initialCharacter(newCKey)\r\n      const char = CharacterDatabase.get(newCKey)\r\n      if (char) state = { ...state, ...char }\r\n      characterDispatch({ type: \"overwrite\", character: state })\r\n      if (newCKey !== characterKey)\r\n        propSetCharacterKey?.(newCKey)\r\n    }, [characterKey, characterDispatch, propSetCharacterKey])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return\r\n    const newBuild = propNewBuild && deepClone(propNewBuild)\r\n    newBuild.hitMode = character.hitMode;\r\n    newBuild.reactionMode = character.reactionMode;\r\n    return newBuild\r\n  }, [propNewBuild, character.hitMode, character.reactionMode])\r\n\r\n  const { levelKey, artifacts: flexArts } = character\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => updateState && Character.calculateBuild(character, mainStatAssumptionLevel), [character, updateState, mainStatAssumptionLevel])\r\n\r\n  const HeaderIconDisplay = characterKey ? <span >\r\n    <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  const commonPaneProps = { character, newBuild, equippedBuild: (!newBuild || compareAgainstEquipped) ? equippedBuild : undefined, editable, characterDispatch, compareAgainstEquipped }\r\n  if (flexArts) commonPaneProps.artifacts = flexArts//from flex\r\n  // main CharacterDisplayCard\r\n  const DamageOptionsAndCalculationEle = Character.hasTalentPage(characterKey) && <DamageOptionsAndCalculation {...{ character, characterDispatch, newBuild, equippedBuild }} className=\"mb-2\" />\r\n  return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs={\"auto\"} className=\"mr-auto\">\r\n          {/* character selecter/display */}\r\n          {editable ? <ButtonGroup>\r\n            <Dropdown as={ButtonGroup}>\r\n              <DropdownToggle as={Button}>\r\n                {HeaderIconDisplay}\r\n              </DropdownToggle>\r\n              <Dropdown.Menu as={CustomMenu}>\r\n                {Character.getAllCharacterKeys().map(charKey =>\r\n                  <Dropdown.Item key={charKey} onClick={() => setCharacterKey(charKey)}>\r\n                    <span >\r\n                      <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                      <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                    </span>\r\n                  </Dropdown.Item>)}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\r\n              <h6 className=\"d-inline\">Stats Template: {Character.getlevelTemplateName(levelKey)} </h6>\r\n            }>\r\n              <Dropdown.ItemText>\r\n                <span>Select Base Stat Template</span>\r\n              </Dropdown.ItemText>\r\n              {Character.getlevelKeys().map(lvlKey =>\r\n                <Dropdown.Item key={lvlKey} onClick={() => characterDispatch({ levelKey: lvlKey })}>\r\n                  <h6 >{Character.getlevelTemplateName(lvlKey)} </h6>\r\n                </Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </ButtonGroup> : <span>{HeaderIconDisplay} {Character.getLevelString(character)}</span>}\r\n        </Col>\r\n        {Boolean(mainStatAssumptionLevel) && <Col xs=\"auto\"><Alert className=\"mb-0 py-1 h-100\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert></Col>}\r\n        {/* Compare against new build toggle */}\r\n        {newBuild ? <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(false)}>\r\n              <small>Show New artifact Stats</small>\r\n            </Button>\r\n            <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(true)}>\r\n              <small>Compare against equipped artifact</small>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col> : null}\r\n        {Boolean(onClose) && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    {Boolean(characterKey) && <Card.Body>\r\n      <compareAgainstEquippedContext.Provider value={compareAgainstEquipped}>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 mx-0\" fill>\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\"><h5 className=\"mb-0\">Character</h5></Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\"><h5 className=\"mb-0\">New Artifacts</h5></Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\"><h5 className=\"mb-0\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</h5></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {(process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)) ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled><h5 className=\"mb-0\">Talents</h5> <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\"><h5 className=\"mb-0\">Talents</h5></Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterOverviewPane\r\n                {...commonPaneProps}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterTalentPane {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </compareAgainstEquippedContext.Provider>\r\n    </Card.Body>}\r\n    {footer && <Card.Footer>\r\n      {footer}\r\n    </Card.Footer>}\r\n  </Card>)\r\n}\r\n","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip>Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport ConditionalDisplay from \"../../Character/CharacterDisplay/Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"../../Character/CharacterDisplay/Components/FieldDisplay\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport Artifact from \"../Artifact\"\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, editable, characterDispatch }) {\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const setEffectText = Artifact.getSetEffectText(setKey, setNumKey, stats)\r\n  const setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const conditionals = Artifact.getSetEffectConditionals(setKey, setNumKey)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {Boolean(conditionals) && Object.entries(conditionals).map(([ckey, conditional]) => <ConditionalDisplay key={ckey} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n  </>\r\n}","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, sectionValues]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ character, equippedBuild, newBuild, editable, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No Infusion</span>,\r\n  \"pyro\": <span >Pyro Infusion</span>,\r\n  \"cryo\": <span >Cryo Infusion</span>,\r\n}\r\n\r\nexport function InfusionAuraDropdown({ character: { infusionAura = \"\", characterKey }, characterDispatch, className }) {\r\n  if (!Character.isMelee(characterKey)) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\nexport function ReactionToggle({ character: { characterKey, reactionMode = \"none\", infusionAura }, characterDispatch, className }) {\r\n  if (reactionMode === null) reactionMode = \"none\"\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ build }) {\r\n  const displayStatKeys = useMemo(() => Character.getDisplayStatKeys(build), [build])\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = Character.getTalentName(build.characterKey, talentKey, talentKey)\r\n      return <Card bg=\"darkcontent\" text=\"lightfont\" key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              //simple statKey field\r\n              if (typeof field === \"string\") {\r\n                const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              //fields\r\n              const talentField = Character.getTalentField(build, field.talentKey, field.sectionIndex, field.fieldIndex)\r\n              const fieldText = Character.getTalentFieldValue(talentField, \"text\", build)\r\n              const fieldVariant = Character.getTalentFieldValue(talentField, \"variant\", build)\r\n              const fieldFormulaText = Character.getTalentFieldValue(talentField, \"formulaText\", build)\r\n              const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(talentField, \"formula\", build, [])\r\n              if (!fieldFormula || !fieldFormulaDependency) return null\r\n              const fieldValue = fieldFormula?.(build)?.toFixed?.()\r\n              const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n              return <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                  <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                  <Card.Body className=\"p-2\">\r\n                    <div className=\"mb-n2\">\r\n                      <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n                      {subFormulaKeys.map(subKey =>\r\n                        <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { hitMode }, characterDispatch, newBuild, equippedBuild, className }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown character={character} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle character={character} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle as={Button} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text=\"lightfont\">\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value })}\r\n                    />\r\n                  </Col>\r\n                  {Character.getElementalKeys().map(eleKey => {\r\n                    let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useMemo } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { useForceUpdate } from '../Util/ReactUtil';\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer }) {\r\n  const forceUpdate = useForceUpdate()\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(forceUpdate)\r\n    characterKey && CharacterDatabase.registerCharListener(characterKey, forceUpdate)\r\n    return () =>\r\n      characterKey && CharacterDatabase.unregisterCharListener(characterKey, forceUpdate)\r\n  }, [characterKey, forceUpdate])\r\n  const character = CharacterDatabase.get(characterKey)\r\n  const stats = useMemo(() => character && Character.calculateBuild(character), [character])\r\n  if (!character) return null;\r\n\r\n  const { weapon = {}, constellation } = character\r\n  const name = Character.getName(characterKey)\r\n  const elementKey = Character.getElementalKey(characterKey)\r\n  const weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  const weaponName = Weapon.getWeaponName(weapon.key)\r\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  const weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  const weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  const weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {header ? header : <h5><b>{name}</b></h5>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(characterKey)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete(characterKey)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onEdit(characterKey)} className={onEdit ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`thumb-big grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h3 className=\"mb-0\">{Character.getLevelString(character)} {`C${constellation}`}</h3>\r\n          <h5 className=\"mb-0\"><Stars stars={Character.getStar(characterKey)} colored /></h5>\r\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(stats.setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = stats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { strPadLeft } from \"./Util\"\r\n\r\nexport function msToUnits(ms) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nexport function timeString(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms, \"hours\")\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nexport function timeStringMs(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms, \"hours\")\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BuildWorker.d5a065e8.worker.js\");\n}\n","import { faCheckSquare, faSortAmountDownAlt, faSortAmountUp, faSquare, faTimes, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, Image, InputGroup, ListGroup, Modal, OverlayTrigger, ProgressBar, Row, Tooltip } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BuildWorker.js\";\r\nimport Artifact from '../Artifact/Artifact';\r\nimport SetEffectDisplay from '../Artifact/Component/SetEffectDisplay';\r\nimport Character from '../Character/Character';\r\nimport CharacterCard from '../Character/CharacterCard';\r\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../Character/CharacterDisplay/DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from '../Character/CharacterDisplay/StatDisplayComponent';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport Formula, { CharacterFormulaImport } from '../Formula';\r\nimport Stat from '../Stat';\r\nimport { timeStringMs } from '../Util/TimeUtil';\r\nimport { crawlObject, deepClone, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport { calculateTotalBuildNumber } from './Build';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCard = lazy(() => import('../Character/CharacterDisplayCard'))\r\n\r\nconst warningBuildNumber = 10000000\r\nconst maxBuildsToShowList = [50, 25, 10, 5]\r\nconst maxBuildsToShowDefault = 25\r\nconst autoBuildGenLimit = 100\r\nconst artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"]\r\nconst initialBuildSettings = () => ({\r\n  setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n  statFilters: {},\r\n  mainStatKeys: [\"\", \"\", \"\"],\r\n  optimizationTarget: \"finalATK\",//TODO need to validate\r\n  mainStatAssumptionLevel: 0,\r\n  useLockedArts: false,\r\n  useEquippedArts: false,\r\n  ascending: false,\r\n})\r\n\r\nfunction buildSettingsReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'mainStatKey': {\r\n      const { index, mainStatKey } = action\r\n      state.mainStatKeys[index] = mainStatKey\r\n      return { ...state, mainStatKeys: [...state.mainStatKeys] }//do this because this is a dependency, so needs to be a \"new\" array\r\n    }\r\n    case `setFilter`: {\r\n      const { index, key, num = 0 } = action\r\n      state.setFilters[index] = { key, num }\r\n      return { ...state, setFilters: [...state.setFilters] }//do this because this is a dependency, so needs to be a \"new\" array\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  if (Array.isArray(action.optimizationTarget) && !Formula.get(action.optimizationTarget))\r\n    action.optimizationTarget = \"finalATK\"\r\n\r\n  return { ...state, ...action }\r\n}\r\n\r\nexport default function BuildDisplay({ location: { characterKey: propCharacterKey } }) {\r\n  const [characterKey, setcharacterKey] = useState(\"\")\r\n  const [buildSettings, buildSettingsDispatch] = useReducer(buildSettingsReducer, initialBuildSettings())\r\n  const { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending, } = buildSettings\r\n\r\n  const [builds, setbuilds] = useState([])\r\n  const [maxBuildsToShow, setmaxBuildsToShow] = useState(maxBuildsToShowDefault)\r\n\r\n  const [modalBuild, setmodalBuild] = useState(null)//the newBuild that is being displayed in the character modal\r\n  const [showArtCondModal, setshowArtCondModal] = useState(false)\r\n  const [showCharacterModal, setshowCharacterModal] = useState(false)\r\n\r\n  const [generatingBuilds, setgeneratingBuilds] = useState(false)\r\n  const [generationProgress, setgenerationProgress] = useState(0)\r\n  const [generationDuration, setgenerationDuration] = useState(0)//in ms\r\n  const [generationSkipped, setgenerationSkipped] = useState(0)\r\n\r\n  const [charDirty, setcharDirty] = useState({})\r\n  const setCharDirty = useCallback(() => setcharDirty({}), [setcharDirty])\r\n\r\n  const prevCharKey = useRef(\"\")\r\n  const isMounted = useRef(false)\r\n\r\n  const worker = useRef()\r\n\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n      CharacterFormulaImport,\r\n    ]).then(setCharDirty)\r\n  }, [setCharDirty])\r\n\r\n  useEffect(() => ReactGA.pageview('/build'), [])\r\n\r\n  //unregister callback when component unmounts\r\n  useEffect(() => () => prevCharKey.current && CharacterDatabase.unregisterCharListener(prevCharKey.current, setCharDirty), [setCharDirty])\r\n  //terminate worker when component unmounts\r\n  useEffect(() => () => worker.current?.terminate(), [])\r\n\r\n  //select a new character Key\r\n  const selectCharacter = useCallback((cKey = \"\") => {\r\n    if (prevCharKey.current === cKey) return\r\n    CharacterDatabase.unregisterCharListener(prevCharKey.current, setCharDirty)\r\n    setcharacterKey(cKey)\r\n    prevCharKey.current = cKey\r\n    CharacterDatabase.registerCharListener(prevCharKey.current, setCharDirty)\r\n    buildSettingsDispatch({ ...initialBuildSettings(), ...(CharacterDatabase.get(cKey)?.buildSettings ?? {}) })\r\n    setbuilds([])\r\n  }, [setCharDirty, setcharacterKey, buildSettingsDispatch])\r\n\r\n  useEffect(() => {//startup load from localStorage\r\n    if (!(\"BuildsDisplay.state\" in localStorage)) return\r\n    const { characterKey = \"\", maxBuildsToShow = maxBuildsToShowDefault } = loadFromLocalStorage(\"BuildsDisplay.state\") ?? {}\r\n    if (characterKey) selectCharacter(characterKey)\r\n    setmaxBuildsToShow(maxBuildsToShow)\r\n  }, [selectCharacter])\r\n\r\n  useEffect(() => propCharacterKey && selectCharacter(propCharacterKey), [propCharacterKey, selectCharacter])//update when props update\r\n  const character = useMemo(() => charDirty && CharacterDatabase.get(characterKey), [characterKey, charDirty])\r\n  const initialStats = useMemo(() => charDirty && Character.createInitialStats(character), [character, charDirty])\r\n  const statsDisplayKeys = useMemo(() => charDirty && Character.getDisplayStatKeys(initialStats), [initialStats, charDirty])\r\n\r\n  //save build settings to character when buildSettings change, will cause infinite loop if add 'character' to dependency array\r\n  useEffect(() => {\r\n    if (!character) return\r\n    character.buildSettings = buildSettings\r\n    CharacterDatabase.update(character)\r\n  }, [buildSettings]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //save to BuildsDisplay.state on change\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      saveToLocalStorage(\"BuildsDisplay.state\", { characterKey, maxBuildsToShow })\r\n    } else isMounted.current = true\r\n  }, [characterKey, maxBuildsToShow])\r\n\r\n\r\n  const { split, totBuildNumber } = useMemo(() => {\r\n    if (!characterKey) // Make sure we have all slotKeys\r\n      return Object.fromEntries(Artifact.getSlotKeys().map(slotKey => [slotKey, []]))\r\n    const artifactDatabase = deepClone(ArtifactDatabase.getArtifactDatabase())\r\n    Object.entries(artifactDatabase).forEach(([key, art]) => {\r\n      //if its equipped on the selected character, bypass the check\r\n      if (art.location === characterKey) return\r\n\r\n      if (art.lock && !useLockedArts) delete artifactDatabase[key]\r\n      else if (art.location && !useEquippedArts) delete artifactDatabase[key]\r\n    })\r\n    const split = Artifact.splitArtifactsBySlot(artifactDatabase);\r\n    //filter the split slots on the mainstats selected.\r\n    artifactsSlotsToSelectMainStats.forEach((slotKey, index) =>\r\n      mainStatKeys[index] && (split[slotKey] = split[slotKey].filter((art) => art.mainStatKey === mainStatKeys[index])))\r\n    const totBuildNumber = calculateTotalBuildNumber(split, setFilters)\r\n    return { split, totBuildNumber }\r\n  }, [characterKey, useLockedArts, useEquippedArts, mainStatKeys, setFilters])\r\n\r\n  const generateBuilds = useCallback((turbo = false) => {\r\n    if (typeof turbo !== \"boolean\") turbo = false\r\n    setbuilds([])\r\n    setgeneratingBuilds(true)\r\n    setgenerationDuration(0)\r\n    setgenerationProgress(0)\r\n    setgenerationSkipped(0)\r\n    //get the formula for this targer\r\n\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    const artifactSetEffects = Artifact.getAllArtifactSetEffectsObj(initialStats)\r\n    const splitArtifacts = deepClone(split)\r\n    //add mainStatVal to each artifact\r\n    Object.values(splitArtifacts).forEach(artArr => {\r\n      artArr.forEach(art => {\r\n        art.mainStatVal = Artifact.getMainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(mainStatAssumptionLevel, art.numStars * 4), art.level));\r\n      })\r\n    })\r\n    //generate the key dependencies for the formula\r\n    const minFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { min }]) => [statKey, min]).filter(([, min]) => typeof min === \"number\"))\r\n    const maxFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { max }]) => [statKey, max]).filter(([, max]) => typeof max === \"number\"))\r\n    //create an obj with app the artifact set effects to pass to buildworker.\r\n    const data = {\r\n      splitArtifacts, initialStats, artifactSetEffects,\r\n      setFilters, minFilters, maxFilters, maxBuildsToShow, optimizationTarget, ascending, turbo\r\n    }\r\n    worker.current?.terminate()\r\n    worker.current = new Worker();\r\n    worker.current.onmessage = (e) => {\r\n      if (typeof e.data.progress === \"number\") {\r\n        const { progress, timing = 0, skipped = 0 } = e.data\r\n        setgenerationProgress(progress)\r\n        setgenerationDuration(timing)\r\n        setgenerationSkipped(skipped)\r\n        return\r\n      }\r\n      ReactGA.timing({\r\n        category: \"Build Generation\",\r\n        variable: \"timing\",\r\n        value: e.data.timing,\r\n        label: totBuildNumber\r\n      })\r\n      const builds = e.data.builds.map(obj =>\r\n        Character.calculateBuildwithArtifact(initialStats, obj.artifacts))\r\n      setbuilds(builds)\r\n      setgeneratingBuilds(false)\r\n      worker.current.terminate()\r\n      worker.current = null\r\n    }\r\n    worker.current.postMessage(data)\r\n  }, [split, totBuildNumber, mainStatAssumptionLevel, ascending, initialStats, maxBuildsToShow, optimizationTarget, setFilters, statFilters])\r\n\r\n  //try to generate build when build numbers are low\r\n  useEffect(() => {\r\n    if (totBuildNumber <= autoBuildGenLimit) generateBuilds()\r\n    else setbuilds([])\r\n  }, [characterKey, split, totBuildNumber, buildSettings, generateBuilds])\r\n\r\n  const dropdownitemsForStar = useCallback((star, index) => Artifact.getSetsByMaxStarEntries(star).map(([setKey, setobj]) => {\r\n    if (setFilters.some(filter => filter.key === setKey)) return false;\r\n    const setsNumArr = Object.keys(Artifact.getSetEffectsObj(setKey))\r\n    const artsAccountedOther = setFilters.reduce((accu, cur, ind) => (cur.key && ind !== index) ? accu + cur.num : accu, 0)\r\n    if (setsNumArr.every(num => parseInt(num) + artsAccountedOther > 5)) return false;\r\n    return (<Dropdown.Item key={setKey} onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: setKey, num: parseInt(setsNumArr[0]) ?? 0 })} >\r\n      {setobj.name}\r\n    </Dropdown.Item>)\r\n  }), [setFilters, buildSettingsDispatch])\r\n\r\n  const characterDropDown = useMemo(() => <DropdownButton title={Character.getName(characterKey, \"Select Character\")} disabled={generatingBuilds}>\r\n    <Dropdown.Item onClick={() => selectCharacter(\"\")}>Unselect Character</Dropdown.Item>\r\n    <Dropdown.Divider />\r\n    <CharacterSelectionDropdownList onSelect={cKey => selectCharacter(cKey)} />\r\n  </DropdownButton>, [characterKey, generatingBuilds, selectCharacter])\r\n\r\n  const sortByText = useMemo(() => {\r\n    if (Array.isArray(optimizationTarget)) {\r\n      const formula = Formula.get(optimizationTarget)\r\n      if (formula.field) {\r\n        const variant = Character.getTalentFieldValue(formula.field, \"variant\", initialStats)\r\n        const text = Character.getTalentFieldValue(formula.field, \"text\", initialStats)\r\n        let [, , talentKey] = formula.keys\r\n        if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n        return <b>{Character.getTalentName(characterKey, talentKey)}: <span className={`text-${variant}`}>{text}</span></b>\r\n      }\r\n    } else return <b>Basic Stat: <span className={`text-${Stat.getStatVariant(optimizationTarget)}`}>{Stat.getStatNamePretty(optimizationTarget)}</span></b>\r\n    return <Badge variant=\"danger\">INVALID</Badge>\r\n  }, [optimizationTarget, characterKey, initialStats])\r\n\r\n  const characterName = Character.getName(characterKey, \"Character Name\")\r\n  const artsAccounted = setFilters.reduce((accu, cur) => cur.key ? accu + cur.num : accu, 0)\r\n  const artifactCondCount = useMemo(() => {\r\n    let count = 0;\r\n    crawlObject(initialStats?.conditionalValues?.artifact, [], v => Array.isArray(v), () => count++)\r\n    return count\r\n  }, [initialStats?.conditionalValues])\r\n  //rudimentary dispatcher, definitely not the same API as the real characterDispatch.\r\n  const characterDispatch = useCallback(val => CharacterDatabase.update({ ...character, ...val }), [character])\r\n\r\n  const hasMinFilters = Object.entries(statFilters).some(([statKey, { min }]) => typeof min === \"number\")\r\n  const hasMaxFilters = Object.entries(statFilters).some(([statKey, { max }]) => typeof max === \"number\")\r\n  const disabledTurbo = ascending ? hasMinFilters : hasMaxFilters\r\n  return <Container>\r\n    <BuildModal {...{ build: modalBuild, showCharacterModal, characterKey, selectCharacter, setmodalBuild, setshowCharacterModal }} />\r\n    <ArtConditionalModal {...{ showArtCondModal, setshowArtCondModal, initialStats, characterDispatch, artifactCondCount }} />\r\n    <Row className=\"mt-2 mb-2\">\r\n      <Col>\r\n        {/* Build Generator Editor */}\r\n        <Card bg=\"darkcontent\" text=\"lightfont\">\r\n          <Card.Header>Build Generator</Card.Header>\r\n          <Card.Body>\r\n            <Row >\r\n              <Col xs={12} lg={6}>\r\n                {/* character selection */}\r\n                {characterKey ?\r\n                  <CharacterCard header={characterDropDown} characterKey={characterKey} bg={\"lightcontent\"} footer={false} cardClassName=\"mb-2\" onEdit={!generatingBuilds && (() => setshowCharacterModal(true))} /> :\r\n                  <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                    <Card.Header>\r\n                      {characterDropDown}\r\n                    </Card.Header>\r\n                  </Card>}\r\n                {/* Hit mode options */}\r\n                {Character.hasTalentPage(characterKey) && <HitModeCard className=\"mb-2\" character={character} />}\r\n                {/* Final Stat Filter */}\r\n                <StatFilterCard className=\"mb-2\" statFilters={statFilters} statKeys={statsDisplayKeys?.basicKeys} setStatFilters={sFs => buildSettingsDispatch({ statFilters: sFs })} />\r\n              </Col>\r\n              <Col xs={12} lg={6}><Row>\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text=\"lightfont\"><Card.Body>\r\n                    <Button className=\"w-100\" onClick={() => setshowArtCondModal(true)} disabled={generatingBuilds}>\r\n                      <span>Default Artifact Set Effects {Boolean(artifactCondCount) && <Badge variant=\"success\">{artifactCondCount} Selected</Badge>}</span>\r\n                    </Button>\r\n                  </Card.Body></Card>\r\n                </Col>\r\n                {/* Artifact set picker */}\r\n                {setFilters.map(({ key: setKey, num: setNum }, index) => <Col className=\"mb-2\" key={index} xs={12}>\r\n                  <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                    <Card.Header>\r\n                      <ButtonGroup>\r\n                        {/* Artifact set */}\r\n                        <DropdownButton as={ButtonGroup} title={Artifact.getSetName(setKey, \"Artifact Set Filter\")} disabled={generatingBuilds}>\r\n                          <Dropdown.Item onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: \"\" })}>Unselect Artifact</Dropdown.Item>\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(5, index)}\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(4, index)}\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(3, index)}\r\n                        </DropdownButton>\r\n                        {/* set number */}\r\n                        <DropdownButton as={ButtonGroup} title={`${setNum}-set`}\r\n                          disabled={generatingBuilds || !setKey || artsAccounted >= 5}\r\n                        >\r\n                          {Object.keys(Artifact.getSetEffectsObj(setKey)).map(num => {\r\n                            let artsAccountedOther = setFilters.reduce((accu, cur) => (cur.key && cur.key !== setKey) ? accu + cur.num : accu, 0)\r\n                            return (parseInt(num) + artsAccountedOther <= 5) &&\r\n                              (<Dropdown.Item key={num} onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: setFilters[index].key, num: parseInt(num) })} >\r\n                                {`${num}-set`}\r\n                              </Dropdown.Item>)\r\n                          })}\r\n                        </DropdownButton>\r\n                      </ButtonGroup>\r\n                    </Card.Header>\r\n                    {setKey ? <Card.Body><Row className=\"mb-n2\">\r\n                      {Object.keys(Artifact.getSetEffectsObj(setKey)).filter(setNkey => parseInt(setNkey) <= setNum).map(setNumKey =>\r\n                        <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild: initialStats, characterDispatch, editable: true }} />)}\r\n                    </Row></Card.Body> : null}\r\n                  </Card>\r\n                </Col>)}\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text=\"lightfont\"><Card.Body className=\"mb-n2\">\r\n                    <Button className=\"w-100 mb-2\" onClick={() => buildSettingsDispatch({ useEquippedArts: !useEquippedArts })} disabled={generatingBuilds}>\r\n                      <span><FontAwesomeIcon icon={useEquippedArts ? faCheckSquare : faSquare} /> Use Equipped Artifacts</span>\r\n                    </Button>\r\n                    <Button className=\"w-100 mb-2\" onClick={() => buildSettingsDispatch({ useLockedArts: !useLockedArts })} disabled={generatingBuilds}>\r\n                      <span><FontAwesomeIcon icon={useLockedArts ? faCheckSquare : faSquare} /> Use Locked Artifacts</span>\r\n                    </Button>\r\n                  </Card.Body></Card>\r\n                </Col>\r\n                {/* main stat selector */}\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text=\"lightfont\">\r\n                    <Card.Header>\r\n                      <Row>\r\n                        <Col>Artifact Main Stat</Col>\r\n                        <Col xs=\"auto\"><AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={v => buildSettingsDispatch({ mainStatAssumptionLevel: v })} /></Col>\r\n                      </Row>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"mb-n2\">\r\n                      {artifactsSlotsToSelectMainStats.map((slotKey, index) =>\r\n                      (<div className=\"text-inline mb-1 d-flex justify-content-between\" key={slotKey}>\r\n                        <h6 className=\"d-inline mb-0\">\r\n                          {Artifact.getSlotNameWithIcon(slotKey)}\r\n                        </h6>\r\n                        <DropdownButton disabled={generatingBuilds} size=\"sm\"\r\n                          title={mainStatKeys[index] ? Stat.getStatNameWithPercent(mainStatKeys[index]) : \"Select a mainstat\"}\r\n                          className=\"d-inline\">\r\n                          <Dropdown.Item onClick={() => buildSettingsDispatch({ type: \"mainStatKey\", index, mainStatKey: \"\" })} >No MainStat</Dropdown.Item>\r\n                          {Artifact.getSlotMainStatKeys(slotKey).map(mainStatKey =>\r\n                            <Dropdown.Item onClick={() => buildSettingsDispatch({ type: \"mainStatKey\", index, mainStatKey })} key={mainStatKey}>\r\n                              {Stat.getStatNameWithPercent(mainStatKey)}\r\n                            </Dropdown.Item>)}\r\n                        </DropdownButton>\r\n                      </div>))}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row></Col>\r\n            </Row>\r\n            <Row className=\"mb-2\">\r\n              <Col>{characterKey && <BuildAlert {...{ totBuildNumber, generatingBuilds, generationSkipped, generationProgress, generationDuration, characterName, maxBuildsToShow }} />}</Col>\r\n            </Row>\r\n            <Row className=\"d-flex justify-content-between\">\r\n              <Col xs=\"auto\" >\r\n                <ButtonGroup>\r\n                  <Button\r\n                    className=\"h-100\"\r\n                    disabled={!characterKey || generatingBuilds}\r\n                    variant={(characterKey && totBuildNumber <= warningBuildNumber) ? \"success\" : \"warning\"}\r\n                    onClick={generateBuilds}\r\n                  ><span>Generate Builds</span></Button>\r\n                  {totBuildNumber > warningBuildNumber && <OverlayTrigger\r\n                    overlay={<Tooltip>\r\n                      <div>Dramatically speeds up build time.</div>\r\n                      <div>Yields only 1 build.</div>\r\n                      {Boolean(disabledTurbo) && <div className=\"mt-2\">Does not work with <b>{Boolean(ascending) ? 'min' : 'max'}imum</b> stat filter when sorting by <b>{Boolean(ascending) ? 'as' : 'des'}cending</b></div>}\r\n                    </Tooltip>}\r\n                  ><span >\r\n                      <Button variant=\"success\" disabled={disabledTurbo} className={`rounded-0 ${disabledTurbo ? \"cursor-pointer\" : \"\"}`} onClick={() => generateBuilds(true)}><strong>TURBO</strong></Button>\r\n                    </span></OverlayTrigger>}\r\n                  <Button\r\n                    className=\"h-100\"\r\n                    disabled={!generatingBuilds}\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                      if (!worker.current) return\r\n                      worker.current.terminate()\r\n                      worker.current = null\r\n                      setgeneratingBuilds(false)\r\n                      setbuilds([])\r\n                      setgenerationDuration(0)\r\n                      setgenerationProgress(0)\r\n                      setgenerationSkipped(0)\r\n                    }}\r\n                  ><span>Cancel</span></Button>\r\n                </ButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                {/* Dropdown to select sorting value */}\r\n                <ButtonGroup>\r\n                  <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle disabled={generatingBuilds} >\r\n                      <span>Sort by {sortByText}</span>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu drop=\"up\" align=\"right\" style={{ minWidth: \"35rem\" }} >\r\n                      <Row>\r\n                        {Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n                          let header = \"\"\r\n                          if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n                          else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n                          else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n                          else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n                          return <Col xs={12} md={6} key={talentKey}>\r\n                            <Dropdown.Header><b>{header}</b></Dropdown.Header>\r\n                            {fields.map((target, i) => {\r\n                              if (typeof target === \"string\")\r\n                                return <Dropdown.Item key={i} onClick={() => buildSettingsDispatch({ optimizationTarget: target })}>{Stat.getStatNamePretty(target)}</Dropdown.Item>\r\n                              const formula = Formula.get(target)\r\n                              const talentField = formula.field\r\n                              if (!formula || !talentField) return null\r\n                              return <Dropdown.Item key={i} onClick={() => buildSettingsDispatch({ optimizationTarget: target })}>\r\n                                <span className={`text-${Character.getTalentFieldValue(talentField, \"variant\", initialStats)}`}>{Character.getTalentFieldValue(talentField, \"text\", initialStats)}</span>\r\n                              </Dropdown.Item>\r\n                            })}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                  <Button onClick={() => buildSettingsDispatch({ ascending: !buildSettings.ascending })} disabled={generatingBuilds} variant={ascending ? \"danger\" : \"primary\"}>\r\n                    <FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />\r\n                    <span>{ascending ? \"Ascending\" : \"Descending\"}</span>\r\n                  </Button>\r\n                </ButtonGroup >\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-2\">\r\n      <Col>\r\n        <Card bg=\"darkcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>{characterKey ? <span>Showing <b>{builds.length}</b> Builds generated for {characterName}</span> : <span>Select a character to generate builds.</span>}</Col>\r\n              <Col xs=\"auto\">\r\n                <DropdownButton title={<span>Max builds to show: <b>{maxBuildsToShow}</b></span>} size=\"sm\">\r\n                  {maxBuildsToShowList.map(v => <Dropdown.Item key={v} onClick={() => setmaxBuildsToShow(v)}>{v}</Dropdown.Item>)}\r\n                </DropdownButton>\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          {/* Build List */}\r\n          <ListGroup>\r\n            {builds.map((build, index) =>\r\n              (index < maxBuildsToShow) && <ArtifactDisplayItem build={build} characterKey={characterKey} index={index} key={index} statsDisplayKeys={statsDisplayKeys} onClick={() => setmodalBuild(build)} />\r\n            )}\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container >\r\n}\r\n\r\nfunction BuildModal({ build, showCharacterModal, characterKey, selectCharacter, setmodalBuild, setshowCharacterModal }) {\r\n  const closeModal = useCallback(() => {\r\n    setmodalBuild(null)\r\n    setshowCharacterModal(false)\r\n  }, [setmodalBuild, setshowCharacterModal])\r\n  return <Modal show={Boolean(showCharacterModal || build)} onHide={closeModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n    <React.Suspense fallback={<span>Loading...</span>}>\r\n      <CharacterDisplayCard\r\n        characterKey={characterKey}\r\n        setCharacterKey={cKey => selectCharacter(cKey)}\r\n        newBuild={build}\r\n        onClose={closeModal}\r\n        editable={showCharacterModal}\r\n        footer={<Button variant=\"danger\" onClick={closeModal}>Close</Button>} />\r\n    </React.Suspense>\r\n  </Modal>\r\n}\r\n\r\nfunction ArtConditionalModal({ showArtCondModal, setshowArtCondModal, initialStats, characterDispatch, artifactCondCount }) {\r\n  const closeArtCondModal = useCallback(() => setshowArtCondModal(false), [setshowArtCondModal])\r\n  const artSetKeyList = [5, 4, 3].map(s => Artifact.getSetsByMaxStarEntries(s).map(([key]) => key)).flat()\r\n  return <Modal show={showArtCondModal} onHide={closeArtCondModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <h5>Default Artifact Set Effects  {Boolean(artifactCondCount) && <Badge variant=\"success\">{artifactCondCount} Selected</Badge>}</h5>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button onClick={() => {\r\n              if (initialStats.conditionalValues.artifact) initialStats.conditionalValues.artifact = {}\r\n              characterDispatch({ conditionalValues: initialStats.conditionalValues })\r\n            }}><span><FontAwesomeIcon icon={faUndo} /> Reset All</span></Button>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={closeArtCondModal}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          {artSetKeyList.map(setKey => {\r\n            let icon = Artifact.getPieceIcon(setKey, Object.keys(Artifact.getPieces(setKey))?.[0])\r\n            let numStars = [...Artifact.getRarityArr(setKey)].pop() || 1\r\n            return <Col className=\"mb-2\" key={setKey} xs={12} lg={6} xl={4}>\r\n              <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                <Card.Header >\r\n                  <Row>\r\n                    <Col xs=\"auto\" className=\"ml-n3 my-n2\">\r\n                      <Image src={icon} className={`thumb-mid grad-${numStars}star m-1`} thumbnail />\r\n                    </Col>\r\n                    <Col >\r\n                      <h6><b>{Artifact.getSetName(setKey)}</b></h6>\r\n                      <span><Stars stars={numStars} /></span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Header>\r\n                <Card.Body><Row className=\"mb-n2\">\r\n                  {Boolean(setKey) && Object.keys(Artifact.getSetEffectsObj(setKey)).map(setNumKey =>\r\n                    <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild: initialStats, editable: true, characterDispatch, }} />)}\r\n                </Row></Card.Body>\r\n              </Card>\r\n            </Col>\r\n          })}\r\n        </Row>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"danger\" onClick={closeArtCondModal}>\r\n          <FontAwesomeIcon icon={faTimes} /> CLOSE</Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nfunction StatFilterItem({ statKey, statKeys = [], min, max, close, setFilter }) {\r\n  const isFloat = Stat.getStatUnit(statKey) === \"%\"\r\n  const inputProps = {\r\n    disabled: !statKey,\r\n    allowEmpty: true,\r\n    float: isFloat,\r\n  }\r\n  const minInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MIN\",\r\n    value: min,\r\n    onChange: (s) => setFilter(statKey, s, max)\r\n  }\r\n  const maxInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MAX\",\r\n    value: max,\r\n    onChange: (s) => setFilter(statKey, min, s)\r\n  }\r\n  return <InputGroup className=\"mb-2\">\r\n    <DropdownButton\r\n      as={InputGroup.Prepend}\r\n      title={Stat.getStatNamePretty(statKey, \"New Stat\")}\r\n      id=\"input-group-dropdown-1\"\r\n    >\r\n      {statKeys.map(sKey => <Dropdown.Item key={sKey} onClick={() => { close?.(); setFilter(sKey, min, max) }}>{Stat.getStatNamePretty(sKey)}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <CustomFormControl {...minInputProps} />\r\n    <CustomFormControl {...maxInputProps} />\r\n    {Boolean(close) && <InputGroup.Append>\r\n      <Button variant=\"danger\" onClick={close}><FontAwesomeIcon icon={faTrash} /></Button>\r\n    </InputGroup.Append>}\r\n  </InputGroup>\r\n}\r\n\r\nfunction HitModeCard({ character, className }) {\r\n  const setHitmode = useCallback(({ hitMode }) => CharacterDatabase.update({ ...character, hitMode }), [character])\r\n  const setReactionMode = useCallback(({ reactionMode }) => CharacterDatabase.update({ ...character, reactionMode }), [character])\r\n  const setInfusionAura = useCallback(({ infusionAura }) => CharacterDatabase.update({ ...character, infusionAura }), [character])\r\n  if (!character) return null\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className={className}>\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>Hit Mode Options</Col>\r\n        <Col xs=\"auto\"><InfusionAuraDropdown character={character} characterDispatch={setInfusionAura} /></Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"mb-n2\">\r\n      <HitModeToggle hitMode={character.hitMode} characterDispatch={setHitmode} className=\"w-100 mb-2\" />\r\n      <ReactionToggle character={character} characterDispatch={setReactionMode} className=\"w-100 mb-2\" />\r\n    </Card.Body>\r\n  </Card >\r\n}\r\n\r\nfunction StatFilterCard({ statKeys = [], statFilters = {}, setStatFilters, className }) {\r\n  const remainingKeys = statKeys.filter(key => !Object.keys(statFilters).some(k => k === key))\r\n  const setFilter = (sKey, min, max) => setStatFilters({ ...statFilters, [sKey]: { min, max } })\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className={className}>\r\n    <Card.Header>Final Stat Filter</Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-n2\">\r\n        {Object.entries(statFilters).map(([statKey, { min, max }]) => {\r\n          return <Col xs={12} key={statKey} ><StatFilterItem statKey={statKey} statKeys={remainingKeys} setFilter={setFilter} min={min} max={max} close={() => {\r\n            delete statFilters[statKey]\r\n            setStatFilters({ ...statFilters })\r\n          }} /></Col>\r\n        })}\r\n        <Col xs={12}>\r\n          <StatFilterItem statKeys={remainingKeys} setFilter={setFilter} />\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\n//for displaying each artifact build\r\nfunction ArtifactDisplayItem({ index, characterKey, build, statsDisplayKeys, onClick }) {\r\n  return (<div>\r\n    <ListGroup.Item\r\n      variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"text-white\" action\r\n      onClick={onClick}\r\n    >\r\n      <h5>{Object.entries(build.setToSlots).sort(([key1, slotarr1], [key2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n        <Badge key={key} variant=\"primary\" className=\"mr-2\">\r\n          {slotarr.map(slotKey => Artifact.getSlotIcon(slotKey))} {Artifact.getSetName(key)}\r\n        </Badge>\r\n      )}</h5>\r\n      <StatDisplayComponent {...{ character: CharacterDatabase.get(characterKey), newBuild: build, statsDisplayKeys, cardbg: (index % 2 ? \"lightcontent\" : \"darkcontent\") }} />\r\n    </ListGroup.Item>\r\n  </div>)\r\n}\r\n\r\nfunction BuildAlert({ totBuildNumber, generatingBuilds, generationSkipped, generationProgress, generationDuration, characterName, maxBuildsToShow }) {\r\n  const totalBuildNumberString = totBuildNumber?.toLocaleString() ?? totBuildNumber\r\n  const totalUnskipped = totBuildNumber - generationSkipped\r\n  const generationProgressString = generationProgress?.toLocaleString() ?? generationProgress\r\n  const generationSkippedString = generationSkipped?.toLocaleString() ?? generationSkipped\r\n  const totalUnskippedString = totalUnskipped?.toLocaleString() ?? totalUnskipped\r\n  const generationSkippedText = Boolean(generationSkipped) && <span>(<b>{generationSkippedString}</b> skipped)</span>\r\n  if (generatingBuilds) {\r\n    let progPercent = generationProgress * 100 / (totalUnskipped)\r\n    return <Alert variant=\"success\">\r\n      <span>Generating and testing <b className=\"text-monospace\">{generationProgressString}/{totalUnskippedString}</b> build configurations against the criteria for <b>{characterName}</b>. {generationSkippedText}</span><br />\r\n      <h6>Time elapsed: <strong className=\"text-monospace\">{timeStringMs(generationDuration)}</strong></h6>\r\n      <ProgressBar now={progPercent} label={`${progPercent.toFixed(1)}%`} />\r\n    </Alert>\r\n  } else if (!generatingBuilds && generationProgress) {//done\r\n    return <Alert variant=\"success\">\r\n      <span>Generated and tested <b className=\"text-monospace\">{totalUnskippedString}</b> Build configurations against the criteria for <b>{characterName}</b>. {generationSkippedText}</span>\r\n      <h6>Total duration: <strong className=\"text-monospace\">{timeStringMs(generationDuration)}</strong></h6>\r\n      <ProgressBar now={100} variant=\"success\" label=\"100%\" />\r\n    </Alert>\r\n  } else {\r\n    return totBuildNumber === 0 ?\r\n      <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will not generate any builds for <b>{characterName}</b>. Please change your Artifact configurations, or add/unlock more Artifacts.</span></Alert>\r\n      : (totBuildNumber > warningBuildNumber ?\r\n        <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will generate <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>. This might take quite a while to generate...</span></Alert> :\r\n        <Alert variant=\"success\" className=\"mb-0\"><span>Current configuration {totBuildNumber <= maxBuildsToShow ? \"generated\" : \"will generate\"} <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>.</span></Alert>)\r\n  }\r\n}\r\n\r\nconst levels = {\r\n  0: <span>No level assumption</span>,\r\n  4: <span>Assume at least level 4</span>,\r\n  8: <span>Assume at least level 8</span>,\r\n  12: <span>Assume at least level 12</span>,\r\n  16: <span>Assume at least level 16</span>,\r\n  20: <span>Assume at least level 20</span>\r\n}\r\nfunction AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel }) {\r\n  return <OverlayTrigger overlay={<Tooltip>Change Main Stat value to be at least a specific level. Does not change substats.</Tooltip>}  >\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant={mainStatAssumptionLevel ? \"orange\" : \"primary\"}>{levels[mainStatAssumptionLevel]}</Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        {Object.entries(levels).map(([key, text]) => <Dropdown.Item key={key} onClick={() => setmainStatAssumptionLevel(parseInt(key))}>{text}</Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  </OverlayTrigger>\r\n\r\n}","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ ele ] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n    })    \r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","import ElementalData from \"../Data/ElementalData\"\r\n\r\n/**\r\n * Remove artifacts that can never be used in optimized builds\r\n * @param {artifact[]} artifacts - List of artifacts of the same slot\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - The list of the set effects\r\n * @param {Set.<statKey>} significantStats - A set of stats that pruning needs to take into consideration\r\n * @param {bool} ascending - Whether the sorting is ascending or descending\r\n * @param {Set.<setKey>} alwaysAccepted - The list of artifact sets that are always included\r\n */\r\nexport function pruneArtifacts(artifacts, artifactSetEffects, significantStats, ascending, alwaysAccepted = new Set()) {\r\n  function shouldKeepFirst(first, second, preferFirst) {\r\n    let firstBetter = Object.entries(first).some(([k, v]) => v > (second[k] ?? 0))\r\n    let secondBetter = Object.entries(second).some(([k, v]) => v > (first[k] ?? 0))\r\n    if (ascending) [firstBetter, secondBetter] = [secondBetter, firstBetter]\r\n    // Keep if first is strictly better, uncomparable, or equal + prefer first\r\n    return firstBetter || (!secondBetter && preferFirst)\r\n  }\r\n\r\n  // Prune unused set effects. Sets with no relevant effects are regrouped to \"other\"\r\n  const prunedSetEffects = { \"other\": {} }\r\n  for (const set in artifactSetEffects)\r\n    for (const num in artifactSetEffects[set]) {\r\n      const effects = Object.entries(artifactSetEffects[set][num]).filter(([key]) => significantStats.has(key))\r\n      if (effects.length > 0) {\r\n        prunedSetEffects[set] = prunedSetEffects[set] ?? {}\r\n        prunedSetEffects[set][num] = Object.fromEntries(effects)\r\n      }\r\n    }\r\n\r\n  // array of artifacts, artifact stats, and set (may be \"other\")\r\n  let tmp = artifacts.map(artifact => {\r\n    let stats = {}, set = (artifact.setKey in prunedSetEffects) ? artifact.setKey : \"other\"\r\n    if (significantStats.has(artifact.mainStatKey))\r\n      stats[artifact.mainStatKey] = artifact.mainStatVal\r\n    for (const { key, value } of artifact.substats)\r\n      if (significantStats.has(key))\r\n        stats[key] = (stats[key] ?? 0) + value\r\n    return { artifact, stats, set }\r\n  })\r\n\r\n  // Compare artifacts' base stats from the same set\r\n  tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) =>\r\n    tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) =>\r\n      candidateSet !== otherSet || shouldKeepFirst(candidateStats, otherStats, candidate.id <= other.id)\r\n    ))\r\n\r\n  if (!ascending) {\r\n    // Cross-check with different sets\r\n    tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) => {\r\n      // Possible \"additional stats\" if a build equips `candidate` on an empty slot.\r\n      let possibleStats = [...Object.values(prunedSetEffects[candidateSet]), {}].map(c => {\r\n        const current = { ...candidateStats }\r\n        Object.entries(c).forEach(([key, value]) => current[key] = (current[key] ?? 0) + value)\r\n        return current\r\n      })\r\n      return tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) => {\r\n        if (candidateSet === otherSet) return true // Already checked same-set\r\n\r\n        // Remove possibilities that shouldn't be kept\r\n        possibleStats = possibleStats.filter(current =>\r\n          shouldKeepFirst(current, otherStats, candidate.id <= other.id))\r\n        return possibleStats.length !== 0\r\n      })\r\n    })\r\n  }\r\n  // Reinstate `alwaysAccepted`\r\n  return [\r\n    ...artifacts.filter(artifact => alwaysAccepted.has(artifact.set)),\r\n    ...tmp.map(tmp => tmp.artifact).filter(artifact => !alwaysAccepted.has(artifact.set)),\r\n  ]\r\n}\r\n\r\n/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot, setFilters) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet = {}\r\n    for (const artifact of artifactsBySlot[slotKey]) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey].push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet[null]) artifactsBySet[null].push(artifact)\r\n        else artifactsBySet[null] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu = {}, result = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot, setFilters) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1].length, 1)\r\n    , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats, artifactsBySlot, artifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\r\n  function slotPerm(index, stats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    let slotKey = slotKeys[index]\r\n    for (const artifact of artifactsBySlot[slotKey]) {\r\n      let newStats = { ...stats }\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey, art, setCount, accu, stats, artifactSetEffects) {\r\n  let setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n\r\n  // Add artifact stats\r\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal\r\n  art.substats.forEach((substat) => {\r\n    if (substat?.key in stats) stats[substat.key] += substat.value\r\n  })\r\n\r\n  // Add set effects\r\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\r\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]) => {\r\n    if (statKey in stats) stats[statKey] += val\r\n  })\r\n}\r\n\r\n/**\r\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\r\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\r\n  * @param {*} stats - The calcualted stats\r\n  * @param {*} useCharElement - Override the hit to be the character's elemental, that is not part of infusion.\r\n  */\r\nexport function getTalentStatKey(skillKey, stats, useCharElement = false) {\r\n  const { hitMode = \"\", infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (Object.keys(ElementalData).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\r\n  if (!useCharElement) useCharElement = weaponType === \"catalyst\"\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || useCharElement) {\r\n    if (reactionMode && reactionMode.startsWith(characterEle)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n    return `${characterEle}_${skillKey}_${hitMode}`\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n\r\n  return `${eleKey}_${skillKey}_${hitMode}`\r\n}\r\n\r\nexport function getTalentStatKeyVariant(skillKey, stats, useCharElement = false) {\r\n  if (Object.keys(ElementalData).includes(skillKey)) return skillKey//elemental DMG\r\n  const { infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (!useCharElement) useCharElement = weaponType === \"catalyst\"\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || useCharElement) {\r\n    if (reactionMode && reactionMode.startsWith(characterEle)) {\r\n      if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n      else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n    }\r\n    return characterEle\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) {\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n  }\r\n  return eleKey\r\n}"],"sourceRoot":""}