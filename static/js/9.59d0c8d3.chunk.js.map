{"version":3,"sources":["Data/Weapons/Claymore/BlackcliffSlasher/Weapon_Blackcliff_Slasher.png","Data/Weapons/Claymore/BlackcliffSlasher/index.tsx","Data/Weapons/Claymore/BloodtaintedGreatsword/Weapon_Bloodtainted_Greatsword.png","Data/Weapons/Claymore/BloodtaintedGreatsword/index.tsx","Data/Weapons/Claymore/DebateClub/Weapon_Debate_Club.png","Data/Weapons/Claymore/DebateClub/index.tsx","Data/Weapons/Claymore/FavoniusGreatsword/Weapon_Favonius_Greatsword.png","Data/Weapons/Claymore/FavoniusGreatsword/index.tsx","Data/Weapons/Claymore/FerrousShadow/Weapon_Ferrous_Shadow.png","Data/Weapons/Claymore/FerrousShadow/index.tsx","Data/Weapons/Claymore/KatsuragikiriNagamasa/Weapon_Katsuragikiri_Nagamasa.png","Data/Weapons/Claymore/KatsuragikiriNagamasa/index.tsx","Data/Weapons/Claymore/LithicBlade/Weapon_Lithic_Blade.png","Data/Weapons/Claymore/LithicBlade/index.tsx","Data/Weapons/Claymore/LuxuriousSeaLord/Weapon_Luxurious_Sea-Lord.png","Data/Weapons/Claymore/LuxuriousSeaLord/index.tsx","Data/Weapons/Claymore/OldMercsPal/Weapon_Old_Merc's_Pal.png","Data/Weapons/Claymore/OldMercsPal/index.tsx","Data/Weapons/Claymore/PrototypeArchaic/Weapon_Prototype_Archaic.png","Data/Weapons/Claymore/PrototypeArchaic/index.tsx","Data/Weapons/Claymore/Quartz/Weapon_Quartz.png","Data/Weapons/Claymore/Quartz/index.tsx","Data/Weapons/Claymore/Rainslasher/Weapon_Rainslasher.png","Data/Weapons/Claymore/Rainslasher/index.tsx","Data/Weapons/Claymore/RoyalGreatsword/Weapon_Royal_Greatsword.png","Data/Weapons/Claymore/RoyalGreatsword/index.tsx","Data/Weapons/Claymore/SacrificialGreatsword/Weapon_Sacrificial_Greatsword.png","Data/Weapons/Claymore/SacrificialGreatsword/index.tsx","Data/Weapons/Claymore/SerpentSpine/Weapon_Serpent_Spine.png","Data/Weapons/Claymore/SerpentSpine/index.tsx","Data/Weapons/Claymore/SkyriderGreatsword/Weapon_Skyrider_Greatsword.png","Data/Weapons/Claymore/SkyriderGreatsword/index.tsx","Data/Weapons/Claymore/SkywardPride/Weapon_Skyward_Pride.png","Data/Weapons/Claymore/SkywardPride/index.tsx","Data/Weapons/Claymore/SnowTombedStarsilver/Weapon_Snow-Tombed_Starsilver.png","Data/Weapons/Claymore/SnowTombedStarsilver/index.tsx","Data/Weapons/Claymore/SongOfBrokenPines/Weapon_Song_of_Broken_Pines.png","Data/Weapons/Claymore/SongOfBrokenPines/index.tsx","Data/Weapons/Claymore/TheBell/Weapon_The_Bell.png","Data/Weapons/Claymore/TheBell/index.tsx","Data/Weapons/Claymore/TheUnforged/Weapon_The_Unforged.png","Data/Weapons/Claymore/TheUnforged/index.tsx","Data/Weapons/Claymore/WasterGreatsword/Weapon_Waster_Greatsword.png","Data/Weapons/Claymore/WasterGreatsword/index.tsx","Data/Weapons/Claymore/Whiteblind/Weapon_Whiteblind.png","Data/Weapons/Claymore/Whiteblind/index.tsx","Data/Weapons/Claymore/WhiteIronGreatsword/Weapon_White_Iron_Greatsword.png","Data/Weapons/Claymore/WhiteIronGreatsword/index.tsx","Data/Weapons/Claymore/WolfsGravestone/Weapon_Wolf's_Gravestone.png","Data/Weapons/Claymore/WolfsGravestone/index.tsx","Data/Weapons/Claymore/index.ts","Data/Weapons/Sword/AmenomaKageuchi/Weapon_Amenoma_Kageuchi.png","Data/Weapons/Sword/AmenomaKageuchi/index.tsx","Data/Weapons/Sword/AquilaFavonia/Weapon_Aquila_Favonia.png","Data/Weapons/Sword/AquilaFavonia/index.tsx","Data/Weapons/Sword/BlackcliffLongsword/Weapon_Blackcliff_Longsword.png","Data/Weapons/Sword/BlackcliffLongsword/index.tsx","Data/Weapons/Sword/CoolSteel/Weapon_Cool_Steel.png","Data/Weapons/Sword/CoolSteel/index.tsx","Data/Weapons/Sword/DarkIronSword/Weapon_Dark_Iron_Sword.png","Data/Weapons/Sword/DarkIronSword/index.tsx","Data/Weapons/Sword/DullBlade/Weapon_Dull_Blade.png","Data/Weapons/Sword/DullBlade/index.tsx","Data/Weapons/Sword/FavoniusSword/Weapon_Favonius_Sword.png","Data/Weapons/Sword/FavoniusSword/index.tsx","Data/Weapons/Sword/FesteringDesire/Weapon_Festering_Desire.png","Data/Weapons/Sword/FesteringDesire/index.tsx","Data/Weapons/Sword/FilletBlade/Weapon_Fillet_Blade.png","Data/Weapons/Sword/FilletBlade/index.tsx","Data/Weapons/Sword/FreedomSworn/Weapon_Freedom-Sworn.png","Data/Weapons/Sword/FreedomSworn/index.tsx","Data/Weapons/Sword/HarbingerOfDawn/Weapon_Harbinger_of_Dawn.png","Data/Weapons/Sword/HarbingerOfDawn/index.tsx","Data/Weapons/Sword/IronSting/Weapon_Iron_Sting.png","Data/Weapons/Sword/IronSting/index.tsx","Data/Weapons/Sword/LionsRoar/Weapon_Lion's_Roar.png","Data/Weapons/Sword/LionsRoar/index.tsx","Data/Weapons/Sword/MistsplitterReforged/Weapon_Mistsplitter_Reforged.png","Data/Weapons/Sword/MistsplitterReforged/index.tsx","Data/Weapons/Sword/PrimordialJadeCutter/Weapon_Primordial_Jade_Cutter.png","Data/Weapons/Sword/PrimordialJadeCutter/index.tsx","Data/Weapons/Sword/PrototypeRancour/Weapon_Prototype_Rancour.png","Data/Weapons/Sword/PrototypeRancour/index.tsx","Data/Weapons/Sword/RoyalLongsword/Weapon_Royal_Longsword.png","Data/Weapons/Sword/RoyalLongsword/index.tsx","Data/Weapons/Sword/SacrificialSword/Weapon_Sacrificial_Sword.png","Data/Weapons/Sword/SacrificialSword/index.tsx","Data/Weapons/Sword/SilverSword/Weapon_Silver_Sword.png","Data/Weapons/Sword/SilverSword/index.tsx","Data/Weapons/Sword/SkyriderSword/Weapon_Skyrider_Sword.png","Data/Weapons/Sword/SkyriderSword/index.tsx","Data/Weapons/Sword/SkywardBlade/Weapon_Skyward_Blade.png","Data/Weapons/Sword/SkywardBlade/index.tsx","Data/Weapons/Sword/SummitShaper/Weapon_Summit_Shaper.png","Data/Weapons/Sword/SummitShaper/index.tsx","Data/Weapons/Sword/SwordOfDescension/Weapon_Sword_of_Descension.png","Data/Weapons/Sword/SwordOfDescension/index.tsx","Data/Weapons/Sword/TheAlleyFlash/Weapon_The_Alley_Flash.png","Data/Weapons/Sword/TheAlleyFlash/index.tsx","Data/Weapons/Sword/TheBlackSword/Weapon_The_Black_Sword.png","Data/Weapons/Sword/TheBlackSword/index.tsx","Data/Weapons/Sword/TheFlute/Weapon_The_Flute.png","Data/Weapons/Sword/TheFlute/index.tsx","Data/Weapons/Sword/TravelersHandySword/Weapon_Traveler's_Handy_Sword.png","Data/Weapons/Sword/TravelersHandySword/index.tsx","Data/Weapons/Sword/index.ts","Data/Weapons/Polearm/BeginnersProtector/Weapon_Beginner's_Protector.png","Data/Weapons/Polearm/BeginnersProtector/index.tsx","Data/Weapons/Polearm/BlackcliffPole/Weapon_Blackcliff_Pole.png","Data/Weapons/Polearm/BlackcliffPole/index.tsx","Data/Weapons/Polearm/BlackTassel/Weapon_Black_Tassel.png","Data/Weapons/Polearm/BlackTassel/index.tsx","Data/Weapons/Polearm/CrescentPike/Weapon_Crescent_Pike.png","Data/Weapons/Polearm/CrescentPike/index.tsx","Data/Weapons/Polearm/Deathmatch/Weapon_Deathmatch.png","Data/Weapons/Polearm/Deathmatch/index.tsx","Data/Weapons/Polearm/DragonsBane/Weapon_Dragon's_Bane.png","Data/Weapons/Polearm/DragonsBane/index.tsx","Data/Weapons/Polearm/DragonspineSpear/Weapon_Dragonspine_Spear.png","Data/Weapons/Polearm/DragonspineSpear/index.tsx","Data/Weapons/Polearm/EngulfingLightning/Weapon_Engulfing_Lightning.png","Data/Weapons/Polearm/EngulfingLightning/index.tsx","Data/Weapons/Polearm/FavoniusLance/Weapon_Favonius_Lance.png","Data/Weapons/Polearm/FavoniusLance/index.tsx","Data/Weapons/Polearm/Halberd/Weapon_Halberd.png","Data/Weapons/Polearm/Halberd/index.tsx","Data/Weapons/Polearm/IronPoint/Weapon_Iron_Point.png","Data/Weapons/Polearm/IronPoint/index.tsx","Data/Weapons/Polearm/KitainCrossSpear/Weapon_Kitain_Cross_Spear.png","Data/Weapons/Polearm/KitainCrossSpear/index.tsx","Data/Weapons/Polearm/LithicSpear/Weapon_Lithic_Spear.png","Data/Weapons/Polearm/LithicSpear/index.tsx","Data/Weapons/Polearm/PrimordialJadeWingedSpear/Weapon_Primordial_Jade_Winged-Spear.png","Data/Weapons/Polearm/PrimordialJadeWingedSpear/index.tsx","Data/Weapons/Polearm/PrototypeStarglitter/Weapon_Prototype_Starglitter.png","Data/Weapons/Polearm/PrototypeStarglitter/index.tsx","Data/Weapons/Polearm/RoyalSpear/Weapon_Royal_Spear.png","Data/Weapons/Polearm/RoyalSpear/index.tsx","Data/Weapons/Polearm/SkywardSpine/Weapon_Skyward_Spine.png","Data/Weapons/Polearm/SkywardSpine/index.tsx","Data/Weapons/Polearm/StaffOfHoma/Weapon_Staff_of_Homa.png","Data/Weapons/Polearm/StaffOfHoma/index.tsx","Data/Weapons/Polearm/TheCatch/Weapon_The_Catch.png","Data/Weapons/Polearm/TheCatch/index.tsx","Data/Weapons/Polearm/VortexVanquisher/Weapon_Vortex_Vanquisher.png","Data/Weapons/Polearm/VortexVanquisher/index.tsx","Data/Weapons/Polearm/WhiteTassel/Weapon_White_Tassel.png","Data/Weapons/Polearm/WhiteTassel/index.tsx","Data/Weapons/Polearm/index.ts","Data/Weapons/Bow/AlleyHunter/Weapon_Alley_Hunter.png","Data/Weapons/Bow/AlleyHunter/index.tsx","Data/Weapons/Bow/AmosBow/Weapon_Amos'_Bow.png","Data/Weapons/Bow/AmosBow/index.tsx","Data/Weapons/Bow/BlackcliffWarbow/Weapon_Blackcliff_Warbow.png","Data/Weapons/Bow/BlackcliffWarbow/index.tsx","Data/Weapons/Bow/CompoundBow/Weapon_Compound_Bow.png","Data/Weapons/Bow/CompoundBow/index.tsx","Data/Weapons/Bow/EbonyBow/Weapon_Ebony_Bow.png","Data/Weapons/Bow/EbonyBow/index.tsx","Data/Weapons/Bow/ElegyForTheEnd/Weapon_Elegy_for_the_End.png","Data/Weapons/Bow/ElegyForTheEnd/index.tsx","Data/Weapons/Bow/FavoniusWarbow/Weapon_Favonius_Warbow.png","Data/Weapons/Bow/FavoniusWarbow/index.tsx","Data/Weapons/Bow/Hamayumi/Weapon_Hamayumi.png","Data/Weapons/Bow/Hamayumi/index.tsx","Data/Weapons/Bow/HuntersBow/Weapon_Hunter's_Bow.png","Data/Weapons/Bow/HuntersBow/index.tsx","Data/Weapons/Bow/Messenger/Weapon_Messenger.png","Data/Weapons/Bow/Messenger/index.tsx","Data/Weapons/Bow/MitternachtsWaltz/Weapon_Mitternachts_Waltz.png","Data/Weapons/Bow/MitternachtsWaltz/index.tsx","Data/Weapons/Bow/Predator/Weapon_Predator.png","Data/Weapons/Bow/Predator/index.tsx","Data/Weapons/Bow/PrototypeCrescent/Weapon_Prototype_Crescent.png","Data/Weapons/Bow/PrototypeCrescent/index.tsx","Data/Weapons/Bow/RavenBow/Weapon_Raven_Bow.png","Data/Weapons/Bow/RavenBow/index.tsx","Data/Weapons/Bow/RecurveBow/Weapon_Recurve_Bow.png","Data/Weapons/Bow/RecurveBow/index.tsx","Data/Weapons/Bow/RoyalBow/Weapon_Royal_Bow.png","Data/Weapons/Bow/RoyalBow/index.tsx","Data/Weapons/Bow/Rust/Weapon_Rust.png","Data/Weapons/Bow/Rust/index.tsx","Data/Weapons/Bow/SacrificialBow/Weapon_Sacrificial_Bow.png","Data/Weapons/Bow/SacrificialBow/index.tsx","Data/Weapons/Bow/SeasonedHuntersBow/Weapon_Seasoned_Hunter's_Bow.png","Data/Weapons/Bow/SeasonedHuntersBow/index.tsx","Data/Weapons/Bow/SharpshootersOath/Weapon_Sharpshooter's_Oath.png","Data/Weapons/Bow/SharpshootersOath/index.tsx","Data/Weapons/Bow/SkywardHarp/Weapon_Skyward_Harp.png","Data/Weapons/Bow/SkywardHarp/index.tsx","Data/Weapons/Bow/Slingshot/Weapon_Slingshot.png","Data/Weapons/Bow/Slingshot/index.tsx","Data/Weapons/Bow/TheStringless/Weapon_The_Stringless.png","Data/Weapons/Bow/TheStringless/index.tsx","Data/Weapons/Bow/TheViridescentHunt/Weapon_The_Viridescent_Hunt.png","Data/Weapons/Bow/TheViridescentHunt/index.tsx","Data/Weapons/Bow/ThunderingPulse/Weapon_Thundering_Pulse.png","Data/Weapons/Bow/ThunderingPulse/index.tsx","Data/Weapons/Bow/WindblumeOde/Weapon_Windblume_Ode.png","Data/Weapons/Bow/WindblumeOde/index.tsx","Data/Weapons/Bow/index.ts","Data/Weapons/Catalyst/ApprenticesNotes/Weapon_Apprentice's_Notes.png","Data/Weapons/Catalyst/ApprenticesNotes/index.tsx","Data/Weapons/Catalyst/BlackcliffAgate/Weapon_Blackcliff_Amulet.png","Data/Weapons/Catalyst/BlackcliffAgate/index.tsx","Data/Weapons/Catalyst/DodocoTales/Weapon_Dodoco_Tales.png","Data/Weapons/Catalyst/DodocoTales/index.tsx","Data/Weapons/Catalyst/EmeraldOrb/Weapon_Emerald_Orb.png","Data/Weapons/Catalyst/EmeraldOrb/index.tsx","Data/Weapons/Catalyst/EverlastingMoonglow/Weapon_Everlasting_Moonglow.png","Data/Weapons/Catalyst/EverlastingMoonglow/index.tsx","Data/Weapons/Catalyst/EyeOfPerception/Weapon_Eye_of_Perception.png","Data/Weapons/Catalyst/EyeOfPerception/index.tsx","Data/Weapons/Catalyst/FavoniusCodex/Weapon_Favonius_Codex.png","Data/Weapons/Catalyst/FavoniusCodex/index.tsx","Data/Weapons/Catalyst/Frostbearer/Weapon_Frostbearer.png","Data/Weapons/Catalyst/Frostbearer/index.tsx","Data/Weapons/Catalyst/HakushinRing/Weapon_Hakushin_Ring.png","Data/Weapons/Catalyst/HakushinRing/index.tsx","Data/Weapons/Catalyst/LostPrayerToTheSacredWinds/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Data/Weapons/Catalyst/LostPrayerToTheSacredWinds/index.tsx","Data/Weapons/Catalyst/MagicGuide/Weapon_Magic_Guide.png","Data/Weapons/Catalyst/MagicGuide/index.tsx","Data/Weapons/Catalyst/MappaMare/Weapon_Mappa_Mare.png","Data/Weapons/Catalyst/MappaMare/index.tsx","Data/Weapons/Catalyst/MemoryOfDust/Weapon_Memory_of_Dust.png","Data/Weapons/Catalyst/MemoryOfDust/index.tsx","Data/Weapons/Catalyst/OtherworldlyStory/Weapon_Otherworldly_Story.png","Data/Weapons/Catalyst/OtherworldlyStory/index.tsx","Data/Weapons/Catalyst/PocketGrimoire/Weapon_Pocket_Grimoire.png","Data/Weapons/Catalyst/PocketGrimoire/index.tsx","Data/Weapons/Catalyst/PrototypeAmber/Weapon_Prototype_Amber.png","Data/Weapons/Catalyst/PrototypeAmber/index.tsx","Data/Weapons/Catalyst/RoyalGrimoire/Weapon_Royal_Grimoire.png","Data/Weapons/Catalyst/RoyalGrimoire/index.tsx","Data/Weapons/Catalyst/SacrificialFragments/Weapon_Sacrificial_Fragments.png","Data/Weapons/Catalyst/SacrificialFragments/index.tsx","Data/Weapons/Catalyst/SkywardAtlas/Weapon_Skyward_Atlas.png","Data/Weapons/Catalyst/SkywardAtlas/index.tsx","Data/Weapons/Catalyst/SolarPearl/Weapon_Solar_Pearl.png","Data/Weapons/Catalyst/SolarPearl/index.tsx","Data/Weapons/Catalyst/TheWidsith/Weapon_The_Widsith.png","Data/Weapons/Catalyst/TheWidsith/index.tsx","Data/Weapons/Catalyst/ThrillingTalesOfDragonSlayers/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Data/Weapons/Catalyst/ThrillingTalesOfDragonSlayers/index.tsx","Data/Weapons/Catalyst/TwinNephrite/Weapon_Twin_Nephrite.png","Data/Weapons/Catalyst/TwinNephrite/index.tsx","Data/Weapons/Catalyst/WineAndSong/Weapon_Wine_and_Song.png","Data/Weapons/Catalyst/WineAndSong/index.tsx","Data/Weapons/Catalyst/index.ts","Data/Weapons/index.ts","Util/FormulaUtil.ts","Data/Characters/SheetUtil.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","Util/DocumentUtil.ts","Data/Weapons/Sword/AquilaFavonia/data.ts","Data/Weapons/Sword/FilletBlade/data.ts","Data/Weapons/Sword/PrimordialJadeCutter/data.ts","Data/Weapons/Sword/SkywardBlade/data.ts","Data/Weapons/Sword/SwordOfDescension/data.ts","Data/Weapons/Sword/TheBlackSword/data.ts","Data/Weapons/Sword/TheFlute/data.ts","Data/Weapons/Sword/TravelersHandySword/data.ts","Data/Weapons/Polearm/CrescentPike/data.ts","Data/Weapons/Polearm/DragonspineSpear/data.ts","Data/Weapons/Polearm/EngulfingLightning/data.ts","Data/Weapons/Polearm/Halberd/data.ts","Data/Weapons/Polearm/SkywardSpine/data.ts","Data/Weapons/Polearm/StaffOfHoma/data.ts","Data/Weapons/Claymore/DebateClub/data.ts","Data/Weapons/Claymore/LuxuriousSeaLord/data.ts","Data/Weapons/Claymore/PrototypeArchaic/data.ts","Data/Weapons/Claymore/SkywardPride/data.ts","Data/Weapons/Claymore/SnowTombedStarsilver/data.ts","Data/Weapons/Claymore/TheBell/data.ts","Data/Weapons/Claymore/WhiteIronGreatsword/data.ts","Data/Weapons/Catalyst/EverlastingMoonglow/data.ts","Data/Weapons/Catalyst/EyeOfPerception/data.ts","Data/Weapons/Catalyst/Frostbearer/data.ts","Data/Weapons/Catalyst/OtherworldlyStory/data.ts","Data/Weapons/Catalyst/PrototypeAmber/data.ts","Data/Weapons/Catalyst/SkywardAtlas/data.ts","Data/Weapons/Bow/Messenger/data.ts","Data/Weapons/Bow/RecurveBow/data.ts","Data/Weapons/Bow/SkywardHarp/data.ts","Data/Weapons/Bow/TheViridescentHunt/data.ts"],"names":["atk_s","conditionals","pa","name","maxStack","stats","atk_","weapon","refineIndex","data_gen","img","document","conditional","dmg_s","bft","dmg_","fields","text","ns","key18","formulaText","data","dmg","Stat","printStat","getTalentStatKey","formula","variant","getTalentStatKeyVariant","u","charged_dmg_","skill_dmg_s","skill_dmg_","crit_s","lau","critRate_","burst_","burst_dmg_","rh","bst","f","c","cdRed_","takeDMG_s","w","value","conditionalValues","SerpentSpine","num","unit","dmgc","atkSPD_","condAtk_","r","rg","shield","shield_","gm","states","wo","atk_def_s","infusionBlade","def_","heal","atk_partys","wt","claymore","BlackcliffSlasher","BloodtaintedGreatsword","DebateClub","FavoniusGreatsword","FerrousShadow","KatsuragikiriNagamasa","LithicBlade","LuxuriousSeaLord","OldMercsPal","PrototypeArchaic","Quartz","Rainslasher","RoyalGreatsword","SacrificialGreatsword","SkyriderGreatsword","SkywardPride","SnowTombedStarsilver","SongOfBrokenPines","TheBell","TheUnforged","WasterGreatsword","Whiteblind","WhiteIronGreatsword","WolfsGravestone","refinementVals","bwi","em","refinementVals2","skill_critRate_","cds","auto","normal_dmg_","plunging_dmg_","v","is","ele_dmg_s","ele_dmg_ss","ele","objectFromKeyMap","allElements","ElementalData","canShow","MistsplitterReforged","Object","fromEntries","map","stacks","values","count","path","KeyPath","PrimordialJadeCutter","refinementVals_hp","hp_","modifiers","atk","bonus","st","hp_atk","smashedStone","d","moveSPD_","refinementMoveSpdVals","refinementatkSpdVals","spf","refinementAtkVals","characterKey","startsWith","ih","regen","vals","sword","AmenomaKageuchi","AquilaFavonia","BlackcliffLongsword","CoolSteel","DarkIronSword","DullBlade","FavoniusSword","FesteringDesire","FilletBlade","FreedomSworn","HarbingerOfDawn","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","SilverSword","SkyriderSword","SkywardBlade","SummitShaper","SwordOfDescension","TheAlleyFlash","TheBlackSword","TheFlute","TravelersHandySword","s","refinementSoloVals","g","o2","o1","bfw","enerRech","EngulfingLightning","e","enerRech_","conv","enerRechConv","enerRechMax","fixed","refinementCritVals","refinementDmgVals","l7","a7","ma","crit_","StaffOfHoma","hp","esjadd","hp_atk_add","esj","burstCR_","burst_critRate_","polearm","BeginnersProtector","BlackcliffPole","BlackTassel","CrescentPike","Deathmatch","DragonsBane","DragonspineSpear","FavoniusLance","Halberd","IronPoint","KitainCrossSpear","LithicSpear","PrimordialJadeWingedSpear","PrototypeStarglitter","RoyalSpear","SkywardSpine","TheCatch","VortexVanquisher","WhiteTassel","ug","sw","refinementSpdVals","ia","refinementEM","eleMass","pr","eleMas","normal_dmg_s","charged_dmg_s","skill_","normal_","a","Translate","ss","sgt","weakspotDMG_","critd_s","critDMG_","ww","bow","AlleyHunter","AmosBow","BlackcliffWarbow","CompoundBow","EbonyBow","ElegyForTheEnd","FavoniusWarbow","Hamayumi","HuntersBow","Messenger","MitternachtsWaltz","Predator","PrototypeCrescent","RavenBow","RecurveBow","RoyalBow","Rust","SacrificialBow","SeasonedHuntersBow","SharpshootersOath","SkywardHarp","Slingshot","TheStringless","TheViridescentHunt","ThunderingPulse","WindblumeOde","cdmg_","heal_","hp_conv","norm","characterEle","className","bb","anemo_dmg_","geo_dmg_","electro_dmg_","hydro_dmg_","pyro_dmg_","cryo_dmg_","n","b","refinementEleDmgVals","refinementEleMasVals","i","gt","ws","catalyst","ApprenticesNotes","BlackcliffAgate","DodocoTales","EmeraldOrb","EverlastingMoonglow","EyeOfPerception","FavoniusCodex","Frostbearer","HakushinRing","LostPrayerToTheSacredWinds","MagicGuide","MappaMare","MemoryOfDust","OtherworldlyStory","PocketGrimoire","PrototypeAmber","RoyalGrimoire","SacrificialFragments","SkywardAtlas","SolarPearl","TheWidsith","ThrillingTalesOfDragonSlayers","TwinNephrite","WineAndSong","WeaponData","forEach","documentSectionsProcessing","basicDMGFormula","percent","skillKey","elemental","val","statKey","basicHealingFormula","scaleStatKey","flat","ratio","heal_multi","strKey","normalDocSection","tr","normal","hitArr","percentArr","tlvl","chargedDocSection","stamina","charged","chargedHitsDocSection","test","plungeDocSection","plunging","low","high","claymoreChargedDocSection","spinning","final","stam","maxDuration","bowChargedDocSection","elementKey","hit","full","talentTemplate","talentKey","undefined","sections","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","section","fieldProcessing","finalATK","finalHP","Math","min","hpMulti"],"mappings":"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","file":"static/js/9.59d0c8d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Blackcliff_Slasher.png'\r\n\r\nconst atk_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Bloodtainted_Greatsword.png'\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bft: {\r\n    name: \"Against Opponents affected by Pyro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bft\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Debate_Club.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Favonius_Greatsword.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Ferrous_Shadow.png'\r\n\r\n// const refinementHpVals = [70, 75, 80, 85, 90]\r\nconst dmg_s = [30, 35, 40, 45, 50]\r\nconst conditionals: IConditionals = {\r\n  u: {\r\n    name: \"Low HP\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      charged_dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.u\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Katsuragikiri_Nagamasa.bfb9ec69.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Katsuragikiri_Nagamasa.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst skill_dmg_s = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    skill_dmg_: skill_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ad84ddeb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Lithic_Blade.png'\r\n\r\nconst crit_s = [3, 4, 5, 6, 7]\r\nconst atk_s = [7, 8, 9, 10, 11]\r\nconst conditionals: IConditionals = {\r\n  lau: {\r\n    name: \"Liyue Members\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex],\r\n      critRate_: crit_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.lau\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Luxurious_Sea-Lord.b945fcc3.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Luxurious_Sea-Lord.png'\r\n\r\nconst burst_ = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    burst_dmg_: burst_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Old_Merc\\'s_Pal.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Archaic.d2bf526a.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Prototype_Archaic.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.14ed712d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Quartz.png'\r\n\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  rh: {\r\n    name: \"After Pyro-related Reactions\",\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.rh\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Rainslasher.png'\r\n\r\nconst dmg_s = [20, 24, 28, 32, 36]\r\nconst conditionals: IConditionals = {\r\n  bst: {\r\n    name: \"Against Opponents Affected by Hydro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bst\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Royal_Greatsword.png'\r\n\r\nconst crit_s = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: crit_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sacrificial_Greatsword.png'\r\n\r\n// const refinementVals = [40, 50, 60, 70, 80]\r\n// const refinementCdVals = [30, 26, 22, 19, 16]\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"After Elemental Skill\",\r\n    maxStack: 1,\r\n    stats: () => ({\r\n      cdRed_: 100\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals, IConditionalValue } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Serpent_Spine.png'\r\n\r\nconst dmg_s = [6, 7, 8, 9, 10]\r\nconst takeDMG_s = [3, 2.7, 2.4, 2.2, 2]\r\nconst conditionals: IConditionals = {\r\n  w: {\r\n    name: \"Duration on Field (4s / stack)\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    }),\r\n    fields: [{\r\n      text: \"Take more DMG\",\r\n      value: stats => {\r\n        const value = stats.conditionalValues?.weapon?.SerpentSpine?.w as IConditionalValue | undefined\r\n        const [num,] = value ?? [0]\r\n        return takeDMG_s[stats.weapon.refineIndex] * num\r\n      },\r\n      unit: \"%\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.w\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyrider_Greatsword.png'\r\n\r\nconst atk_s = [6, 7, 8, 9, 10]\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyward_Pride.png'\r\nconst dmg_s = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    dmg_: dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Snow-Tombed_Starsilver.dd5076a9.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Snow-Tombed_Starsilver.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Song_of_Broken_Pines.b8bd0af1.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Song_of_Broken_Pines.png'\r\nconst atk_ = [16, 20, 24, 28, 32]\r\nconst atkSPD_ = [12, 15, 18, 21, 24]\r\nconst condAtk_ = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  r: {\r\n    name: <TransWrapper ns=\"weapon_SongOfBrokenPines\" key18=\"name\" />,\r\n    stats: stats => ({\r\n      atk_: condAtk_[stats.weapon.refineIndex],\r\n      atkSPD_: atkSPD_[stats.weapon.refineIndex],\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    atk_: atk_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.r\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Bell.png'\r\n\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  rg: {\r\n    name: \"Taking DMG\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    fields: [{\r\n      text: \"Shield Absorption\",\r\n      formulaText: stats => <span>{data.shield[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n      formula: formula.shield,\r\n    }],\r\n    conditional: conditionals.rg\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Unforged.png'\r\n\r\nconst shield_ = [20, 25, 30, 35, 40]\r\nconst atk_s = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits\",\r\n    states: {\r\n      wo: {\r\n        name: \"Without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: atk_s[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"With shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * atk_s[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    shield_: shield_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Waster_Greatsword.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Whiteblind.png'\r\nconst atk_def_s = [6, 7.5, 9, 10.5, 12]\r\nconst conditionals: IConditionals = {\r\n  infusionBlade: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: atk_def_s[stats.weapon.refineIndex],\r\n      def_: atk_def_s[stats.weapon.refineIndex]\r\n    }),\r\n    fields: [{\r\n      text: \"Duration\",\r\n      value: \"6s\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.infusionBlade\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_White_Iron_Greatsword.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Wolf\\'s_Gravestone.png'\r\n\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst atk_partys = [40, 50, 60, 70, 80]\r\nconst conditionals: IConditionals = {\r\n  wt: {\r\n    name: \"Attacked Opponent with Low HP\",//TODO: party buff\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: atk_partys[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    atk_: atk_s[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.wt\r\n  }],\r\n}\r\nexport default weapon","import BlackcliffSlasher from './BlackcliffSlasher'\r\nimport BloodtaintedGreatsword from './BloodtaintedGreatsword'\r\nimport DebateClub from './DebateClub'\r\nimport FavoniusGreatsword from './FavoniusGreatsword'\r\nimport FerrousShadow from './FerrousShadow'\r\nimport KatsuragikiriNagamasa from './KatsuragikiriNagamasa'\r\nimport LithicBlade from './LithicBlade'\r\nimport LuxuriousSeaLord from './LuxuriousSeaLord'\r\nimport OldMercsPal from './OldMercsPal'\r\nimport PrototypeArchaic from './PrototypeArchaic'\r\nimport Quartz from './Quartz'\r\nimport Rainslasher from './Rainslasher'\r\nimport RoyalGreatsword from './RoyalGreatsword'\r\nimport SacrificialGreatsword from './SacrificialGreatsword'\r\nimport SerpentSpine from './SerpentSpine'\r\nimport SkyriderGreatsword from './SkyriderGreatsword'\r\nimport SkywardPride from './SkywardPride'\r\nimport SnowTombedStarsilver from './SnowTombedStarsilver'\r\nimport SongOfBrokenPines from './SongOfBrokenPines'\r\nimport TheBell from './TheBell'\r\nimport TheUnforged from './TheUnforged'\r\nimport WasterGreatsword from './WasterGreatsword'\r\nimport Whiteblind from './Whiteblind'\r\nimport WhiteIronGreatsword from './WhiteIronGreatsword'\r\nimport WolfsGravestone from './WolfsGravestone'\r\nconst claymore = {\r\n  BlackcliffSlasher,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FavoniusGreatsword,\r\n  FerrousShadow,\r\n  KatsuragikiriNagamasa,\r\n  LithicBlade,\r\n  LuxuriousSeaLord,\r\n  OldMercsPal,\r\n  PrototypeArchaic,\r\n  Quartz,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SacrificialGreatsword,\r\n  SerpentSpine,\r\n  SkyriderGreatsword,\r\n  SkywardPride,\r\n  SnowTombedStarsilver,\r\n  SongOfBrokenPines,\r\n  TheBell,\r\n  TheUnforged,\r\n  WasterGreatsword,\r\n  Whiteblind,\r\n  WhiteIronGreatsword,\r\n  WolfsGravestone,\r\n} as const\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Amenoma_Kageuchi.ec7856ba.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Amenoma_Kageuchi.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Aquila_Favonia.png'\r\nconst atk_ = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    atk_: atk_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalATK\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }, {\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Blackcliff_Longsword.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Cool_Steel.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bwi: {\r\n    name: \"Against Opponents Affected by Hydro/Cryo\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bwi\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Dark_Iron_Sword.png'\r\n\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  em: {\r\n    name: \"After Electro-related reactions\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.em\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Dull_Blade.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Favonius_Sword.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Festering_Desire.184574f4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Festering_Desire.png'\r\n\r\nconst refinementVals = [16, 20, 24, 28, 32]\r\nconst refinementVals2 = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    skill_critRate_: refinementVals2[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Fillet_Blade.png'\r\nconst cds = [15, 14, 13, 12, 11]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"CD\",\r\n      value: stats => `${cds[stats.weapon.refineIndex]}s`\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Freedom-Sworn.0f5d8fed.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Freedom-Sworn.png'\r\nconst dmg_ = [10, 12.5, 15, 17.5, 20]\r\nconst auto = [16, 20, 24, 28, 32]\r\nconst atk_ = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  r: {\r\n    name: <TransWrapper ns=\"weapon_FreedomSworn\" key18=\"name\" />,\r\n    stats: stats => ({\r\n      atk_: atk_[stats.weapon.refineIndex],\r\n      normal_dmg_: auto[stats.weapon.refineIndex],\r\n      charged_dmg_: auto[stats.weapon.refineIndex],\r\n      plunging_dmg_: auto[stats.weapon.refineIndex],\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    dmg_: dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.r\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Harbinger_of_Dawn.png'\r\n\r\nconst refinementVals = [14, 17.5, 21, 24.5, 28]\r\nconst conditionals: IConditionals = {\r\n  v: {\r\n    name: \"HP > 90%\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      critRate_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.v\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Iron_Sting.png'\r\n\r\nconst refinementVals = [6, 7.5, 9, 10.5, 12]\r\nconst conditionals: IConditionals = {\r\n  is: {\r\n    name: \"Elemental Hits\",\r\n    maxStack: 2,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.is\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Lion\\'s_Roar.png'\r\n\r\nconst refinementVals = [20, 24, 28, 32, 36]\r\nconst conditionals: IConditionals = {\r\n  bft: {\r\n    name: \"Against Opponents Affected by Pyro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bft\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Mistsplitter_Reforged.f731d31b.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Mistsplitter_Reforged.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { IConditionals, IConditionalValue } from '../../../../Types/IConditional'\r\nimport { allElements } from '../../../../Types/consts'\r\nimport ElementalData from '../../../ElementalData'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport { objectFromKeyMap } from '../../../../Util/Util'\r\nconst ele_dmg_s = [12, 15, 18, 21, 24]\r\nconst ele_dmg_ss = [\r\n  [8, 16, 28],\r\n  [10, 20, 35],\r\n  [12, 24, 42],\r\n  [14, 28, 49],\r\n  [16, 32, 56]\r\n]\r\nconst conditionals: IConditionals = {\r\n  ele: {\r\n    name: <TransWrapper ns=\"weapon_MistsplitterReforged\" key18=\"ele\" />,\r\n    states: objectFromKeyMap(allElements, ele => ({\r\n      name: ElementalData[ele].name\r\n    }))\r\n  },\r\n  em: {//Emblem\r\n    canShow: stats => {\r\n      const value = stats.conditionalValues?.weapon?.MistsplitterReforged?.ele as IConditionalValue | undefined\r\n      if (!value) return false\r\n      const [num,] = value\r\n      if (!num) return false\r\n      return true\r\n    },\r\n    name: <TransWrapper ns=\"weapon_MistsplitterReforged\" key18=\"emblem\" />,\r\n    states: Object.fromEntries([1, 2, 3].map(stacks => [stacks, {\r\n      name: <TransWrapper ns=\"sheet\" key18=\"stack\" values={{ count: stacks }} />,\r\n      stats: stats => {\r\n        const [num, ele] = stats.conditionalValues?.weapon?.MistsplitterReforged?.ele ?? [0, \"\"] as IConditionalValue | undefined\r\n        if (!num || !ele) return {}\r\n        return {\r\n          [`${ele}_dmg_`]: ele_dmg_ss[stats.weapon.refineIndex][stacks - 1]\r\n        }\r\n      }\r\n    }]))\r\n\r\n  }\r\n\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => Object.fromEntries(allElements.map(ele => [`${ele}_dmg_`, ele_dmg_s[stats.weapon.refineIndex]])),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ele,\r\n  }, {\r\n    conditional: conditionals.em,\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Cutter.0d11f9b7.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Primordial_Jade_Cutter.png'\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst path = KeyPath<FormulaPathBase>().weapon.PrimordialJadeCutter\r\nconst refinementVals_hp = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    hp_: refinementVals_hp[stats.weapon.refineIndex],\r\n    modifiers: { atk: [path.bonus()] }\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>{data.hp_atk[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.bonus,\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Prototype_Rancour.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  smashedStone: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      def_: refinementVals[stats.weapon.refineIndex]\r\n    }),\r\n    fields: [{\r\n      text: \"Duration\",\r\n      value: \"6s\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.smashedStone\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Royal_Longsword.png'\r\n\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sacrificial_Sword.png'\r\n\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"Elemental Skill Resets CD\",\r\n    maxStack: 1,\r\n    stats: () => ({\r\n      cdRed_: 100\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Silver_Sword.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyrider_Sword.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  d: {\r\n    name: \"After Elemental Burst\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      moveSPD_: refinementVals[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.d\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyward_Blade.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst refinementMoveSpdVals = [10, 10, 10, 10, 10]\r\nconst refinementatkSpdVals = [10, 10, 10, 10, 10]\r\nconst conditionals: IConditionals = {\r\n  spf: {\r\n    name: \"After Elemental Burst\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      moveSPD_: refinementMoveSpdVals[stats.weapon.refineIndex],\r\n      atkSPD_: refinementatkSpdVals[stats.weapon.refineIndex],\r\n    }),\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    critRate_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.spf\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Summit_Shaper.62f1f0d9.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Summit_Shaper.png'\r\n\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst refinementAtkVals = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits\",\r\n    states: {\r\n      wo: {\r\n        name: \"Without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: refinementAtkVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"With shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * refinementAtkVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    shield_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sword_of_Descension.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => stats.characterKey?.startsWith(\"Traveler\") ? {\r\n    atk: 66\r\n  } : {},\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>200% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.b7659861.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Alley_Flash.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  ih: {\r\n    name: \"Not Taking DMG\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ih\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_The_Black_Sword.png'\r\nimport formula, { data } from './data'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    normal_dmg_: data.dmg_[stats.weapon.refineIndex],\r\n    charged_dmg_: data.dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.regen,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","import { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_The_Flute.png'\r\nimport formula, { data } from './data'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.vals[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","import AmenomaKageuchi from './AmenomaKageuchi'\r\nimport AquilaFavonia from './AquilaFavonia'\r\nimport BlackcliffLongsword from './BlackcliffLongsword'\r\nimport CoolSteel from './CoolSteel'\r\nimport DarkIronSword from './DarkIronSword'\r\nimport DullBlade from './DullBlade'\r\nimport FavoniusSword from './FavoniusSword'\r\nimport FesteringDesire from './FesteringDesire'\r\nimport FilletBlade from './FilletBlade'\r\nimport FreedomSworn from './FreedomSworn'\r\nimport HarbingerOfDawn from './HarbingerOfDawn'\r\nimport IronSting from './IronSting'\r\nimport LionsRoar from './LionsRoar'\r\nimport MistsplitterReforged from './MistsplitterReforged'\r\nimport PrimordialJadeCutter from './PrimordialJadeCutter'\r\nimport PrototypeRancour from './PrototypeRancour'\r\nimport RoyalLongsword from './RoyalLongsword'\r\nimport SacrificialSword from './SacrificialSword'\r\nimport SilverSword from './SilverSword'\r\nimport SkyriderSword from './SkyriderSword'\r\nimport SkywardBlade from './SkywardBlade'\r\nimport SummitShaper from './SummitShaper'\r\nimport SwordOfDescension from './SwordOfDescension'\r\nimport TheAlleyFlash from './TheAlleyFlash'\r\nimport TheBlackSword from './TheBlackSword'\r\nimport TheFlute from './TheFlute'\r\nimport TravelersHandySword from './TravelersHandySword'\r\nconst sword = {\r\n  AmenomaKageuchi,\r\n  AquilaFavonia,\r\n  BlackcliffLongsword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  DullBlade,\r\n  FavoniusSword,\r\n  FesteringDesire,\r\n  FilletBlade,\r\n  FreedomSworn,\r\n  HarbingerOfDawn,\r\n  IronSting,\r\n  LionsRoar,\r\n  MistsplitterReforged,\r\n  PrimordialJadeCutter,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  SilverSword,\r\n  SkyriderSword,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n  SwordOfDescension,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  TravelersHandySword,\r\n} as const\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Beginner\\'s_Protector.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Blackcliff_Pole.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Black_Tassel.png'\r\n\r\nconst dmg_s = [40, 50, 60, 70, 80]\r\nconst conditionals: IConditionals = {\r\n  s: {\r\n    name: \"Against Slimes\",\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex],\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.s\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","import { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Crescent_Pike.png'\r\nimport formula, { data } from './data'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Deathmatch.png'\r\nconst refinementVals = [16, 20, 24, 28, 32]\r\nconst refinementSoloVals = [24, 30, 36, 42, 48]\r\nconst conditionals: IConditionals = {\r\n  g: {\r\n    name: \"\",\r\n    states: {\r\n      o2: {\r\n        name: \"At least 2 opponents\",\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex],\r\n          def_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      o1: {\r\n        name: \"Less than 2 opponents\",\r\n        stats: stats => ({\r\n          atk_: refinementSoloVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.g\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Dragon\\'s_Bane.png'\r\n\r\nconst dmg_s = [20, 24, 28, 32, 36]\r\nconst conditionals: IConditionals = {\r\n  bfw: {\r\n    name: \"Against Opponents Affected by Hydro/Pyro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bfw\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Dragonspine_Spear.a9e18e36.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Dragonspine_Spear.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Engulfing_Lightning.2ca08a30.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Engulfing_Lightning.png'\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst enerRech = [30, 35, 40, 45, 50, 55]\r\nconst path = KeyPath<FormulaPathBase>().weapon.EngulfingLightning\r\nconst conditionals: IConditionals = {\r\n  e: {\r\n    name: st(\"afterUse.burst\"),\r\n    stats: stats => ({\r\n      enerRech_: enerRech[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: {\r\n    modifiers: { atk_: [path.conv()] }\r\n  },\r\n  conditionals,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>Min( {data.enerRechConv[stats.weapon.refineIndex]}% * ( {Stat.printStat(\"enerRech_\", stats, true)} - 100% ) , {data.enerRechMax[stats.weapon.refineIndex]}% )</span>,\r\n      formula: formula.conv,\r\n      fixed: 1,\r\n      unit: \"%\",\r\n    }],\r\n    conditional: conditionals.e\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Favonius_Lance.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Halberd.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Iron_Point.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Kitain_Cross_Spear.ed8bd9cc.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Kitain_Cross_Spear.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst skill_dmg_s = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    skill_dmg_: skill_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.db446b21.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Lithic_Spear.png'\r\n\r\nconst refinementCritVals = [3, 4, 5, 6, 7]\r\nconst refinementAtkVals = [7, 8, 9, 10, 11]\r\nconst conditionals: IConditionals = {\r\n  lau: {\r\n    name: \"Liyue Members\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: refinementAtkVals[stats.weapon.refineIndex],\r\n      critRate_: refinementCritVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.lau\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Primordial_Jade_Winged-Spear.png'\r\n\r\nconst refinementVals = [3.2, 3.9, 4.6, 5.3, 6]\r\nconst refinementDmgVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  e: {\r\n    name: \"On Hit\",\r\n    states: {\r\n      l7: {\r\n        name: \"On Hit\",\r\n        maxStack: 6,\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      a7: {\r\n        name: \"At 7 stacks\",\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex] * 7,\r\n          dmg_: refinementDmgVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.e\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Starglitter.64b3a263.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Prototype_Starglitter.png'\r\n\r\nconst dmg_ = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  ma: {\r\n    name: st(\"afterUse.skill\"),\r\n    maxStack: 2,\r\n    stats: stats => ({\r\n      normal_dmg_: dmg_[stats.weapon.refineIndex],\r\n      charged_dmg_: dmg_[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ma\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Royal_Spear.png'\r\n\r\nconst crit_ = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: crit_[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyward_Spine.png'\r\n\r\nconst crit_ = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    critRate_: crit_[stats.weapon.refineIndex],\r\n    atkSPD_: 12\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Staff_of_Homa.b8d62b3c.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Staff_of_Homa.png'\r\nimport formula, { data } from './data'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst path = KeyPath<FormulaPathBase>().weapon.StaffOfHoma\r\nconst refinementVals_hp = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  hp: {\r\n    name: \"HP < 50%\",\r\n    maxStack: 1,\r\n    stats: {\r\n      modifiers: { atk: [path.esjadd()] }\r\n    },\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>{data.hp_atk_add[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.esjadd,\r\n    }],\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    hp_: refinementVals_hp[stats.weapon.refineIndex],\r\n    modifiers: { atk: [path.esj()] }\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>{data.hp_atk[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.esj,\r\n    }],\r\n    conditional: conditionals.hp\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Catch.d95cc535.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Catch.png'\r\n\r\nconst burst_ = [16, 20, 24, 28, 32]\r\nconst burstCR_ = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    burst_dmg_: burst_[stats.weapon.refineIndex],\r\n    burst_critRate_: burstCR_[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Vortex_Vanquisher.png'\r\n\r\nconst shield_ = [20, 25, 30, 35, 40]\r\nconst atk_ = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits\",\r\n    states: {\r\n      wo: {\r\n        name: \"Without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: atk_[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"With shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * atk_[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    shield_: shield_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_White_Tassel.png'\r\n\r\nconst dmg_ = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    normal_dmg_: dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","import BeginnersProtector from './BeginnersProtector'\r\nimport BlackcliffPole from './BlackcliffPole'\r\nimport BlackTassel from './BlackTassel'\r\nimport CrescentPike from './CrescentPike'\r\nimport Deathmatch from './Deathmatch'\r\nimport DragonsBane from './DragonsBane'\r\nimport DragonspineSpear from './DragonspineSpear'\r\nimport EngulfingLightning from './EngulfingLightning'\r\nimport FavoniusLance from './FavoniusLance'\r\nimport Halberd from './Halberd'\r\nimport IronPoint from './IronPoint'\r\nimport KitainCrossSpear from './KitainCrossSpear'\r\nimport LithicSpear from './LithicSpear'\r\nimport PrimordialJadeWingedSpear from './PrimordialJadeWingedSpear'\r\nimport PrototypeStarglitter from './PrototypeStarglitter'\r\nimport RoyalSpear from './RoyalSpear'\r\nimport SkywardSpine from './SkywardSpine'\r\nimport StaffOfHoma from './StaffOfHoma'\r\nimport TheCatch from './TheCatch'\r\nimport VortexVanquisher from './VortexVanquisher'\r\nimport WhiteTassel from './WhiteTassel'\r\nconst polearm = {\r\n  BeginnersProtector,\r\n  BlackcliffPole,\r\n  BlackTassel,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  DragonspineSpear,\r\n  EngulfingLightning,\r\n  FavoniusLance,\r\n  Halberd,\r\n  IronPoint,\r\n  KitainCrossSpear,\r\n  LithicSpear,\r\n  PrimordialJadeWingedSpear,\r\n  PrototypeStarglitter,\r\n  RoyalSpear,\r\n  SkywardSpine,\r\n  StaffOfHoma,\r\n  TheCatch,\r\n  VortexVanquisher,\r\n  WhiteTassel,\r\n} as const\r\nexport default polearm","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.4511e15b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Alley_Hunter.png'\r\n\r\nconst refinementVals = [2, 2.5, 3, 3.5, 4]\r\nconst conditionals: IConditionals = {\r\n  ug: {\r\n    name: \"Duration not on Field (1s / stack)\",\r\n    maxStack: 10,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ug\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Amos\\'_Bow.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst refinementDmgVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  sw: {\r\n    name: \"Arrow Flight Duration (0.1s / stack)\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      normal_dmg_: refinementDmgVals[stats.weapon.refineIndex],\r\n      charged_dmg_: refinementDmgVals[stats.weapon.refineIndex]\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    normal_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    charged_dmg_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.sw\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Blackcliff_Warbow.png'\r\n\r\nconst atk_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Compound_Bow.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst refinementSpdVals = [1.2, 1.5, 1.8, 2.1, 2.4]\r\nconst conditionals: IConditionals = {\r\n  ia: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      atkSPD_: refinementSpdVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ia\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Ebony_Bow.png'\r\n\r\nconst dmg_s = [40, 50, 60, 70, 80]\r\nconst conditionals: IConditionals = {\r\n  d: {\r\n    name: \"Against Ruin Opponents\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.d\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Elegy_for_the_End.73b73f92.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Elegy_for_the_End.png'\r\n\r\nconst refinementEM = [60, 75, 90, 105, 120]\r\nconst eleMass = [100, 125, 150, 175, 200]\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  pr: {\r\n    name: \"Millennial Movement: Farewell Song\",\r\n    stats: stats => ({\r\n      eleMas: eleMass[stats.weapon.refineIndex],\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    eleMas: refinementEM[stats.weapon.refineIndex],\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pr\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Favonius_Warbow.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Hamayumi.02e14781.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Hamayumi.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nconst normal_dmg_s = [16, 20, 24, 28, 32]\r\nconst charged_dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  e: {//100% energy\r\n    name: <TransWrapper ns=\"weapon_Hamayumi\" key18=\"ener\" />,\r\n    stats: stats => ({\r\n      normal_dmg_: normal_dmg_s[stats.weapon.refineIndex],\r\n      charged_dmg_: charged_dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    normal_dmg_: normal_dmg_s[stats.weapon.refineIndex],\r\n    charged_dmg_: charged_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.e\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Hunter\\'s_Bow.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Messenger.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Mitternachts_Waltz.a3cd83a8.png\";","import { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Mitternachts_Waltz.png'\r\nconst skill_ = [20, 25, 30, 35, 40]\r\nconst normal_ = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  a: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.normal\" />,\r\n    stats: stats => ({\r\n      skill_dmg_: skill_[stats.weapon.refineIndex],\r\n    })\r\n  },\r\n  s: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.skill\" />,\r\n    stats: stats => ({\r\n      normal_dmg_: normal_[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.a\r\n  }, {\r\n    conditional: conditionals.s\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Predator.64335e58.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { sgt, st } from '../../../Characters/SheetUtil'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Predator.png'\r\n\r\nconst conditionals: IConditionals = {\r\n  ss: {\r\n    name: st(\"hitOp.cryo\"),\r\n    maxStack: 2,\r\n    stats: {\r\n      normal_dmg_: 10,\r\n      charged_dmg_: 10,\r\n    },\r\n    fields: [{\r\n      text: sgt(\"duration\"),\r\n      value: 6,\r\n      unit: \"s\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => {\r\n    if (stats.characterKey === \"Aloy\") return {\r\n      atk: 66\r\n    }\r\n    return undefined\r\n  },\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ss\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Prototype_Crescent.png'\r\n\r\nconst atk_s = [36, 45, 54, 63, 72]\r\nconst conditionals: IConditionals = {\r\n  u: {\r\n    name: \"Against Weak Points\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      moveSPD_: 10,\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.u\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Raven_Bow.png'\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bfw: {\r\n    name: \"Against Opponents Affected by Hydro/Pyro\",\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bfw\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Recurve_Bow.png'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Royal_Bow.png'\r\n\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Rust.png'\r\n\r\nconst refinementVals = [40, 50, 60, 70, 80]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    normal_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    charged_dmg_: -10\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","import { WeaponData } from 'pipeline'\r\n// import { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sacrificial_Bow.png'\r\n\r\n// const refinementVals = [40, 50, 60, 70, 80]\r\n// const refinementCdVals = [30, 26, 22, 19, 16]\r\n// const conditionals: IConditionals = {\r\n//   c: {\r\n//     name: \"Elemental Skill Ends CD\",\r\n//     stats: { cdRed_: 100 }),\r\n//   }\r\n// }\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  // conditionals,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sharpshooter\\'s_Oath.png'\r\n\r\nconst refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    weakspotDMG_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyward_Harp.png'\r\n\r\nconst critd_s = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    critDMG_: critd_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>125% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Slingshot.png'\r\n\r\nconst refinementVals = [36, 42, 48, 54, 60]\r\nconst conditionals: IConditionals = {\r\n  s: {\r\n    name: \"Normal/Charged Attack Hits within 0.3s\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      // TODO: Shouldn't we exclude elemental skill/burst?\r\n      dmg_: refinementVals[stats.weapon.refineIndex] + 10//+10 to neutralize the -10\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: () => ({\r\n    dmg_: -10\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.s\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Stringless.png'\r\n\r\nconst refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    burst_dmg_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Viridescent_Hunt.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <Translate ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.vals[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Thundering_Pulse.8ed15b35.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Thundering_Pulse.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst ele_dmg_ss = [\r\n  [12, 24, 40],\r\n  [15, 30, 50],\r\n  [18, 36, 60],\r\n  [21, 42, 70],\r\n  [24, 48, 80]\r\n]\r\nconst conditionals: IConditionals = {\r\n  em: {\r\n    name: <TransWrapper ns=\"weapon_ThunderingPulse\" key18=\"emblem\" />,\r\n    states: Object.fromEntries([1, 2, 3].map(stacks => [stacks, {\r\n      name: <TransWrapper ns=\"sheet\" key18=\"stack\" values={{ count: stacks }} />,\r\n      stats: stats => {\r\n        return {\r\n          normal_dmg_: ele_dmg_ss[stats.weapon.refineIndex][stacks - 1]\r\n        }\r\n      }\r\n    }]))\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({ atk_: atk_s[stats.weapon.refineIndex] }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.em,\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Windblume_Ode.f38d3c91.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Windblume_Ode.png'\r\n\r\nconst atk_s = [16, 20, 24, 28, 32]\r\nconst conditionals: IConditionals = {\r\n  ww: {\r\n    name: \"After Elemental Skill\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ww\r\n  }],\r\n}\r\nexport default weapon","import AlleyHunter from './AlleyHunter'\r\nimport AmosBow from './AmosBow'\r\nimport BlackcliffWarbow from './BlackcliffWarbow'\r\nimport CompoundBow from './CompoundBow'\r\nimport EbonyBow from './EbonyBow'\r\nimport ElegyForTheEnd from './ElegyForTheEnd'\r\nimport FavoniusWarbow from './FavoniusWarbow'\r\nimport Hamayumi from './Hamayumi'\r\nimport HuntersBow from './HuntersBow'\r\nimport Messenger from './Messenger'\r\nimport MitternachtsWaltz from './MitternachtsWaltz'\r\nimport Predator from './Predator'\r\nimport PrototypeCrescent from './PrototypeCrescent'\r\nimport RavenBow from './RavenBow'\r\nimport RecurveBow from './RecurveBow'\r\nimport RoyalBow from './RoyalBow'\r\nimport Rust from './Rust'\r\nimport SacrificialBow from './SacrificialBow'\r\nimport SeasonedHuntersBow from './SeasonedHuntersBow'\r\nimport SharpshootersOath from './SharpshootersOath'\r\nimport SkywardHarp from './SkywardHarp'\r\nimport Slingshot from './Slingshot'\r\nimport TheStringless from './TheStringless'\r\nimport TheViridescentHunt from './TheViridescentHunt'\r\nimport ThunderingPulse from './ThunderingPulse'\r\nimport WindblumeOde from './WindblumeOde'\r\nconst bow = {\r\n  AlleyHunter,\r\n  AmosBow,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  EbonyBow,\r\n  ElegyForTheEnd,\r\n  FavoniusWarbow,\r\n  Hamayumi,\r\n  HuntersBow,\r\n  Messenger,\r\n  MitternachtsWaltz,\r\n  Predator,\r\n  PrototypeCrescent,\r\n  RavenBow,\r\n  RecurveBow,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  SeasonedHuntersBow,\r\n  SharpshootersOath,\r\n  SkywardHarp,\r\n  Slingshot,\r\n  TheStringless,\r\n  TheViridescentHunt,\r\n  ThunderingPulse,\r\n  WindblumeOde,\r\n} as const\r\nexport default bow","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Apprentice\\'s_Notes.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Blackcliff_Amulet.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Dodoco_Tales.c3b0c989.png\";","import { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Dodoco_Tales.png'\r\nconst cdmg_ = [16, 20, 24, 28, 32]\r\nconst atk_ = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  a: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.normal\" />,\r\n    stats: stats => ({\r\n      charged_dmg_: cdmg_[stats.weapon.refineIndex],\r\n    })\r\n  },\r\n  c: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.charged\" />,\r\n    stats: stats => ({\r\n      atk_: atk_[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.a\r\n  }, {\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Emerald_Orb.png'\r\n\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  r: {\r\n    name: \"After Hydro-Related Reactions\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.r\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Everlasting_Moonglow.6872b535.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Everlasting_Moonglow.png'\r\n\r\nconst heal_ = [10, 12.5, 15, 17.5, 20]\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    heal_: heal_[stats.weapon.refineIndex],\r\n  }),\r\n  document: [{\r\n    fields: [\r\n      {\r\n        text: <TransWrapper ns=\"weapon_EverlastingMoonglow\" key18=\"name\" />,\r\n        formulaText: stats => <span>{data.hp_conv[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)} * {Stat.printStat(getTalentStatKey(\"elemental\", stats) + \"_multi\", stats)}</span>,\r\n        formula: formula.norm,\r\n        variant: stats => stats.characterEle\r\n      },\r\n      {\r\n        text: <span className=\"text-warning\">The normal damage increase is not currently being added to the character's normal damage as a singular damage number.</span>\r\n      }\r\n    ],\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Eye_of_Perception.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Favonius_Codex.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Frostbearer.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Hakushin_Ring.85bb77bb.png\";","import { WeaponData } from 'pipeline'\r\n// import { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Hakushin_Ring.png'\r\n\r\n// const refinementVals = [20, 25, 30, 35, 40]\r\n// const conditionals: IConditionals = {\r\n//   r: {\r\n//     name: \"After Electro Elemental Reaction\",\r\n//     maxStack: 1,\r\n//     stats: stats => ({\r\n//       atk_: refinementVals[stats.weapon.refineIndex]\r\n//     })\r\n//   }\r\n// }//TODO: party elemental bonus\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  // conditionals,\r\n  // document: [{\r\n  //   conditional: conditionals.r\r\n  // }],\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\n\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  bb: {\r\n    name: \"Duration on Field (4s / stack)\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      anemo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      geo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      electro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      hydro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      pyro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      cryo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: () => ({\r\n    moveSPD_: 10\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bb\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Magic_Guide.png'\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bst: {\r\n    name: \"Against Opponents Accefted by Hydro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bst\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Mappa_Mare.png'\r\n\r\nconst dmg_s = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  is: {\r\n    name: \"Elemental Reactions\",\r\n    maxStack: 2,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.is\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Memory_of_Dust.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits on opponents\",\r\n    states: {\r\n      wo: {\r\n        name: \"Hits without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"Hits with shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Otherworldly_Story.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Pocket_Grimoire.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Amber.4ab08cb6.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Prototype_Amber.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{//TODO: party heal\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Royal_Grimoire.png'\r\n\r\nconst crit_s = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: crit_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sacrificial_Fragments.png'\r\n\r\n// const refinementVals = [40, 50, 60, 70, 80]\r\n// const refinementCdVals = [30, 26, 22, 19, 16]\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"After Elemental Skill\",\r\n    maxStack: 1,\r\n    stats: () => ({\r\n      cdRed_: 100\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyward_Atlas.png'\r\n\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    anemo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    geo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    electro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    hydro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    pyro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    cryo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Solar_Pearl.png'\r\nconst conditionals: IConditionals = {\r\n  ss: {\r\n    name: \"Hits\",\r\n    states: {\r\n      n: {\r\n        name: \"Normal attack\",\r\n        stats: stats => ({\r\n          skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n          burst_dmg_: refinementVals[stats.weapon.refineIndex],\r\n        })\r\n      },\r\n      s: {\r\n        name: \"Skill or Burst\",\r\n        stats: stats => ({\r\n          normal_dmg_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      b: {\r\n        name: \"Both Normal & Skill/Burst\",\r\n        stats: stats => ({\r\n          skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n          burst_dmg_: refinementVals[stats.weapon.refineIndex],\r\n          normal_dmg_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ss\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","import { WeaponData } from 'pipeline'\r\nimport { allElements } from '../../../../Types/consts'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Widsith.png'\r\n\r\nconst refinementAtkVals = [60, 75, 90, 105, 120]\r\nconst refinementEleDmgVals = [48, 60, 72, 84, 96]\r\nconst refinementEleMasVals = [240, 300, 360, 420, 480]\r\nconst conditionals: IConditionals = {\r\n  d: {\r\n    name: \"\",\r\n    states: {\r\n      r: {\r\n        name: \"Recitative\",\r\n        stats: stats => ({\r\n          atk_: refinementAtkVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      a: {\r\n        name: \"Aria\",\r\n        maxStack: 1,\r\n        stats: stats => Object.fromEntries(allElements.map(ele => [`${ele}_dmg_`, refinementEleDmgVals[stats.weapon.refineIndex]]))\r\n      },\r\n      i: {\r\n        name: \"Interlude\",\r\n        stats: stats => ({\r\n          eleMas: refinementEleMasVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.d\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\n\r\n// const refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,  //TODO: show this up as a conditional when in the party\r\n  document: []\r\n  // conditional: {\r\n  //   type: \"weapon\",\r\n  //   sourceKey: \"ThrillingTalesOfDragonSlayers\",\r\n  //   maxStack: 1,\r\n  //   stats: stats => ({\r\n  //     atk_: refinementVals[stats.weapon.refineIndex]\r\n  //   })\r\n  // }\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Twin_Nephrite.png'\r\n\r\nconst refinementVals = [12, 14, 16, 18, 20]\r\nconst conditionals: IConditionals = {\r\n  gt: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      moveSPD_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gt\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.787df5e4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Wine_and_Song.png'\r\n\r\n// const refinementSprintVals = [14, 16, 18, 20, 22]\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  ws: {\r\n    name: \"After Sprint\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex],//TODO: stamine decrease for sprint\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ws\r\n  }],\r\n}\r\nexport default weapon","import ApprenticesNotes from './ApprenticesNotes'\r\nimport BlackcliffAgate from './BlackcliffAgate'\r\nimport DodocoTales from './DodocoTales'\r\nimport EmeraldOrb from './EmeraldOrb'\r\nimport EverlastingMoonglow from './EverlastingMoonglow'\r\nimport EyeOfPerception from './EyeOfPerception'\r\nimport FavoniusCodex from './FavoniusCodex'\r\nimport Frostbearer from './Frostbearer'\r\nimport HakushinRing from './HakushinRing'\r\nimport LostPrayerToTheSacredWinds from './LostPrayerToTheSacredWinds'\r\nimport MagicGuide from './MagicGuide'\r\nimport MappaMare from './MappaMare'\r\nimport MemoryOfDust from './MemoryOfDust'\r\nimport OtherworldlyStory from './OtherworldlyStory'\r\nimport PocketGrimoire from './PocketGrimoire'\r\nimport PrototypeAmber from './PrototypeAmber'\r\nimport RoyalGrimoire from './RoyalGrimoire'\r\nimport SacrificialFragments from './SacrificialFragments'\r\nimport SkywardAtlas from './SkywardAtlas'\r\nimport SolarPearl from './SolarPearl'\r\nimport TheWidsith from './TheWidsith'\r\nimport ThrillingTalesOfDragonSlayers from './ThrillingTalesOfDragonSlayers'\r\nimport TwinNephrite from './TwinNephrite'\r\nimport WineAndSong from './WineAndSong'\r\nconst catalyst = {\r\n  ApprenticesNotes,\r\n  BlackcliffAgate,\r\n  DodocoTales,\r\n  EmeraldOrb,\r\n  EverlastingMoonglow,\r\n  EyeOfPerception,\r\n  FavoniusCodex,\r\n  Frostbearer,\r\n  HakushinRing,\r\n  LostPrayerToTheSacredWinds,\r\n  MagicGuide,\r\n  MappaMare,\r\n  MemoryOfDust,\r\n  OtherworldlyStory,\r\n  PocketGrimoire,\r\n  PrototypeAmber,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SkywardAtlas,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  WineAndSong,\r\n} as const\r\nexport default catalyst","import claymore from './Claymore'\r\nimport sword from './Sword'\r\nimport polearm from './Polearm'\r\nimport bow from './Bow'\r\nimport catalyst from './Catalyst'\r\nimport { IWeaponSheets } from '../../Types/weapon'\r\nimport { documentSectionsProcessing } from '../../Util/DocumentUtil'\r\n\r\nconst WeaponData: IWeaponSheets = {\r\n  ...sword,\r\n  ...claymore,\r\n  ...polearm,\r\n  ...bow,\r\n  ...catalyst\r\n} as const\r\nObject.values(WeaponData).forEach(weapon => weapon.document && documentSectionsProcessing(weapon.document))\r\nexport default WeaponData","import { getTalentStatKey } from \"../Build/Build\"\r\nimport { StatKey } from \"../Types/artifact\"\r\nimport { FormulaItem } from \"../Types/character\"\r\nimport { ElementKey } from \"../Types/consts\"\r\nimport { BasicStats } from \"../Types/stats\"\r\n\r\n//for basic formula in the format of \"percent/100 * s[statKey]\"\r\nexport function basicDMGFormula(percent: number, stats: BasicStats, skillKey: string, elemental?: \"physical\" | ElementKey): FormulaItem {\r\n  const val = percent / 100\r\n  const statKey = getTalentStatKey(skillKey, stats, elemental)\r\n  return [s => val * s[statKey], [statKey]]\r\n}\r\nexport function basicHealingFormula(percent: number, scaleStatKey: StatKey, flat: number = 0): FormulaItem {\r\n  const ratio = percent / 100\r\n  return [s => ((ratio * s[scaleStatKey]) + flat) * s.heal_multi, [scaleStatKey, \"heal_multi\"]]\r\n}","import { getTalentStatKey, getTalentStatKeyVariant } from \"../../Build/Build\";\r\nimport { TransWrapper } from \"../../Components/Translate\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementKey } from \"../../Types/consts\";\r\nexport const st = (strKey: string) => <TransWrapper ns=\"sheet\" key18={strKey} />\r\nexport const sgt = (strKey: string) => <TransWrapper ns=\"sheet_gen\" key18={strKey} />\r\n\r\n//this template only works if there is no variation in normal attacks.(no multi hits)\r\nexport const normalDocSection = (tr, formula, data) => ({\r\n  text: tr(`auto.fields.normal`),\r\n  fields: data.normal.hitArr.map((percentArr, i) =>\r\n  ({\r\n    text: sgt(`normal.hit${i + 1}`),\r\n    formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n    formula: formula.normal[i],\r\n    variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n  }))\r\n})\r\nexport const chargedDocSection = (tr, formula, data, stamina = 25) => ({\r\n  text: tr(`auto.fields.charged`),\r\n  fields: [{\r\n    text: sgt(`charged.dmg`),\r\n    formulaText: stats => <span>{data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.dmg,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.stamina\"),\r\n    value: stamina,\r\n  }]\r\n})\r\nexport const chargedHitsDocSection = (tr, formula, data, stamina = 20) => ({\r\n  text: tr(`auto.fields.charged`),\r\n  fields: [...data.charged.hitArr.map((percentArr, i) =>\r\n  ({\r\n    text: sgt(`normal.hit${i + 1}`),\r\n    formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged[i],\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  })), {\r\n    test: sgt(\"charged.stamina\"),\r\n    value: stamina\r\n  }]\r\n})\r\nexport const plungeDocSection = (tr, formula, data) => ({\r\n  text: tr`auto.fields.plunging`,\r\n  fields: [{\r\n    text: sgt(`plunging.dmg`),\r\n    formulaText: stats => <span>{data.plunging.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.dmg,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }, {\r\n    text: sgt(\"plunging.low\"),\r\n    formulaText: stats => <span>{data.plunging.low[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.low,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }, {\r\n    text: sgt(\"plunging.high\"),\r\n    formulaText: stats => <span>{data.plunging.high[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.high,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }]\r\n})\r\n\r\nexport const claymoreChargedDocSection = (tr, formula, data) => ({\r\n  text: tr(\"auto.fields.charged\"),\r\n  fields: [{\r\n    text: sgt(\"charged.spinning\"),\r\n    formulaText: stats => <span>{data.charged.spinning[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.spinning,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.final\"),\r\n    formulaText: stats => <span>{data.charged.final[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.final,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.stamina\"),\r\n    value: data.charged.stam ?? `40/s`,\r\n  }, {\r\n    text: sgt(\"maxDuration\"),\r\n    value: data.charged.maxDuration ?? `5s`,\r\n  }]\r\n})\r\n\r\nexport const bowChargedDocSection = (tr, formula, data, elementKey: ElementKey) => ({\r\n  text: tr(\"auto.fields.charged\"),\r\n  fields: [{\r\n    text: sgt(\"charged.aimed\"),\r\n    formulaText: stats => <span>{data.charged.hit[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.hit,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.fullyAimed\"),\r\n    formulaText: stats => <span>{data.charged.full[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, elementKey), stats)}</span>,\r\n    formula: formula.charged.full,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats, elementKey),\r\n  }]\r\n})\r\nexport const talentTemplate = (talentKey, tr, img, stats: undefined | object = undefined) => ({\r\n  name: tr(`${talentKey}.name`),\r\n  img,\r\n  sections: [{ text: tr(`${talentKey}.description`), }],\r\n  ...stats ? { stats } : {}\r\n})","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { DocumentSection } from \"../Types/character\";\r\nimport { fieldProcessing } from \"./FieldUtil\";\r\n\r\nexport function documentSectionsProcessing(sections: DocumentSection[]) {\r\n  sections.forEach(section => {\r\n    if (typeof section.canShow !== \"function\") section.canShow = () => true\r\n    section.fields?.forEach?.(fieldProcessing)\r\n  })\r\n}","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  heal: [100, 115, 130, 145, 160],\r\n  dmg: [200, 230, 260, 290, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalATK) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 280, 320, 360, 400]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_atk: [1.2, 1.5, 1.8, 2.1, 2.4]\r\n}\r\n\r\nconst formula: ISubFormula = {\r\n  bonus: stats => [s => s.finalHP * data.hp_atk[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n}\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [20, 25, 30, 35, 40]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(200, stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  dmg_: [20, 25, 30, 35, 40],\r\n  heal: [60, 70, 80, 90, 100]\r\n}\r\nconst formula: ISubFormula = {\r\n  regen: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalATK) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  vals: [100, 125, 150, 175, 200]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.vals[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [1, 1.25, 1.5, 1.75, 2]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [20, 25, 30, 35, 40]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  enerRechConv: [28, 35, 42, 49, 56],\r\n  enerRechMax: [80, 90, 100, 110, 120]\r\n} as const\r\n\r\nconst formula: ISubFormula = {\r\n  conv: stats => [s => Math.min((s.enerRech_ - 100) * data.enerRechConv[stats.weapon.refineIndex] / 100, data.enerRechMax[stats.weapon.refineIndex]), ['enerRech_']],\r\n} as const\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [160, 200, 240, 280, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg:  [40, 55, 70, 85, 100]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_atk: [0.8, 1, 1.2, 1.4, 1.6],\r\n  hp_atk_add: [1, 1.2, 1.4, 1.6, 1.8]\r\n}\r\n\r\nconst formula: ISubFormula = {\r\n  esj: stats => [s => s.finalHP * data.hp_atk[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n  esjadd: stats => [s => s.finalHP * data.hp_atk_add[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n}\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [60, 75, 90, 105, 120]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [100, 125, 150, 175, 200],\r\n} as const\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n} as const\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 300, 360, 420, 480]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 100, 120, 140, 160]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  shield: [20, 23, 26, 29, 32]\r\n}\r\nconst formula: ISubFormula = {\r\n  shield: stats => {\r\n    const hpMulti = data.shield[stats.weapon.refineIndex] / 100\r\n    return [s => hpMulti * s.finalHP * (1 + s.shield_ / 100) * 1.5, [\"finalHP\", \"shield_\"]]\r\n  }\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [8, 10, 12, 14, 16]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { getTalentStatKey } from \"../../../../Build/Build\";\r\nimport { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_conv: [1, 1.5, 2, 2.5, 3]\r\n} as const\r\n\r\nconst formula: ISubFormula = {\r\n  norm: stats => {\r\n    const val = data.hp_conv[stats.weapon.refineIndex] / 100\r\n    const statKey = getTalentStatKey(\"elemental\", stats) + \"_multi\"\r\n    return [s => val * s.finalHP * s[statKey], ['finalHP', statKey]]\r\n  },\r\n} as const\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 270, 300, 330, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [1, 1.25, 1.5, 1.75, 2]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [4, 4.5, 5, 5.5, 6]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [160, 200, 240, 280, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [100, 125, 150, 175, 200]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [8, 10, 12, 14, 16]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(125, stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  vals: [40, 50, 60, 70, 80]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.vals[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula"],"sourceRoot":""}