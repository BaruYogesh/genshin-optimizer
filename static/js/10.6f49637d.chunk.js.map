{"version":3,"sources":["Build/Build.ts","Util/ReactUtil.ts","Character/Character.ts","Artifact/ArtifactSheet.tsx","Character/CharacterSheet.ts","Util/FieldUtil.tsx","Data/ElementalData.ts","StatData.ts","Character/CharacterDisplay/Components/FieldDisplay.tsx","Assets/Element_Anemo.png","Assets/Assets.ts","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.tsx","Conditional/Conditional.ts","Weapon/WeaponSheet.ts","Components/CustomFormControl.tsx","Components/StatIcon.tsx","Formula.ts","Components/SlotIcon.ts","Data/ArtifactData.ts","Data/ArtifactLookupTable.ts","Artifact/Artifact.tsx","Conditional/ConditionalSelector.tsx","Character/CharacterDisplay/Components/ConditionalDisplay.tsx","Data/WeaponData.ts","Weapon/Weapon.ts","StatConstants.ts","Components/CharacterSelection.tsx","Components/StatDisplay.tsx","Character/StatInput.tsx","Artifact/ArtifactCard.tsx","Util/UIUtil.ts","Artifact/PercentBadge.tsx","StatDependency.ts","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx","Components/WIPComponent.tsx","Data/CharacterData.ts","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Character/CharacterDisplay/DamageOptionsAndCalculation.tsx","Character/CharacterCard.tsx","Util/TimeUtil.ts","../node_modules/react-bootstrap/esm/ProgressBar.js","Build/BuildWorker.ts","Build/BuildDisplay.tsx","Stat.tsx"],"names":["calculateTotalBuildNumber","artifactsBySlot","setFilters","setKeys","Set","map","i","key","filteredArtifactsBySlot","slotKeys","Object","keys","slotKey","artifactsBySet","artifact","has","setKey","push","freeze","setCount","accu","result","slotPerm","index","length","num","artifactSetPermutations","reduce","entries","artifacts","getTalentStatKey","skillKey","stats","useCharElement","hitMode","infusionAura","infusionSelf","reactionMode","characterEle","weaponType","ElementalData","includes","startsWith","eleKey","getTalentStatKeyVariant","useForceUpdate","useState","stateDirty","update","useCallback","usePromise","promise","res","setRes","useEffect","pending","then","console","error","undefined","Character","this","Error","characterKey","character","CharacterDatabase","get","values","equippedArtifacts","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getElementalName","elementalKey","defVal","name","getlevelKeys","LevelsData","getlevelTemplateName","levelKey","getLevelString","characterSheet","weaponSheet","levelOverride","getStatValueWithOverride","getLevel","getIndexFromlevelkey","indexOf","level","getAscension","asend","getTalentFieldValue","field","evalIfFunc","hasOverride","statKey","baseStatOverrides","getBaseStatValue","characetSheet","specializeStat","value","Weapon","getWeaponMainStatValWithOverride","weapon","characterStatBase","baseStat","equipArtifacts","artIds","artIdsOnCharacter","allSlotKeys","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifactOnSlot","equipArtifactBuild","calculateBuild","artifactSheets","mainStatAssumptionLevel","fromEntries","art","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","mainStatKey","mainStatValue","numStars","Math","max","min","substats","substat","stat","Conditional","parseConditionalValues","conditionalValues","conditional","conditionalValue","setNumKey","parseInt","condStats","resolve","val","dependencies","GetDependencies","modifiers","PreprocessFormulas","formula","mergeStats","modifier","mkey","multiplier","talentLevelKeys","constellation","ascension","statKeys","elementKey","weaponTypeKey","tlvl","allElements","overrides","hasOwnProperty","specializedStatVal","specialStatKey","getTalentStatsAll","s","weaponSubKey","getWeaponSubstatKey","getWeaponSubstatValWithOverride","weaponCond","otherCond","artifactImport","imp","default","set","promiseSheets","allArtifactSets","sheets","data","rarity","pieces","icons","setEffects","conditionals","setNum","text","effects","grouped","sheet","allRarities","filter","charStats","artifactSetEffect","slots","charImport","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","isAutoElemental","isMelee","getTalent","talentKey","talent","getTalentStats","split","constell","talents","statsArr","talentStats","getDisplayStatKeys","basicKeys","transReactions","ElementToReactionKeys","Formula","formulas","charFormulas","canShow","genericAvgHit","reactions","replace","cardImg","thumbImg","star","constellationName","Boolean","getAll","modifiersToFields","mStatKey","Stat","getStatName","variant","getStatVariant","formulaText","printStat","toFixed","fixed","fixedUnit","unit","getStatUnit","statsToFields","statVals","statVal","className","StatIconEle","flat","fieldProcessing","physical","anemo","geo","electro","hydro","pyro","cryo","StatData","characterHP","pretty","const","characterDEF","characterATK","characterLevel","weaponATK","baseATK","hp","hp_","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","autoBoost","skillBoost","burstBoost","Formulas","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","dendro","dependencyKeys","debug","constData","formulaList","tmp","constModifier","k","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","func","log","assign","hitMoves","move","moveName","clamp","hitElements","ele","eleName","opt","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","FieldDisplay","equippedBuild","newBuild","compareAgainstEquipped","useContext","compareAgainstEquippedContext","useMemo","fixedVal","fieldVal","retVal","fieldEquippedVal","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","icon","faQuestionCircle","style","cursor","Item","Assets","elements","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","faStar","Stars","stars","colored","Array","_","processed","Promise","all","addConditional","weaponImport","setObj","setNumObj","source","findConditionals","obj","callback","condKey","states","state","maxStack","fields","layeredAssignment","objPathValue","stacks","stateKey","conditionalStats","objMultiplication","crawlObject","isArray","WeaponSheet","loadWeaponSheet","allWeaponKeys","build","img","passiveName","desc","passiveDescription","description","baseStats","weaponKey","getWeaponsOfType","CustomFormControl","onChange","disabled","float","placeholder","allowEmpty","setstate","setstateDirty","sendChange","parseFunc","parseFloat","aria-label","e","target","onBlur","onKeyDown","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","formulaImport","src","f","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubstatsData","ArtifactSubstatsMinMax","getArrLastElement","ArtifactSlotsData","ArtifactSubstatLookupTable","errors","allSubstatRolls","total","substatRolls","getSubstatRolls","roll","size","rolls","efficiency","getSubstatEfficiency","getStatNameWithPercent","find","some","minimum","rollInfo","low","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accurateValue","sum","cur","getArtifactEfficiency","currentEfficiency","maximumEfficiency","current","totalRolls","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","slotName","slotIcon","slotNameWithIcon","slotMainStats","setEffectsObjs","setEffect","setEffectObj","setStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","endsWith","high","numUpgrades","maxSubstatValues","getSubstatKeys","substatCloseEnough","value1","value2","closeEnoughFloat","closeEnoughInt","ceil","getSubstatRollData","substatKey","substatValue","rollData","table","lookupValue","a","b","clampPercent","ConditionalSelector","setConditional","conditionalNum","conditionalStateKey","badge","Badge","Dropdown","Toggle","whiteSpace","Menu","onClick","condial","Fragment","v","stack","Button","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","editable","fieldClassName","conditionalFields","displayFields","condV","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","WeaponLevelKeys","LevelNameData","WeaponTypeData","getLevelName","getLevelIndex","getWeaponMainStatVal","main","getWeaponSubstatVal","sub","getWeaponTypeName","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","DropDownItem","DisplayStatDiff","label","oldVal","oldText","diffText","xs","StatDisplay","invalid","labelVariant","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Prepend","Text","Append","pointerEvents","faUndo","ArtifactCard","artifactObj","onEdit","onDelete","forceUpdateHook","registerArtListener","unregisterArtListener","equipOnChar","equipArtifactOnChar","substatsValidation","lock","mainStatLevel","mainStatVal","artifactValid","locationName","border","md","slotIcons","thumbnail","slotNames","Body","Title","numRolls","effOpacity","statName","valueString","opacity","valid","Footer","Divider","faLock","faLockOpen","faEdit","faTrashAlt","round","PercentBadge","badgeColor","GetFormulaDependency","dependency","Proxy","prop","receiver","add","formulaKeyDependency","InsertDependencies","artLayoutSize","lg","CharacterArtifactPane","history","useHistory","edit","pathname","artToEditId","equipArts","window","confirm","unequipArts","sKey","StatDisplayComponent","statsDisplayKeys","Alert","Row","Col","setNumKeyArr","SetEffectDisplay","CharacterOverviewPane","editLevel","setEditLevel","Img","Image","InputGroup","OverlayTrigger","Tooltip","faSave","roundedCircle","WeaponStatsEditorCard","MainStatsCards","WeaponStatsCard","title","statsVals","WeaponStatsEditorCardWeaponDropdown","setStateWeapon","weaponSheets","DropdownButton","reverse","arr","ItemText","editing","SetEditing","showDescription","setShowDescription","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","faQuoteLeft","refineIndex","faGavel","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","miscStatkeys","specializedStatKey","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","as","CharacterSpecializedStatKey","getStatNameRaw","xl","CharacterTalentPane","props","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","charEleKey","eleInterArr","Ele","talentLimits","header","talentLvlKey","talentLvlKeyRaw","levelBoost","newTalentLevelKey","statsEle","Subtitle","document","section","talentText","createContext","CustomMenu","React","forwardRef","ref","children","labeledBy","minWidth","aria-labelledby","Children","toArray","child","initialCharacter","auto","characterReducer","action","CharacterDisplayCard","propCharacterKey","propCharacter","propSetCharacterKey","setCharacterKey","footer","propNewBuild","onClose","tabName","useReducer","setcompareAgainstEquipped","firstUpdate","useRef","char","newCKey","flexArts","commonPaneProps","DamageOptionsAndCalculationEle","hasTalentPage","DamageOptionsAndCalculation","CharSelectDropdown","ButtonGroup","faTimes","Provider","Tab","Container","defaultActiveKey","mountOnEnter","unmountOnExit","Nav","fill","Link","eventKey","WIPComponent","Content","Pane","HeaderIconDisplay","CharDropdownItem","lvlKey","setEffectText","setEffectTexts","setNumStats","setStatsFields","setEffectConditionals","ckey","cardbg","sectionValues","JSON","stringify","infusionVals","InfusionAuraDropdown","ReactionToggle","HitModeToggle","CalculationDisplay","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","Collapse","subKey","printFormula","formulaField","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","currentEventKey","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","href","rel","immunityStatKey","elementImmunity","CharacterCard","cardClassName","forceUpdate","registerCharListener","unregisterCharListener","weaponName","weaponMainVal","weaponSubVal","weaponLevelName","artifactSetName","highestNum","to","msToUnits","ms","milliseconds","seconds","minutes","hours","timeString","timeText","strPadLeft","timeStringMs","getPercentage","now","percentage","renderProgressBar","_ref","_classNames","srOnly","striped","animated","bsPrefix","_objectWithoutPropertiesLoose","createElement","_extends","role","classNames","width","ProgressBar","_ref2","isChild","useBootstrapPrefix","wrapperProps","cloneElement","displayName","defaultProps","Worker_fn","Worker","lazy","warningBuildNumber","maxBuildsToShowList","artifactsSlotsToSelectMainStats","buildSettingsReducer","mainStatKeys","BuildDisplay","setcharacterKey","statFilters","optimizationTarget","useLockedArts","useEquippedArts","ascending","buildSettings","buildSettingsDispatch","builds","setbuilds","maxBuildsToShow","setmaxBuildsToShow","modalBuild","setmodalBuild","showArtCondModal","setshowArtCondModal","showCharacterModal","setshowCharacterModal","generatingBuilds","setgeneratingBuilds","generationProgress","setgenerationProgress","generationDuration","setgenerationDuration","generationSkipped","setgenerationSkipped","charDirty","setCharDirty","isMounted","worker","ReactGA","pageview","terminate","selectCharacter","cKey","localStorage","loadFromLocalStorage","saveToLocalStorage","totBuildNumber","artifactDatabase","getArtifactDatabase","generateBuilds","turbo","artifactSetEffects","splitArtifacts","artArr","minFilters","maxFilters","onmessage","progress","timing","skipped","category","variable","toString","postMessage","dropdownitemsForStar","setsWithMaxRarity","setobj","setsNumArr","artsAccountedOther","ind","every","characterName","characterDropDown","CharacterSelection","sortByText","artsAccounted","artifactCondCount","count","hasMinFilters","hasMaxFilters","disabledTurbo","BuildModal","ArtConditionalModal","HitModeCard","StatFilterCard","setStatFilters","sFs","setNKey","setNkey","AssumeFullLevelToggle","setmainStatAssumptionLevel","BuildAlert","drop","align","overflow","textOverflow","TargetSelectorDropdownItem","faSortAmountDownAlt","faSortAmountUp","ArtifactDisplayItem","talentField","closeModal","Modal","show","onHide","contentClassName","Suspense","fallback","closeArtCondModal","artSetKeyList","namesByMaxRarities","flatMap","StatFilterItem","close","setFilter","isFloat","inputProps","minInputProps","maxInputProps","faTrash","setHitmode","setReactionMode","setInfusionAura","remainingKeys","slotarr1","slotarr","totalBuildNumberString","toLocaleString","totalUnskipped","generationProgressString","generationSkippedString","totalUnskippedString","generationSkippedText","progPercent","levels","0","8","12","16","20","htmlStatsData","expand","statList","FormulaText","modifierText","options","statUnit","o"],"mappings":"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AAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhD5M,IAAK,CACDuM,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriD1M,IAAK,CACDqM,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDzM,KAAM,CACFoM,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,KAC/KI,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3sBC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAE74EjM,UAAW,CACP4L,EAAG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,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG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","file":"static/js/10.6f49637d.chunk.js","sourcesContent":["import ElementalData from \"../Data/ElementalData\"\r\nimport { StatKey, StatDict, IArtifact, SubstatKey } from \"../Types/artifact\"\r\nimport { ArtifactSetEffects, PrunedArtifactSetEffects, ArtifactsBySlot, SetFilter } from \"../Types/Build\"\r\nimport { ArtifactSetKey } from \"../Types/consts\"\r\n\r\n/**\r\n * Remove artifacts that can never be used in optimized builds\r\n * @param {artifact[]} artifacts - List of artifacts of the same slot\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - The list of the set effects\r\n * @param {Set.<statKey>} significantStats - A set of stats that pruning needs to take into consideration\r\n * @param {bool} ascending - Whether the sorting is ascending or descending\r\n * @param {Set.<setKey>} alwaysAccepted - The list of artifact sets that are always included\r\n */\r\nexport function pruneArtifacts(artifacts: IArtifact[], artifactSetEffects: ArtifactSetEffects, significantStats: Set<StatKey>, ascending: boolean = false, alwaysAccepted: Set<ArtifactSetKey> = new Set()): IArtifact[] {\r\n  function shouldKeepFirst(first: StatDict, second: StatDict, preferFirst: boolean) {\r\n    let firstBetter = Object.entries(first).some(([k, v]) => v! > (second[k] ?? 0))\r\n    let secondBetter = Object.entries(second).some(([k, v]) => v! > (first[k] ?? 0))\r\n    if (ascending) [firstBetter, secondBetter] = [secondBetter, firstBetter]\r\n    // Keep if first is strictly better, uncomparable, or equal + prefer first\r\n    return firstBetter || (!secondBetter && preferFirst)\r\n  }\r\n\r\n  // Prune unused set effects. Sets with no relevant effects are regrouped to \"other\"\r\n  const prunedSetEffects: PrunedArtifactSetEffects = { \"other\": {} }\r\n  for (const set in artifactSetEffects)\r\n    for (const num in artifactSetEffects[set]) {\r\n      const effects = Object.entries(artifactSetEffects[set]![num]).filter(([key]) => significantStats.has(key as StatKey))\r\n      if (effects.length > 0) {\r\n        prunedSetEffects[set] = prunedSetEffects[set] ?? {}\r\n        prunedSetEffects[set]![num] = Object.fromEntries(effects)\r\n      }\r\n    }\r\n\r\n  // array of artifacts, artifact stats, and set (may be \"other\")\r\n  let tmp: { artifact: IArtifact, stats: Dict<StatKey, number>, set: ArtifactSetKey | \"other\" }[] = artifacts.map(artifact => {\r\n    let stats = {}, set: ArtifactSetKey | \"other\" = (artifact.setKey in prunedSetEffects) ? artifact.setKey : \"other\"\r\n    if (significantStats.has(artifact.mainStatKey as any))\r\n      stats[artifact.mainStatKey] = artifact.mainStatVal\r\n    for (const { key, value } of artifact.substats)\r\n      if (significantStats.has(key as SubstatKey))\r\n        stats[key] = (stats[key] ?? 0) + value\r\n    for (const key in stats)\r\n      if (key.endsWith(\"enemyRes_\"))\r\n        stats[key] = -stats[key]\r\n    return { artifact, stats, set }\r\n  })\r\n\r\n  // Compare artifacts' base stats from the same set\r\n  tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) =>\r\n    tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) =>\r\n      candidateSet !== otherSet || shouldKeepFirst(candidateStats, otherStats, candidate.id! <= other.id!)\r\n    ))\r\n\r\n  if (!ascending) {\r\n    // Cross-check with different sets\r\n    tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) => {\r\n      // Possible \"additional stats\" if a build equips `candidate` on an empty slot.\r\n      let possibleStats = [...Object.values(prunedSetEffects[candidateSet]!), {}].map(c => {\r\n        const current: Dict<string, number> = { ...candidateStats }\r\n        Object.entries(c).forEach(([key, value]: any) => current[key] = (current[key] ?? 0) + (value ?? 0))\r\n        return current\r\n      })\r\n      return tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) => {\r\n        if (candidateSet === otherSet) return true // Already checked same-set\r\n\r\n        // Remove possibilities that shouldn't be kept\r\n        possibleStats = possibleStats.filter(current =>\r\n          shouldKeepFirst(current, otherStats, candidate.id! <= other.id!))\r\n        return possibleStats.length !== 0\r\n      })\r\n    })\r\n  }\r\n  // Reinstate `alwaysAccepted`\r\n  return [\r\n    ...artifacts.filter(artifact => alwaysAccepted.has(artifact.setKey)),\r\n    ...tmp.map(tmp => tmp.artifact).filter(artifact => !alwaysAccepted.has(artifact.setKey)),\r\n  ]\r\n}\r\n\r\n/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet: { [setKey in ArtifactSetKey]?: IArtifact[] } = {}\r\n    for (const artifact of (artifactsBySlot[slotKey] as any)) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey]!.push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet['null']) artifactsBySet['null'].push(artifact)\r\n        else artifactsBySet['null'] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu: ArtifactsBySlot = {}, result: ArtifactsBySlot[] = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1]!.length, 1)\r\n    , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats, artifactsBySlot: ArtifactsBySlot, artifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\r\n  function slotPerm(index, stats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    let slotKey = slotKeys[index]\r\n    for (const artifact of (artifactsBySlot[slotKey] as any)) {\r\n      let newStats = { ...stats }\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey, art: IArtifact, setCount, accu, stats, artifactSetEffects) {\r\n  let setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n\r\n  // Add artifact stats\r\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal\r\n  art.substats.forEach((substat) => {\r\n    if (substat?.key in stats) stats[substat.key] += substat.value\r\n  })\r\n\r\n  // Add set effects\r\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\r\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]: any) => {\r\n    if (statKey in stats) stats[statKey] += val\r\n  })\r\n}\r\n\r\n/**\r\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\r\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\r\n  * @param {*} stats - The calcualted stats\r\n  * @param {*} useCharElement - Override the hit to be the character's elemental, that is not part of infusion.\r\n  */\r\nexport function getTalentStatKey(skillKey, stats, useCharElement = false) {\r\n  const { hitMode = \"\", infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if ((Object.keys(ElementalData) as any).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\r\n  if (!useCharElement) useCharElement = weaponType === \"catalyst\"\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || useCharElement) {\r\n    if (reactionMode && reactionMode.startsWith(characterEle)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n    return `${characterEle}_${skillKey}_${hitMode}`\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n\r\n  return `${eleKey}_${skillKey}_${hitMode}`\r\n}\r\n\r\nexport function getTalentStatKeyVariant(skillKey, stats, useCharElement = false) {\r\n  if ((Object.keys(ElementalData) as any).includes(skillKey)) return skillKey//elemental DMG\r\n  const { infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (!useCharElement) useCharElement = weaponType === \"catalyst\"\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || useCharElement) {\r\n    if (reactionMode && reactionMode.startsWith(characterEle)) {\r\n      if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n      else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n    }\r\n    return characterEle\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) {\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n  }\r\n  return eleKey\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>();\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => { pending = false }\r\n  }, [promise])\r\n  return res\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { ICharacter } from \"../Types/character\";\r\nimport { allElements, allSlotKeys, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = (): string[] => Object.keys(LevelsData)\r\n  static getlevelTemplateName = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getLevelString = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet) => {\r\n    const levelOverride = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n    return Character.getLevel(character.levelKey) === levelOverride ? Character.getlevelTemplateName(character.levelKey) : `Lvl. ${levelOverride}`\r\n  }\r\n  static getIndexFromlevelkey = (levelKey) => Character.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return evalIfFunc(field?.[key], stats)\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getBaseStatValue = (character: ICharacter, characetSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    const { levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return characetSheet.specializeStat.key\r\n    if (statKey === \"specializedStatVal\") return characetSheet.specializeStat.value[Character.getIndexFromlevelkey(levelKey)]\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon, weaponSheet)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return Character.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    if (statKey in characetSheet.baseStat) return characetSheet.baseStat[statKey][Character.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n  static getStatValueWithOverride = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    if (Character.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey: string, artIds: StrictDict<SlotKey, string>) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    const artIdsOnCharacter = character.equippedArtifacts;\r\n\r\n    //swap, by slot\r\n    allSlotKeys.forEach(slotKey => {\r\n      const artNotOnChar = ArtifactDatabase.get(artIds[slotKey])\r\n      if (!artNotOnChar) return\r\n      if (artNotOnChar?.location === characterKey) return; //it is already equipped\r\n      const artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      const notCharLoc = (artNotOnChar?.location ?? \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifactOnSlot(notCharLoc, slotKey, artOnChar?.id ?? \"\")\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char\r\n    CharacterDatabase.equipArtifactBuild(characterKey, artIds);\r\n  }\r\n  static remove(characterKey) {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return\r\n    Object.values(character.equippedArtifacts).forEach(artid =>\r\n      ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets, mainStatAssumptionLevel = 0) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.createInitialStats(character, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats, artifacts, artifactSheets) => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, initialStats, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach((art: any) => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(stats.mainStatAssumptionLevel, art.numStars * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.value)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return stats\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of (Object.entries(val) as any)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of (Object.entries(modifier) as any))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n\r\n  static createInitialStats = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, infusionAura, reactionMode, talentLevelKeys, constellation, equippedArtifacts, conditionalValues = {}, weapon = { key: \"\" } } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, Character.getStatValueWithOverride(character, characterSheet, weaponSheet, key)]))\r\n    initialStats.characterEle = characterSheet.elementKey;\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = weapon\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n\r\n\r\n    //enemy stuff\r\n    [\"physical\", ...allElements].forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]: any) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n    Character.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats).forEach(s => Character.mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n    if (weaponSubKey) Character.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubstatValWithOverride(character?.weapon, weaponSheet) })\r\n    Character.mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      Character.mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n}","import { IArtifactSheet, SetEffectEntry, StatArr, StatDict } from \"../Types/artifact\";\r\nimport { allArtifactSets, allRarities, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  constructor(data: IArtifactSheet) { this.data = data }\r\n\r\n  get name(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slotNames(): Dict<SlotKey, string> { return this.data.pieces }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): StatDict {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectTexts(setNum: SetNum, stats: ICalculatedStats): Displayable {\r\n    let text = this.setEffects[setNum]?.text\r\n    return evalIfFunc(text ?? \"\", stats)\r\n  }\r\n  setEffectConditionals(setNum: SetNum, stats: ICalculatedStats) {\r\n    const effects = this.setEffects[setNum]\r\n    if (effects?.conditional || effects?.conditionals) {\r\n      return {\r\n        ...effects?.conditional && { default: effects?.conditional },\r\n        ...effects?.conditionals && effects?.conditionals\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static namesByMaxRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): [Rarity, [ArtifactSetKey, string][]][] {\r\n    const grouped: Dict<Rarity, [ArtifactSetKey, string][]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push([key, sheet.name])\r\n      else grouped[rarity] = [[key, sheet.name]]\r\n    })\r\n    return allRarities.map(rarity => [rarity, grouped[rarity] ?? []] as [Rarity, [ArtifactSetKey, string][]]).filter(([, group]) => group.length)\r\n  }\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): StatArr {\r\n    let artifactSetEffect: StatArr = []\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && Object.entries(evalIfFunc(value.stats, charStats) ?? {}).forEach(([key, value]) =>\r\n          artifactSetEffect.push({ key, value }))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import Formula from \"../Formula\";\r\nimport { ElementToReactionKeys } from \"../StatData\";\r\nimport { ICharacterSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const charImport = import('../Data/Characters').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>)\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | string): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return this.sheet.elementKey }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get specializeStat() { return this.sheet.specializeStat }\r\n  get baseStat() { return this.sheet.baseStat }\r\n  get talent() { return this.sheet.talent }\r\n  get formula() { return this.sheet.formula }\r\n  get conditionals() { return this.sheet.conditionals }\r\n  isAutoElemental = () => this.sheet.weaponTypeKey === \"catalyst\"\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (talentKey: string) => this.talent[talentKey]\r\n  get hasTalentPage() { return Boolean(Object.keys(this.sheet.talent).length) } //TODO: remove when all chararacter sheets are complete\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalent(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats) => {\r\n    const talents = this.sheet.talent\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n\r\n  getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats || !Object.keys(stats).length) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = this.elementKey\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = this.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (Formula.formulas.character?.[characterKey]) {\r\n      const charFormulas = {}\r\n      Object.entries(Formula.formulas.character[characterKey]).forEach(([talentKey, formulas]: any) => {\r\n        Object.values(formulas as any).forEach((formula: any) => {\r\n          if (!formula.field.canShow(stats)) return\r\n          if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n          if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n          charFormulas[talentKey].push(formula.keys)\r\n        })\r\n      })\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {//TODO: doesnt have character sheet\r\n      //generic average hit parameters.\r\n      const genericAvgHit: string[] = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical\r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      else if (weaponTypeKey === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst\r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions: string[] = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n}\r\n","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier as any ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey as any] * (multiplier as any), 0),\r\n    formulaText: <span>{Object.entries(modifier as any ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}) {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]: any) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]: any) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]: any) => accu + c[k] * (m as any), 0)\r\n    const dynamicFunc = (s, c) => dynamicModifier.reduce((accu, [k, m]: any) => accu + s[k] * (m as any), 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Character from \"../../Character\";\r\nimport { compareAgainstEquippedContext } from \"../../CharacterDisplayCard\";\r\n\r\nexport default function FieldDisplay({ field, index, equippedBuild, newBuild, className = \"p-2\" }) {\r\n  const compareAgainstEquipped = useContext(compareAgainstEquippedContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => field.canShow(stats), [field, stats])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", stats)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", stats)?.[0]?.(stats)\r\n      //compareAgainstEquipped\r\n      if (compareAgainstEquipped && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareAgainstEquipped, fixedVal, equippedBuild, field, stats])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", stats), [field, stats])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", stats), [field, stats])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", stats)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip id=\"field-formula\">{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, stats])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", stats), [field, stats])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => {\r\n    addConditional(sheets, \"weapon\");\r\n  }),//attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => {\r\n    addConditional(sheets, \"artifact\")\r\n    //attach metadata prop setNumKey to the conditional\r\n    Object.values(sheets).forEach(setObj =>\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n        if (setNumObj.conditional) (setNumObj.conditional as any).setNumKey = setNumKey // TODO, typechecker says there's no `setNumKey`\r\n        if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach((c: any) => c.setNumKey = setNumKey)\r\n      }))\r\n  })\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","import { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new WeaponSheet(value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>)\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  constructor(weaponSheet: IWeaponSheet) { this.sheet = weaponSheet }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string) => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  get name() { return this.sheet.name }\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  get passiveName() { return this.sheet.passiveName }\r\n  passiveDescription(stats: ICalculatedStats) {\r\n    const desc = this.sheet.passiveDescription\r\n    return evalIfFunc(desc, stats)\r\n  }\r\n  get description() { return this.sheet.description }\r\n  get baseStats() { return this.sheet.baseStats }\r\n  stats = (build: ICalculatedStats): object | false | undefined => evalIfFunc(this.sheet.stats, build)\r\n  get conditionals() { return this.sheet.conditionals }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled = false, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import ICalculatedStats from './Types/ICalculatedStats';\r\nimport { crawlObject, objPathValue } from './Util/Util';\r\n\r\n//Currently only import character formulas, but formulas from other sources should be able to be imported as well.\r\nexport const formulaImport = import('./Data/Characters/formula').then(imp => addFormula(imp.default, \"character\"))\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | undefined> => formulaImport.then(() => objPathValue(Formula.formulas, keys))\r\n}\r\n\r\nfunction addFormula(src, key) {\r\n  Formula.formulas[key] = src\r\n  crawlObject(src, [key], f => typeof f === \"function\", (formula, keys) => {\r\n    formula.keys = keys\r\n  })\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { SlotKey } from '../Types/consts'\r\n\r\nconst SlotIcon: StrictDict<SlotKey, IconDefinition> = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport { CompressMainStatKey, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactStarsData: Dict<Rarity, { subsBaselow: number, subBaseHigh: number, numUpgradesOrUnlocks: number }> = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData: StrictDict<Rarity, StrictDict<CompressMainStatKey, number[]>> = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 12.0, 14.6, 17.3, 19.9, 22.5, 25.2, 27.8, 30.5, 33.1, 35.7, 38.4, 41.0, 43.7, 46.3, 49.0, 51.6, 54.2, 56.9, 59.5, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.1, 23.7, 25.2, 26.7, 28.2, 29.8, 31.3, 32.8, 34.3, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubstatsData: StrictDict<SubstatKey, { [numStars: number]: number[] }> = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubstatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { SubstatKey } from \"../Types/artifact\"\r\n\r\nexport const ArtifactSubstatLookupTable: StrictDict<SubstatKey, { [numStar: number]: { [rounded: string]: number[][] } }> = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubstatsData, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { CompressMainStatKey, IArtifact, MainStatKey, StatDict, Substat, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, CharacterKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey) => slotKey ? ArtifactSlotsData[slotKey].name : \"\"\r\n  static slotIcon = (slotKey: SlotKey) => <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n  static slotNameWithIcon = (slotKey: SlotKey) => {\r\n    let name = Artifact.slotName(slotKey)\r\n    let slotIcon = Artifact.slotIcon(slotKey)\r\n    return <span>{slotIcon} {name}</span>\r\n  }\r\n\r\n  static slotMainStats = (slotKey: SlotKey): MainStatKey[] => ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): Dict<ArtifactSetKey, Dict<SetNum, StatDict>> => {\r\n    let result: Dict<ArtifactSetKey, Dict<SetNum, StatDict>> = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      let setEffect: Dict<SetNum, StatDict> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n        const setStats = evalIfFunc(setEffectObj.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        result[setKey][setNumKey][statKey] = (result[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: Dict<string, IArtifact>): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey, defVal = []) => {\r\n    if (statKey.endsWith(\"_dmg_\") && statKey !== \"physical_dmg_\")\r\n      return ArtifactMainStatsData[numStar][\"ele_dmg_\"]\r\n    return ArtifactMainStatsData[numStar][statKey as CompressMainStatKey] || defVal\r\n  }\r\n\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number | undefined =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } => {\r\n    const data = ArtifactStarsData[rarity]!\r\n    return { low: data.subsBaselow, high: data.subBaseHigh, numUpgrades: data.numUpgradesOrUnlocks }\r\n  }\r\n\r\n  static maxSubstatValues = (statKey: SubstatKey, numStars = maxStar): number => ArtifactSubstatsMinMax[statKey].max[numStars]\r\n  static getSubstatKeys = (): SubstatKey[] => Object.keys(ArtifactSubstatsData) as SubstatKey[]\r\n  static substatCloseEnough = (key: SubstatKey, value1: number, value2: number): boolean => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars: Rarity) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars]!.subBaseHigh + ArtifactStarsData[numStars]!.numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static getSubstatRollData = (substatKey: SubstatKey | \"\", numStars: Rarity) => ArtifactSubstatsData[substatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    if (!numStars || !substatKey || typeof substatValue !== \"number\" || !substatValue) return []\r\n    let rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    if (!rollData.length) return []\r\n\r\n    let table = ArtifactSubstatLookupTable[substatKey][numStars]\r\n    let lookupValue = substatValue.toFixed(1)\r\n\r\n    if (table[lookupValue])\r\n      return table[lookupValue].map(roll => roll.map(i => rollData[i]))\r\n    else return [] // Lookup fails\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state: IArtifact) {\r\n    const { numStars, level, substats } = state, errors: string[] = []\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = key ? Artifact.getSubstatRolls(key, value, numStars) : []\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls?.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            const key = substats[index].key\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    } else {\r\n      // Found valid build, filling missing data\r\n      for (const substat of substats)\r\n        substat.accurateValue = substat.rolls!.reduce((sum, cur) => sum + cur, 0)\r\n      const { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n      state.currentEfficiency = currentEfficiency\r\n      state.maximumEfficiency = maximumEfficiency\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(substats: Substat[], numStars: Rarity, level: number) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let current = substats.reduce((sum, { key, accurateValue }) => sum + (key ? (accurateValue! / ArtifactSubstatsMinMax[key].max[maxStar]) : 0), 0)\r\n    let maximum = current + rollsRemaining\r\n    let currentEfficiency = current * 100 / totalRolls\r\n    let maximumEfficiency = maximum * 100 / totalRolls\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    let setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId: string | undefined, characterKey: CharacterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifactOnSlot(intendedLocation, art.slotKey, art.id)\r\n\r\n    if (currentLocation) {\r\n      CharacterDatabase.equipArtifactOnSlot(currentLocation, slotKey, artifactToSwapWith?.id ?? \"\")\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId: string | undefined) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.equipArtifactOnSlot(location, slotKey, \"\")\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial]: any, i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n          <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setConditional([0])}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n            <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n              {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n            </Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n        <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport Conditional from \"../../../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../../../Conditional/ConditionalSelector\"\r\nimport ICalculatedStats from \"../../../Types/ICalculatedStats\"\r\nimport IConditional from \"../../../Types/IConditional\"\r\nimport statsToFields from \"../../../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../../../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  characterDispatch: (any) => void,//TODO: characterDispatch type\r\n  editable: boolean,\r\n  fieldClassName?: string\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, equippedBuild, newBuild, characterDispatch, editable, fieldClassName }: ConditionalDisplayProps) {\r\n  const stats = newBuild ? newBuild : equippedBuild as ICalculatedStats\r\n  if (!stats) debugger\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats.conditionalValues, characterDispatch])\r\n\r\n  if (!canShow) return null\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector disabled={!editable}\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild, className: fieldClassName }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","const WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20/40\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40/50\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50/60\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60/70\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70/80\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80/90\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { LevelNameData, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData';\r\nimport WeaponSheet from './WeaponSheet';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey): number => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.main[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.sub?.[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatKey = (weaponSheet: WeaponSheet, defVal = \"\") => (weaponSheet.baseStats?.substatKey || defVal)\r\n\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = (): string[] => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubstatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n}","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [0,\r\n  17.2, 18.5, 19.9, 21.3, 22.6, 24.6, 26.6, 28.9, 31.4, 34.1,\r\n  37.2, 40.7, 44.4, 48.6, 53.7, 59.1, 64.4, 69.7, 75.1, 80.6,\r\n  86.1, 91.7, 97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n  142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n  215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n  336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n  509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n  742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n  968.6, 991.0, 1013.5, 1036.1, 1066.6, 1090.0, 1115.0, 1141.7, 1171.9, 1202.8,\r\n  1202.8, 1233.9, 1264.7, 1305.7, 1346.1, 1468.9, 1524.0, 1577.0, 1627.6, 1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [0,\r\n  91, 99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n  170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n  320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n  448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n  574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n  733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n  915, 936, 956, 982, 1003, 1017, 1036, 1057, 1075, 1096,\r\n  1114, 1135, 1149, 1170, 1191, 1205, 1224, 1243, 1260, 1277,\r\n  1293, 1308, 1317, 1327, 1336, 1349, 1366, 1384, 1403, 1424,\r\n  1450, 1478, 1507, 1543, 1570, 1580, 1589, 1673, 1682, 1691,\r\n]","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return <>{CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>\r\n    {characterSheet.name}\r\n  </Dropdown.Item>\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { ICharacter } from \"../Types/character\"\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\ntype StatDisplayProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined)\r\n\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey, invalid as any)\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (statKey === \"finalHP\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterHP\")\r\n        else if (statKey === \"finalDEF\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterDEF\")\r\n        else if (statKey === \"finalATK\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterATK\") + Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"weaponATK\")\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, characterSheet, weaponSheet, equippedBuild, newBuild, editable, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label: label as any }} />\r\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip id=\"reset-tooltip\">Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { IArtifact, Substat } from '../Types/artifact';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: IArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number }\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }: Data): JSX.Element | null {\r\n  const [, forceUpdateHook] = useForceUpdate()\r\n  useEffect(() => {\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () => { artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook) }\r\n  }, [artifactId, forceUpdateHook])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? ArtifactDatabase.get(artifactId) : undefined))?.setKey))\r\n  const equipOnChar = (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey)\r\n\r\n  const editable = !artifactObj //dont allow edit for flex artifacts\r\n  const art = artifactObj || ArtifactDatabase.get(artifactId);\r\n  const characterSheet = usePromise(CharacterSheet.get(art.location))\r\n  if (!art) return null\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n\r\n  const { slotKey, numStars, level, mainStatKey, substats, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.mainStatValue(mainStatKey, numStars, mainStatLevel) ?? \"\"}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = art.maximumEfficiency !== undefined\r\n  const locationName = characterSheet?.name ?? \"Inventory\"\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{sheet?.slotNames[slotKey] ?? \"Unknown Piece Name\"}</b></h6>\r\n          <div>{Artifact.slotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{sheet?.name ?? \"Artifact Set\"}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: Substat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueString(stat.value, Stat.getStatUnit(stat.key))}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{valueString(efficiency, \"eff\")}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} {...{ className: \"float-right\" }} /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"lock-artifact-tip\">Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.update(art);\r\n                  }}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","export function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1)\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0] as any] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","import { useCallback, useMemo } from 'react';\r\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { ICharacter } from '../../Types/character';\r\nimport { allSlotKeys, SlotKey } from '../../Types/consts';\r\nimport ICalculatedStats from '../../Types/ICalculatedStats';\r\nimport { usePromise } from '../../Util/ReactUtil';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\nconst artLayoutSize = { xs: 12, md: 6, lg: 4 }\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  artifacts?: any[]\r\n}\r\nfunction CharacterArtifactPane({ characterSheet, weaponSheet, character, character: { characterKey }, equippedBuild, newBuild, editable, characterDispatch, artifacts }: CharacterArtifactPaneProps) {\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => characterSheet.getDisplayStatKeys(stats), [stats, characterSheet])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && Character.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, newBuild, characterDispatch])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    Character.equipArtifacts(characterKey, Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])) as StrictDict<SlotKey, string>)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, characterDispatch])\r\n  return <>\r\n    <Card className=\"h-100 mb-2\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Body>\r\n        <StatDisplayComponent {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys: statKeys, editable }} />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        {newBuild ? <Button onClick={equipArts}>Equip all artifacts to current character</Button> : (editable && <Button onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n        {Boolean(mainStatAssumptionLevel) && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert>}\r\n      </Card.Footer>\r\n    </Card>\r\n    <Row className=\"mb-n2\">\r\n      <Col {...artLayoutSize} className=\"d-flex flex-column\">\r\n        {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n          <Card key={setKey} className=\"mb-2 flex-grow-1\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n            <Card.Header>{artifactSheets?.[setKey].name ?? \"\"}</Card.Header>\r\n            <Card.Body className=\"p-2 mb-n2\">\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      {artifacts ?\r\n        allSlotKeys.map(slotKey => {//from flex\r\n          const art = artifacts.find(art => art.slotKey === slotKey)\r\n          return Boolean(art) && <Col {...artLayoutSize} key={slotKey} className=\"mb-2\">\r\n            <ArtifactCard artifactObj={art} />\r\n          </Col>\r\n        }) : allSlotKeys.map(slotKey =>\r\n          Boolean(stats?.equippedArtifacts?.[slotKey]) && <Col {...artLayoutSize} key={stats?.equippedArtifacts?.[slotKey]} className=\"mb-2\">\r\n            <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n          </Col>\r\n        )}\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport Conditional from \"../../Conditional/Conditional\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport { allElements } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport { IConditionals } from \"../../Types/IConditional\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport Character from \"../Character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport StatInput from \"../StatInput\"\r\nimport ConditionalDisplay from \"./Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"./Components/FieldDisplay\"\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean;\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, weaponSheet, editable, character, character: { characterKey, constellation }, characterDispatch, equippedBuild, newBuild }: CharacterOverviewPaneProps) {\r\n  const [editLevel, setEditLevel] = useState(false)\r\n  const elementKey = characterSheet.elementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Card.Img src={characterSheet.cardImg} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{characterSheet.name} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={characterSheet.star} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl placeholder={undefined} onChange={val => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: clamp(val, 1, 90), characterSheet, weaponSheet })} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: Character.getLevel(character.levelKey), characterSheet, weaponSheet })} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip id=\"artifact-override-level\">Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"success\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{characterSheet.constellationName}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={characterSheet.getTalent(`constellation${i + 1}`)?.img} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n      <MainStatsCards {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n    </Col>\r\n  </Row >\r\n}\r\n\r\nfunction WeaponStatsCard({ title, statsVals = {}, stats = {} }) {\r\n  if ((Object.keys(statsVals ?? {}) as any).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay newBuild={undefined} key={i} index={i} {...{ field, equippedBuild: stats, className: \"px-3 py-2\" }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}\r\n\r\n\r\nfunction WeaponStatsEditorCardWeaponDropdown({ weaponSheet, weaponTypeKey, setStateWeapon }: { weaponSheet: WeaponSheet, weaponTypeKey: string, setStateWeapon: (key: any, value: any) => void }) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  if (!weaponSheets) return null\r\n\r\n  return <DropdownButton title={weaponSheet.name}>\r\n    {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n      <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n      {Object.entries(WeaponSheet.getWeaponsOfType(weaponSheets, weaponTypeKey)).filter(([, weaponObj]: any) => weaponObj.rarity === star).map(([key, weaponObj]: any) =>\r\n        <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n          {weaponObj.name}\r\n        </Dropdown.Item>\r\n      )}\r\n      {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n    </React.Fragment>)}\r\n  </DropdownButton>\r\n}\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction WeaponStatsEditorCard({ characterSheet, weaponSheet, editable, character, character: { weapon }, characterDispatch, equippedBuild, newBuild }: WeaponStatsEditorCardProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => {\r\n    if (key === \"key\") {\r\n      if (value === weapon.key) return\r\n      else {\r\n        //reset the conditionalNum when we switch weapons\r\n        const { conditionalValues } = character\r\n        delete conditionalValues.weapon\r\n        characterDispatch({ conditionalValues })\r\n      }\r\n    }\r\n    character.weapon[key] = value\r\n    characterDispatch({ weapon: character.weapon })\r\n  }\r\n  const substatKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)\r\n  const weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet.passiveName\r\n  const weaponBonusStats = weaponSheet.stats(build)\r\n  const conditionals = Conditional.conditionals.weapon[weapon.key] as IConditionals\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      <Row className=\"mb-n2\">\r\n        <Col xs={12} md={3} lg={4}>\r\n          <Image src={weaponSheet.img} className={`w-100 h-auto grad-${weaponSheet.rarity}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <WeaponStatsEditorCardWeaponDropdown weaponSheet={weaponSheet} weaponTypeKey={weaponTypeKey} setStateWeapon={setStateWeapon} />\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {substatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><span className=\"mr-2\">{StatIconEle(substatKey)}</span>{Stat.getStatName(substatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(substatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <h5 className=\"mb-0\">{weaponSheet.name} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n            <p><Stars stars={weaponSheet.rarity} /></p>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <p>{weaponPassiveName && weaponSheet.passiveDescription(build)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: weaponDisplaySubVal }} stats={build} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            {Boolean(conditionals) && Object.entries(conditionals).map(([stateKey, conditional]) =>\r\n              <ConditionalDisplay key={stateKey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} fieldClassName=\"py-2 px-3\" />)}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <small>{weaponSheet.description}</small>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  editable: boolean,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction MainStatsCards({ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys: any[] = [];\r\n\r\n  [\"physical\", ...allElements].forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: key, characterSheet, weaponSheet })} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")}\r\n                  onChange={value => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value, characterSheet, weaponSheet })} />\r\n                <InputGroup.Append>\r\n                  {isPercentSpecialStatSelect && <InputGroup.Text>%</InputGroup.Text>}\r\n                  <Button onClick={() => {\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatKey\"), characterSheet, weaponSheet })\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatVal\"), characterSheet, weaponSheet })\r\n                  }}\r\n                    disabled={!Character.hasOverride(character, \"specializedStatKey\") && !Character.hasOverride(character, \"specializedStatVal\")}\r\n                  >\r\n                    <FontAwesomeIcon icon={faUndo} />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined\r\n                  }\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from 'react';\r\nimport { Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport { evalIfFunc } from \"../../Util/Util\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport ConditionalDisplay from './Components/ConditionalDisplay';\r\nimport FieldDisplay from './Components/FieldDisplay';\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterTalentPane(props: CharacterTalentPaneProps) {\r\n  const { characterSheet, character: { levelKey, constellation }, editable, characterDispatch, newBuild, equippedBuild } = props\r\n  const ascension = Character.getAscension(levelKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col><ReactionDisplay {...{ characterSheet, newBuild, equippedBuild }} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {!!characterSheet.getTalent(\"sprint\") && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalent(tKey)) return null\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet, newBuild, equippedBuild }: { characterSheet: CharacterSheet, newBuild?: ICalculatedStats, equippedBuild?: ICalculatedStats }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = characterSheet.elementKey\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip id=\"shatter-tooltip\">Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  ascension: number,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { constellation, talentLevelKeys, }, characterDispatch, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, onClickTitle }: SkillDisplayCardProps) {\r\n  let build = newBuild ? newBuild : equippedBuild as ICalculatedStats //assumes at least one of them is not undefined\r\n  let header: Displayable | null = null\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n        talentLevelKeys[tKey] = newTalentLevelKey\r\n        characterDispatch({ talentLevelKeys })\r\n      }\r\n      header = <Card.Header>\r\n        <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>{`Talent Level: ${talentLvlKey + 1}`}</Card.Header>\r\n    }\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"h-100\">\r\n    {header}\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={characterSheet.getTalent(talentKey)?.img} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{characterSheet.getTalent(talentKey)?.name}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {/* Display document sections */}\r\n      {characterSheet.getTalent(talentKey)?.document?.map((section, i) => {\r\n        if (!section.canShow!(build)) return null\r\n        const talentText = evalIfFunc(section.text, build)\r\n        let fields = section.fields ?? []\r\n        return <div className=\"my-2\" key={\"section\" + i}>\r\n          <div {...{ xs: 12 }}>\r\n            <div className=\"mb-2\">{talentText}</div>\r\n            {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n              {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n            </ListGroup>}\r\n          </div>\r\n          {!!section.conditional && <ConditionalDisplay {...{ conditional: section.conditional, equippedBuild, newBuild, characterDispatch, editable }} />}\r\n        </div>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { createContext, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allCharacterKeys, allSlotKeys } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { usePromise } from '../Util/ReactUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport DamageOptionsAndCalculation from './CharacterDisplay/DamageOptionsAndCalculation';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nexport const compareAgainstEquippedContext = createContext(undefined)\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }: any, ref: any) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" } as any}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\nconst initialCharacter = (characterKey): ICharacter => ({\r\n  characterKey: characterKey ?? \"\",//the game character this is based off\r\n  levelKey: \"L1\",//combination of level and ascension\r\n  hitMode: \"avgHit\",\r\n  reactionMode: null,\r\n  equippedArtifacts: Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])),\r\n  conditionalValues: {},\r\n  baseStatOverrides: {},//overriding the baseStat\r\n  weapon: {\r\n    key: \"\",\r\n    levelKey: WeaponLevelKeys[0],\r\n    refineIndex: 0,\r\n    overrideMainVal: 0,\r\n    overrideSubVal: 0,\r\n  },\r\n  talentLevelKeys: {\r\n    auto: 0,\r\n    skill: 0,\r\n    burst: 0,\r\n  },\r\n  infusionAura: \"\",\r\n  constellation: 0,\r\n})\r\n\r\ntype characterReducerOverwrite = {\r\n  type: \"overwrite\",\r\n  character: ICharacter\r\n}\r\ntype characterReducerFromDB = {\r\n  type: \"fromDB\",\r\n}\r\ntype characterReducerStatOverride = {\r\n  type: \"statOverride\",\r\n  statKey: string\r\n  value: number | string\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n}\r\ntype characterReducerOverwriteAction = characterReducerOverwrite | characterReducerFromDB | characterReducerStatOverride | Partial<ICharacter>\r\n\r\nfunction characterReducer(state: ICharacter, action: characterReducerOverwriteAction) {\r\n  if (\"type\" in action) switch (action?.type) {\r\n    case \"overwrite\":\r\n      return { ...state, ...action.character }\r\n    case \"fromDB\"://for equipping artifacts, that makes the changes in DB instead of in state.\r\n      return { ...state, ...CharacterDatabase.get(state.characterKey) ?? {} }\r\n    case \"statOverride\": {\r\n      const { statKey, value, characterSheet, weaponSheet, } = action\r\n      const baseStatOverrides = state.baseStatOverrides\r\n      const baseStatVal = Character.getBaseStatValue(state, characterSheet, weaponSheet, statKey)\r\n      if (baseStatVal === value)\r\n        delete baseStatOverrides[statKey]\r\n      else\r\n        baseStatOverrides[statKey] = value\r\n      return { ...state, baseStatOverrides }\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\ntype CharacterDisplayCardProps = {\r\n  characterKey?: string,\r\n  character?: ICharacter,\r\n  setCharacterKey?: (any) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  editable?: boolean,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey: propCharacterKey, character: propCharacter, setCharacterKey: propSetCharacterKey, footer, newBuild: propNewBuild, editable = false, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const [character, characterDispatch] = useReducer(characterReducer, initialCharacter(propCharacterKey))\r\n  const [compareAgainstEquipped, setcompareAgainstEquipped] = useState(false)\r\n  const firstUpdate = useRef(true)\r\n  useEffect(() => {\r\n    if (!propCharacterKey) return\r\n    const char = { ...initialCharacter(propCharacterKey), ...CharacterDatabase.get(propCharacterKey) ?? {} }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacterKey])\r\n  useEffect(() => {\r\n    if (!propCharacter) return\r\n    const char = { ...initialCharacter(propCharacter.characterKey), ...propCharacter }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacter])\r\n\r\n  useEffect(() => {\r\n    //skip saving on the first update, since those updates are from loading from DB\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false\r\n      return\r\n    }\r\n    //save character to DB\r\n    editable && CharacterDatabase.update(character)\r\n  }, [character, editable])\r\n\r\n  const characterKey = propCharacter?.characterKey ?? character.characterKey\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  useEffect(() => {\r\n    if (weaponSheets && characterSheet && !character.weapon.key) {\r\n      character.weapon.key = Object.keys(WeaponSheet.getWeaponsOfType(weaponSheets, characterSheet.weaponTypeKey))[0] ?? \"\"\r\n      characterDispatch({ weapon: character.weapon })\r\n    }\r\n  }, [characterSheet, weaponSheets, character.weapon])\r\n\r\n  const weaponSheet = usePromise(WeaponSheet.get(character.weapon.key))\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const setCharacterKey = useCallback(\r\n    newCKey => {\r\n      let state = initialCharacter(newCKey)\r\n      const char = CharacterDatabase.get(newCKey)\r\n      if (char) state = { ...state, ...char }\r\n      characterDispatch({ type: \"overwrite\", character: state })\r\n      if (newCKey !== characterKey)\r\n        propSetCharacterKey?.(newCKey)\r\n    }, [characterKey, characterDispatch, propSetCharacterKey])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return\r\n    const newBuild = propNewBuild && deepClone(propNewBuild);\r\n    (newBuild as any).hitMode = character.hitMode;\r\n    (newBuild as any).reactionMode = character.reactionMode;\r\n    return newBuild\r\n  }, [propNewBuild, character.hitMode, character.reactionMode])\r\n\r\n  const { levelKey, artifacts: flexArts } = character\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel), [character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel])\r\n\r\n  const commonPaneProps = { character, newBuild, equippedBuild: (!newBuild || compareAgainstEquipped) ? equippedBuild : undefined, editable, characterDispatch, compareAgainstEquipped }\r\n  if (flexArts) (commonPaneProps as any).artifacts = flexArts//from flex\r\n  // main CharacterDisplayCard\r\n  const DamageOptionsAndCalculationEle = characterSheet?.hasTalentPage && weaponSheet && <DamageOptionsAndCalculation {...{ characterSheet, weaponSheet, character, characterDispatch, newBuild, equippedBuild }} className=\"mb-2\" />\r\n  return (<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs={\"auto\"} className=\"mr-auto\">\r\n          {/* character selecter/display */}\r\n          <CharSelectDropdown characterSheet={characterSheet} character={character} weaponSheet={weaponSheet} editable={editable} levelKey={levelKey} characterDispatch={characterDispatch} setCharacterKey={setCharacterKey} />\r\n        </Col>\r\n        {Boolean(mainStatAssumptionLevel) && <Col xs=\"auto\"><Alert className=\"mb-0 py-1 h-100\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert></Col>}\r\n        {/* Compare against new build toggle */}\r\n        {newBuild ? <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(false)}>\r\n              <small>Show New artifact Stats</small>\r\n            </Button>\r\n            <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(true)}>\r\n              <small>Compare against equipped artifact</small>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col> : null}\r\n        {Boolean(onClose) && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    {characterKey && characterSheet && weaponSheet && <Card.Body>\r\n      <compareAgainstEquippedContext.Provider value={compareAgainstEquipped as any}>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 mx-0\" fill>\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\"><h5 className=\"mb-0\">Character</h5></Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\"><h5 className=\"mb-0\">New Artifacts</h5></Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\"><h5 className=\"mb-0\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</h5></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {process.env.NODE_ENV !== \"development\" && !characterSheet.hasTalentPage ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled><h5 className=\"mb-0\">Talents</h5> <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\"><h5 className=\"mb-0\">Talents</h5></Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterOverviewPane characterSheet={characterSheet} weaponSheet={weaponSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterTalentPane characterSheet={characterSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </compareAgainstEquippedContext.Provider>\r\n    </Card.Body>}\r\n    {footer && <Card.Footer>\r\n      {footer}\r\n    </Card.Footer>}\r\n  </Card>)\r\n}\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  weaponSheet?: WeaponSheet,\r\n  character: ICharacter\r\n  editable: boolean\r\n  levelKey: string\r\n  characterDispatch: (any) => void\r\n  setCharacterKey: (any) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, weaponSheet, character, editable, levelKey, characterDispatch, setCharacterKey }: CharSelectDropdownProps) {\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <Image src={characterSheet.thumbImg} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {characterSheet.name} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  return <>{editable ? <ButtonGroup>\r\n    <Dropdown as={ButtonGroup}>\r\n      <Dropdown.Toggle as={Button}>\r\n        {HeaderIconDisplay}\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu as={CustomMenu}>\r\n        {[...allCharacterKeys].sort().map(charKey => <CharDropdownItem key={charKey} characterKey={charKey} setCharacterKey={setCharacterKey} />)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n    <DropdownButton as={ButtonGroup} disabled={!characterSheet} title={\r\n      <h6 className=\"d-inline\">Stats Template: {Character.getlevelTemplateName(levelKey)} </h6>\r\n    }>\r\n      <Dropdown.ItemText>\r\n        <span>Select Base Stat Template</span>\r\n      </Dropdown.ItemText>\r\n      {Character.getlevelKeys().map(lvlKey =>\r\n        <Dropdown.Item key={lvlKey} onClick={() => characterDispatch({ levelKey: lvlKey })}>\r\n          <h6 >{Character.getlevelTemplateName(lvlKey)} </h6>\r\n        </Dropdown.Item>)}\r\n    </DropdownButton>\r\n  </ButtonGroup> : <span>{HeaderIconDisplay} {characterSheet && weaponSheet && Character.getLevelString(character, characterSheet, weaponSheet)}</span>}</>\r\n}\r\nfunction CharDropdownItem({ characterKey, setCharacterKey }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => setCharacterKey(characterKey)}>\r\n    <span >\r\n      <Image src={characterSheet.thumbImg} className={`thumb-small p-0 m-n1 grad-${characterSheet.star}star`} thumbnail />\r\n      <h6 className=\"d-inline ml-2\">{characterSheet.name} </h6>\r\n    </span>\r\n  </Dropdown.Item>\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip id=\"wip\">Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","// import characters from\r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20/40\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40/50\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50/60\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60/70\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70/80\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80/90\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterSpecializedStatKey\r\n}","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport ConditionalDisplay from \"../../Character/CharacterDisplay/Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"../../Character/CharacterDisplay/Components/FieldDisplay\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, editable, characterDispatch }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey))\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectTexts(setNumKey, stats)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const conditionals = sheet.setEffectConditionals(setNumKey, stats)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {Boolean(conditionals) && Object.entries(conditionals!).map(([ckey, conditional]) => <ConditionalDisplay key={ckey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n  </>\r\n}\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  editable: boolean,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n  characterDispatch: (arg0: any) => void,\r\n}\r\n","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter\r\n  statsDisplayKeys: any,\r\n  editable: boolean,\r\n  cardbg?: string\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }: StatDisplayComponentProps) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, sectionValues]: any) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text={\"lightfont\" as any} className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Formula from \"../../Formula\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport { IFieldDisplay } from \"../../Types/IFieldDisplay\";\r\nimport { usePromise } from \"../../Util/ReactUtil\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No Infusion</span>,\r\n  \"pyro\": <span >Pyro Infusion</span>,\r\n  \"cryo\": <span >Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className?: string\r\n}\r\nexport function InfusionAuraDropdown({ characterSheet, character: { infusionAura = \"\", characterKey }, characterDispatch, className }: InfusionAuraDropdownProps) {\r\n  if (!characterSheet.isMelee()) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\ntype ReactionToggleProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className: string\r\n}\r\nexport function ReactionToggle({ characterSheet, character: { characterKey, reactionMode = \"none\", infusionAura }, characterDispatch, className }: ReactionToggleProps) {\r\n  if (reactionMode === null) reactionMode = \"none\"\r\n  const charEleKey = characterSheet.elementKey\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ characterSheet, build }: { characterSheet: CharacterSheet, build: ICalculatedStats }) {\r\n  const displayStatKeys = useMemo(() => characterSheet.getDisplayStatKeys(build), [build, characterSheet])\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n      return <Card bg=\"darkcontent\" text={\"lightfont\" as any} key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              if (Array.isArray(field))\r\n                return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} fieldIndex={fieldIndex} />\r\n              else if (typeof field === \"string\") {//simple statKey field\r\n                const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              return null\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\nfunction FormulaCalculationField({ fieldKeys, build, fieldIndex }: { fieldKeys: string[], build: ICalculatedStats, fieldIndex: number, }) {\r\n  const formula = usePromise(Formula.get(fieldKeys))\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.()\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n      <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n      <Card.Body className=\"p-2\">\r\n        <div className=\"mb-n2\">\r\n          <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n          {subFormulaKeys.map(subKey =>\r\n            <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\ntype DamageOptionsAndCalculationProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  className: string\r\n}\r\nexport default function DamageOptionsAndCalculation({ characterSheet, weaponSheet, character, character: { hitMode }, characterDispatch, newBuild, equippedBuild, className }: DamageOptionsAndCalculationProps) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle callback={undefined} {...{ as: Button }} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={undefined}\r\n                      disabled={undefined}\r\n                      percent={undefined}\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value, characterSheet, weaponSheet })}\r\n                    />\r\n                  </Col>\r\n                  {[\"physical\", ...allElements].map(eleKey => {\r\n                    let statKey = `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity, characterSheet, weaponSheet })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay characterSheet={characterSheet} build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport Stat from '../Stat';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterSheet from './CharacterSheet';\r\ntype CharacterCardProps = { characterKey: string, onEdit?: (any) => void, onDelete?: (any) => void, cardClassName: string, header?: JSX.Element, bg?: string, footer?: boolean }\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer = false }: CharacterCardProps) {\r\n  const [, forceUpdate] = useForceUpdate()\r\n  useEffect(() => {\r\n    characterKey && CharacterDatabase.registerCharListener(characterKey, forceUpdate)\r\n    return () => { characterKey && CharacterDatabase.unregisterCharListener(characterKey, forceUpdate) }\r\n  }, [characterKey, forceUpdate])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const character = CharacterDatabase.get(characterKey)\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheet = usePromise(character && WeaponSheet.get(character.weapon.key))\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets])\r\n  if (!character || !characterSheet || !weaponSheet || !stats) return null;\r\n\r\n  const { weapon, constellation } = character\r\n  const name = characterSheet.name\r\n  const elementKey = characterSheet.elementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponName = weaponSheet?.name\r\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon, weaponSheet)\r\n  const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponSubVal = Weapon.getWeaponSubstatValWithOverride(weapon, weaponSheet)\r\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {header ? header : <h5><b>{name}</b></h5>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(characterKey)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete(characterKey)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onEdit?.(characterKey)} className={onEdit ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={characterSheet.thumbImg} className={`thumb-big grad-${characterSheet.star}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h3 className=\"mb-0\">{Character.getLevelString(character, characterSheet, weaponSheet)} {`C${constellation}`}</h3>\r\n          <h5 className=\"mb-0\"><Stars stars={characterSheet.star} colored /></h5>\r\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = artifactSheets?.[key].name ?? \"\"\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = stats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      } as any}>Generate Builds</Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { strPadLeft } from \"./Util\"\r\n\r\nexport function msToUnits(ms) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nexport function timeString(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nexport function timeStringMs(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BuildWorker.8bbe2569.worker.js\");\n}\n","import { faCheckSquare, faSortAmountDownAlt, faSortAmountUp, faSquare, faTimes, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, Image, InputGroup, ListGroup, Modal, OverlayTrigger, ProgressBar, Row, Tooltip } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BuildWorker\";\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../Artifact/Component/SetEffectDisplay';\r\nimport Character from '../Character/Character';\r\nimport CharacterCard from '../Character/CharacterCard';\r\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../Character/CharacterDisplay/DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from '../Character/CharacterDisplay/StatDisplayComponent';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport Formula from '../Formula';\r\nimport Stat from '../Stat';\r\nimport { IArtifact } from '../Types/artifact';\r\nimport { ArtifactsBySlot, BuildSetting } from '../Types/Build';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IFieldDisplay } from '../Types/IFieldDisplay';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { timeStringMs } from '../Util/TimeUtil';\r\nimport { crawlObject, deepClone, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport { calculateTotalBuildNumber } from './Build';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCard = lazy(() => import('../Character/CharacterDisplayCard'))\r\n\r\nconst warningBuildNumber = 10000000\r\nconst maxBuildsToShowList = [50, 25, 10, 5]\r\nconst maxBuildsToShowDefault = 25\r\nconst autoBuildGenLimit = 100\r\nconst artifactsSlotsToSelectMainStats: SlotKey[] = [\"sands\", \"goblet\", \"circlet\"]\r\nconst initialBuildSettings = (): BuildSetting => ({\r\n  setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n  statFilters: {},\r\n  mainStatKeys: [\"\", \"\", \"\"],\r\n  optimizationTarget: \"finalATK\",//TODO need to validate\r\n  mainStatAssumptionLevel: 0,\r\n  useLockedArts: false,\r\n  useEquippedArts: false,\r\n  ascending: false,\r\n})\r\n\r\nfunction buildSettingsReducer(state: BuildSetting, action): BuildSetting {\r\n  switch (action.type) {\r\n    case 'mainStatKey': {\r\n      const { index, mainStatKey } = action\r\n      state.mainStatKeys[index] = mainStatKey\r\n      return { ...state, mainStatKeys: [...state.mainStatKeys] }//do this because this is a dependency, so needs to be a \"new\" array\r\n    }\r\n    case `setFilter`: {\r\n      const { index, key, num = 0 } = action\r\n      state.setFilters[index] = { key, num }\r\n      return { ...state, setFilters: [...state.setFilters] }//do this because this is a dependency, so needs to be a \"new\" array\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\n\r\nexport default function BuildDisplay({ location: { characterKey: propCharacterKey } }) {\r\n  const [characterKey, setcharacterKey] = useState(\"\")\r\n  const [buildSettings, buildSettingsDispatch] = useReducer(buildSettingsReducer, initialBuildSettings())\r\n  const { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending, } = buildSettings\r\n\r\n  const [builds, setbuilds] = useState([] as any[])\r\n  const [maxBuildsToShow, setmaxBuildsToShow] = useState(maxBuildsToShowDefault)\r\n\r\n  const [modalBuild, setmodalBuild] = useState(null)//the newBuild that is being displayed in the character modal\r\n  const [showArtCondModal, setshowArtCondModal] = useState(false)\r\n  const [showCharacterModal, setshowCharacterModal] = useState(false)\r\n\r\n  const [generatingBuilds, setgeneratingBuilds] = useState(false)\r\n  const [generationProgress, setgenerationProgress] = useState(0)\r\n  const [generationDuration, setgenerationDuration] = useState(0)//in ms\r\n  const [generationSkipped, setgenerationSkipped] = useState(0)\r\n\r\n  const [charDirty, setCharDirty] = useForceUpdate()\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const isMounted = useRef(false)\r\n\r\n  const worker = useRef(null as Worker | null)\r\n\r\n  useEffect(() => ReactGA.pageview('/build'), [])\r\n\r\n  useEffect(() => {\r\n    CharacterDatabase.registerCharListener(characterKey, setCharDirty)\r\n    return () => { characterKey && CharacterDatabase.unregisterCharListener(characterKey, setCharDirty) }\r\n  }, [characterKey, setCharDirty])\r\n\r\n  //terminate worker when component unmounts\r\n  useEffect(() => () => worker.current?.terminate(), [])\r\n\r\n  //select a new character Key\r\n  const selectCharacter = useCallback((cKey = \"\") => {\r\n    if (characterKey === cKey) return\r\n    setcharacterKey(cKey)\r\n    CharacterDatabase.registerCharListener(cKey, setCharDirty)\r\n    buildSettingsDispatch({ ...initialBuildSettings(), ...(CharacterDatabase.get(cKey)?.buildSettings ?? {}) })\r\n    setbuilds([])\r\n    return () => CharacterDatabase.unregisterCharListener(cKey, setCharDirty)\r\n  }, [setCharDirty, setcharacterKey, buildSettingsDispatch, characterKey])\r\n\r\n  //load saved stat from DB. will cause infinite loop if add 'selectCharacter' to dependency array\r\n  useEffect(() => {//startup load from localStorage\r\n    if (!(\"BuildsDisplay.state\" in localStorage)) return\r\n    const { characterKey = \"\", maxBuildsToShow = maxBuildsToShowDefault } = loadFromLocalStorage(\"BuildsDisplay.state\") ?? {}\r\n    if (characterKey && CharacterDatabase.get(characterKey)) selectCharacter(characterKey)\r\n    setmaxBuildsToShow(maxBuildsToShow)\r\n  }, [])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => propCharacterKey && selectCharacter(propCharacterKey), [propCharacterKey, selectCharacter])//update when props update\r\n  const character = useMemo(() => charDirty && CharacterDatabase.get(characterKey), [characterKey, charDirty])\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheet = usePromise(character && WeaponSheet.get(character.weapon.key))\r\n  const initialStats = useMemo(() => charDirty && character && characterSheet && weaponSheet && Character.createInitialStats(character, characterSheet, weaponSheet), [character, charDirty, characterSheet, weaponSheet])\r\n  const statsDisplayKeys = useMemo(() => charDirty && characterSheet && characterSheet.getDisplayStatKeys(initialStats), [initialStats, charDirty, characterSheet])\r\n\r\n  //save build settings to character when buildSettings change, will cause infinite loop if add 'character' to dependency array\r\n  useEffect(() => {\r\n    if (!character) return\r\n    character.buildSettings = buildSettings\r\n    CharacterDatabase.update(character)\r\n  }, [buildSettings]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //save to BuildsDisplay.state on change\r\n  useEffect(() => {\r\n    if (isMounted.current) saveToLocalStorage(\"BuildsDisplay.state\", { characterKey, maxBuildsToShow })\r\n    else isMounted.current = true\r\n  }, [characterKey, maxBuildsToShow])\r\n\r\n\r\n  const { split, totBuildNumber } = useMemo(() => {\r\n    if (!characterKey) // Make sure we have all slotKeys\r\n      return { split: Object.fromEntries(allSlotKeys.map(slotKey => [slotKey, []])) as ArtifactsBySlot, totBuildNumber: 0 }\r\n    const artifactDatabase: { [id: string]: IArtifact } = deepClone(ArtifactDatabase.getArtifactDatabase())\r\n    Object.entries(artifactDatabase).forEach(([key, art]) => {\r\n      //if its equipped on the selected character, bypass the check\r\n      if (art.location === characterKey) return\r\n\r\n      if (art.lock && !useLockedArts) delete artifactDatabase[key]\r\n      else if (art.location && !useEquippedArts) delete artifactDatabase[key]\r\n    })\r\n    const split = Artifact.splitArtifactsBySlot(artifactDatabase);\r\n    //filter the split slots on the mainstats selected.\r\n    artifactsSlotsToSelectMainStats.forEach((slotKey, index) =>\r\n      mainStatKeys[index] && (split[slotKey] = split[slotKey]?.filter((art) => art.mainStatKey === mainStatKeys[index])))\r\n    const totBuildNumber = calculateTotalBuildNumber(split, setFilters)\r\n    return { split, totBuildNumber }\r\n  }, [characterKey, useLockedArts, useEquippedArts, mainStatKeys, setFilters])\r\n\r\n  const generateBuilds = useCallback((turbo = false) => {\r\n    if (!initialStats || !artifactSheets) return\r\n    if (typeof turbo !== \"boolean\") turbo = false\r\n    setbuilds([])\r\n    setgeneratingBuilds(true)\r\n    setgenerationDuration(0)\r\n    setgenerationProgress(0)\r\n    setgenerationSkipped(0)\r\n    //get the formula for this target\r\n\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    const artifactSetEffects = Artifact.setEffectsObjs(artifactSheets, initialStats)\r\n    const splitArtifacts = deepClone(split) as ArtifactsBySlot\r\n    //add mainStatVal to each artifact\r\n    Object.values(splitArtifacts).forEach(artArr => {\r\n      artArr!.forEach(art => {\r\n        art.mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(mainStatAssumptionLevel, art.numStars * 4), art.level)) ?? 0;\r\n      })\r\n    })\r\n    //generate the key dependencies for the formula\r\n    const minFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { min }]) => [statKey, min]).filter(([, min]) => typeof min === \"number\"))\r\n    const maxFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { max }]) => [statKey, max]).filter(([, max]) => typeof max === \"number\"))\r\n    //create an obj with app the artifact set effects to pass to buildworker.\r\n    const data = {\r\n      splitArtifacts, initialStats, artifactSetEffects,\r\n      setFilters, minFilters, maxFilters, maxBuildsToShow, optimizationTarget, ascending, turbo\r\n    };\r\n    worker.current?.terminate()\r\n    worker.current = new Worker()\r\n    worker.current.onmessage = (e) => {\r\n      if (typeof e.data.progress === \"number\") {\r\n        const { progress, timing = 0, skipped = 0 } = e.data\r\n        setgenerationProgress(progress)\r\n        setgenerationDuration(timing)\r\n        setgenerationSkipped(skipped)\r\n        return\r\n      }\r\n      ReactGA.timing({\r\n        category: \"Build Generation\",\r\n        variable: \"timing\",\r\n        value: e.data.timing,\r\n        label: totBuildNumber.toString()\r\n      })\r\n      const builds = e.data.builds.map(obj =>\r\n        Character.calculateBuildwithArtifact(initialStats, obj.artifacts, artifactSheets))\r\n      setbuilds(builds)\r\n      setgeneratingBuilds(false)\r\n      worker.current?.terminate()\r\n      worker.current = null\r\n    };\r\n    worker.current.postMessage(data)\r\n  }, [artifactSheets, split, totBuildNumber, mainStatAssumptionLevel, ascending, initialStats, maxBuildsToShow, optimizationTarget, setFilters, statFilters])\r\n\r\n  //try to generate build when build numbers are low\r\n  useEffect(() => {\r\n    if (totBuildNumber <= autoBuildGenLimit) generateBuilds()\r\n    else setbuilds([])\r\n  }, [characterKey, split, totBuildNumber, buildSettings, generateBuilds])\r\n\r\n  const dropdownitemsForStar = useCallback((star, index) => artifactSheets && ArtifactSheet.setsWithMaxRarity(artifactSheets, star).map(([setKey, setobj]) => {\r\n    if (setFilters.some(filter => filter.key === setKey)) return false;\r\n    const setsNumArr = Object.keys(artifactSheets?.[setKey]?.setEffects ?? {})\r\n    const artsAccountedOther = setFilters.reduce((accu, cur, ind) => (cur.key && ind !== index) ? accu + cur.num : accu, 0)\r\n    if (setsNumArr.every((num: any) => parseInt(num) + artsAccountedOther > 5)) return false;\r\n    return (<Dropdown.Item key={setKey} onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: setKey, num: parseInt(setsNumArr[0] as any) ?? 0 })} >\r\n      {setobj.name}\r\n    </Dropdown.Item>)\r\n  }), [setFilters, buildSettingsDispatch, artifactSheets])\r\n\r\n  const characterName = characterSheet?.name ?? \"Character Name\"\r\n  const characterDropDown = useMemo(() => <DropdownButton title={characterName} disabled={generatingBuilds}>\r\n    <Dropdown.Item onClick={() => selectCharacter(\"\")}>Unselect Character</Dropdown.Item>\r\n    <Dropdown.Divider />\r\n    <CharacterSelectionDropdownList onSelect={cKey => selectCharacter(cKey)} />\r\n  </DropdownButton>, [characterName, generatingBuilds, selectCharacter])\r\n\r\n  const formula = usePromise(Array.isArray(optimizationTarget) ? Formula.get(optimizationTarget) : undefined)\r\n  const sortByText = useMemo(() => {\r\n    if (Array.isArray(optimizationTarget) && formula) {\r\n      const field = (formula as any).field as IFieldDisplay\r\n      const variant = Character.getTalentFieldValue(field, \"variant\", initialStats)\r\n      const text = Character.getTalentFieldValue(field, \"text\", initialStats)\r\n      let [, , talentKey] = (formula as any).keys as string[]\r\n      if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n      return <b>{characterSheet?.getTalent(talentKey)?.name}: <span className={`text-${variant}`}>{text}</span></b>\r\n\r\n    } else return <b>Basic Stat: <span className={`text-${Stat.getStatVariant(optimizationTarget)}`}>{Stat.getStatNamePretty(optimizationTarget)}</span></b>\r\n    // return <Badge variant=\"danger\">INVALID</Badge>\r\n  }, [optimizationTarget, formula, initialStats, characterSheet])\r\n\r\n\r\n  const artsAccounted = setFilters.reduce((accu, cur) => cur.key ? accu + cur.num : accu, 0)\r\n  const artifactCondCount = useMemo(() => {\r\n    let count = 0;\r\n    crawlObject(initialStats?.conditionalValues?.artifact, [], v => Array.isArray(v), () => count++)\r\n    return count\r\n  }, [initialStats?.conditionalValues])\r\n  //rudimentary dispatcher, definitely not the same API as the real characterDispatch.\r\n  const characterDispatch = useCallback(val => CharacterDatabase.update({ ...character, ...val }), [character])\r\n\r\n  const hasMinFilters = Object.entries(statFilters).some(([statKey, { min }]) => typeof min === \"number\")\r\n  const hasMaxFilters = Object.entries(statFilters).some(([statKey, { max }]) => typeof max === \"number\")\r\n  const disabledTurbo = ascending ? hasMinFilters : hasMaxFilters\r\n\r\n  return <Container>\r\n    <BuildModal {...{ build: modalBuild, showCharacterModal, characterKey, selectCharacter, setmodalBuild, setshowCharacterModal }} />\r\n    {!!initialStats && <ArtConditionalModal {...{ showArtCondModal, setshowArtCondModal, initialStats, characterDispatch, artifactCondCount }} />}\r\n    <Row className=\"mt-2 mb-2\">\r\n      <Col>\r\n        {/* Build Generator Editor */}\r\n        <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n          <Card.Header>Build Generator</Card.Header>\r\n          <Card.Body>\r\n            <Row >\r\n              <Col xs={12} lg={6}>\r\n                {/* character selection */}\r\n                {characterKey ?\r\n                  <CharacterCard header={characterDropDown} characterKey={characterKey} bg={\"lightcontent\"} cardClassName=\"mb-2\" onEdit={!generatingBuilds ? () => setshowCharacterModal(true) : undefined} /> :\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                    <Card.Header>\r\n                      {characterDropDown}\r\n                    </Card.Header>\r\n                  </Card>}\r\n                {/* Hit mode options */}\r\n                {!!characterSheet?.hasTalentPage && character && <HitModeCard characterSheet={characterSheet} className=\"mb-2\" character={character} />}\r\n                {/* Final Stat Filter */}\r\n                {Boolean(statsDisplayKeys) && <StatFilterCard className=\"mb-2\" statFilters={statFilters} statKeys={statsDisplayKeys?.basicKeys as any} setStatFilters={sFs => buildSettingsDispatch({ statFilters: sFs })} />}\r\n              </Col>\r\n              <Col xs={12} lg={6}><Row>\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any}><Card.Body>\r\n                    <Button className=\"w-100\" onClick={() => setshowArtCondModal(true)} disabled={generatingBuilds}>\r\n                      <span>Default Artifact Set Effects {Boolean(artifactCondCount) && <Badge variant=\"success\">{artifactCondCount} Selected</Badge>}</span>\r\n                    </Button>\r\n                  </Card.Body></Card>\r\n                </Col>\r\n                {/* Artifact set picker */}\r\n                {setFilters.map(({ key: setKey, num: setNum }: { key: ArtifactSetKey, num: number }, index) => <Col className=\"mb-2\" key={index} xs={12}>\r\n                  <Card className=\"h-100\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n                    <Card.Header>\r\n                      <ButtonGroup>\r\n                        {/* Artifact set */}\r\n                        <DropdownButton as={ButtonGroup} title={artifactSheets?.[setKey]?.name ?? \"Artifact Set Filter\"} disabled={generatingBuilds}>\r\n                          <Dropdown.Item onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: \"\" })}>Unselect Artifact</Dropdown.Item>\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(5, index)}\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(4, index)}\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(3, index)}\r\n                        </DropdownButton>\r\n                        {/* set number */}\r\n                        <DropdownButton as={ButtonGroup} title={`${setNum}-set`}\r\n                          disabled={generatingBuilds || !setKey || artsAccounted >= 5}\r\n                        >\r\n                          {!!initialStats && Object.keys(artifactSheets?.[setKey]?.setEffects ?? {}).map((num: any) => {\r\n                            let artsAccountedOther = setFilters.reduce((accu, cur) => (cur.key && cur.key !== setKey) ? accu + cur.num : accu, 0)\r\n                            return (parseInt(num) + artsAccountedOther <= 5) &&\r\n                              (<Dropdown.Item key={num} onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: setFilters[index].key, num: parseInt(num) })} >\r\n                                {`${num}-set`}\r\n                              </Dropdown.Item>)\r\n                          })}\r\n                        </DropdownButton>\r\n                      </ButtonGroup>\r\n                    </Card.Header>\r\n                    {setKey ? <Card.Body><Row className=\"mb-n2\">\r\n                      {!!initialStats && Object.keys(artifactSheets?.[setKey].setEffects ?? {}).map(setNKey => parseInt(setNKey) as SetNum).filter(setNkey => setNkey <= setNum).map(setNumKey =>\r\n                        <SetEffectDisplay newBuild={undefined} key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild: initialStats, characterDispatch, editable: true }} />)}\r\n                    </Row></Card.Body> : null}\r\n                  </Card>\r\n                </Col>)}\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any}><Card.Body className=\"mb-n2\">\r\n                    <Button className=\"w-100 mb-2\" onClick={() => buildSettingsDispatch({ useEquippedArts: !useEquippedArts })} disabled={generatingBuilds}>\r\n                      <span><FontAwesomeIcon icon={useEquippedArts ? faCheckSquare : faSquare} /> Use Equipped Artifacts</span>\r\n                    </Button>\r\n                    <Button className=\"w-100 mb-2\" onClick={() => buildSettingsDispatch({ useLockedArts: !useLockedArts })} disabled={generatingBuilds}>\r\n                      <span><FontAwesomeIcon icon={useLockedArts ? faCheckSquare : faSquare} /> Use Locked Artifacts</span>\r\n                    </Button>\r\n                  </Card.Body></Card>\r\n                </Col>\r\n                {/* main stat selector */}\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n                    <Card.Header>\r\n                      <Row>\r\n                        <Col>Artifact Main Stat</Col>\r\n                        <Col xs=\"auto\"><AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={v => buildSettingsDispatch({ mainStatAssumptionLevel: v })} /></Col>\r\n                      </Row>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"mb-n2\">\r\n                      {artifactsSlotsToSelectMainStats.map((slotKey, index) =>\r\n                      (<div className=\"text-inline mb-1 d-flex justify-content-between\" key={slotKey}>\r\n                        <h6 className=\"d-inline mb-0\">\r\n                          {Artifact.slotNameWithIcon(slotKey)}\r\n                        </h6>\r\n                        <DropdownButton disabled={generatingBuilds} size=\"sm\"\r\n                          title={mainStatKeys[index] ? Stat.getStatNameWithPercent(mainStatKeys[index]) : \"Select a mainstat\"}\r\n                          className=\"d-inline\">\r\n                          <Dropdown.Item onClick={() => buildSettingsDispatch({ type: \"mainStatKey\", index, mainStatKey: \"\" })} >No MainStat</Dropdown.Item>\r\n                          {Artifact.slotMainStats(slotKey).map(mainStatKey =>\r\n                            <Dropdown.Item onClick={() => buildSettingsDispatch({ type: \"mainStatKey\", index, mainStatKey })} key={mainStatKey}>\r\n                              {Stat.getStatNameWithPercent(mainStatKey)}\r\n                            </Dropdown.Item>)}\r\n                        </DropdownButton>\r\n                      </div>))}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row></Col>\r\n            </Row>\r\n            <Row className=\"mb-2\">\r\n              <Col>{!!characterKey && <BuildAlert {...{ totBuildNumber, generatingBuilds, generationSkipped, generationProgress, generationDuration, characterName, maxBuildsToShow }} />}</Col>\r\n            </Row>\r\n            <Row className=\"d-flex justify-content-between\">\r\n              <Col xs=\"auto\" >\r\n                <ButtonGroup>\r\n                  <Button\r\n                    className=\"h-100\"\r\n                    disabled={!characterKey || generatingBuilds}\r\n                    variant={(characterKey && totBuildNumber <= warningBuildNumber) ? \"success\" : \"warning\"}\r\n                    onClick={generateBuilds}\r\n                  ><span>Generate Builds</span></Button>\r\n                  {totBuildNumber > warningBuildNumber && <OverlayTrigger\r\n                    overlay={<Tooltip id=\"turbo-tooltip\">\r\n                      <div>Dramatically speeds up build time.</div>\r\n                      <div>Yields only 1 build.</div>\r\n                      {Boolean(disabledTurbo) && <div className=\"mt-2\">Does not work with <b>{Boolean(ascending) ? 'min' : 'max'}imum</b> stat filter when sorting by <b>{Boolean(ascending) ? 'as' : 'des'}cending</b></div>}\r\n                    </Tooltip>}\r\n                  ><span >\r\n                      <Button variant=\"success\" disabled={disabledTurbo} className={`rounded-0 ${disabledTurbo ? \"cursor-pointer\" : \"\"}`} onClick={() => generateBuilds(true)}><strong>TURBO</strong></Button>\r\n                    </span></OverlayTrigger>}\r\n                  <Button\r\n                    className=\"h-100\"\r\n                    disabled={!generatingBuilds}\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                      if (!worker.current) return;\r\n                      worker.current.terminate();\r\n                      worker.current = null\r\n                      setgeneratingBuilds(false)\r\n                      setbuilds([])\r\n                      setgenerationDuration(0)\r\n                      setgenerationProgress(0)\r\n                      setgenerationSkipped(0)\r\n                    }}\r\n                  ><span>Cancel</span></Button>\r\n                </ButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                {/* Dropdown to select sorting value */}\r\n                {<ButtonGroup>\r\n                  <Dropdown as={ButtonGroup} drop=\"up\">\r\n                    <Dropdown.Toggle disabled={generatingBuilds} variant=\"success\" >\r\n                      <span>Sort by {sortByText}</span>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu align=\"right\" style={{ minWidth: \"40rem\" }} >\r\n                      <Row>\r\n                        {!!statsDisplayKeys && Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n                          let header = \"\"\r\n                          if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n                          else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n                          else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n                          else header = (characterSheet?.getTalent(talentKey)?.name ?? talentKey as string)\r\n                          return <Col xs={12} md={6} key={talentKey}>\r\n                            <Dropdown.Header style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}><b>{header}</b></Dropdown.Header>\r\n                            {fields.map((target, i) => {\r\n                              if (Array.isArray(target))\r\n                                return <TargetSelectorDropdownItem key={i} {...{ target, buildSettingsDispatch, initialStats }} />\r\n                              else if (typeof target === \"string\")\r\n                                return <Dropdown.Item key={i} onClick={() => buildSettingsDispatch({ optimizationTarget: target })}>{Stat.getStatNamePretty(target)}</Dropdown.Item>\r\n                              return null\r\n                            })}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                  <Button onClick={() => buildSettingsDispatch({ ascending: !buildSettings.ascending })} disabled={generatingBuilds} variant={ascending ? \"danger\" : \"primary\"}>\r\n                    <FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />\r\n                    <span>{ascending ? \"Ascending\" : \"Descending\"}</span>\r\n                  </Button>\r\n                </ButtonGroup >}\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-2\">\r\n      <Col>\r\n        <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>{characterKey ? <span>Showing <b>{builds.length}</b> Builds generated for {characterName}</span> : <span>Select a character to generate builds.</span>}</Col>\r\n              <Col xs=\"auto\">\r\n                <DropdownButton title={<span>Max builds to show: <b>{maxBuildsToShow}</b></span>} size=\"sm\">\r\n                  {maxBuildsToShowList.map(v => <Dropdown.Item key={v} onClick={() => setmaxBuildsToShow(v)}>{v}</Dropdown.Item>)}\r\n                </DropdownButton>\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          {/* Build List */}\r\n          <ListGroup>\r\n            {builds.map((build, index) =>\r\n              index < maxBuildsToShow && characterSheet && weaponSheet && <ArtifactDisplayItem characterSheet={characterSheet} weaponSheet={weaponSheet} build={build} characterKey={characterKey} index={index} key={index} statsDisplayKeys={statsDisplayKeys} onClick={() => setmodalBuild(build as any)} />\r\n            )}\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container >\r\n}\r\n\r\nfunction TargetSelectorDropdownItem({ target, buildSettingsDispatch, initialStats }) {\r\n  const formula = usePromise(Formula.get(target))\r\n  if (!formula) return null\r\n  const talentField = (formula as any).field as IFieldDisplay\r\n  return <Dropdown.Item onClick={() => buildSettingsDispatch({ optimizationTarget: target })} style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}>\r\n    <span className={`text-${Character.getTalentFieldValue(talentField, \"variant\", initialStats)}`}>{Character.getTalentFieldValue(talentField, \"text\", initialStats)}</span>\r\n  </Dropdown.Item>\r\n}\r\n\r\nfunction BuildModal({ build, showCharacterModal, characterKey, selectCharacter, setmodalBuild, setshowCharacterModal }) {\r\n  const closeModal = useCallback(() => {\r\n    setmodalBuild(null)\r\n    setshowCharacterModal(false)\r\n  }, [setmodalBuild, setshowCharacterModal])\r\n  return <Modal show={Boolean(showCharacterModal || build)} onHide={closeModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n    <React.Suspense fallback={<span>Loading...</span>}>\r\n      <CharacterDisplayCard\r\n        character={undefined}\r\n        tabName={undefined}\r\n        characterKey={characterKey}\r\n        setCharacterKey={cKey => selectCharacter(cKey)}\r\n        newBuild={build}\r\n        onClose={closeModal}\r\n        editable={showCharacterModal}\r\n        footer={<Button variant=\"danger\" onClick={closeModal}>Close</Button>} />\r\n    </React.Suspense>\r\n  </Modal>\r\n}\r\n\r\nfunction ArtConditionalModal({ showArtCondModal, setshowArtCondModal, initialStats, characterDispatch, artifactCondCount }) {\r\n  const closeArtCondModal = useCallback(() => setshowArtCondModal(false), [setshowArtCondModal])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  if (!artifactSheets) return null\r\n  const artSetKeyList = ArtifactSheet.namesByMaxRarities(artifactSheets).flatMap(([, items]) => items.map(([key]) => [key, artifactSheets[key]] as const))\r\n  return <Modal show={showArtCondModal} onHide={closeArtCondModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <h5>Default Artifact Set Effects  {Boolean(artifactCondCount) && <Badge variant=\"success\">{artifactCondCount} Selected</Badge>}</h5>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button onClick={() => {\r\n              if (initialStats.conditionalValues.artifact) initialStats.conditionalValues.artifact = {}\r\n              characterDispatch({ conditionalValues: initialStats.conditionalValues })\r\n            }}><span><FontAwesomeIcon icon={faUndo} /> Reset All</span></Button>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={closeArtCondModal}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          {artSetKeyList.map(([setKey, sheet]) => {\r\n            let icon = Object.values(sheet.slotIcons)[0]\r\n            let numStars = [...sheet.rarity][0]\r\n            return <Col className=\"mb-2\" key={setKey} xs={12} lg={6} xl={4}>\r\n              <Card className=\"h-100\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n                <Card.Header >\r\n                  <Row>\r\n                    <Col xs=\"auto\" className=\"ml-n3 my-n2\">\r\n                      <Image src={icon} className={`thumb-mid grad-${numStars}star m-1`} thumbnail />\r\n                    </Col>\r\n                    <Col >\r\n                      <h6><b>{artifactSheets?.[setKey].name ?? \"\"}</b></h6>\r\n                      <span><Stars stars={numStars} /></span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Header>\r\n                <Card.Body><Row className=\"mb-n2\">\r\n                  {Boolean(setKey) && Object.keys(sheet.setEffects).map(key => parseInt(key) as SetNum).map(setNumKey =>\r\n                    <SetEffectDisplay newBuild={undefined} key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild: initialStats, editable: true, characterDispatch, }} />)}\r\n                </Row></Card.Body>\r\n              </Card>\r\n            </Col>\r\n          })}\r\n        </Row>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"danger\" onClick={closeArtCondModal}>\r\n          <FontAwesomeIcon icon={faTimes} /> CLOSE</Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nfunction StatFilterItem({ statKey, statKeys = [], min, max, close, setFilter }: {\r\n  statKey?, statKeys, min, max, close, setFilter\r\n}) {\r\n  const isFloat = Stat.getStatUnit(statKey) === \"%\"\r\n  const inputProps = {\r\n    disabled: !statKey,\r\n    allowEmpty: true,\r\n    float: isFloat,\r\n  }\r\n  const minInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MIN\",\r\n    value: min,\r\n    onChange: (s) => setFilter(statKey, s, max)\r\n  }\r\n  const maxInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MAX\",\r\n    value: max,\r\n    onChange: (s) => setFilter(statKey, min, s)\r\n  }\r\n  return <InputGroup className=\"mb-2\">\r\n    <DropdownButton\r\n      as={InputGroup.Prepend}\r\n      title={Stat.getStatNamePretty(statKey, \"New Stat\")}\r\n      id=\"input-group-dropdown-1\"\r\n    >\r\n      {statKeys.map(sKey => <Dropdown.Item key={sKey} onClick={() => { close?.(); setFilter(sKey, min, max) }}>{Stat.getStatNamePretty(sKey)}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <CustomFormControl {...minInputProps} />\r\n    <CustomFormControl {...maxInputProps} />\r\n    {Boolean(close) && <InputGroup.Append>\r\n      <Button variant=\"danger\" onClick={close}><FontAwesomeIcon icon={faTrash} /></Button>\r\n    </InputGroup.Append>}\r\n  </InputGroup>\r\n}\r\n\r\nfunction HitModeCard({ characterSheet, character, className }: { characterSheet: CharacterSheet, character: ICharacter, className: string }) {\r\n  const setHitmode = useCallback(({ hitMode }) => CharacterDatabase.update({ ...character, hitMode }), [character])\r\n  const setReactionMode = useCallback(({ reactionMode }) => CharacterDatabase.update({ ...character, reactionMode }), [character])\r\n  const setInfusionAura = useCallback(({ infusionAura }) => CharacterDatabase.update({ ...character, infusionAura }), [character])\r\n  if (!character) return null\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className={className}>\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>Hit Mode Options</Col>\r\n        <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character} characterDispatch={setInfusionAura} /></Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"mb-n2\">\r\n      <HitModeToggle hitMode={character.hitMode} characterDispatch={setHitmode} className=\"w-100 mb-2\" />\r\n      <ReactionToggle characterSheet={characterSheet} character={character} characterDispatch={setReactionMode} className=\"w-100 mb-2\" />\r\n    </Card.Body>\r\n  </Card >\r\n}\r\n\r\nfunction StatFilterCard({ statKeys = [], statFilters = {}, setStatFilters, className }) {\r\n  const remainingKeys = statKeys.filter(key => !(Object.keys(statFilters) as any).some(k => k === key))\r\n  const setFilter = (sKey, min, max) => setStatFilters({ ...statFilters, [sKey]: { min, max } })\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className={className}>\r\n    <Card.Header>Final Stat Filter</Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-n2\">\r\n        {(Object.entries(statFilters) as [string, { min, max }][]).map(([statKey, { min, max }]) => {\r\n          return <Col xs={12} key={statKey} ><StatFilterItem statKey={statKey} statKeys={remainingKeys} setFilter={setFilter} min={min} max={max} close={() => {\r\n            delete statFilters[statKey]\r\n            setStatFilters({ ...statFilters })\r\n          }} /></Col>\r\n        })}\r\n        <Col xs={12}>\r\n          <StatFilterItem min={undefined} max={undefined} close={undefined} statKeys={remainingKeys} setFilter={setFilter} />\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\ntype ArtifactDisplayItemProps = { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, index: number, characterKey: string, build: ICalculatedStats, statsDisplayKeys: any, onClick: () => void }\r\n//for displaying each artifact build\r\nfunction ArtifactDisplayItem({ characterSheet, weaponSheet, index, characterKey, build, statsDisplayKeys, onClick }: ArtifactDisplayItemProps) {\r\n  const sheets = usePromise(ArtifactSheet.getAll())\r\n  const character = CharacterDatabase.get(characterKey)\r\n  if (!character) return null\r\n  return (<div>\r\n    <ListGroup.Item\r\n      variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"text-white\" action\r\n      onClick={onClick}\r\n    >\r\n      <h5>{(Object.entries(build.setToSlots) as [ArtifactSetKey, SlotKey[]][]).sort(([key1, slotarr1], [key2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n        <Badge key={key} variant=\"primary\" className=\"mr-2\">\r\n          {slotarr.map(slotKey => Artifact.slotIcon(slotKey))} {sheets?.[key].name ?? \"\"}\r\n        </Badge>\r\n      )}</h5>\r\n      <StatDisplayComponent editable={false} {...{ characterSheet, weaponSheet, character, newBuild: build, statsDisplayKeys, cardbg: (index % 2 ? \"lightcontent\" : \"darkcontent\") }} />\r\n    </ListGroup.Item>\r\n  </div>)\r\n}\r\n\r\nfunction BuildAlert({ totBuildNumber, generatingBuilds, generationSkipped, generationProgress, generationDuration, characterName, maxBuildsToShow }) {\r\n  const totalBuildNumberString = totBuildNumber?.toLocaleString() ?? totBuildNumber\r\n  const totalUnskipped = totBuildNumber - generationSkipped\r\n  const generationProgressString = generationProgress?.toLocaleString() ?? generationProgress\r\n  const generationSkippedString = generationSkipped?.toLocaleString() ?? generationSkipped\r\n  const totalUnskippedString = totalUnskipped?.toLocaleString() ?? totalUnskipped\r\n  const generationSkippedText = Boolean(generationSkipped) && <span>(<b>{generationSkippedString}</b> skipped)</span>\r\n  if (generatingBuilds) {\r\n    let progPercent = generationProgress * 100 / (totalUnskipped)\r\n    return <Alert variant=\"success\">\r\n      <span>Generating and testing <b className=\"text-monospace\">{generationProgressString}/{totalUnskippedString}</b> build configurations against the criteria for <b>{characterName}</b>. {generationSkippedText}</span><br />\r\n      <h6>Time elapsed: <strong className=\"text-monospace\">{timeStringMs(generationDuration)}</strong></h6>\r\n      <ProgressBar now={progPercent} label={`${progPercent.toFixed(1)}%`} />\r\n    </Alert>\r\n  } else if (!generatingBuilds && generationProgress) {//done\r\n    return <Alert variant=\"success\">\r\n      <span>Generated and tested <b className=\"text-monospace\">{totalUnskippedString}</b> Build configurations against the criteria for <b>{characterName}</b>. {generationSkippedText}</span>\r\n      <h6>Total duration: <strong className=\"text-monospace\">{timeStringMs(generationDuration)}</strong></h6>\r\n      <ProgressBar now={100} variant=\"success\" label=\"100%\" />\r\n    </Alert>\r\n  } else {\r\n    return totBuildNumber === 0 ?\r\n      <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will not generate any builds for <b>{characterName}</b>. Please change your Artifact configurations, or add/unlock more Artifacts.</span></Alert>\r\n      : (totBuildNumber > warningBuildNumber ?\r\n        <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will generate <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>. This might take quite a while to generate...</span></Alert> :\r\n        <Alert variant=\"success\" className=\"mb-0\"><span>Current configuration {totBuildNumber <= maxBuildsToShow ? \"generated\" : \"will generate\"} <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>.</span></Alert>)\r\n  }\r\n}\r\n\r\nconst levels = {\r\n  0: <span>No level assumption</span>,\r\n  4: <span>Assume at least level 4</span>,\r\n  8: <span>Assume at least level 8</span>,\r\n  12: <span>Assume at least level 12</span>,\r\n  16: <span>Assume at least level 16</span>,\r\n  20: <span>Assume at least level 20</span>\r\n}\r\nfunction AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel }) {\r\n  return <OverlayTrigger overlay={<Tooltip id=\"assume-level-tooltip\">Change Main Stat value to be at least a specific level. Does not change substats.</Tooltip>}  >\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant={mainStatAssumptionLevel ? \"orange\" : \"primary\"}>{levels[mainStatAssumptionLevel]}</Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        {Object.entries(levels).map(([key, text]) => <Dropdown.Item key={key} onClick={() => setmainStatAssumptionLevel(parseInt(key))}>{text}</Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  </OverlayTrigger>\r\n}\r\n","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n"],"sourceRoot":""}