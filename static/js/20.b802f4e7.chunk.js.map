{"version":3,"sources":["Util/WeaponSort.ts","Weapon/WeaponDisplay.tsx","Components/Card/CardLight.tsx","Components/Card/CardDark.tsx","Components/DropdownMenu/DropdownButton.tsx","Components/StarDisplay.tsx","Assets/icon_bow.png","Assets/Assets.ts","Assets/icon_catalyst.png","Assets/icon_claymore.png","Assets/icon_polearm.png","Assets/icon_sword.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/CloseButton.tsx","Components/ModalWrapper.tsx","Components/SolidToggleButtonGroup.tsx","ReactHooks/useForceUpdate.tsx","Components/Character/CharacterDropdownButton.tsx","Components/Character/ThumbSide.tsx","Components/Character/LocationName.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/ConditionalWrapper.tsx","Util/SortByFilters.ts","Components/SortByButton.tsx","Components/Weapon/WeaponSelectionModal.tsx","Weapon/WeaponCard.tsx"],"names":["sortKeys","WeaponDisplayCard","lazy","initialState","editWeaponId","sortType","ascending","rarity","weaponType","maxNumToDisplay","filterReducer","state","action","filterInit","initial","dbStorage","get","WeaponDisplay","props","database","useContext","DatabaseContext","useReducer","stateDisplatch","useState","newWeaponModalShow","setnewWeaponModalShow","useForceUpdate","dbDirty","forceUpdate","scrollRef","useRef","invScrollRef","pageIdex","setpageIdex","useEffect","ReactGA","pageview","followAnyWeapon","set","allWeaponSheets","usePromise","WeaponSheet","getAll","deleteWeapon","useCallback","key","a","weapon","_getWeapon","name","i18next","t","window","confirm","removeWeapon","editWeapon","setTimeout","current","scrollIntoView","behavior","newWeapon","weaponKey","createWeapon","initialWeapon","sortOptions","useMemo","weaponSheets","level","getValue","id","tieBreaker","WeaponSortOptions","keys","weapons","weaponIdList","totalWeaponNum","length","filter","wKey","dbWeapon","includes","sort","SortByFilters","numPages","Math","ceil","currentPageIndex","clamp","weaponIdsToShow","slice","totalShowing","setPage","e","value","resetEditWeapon","Box","sx","mt","mb","ref","weaponId","footer","onClose","CardDark","p","pb","Grid","container","spacing","item","WeaponToggle","height","onChange","size","flexGrow","SolidToggleButtonGroup","newVal","allRarities","map","star","ToggleButton","stars","SortByButton","onChangeAsc","alignItems","Pagination","count","page","Typography","color","fallback","xs","Skeleton","variant","width","minHeight","md","lg","xl","display","flexDirection","CardContent","textAlign","WeaponSelectionModal","show","onHide","onSelect","justifyContent","Button","onClick","borderRadius","icon","faPlus","className","sm","WeaponCard","onDelete","onEdit","canEquip","CardLight","styled","Card","backgroundColor","theme","palette","contentLight","main","contentDark","DropdownButton","title","children","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","endIcon","aria-controls","aria-haspopup","aria-expanded","undefined","MenuListProps","StarIcon","faStar","Stars","colored","component","Array","_","i","Assets","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","CloseButton","large","useTranslation","startIcon","minWidth","ScrollModal","Modal","overflow","paddingTop","paddingBottom","ModalContainer","Container","padding","pointerEvents","ModalWrapper","containerProps","ToggleButtonGroup","shouldForwardProp","prop","baseColor","selectedColor","contrastText","dark","stateDirty","update","CharacterDropdownButton","inventory","noUnselect","characterSheets","CharacterSheet","characterSheet","characterKeys","_getCharKeys","ck","thumbImg","src","thumbImgSide","selected","disabled","noWrap","CharacterMenuItemArray","selectedCharacterKey","characterKey","ThumbSide","lineHeight","verticalAlign","marginTop","marginLeft","marginRight","marginBottom","LocationName","location","nameWIthIcon","cb","exclusive","allWeaponTypeKeys","wt","ConditionalWrapper","condition","wrapper","sortby","options","Sort","b","filterOption","aV","bV","localeCompare","diff","i18nKey","faSortAmountDownAlt","faSortAmountUp","propWeaponFilter","weaponFilter","setWeaponfilter","Set","allWeaponKeys","py","weaponSheet","img","px","databaseWeapon","updateDatabaseWeapon","followWeapon","cs","weaponTypeKey","actionWrapperFunc","equipOnChar","charKey","setWeaponLocation","ascension","refinement","lock","weaponMainVal","getMainStatValue","toFixed","Stat","fixedUnit","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","statMap","passiveName","push","imgAwaken","avatar","fontSize","titleTypographyProps","updateWeapon","flexWrap","pl","ascensionMaxLevel","alignContent","statKey","statVal","unit","getStatUnit","StatIcon","getStatName","flexShrink","mr","faEdit","faTrashAlt"],"mappings":"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","file":"static/js/20.b802f4e7.chunk.js","sourcesContent":["import { ArtCharDatabase } from \"../Database/Database\";\r\nimport { WeaponKey } from \"../Types/consts\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport { SortOptions } from \"./SortByFilters\";\r\nexport const sortKeys = [\"level\", \"rarity\"]\r\nexport default function WeaponSortOptions(database: ArtCharDatabase, weaponSheets: StrictDict<WeaponKey, WeaponSheet>): SortOptions {\r\n  return {\r\n    level: {\r\n      getValue: (id: string) => database._getWeapon(id)?.level ?? 0,\r\n      tieBreaker: \"rarity\"\r\n    },\r\n    rarity: {\r\n      getValue: (id) => weaponSheets?.[database._getWeapon(id)?.key as any]?.rarity,\r\n      tieBreaker: \"level\"\r\n    }\r\n  }\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Box, Button, CardContent, Grid, Pagination, Skeleton, ToggleButton, Typography } from '@mui/material';\r\nimport i18next from 'i18next';\r\nimport React, { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport SolidToggleButtonGroup from '../Components/SolidToggleButtonGroup';\r\nimport SortByButton from '../Components/SortByButton';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport WeaponToggle from '../Components/ToggleButton/WeaponToggle';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport { dbStorage } from '../Database/DBStorage';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { allRarities, WeaponKey, WeaponTypeKey } from '../Types/consts';\r\nimport SortByFilters from '../Util/SortByFilters';\r\nimport { clamp } from '../Util/Util';\r\nimport WeaponSortOptions, { sortKeys } from '../Util/WeaponSort';\r\nimport WeaponCard from './WeaponCard';\r\nimport WeaponSelectionModal from '../Components/Weapon/WeaponSelectionModal';\r\nimport WeaponSheet from './WeaponSheet';\r\nimport { initialWeapon } from './WeaponUtil';\r\n\r\n//lazy load the weapon display\r\nconst WeaponDisplayCard = lazy(() => import('./WeaponDisplayCard'))\r\n\r\nconst initialState = () => ({\r\n  editWeaponId: \"\",\r\n  sortType: sortKeys[0],\r\n  ascending: false,\r\n  rarity: [5, 4],\r\n  weaponType: \"\" as WeaponTypeKey | \"\",\r\n  maxNumToDisplay: 30,\r\n})\r\nexport type stateType = ReturnType<typeof initialState>\r\n\r\nfunction filterReducer(state: stateType, action): stateType {\r\n  return { ...state, ...action }\r\n}\r\nfunction filterInit(initial = initialState()): stateType {\r\n  return { ...initial, ...(dbStorage.get(\"WeaponDisplay.state\") ?? {}) }\r\n}\r\n\r\nexport default function WeaponDisplay(props) {\r\n  const database = useContext(DatabaseContext)\r\n  const [state, stateDisplatch] = useReducer(filterReducer, initialState(), filterInit)\r\n  const [newWeaponModalShow, setnewWeaponModalShow] = useState(false)\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const invScrollRef = useRef<HTMLDivElement>(null)\r\n  const [pageIdex, setpageIdex] = useState(0)\r\n  //set follow, should run only once\r\n  useEffect(() => {\r\n    ReactGA.pageview('/weapon')\r\n    return database.followAnyWeapon(forceUpdate)\r\n  }, [forceUpdate, database])\r\n\r\n  //save to db\r\n  useEffect(() => {\r\n    dbStorage.set(\"WeaponDisplay.state\", state)\r\n  }, [state])\r\n\r\n  const allWeaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const deleteWeapon = useCallback(async (key) => {\r\n    const weapon = database._getWeapon(key)\r\n    if (!weapon) return\r\n    const name = i18next.t(`weapon_${weapon.key}_gen:name`)\r\n\r\n    if (!window.confirm(`Are you sure you want to remove ${name}?`)) return\r\n    database.removeWeapon(key)\r\n    if (state.editWeaponId === key)\r\n      stateDisplatch({ editWeaponId: \"\" })\r\n  }, [state.editWeaponId, stateDisplatch, database])\r\n\r\n  const editWeapon = useCallback(key => {\r\n    stateDisplatch({ editWeaponId: key })\r\n    setTimeout(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, 500);\r\n  }, [stateDisplatch, scrollRef])\r\n\r\n  const newWeapon = useCallback(\r\n    (weaponKey: WeaponKey) => {\r\n      editWeapon(database.createWeapon(initialWeapon(weaponKey)))\r\n    },\r\n    [database, editWeapon])\r\n\r\n  const sortOptions = useMemo(() => allWeaponSheets && WeaponSortOptions(database, allWeaponSheets), [database, allWeaponSheets])\r\n\r\n  const { weaponIdList, totalWeaponNum } = useMemo(() => {\r\n    const keys = database.weapons.keys\r\n    if (!sortOptions) return { weaponIdList: [], totalWeaponNum: keys.length }\r\n    const weaponIdList = keys.filter(wKey => {\r\n      const dbWeapon = database._getWeapon(wKey)\r\n      if (!dbWeapon) return false\r\n      if (state.weaponType && state.weaponType !== allWeaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n      if (!state.rarity.includes(allWeaponSheets?.[dbWeapon.key]?.rarity as any)) return false\r\n      return true\r\n    }).sort(SortByFilters(state.sortType, state.ascending, sortOptions));\r\n    return dbDirty && { weaponIdList, totalWeaponNum: keys.length }\r\n  }, [dbDirty, allWeaponSheets, database, sortOptions, state.sortType, state.ascending, state.rarity, state.weaponType])\r\n\r\n  const { weaponIdsToShow, numPages, currentPageIndex } = useMemo(() => {\r\n    const numPages = Math.ceil(weaponIdList.length / state.maxNumToDisplay)\r\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\r\n    return { weaponIdsToShow: weaponIdList.slice(currentPageIndex * state.maxNumToDisplay, (currentPageIndex + 1) * state.maxNumToDisplay), numPages, currentPageIndex }\r\n  }, [weaponIdList, pageIdex, state.maxNumToDisplay])\r\n\r\n  //for pagination\r\n  const totalShowing = weaponIdList.length !== totalWeaponNum ? `${weaponIdList.length}/${totalWeaponNum}` : `${totalWeaponNum}`\r\n  const setPage = useCallback(\r\n    (e, value) => {\r\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n      setpageIdex(value - 1);\r\n    },\r\n    [setpageIdex, invScrollRef],\r\n  )\r\n\r\n  const resetEditWeapon = useCallback(() => stateDisplatch({ editWeaponId: \"\" }), [stateDisplatch])\r\n\r\n  const { editWeaponId } = state\r\n  return <Box sx={{\r\n    mt: 1,\r\n    // select all excluding last\r\n    \"> div\": { mb: 1 },\r\n  }}>\r\n    {/* editor/character detail display */}\r\n    {!!editWeaponId && <Box ref={scrollRef} >\r\n      <WeaponDisplayCard\r\n        weaponId={editWeaponId}\r\n        footer\r\n        onClose={resetEditWeapon}\r\n      />\r\n    </Box>}\r\n    <CardDark ref={invScrollRef} sx={{ p: 2, pb: 1 }}>\r\n      <Grid container spacing={1} sx={{ mb: 1 }}>\r\n        <Grid item>\r\n          <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => stateDisplatch({ weaponType })} value={state.weaponType} size=\"small\" />\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <SolidToggleButtonGroup sx={{ height: \"100%\" }} onChange={(e, newVal) => stateDisplatch({ rarity: newVal })} value={state.rarity} size=\"small\">\r\n            {allRarities.map(star => <ToggleButton key={star} value={star}><strong>{star}{' '}</strong><Stars stars={1} /></ToggleButton>)}\r\n          </SolidToggleButtonGroup>\r\n        </Grid>\r\n        <Grid item >\r\n          <SortByButton sx={{ height: \"100%\" }} sortKeys={sortKeys}\r\n            value={state.sortType} onChange={sortType => stateDisplatch({ sortType })}\r\n            ascending={state.ascending} onChangeAsc={ascending => stateDisplatch({ ascending })}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"flex-end\">\r\n        <Grid item flexGrow={1}>\r\n          <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography color=\"text.secondary\">\r\n            {/* <Trans t={t} i18nKey=\"showingNum\" count={numShowing} value={total} > */}\r\n            Showing <b>{weaponIdsToShow.length}</b> out of {totalShowing} Weapons\r\n            {/* </Trans> */}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </CardDark>\r\n    <Grid container spacing={1}>\r\n      <Suspense fallback={<Grid item xs={12}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 500 }} /></Grid>}>\r\n        {!editWeaponId && <Grid item xs={6} md={4} lg={4} xl={3}>\r\n          <CardDark sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\r\n            <CardContent>\r\n              <Typography sx={{ textAlign: \"center\" }}>Add New Weapon</Typography>\r\n            </CardContent>\r\n            <WeaponSelectionModal show={newWeaponModalShow} onHide={() => setnewWeaponModalShow(false)} onSelect={newWeapon} />\r\n            <Box sx={{\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n            >\r\n              <Button onClick={() => setnewWeaponModalShow(true)} sx={{\r\n                borderRadius: \"1em\"\r\n              }}>\r\n                <Typography variant=\"h1\"><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></Typography>\r\n              </Button>\r\n            </Box>\r\n          </CardDark>\r\n        </Grid>}\r\n        {weaponIdsToShow.map(weaponId =>\r\n          <Grid item key={weaponId} xs={12} sm={6} md={4} lg={4} xl={3} >\r\n            <WeaponCard\r\n              weaponId={weaponId}\r\n              onDelete={deleteWeapon}\r\n              onEdit={editWeapon}\r\n              canEquip\r\n            />\r\n          </Grid>)}\r\n      </Suspense>\r\n    </Grid>\r\n  </Box>\r\n}","import { Card, styled } from \"@mui/material\";\r\n\r\nconst CardLight = styled(Card)(({ theme }) => ({\r\n  backgroundColor: theme.palette.contentLight.main\r\n}));\r\n\r\nexport default CardLight","import { Card, styled } from \"@mui/material\";\r\n\r\nconst CardDark = styled(Card)(({ theme }) => ({\r\n  backgroundColor: theme.palette.contentDark.main\r\n}));\r\n\r\nexport default CardDark","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Button, ButtonProps, Menu, Skeleton } from \"@mui/material\";\r\nimport { Suspense, useCallback, useState } from \"react\";\r\n\r\nexport type DropdownButtonProps = Omit<ButtonProps, \"title\"> & {\r\n  title: React.ReactNode,\r\n  id?: string,\r\n  children: React.ReactNode\r\n}\r\nexport default function DropdownButton({ title, children, id = \"dropdownbtn\", ...props }: DropdownButtonProps) {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget),\r\n    [setAnchorEl],\r\n  )\r\n  const handleClose = useCallback(\r\n    () => setAnchorEl(null),\r\n    [setAnchorEl],\r\n  )\r\n\r\n  return <Suspense fallback={<Button endIcon={<KeyboardArrowDown />}{...props}><Skeleton width={50} /></Button>} >\r\n    <Button\r\n      {...props}\r\n      id={id}\r\n      aria-controls=\"basic-menu\"\r\n      aria-haspopup=\"true\"\r\n      aria-expanded={open ? 'true' : undefined}\r\n      onClick={handleClick}\r\n      endIcon={<KeyboardArrowDown />}\r\n    >\r\n      {title}\r\n    </Button>\r\n    <Menu\r\n      id=\"basic-menu\"\r\n      anchorEl={anchorEl}\r\n      open={open}\r\n      onClose={handleClose}\r\n      MenuListProps={{\r\n        'aria-labelledby': id,\r\n      }}\r\n      onClick={handleClose}\r\n    >\r\n      {/* set Skeleton to be really high so the taller dropdowns can still be placed properly... */}\r\n      <Suspense fallback={<Skeleton width=\"100%\" height=\"1000\" />}>\r\n        {children}\r\n      </Suspense>\r\n    </Menu>\r\n  </Suspense>\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Typography } from '@mui/material'\r\nimport { Rarity } from '../Types/consts'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\r\n  <Typography color={colored ? \"warning.main\" : undefined} component=\"span\">\r\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n  </Typography>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon_bow.7ceaa8e2.png\";","import bow from './icon_bow.png'\r\nimport catalyst from './icon_catalyst.png'\r\nimport claymore from './icon_claymore.png'\r\nimport polearm from './icon_polearm.png'\r\nimport sword from './icon_sword.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nconst Assets = {\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/icon_catalyst.db078b7b.png\";","export default __webpack_public_path__ + \"static/media/icon_claymore.63b1abb8.png\";","export default __webpack_public_path__ + \"static/media/icon_polearm.e5f4a2a1.png\";","export default __webpack_public_path__ + \"static/media/icon_sword.619c9c2d.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { Close } from \"@mui/icons-material\";\r\nimport { Button, ButtonProps } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\ntype CloseButtonProps = ButtonProps & {\r\n  large?: boolean\r\n}\r\nexport default function CloseButton({ large = false, ...props }: CloseButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  if (large)\r\n    return <Button color=\"error\" startIcon={<Close />} {...props} >{t`close`}</Button>\r\n  return <Button color=\"error\" sx={{ p: 1, minWidth: 0 }} {...props} >\r\n    <Close />\r\n  </Button>\r\n}","import { CardContent, Container, ContainerProps, Modal, ModalProps, Skeleton, styled } from \"@mui/material\"\r\nimport { Suspense } from \"react\"\r\nimport CardLight from \"./Card/CardLight\"\r\n\r\nconst ScrollModal = styled(Modal)(({ theme }) => ({\r\n  overflow: \"scroll\",\r\n  paddingTop: theme.spacing(2),\r\n  paddingBottom: theme.spacing(2),\r\n\r\n}))\r\nconst ModalContainer = styled(Container)(({ theme }) => ({\r\n  padding: 0,\r\n  minHeight: \"100%\",\r\n  display: \"flex\", flexDirection: \"column\", justifyContent: \"center\",\r\n  pointerEvents: \"none\",\r\n  \"& > *\": {\r\n    pointerEvents: \"auto\"\r\n  }\r\n}))\r\n\r\ntype ModalWrapperProps = ModalProps & {\r\n  containerProps?: ContainerProps\r\n}\r\nexport default function ModalWrapper({ children, containerProps, ...props }: ModalWrapperProps) {\r\n  return <ScrollModal {...props}>\r\n    <ModalContainer {...containerProps}>\r\n      <Suspense fallback={<CardLight><CardContent><Skeleton variant=\"rectangular\" width=\"100%\" height={300} /></CardContent></CardLight>}>\r\n        {children}\r\n      </Suspense>\r\n    </ModalContainer>\r\n  </ScrollModal>\r\n}","import { ButtonProps, styled, ToggleButtonGroup, ToggleButtonGroupProps } from \"@mui/material\";\r\n\r\nexport type SolidToggleButtonGroupProps = SolidToggleButtonGroupPropsPartial & ToggleButtonGroupProps\r\ntype SolidToggleButtonGroupPropsPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\n\r\nconst SolidToggleButtonGroup = styled(ToggleButtonGroup, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\"\r\n})<SolidToggleButtonGroupPropsPartial>(({ theme, baseColor = \"primary\", selectedColor = \"success\" }) => ({\r\n  '& .MuiToggleButtonGroup-grouped': {\r\n    '&': {\r\n      backgroundColor: theme.palette[baseColor].main,\r\n      color: theme.palette[baseColor].contrastText,\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: theme.palette[baseColor].dark,\r\n    },\r\n    '&.Mui-selected': {\r\n      backgroundColor: theme.palette[selectedColor].main,\r\n      color: theme.palette[selectedColor].contrastText,\r\n    },\r\n    '&.Mui-selected:hover': {\r\n      backgroundColor: theme.palette[selectedColor].dark,\r\n    },\r\n    '&.Mui-disabled': {\r\n      backgroundColor: theme.palette[baseColor].dark,\r\n    },\r\n    '&.Mui-selected.Mui-disabled': {\r\n      backgroundColor: theme.palette[selectedColor].dark,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default SolidToggleButtonGroup","import { useCallback, useState } from \"react\"\r\n\r\nexport default function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}","import { BusinessCenter, Replay } from \"@mui/icons-material\";\r\nimport { Divider, ListItemIcon, MenuItem, Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport DropdownButton, { DropdownButtonProps } from \"../DropdownMenu/DropdownButton\";\r\nimport ThumbSide from \"./ThumbSide\";\r\n\r\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  value: CharacterKey | \"\"\r\n  onChange: (ck: CharacterKey | \"\") => void\r\n  filter?: (cs: CharacterSheet) => boolean\r\n  inventory?: boolean\r\n  noUnselect?: boolean\r\n}\r\n\r\nexport default function CharacterDropdownButton({ value, onChange, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const database = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\r\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck])).sort()\r\n  return <DropdownButton\r\n    {...props}\r\n    title={characterSheet?.name ?? (inventory ? t`inventory` : t`unselect`)}\r\n    color={value ? \"success\" : \"primary\"}\r\n    startIcon={characterSheet?.thumbImg ? <ThumbSide src={characterSheet.thumbImgSide} /> : (inventory ? <BusinessCenter /> : <Replay />)}>\r\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <BusinessCenter />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`inventory`}\r\n      </Typography>\r\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <Replay />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`unselect`}\r\n      </Typography>\r\n    </MenuItem>)}\r\n    {!noUnselect && <Divider key=\"div\" />}\r\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value)}\r\n  </DropdownButton >\r\n}\r\n\r\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\r\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\") {\r\n  return characterKeys.map(characterKey =>\r\n    <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\r\n      <ListItemIcon>\r\n        <ThumbSide src={characterSheets[characterKey].thumbImgSide} />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {characterSheets?.[characterKey]?.name}\r\n      </Typography>\r\n    </MenuItem>)\r\n}","import { styled } from \"@mui/system\";\r\n\r\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  height: `2.3em`,\r\n  lineHeight: 1,\r\n  verticalAlign: \"text-bottom\",\r\n  marginTop: theme.spacing(-3),\r\n  marginLeft: theme.spacing(-1.25),\r\n  marginRight: theme.spacing(-1),\r\n  marginBottom: theme.spacing(-1),\r\n}))\r\n\r\nexport default ThumbSide","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\n\r\nexport default function LocationName({ location }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t`inventory`}</span>}\r\n  </Typography>\r\n\r\n}","import { ToggleButton } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey | \"\") => void\r\n  value: WeaponTypeKey | \"\"\r\n}\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allWeaponTypeKeys} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : children) as JSX.Element;\r\n}","\r\ninterface SortOption {\r\n  getValue: (id: string) => number | string\r\n  tieBreaker?: string\r\n}\r\nexport interface SortOptions { [key: string]: SortOption }\r\n\r\n\r\nexport default function SortByFilters(sortby: string, ascending: boolean, options: SortOptions) {\r\n  function Sort(a: string, b: string, ascending: boolean, filterOption: SortOption,) {\r\n    const aV = filterOption.getValue(a)\r\n    const bV = filterOption.getValue(b)\r\n    let diff = 0\r\n    if (typeof aV === \"string\" && typeof bV === \"string\")\r\n      diff = aV.localeCompare(bV)\r\n    else\r\n      diff = ((bV as number) - (aV as number))\r\n    return (ascending ? -1 : 1) * diff\r\n  }\r\n  return (a: string, b: string) => {\r\n    if (!options[sortby]) return 0\r\n    const filterOption = options[sortby]\r\n    let diff = Sort(a, b, ascending, filterOption)\r\n    if (!diff && filterOption.tieBreaker && options[filterOption.tieBreaker])\r\n      diff = Sort(a, b, ascending, options[filterOption.tieBreaker])\r\n    return diff\r\n  }\r\n}\r\n","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\r\n\r\ntype SortByButtonProps = ButtonGroupProps & {\r\n  sortKeys: string[]\r\n  value: string\r\n  onChange: (value: string) => void\r\n  ascending: boolean\r\n  onChangeAsc: (value: boolean) => void\r\n}\r\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\r\nexport default function SortByButton({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: SortByButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <ButtonGroup {...props} >\r\n    <DropdownButton title={<Trans t={t} i18nKey=\"sortByFormat\" value={t(`sortMap.${value}`) as any}>Sort By: {{ value: t(`sortMap.${value}`) }}</Trans>}>\r\n      {sortKeys.map(key =>\r\n        <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\r\n      {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\r\n    </Button>\r\n  </ButtonGroup>\r\n}","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey | \"\">(propWeaponFilter ?? \"\")\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter(propWeaponFilter), [propWeaponFilter])\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.img} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, CardHeader, Grid, IconButton, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useEffect, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton'\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false }: WeaponCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseWeapon, updateDatabaseWeapon] = useState(undefined as ICachedWeapon | undefined)\r\n  useEffect(() =>\r\n    weaponId ? database.followWeapon(weaponId, updateDatabaseWeapon) : undefined,\r\n    [weaponId, updateDatabaseWeapon, database])\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => onClick?.(weaponId)} sx={{ height: \"100%\" }}>{children}</CardActionArea>,\r\n    [onClick, weaponId],\r\n  )\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.setWeaponLocation(weaponId, charKey), [database, weaponId],)\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <div className={`grad-${weaponSheet.rarity}star`} >\r\n          <CardHeader title={weaponSheet.name} avatar={<ImgIcon sx={{ fontSize: \"2em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />} titleTypographyProps={{ variant: \"h6\" }}\r\n            action={!onClick && <IconButton color=\"primary\" onClick={() => database.updateWeapon({ lock: !lock }, id)}>\r\n              {lock ? <Lock /> : <LockOpen />}\r\n            </IconButton>} />\r\n          <Grid container sx={{ flexWrap: \"nowrap\", pl: 2 }}>\r\n            <Grid item flexGrow={1}>\r\n              <Typography component=\"span\" variant=\"h4\">Lv. {level}</Typography>\r\n              <Typography component=\"span\" variant=\"h4\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n              <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n              <Typography><Stars stars={weaponSheet.rarity} colored /></Typography>\r\n            </Grid>\r\n            {/* use flex-end here to align the image to the bottom. */}\r\n            <Grid item container xs={4} alignContent=\"flex-end\">\r\n              <Box\r\n                component=\"img\"\r\n                src={img}\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                sx={{ mt: \"auto\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <CardContent>\r\n          {statMap.map(([statKey, statVal]) => {\r\n            let unit = Stat.getStatUnit(statKey)\r\n            return <Box key={statKey} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[statKey]} {Stat.getStatName(statKey)}</Typography>\r\n              <Typography>{statVal + unit}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n        {/* grow to fill the 100% heigh */}\r\n        <Box flexGrow={1} />\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container sx={{ flexWrap: \"nowrap\" }} >\r\n            <Grid item xs=\"auto\" flexShrink={1}>\r\n              {canEquip ? <CharacterDropdownButton size=\"small\" noUnselect inventory value={location} onChange={equipOnChar} filter={filter} /> : <LocationName location={location} />}\r\n            </Grid>\r\n            <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n            <Grid item xs=\"auto\">\r\n              <ButtonGroup sx={{ height: \"100%\" }}>\r\n                {!!onEdit && <Button color=\"info\" size=\"small\" onClick={() => onEdit(id)} >\r\n                  <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n                </Button>}\r\n                {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n                </Button>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n      </CardLight>\r\n    </ConditionalWrapper>\r\n  </Suspense>\r\n}"],"sourceRoot":""}