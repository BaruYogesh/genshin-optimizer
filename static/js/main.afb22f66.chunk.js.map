{"version":3,"sources":["Util/Util.ts","Util/FieldUtil.tsx","Conditional/Conditional.ts","faIcons/index.ts","i18n.ts","Artifact/ArtifactSheet.tsx","Character/CharacterSheet.tsx","Util/KeyPathUtil.ts","Components/StatIcon.tsx","Artifact/Component/SlotNameWIthIcon.tsx","Util/UIUtil.ts","Weapon/WeaponSheet.tsx","Types/consts.ts","StatConstants.ts","Components/LoadingCard.tsx","App.tsx","reportWebVitals.ts","index.tsx","Database/exim/dbJSON.ts","Database/exim/mona.ts","Settings/SettingsDisplay.tsx","Database/DBStorage.ts","Stat.tsx","Database/DataManager.ts","Database/migration.ts","Database/Database.ts","Database/utils.ts","Data/CharacterData.ts","StatData.ts","Database/validation.tsx","Util/StatUtil.ts","Types/artifact.ts","Data/ArtifactData.ts","Artifact/Artifact.ts","Formula.ts","Build/BuildSetting.ts","Components/Translate.tsx","Data/ElementalData.ts","Util/ReactUtil.ts"],"names":["getRandomElementFromArray","array","Math","floor","random","length","getRandomInt","min","max","ceil","getRandomIntInclusive","deepClone","obj","JSON","parse","stringify","clamp","val","low","high","clampPercent","strPadLeft","string","pad","Array","join","slice","hammingDistance","str1","str2","dist","toLowerCase","i","j","match","objMultiplication","multi","Object","keys","forEach","prop","layeredAssignment","value","reduce","accu","key","arr","objPathValue","a","k","deletePropPath","path","tempPath","lastKey","pop","objClearEmpties","o","crawlObject","validate","cb","entries","evalIfFunc","arg","statsToFields","statVals","filter","map","statKey","statVal","text","className","ElementalData","name","canShow","StatIcon","Stat","getStatName","variant","getStatVariant","fixed","fixedUnit","unit","getStatUnit","flat","fieldProcessing","field","formula","processed","Promise","all","charImport","then","sheets","addConditional","weaponImport","artifactImport","Conditional","this","Error","source","findConditionals","callback","conditionals","condKey","conditional","states","values","state","maxStack","fields","artifact","character","weapon","stats","resolve","conditionalValue","defVal","conditionalValues","stacks","stateKey","conditionalStats","get","parseConditionalValues","c","isArray","faAnemo","prefix","iconName","icon","faCryo","faDendro","faElectro","faGeo","faHydro","faPyro","faPhysicalDmgBonus","faAtk","faDef","faElementalMastery","faHpPrimary","faHpSecondary","faMaxStamina","faCdReductionPrimary","faCdReductionSecondary","faCritRate","faEnergyRechargePrimary","faEnergyRechargeSecondary","faHealingBonus","faShieldStrength","faCirclet","faFlower","faGoblet","faPlume","faSands","languageCodeList","i18n","use","Backend","initReactI18next","LanguageDetector","init","debug","process","fallbackLng","ns","defaultNS","load","returnEmptyString","backend","loadPath","interpolation","escapeValue","imp","fromEntries","default","set","ArtifactSheet","promiseSheets","allArtifactSets","tr","setKey","strKey","key18","data","getSlotName","slotKey","getSlotDesc","setEffectDesc","setNum","setEffectDocument","setEffects","document","slots","src","slotIcons","rarity","allSlotKeys","icons","num","grouped","sheet","push","charStats","setToSlots","artifactSetEffect","parseInt","mergeStats","expCurve","expCurveJSON","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","getBase","level","ascensionLvl","baseStat","baseStatCurve","ascensions","props","getSpecializedStat","find","getSpecializedStatVal","isMelee","weaponTypeKey","getTalent","eleKey","talent","talents","getTalentOfKey","talentKey","getTalentStats","split","constell","constellation","getTalentStatsAll","statsArr","talentStats","thumbImg","cardImg","star","elementKey","undefined","constellationName","getAll","KeyPath","Proxy","partial","symbol","toString","base","current","HPIcon","style","color","CdRedIcon","EnerRechIcon","uncoloredEleIcons","anemo","geo","electro","hydro","pyro","cryo","dendro","physical","coloredEleIcon","ele","characterHP","finalHP","hp_","hp","baseATK","characterATK","finalATK","atk_","atk","characterDEF","finalDEF","def_","def","eleMas","critRate_","critDMG_","faDiceD20","enerRech_","heal_","cdRed_","powShield_","stamina","flatMap","SlotIcon","flower","plume","sands","goblet","circlet","artifactSlotIcon","SlotNameWithIcon","t","useTranslation","valueStringWithUnit","valueString","round","toFixed","weaponKey","WeaponSheet","loadWeaponSheet","allWeaponKeys","weaponSheet","passiveDescription","getSubStatKey","refineIndex","build","getMainStatValue","ascension","mainStat","type","curve","addStats","getSubStatValue","subStat","weaponType","img","getWeaponsOfType","getLevelString","ascensionMaxLevel","allHitModes","allReactionModes","allRarities","allArtifactRarities","allElements","allWeaponTypeKeys","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","elemental","skill","burst","hitElements","transformativeReactions","overloaded","variants","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","LoadingCard","useSuspense","ready","Card","bg","Body","Trans","i18nKey","Spinner","animation","Home","lazy","ArtifactDisplay","CharacterDisplay","BuildDisplay","Planner","FlexDisplay","SettingsDisplay","AppInner","id","Navbar","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","faIdCard","faCalculator","faTools","faCog","href","target","rel","onClick","ReactGA","outboundLink","label","faPaypal","faPatreon","faDiscord","fallback","Container","component","Row","Col","xs","version","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","getElementById","exportDB","storage","getDBVersion","characterDatabase","startsWith","artifactDatabase","artifactDisplay","characterDisplay","buildsDisplay","GetConvertedArtifactsOfVersion","dataObj","invalidCount","artifacts","property","ArtifactSlotKeyMap","genshinArtArtifact","setName","position","mainTag","flex","validateDBArtifact","ArtifactSetKeyMap","numStars","mainStatKey","ArtifactMainStatKeyMap","substats","normalTags","ArtifactSubStatKeyMap","endsWith","useForceUpdate","forceUpdate","pageview","Header","LanguageCard","DownloadCard","UploadCard","Badge","LanguageDropdown","nativeLanguages","onSetLanguage","lang","changeLanguage","currentLang","languages","Dropdown","language","Menu","Item","copyToClipboard","navigator","clipboard","writeText","dbStorage","alert","numChar","database","_getCharKeys","numArt","_getArts","downloadValid","Boolean","md","Footer","Button","disabled","JSONstr","filename","contentType","window","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","createElement","download","encodeURIComponent","body","appendChild","click","removeChild","faFileDownload","faClipboard","confirm","clear","reloadStorage","deleteDatabase","faTrashAlt","useState","setdata","setfilename","errorMsg","setErrorMsg","useMemo","parsed","e","some","includes","imported","oldDatabase","converted","result","SandboxStorage","totalCount","newCount","upgradeCount","dupCount","oldIds","Set","arts","newDatabase","ArtCharDatabase","artifactIdsToRemove","findDuplicates","duplicated","upgraded","has","delete","updateArt","validateFlexArtifact","importMona","char","art","setDBVersion","charCount","chars","artCount","migrated","importDB","reset","onUpload","file","files","reader","FileReader","onload","readAsText","Form","File","onChange","custom","accept","minHeight","GOUploadInfo","MonaUploadInfo","GOUploadAction","MonaUploadAction","Alert","dataValid","copyFrom","faFileUpload","size","deleteExistingArtifacts","setDeleteExistingArtifacts","remove","importArtifacts","faCheckSquare","faSquare","OverlayTrigger","overlay","Popover","Content","faQuestionCircle","cursor","DBLocalStorage","getItem","removeItem","setItem","other","setString","shouldRemove","localStorage","StatData","getStatNameRaw","getStatNameWithPercent","printStat","premod","f","getPrintableFormulaStatKeyList","statList","modifiers","FormulaText","ModFormula","usePromise","Formula","formulaText","FormulaDisplay","modifierText","options","statName","statUnit","printValue","enemyLevel_multi","heal_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_hit","move","res","reaction","baseMulti","DataManager","listeners","anyListeners","listener","allKeys","migrate","report","elementalFilter","weaponFilter","buildSetting","artifactsAssumeFull","ascending","setFilters","useLockedArts","buildSettings","mainStatAssumptionLevel","mainStatKeys","migrateV2ToV3","traveler","characterKey","requireUpdate","location","migrateV3ToV4","levelKey","lvla","findIndex","maxLevel","addAsc","baseStatOverrides","characterLevel","migrateV4ToV5","migrateV5ToV6","initialBuildSettings","migrateV6ToV7","removeAll","validateDBCharacter","validateFlexCharacter","equippedArtifacts","slot","extractFlexArtifact","extractFlexCharacter","follow","followAny","newChar","oldChar","saveChar","newArt","candidate","generateRandomArtID","oldArt","lock","saveArt","artKey","newCharKey","oldCharKey","oldArtKey","newArts","oldArts","setLocation","editorArt","candidates","every","substat","candidateSubstat","shared","getString","milestoneLevels","characterStatBase","const","characterEle","weaponATK","dmg_","critHit_base_multi","weakspotDMG_","incHeal_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaSprintDec_","staminaGlidingDec_","staminaChargedDec_","transformative_level_multi","crystalize_multi","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","s","ElementToReactionKeys","PreprocessFormulas","dependencyKeys","initialStats","preModFormulaList","getStage","x","modFormula","computeModifier","postModFormulaList","func","modStats","moveName","eleName","opt","typeName","mainStatVal","Artifact","mainStatValue","errors","rolls","efficiency","validated","allPossibleRolls","totalUnambiguousRolls","b","maxSubstatValues","index","possibleRolls","getSubstatRolls","roll","substatRolls","best","rollInfo","lowerBound","upperBound","highestScore","Infinity","tryAllSubstats","currentScore","total","newScore","totalRolls","allMainStatKeys","_","allSubstats","isFinite","validateSubstats","hitMode","reactionMode","talentLevelKeys","infusionAura","maxLvl","auto","statFilters","optimizationTarget","useEquippedArts","tempmainStatKeys","paths","ArtifactSubstatRollData","1","numUpgrades","2","3","4","5","ArtifactSlotsData","totalPossibleRolls","sum","rollsRemaining","emptySlotCount","matchedSlotCount","unusedFilterCount","currentEfficiency","maxEfficiency","maxSubstatRollEfficiency","slotName","slotMainStats","setEffectsObjs","artifactSheets","setObj","setEffect","setNumKey","entry","setStats","condStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","ArtifactMainStatsData","ArtifactStarsData","substatKey","ArtifactSubstatsData","getSubstatKeys","getSubstatRollData","v","substatValue","rollData","ArtifactSubstatLookupTable","getSubstatEfficiency","formulaImport","formulas","stat","modifier","objs","getCurrent","components","Translate","children","textKey","textObj","returnObjects","T","TransWrapper","Para","li","parent","trans","stateDirty","update","useCallback","promise","dependencies","setRes","useEffect","pending","console","error"],"mappings":"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","file":"static/js/main.afb22f66.chunk.js","sourcesContent":["export const getRandomElementFromArray = <T>(array: readonly T[]): T => array[Math.floor(Math.random() * array.length)];\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nexport function getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n}\r\nexport function getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport const deepClone = <T>(obj: T): T =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nexport const clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nexport const getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nexport const clamp01 = (val) => clamp(val, 0, 1)\r\nexport const clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nexport function strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nexport function hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nexport function objMultiplication(obj, multi) {\r\n  if (multi === 1) return obj\r\n  Object.keys(obj).forEach((prop: any) => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n  return obj\r\n}\r\n\r\n//assign obj.[keys...] = value\r\nexport function layeredAssignment(obj, keys: string[], value) {\r\n  keys.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, obj)\r\n  return obj\r\n}\r\n//get the value in a nested object, giving array of path\r\nexport function objPathValue(obj: object, keys: string[]) {\r\n  return keys.reduce((a, k) => a?.[k], obj)\r\n}\r\n//delete the value denoted by the path. Will also delete empty objects as well.\r\nexport function deletePropPath(obj, path) {\r\n  const tempPath = [...path]\r\n  const lastKey = tempPath.pop()\r\n  const objPathed = objPathValue(obj, tempPath)\r\n  delete objPathed[lastKey];\r\n}\r\n\r\nexport function objClearEmpties(o) {\r\n  for (const k in o) {\r\n    if (typeof o[k] !== \"object\") continue\r\n    objClearEmpties(o[k])\r\n    if (!Object.keys(o[k]).length) delete o[k];\r\n  }\r\n}\r\nexport function crawlObject(obj, keys, validate, cb) {\r\n  if (validate(obj)) cb(obj, keys)\r\n  else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => crawlObject(val, [...keys, key], validate, cb))\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nexport const getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\n\r\nexport function evalIfFunc<T, X>(value: T | ((arg: X) => T), arg: X): T {\r\n  return typeof value === \"function\" ? (value as any)(arg) : value\r\n}","import StatIcon from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\n\r\nexport default function statsToFields(statVals, stats = {}): IFieldDisplay[] {\r\n  return Object.entries(statVals).filter(([statKey]) => statKey !== \"modifiers\").map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      default:\r\n        return {\r\n          text: <span>{StatIcon[statKey as any]} {Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal as number,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => addConditional(sheets, \"weapon\")), //attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => addConditional(sheets, \"artifact\")) //attach artifact conditionals to Conditional\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow?.(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","// Elements\r\nexport const faAnemo = {\r\n\tprefix: 'faga',\r\n\ticonName: \"anemo\",\r\n\ticon: [\r\n\t\t14, 13.857,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M.2,4.834c.764,1.2,1.813,2.475,3.362,2.434,1.025-.067,2.374.224,2.679,1.359.313.865-.825,1.982-1.513,1.124-.108-.187-.039-.3.173-.326,1,.021,1.348-1.12.4-1.513-.813-.1-1.548.527-2.329.707C.791,9.247-.524,6.656.2,4.834Zm9.912,2.429c-1.056-.074-2.449.563-2.375,1.786a.973.973,0,0,0,1.1.984c.316.013.724-.546.294-.612-1.621,0-1.022-2.1.346-1.4a5.222,5.222,0,0,0,2.343.687c1.8-.177,2.572-2.3,1.989-3.859C12.938,6.152,11.852,7.446,10.112,7.263Zm-2.42-.772A7.516,7.516,0,0,0,9.918,5.63,3.067,3.067,0,0,0,9.286.018,5.143,5.143,0,0,1,7.692,6.491ZM6.349,6.477A5.071,5.071,0,0,1,4.734,0,3.075,3.075,0,0,0,3.612,5.287a7.944,7.944,0,0,0,2.7,1.235Zm5.342-.089c-1.143.656-2.594.363-3.651,1.217a1.557,1.557,0,0,0,.07,2.768c.234.1.462.206.689.014.223-.167.4-.162.721-.012a9.094,9.094,0,0,0-2.513,3.482,9.217,9.217,0,0,0-2.523-3.478.605.605,0,0,1,.726,0c.6.347,1.443-.4,1.555-1C7.012,8.2,5.829,7.273,4.783,7.049c-.512-.121-1.038-.182-1.55-.3C.866,6.266.51,3.868,1.669,2.034c.668,4.9,4,3.555,5.332,6.26,1.321-2.671,4.678-1.382,5.345-6.261C13.157,3.449,13.4,5.556,11.691,6.388Zm-4.12,5.191L7,11.2l-.572.385.58.972ZM7,10.066a1.592,1.592,0,0,1-1,.911.925.925,0,0,0,.991-.272c.426.327.794.417,1.046.255A1.561,1.561,0,0,1,7,10.066Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faCryo = {\r\n\tprefix: 'faga',\r\n\ticonName: \"cryo\",\r\n\ticon: [\r\n\t\t12.086, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M0,3.52A19.776,19.776,0,0,1,1.911,6.8a6.152,6.152,0,0,0,.128-.624A6.476,6.476,0,0,1,5.5,6.7,6.479,6.479,0,0,1,3.316,3.96a6.308,6.308,0,0,0,.477-.423A19.8,19.8,0,0,1,0,3.52ZM4.411,6.067a7.469,7.469,0,0,0-2.4-.573,3.548,3.548,0,0,0-.2-.933h0a3.559,3.559,0,0,0,.909-.289A7.478,7.478,0,0,0,4.411,6.067ZM0,10.48A19.776,19.776,0,0,0,1.911,7.2a6.152,6.152,0,0,1,.128.624A6.476,6.476,0,0,0,5.5,7.3,6.479,6.479,0,0,0,3.316,10.04a6.308,6.308,0,0,1,.477.423A19.8,19.8,0,0,0,0,10.48ZM4.411,7.933a7.469,7.469,0,0,1-2.4.573,3.548,3.548,0,0,1-.2.933h0a3.559,3.559,0,0,1,.909.289A7.478,7.478,0,0,1,4.411,7.933ZM6.043,14a19.768,19.768,0,0,0-1.882-3.293,6.161,6.161,0,0,1,.605.2A6.467,6.467,0,0,0,6.043,7.649,6.478,6.478,0,0,0,7.32,10.908a6.251,6.251,0,0,1,.6-.2A19.768,19.768,0,0,0,6.043,14Zm0-5.094a7.461,7.461,0,0,1-.7,2.368,3.577,3.577,0,0,1,.705.643h0a3.561,3.561,0,0,1,.706-.643A7.48,7.48,0,0,1,6.043,8.906Zm6.043,1.574A19.85,19.85,0,0,1,10.175,7.2a6.215,6.215,0,0,0-.127.624A6.479,6.479,0,0,1,6.586,7.3,6.486,6.486,0,0,1,8.771,10.04a6.112,6.112,0,0,0-.477.423A19.783,19.783,0,0,1,12.086,10.48ZM7.675,7.933a7.473,7.473,0,0,0,2.4.573,3.548,3.548,0,0,0,.2.933h0a3.562,3.562,0,0,0-.91.289A7.478,7.478,0,0,0,7.675,7.933ZM12.086,3.52A19.85,19.85,0,0,0,10.175,6.8a6.215,6.215,0,0,1-.127-.624A6.479,6.479,0,0,0,6.586,6.7,6.486,6.486,0,0,0,8.771,3.96a6.112,6.112,0,0,1-.477-.423A19.783,19.783,0,0,0,12.086,3.52ZM7.675,6.067a7.473,7.473,0,0,1,2.4-.573,3.548,3.548,0,0,1,.2-.933h0a3.562,3.562,0,0,1-.91-.289A7.478,7.478,0,0,1,7.675,6.067ZM6.043,0A19.768,19.768,0,0,1,4.161,3.293a6.161,6.161,0,0,0,.605-.2A6.467,6.467,0,0,1,6.043,6.351,6.478,6.478,0,0,1,7.32,3.092a6.251,6.251,0,0,0,.6.2A19.768,19.768,0,0,1,6.043,0Zm0,5.094a7.461,7.461,0,0,0-.7-2.368,3.577,3.577,0,0,0,.705-.643h0a3.561,3.561,0,0,0,.706.643A7.48,7.48,0,0,0,6.043,5.094Zm.1,2.038,1.044.92-.071.817-.744-.347L6.1,7.157a.163.163,0,0,1-.115,0L5.711,8.522l-.743.347L4.9,8.052l1.044-.92a.165.165,0,0,1-.062-.1l-1.314.443-.672-.471.672-.47,1.312.442a.17.17,0,0,1,.056-.1L4.9,5.961l.071-.817.743.347.272,1.352a.166.166,0,0,1,.12,0l.272-1.352.744-.347.071.817-1.037.913a.165.165,0,0,1,.056.1l1.313-.442.672.47-.672.471L6.208,7.034A.165.165,0,0,1,6.146,7.132Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faDendro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"dengro\",\r\n\ticon: [\r\n\t\t14, 13.314,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M10.956,7.949c-1.242-.339-2.145.509-3.174,1.065.5-.835,1.613-1.371,1.588-2.466A1.122,1.122,0,0,0,8.041,5.379c.741-1.764,3.98.034,2.174,1.958C10.518,7.478,10.839,7.589,10.956,7.949Zm-7.919,0c1.242-.339,2.144.509,3.173,1.065-.5-.835-1.613-1.371-1.587-2.466A1.121,1.121,0,0,1,5.952,5.379c-.742-1.764-3.98.034-2.174,1.958C3.474,7.478,3.153,7.589,3.037,7.949ZM7,11.38C6.11,9.815,4.008,9.887,2.989,8.436.769,5.889,4.028,2.245,6.5,4.573c.88-1.994-3.2-1.85-4.069-.59-.1-.709-.187-1.217-.962-1.305C1.3,2.692.355,2.473.452,2.737c.37,1.113.5,1.67,1.824,1.4a4.167,4.167,0,0,0-.731,3.139C.825,6.681.636,6.927,0,7.46c1.239,1.223,1.412-.3,1.632.133C2.207,10.851,5.976,10.376,7,13.314c1.023-2.936,4.794-2.465,5.368-5.721.22-.429.393,1.09,1.632-.133-.636-.533-.825-.779-1.545-.186a4.167,4.167,0,0,0-.731-3.139c1.328.272,1.454-.285,1.824-1.4.1-.264-.852-.045-1.015-.059-.775.088-.859.6-.962,1.3-.864-1.26-4.95-1.4-4.07.591C9.969,2.245,13.235,5.89,11.01,8.437,9.992,9.887,7.89,9.815,7,11.38M7.007,0C5.986,1.347,5.175,2.309,6.993,3.6,8.792,2.311,8.083,1.485,7.007,0Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faElectro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"electro\",\r\n\ticon: [\r\n\t\t14, 13.996,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M4.533,13.505a6.911,6.911,0,0,0,3.024-.468c-.237-.073-.459-.134-.675-.209s-.432-.159-.643-.252A3.907,3.907,0,0,1,4,10.333a3.449,3.449,0,0,1-.128-1.82c.117.139.222.277.341.4a1.044,1.044,0,0,0,1.01.32A1.571,1.571,0,0,0,6.5,7.879a2.422,2.422,0,0,0-2.083-2.8A2.993,2.993,0,0,0,1.2,7.231,7.083,7.083,0,0,0,.874,9.417c-.005.309,0,.618,0,.9A7.089,7.089,0,0,1,.012,6.581,6.949,6.949,0,0,1,2.691,1.5c-.26.472-.519.917-.752,1.374a3.664,3.664,0,0,0-.412,1.521c.207-.193.385-.361.566-.524A4.657,4.657,0,0,1,4.248,2.71,3.573,3.573,0,0,1,7.323,3.5l-.442.09A1.213,1.213,0,0,0,6,5.283,2.008,2.008,0,0,0,7.719,6.624a2.575,2.575,0,0,0,2.873-2.561,3.33,3.33,0,0,0-1.1-2.508A7.781,7.781,0,0,0,7.289.09C7.237.066,7.185.039,7.108,0A7,7,0,0,1,14,5.915c-.282-.45-.544-.9-.836-1.328A3.743,3.743,0,0,0,12.055,3.5c.079.371.171.721.226,1.077a4.086,4.086,0,0,1-.792,3.364A3.554,3.554,0,0,1,9.98,8.958a.115.115,0,0,1-.049,0c.062-.2.134-.389.184-.587A1.091,1.091,0,0,0,9.59,7.135a1.68,1.68,0,0,0-1.765-.046A2.357,2.357,0,0,0,6.657,10.05a2.745,2.745,0,0,0,2.377,1.878,4.373,4.373,0,0,0,2.462-.5c.465-.215.9-.5,1.344-.759.056-.032.108-.071.18-.119A6.922,6.922,0,0,1,4.533,13.505Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faGeo = {\r\n\tprefix: 'faga',\r\n\ticonName: \"geo\",\r\n\ticon: [\r\n\t\t13.029, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M6.633,6.009c-.5.538-.953,1.041-1.42,1.537a.23.23,0,0,0-.061.286A4.5,4.5,0,0,0,6.507,9.551a.181.181,0,0,0,.164-.009c.388-.257.785-.5,1.151-.788A16.081,16.081,0,0,0,9.963,6.761c.181.366.382.7.518,1.063.2.535.356,1.088.535,1.632a.293.293,0,0,1-.061.286,12.277,12.277,0,0,1-1.768,1.985c-.839.755-1.714,1.47-2.574,2.2A1.2,1.2,0,0,1,6.505,14c-.5-.411-1.02-.817-1.519-1.243A29.249,29.249,0,0,1,2.138,9.983,16.778,16.778,0,0,1,.043,7.137a.245.245,0,0,1,0-.279A10.138,10.138,0,0,1,1.389,5.1a25.247,25.247,0,0,0,5.158,8.241,12.37,12.37,0,0,0,2.98-4.617l-.036-.03L6.558,11.157c-.04-.032-.081-.061-.117-.1A13.544,13.544,0,0,1,3.879,7.693a.249.249,0,0,1,.051-.356c.5-.442,1-.89,1.5-1.325.226-.194.473-.365.736-.566Zm.228,2.545c.263-.2.51-.372.736-.566.506-.435,1-.883,1.5-1.325a.251.251,0,0,0,.051-.356A13.523,13.523,0,0,0,6.588,2.938c-.036-.034-.077-.063-.116-.1L3.539,5.306,3.5,5.276A12.345,12.345,0,0,1,6.483.659,25.245,25.245,0,0,1,11.64,8.9a10.138,10.138,0,0,0,1.345-1.758.244.244,0,0,0,0-.279,16.724,16.724,0,0,0-2.1-2.846A29.136,29.136,0,0,0,8.043,1.243C7.545.817,7.028.411,6.524,0c-.05.033-.082.049-.108.071-.86.732-1.734,1.447-2.573,2.2A12.23,12.23,0,0,0,2.075,4.258a.293.293,0,0,0-.062.286c.179.544.334,1.1.536,1.632.136.361.336.7.517,1.063A16.2,16.2,0,0,1,5.207,5.246c.366-.285.764-.531,1.151-.788a.181.181,0,0,1,.164-.009A4.5,4.5,0,0,1,7.877,6.168a.231.231,0,0,1-.06.286c-.468.5-.926,1-1.421,1.537Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faHydro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"hydro\",\r\n\ticon: [\r\n\t\t14, 13.95,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M2.922,12.219c.108.055.181.092.253.13a7.943,7.943,0,0,0,3.891.963,3.753,3.753,0,0,0,.486-7.464,3.6,3.6,0,0,0-1.691.132.938.938,0,0,1-.716-1.732,4.3,4.3,0,0,1,1.481-.366,4.912,4.912,0,0,1,5.048,3.446,4.933,4.933,0,0,1-2.517,5.764c4.218-1.543,4.723-7.809.812-10.017a5.342,5.342,0,0,0-3.437-.829A5.506,5.506,0,0,0,2.883,4.021a6.606,6.606,0,0,0-.417.524.873.873,0,0,1-.927.337.929.929,0,0,1-.781-.638.881.881,0,0,1,.1-.684A6.158,6.158,0,0,1,2.221,1.839,7.091,7.091,0,0,1,6.135.055a6.933,6.933,0,0,1,6.848,3.359c2.683,4.1-.263,9.987-5.094,10.472a6.838,6.838,0,0,1-3.241-.343A3.994,3.994,0,0,1,2.922,12.219ZM8.438,12.1a2.044,2.044,0,0,1-2.35.064,1.5,1.5,0,0,1-.007-2.613.949.949,0,0,1,1.433.505c.77,2.06,2.637.147,1.424-1.246a2.385,2.385,0,0,0-2.17-.95,2.486,2.486,0,1,0,.784,4.891A2.393,2.393,0,0,0,9.073,11.6C8.862,11.766,8.663,11.951,8.438,12.1ZM2.21,9.495a.663.663,0,1,0,.663.663A.663.663,0,0,0,2.21,9.495ZM.958,6.107a.958.958,0,1,0,.957.957A.958.958,0,0,0,.958,6.107Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faPyro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"pyro\",\r\n\ticon: [\r\n\t\t11.479, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M5.853,14C4.311,12.53,2.374,11.75.692,10.523c-1.471-1.1-.268-3.047.586-4.163A17.969,17.969,0,0,0,3.031,3.838c-.007,1.6,1.56,2.152,2.781,2.709C3.509,6.412,1.548,9.1,3.385,10.92c-1.873-.773-2.7-2.455-1.3-4.17a2.113,2.113,0,0,0-.535,3.662c1.332.9,2.865,1.483,4.153,2.461a.2.2,0,0,0,.187.019C7.13,12,8.5,11.315,9.811,10.543c1.654-.887,1.47-2.773-.154-3.583,1.455,2.82-1.213,4.942-3.9,4.745C2.832,11.491,2.676,8.531,5.131,9a1.39,1.39,0,0,0-.682,1.5c.526,1.495,2.954.974,3.81.031,1.095-1.027.327-3.031-.979-3.6-1.492-.7-4.443-1.527-3.3-3.737C4.676,2.109,5.49,1.385,5.617,0,6.05.581,7.06,1.719,6.857,2.452c-.24.72-1.085.982-1.348,1.71a1.334,1.334,0,0,0,.578,1.824c-1.018-1.09.09-2.409,1.15-2.981A3.3,3.3,0,0,0,8.373,7.061c-.725-1.6-1.347-1.64-.128-3.408a4.575,4.575,0,0,0,1.806,2.766c2.057,1.807,1.9,3.731-.521,5.067A16.689,16.689,0,0,0,5.853,14Zm.541-3.5C10.185,9.076,5.44,5.335,4.03,8.493,5.446,7.684,7.387,8.92,6.394,10.5Z\"\r\n\t]\r\n} as const\r\n// Elements End\r\n\r\n// DMG Bonus\r\nexport const faPhysicalDmgBonus = {\r\n\tprefix: 'faga',\r\n\ticonName: \"physicalDmgBonus\",\r\n\ticon: [\r\n\t\t14, 13.962,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M11.511,7.88,9.022,9.54v1.77l2.489-1.66L14,11.31V9.54Zm0,2.434-2.489,1.66v1.771l2.489-1.66L14,13.745V11.974ZM7.45,1.619l-.731.731a.228.228,0,0,0,0,.322l.837.837L.412,10.652a.458.458,0,0,0-.133.318A21.292,21.292,0,0,0,.04,13.922a21.435,21.435,0,0,0,2.952-.239.458.458,0,0,0,.318-.133l7.143-7.144c1.116,1.012.725,1.313,1.89.106a.228.228,0,0,0,0-.322L10.7,4.549l1.926-1.926c1.89.06,1.215.263,1.335-2.395A.228.228,0,0,0,13.734,0H11.542a.228.228,0,0,0-.228.219l.025,1.116L9.413,3.261,7.772,1.619A.228.228,0,0,0,7.45,1.619Z\"\r\n\t]\r\n} as const\r\n// DMG Bonus End\r\n\r\n// Base Stats\r\nexport const faAtk = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Atk\",\r\n\ticon: [\r\n\t\t14, 13.977,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M7.78,1.621,9.423,3.264l1.928-1.927L11.326.219A.228.228,0,0,1,11.554,0h2.2a.228.228,0,0,1,.228.228c-.121,2.661.556,2.457-1.337,2.4L10.712,4.553,12.356,6.2a.228.228,0,0,1,0,.322c-1.167,1.208-.775.907-1.892-.106L3.313,13.564A.457.457,0,0,1,3,13.7a21.32,21.32,0,0,1-2.954.239,21.172,21.172,0,0,1,.238-2.954.451.451,0,0,1,.134-.318L7.564,3.513l-.838-.838a.229.229,0,0,1,0-.323l.732-.731A.228.228,0,0,1,7.78,1.621Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faDef = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Def\",\r\n\ticon: [\r\n\t\t12.883, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M12.883.726a.291.291,0,0,0-.175-.268C12.3.286,10.944,0,6.442,0S.584.286.176.458A.291.291,0,0,0,0,.727v7.44a.868.868,0,0,0,.125.453c1.579,2.6,5.347,4.855,6.161,5.339a.292.292,0,0,0,.3,0c.789-.482,4.559-2.688,6.168-5.335a.868.868,0,0,0,.127-.455ZM6.441,11.968C6.5,11.981,2.882,9.951,1.617,7.6V1.565s0-.452,4.824-.452Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faElementalMastery = {\r\n\tprefix: 'faga',\r\n\ticonName: \"ele_mas\",\r\n\ticon: [\r\n\t\t14, 13.113,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M8.076,7.71l-.017-.049A4.335,4.335,0,0,0,7.3,6.353a4.431,4.431,0,0,0-.325-.346A2.113,2.113,0,1,0,7,1.781a2.144,2.144,0,0,0-1.838,3.18,4.374,4.374,0,0,0-1.2-.168,4.42,4.42,0,0,0-.755.066l-.038.007C1.836-.682,10.7-2.114,10.962,3.9A3.985,3.985,0,0,1,8.076,7.71Zm3.662-2.137a3.949,3.949,0,0,0-.626-.235,4.473,4.473,0,0,1-1.105,1.7h.031A2.113,2.113,0,1,1,7.925,9.151,4.09,4.09,0,0,0,7.9,8.706,3.968,3.968,0,0,0,6.037,5.775l-.19-.11A3.963,3.963,0,1,0,6.492,12.2c.082-.068.16-.14.236-.214L6.7,11.949a4.367,4.367,0,0,1-.891-1.765A2.112,2.112,0,1,1,4.926,7.27q.1.051.189.111a2.111,2.111,0,0,1,.942,1.49,2.159,2.159,0,0,1,.018.28,3.963,3.963,0,1,0,5.663-3.578Z\"\r\n\t]\r\n} as const\r\n\r\n// Max-HP stacked SVG (primary = base shape, secondary = flair)\r\nexport const faHpPrimary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"hp_primary\",\r\n\ticon: [\r\n\t\t11.104, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M2.052,7.654A.978.978,0,0,1,2.5,7.083c1.511-.85,3.586,2.117,6.544.548C10.971,13.714.151,13.878,2.052,7.654ZM5.552,14C2.177,14-1.2,11.579.416,6.74A18.543,18.543,0,0,1,5.121.213.748.748,0,0,1,5.552,0a.751.751,0,0,1,.431.212A18.543,18.543,0,0,1,10.688,6.74C12.3,11.579,8.927,14,5.552,14Zm.22-12.19a.639.639,0,0,0-.22-.075h0a.649.649,0,0,0-.221.075c-1.71,1.324-4.08,5.282-3.941,7.4a4.019,4.019,0,0,0,4.162,3.543h0A4.019,4.019,0,0,0,9.714,9.215C9.853,7.092,7.483,3.134,5.772,1.81Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faHpSecondary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"hp_secondary\",\r\n\ticon: [\r\n\t\t11.104, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M6.534,8.03A12.566,12.566,0,0,1,8.107,6.521c.569-.413.94,1.11.94,1.11A3.731,3.731,0,0,1,6.534,8.03Z\"\r\n\t]\r\n} as const\r\n// Max-HP stacked End\r\n\r\nexport const faMaxStamina = {\r\n\tprefix: 'faga',\r\n\ticonName: \"MaxStamina\",\r\n\ticon: [\r\n\t\t14, 10.365,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M13.924,6.541c-.152.207-1.292.3-1.292.3L9.77,6.948V8.564c0,.981-1.387,1.8-2.77,1.8s-2.77-.82-2.77-1.8V6.948L1.368,6.843s-1.14-.095-1.292-.3c-.239-.323.145-1.524.331-2.154.326-.865,1.284-3.21,1.885-3.119,1.115.17-.673,3.894.1,3.814A21.17,21.17,0,0,1,7,5a21.17,21.17,0,0,1,4.6.079c.777.08-1.011-3.644.1-3.814.6-.091,1.559,2.254,1.885,3.119C13.779,5.017,14.163,6.218,13.924,6.541ZM4.553,2.421a2.456,2.456,0,0,0,4.911,0A2.456,2.456,0,0,0,4.553,2.421Z\"\r\n\t]\r\n} as const\r\n\r\n// Base Stats End\r\n\r\n// Advanced Stats\r\n\r\n// CD Reducation stacked SVG (primary = base shape, secondary = flair)\r\nexport const faCdReductionPrimary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"CdReduction_primary\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M14,7A7,7,0,0,1,2.986,12.733L5.333,9.381A2.907,2.907,0,1,0,7,4.092V0a7,7,0,0,1,7,7\"\r\n\t]\r\n} as const\r\n\r\nexport const faCdReductionSecondary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"CdReduction_secondary\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M5.333,9.381,2.986,12.733A7,7,0,0,1,.356,4.8l4.054.881a2.905,2.905,0,0,0,.923,3.7Z\"\r\n\t]\r\n} as const\r\n// CD Reduction stacked end\r\n\r\nexport const faCritRate = {\r\n\tprefix: 'faga',\r\n\ticonName: \"CritRate\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M0,14,3.5,6.236,1.973,1.464,7.255,3.5,14,0,10.5,7.255l1.527,4.772L7.255,10.5,0,14\"\r\n\t]\r\n} as const\r\n\r\n// Energy Recharge stacked SVG (primary = base shape, secondary = flair) \r\nexport const faEnergyRechargePrimary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"EnergyRecharge_primary\",\r\n\ticon: [\r\n\t\t14, 13.282,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M14,6.641A6.642,6.642,0,0,1,.928,8.3h0L0,8.737.961,4.8l.012.012L2.392,6.3l1.37,1.433-1.23.143A4.981,4.981,0,1,0,7.359,1.66V0A6.641,6.641,0,0,1,14,6.641Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faEnergyRechargeSecondary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"EnergyRecharge_secondary\",\r\n\ticon: [\r\n\t\t14, 13.282,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M2.392,6.3.973,4.813A6.643,6.643,0,0,1,7.359,0V1.66A4.98,4.98,0,0,0,2.392,6.3Z\"\r\n\t]\r\n} as const\r\n// Energy Recharge stacked end\r\n\r\nexport const faHealingBonus = {\r\n\tprefix: 'faga',\r\n\ticonName: \"HealingBonus\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M14,4.765v4.47a.589.589,0,0,1-.588.589H9.824v3.588A.589.589,0,0,1,9.235,14H4.765a.589.589,0,0,1-.589-.588V9.824H.588A.589.589,0,0,1,0,9.235V4.765a.589.589,0,0,1,.588-.589H4.176V.588A.589.589,0,0,1,4.765,0h4.47a.589.589,0,0,1,.589.588V4.176h3.588A.589.589,0,0,1,14,4.765Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faShieldStrength = {\r\n\tprefix: 'faga',\r\n\ticonName: \"ShieldStrength\",\r\n\ticon: [\r\n\t\t12.883, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M12.883.726a.291.291,0,0,0-.175-.268C12.3.286,10.944,0,6.442,0S.584.286.176.458A.291.291,0,0,0,0,.727v7.44a.868.868,0,0,0,.125.453c1.579,2.6,5.347,4.855,6.161,5.339a.292.292,0,0,0,.3,0c.789-.482,4.559-2.688,6.168-5.335a.868.868,0,0,0,.127-.455ZM5.136,10.773,6.182,7l-4-1,5.61-4.762L6.747,5.01l4,1Z\"\r\n\t]\r\n} as const\r\n// Advanced Stats End\r\n\r\n// Artifacts\r\nexport const faCirclet = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Circlet\",\r\n\ticon: [\r\n\t\t14, 11.588,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M12.793,3.842l.269.269L10.5,5.93,7.269,2.158l.809-.809L7,0,5.922,1.349l.809.809L3.5,5.93.938,4.111l.269-.269L0,2.965,2.958,9.972,7,11.588l4.042-1.616L14,2.965ZM8.732,7.864l-.892.149a.673.673,0,0,0-.543.5l-.25,1a.048.048,0,0,1-.094,0l-.25-1a.673.673,0,0,0-.543-.5l-.892-.149a.049.049,0,0,1,0-.1l.892-.149a.673.673,0,0,0,.543-.5l.25-1a.048.048,0,0,1,.094,0l.25,1a.673.673,0,0,0,.543.5l.892.149A.049.049,0,0,1,8.732,7.864Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faFlower = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Flower\",\r\n\ticon: [\r\n\t\t14, 13.326,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M11.279,4.705a2.554,2.554,0,0,0-1.6.9C11.215,3.854,12.708.454,9.711.3c-.015-.115-.2-.387-.4-.276A5.942,5.942,0,0,0,7.2,4.742C6.705,2.18,4.078.459,3.016.769c-.207.324-.056.607-.261.793-.18.163-.58-.016-.619.249-.324,1.729.945,3.632,2.758,4.532C3.113,6.057.165,6.349,0,8.491,0,9.43,1.269,9.868,3.191,9.868A3.541,3.541,0,0,0,6.319,8.4c-2.541,2.727-.544,3.278,2.192,1.78,1.073-.621.8-1.4.027-2.295,1.395.853,3.755-.174,3.877-1.72C12.414,5.533,12.142,4.718,11.279,4.705ZM7.521,6.213a.5.5,0,0,1-.441.5l-.1.637L6.9,6.694A.5.5,0,0,1,6.538,6.1l-.467-.567.557.377a.5.5,0,0,1,.706-.086l.459-.381-.356.492A.5.5,0,0,1,7.521,6.213ZM14,8.089c-.519.249-.77,1.7-1.586,2.337a3.966,3.966,0,0,1-2.678.5,3.463,3.463,0,0,1-1.881,2.393.041.041,0,0,1-.05-.064,4.294,4.294,0,0,0,1-3.174A1.125,1.125,0,0,0,8.956,8.3c.344.065.828,1.348.876,2.125,0,0,1.857-1.178,2.355-1.37A6.666,6.666,0,0,0,9.877,10.3a5.933,5.933,0,0,1,1.269-1.5C11.757,8.271,13.548,8.252,14,8.089Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faGoblet = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Goblet\",\r\n\ticon: [\r\n\t\t14, 13.864,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M9.546,8.637c4.121-2.3,4.121-3.555,4.12-6.894H.428c0,3.339,0,4.59,4.12,6.894,0,1.75,1.739,1.28,1.739,2.187.076.765-.192,1.207-.567,1.275-1.21.167-3.368.939-3.383,1.765h9.42c-.015-.826-2.173-1.6-3.383-1.765-.374-.068-.644-.509-.567-1.275C7.807,9.917,9.546,10.387,9.546,8.637ZM7.461,5.723,7.113,7.116a.066.066,0,0,1-.066.052.066.066,0,0,1-.066-.052L6.633,5.723a.941.941,0,0,0-.757-.7L4.631,4.817a.068.068,0,0,1,0-.135l1.245-.207a.939.939,0,0,0,.757-.7l.348-1.393a.066.066,0,0,1,.066-.051.067.067,0,0,1,.066.051l.348,1.393a.939.939,0,0,0,.757.7l1.245.207a.068.068,0,0,1,0,.135l-1.245.207A.941.941,0,0,0,7.461,5.723Zm5.881-4.408H.658A.657.657,0,0,1,0,.658H0A.657.657,0,0,1,.658,0H13.342A.657.657,0,0,1,14,.658h0A.657.657,0,0,1,13.342,1.315Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faPlume = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Plume\",\r\n\ticon: [\r\n\t\t12.933, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M11.809,0a4.52,4.52,0,0,0-1,.186,4.469,4.469,0,0,0-1.479.6c-.236.14-.241.324-.312.274a.717.717,0,0,0-.467-.033C5.117,3.737,5.04,3.893,3.285,6.494,3.171,6.54,3,6.384,3,6.384c-.059.546-.215.546-.526,1.168A2.75,2.75,0,0,0,2.1,9.588a2.49,2.49,0,0,1-.723-.245l.467.39a2.681,2.681,0,0,1-.934.078l.623.467s-.39.389-.546.389l.519.074A18.034,18.034,0,0,0,0,13.948.04.04,0,0,0,.045,14l.593-.3a.038.038,0,0,0,.02-.025,5.139,5.139,0,0,1,1.722-2.7l.479.549a1.881,1.881,0,0,1-.155-.779l.856.156c-.389-.39-.35-.56-.35-.56a4.067,4.067,0,0,0,1.6-.034,8.175,8.175,0,0,0,1.705-.865c.084-.04-.146-.082-.066-.124s.329-.095.413-.145A20.31,20.31,0,0,0,9.415,7.147a11.77,11.77,0,0,0,2.367-2.7c.043-.074-.36-.2-.526-.231.177.021.616.121.654.048a6.256,6.256,0,0,0,.86-2.34C12.826,1.245,13.449-.079,11.809,0ZM2.548,9.577C4.5,5.372,10.1,1.946,10.1,1.946,11.87.561,6.141,4.384,2.548,9.655Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faSands = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Sands\",\r\n\ticon: [\r\n\t\t9.822, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M9.606,12.708H8.788v-.944c0-3.536-3.274-3.709-3.274-4.915V6.778a.855.855,0,0,1,.392-.72c.868-.56,2.773-1.311,2.877-3.895a.216.216,0,0,0-.215-.225H1.254a.217.217,0,0,0-.216.225c.1,2.584,2.009,3.335,2.877,3.9a.856.856,0,0,1,.393.72v.071c0,1.206-3.274,1.379-3.274,4.915v.944H.215A.215.215,0,0,0,0,12.923v.862A.215.215,0,0,0,.215,14H9.606a.216.216,0,0,0,.216-.215v-.862A.216.216,0,0,0,9.606,12.708Zm-4.695,0h-3.1c0-2.757,2.757-2.154,2.757-3.274V5.988S2.929,5.04,2.929,4.351H6.892c0,.689-1.637,1.637-1.637,1.637V9.434c0,1.12,2.757.517,2.757,3.274ZM9.822.215v.862a.216.216,0,0,1-.216.215H.215A.215.215,0,0,1,0,1.077V.215A.215.215,0,0,1,.215,0H9.606A.216.216,0,0,1,9.822.215Z\"\r\n\t]\r\n} as const\r\n// Artifacts End","import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n// Probably a way to auto-populate this.\r\nexport const languageCodeList = [\r\n  \"chs\",\r\n  \"cht\",\r\n  \"de\",\r\n  \"en\",\r\n  \"es\",\r\n  \"fr\",\r\n  \"id\",\r\n  \"ja\",\r\n  \"ko\",\r\n  \"pt\",\r\n  \"ru\",\r\n  \"th\",\r\n  \"vi\"\r\n];\r\n\r\n/**\r\n * @see: https://www.i18next.com/translation-function/essentials\r\n * @see: https://react.i18next.com/latest/using-with-hooks\r\n */\r\ni18n\r\n  // load translation using http ->\r\n  // see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // Configure localization.\r\n  .init({\r\n    debug: process.env.NODE_ENV === \"development\",\r\n    // Use English strings by default, if the current language does not include\r\n    // the specified string.\r\n    fallbackLng: 'en',\r\n    // fallbackLng: 'dev', // Switch to this to force the fallback value on missing strings.\r\n\r\n    // List all translation namespaces.\r\n    ns: [\r\n      \"artifact\",\r\n      \"home\",\r\n      \"languages\",\r\n      \"settings\",\r\n      \"ui\",\r\n    ],\r\n    // Specify the default namespace.\r\n    defaultNS: \"ui\",\r\n\r\n    // Only use the language code, skipping the region code.\r\n    // For example, en-US becomes simply en.\r\n    load: 'languageOnly',\r\n\r\n    // allow an empty value to count as invalid (by default is true)\r\n    returnEmptyString: false,\r\n\r\n    backend: process.env.NODE_ENV === \"development\" ? {\r\n      // Path to load localization data from.\r\n      loadPath: 'genshin-optimizer/locales/{{lng}}/{{ns}}.json',\r\n    } : {\r\n      // Path to load localization data from.\r\n      loadPath: 'locales/{{lng}}/{{ns}}.json',\r\n    },\r\n    interpolation: {\r\n      escapeValue: false,//react does interlopation already\r\n    }\r\n  });\r\n\r\nexport default i18n;","import { Image } from \"react-bootstrap\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { IArtifactSheet, SetEffectEntry } from \"../Types/artifact\";\r\nimport { allArtifactSets, allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey } from \"../Types/consts\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { BonusStats, ICalculatedStats } from \"../Types/stats\";\r\nimport { mergeStats } from \"../Util/StatUtil\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value, set)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  readonly key: ArtifactSetKey\r\n  constructor(data: IArtifactSheet, setKey: ArtifactSetKey) {\r\n    this.data = data\r\n    this.key = setKey\r\n  }\r\n\r\n  get name() { return tr(this.key, \"setName\") }\r\n  get nameWithIcon() {\r\n    const slotKey = this.slots[0]\r\n    return <span><Image src={this.slotIcons[slotKey]} className=\"inline-icon\" /> {tr(this.key, \"setName\")}</span>\r\n  }\r\n\r\n  //This is only for OCR, because we only scan in english right now.\r\n  get nameRaw(): string { return this.data.name }\r\n  get rarity(): readonly ArtifactRarity[] { return this.data.rarity }\r\n  get slots(): SlotKey[] {\r\n    switch (this.key) {\r\n      case \"PrayersForDestiny\":\r\n      case \"PrayersForIllumination\":\r\n      case \"PrayersForWisdom\":\r\n      case \"PrayersToSpringtime\": return [\"circlet\"]\r\n      default: return deepClone(allSlotKeys) as any\r\n    }\r\n  }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\r\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): BonusStats {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\r\n  setEffectDocument = (setNum: SetNum) => this.data.setEffects[setNum]?.document\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<ArtifactRarity, ArtifactSetKey[]> {\r\n    const grouped: Dict<ArtifactRarity, ArtifactSetKey[]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as ArtifactRarity\r\n      if (grouped[rarity]) grouped[rarity]!.push(key)\r\n      else grouped[rarity] = [key]\r\n    })\r\n    return grouped\r\n  }\r\n\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: ArtifactRarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): BonusStats {\r\n    const artifactSetEffect: BonusStats = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && mergeStats(artifactSetEffect, evalIfFunc(value.stats, charStats))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import { ICharacterSheet, TalentSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey } from \"../Types/consts\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport { CharacterExpCurveData } from \"pipeline\";\r\nimport expCurveJSON from './expCurve_gen.json'\r\nimport Stat from '../Stat'\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nconst expCurve = expCurveJSON as CharacterExpCurveData\r\n\r\nexport const charImport = import('../Data/Characters').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>\r\n})\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | \"\"): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get nameWIthIcon() { return <span><Image src={this.thumbImg} className=\"inline-icon\" /> {this.name}</span> }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return \"elementKey\" in this.sheet ? this.sheet.elementKey : undefined }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get isAutoElemental() { return this.sheet.weaponTypeKey === \"catalyst\" }\r\n  getBase = (statKey: \"hp\" | \"def\" | \"atk\", level = 1, ascensionLvl = 0) =>\r\n    this.sheet.baseStat[statKey] * (expCurve[this.sheet.baseStatCurve[statKey] as any])[level] + this.sheet.ascensions[ascensionLvl].props[statKey]\r\n  getSpecializedStat = (ascensionLvl = 0): string | undefined => Object.keys(this.sheet.ascensions[ascensionLvl].props).find(k => k !== \"hp\" && k !== \"def\" && k !== \"atk\")\r\n  getSpecializedStatVal = (ascensionLvl = 0): number => {\r\n    const statKey = this.getSpecializedStat(ascensionLvl)\r\n    if (!statKey) return 0\r\n    const value = this.sheet.ascensions[ascensionLvl].props[statKey] ?? 0\r\n    if (Stat.getStatUnit(statKey) === \"%\") return value * 100\r\n    return value\r\n  }\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (eleKey: ElementKey = \"anemo\"): TalentSheet | undefined => {\r\n    if (\"talent\" in this.sheet) return this.sheet.talent\r\n    else return this.sheet.talents[eleKey]\r\n  }\r\n  getTalentOfKey = (talentKey: string, eleKey: ElementKey = \"anemo\") => this.getTalent(eleKey)?.sheets[talentKey]\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalentOfKey(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats, eleKey: ElementKey = \"anemo\") => {\r\n    const talents = this.getTalent(eleKey)?.sheets\r\n    if (!talents) return []\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n}\r\n","export function KeyPath<Base, Value = Base>(prefix: string[] = []): PartialPath<Base, Value> {\r\n  const path = () => path.keys\r\n  path.keys = prefix\r\n\r\n  return new Proxy(path, {\r\n    get: (partial, symbol) => KeyPath([...partial.keys, symbol.toString()])\r\n  }) as any\r\n}\r\nexport function resolve<Base, Value>(base: Base, path: Path<Base, Value>): Value {\r\n  return path.reduce((current, key) => current?.[key], base as any)\r\n}\r\nexport function assign<Base, Value>(base: Base, path: Path<Base, Value>, value: Value) {\r\n  path.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, base as any)\r\n}\r\n\r\ntype PartialPath<Base, Value> = {\r\n  [key in keyof Value]: PartialPath<Base, Value[key]> & (() => Path<Base, Value>)\r\n}\r\n// eslint-disable-next-line\r\nexport type Path<Base, Value> = string[]","import { faDiceD20 } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAnemo, faAtk, faCdReductionPrimary, faCdReductionSecondary, faCritRate, faCryo, faDef, faDendro, faElectro, faElementalMastery, faEnergyRechargePrimary, faEnergyRechargeSecondary, faGeo, faHealingBonus, faHpPrimary, faHpSecondary, faHydro, faMaxStamina, faPhysicalDmgBonus, faPyro, faShieldStrength } from '../faIcons'\r\n\r\nexport function HPIcon() {\r\n\treturn <span className=\"fa-layers \">\r\n\t\t<FontAwesomeIcon icon={faHpPrimary as any} />\r\n\t\t<FontAwesomeIcon icon={faHpSecondary as any} style={{ color: \"grey\" }} />\r\n\t</span>\r\n}\r\n\r\nexport function CdRedIcon() {\r\n\treturn <span className=\"fa-layers \">\r\n\t\t<FontAwesomeIcon icon={faCdReductionPrimary as any} />\r\n\t\t<FontAwesomeIcon icon={faCdReductionSecondary as any} style={{ color: \"grey\" }} />\r\n\t</span>\r\n}\r\n\r\nexport function EnerRechIcon() {\r\n\treturn <span className=\"fa-layers \">\r\n\t\t<FontAwesomeIcon icon={faEnergyRechargePrimary as any} />\r\n\t\t<FontAwesomeIcon icon={faEnergyRechargeSecondary as any} style={{ color: \"grey\" }} />\r\n\t</span>\r\n}\r\nexport const uncoloredEleIcons = {\r\n\tanemo: <FontAwesomeIcon icon={faAnemo as any} />,\r\n\tgeo: <FontAwesomeIcon icon={faGeo as any} />,\r\n\telectro: <FontAwesomeIcon icon={faElectro as any} />,\r\n\thydro: <FontAwesomeIcon icon={faHydro as any} />,\r\n\tpyro: <FontAwesomeIcon icon={faPyro as any} />,\r\n\tcryo: <FontAwesomeIcon icon={faCryo as any} />,\r\n\tdendro: <FontAwesomeIcon icon={faDendro as any} />,\r\n\tphysical: <FontAwesomeIcon icon={faPhysicalDmgBonus as any} />,\r\n} as const\r\nconst coloredEleIcon = Object.fromEntries(Object.entries(uncoloredEleIcons).map(([key, ele]) => [key, <span className={`text-${key}`}>{ele}</span>])) as { anemo: JSX.Element, geo: JSX.Element, electro: JSX.Element, hydro: JSX.Element, pyro: JSX.Element, cryo: JSX.Element, dendro: JSX.Element, physical: JSX.Element }\r\n\r\nconst StatIcon = {\r\n\tcharacterHP: <HPIcon />,\r\n\tfinalHP: <HPIcon />,\r\n\thp_: <HPIcon />,\r\n\thp: <HPIcon />,\r\n\r\n\tbaseATK: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tcharacterATK: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tfinalATK: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tatk_: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tatk: <FontAwesomeIcon icon={faAtk as any} />,\r\n\r\n\tcharacterDEF: <FontAwesomeIcon icon={faDef as any} />,\r\n\tfinalDEF: <FontAwesomeIcon icon={faDef as any} />,\r\n\tdef_: <FontAwesomeIcon icon={faDef as any} />,\r\n\tdef: <FontAwesomeIcon icon={faDef as any} />,\r\n\r\n\teleMas: <FontAwesomeIcon icon={faElementalMastery as any} />,\r\n\tcritRate_: <FontAwesomeIcon icon={faCritRate as any} />,\r\n\tcritDMG_: <FontAwesomeIcon icon={faDiceD20 as any} />,\r\n\tenerRech_: <EnerRechIcon />,\r\n\theal_: <FontAwesomeIcon icon={faHealingBonus as any} />,\r\n\r\n\tcdRed_: <CdRedIcon />,\r\n\r\n\tpowShield_: <FontAwesomeIcon icon={faShieldStrength as any} />,\r\n\tstamina: <FontAwesomeIcon icon={faMaxStamina as any} />,\r\n\r\n\t...coloredEleIcon,\r\n\t...Object.fromEntries(Object.keys(coloredEleIcon).flatMap(ele => [[`${ele}_dmg_`, coloredEleIcon[ele]], [`${ele}_res_`, coloredEleIcon[ele]]]))\r\n}\r\n\r\nexport default StatIcon","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { faCirclet, faFlower, faGoblet, faPlume, faSands } from '../../faIcons'\r\nimport { SlotKey } from \"../../Types/consts\"\r\n\r\nconst SlotIcon: StrictDict<SlotKey, any> = {\r\n  flower: faFlower,\r\n  plume: faPlume,\r\n  sands: faSands,\r\n  goblet: faGoblet,\r\n  circlet: faCirclet\r\n}\r\n\r\nexport function artifactSlotIcon(slotKey: SlotKey) {\r\n  return <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n}\r\nexport default function SlotNameWithIcon({ slotKey }: { slotKey: SlotKey }) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  const icon = artifactSlotIcon(slotKey)\r\n  return <span>{icon} {t(`slotName.${slotKey}`)}</span>\r\n}","export function valueStringWithUnit(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return valueString(value, unit) + \"%\"\r\n    case \"eff\": return valueString(value, unit) + \"%\"\r\n    default: return valueString(value, unit)\r\n  }\r\n}\r\n\r\nexport function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1) // TODO: % conversion\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}\r\n","import { WeaponExpCurveData } from 'pipeline';\r\nimport { Translate } from '../Components/Translate'\r\nimport { ascensionMaxLevel } from '../Data/CharacterData';\r\nimport Stat from '../Stat';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\nimport expCurveJSON from './expCurve_gen.json'\r\nconst expCurve = expCurveJSON as WeaponExpCurveData\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return Object.fromEntries(Object.entries(imp.default).map(([weaponKey, value]) =>\r\n    [weaponKey, new WeaponSheet(weaponKey, value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>\r\n})\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  key: WeaponKey;\r\n  constructor(key: string, weaponSheet: IWeaponSheet) {\r\n    this.key = key as WeaponKey\r\n    this.sheet = weaponSheet\r\n  }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICharacter[\"weapon\"]): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  //when there is no substat, assume there is no passive. \r\n  get passiveName() { return this.getSubStatKey() ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (stats: ICalculatedStats) => this.getSubStatKey() ? this.tr(`passiveDescription.${stats.weapon.refineIndex}`) : \"\"\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  stats = (build: ICalculatedStats): object | undefined => evalIfFunc(this.sheet.stats, build) || {}\r\n  get conditionals() { return this.sheet.conditionals }\r\n  get document() { return this.sheet.document }\r\n  getMainStatValue = (level = 1, ascension = 0) => {\r\n    const { type, base, curve } = this.sheet.mainStat\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatValue = (level = 1, ascension = 0) => {\r\n    if (!this.sheet.subStat) return 0\r\n    let { type, base, curve } = this.sheet.subStat\r\n    if (Stat.getStatUnit(type) === \"%\") base = base * 100\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatKey = () => this.sheet.subStat?.type ?? \"\"\r\n}\r\n","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nexport const allHitModes = [\"hit\", \"avgHit\", \"critHit\"] as const\r\nexport const allReactionModes = [\"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",] as const\r\nexport const allArtifactSetCount = [1, 2, 3, 4, 5] as const\r\nexport const allRarities = [5, 4, 3, 2, 1] as const\r\nexport const allArtifactRarities = [5, 4, 3] as const\r\nexport const allSlotKeys = [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"] as const\r\nexport const allElements = ['anemo', 'geo', 'electro', 'hydro', 'pyro', 'cryo'] as const\r\nexport const allWeaponTypeKeys = ['sword', 'claymore', 'polearm', 'bow', 'catalyst'] as const\r\nexport const allArtifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\",\r\n  \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\",\r\n  \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\",\r\n  \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\",\r\n  \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\",\r\n  \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\",\r\n  \"WanderersTroupe\", \"TenacityOfTheMillelith\", \"PaleFlame\", \"EmblemOfSeveredFate\", \"ShimenawasReminiscence\",\r\n] as const\r\nexport const allCharacterKeys = [\r\n  \"albedo\", \"amber\", \"barbara\", \"beidou\", \"bennett\", \"chongyun\", \"diluc\", \"diona\", \"fischl\", \"ganyu\",\r\n  \"hutao\", \"jean\", \"kaeya\", \"keqing\", \"klee\", \"lisa\", \"mona\", \"ningguang\", \"noelle\", \"qiqi\",\r\n  \"razor\", \"sucrose\", \"tartaglia\", \"traveler\", \"traveler\", \"venti\", \"xiao\", \"xiangling\", \"xingqiu\", \"xinyan\",\r\n  \"zhongli\", \"rosaria\", \"yanfei\", \"eula\", \"kaedeharakazuha\", \"kamisatoayaka\", \"sayu\", \"yoimiya\"\r\n] as const\r\nexport const allWeaponKeys = [\r\n  \"DullBlade\", \"SilverSword\", \"CoolSteel\", \"DarkIronSword\", \"FilletBlade\", \"HarbingerOfDawn\", \"SkyriderSword\",\r\n  \"TravelersHandySword\", \"BlackcliffLongsword\", \"FavoniusSword\", \"IronSting\", \"LionsRoar\", \"PrimordialJadeCutter\",\r\n  \"PrototypeRancour\", \"RoyalLongsword\", \"SacrificialSword\", \"TheAlleyFlash\", \"TheBlackSword\", \"TheFlute\",\r\n  \"SwordOfDescension\", \"FesteringDesire\", \"AquilaFavonia\", \"SkywardBlade\", \"SummitShaper\", \"WasterGreatsword\",\r\n  \"OldMercsPal\", \"BloodtaintedGreatsword\", \"DebateClub\", \"FerrousShadow\", \"Quartz\", \"SkyriderGreatsword\",\r\n  \"WhiteIronGreatsword\", \"BlackcliffSlasher\", \"FavoniusGreatsword\", \"LithicBlade\", \"PrototypeAminus\", \"Rainslasher\",\r\n  \"RoyalGreatsword\", \"SerpentSpine\", \"TheBell\", \"Whiteblind\", \"SacrificialGreatsword\", \"SnowTombedStarsilver\",\r\n  \"SkywardPride\", \"WolfsGravestone\", \"TheUnforged\", \"BeginnersProtector\", \"IronPoint\", \"BlackTassel\", \"Halberd\",\r\n  \"WhiteTassel\", \"BlackcliffPole\", \"CrescentPike\", \"Deathmatch\", \"DragonsBane\", \"LithicSpear\", \"PrototypeGrudge\",\r\n  \"FavoniusLance\", \"RoyalSpear\", \"DragonspineSpear\", \"VortexVanquisher\", \"PrimordialJadeWingedSpear\", \"StaffOfHoma\",\r\n  \"SkywardSpine\", \"HuntersBow\", \"SeasonedHuntersBow\", \"EbonyBow\", \"Messenger\", \"RavenBow\", \"RecurveBow\",\r\n  \"SharpshootersOath\", \"Slingshot\", \"TheStringless\", \"AlleyHunter\", \"BlackcliffWarbow\", \"CompoundBow\",\r\n  \"FavoniusWarbow\", \"PrototypeCrescent\", \"RoyalBow\", \"Rust\", \"SacrificialBow\", \"TheViridescentHunt\", \"SkywardHarp\",\r\n  \"AmosBow\", \"ElegyForTheEnd\", \"WindblumeOde\", \"ApprenticesNotes\", \"PocketGrimoire\", \"DullBlade\", \"EmeraldOrb\", //TODO: AmberCatalyst => DullBlade, replace with another weaponKey\r\n  \"MagicGuide\", \"OtherworldlyStory\", \"ThrillingTalesOfDragonSlayers\", \"TwinNephrite\", \"BlackcliffAgate\",\r\n  \"FavoniusCodex\", \"MappaMare\", \"PrototypeMalice\", \"RoyalGrimoire\", \"SacrificialFragments\", \"SolarPearl\", \"TheWidsith\",\r\n  \"WineAndSong\", \"EyeOfPerception\", \"Frostbearer\", \"LostPrayerToTheSacredWinds\", \"SkywardAtlas\", \"MemoryOfDust\",\r\n  \"SongOfBrokenPines\", \"DodocoTales\", \"MitternachtsWaltz\", \"FreedomSworn\", \"AmenomaKageuchi\", \"MistsplitterReforged\",\r\n  \"KatsuragikiriNagamasa\", \"KitainCrossSpear\", \"ThunderingPulse\", \"Hamayumi\", \"HakushinRing\",\r\n] as const\r\nexport const characterSpecializedStatKeys = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"] as const\r\n\r\nexport type HitModeKey = typeof allHitModes[number]\r\nexport type ReactionModeKey = typeof allReactionModes[number]\r\nexport type SetNum = typeof allArtifactSetCount[number]\r\nexport type Rarity = typeof allRarities[number]\r\nexport type ArtifactRarity = typeof allArtifactRarities[number]\r\nexport type SlotKey = typeof allSlotKeys[number]\r\nexport type ElementKey = typeof allElements[number]\r\nexport type ArtifactSetKey = typeof allArtifactSets[number]\r\nexport type CharacterKey = typeof allCharacterKeys[number]\r\nexport type WeaponKey = typeof allWeaponKeys[number]\r\nexport type WeaponTypeKey = typeof allWeaponTypeKeys[number]\r\nexport type CharacterSpecializedStatKey = typeof characterSpecializedStatKeys[number]","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\n\r\n// https://github.com/Dimbreath/GenshinData/blob/72c9112a7c5e8e5014f61009a1a2764e266aeab7/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//   or if the permalink is dead,\r\n// https://github.com/Dimbreath/GenshinData/blob/master/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//\r\n// PlayerElementLevelCo\r\nexport const transformativeReactionLevelMultipliers = [-1.0, // lvl 0\r\n  17.165606, 18.535048, 19.904854, 21.274902, 22.6454, 24.649612, 26.640642, 28.868587, 31.36768, 34.143345, 37.201, 40.66, 44.446667, 48.56352, 53.74848, 59.081898, 64.420044, 69.72446, 75.12314, 80.58478, 86.11203, 91.70374, 97.24463, 102.812645, 108.40956, 113.20169, 118.102905, 122.97932, 129.72733, 136.29291, 142.67085, 149.02902, 155.41699, 161.8255, 169.10631, 176.51808, 184.07274, 191.70952, 199.55692, 207.38205, 215.3989, 224.16566, 233.50217, 243.35057, 256.06308, 268.5435, 281.52606, 295.01364, 309.0672, 323.6016, 336.75754, 350.5303, 364.4827, 378.61917, 398.6004, 416.39825, 434.387, 452.95105, 472.60623, 492.8849, 513.56854, 539.1032, 565.51056, 592.53876, 624.4434, 651.47015, 679.4968, 707.79407, 736.67145, 765.64026, 794.7734, 824.67737, 851.1578, 877.74207, 914.2291, 946.74677, 979.4114, 1011.223, 1044.7917, 1077.4437, 1109.9976, 1142.9766, 1176.3695, 1210.1844, 1253.8357, 1288.9528, 1325.4841, 1363.4569, 1405.0974, 1446.8535]\r\n// PlayerShieldLevelCo\r\nexport const crystalizeLevelMultipliers = [-1.0, // lvl 0\r\n  91.1791, 98.707664, 106.23622, 113.76477, 121.29332, 128.82188, 136.35042, 143.87898, 151.40752, 158.93608, 169.99149, 181.07625, 192.19037, 204.0482, 215.939, 227.86275, 247.68594, 267.5421, 287.4312, 303.82642, 320.22522, 336.62762, 352.31927, 368.01093, 383.70255, 394.43237, 405.18146, 415.94992, 426.73764, 437.5447, 450.6, 463.7003, 476.84558, 491.1275, 502.55457, 514.0121, 531.4096, 549.9796, 568.5849, 584.9965, 605.67035, 626.3862, 646.0523, 665.7556, 685.4961, 700.8394, 723.3331, 745.8653, 768.4357, 786.79193, 809.5388, 832.32904, 855.16266, 878.0396, 899.4848, 919.362, 946.0396, 974.7642, 1003.5786, 1030.077, 1056.635, 1085.2463, 1113.9244, 1149.2587, 1178.0648, 1200.2238, 1227.6603, 1257.243, 1284.9174, 1314.7529, 1342.6652, 1372.7524, 1396.321, 1427.3124, 1458.3745, 1482.3358, 1511.9109, 1541.5493, 1569.1537, 1596.8143, 1622.4197, 1648.074, 1666.3761, 1684.6782, 1702.9803, 1726.1047, 1754.6715, 1785.8666, 1817.1375, 1851.0603]\r\n","import { Card, Spinner } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nexport default function LoadingCard() {\r\n  const { t, ready } = useTranslation(\"ui\", { useSuspense: false });\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n    <Card.Body>\r\n      <h3 className=\"text-center\">{ready ? <Trans t={t} i18nKey=\"ui:loading\" /> : \"Loading...\"}<Spinner animation=\"border\" variant=\"primary\" /></h3>\r\n    </Card.Body>\r\n  </Card>\r\n}","import { faDiscord, faPatreon, faPaypal } from '@fortawesome/free-brands-svg-icons';\r\nimport { faCalculator, faCog, faIdCard, faTools } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ReactGA from 'react-ga';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { HashRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { version } from \"../package.json\";\r\nimport './App.scss';\r\nimport { artifactSlotIcon } from './Artifact/Component/SlotNameWIthIcon';\r\nimport './Assets/Image.scss';\r\nimport LoadingCard from './Components/LoadingCard';\r\nimport './Database/Database';\r\nimport './i18n';\r\nimport { LanguageDropdown } from './Settings/SettingsDisplay';\r\n\r\nconst Home = lazy(() => import('./Home/HomeDisplay'))\r\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\r\nconst CharacterDisplay = lazy(() => import('./Character/CharacterDisplay'))\r\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\r\nconst Planner = lazy(() => import('./Planner/PlannerDisplay'))\r\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\r\nconst FlexDisplay = lazy(() => import('./FlexPage/FlexDisplay'))\r\nconst SettingsDisplay = lazy(() => import('./Settings/SettingsDisplay'))\r\n\r\nfunction App() {\r\n  return <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n    <AppInner />\r\n  </Suspense>\r\n}\r\nfunction AppInner() {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <HashRouter>\r\n    <div className=\"h-100 d-flex flex-column\" id=\"mainContainer\">\r\n      <div id=\"content\" className=\"flex-grow-1\">\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand as={Link} to=\"/\"><Trans t={t} i18nKey=\"pageTitle\">Genshin Optimizer</Trans></Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link as={Link} to=\"/artifact\">{artifactSlotIcon(\"flower\")} <Trans t={t} i18nKey=\"ui:tabs.artifacts\">Artifacts</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/character\"><FontAwesomeIcon icon={faIdCard} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:tabs.characters\">Character</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/build\"><FontAwesomeIcon icon={faCalculator} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:tabs.builds\">Builds</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/tools\"><FontAwesomeIcon icon={faTools} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:tabs.tools\">Tools</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/database\"><FontAwesomeIcon icon={faCog} /> <Trans t={t} i18nKey=\"ui:tabs.database\">Database</Trans></Nav.Link>\r\n              {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/test\">TEST</Nav.Link>}\r\n            </Nav>\r\n            <Nav>\r\n              {process.env.NODE_ENV === \"development\" && <LanguageDropdown />}\r\n              <Nav.Link href={process.env.REACT_APP_PAYPAL_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPaypal} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.paypal\">PayPal</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_PATREON_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPatreon} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.patreon\">Patreon</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"discord\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faDiscord} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.discord\">Discord</Trans></span>\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n          <Switch>\r\n            <Route path=\"/artifact\" component={ArtifactDisplay} />\r\n            <Route path=\"/character\" component={CharacterDisplay} />\r\n            <Route path=\"/build\" component={BuildDisplay} />\r\n            <Route path=\"/tools\" component={Planner} />\r\n            {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\r\n            <Route path=\"/database\" component={SettingsDisplay} />\r\n            <Route path=\"/flex\" component={FlexDisplay} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n      <Nav id=\"footer\" className=\"bg-dark\">\r\n        <Row className=\"w-100 ml-0 mr-0 mb-2 text-light d-flex justify-content-between\">\r\n          <Col xs={\"auto\"}>\r\n            <span><small><Trans t={t} i18nKey=\"ui:rightsDisclaimer\">Genshin Optimizer is not affiliated with or endorsed by miHoYo.</Trans></small></span>\r\n          </Col>\r\n          <Col xs={\"auto\"}>\r\n            <span><small ><Trans t={t} i18nKey=\"ui:appVersion\" values={{ version: version }}>Genshin Optimizer Version: {{ version }}</Trans></small></span>\r\n          </Col>\r\n        </Row>\r\n      </Nav>\r\n    </div>\r\n  </HashRouter>\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID as any, {\r\n  // debug: process.env.NODE_ENV === \"development\"\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(undefined);\r\n","import { IFlexArtifact } from \"../../Types/artifact\";\r\nimport { IFlexCharacter } from \"../../Types/character\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport { ArtCharDatabase } from \"../Database\";\r\nimport { DBStorage, SandboxStorage } from \"../DBStorage\";\r\nimport { getDBVersion, setDBVersion } from \"../utils\";\r\n\r\nexport function importDB(data: any): { storage: DBStorage, charCount: number, artCount: number, migrated: boolean } | undefined {\r\n  const storage = new SandboxStorage()\r\n  const { version, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay } = data as Partial<DatabaseObj>\r\n  if (!version || !characterDatabase || !artifactDatabase)\r\n    return\r\n\r\n  characterDatabase && Object.entries(characterDatabase).forEach(([charKey, char]) => storage.set(`char_${charKey}`, char))\r\n  artifactDatabase && Object.entries(artifactDatabase).forEach(([id, art]) => storage.set(id, art))\r\n  //override version\r\n  version && setDBVersion(storage, version)\r\n  artifactDisplay && storage.set(\"ArtifactDisplay.state\", artifactDisplay)\r\n  characterDisplay && storage.set(\"CharacterDisplay.state\", characterDisplay)\r\n  buildsDisplay && storage.set(\"BuildsDisplay.state\", buildsDisplay)\r\n\r\n  const database = new ArtCharDatabase(storage) // validate storage entries\r\n  //TODO: figure out the # of dups/upgrades/new/foddered, not just total char/art count below.\r\n  return { storage, charCount: database.chars.keys.length, artCount: database.arts.keys.length, migrated: version !== getDBVersion(storage) }\r\n}\r\n\r\nexport function exportDB(storage: DBStorage): DatabaseObj {\r\n  return {\r\n    version: getDBVersion(storage),\r\n    characterDatabase: Object.fromEntries(storage.entries\r\n      .filter(([key, _]) => key.startsWith(\"char_\"))\r\n      .map(([key, value]) => [key.slice(5), JSON.parse(value)])),\r\n    artifactDatabase: Object.fromEntries(storage.entries\r\n      .filter(([key, _]) => key.startsWith(\"artifact_\"))\r\n      .map(([key, value]) => [key, JSON.parse(value)])),\r\n    artifactDisplay: storage.get(\"ArtifactDisplay.state\") ?? {},\r\n    characterDisplay: storage.get(\"CharacterDisplay.state\") ?? {},\r\n    buildsDisplay: storage.get(\"BuildsDisplay.state\") ?? {},\r\n  }\r\n}\r\n\r\ntype DatabaseObj = {\r\n  version: number,\r\n  characterDatabase: Dict<CharacterKey, IFlexCharacter>\r\n  artifactDatabase: Dict<string, IFlexArtifact>\r\n  artifactDisplay: any\r\n  characterDisplay: any\r\n  buildsDisplay: any\r\n}\r\n","import { ArtCharDatabase } from '../Database';\r\nimport { IFlexArtifact, MainStatKey, SubstatKey } from '../../Types/artifact';\r\nimport { validateDBArtifact, validateFlexArtifact } from '../../Database/validation';\r\nimport { ArtifactSetKey, SlotKey } from \"../../Types/consts\";\r\nimport { DBStorage, SandboxStorage } from '../DBStorage';\r\n\r\nconst DefaultVersion = \"1\";\r\nconst GetConvertedArtifactsOfVersion: Dict<string, (data: any) => { artifacts: IFlexArtifact[], invalidCount: number }> = {\r\n  \"1\": importMona1\r\n};\r\n\r\nexport function importMona(dataObj: any, oldDatabase: ArtCharDatabase): IImportResult | undefined {\r\n  const version = dataObj.version ?? DefaultVersion\r\n  const converted = GetConvertedArtifactsOfVersion[version]?.(dataObj)\r\n\r\n  if (!converted)\r\n    return // TODO: Maybe add failure reason, or throws here\r\n\r\n  const { artifacts, invalidCount } = converted\r\n  const result: IImportResult = {\r\n    storage: new SandboxStorage(oldDatabase.storage),\r\n    totalCount: artifacts.length + invalidCount,\r\n    newCount: 0,\r\n    upgradeCount: 0,\r\n    dupCount: 0,\r\n    oldIds: new Set(oldDatabase.arts.keys),\r\n    invalidCount,\r\n  }\r\n  const newDatabase = new ArtCharDatabase(result.storage) // validate storage entries\r\n\r\n  const artifactIdsToRemove = result.oldIds\r\n  for (const artifact of artifacts) {\r\n    let { duplicated, upgraded } = oldDatabase.findDuplicates(artifact)\r\n\r\n    // Don't reuse dups/upgrades\r\n    duplicated = duplicated.filter(id => artifactIdsToRemove.has(id))\r\n    upgraded = upgraded.filter(id => artifactIdsToRemove.has(id))\r\n\r\n    // Prefer dups over upgrades\r\n    const id = duplicated[0] ?? upgraded[0] ?? \"\"\r\n    artifactIdsToRemove.delete(id)\r\n\r\n    if (!duplicated.length)\r\n      newDatabase.updateArt(validateFlexArtifact(artifact, id).artifact)\r\n\r\n    if (duplicated.length) result.dupCount++\r\n    else if (upgraded.length) result.upgradeCount++\r\n    else result.newCount++\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// backup 0: https://github.com/wormtql/genshin_artifact/blob/main/src/assets/artifacts/data/*/index.js\r\n// backup 1: https://github.com/YuehaiTeam/cocogoat/blob/main/src/App/export/Mona.ts\r\n\r\nfunction importMona1(dataObj: any): { artifacts: IFlexArtifact[], invalidCount: number } {\r\n  let invalidCount = 0\r\n  const artifacts: IFlexArtifact[] = []\r\n\r\n  for (const property in dataObj) {\r\n    if (!(property in ArtifactSlotKeyMap))\r\n      continue\r\n\r\n    for (const genshinArtArtifact of dataObj[property]) {\r\n      const { setName, star, level, position, mainTag } = genshinArtArtifact\r\n      if (star < 3) {\r\n        // invalidCount++//do not increment since its technically not an invalid artifact, just not part of our system.\r\n        continue\r\n      }\r\n      const flex = validateDBArtifact({\r\n        setKey: ArtifactSetKeyMap[setName],\r\n        numStars: star,\r\n        level,\r\n        slotKey: ArtifactSlotKeyMap[position],\r\n        mainStatKey: ArtifactMainStatKeyMap[mainTag.name],\r\n        substats: genshinArtArtifact.normalTags.map(({ name, value }) => {\r\n          const key = ArtifactSubStatKeyMap[name]\r\n          return {\r\n            key,\r\n            value: key?.endsWith(\"_\") ?\r\n              Math.round(value * 1000) / 10 : // decimal to percentage\r\n              value,\r\n          }\r\n        }),\r\n      })\r\n\r\n      if (!flex) {\r\n        invalidCount++\r\n        continue\r\n      }\r\n\r\n      artifacts.push(flex)\r\n    }\r\n  }\r\n\r\n  return { artifacts, invalidCount }\r\n}\r\n\r\ninterface IImportResult {\r\n  storage: DBStorage\r\n  totalCount: number,\r\n  newCount: number,\r\n  upgradeCount: number,\r\n  dupCount: number,\r\n  oldIds: Set<string>,\r\n  invalidCount: number,\r\n}\r\n\r\n// Referencing https://wormtql.gitbook.io/mona-uranai/ (they don't seem to update this anymore...)\r\n\r\nconst ArtifactSlotKeyMap: Dict<string, SlotKey> = {\r\n  \"flower\": \"flower\",\r\n  \"feather\": \"plume\",\r\n  \"sand\": \"sands\",\r\n  \"cup\": \"goblet\",\r\n  \"head\": \"circlet\",\r\n}\r\nconst ArtifactSetKeyMap: Dict<string, ArtifactSetKey> = {\r\n  \"adventurer\": \"Adventurer\",\r\n  \"archaicPetra\": \"ArchaicPetra\",\r\n  \"berserker\": \"Berserker\",\r\n  \"blizzardStrayer\": \"BlizzardStrayer\",\r\n  \"bloodstainedChivalry\": \"BloodstainedChivalry\",\r\n  \"braveHeart\": \"BraveHeart\",\r\n  \"crimsonWitch\": \"CrimsonWitchOfFlames\",\r\n  \"defenderWill\": \"DefendersWill\",\r\n  \"gambler\": \"Gambler\",\r\n  \"gladiatorFinale\": \"GladiatorsFinale\",\r\n  \"heartOfDepth\": \"HeartOfDepth\",\r\n  \"instructor\": \"Instructor\",\r\n  \"lavaWalker\": \"Lavawalker\",\r\n  \"luckyDog\": \"LuckyDog\",\r\n  \"maidenBeloved\": \"MaidenBeloved\",\r\n  \"martialArtist\": \"MartialArtist\",\r\n  \"noblesseOblige\": \"NoblesseOblige\",\r\n  \"prayersForDestiny\": \"PrayersForDestiny\",\r\n  \"prayersForIllumination\": \"PrayersForIllumination\",\r\n  \"prayersForWisdom\": \"PrayersForWisdom\",\r\n  \"prayersToSpringtime\": \"PrayersToSpringtime\",\r\n  \"resolutionOfSojourner\": \"ResolutionOfSojourner\",\r\n  \"retracingBolide\": \"RetracingBolide\",\r\n  \"scholar\": \"Scholar\",\r\n  \"exile\": \"TheExile\",\r\n  \"thunderingFury\": \"ThunderingFury\",\r\n  \"thunderSmoother\": \"Thundersoother\",\r\n  \"tinyMiracle\": \"TinyMiracle\",\r\n  \"travelingDoctor\": \"TravelingDoctor\",\r\n  \"viridescentVenerer\": \"ViridescentVenerer\",\r\n  \"wandererTroupe\": \"WanderersTroupe\",\r\n  \"tenacityOfTheMillelith\": \"TenacityOfTheMillelith\",\r\n  \"paleFlame\": \"PaleFlame\",\r\n  \"emblemOfSeveredFate\": \"EmblemOfSeveredFate\",\r\n  \"shimenawaReminiscence\": \"ShimenawasReminiscence\",\r\n}\r\nconst ArtifactMainStatKeyMap: Dict<string, MainStatKey> = {\r\n  \"cureEffect\": \"heal_\",\r\n  \"lifeStatic\": \"hp\",\r\n  \"lifePercentage\": \"hp_\",\r\n  \"attackStatic\": \"atk\",\r\n  \"attackPercentage\": \"atk_\",\r\n  // \"defendStatic\": \"def\",\r\n  \"defendPercentage\": \"def_\",\r\n  \"critical\": \"critRate_\",\r\n  // // \"eCritical\": \"\",\r\n  \"criticalDamage\": \"critDMG_\",\r\n  \"elementalMastery\": \"eleMas\",\r\n  \"recharge\": \"enerRech_\",\r\n  \"thunderBonus\": \"electro_dmg_\",\r\n  \"fireBonus\": \"pyro_dmg_\",\r\n  \"waterBonus\": \"hydro_dmg_\",\r\n  \"iceBonus\": \"cryo_dmg_\",\r\n  \"windBonus\": \"anemo_dmg_\",\r\n  \"rockBonus\": \"geo_dmg_\",\r\n  // \"grassBonus\": \"dendro_dmg_\",  // the day will come...\r\n  \"physicalBonus\": \"physical_dmg_\",\r\n  // \"bonus\": \"\",\r\n  // \"aBonus\": \"\",\r\n  // \"bBonus\": \"\",\r\n  // \"eBonus\": \"\",\r\n  // \"qBonus\": \"\",\r\n}\r\nconst ArtifactSubStatKeyMap: Dict<string, SubstatKey> = {\r\n  \"lifeStatic\": \"hp\",\r\n  \"lifePercentage\": \"hp_\",\r\n  \"attackStatic\": \"atk\",\r\n  \"attackPercentage\": \"atk_\",\r\n  \"defendStatic\": \"def\",\r\n  \"defendPercentage\": \"def_\",\r\n  \"critical\": \"critRate_\",\r\n  \"criticalDamage\": \"critDMG_\",\r\n  \"elementalMastery\": \"eleMas\",\r\n  \"recharge\": \"enerRech_\",\r\n}\r\n","import { faCheckSquare, faClipboard, faFileDownload, faFileUpload, faQuestionCircle, faSquare, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useMemo, useState } from \"react\"\r\nimport { Alert, Badge, Button, Card, Col, Container, Dropdown, Form, OverlayTrigger, Popover, Row } from \"react-bootstrap\"\r\nimport ReactGA from 'react-ga'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport { database } from \"../Database/Database\"\r\nimport { DBStorage, dbStorage } from '../Database/DBStorage'\r\nimport { exportDB, importDB } from '../Database/exim/dbJSON'\r\nimport { importMona } from '../Database/exim/mona'\r\nimport { languageCodeList } from \"../i18n\"\r\nimport { useForceUpdate } from \"../Util/ReactUtil\"\r\n\r\nexport default function SettingsDisplay() {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const [, forceUpdate] = useForceUpdate()\r\n  ReactGA.pageview('/setting')\r\n\r\n  return <Container>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n      <Card.Header><Trans t={t} i18nKey=\"title\" /></Card.Header>\r\n      <Card.Body>\r\n        <LanguageCard />\r\n        <DownloadCard forceUpdate={forceUpdate} />\r\n        <UploadCard forceUpdate={forceUpdate} />\r\n      </Card.Body>\r\n    </Card>\r\n  </Container >\r\n}\r\n\r\nfunction LanguageCard() {\r\n  const { t } = useTranslation();\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header>{t(\"settings:languageCard.selectLanguage\")} <Badge variant=\"warning\">{t(\"ui:underConstruction\")}</Badge></Card.Header>\r\n    <Card.Body>\r\n      <LanguageDropdown />\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nconst nativeLanguages = {\r\n  \"chs\": \"中文 正体字\",\r\n  \"cht\": \"中文 繁體字\",\r\n  \"de\": \"Deutsch\",\r\n  \"en\": \"English\",\r\n  \"es\": \"español\",\r\n  \"fr\": \"français\",\r\n  \"id\": \"Bahasa Indonesia\",\r\n  \"ja\": \"日本語\",\r\n  \"ko\": \"한국어\",\r\n  \"pt\": \"Português\",\r\n  \"ru\": \"Русский язык\",\r\n  \"th\": \"ภาษาไทย\",\r\n  \"vi\": \"Tiếng Việt\"\r\n}\r\nexport function LanguageDropdown() {\r\n  const { t, i18n } = useTranslation([\"ui\", \"settings\"]);\r\n  const onSetLanguage = (lang) => () => i18n.changeLanguage(lang);\r\n  const currentLang = i18n.languages[0];\r\n  return <Dropdown className=\"flex-grow-1 mb-2\">\r\n    <Dropdown.Toggle className=\"w-100\" variant=\"primary\">\r\n      {t('settings:languageCard.languageFormat', { language: t(`languages:${currentLang}`) })}\r\n    </Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {languageCodeList.map((lang) => <Dropdown.Item key={lang} onClick={onSetLanguage(lang)}><Trans i18nKey={`languages:${lang}`} />{lang !== currentLang ? ` (${nativeLanguages[lang]})` : \"\"}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\nfunction download(JSONstr: string, filename = \"data.json\") {\r\n  const contentType = \"application/json;charset=utf-8\"\r\n  if (window?.navigator?.msSaveOrOpenBlob as any) { // TODO: Function is always defined, do we want to call it instead?\r\n    const blob = new Blob([decodeURIComponent(encodeURI(JSONstr))], { type: contentType })\r\n    navigator.msSaveOrOpenBlob(blob, filename)\r\n  } else {\r\n    const a = document.createElement('a');\r\n    a.download = filename\r\n    a.href = `data:${contentType},${encodeURIComponent(JSONstr)}`\r\n    a.target = \"_blank\"\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n  }\r\n}\r\n\r\nfunction deleteDatabase(t) {\r\n  if (!window.confirm(t(\"uploadCard.goUpload.deleteDatabasePrompt\"))) return\r\n  dbStorage.clear()\r\n  database.reloadStorage()\r\n}\r\nfunction copyToClipboard() {\r\n  navigator.clipboard.writeText(JSON.stringify(exportDB(dbStorage)))\r\n  alert(\"Copied database to clipboard.\")\r\n}\r\nfunction DownloadCard({ forceUpdate }) {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const numChar = database._getCharKeys().length\r\n  const numArt = database._getArts().length\r\n  const downloadValid = Boolean(numChar || numArt)\r\n  const deleteDB = () => {\r\n    deleteDatabase(t);\r\n    forceUpdate()\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header><Trans t={t} i18nKey=\"downloadCard.databaseDownload\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={6}><Trans t={t} i18nKey=\"count.chars\" /> {numChar}</Col>\r\n        <Col xs={12} md={6}><Trans t={t} i18nKey=\"count.arts\" /> {numArt}</Col>\r\n      </Row>\r\n      <small><Trans t={t} i18nKey=\"downloadCard.databaseDisclaimer\" /></small>\r\n    </Card.Body>\r\n    <Card.Footer><Row>\r\n      <Col xs=\"auto\"><Button disabled={!downloadValid} onClick={() => download(JSON.stringify(exportDB(dbStorage)))}><FontAwesomeIcon icon={faFileDownload} /> <Trans t={t} i18nKey=\"downloadCard.button.download\" /></Button></Col>\r\n      <Col ><Button disabled={!downloadValid} variant=\"info\" onClick={copyToClipboard}><FontAwesomeIcon icon={faClipboard} /> <Trans t={t} i18nKey=\"downloadCard.button.copy\" /></Button></Col>\r\n      <Col xs=\"auto\"><Button disabled={!downloadValid} variant=\"danger\" onClick={deleteDB} ><FontAwesomeIcon icon={faTrashAlt} /> <Trans t={t} i18nKey=\"downloadCard.button.delete\" /></Button></Col>\r\n    </Row></Card.Footer>\r\n  </Card>\r\n}\r\n\r\nfunction UploadCard({ forceUpdate }) {\r\n  const { t } = useTranslation(\"settings\");\r\n  const [data, setdata] = useState(\"\")\r\n  const [filename, setfilename] = useState(\"\")\r\n  const [errorMsg, setErrorMsg] = useState(\"\") // TODO localize error msg\r\n  const dataObj: UploadData | undefined = useMemo(() => {\r\n    if (!data) return\r\n    let parsed: any\r\n    try {\r\n      parsed = JSON.parse(data)\r\n      if (!parsed) {\r\n        setErrorMsg(\"uploadCard.error.jsonParse\")\r\n        return\r\n      }\r\n    } catch (e) {\r\n      setErrorMsg(\"uploadCard.error.jsonParse\")\r\n      return\r\n    }\r\n    // Figure out the file format\r\n    if (parsed.version === \"1\" && [\"flower\", \"feather\", \"sand\", \"cup\", \"head\"].some(k => Object.keys(parsed).includes(k))) {\r\n      // Parse as mona format\r\n      const imported = importMona(parsed, database)\r\n      if (!imported) {\r\n        setErrorMsg(\"uploadCard.error.monaInvalid\")\r\n        return\r\n      }\r\n      return { type: \"Mona\", ...imported }\r\n    } else if (\"version\" in parsed && \"characterDatabase\" in parsed && \"artifactDatabase\" in parsed) {\r\n      // Parse as GO format\r\n      const imported = importDB(parsed)\r\n      if (!imported) {\r\n        setErrorMsg(\"uploadCard.error.goInvalid\")\r\n        return\r\n      }\r\n      return { type: \"GO\", ...imported }\r\n    }\r\n    setErrorMsg(\"uploadCard.error.unknown\")\r\n    return\r\n  }, [data])\r\n\r\n  const reset = () => {\r\n    setdata(\"\")\r\n    setfilename(\"\")\r\n    forceUpdate()\r\n  }\r\n  const onUpload = async e => {\r\n    const file = e.target.files[0]\r\n    e.target.value = null // reset the value so the same file can be uploaded again...\r\n    if (file) setfilename(file.name)\r\n    const reader = new FileReader()\r\n    reader.onload = () => setdata(reader.result as string)\r\n    reader.readAsText(file)\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header><Trans t={t} i18nKey=\"settings:uploadCard.title\" /></Card.Header>\r\n    <Card.Body>\r\n      <Form.File\r\n        className=\"mb-2\"\r\n        label={filename ? filename : <Trans t={t} i18nKey=\"settings:uploadCard.hint\" />}\r\n        onChange={onUpload}\r\n        custom\r\n        accept=\".json\"\r\n      />\r\n      <h6><Trans t={t} i18nKey=\"settings:uploadCard.hintPaste\" /></h6>\r\n      <textarea className=\"w-100 text-monospace mb-2\" value={data} onChange={e => setdata(e.target.value)} style={{ minHeight: \"10em\" }} />\r\n      {dataObj?.type === \"GO\" ? <GOUploadInfo data={dataObj} /> :\r\n        dataObj?.type === \"Mona\" ? <MonaUploadInfo data={dataObj} /> :\r\n          errorMsg ? t(errorMsg) : undefined}\r\n    </Card.Body>\r\n    {dataObj?.type === \"GO\" ? <GOUploadAction data={dataObj} reset={reset} /> :\r\n      dataObj?.type === \"Mona\" ? <MonaUploadAction data={dataObj} reset={reset} /> :\r\n        undefined}\r\n  </Card>\r\n}\r\n\r\nfunction GOUploadInfo({ data: { charCount, artCount, migrated } }: { data: GOUploadData }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header><Trans t={t} i18nKey=\"uploadCard.goUpload.title\" /></Card.Header>\r\n    <Card.Body><Row>\r\n      <Col xs={12} md={6}><Trans t={t} i18nKey=\"count.chars\" /> {charCount}</Col>\r\n      <Col xs={12} md={6}><Trans t={t} i18nKey=\"count.arts\" /> {artCount}</Col>\r\n      {migrated && <Col xs={12} ><Alert variant=\"warning\" className=\"mb-0 mt-2\"><Trans t={t} i18nKey=\"uploadCard.goUpload.migrate\" /></Alert></Col>}\r\n    </Row></Card.Body>\r\n  </Card>\r\n\r\n}\r\nfunction GOUploadAction({ data: { storage, charCount, artCount }, reset }: { data: GOUploadData, reset: () => void }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  const dataValid = charCount || artCount\r\n  const replaceDB = () => {\r\n    if (!window.confirm(t`dialog.delete-database`)) return\r\n    dbStorage.clear()\r\n    dbStorage.copyFrom(storage)\r\n    database.reloadStorage()\r\n    reset()\r\n  }\r\n\r\n  return <Card.Footer>\r\n    <Button variant={dataValid ? \"success\" : \"danger\"} disabled={!dataValid} onClick={replaceDB}><FontAwesomeIcon icon={faFileUpload} /> <Trans t={t} i18nKey=\"settings:uploadCard.replaceDatabase\" /></Button>\r\n  </Card.Footer>\r\n}\r\nfunction MonaUploadInfo({ data: { totalCount, newCount, upgradeCount, dupCount, oldIds, invalidCount, } }: { data: MonaUploadData }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header><Trans t={t} i18nKey=\"uploadCard.monaUpload.title\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row>\r\n        <Col xs={12} md={6}><Trans t={t} i18nKey=\"count.artsDup\" /> <strong>{dupCount} / {totalCount}</strong></Col>\r\n        <Col xs={12} md={6}><Trans t={t} i18nKey=\"count.artsNew\" /> <strong>{newCount} / {totalCount}</strong></Col>\r\n        <Col xs={12} md={6}><Trans t={t} i18nKey=\"count.artsUpg\" /> <strong>{upgradeCount} / {totalCount}</strong></Col>\r\n        {!!invalidCount && <Col xs={12} md={6} className=\"text-danger\"><Trans t={t} i18nKey=\"count.artsInvalid\" /> <strong>{invalidCount}</strong></Col>}\r\n        <Col xs={12} md={6}><Trans t={t} i18nKey=\"count.artsFod\" /> <strong>{oldIds.size}</strong></Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction MonaUploadAction({ data: { storage, oldIds, }, reset }: { data: MonaUploadData, reset: () => void }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  const [deleteExistingArtifacts, setDeleteExistingArtifacts] = useState(false);\r\n\r\n  const importArtifacts = () => {\r\n    if (deleteExistingArtifacts && !window.confirm(t`uploadCard.monaUpload.deleteExistingPrompt`)) {\r\n      setDeleteExistingArtifacts(false);\r\n      return;\r\n    }\r\n    if (deleteExistingArtifacts) {\r\n      // Since it wasn't decided whether to delete old entries when we create\r\n      // the Storage, we defer the deletion to here. This way, we can also\r\n      // share the Storage for both `delete` and `keep` options.\r\n      for (const id of oldIds)\r\n        storage.remove(id)\r\n    }\r\n\r\n    dbStorage.clear()\r\n    dbStorage.copyFrom(storage)\r\n    database.reloadStorage()\r\n    reset()\r\n  }\r\n\r\n  return <Card.Footer>\r\n    <Button variant={\"success\"} onClick={() => importArtifacts()}><FontAwesomeIcon icon={faFileUpload} /> <Trans t={t} i18nKey=\"uploadCard.monaUpload.import\" /></Button>\r\n    <Button className=\"float-right text-right\" variant={deleteExistingArtifacts ? \"danger\" : \"primary\"} onClick={() => setDeleteExistingArtifacts(value => !value)}>\r\n      <span><FontAwesomeIcon icon={deleteExistingArtifacts ? faCheckSquare : faSquare} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"uploadCard.monaUpload.deleteExistingButton\" /></span>\r\n      <OverlayTrigger\r\n        overlay={<Popover id=\"deleting-explanation\">\r\n          <Popover.Content><Trans t={t} i18nKey=\"uploadCard.monaUpload.deleteExistingExplanation\" /></Popover.Content>\r\n        </Popover>} >\r\n        <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n      </OverlayTrigger>\r\n    </Button>\r\n  </Card.Footer>\r\n}\r\n\r\ntype GOUploadData = {\r\n  type: \"GO\", storage: DBStorage,\r\n  charCount: number,\r\n  artCount: number,\r\n  migrated: boolean,\r\n}\r\ntype MonaUploadData = {\r\n  type: \"Mona\", storage: DBStorage,\r\n  totalCount: number,\r\n  newCount: number,\r\n  upgradeCount: number,\r\n  dupCount: number,\r\n  oldIds: Set<string>,\r\n  invalidCount: number,\r\n}\r\ntype UploadData = GOUploadData | MonaUploadData\r\n","export interface DBStorage {\r\n  keys: string[]\r\n  entries: [key: string, value: string][]\r\n\r\n  get(key: string): any | undefined\r\n  set(key: string, value: any): void\r\n\r\n  getString(key: string): string | undefined\r\n  setString(key: string, value: string): void\r\n  remove(key: string): void\r\n  removeForKeys(shouldRemove: (key: string) => boolean): void\r\n\r\n  copyFrom(other: DBStorage): void\r\n  clear(): void\r\n}\r\n\r\nexport class DBLocalStorage implements DBStorage {\r\n  private storage: Storage\r\n\r\n  constructor(storage: Storage) {\r\n    this.storage = storage\r\n  }\r\n\r\n  get keys(): string[] {\r\n    return Object.keys(this.storage)\r\n  }\r\n  get entries(): [key: string, value: string][] {\r\n    return Object.entries(this.storage)\r\n  }\r\n\r\n  get(key: string) {\r\n    const string = this.storage.getItem(key)\r\n    if (!string) return undefined\r\n    try {\r\n      return JSON.parse(string)\r\n    } catch {\r\n      this.storage.removeItem(key)\r\n      return undefined\r\n    }\r\n  }\r\n  set(key: string, value: any): void {\r\n    this.storage.setItem(key, JSON.stringify(value))\r\n  }\r\n\r\n  getString(key: string): string | undefined {\r\n    return this.storage.getItem(key) ?? undefined\r\n  }\r\n  setString(key: string, value: string) {\r\n    this.storage.setItem(key, value)\r\n  }\r\n  remove(key: string) {\r\n    this.storage.removeItem(key)\r\n  }\r\n\r\n  copyFrom(other: DBStorage) {\r\n    for (const [key, value] of other.entries) {\r\n      this.setString(key, value)\r\n    }\r\n  }\r\n  clear() {\r\n    this.storage.clear()\r\n  }\r\n  removeForKeys(shouldRemove: (key: string) => boolean) {\r\n    for (const key in this.storage) {\r\n      if (shouldRemove(key))\r\n        this.storage.removeItem(key)\r\n    }\r\n  }\r\n}\r\n\r\nexport class SandboxStorage implements DBStorage {\r\n  private storage: Dict<string, string> = {}\r\n\r\n  constructor(other: DBStorage | undefined = undefined) {\r\n    other && this.copyFrom(other)\r\n  }\r\n\r\n  get keys(): string[] {\r\n    return Object.keys(this.storage)\r\n  }\r\n  get entries(): [key: string, value: string][] {\r\n    return Object.entries(this.storage)\r\n  }\r\n\r\n  get(key: string) {\r\n    const string = this.storage[key]\r\n    if (!string) return undefined\r\n    try {\r\n      return JSON.parse(string)\r\n    } catch {\r\n      delete this.storage[key]\r\n      return undefined\r\n    }\r\n  }\r\n  set(key: string, value: any): void {\r\n    this.storage[key] = JSON.stringify(value)\r\n  }\r\n\r\n  getString(key: string): string | undefined {\r\n    return this.storage[key]\r\n  }\r\n  setString(key: string, value: string): void {\r\n    this.storage[key] = value\r\n  }\r\n  remove(key: string): void {\r\n    delete this.storage[key]\r\n  }\r\n\r\n  copyFrom(other: DBStorage) {\r\n    for (const [key, value] of other.entries) {\r\n      this.setString(key, value)\r\n    }\r\n  }\r\n  clear() {\r\n    this.storage = {}\r\n  }\r\n  removeForKeys(shouldRemove: (key: string) => boolean) {\r\n    this.storage = Object.fromEntries(Object.entries(this.storage).filter(([key]) => !shouldRemove(key)))\r\n  }\r\n}\r\n\r\nexport const dbStorage = new DBLocalStorage(localStorage)\r\n","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\nimport { usePromise } from \"./Util/ReactUtil\";\r\nimport { evalIfFunc } from \"./Util/Util\";\r\nimport Formula from \"./Formula\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") => <span className={`text-${StatData[key]?.variant} text-nowrap`}>{StatData[key]?.name ?? defVal}</span>\r\n\r\n  static getStatNameRaw = (key, defVal = \"\") => StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\", variant = true) => <span className={`text-${variant && StatData[key]?.variant} text-nowrap`}>{StatData[key]?.name ?? defVal}{key?.endsWith('_') && \"%\"}</span>\r\n\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats, premod = false) =>\r\n    f({ stats, expand: false, premod }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n}\r\n\r\nconst ModFormula = ({ path, stats }) => {\r\n  const formula = usePromise(Formula.get(path), [path]) as any\r\n  if (!formula?.field?.formulaText) return null\r\n  const ret = evalIfFunc(formula.field.formulaText, stats) as JSX.Element\r\n  return ret\r\n}\r\nexport function FormulaDisplay({ statKey, stats, modifiers = {}, expand = true }) {\r\n  if (modifiers[statKey]) {\r\n    const modifierText = (modifiers?.[statKey] ?? []).map(path =>\r\n      <span key={path.join()}> + <ModFormula path={path} stats={stats} /></span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand, premod: true })}{modifierText} </span>\r\n    else\r\n      return <span>{f({ stats, premod: true }, statKey)}{modifierText} </span>\r\n  }\r\n\r\n  if (typeof FormulaText?.[statKey] === \"function\")\r\n    return FormulaText[statKey]({ stats, expand })\r\n  else return null\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true, premod = false } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatName(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  const value = (premod ? stats?.premod?.[statKey] : undefined) ?? stats?.[statKey]\r\n  const printValue = value?.toFixed?.(fixedUnit) || value\r\n  const debug = process.env.NODE_ENV === \"development\" ? <code className=\"text-warning\"> {statKey}</code> : null\r\n  return <span className=\"text-nowrap\"><b>{statName}</b>{debug} <span className=\"text-info\">{printValue}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>16 * {f(o, \"eleMas\")} / ( 2000 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n};\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].map(ele => FormulaText[`${ele}_crystalize_hit`] = o => <span>250% * {f(o, `crystalize_hit`)}</span>)\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","export class DataManager<Key extends string | number, Value> {\r\n  static readonly allKeys = {} as const\r\n\r\n  data: Dict<Key, Value> = {}\r\n  listeners: Dict<Key, Callback<Value | undefined>[]> = {}\r\n  anyListeners: Callback<Key | typeof DataManager.allKeys>[] = []\r\n\r\n  followAny(callback: Callback<Key | typeof DataManager.allKeys>): () => void {\r\n    this.anyListeners.push(callback)\r\n    return () => {\r\n      this.anyListeners = this.anyListeners.filter(cb => cb !== callback)\r\n    }\r\n  }\r\n  follow(key: Key, callback: Callback<Value | undefined>) {\r\n    const value = this.get(key)\r\n    callback(value)\r\n    if (this.listeners[key]) this.listeners[key]!.push(callback)\r\n    else this.listeners[key] = [callback]\r\n    return () => {\r\n      this.listeners[key] = this.listeners[key]?.filter(cb => cb !== callback)\r\n      if (!this.listeners[key]?.length) delete this.listeners[key]\r\n    }\r\n  }\r\n\r\n  get keys() { return Object.keys(this.data) }\r\n  get values() { return Object.values(this.data) }\r\n  get(key: Key): Value | undefined { return this.data[key] }\r\n  set(key: Key, value: Value) {\r\n    this.data[key] = value\r\n\r\n    this.listeners[key]?.forEach(cb => cb(value))\r\n    this.anyListeners.forEach(cb => cb(key))\r\n  }\r\n  remove(key: Key) {\r\n    delete this.data[key]\r\n\r\n    this.listeners[key]?.forEach(cb => cb(undefined))\r\n    this.anyListeners.forEach(cb => cb(key))\r\n    delete this.listeners[key]\r\n  }\r\n  removeAll() {\r\n    this.data = {}\r\n\r\n    Object.values(this.listeners).forEach(listeners => listeners.forEach(listener => listener(undefined)))\r\n    this.anyListeners.forEach(listener => listener(DataManager.allKeys))\r\n    this.listeners = {}\r\n    this.anyListeners = []\r\n  }\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg) => void\r\n","import { initialBuildSettings } from \"../Build/BuildSetting\"\r\nimport { ascensionMaxLevel } from \"../Data/CharacterData\"\r\nimport { DBStorage } from \"./DBStorage\"\r\nimport { getDBVersion, setDBVersion } from \"./utils\"\r\n\r\nconst currentDBVersion = 7\r\n\r\nexport function migrate(storage: DBStorage): { migrated: boolean } {\r\n  const version = getDBVersion(storage)\r\n  const report = { migrated: false }\r\n\r\n  if (version > currentDBVersion)\r\n    throw new Error(\"Database is not supported\")\r\n\r\n  // Update version upon each successful migration, so we don't\r\n  // need to migrate that part again if later parts fail.\r\n  if (version < 3) { migrateV2ToV3(storage); setDBVersion(storage, 3) }\r\n  if (version < 4) { migrateV3ToV4(storage); setDBVersion(storage, 4) }\r\n  if (version < 5) { migrateV4ToV5(storage); setDBVersion(storage, 5) }\r\n  if (version < 6) { migrateV5ToV6(storage); setDBVersion(storage, 6) }\r\n  if (version < 7) { migrateV6ToV7(storage); setDBVersion(storage, 7) }\r\n\r\n  if (version < currentDBVersion)\r\n    report.migrated = true\r\n\r\n  setDBVersion(storage, currentDBVersion)\r\n\r\n  return report\r\n}\r\n/// v4.0.0 - v4.23.2\r\nfunction migrateV2ToV3(storage: DBStorage) {\r\n  const state = storage.get(\"CharacterDisplay.state\")\r\n  if (state) {\r\n    if (Array.isArray(state.elementalFilter)) state.elementalFilter = \"\"\r\n    if (Array.isArray(state.weaponFilter)) state.weaponFilter = \"\"\r\n    storage.set(\"CharacterDisplay.state\", state)\r\n  }\r\n\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = storage.get(key)\r\n      if (!value) continue\r\n      if (value.buildSetting) {\r\n        const { artifactsAssumeFull = false, ascending = false, mainStat = [\"\", \"\", \"\"], setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }], useLockedArts = false } = value.buildSetting ?? {}\r\n        value.buildSettings = { mainStatAssumptionLevel: artifactsAssumeFull ? 20 : 0, ascending, mainStatKeys: mainStat, setFilters, useLockedArts }\r\n      }\r\n\r\n      storage.set(key, value)\r\n    }\r\n  }\r\n}\r\n/// v5.0.0 - v5.7.15\r\nfunction migrateV3ToV4(storage: DBStorage) { // \r\n  // Convert anemo traveler to traveler, and remove geo traveler\r\n  const traveler = storage.get(\"char_traveler_anemo\")\r\n  // Deletion of old travelers are handled during validation\r\n\r\n  if (traveler) {\r\n    traveler.elementKey = \"anemo\"\r\n    traveler.characterKey = \"traveler\"\r\n    storage.set(\"char_traveler\", traveler)\r\n  }\r\n\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"artifact_\")) {\r\n      const value = storage.get(key)\r\n      let requireUpdate = false\r\n      if (value.location === \"traveler_anemo\") {\r\n        value.location = \"traveler\"\r\n        requireUpdate = true\r\n      } else if (value.location === \"traveler_geo\") {\r\n        value.location = \"\"\r\n        requireUpdate = true\r\n      }\r\n\r\n      if (requireUpdate)\r\n        storage.set(key, value)\r\n    }\r\n  }\r\n}\r\n/// v5.8.0 - v5.11.5\r\nfunction migrateV4ToV5(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = storage.get(key)\r\n\r\n      const levelKey = value.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        value.level = 1\r\n        value.ascension = 0\r\n      } else {\r\n        value.level = level\r\n        value.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n\r\n      // TODO: Remove this once we validate baseStatOverrides\r\n      delete value.baseStatOverrides?.characterLevel\r\n      delete value.baseStatOverrides?.characterHP\r\n      delete value.baseStatOverrides?.characterATK\r\n      delete value.baseStatOverrides?.characterDEF\r\n\r\n      storage.set(key, value)\r\n    }\r\n  }\r\n}\r\n\r\n// v5.12.0 - 5.19.14\r\nfunction migrateV5ToV6(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n\r\n      //migrate character weapon levels\r\n      const levelKey = character.weapon.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        character.weapon.level = 1\r\n        character.weapon.ascension = 0\r\n      } else {\r\n        character.weapon.level = level\r\n        character.weapon.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n      storage.set(key, character)\r\n    }\r\n  }\r\n}\r\n\r\n// 5.20.0 - present\r\nfunction migrateV6ToV7(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n      if (!character.buildSettings) character.buildSettings = initialBuildSettings()\r\n      else {\r\n        const [sands, goblet, circlet] = (Array.isArray(character.buildSettings?.mainStatKeys) && character.buildSettings?.mainStatKeys) || []\r\n        character.buildSettings.mainStatKeys = initialBuildSettings().mainStatKeys\r\n        if (sands) character.buildSettings.mainStatKeys.sands = [sands]\r\n        if (goblet) character.buildSettings.mainStatKeys.goblet = [goblet]\r\n        if (circlet) character.buildSettings.mainStatKeys.circlet = [circlet]\r\n      }\r\n      storage.set(key, character)\r\n    }\r\n  }\r\n}","import { IArtifact, IFlexArtifact } from \"../Types/artifact\";\r\nimport { ICharacter } from \"../Types/character\";\r\nimport { allSlotKeys, CharacterKey, SlotKey } from \"../Types/consts\";\r\nimport { deepClone, getRandomInt } from \"../Util/Util\";\r\nimport { DataManager } from \"./DataManager\";\r\nimport { migrate } from \"./migration\";\r\nimport { validateFlexArtifact, validateDBCharacter, validateDBArtifact, extractFlexArtifact, validateFlexCharacter, extractFlexCharacter } from \"./validation\";\r\nimport { DBStorage, dbStorage } from \"./DBStorage\";\r\n\r\nexport class ArtCharDatabase {\r\n  storage: DBStorage\r\n  arts = new DataManager<string, IArtifact>()\r\n  chars = new DataManager<CharacterKey, ICharacter>()\r\n\r\n  constructor(storage: DBStorage) {\r\n    this.storage = storage\r\n    this.reloadStorage()\r\n  }\r\n\r\n  /// Call this function when the underlying data changes without this instance's knowledge\r\n  reloadStorage() {\r\n    this.arts.removeAll()\r\n    this.chars.removeAll()\r\n    const storage = this.storage\r\n    const { migrated } = migrate(storage)\r\n\r\n    // Load into memory and verify database integrity\r\n    for (const key of storage.keys) {\r\n      if (key.startsWith(\"char_\")) {\r\n        const flex = validateDBCharacter(storage.get(key), key)\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          storage.remove(key)\r\n          continue\r\n        }\r\n        const character = validateFlexCharacter(flex)\r\n        // Use relations from artifact\r\n        character.equippedArtifacts = Object.fromEntries(allSlotKeys.map(slot => [slot, \"\"])) as any\r\n\r\n        this.chars.set(flex.characterKey, character)\r\n        // Save migrated version back to db\r\n        if (migrated) this.storage.set(`char_${flex.characterKey}`, flex)\r\n      }\r\n    }\r\n\r\n    for (const key of storage.keys) {\r\n      if (key.startsWith(\"artifact_\")) {\r\n        const flex = validateDBArtifact(storage.get(key))\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          storage.remove(key)\r\n          continue\r\n        }\r\n\r\n        // Update relations\r\n        const { location, slotKey } = flex\r\n        if (location && this.chars.data[location]?.equippedArtifacts[slotKey] === \"\") {\r\n          this.chars.data[location]!.equippedArtifacts[slotKey] = key // equiped on `location`\r\n        } else flex.location = \"\"\r\n\r\n        const { artifact } = validateFlexArtifact(flex, key)\r\n\r\n        this.arts.set(artifact.id, artifact)\r\n        // Save migrated version back to db\r\n        if (migrated) this.storage.set(key, flex)\r\n      }\r\n    }\r\n  }\r\n\r\n  private saveArt(key: string, art: IArtifact) {\r\n    this.storage.set(key, extractFlexArtifact(art))\r\n    this.arts.set(key, art)\r\n  }\r\n  private saveChar(key: CharacterKey, char: ICharacter) {\r\n    this.storage.set(`char_${key}`, extractFlexCharacter(char))\r\n    this.chars.set(key, char)\r\n  }\r\n  // TODO: Make theses `_` functions private once we migrate to use `followXXX`,\r\n  // or de-underscored it if we decide that these are to stay\r\n  _getArt(key: string) { return this.arts.get(key) }\r\n  _getChar(key: CharacterKey | \"\") { return key ? this.chars.get(key) : undefined }\r\n  _getArts() { return this.arts.values }\r\n  _getCharKeys(): CharacterKey[] { return this.chars.keys }\r\n\r\n  followChar(key: CharacterKey, cb: Callback<ICharacter>): (() => void) | undefined { return this.chars.follow(key, cb) }\r\n  followArt(key: string, cb: Callback<IArtifact>): (() => void) | undefined {\r\n    if (this.arts.get(key) !== undefined)\r\n      return this.arts.follow(key, cb)\r\n    cb(undefined)\r\n  }\r\n  followAnyChar(cb: (key: string | {}) => void): (() => void) | undefined { return this.chars.followAny(cb) }\r\n  followAnyArt(cb: (key: CharacterKey | {}) => void): (() => void) | undefined { return this.arts.followAny(cb) }\r\n\r\n  /**\r\n   * **Caution**: This does not update `equippedArtifacts`, use `equipArtifacts` instead\r\n   */\r\n  updateChar(value: ICharacter): void {\r\n    const newChar = deepClone(value), key = newChar.characterKey, oldChar = this.chars.get(key)\r\n\r\n    if (oldChar) {\r\n      newChar.equippedArtifacts = oldChar.equippedArtifacts\r\n    } else {\r\n      newChar.equippedArtifacts = Object.fromEntries(allSlotKeys.map(slot => ([slot, \"\"]))) as any\r\n    }\r\n\r\n    this.saveChar(key, newChar)\r\n  }\r\n  /**\r\n   * **Caution** This does not update `location` and `lock`, use `setLocation` or `lockArtifact` instead\r\n   */\r\n  updateArt(value: IArtifact): string {\r\n    const newArt = deepClone(value)\r\n    const key = newArt.id || generateRandomArtID(new Set(Object.keys(this.arts.data)))\r\n    const oldArt = this.arts.get(key)\r\n\r\n    if (!newArt.id)\r\n      newArt.id = key\r\n\r\n    if (oldArt) {\r\n      newArt.location = oldArt.location\r\n      newArt.lock = oldArt.lock\r\n    } else {\r\n      newArt.location = \"\"\r\n      newArt.lock = false\r\n    }\r\n\r\n    this.saveArt(key, newArt)\r\n    if (newArt.location)\r\n      this.chars.set(newArt.location, deepClone(this.chars.get(newArt.location)!))\r\n    return key\r\n  }\r\n  removeChar(key: CharacterKey) {\r\n    const char = this.chars.get(key)\r\n    if (!char) return\r\n\r\n    for (const artKey of Object.values(char.equippedArtifacts)) {\r\n      if (!artKey) continue\r\n      const art = this.arts.get(artKey)!\r\n      art.location = \"\"\r\n      this.saveArt(artKey, art)\r\n    }\r\n    this.storage.remove(`char_${key}`)\r\n    this.chars.remove(key)\r\n  }\r\n  removeArt(key: string) {\r\n    const art = this.arts.get(key)\r\n    if (!art) return\r\n\r\n    const charKey = art.location\r\n    if (charKey) {\r\n      const char = this.chars.get(charKey)!\r\n      char.equippedArtifacts[art.slotKey] = \"\"\r\n      this.saveChar(charKey, char)\r\n    }\r\n    this.storage.remove(key)\r\n    this.arts.remove(key)\r\n  }\r\n  setLocation(artKey: string, newCharKey: CharacterKey | \"\") {\r\n    const newArt = deepClone(this.arts.get(artKey))\r\n    if (!newArt) return\r\n\r\n    const slot = newArt.slotKey, oldCharKey = newArt.location\r\n    const newChar = newCharKey ? deepClone(this.chars.get(newCharKey))! : undefined\r\n    const oldChar = oldCharKey ? deepClone(this.chars.get(oldCharKey))! : undefined\r\n    newArt.location = newCharKey\r\n    if (oldChar) oldChar.equippedArtifacts[slot] = \"\"\r\n\r\n    if (newChar) {\r\n      const oldArtKey = newChar?.equippedArtifacts[slot] ?? \"\"\r\n      const oldArt = oldArtKey ? deepClone(this.arts.get(oldArtKey))! : undefined\r\n      newChar.equippedArtifacts[slot] = newArt.id!\r\n\r\n      if (oldChar && oldArt) {\r\n        oldChar.equippedArtifacts[slot] = oldArt.id!\r\n        oldArt.location = oldChar.characterKey\r\n      } else if (oldArt) oldArt.location = \"\"\r\n\r\n      if (oldArt) this.saveArt(oldArtKey, oldArt)\r\n    }\r\n\r\n    this.saveArt(artKey, newArt)\r\n    if (newCharKey) this.saveChar(newCharKey, newChar!)\r\n    if (oldCharKey) this.saveChar(oldCharKey, oldChar!)\r\n  }\r\n  equipArtifacts(charKey: CharacterKey, newArts: StrictDict<SlotKey, string>) {\r\n    const char = this.chars.get(charKey)\r\n    if (!char) return\r\n\r\n    const oldArts = char.equippedArtifacts\r\n    for (const [slot, newArt] of Object.entries(newArts)) {\r\n      if (newArt) this.setLocation(newArt, charKey)\r\n      else if (oldArts[slot]) this.setLocation(oldArts[slot], \"\")\r\n    }\r\n  }\r\n  lockArtifact(key: string, lock = true) {\r\n    const art = this.arts.get(key)\r\n    if (!art || art.lock === lock) return\r\n\r\n    art.lock = lock\r\n    this.saveArt(key, art)\r\n  }\r\n\r\n  findDuplicates(editorArt: IFlexArtifact): { duplicated: string[], upgraded: string[] } {\r\n    const { setKey, numStars, level, slotKey, mainStatKey, substats } = editorArt\r\n\r\n    const candidates = database._getArts().filter(candidate =>\r\n      setKey === candidate.setKey &&\r\n      numStars === candidate.numStars &&\r\n      slotKey === candidate.slotKey &&\r\n      mainStatKey === candidate.mainStatKey &&\r\n      level >= candidate.level &&\r\n      substats.every((substat, i) =>\r\n        !candidate.substats[i].key || // Candidate doesn't have anything on this slot\r\n        (substat.key === candidate.substats[i].key && // Or editor simply has better substat\r\n          substat.value >= candidate.substats[i].value)\r\n      )\r\n    )\r\n\r\n    // Strictly upgraded artifact\r\n    const upgraded = candidates.filter(candidate =>\r\n      level > candidate.level &&\r\n      (Math.floor(level / 4) === Math.floor(candidate.level / 4) ? // Check for extra rolls\r\n        substats.every((substat, i) => // Has no extra roll\r\n          substat.key === candidate.substats[i].key && substat.value === candidate.substats[i].value) :\r\n        substats.some((substat, i) => // Has extra rolls\r\n          candidate.substats[i].key ?\r\n            substat.value > candidate.substats[i].value : // Extra roll to existing substat\r\n            substat.key // Extra roll to new substat\r\n        )\r\n      )\r\n    )\r\n    // Strictly duplicated artifact\r\n    const duplicated = candidates.filter(candidate =>\r\n      level === candidate.level &&\r\n      substats.every(substat =>\r\n        !substat.key ||  // Empty slot\r\n        candidate.substats.some(candidateSubstat =>\r\n          substat.key === candidateSubstat.key && // Or same slot\r\n          substat.value === candidateSubstat.value\r\n        )))\r\n\r\n    return { duplicated: duplicated.map(({ id }) => id), upgraded: upgraded.map(({ id }) => id) }\r\n  }\r\n\r\n  static shared = new ArtCharDatabase(dbStorage)\r\n}\r\n\r\n/// Get a random integer (converted to string) that is not in `keys`\r\nfunction generateRandomArtID(keys: Set<string>): string {\r\n  let candidate = \"\"\r\n  do {\r\n    candidate = `artifact_${getRandomInt(1, 2 * (keys.size + 1))}`\r\n  } while (keys.has(candidate))\r\n  return candidate\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg | undefined) => void\r\n\r\nexport const database = ArtCharDatabase.shared\r\n","import { DBStorage } from \"./DBStorage\"\r\n\r\nexport function getDBVersion(storage: DBStorage) {\r\n  return parseInt(storage.getString('db_ver') ?? '0')\r\n}\r\nexport function setDBVersion(storage: DBStorage, version: number) {\r\n  storage.setString('db_ver', version.toString())\r\n}\r\n","// import characters from\r\n\r\nconst ascensionMaxLevel = [20, 40, 50, 60, 70, 80, 90] as const\r\n\r\nconst milestoneLevels = [\r\n  [90, 6],\r\n  [80, 6],\r\n  [80, 5],\r\n  [70, 5],\r\n  [70, 4],\r\n  [60, 4],\r\n  [60, 3],\r\n  [50, 3],\r\n  [50, 2],\r\n  [40, 2],\r\n  [40, 1],\r\n  [20, 1],\r\n  [20, 0],\r\n  [1, 0]\r\n] as const\r\n\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n} as const\r\n\r\nexport {\r\n  ascensionMaxLevel,\r\n  characterStatBase,\r\n  milestoneLevels\r\n}","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\nimport { ICalculatedStats } from \"./Types/stats\";\r\nimport { mergeStats } from \"./Util/StatUtil\";\r\nimport Formula from \"./Formula\";\r\n\r\nexport interface StatItem {\r\n  name: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\" },\r\n  atk: { name: \"ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\" },\r\n  def: { name: \"DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\" },\r\n  finalATK: { name: \"ATK\" },\r\n  finalDEF: { name: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Reduction\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaSprintDec_: { name: \"Sprinting Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas: Dict<string, (s: ICalculatedStats) => number> = {\r\n  // Basic Stats\r\n  baseATK: (s) => s.characterATK + s.weaponATK,\r\n  finalATK: (s) => s.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s) => s.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s) => s.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s) => (100 + s.characterLevel) / ((100 + s.characterLevel) + (100 + s.enemyLevel) * (1 - s.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s) => transformativeReactionLevelMultipliers[s.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 1600 * s.eleMas / (2000 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s) => crystalizeLevelMultipliers[s.characterLevel],\r\n  crystalize_hit: (s) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * s.crystalize_multi,\r\n};\r\n\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].forEach(ele => {\r\n  StatData[`${ele}_crystalize_hit`] = { name: `Crystalize Shield ${hitElements[ele].name} Effective HP`, variant: ele }\r\n  Formulas[`${ele}_crystalize_hit`] = s => s.crystalize_hit * 2.5\r\n})\r\n\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"shattered_hit\", \"crystalize_hit\", \"electro_crystalize_hit\", \"pyro_crystalize_hit\", \"cryo_crystalize_hit\", \"hydro_crystalize_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s) => s[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s) => s[`${ele}_${move}_hit_base_multi`] * s.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s) => multi * s.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * s[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * s[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\ntype KeyedFormula = [string, (s: ICalculatedStats) => number]\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys: string[], stats: ICalculatedStats) {\r\n  const { modifiers = {} } = stats, initialStats = {} as ICalculatedStats\r\n\r\n  const preModFormulaList = dependencyKeys.map(key => {\r\n    if (getStage(key) !== 0)\r\n      return [\"\", () => 0] as KeyedFormula\r\n\r\n    if (key in Formulas)\r\n      return [key, Formulas[key]] as KeyedFormula\r\n    initialStats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n    return [\"\", () => 0] as KeyedFormula\r\n  }).filter(x => x[0])\r\n\r\n  const modFormula = Formula.computeModifier(stats, Object.fromEntries(Object.entries(modifiers)\r\n    .filter(([key]) => dependencyKeys.includes(key)) // Keep only relevant keys\r\n  ))\r\n\r\n  const postModFormulaList = dependencyKeys.map(key => {\r\n    if (getStage(key) !== 1)\r\n      return [\"\", () => 0] as KeyedFormula\r\n\r\n    const func = Formulas[key]!\r\n\r\n    if (StatData[key]?.const) {\r\n      initialStats[key] = func(initialStats)\r\n      return [\"\", () => 0] as KeyedFormula\r\n    }\r\n\r\n    return [key, func] as KeyedFormula\r\n  }).filter(x => x[0])\r\n\r\n  return {\r\n    initialStats: initialStats as ICalculatedStats,\r\n    formula: (s: ICalculatedStats) => {\r\n      preModFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n\r\n      const modStats = Formula.computeModifier(s, s.modifiers)(s) // late-binding modifiers (arts mod)\r\n      mergeStats(modStats, modFormula(s))\r\n      s.premod = Object.fromEntries(Object.keys(modifiers).map(key => [key, s[key]]))\r\n      // Apply modifiers\r\n      mergeStats(s, modStats)\r\n      mergeStats(s, { modifiers })\r\n\r\n      postModFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n    }\r\n  }\r\n}\r\nexport function getStage(key: string): number {\r\n  return ((key in Formulas) && key !== \"baseATK\" && key !== \"finalATK\" && key !== \"finalHP\" && key !== \"finalDEF\")\r\n    ? 1 // postmod\r\n    : 0 // premod\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport { initialBuildSettings } from \"../Build/BuildSetting\";\r\nimport { ascensionMaxLevel } from \"../Data/CharacterData\";\r\nimport Stat from \"../Stat\";\r\nimport { allMainStatKeys, allSubstats, IArtifact, IFlexArtifact, IFlexSubstat, Substat, SubstatKey } from \"../Types/artifact\";\r\nimport { ICharacter, IFlexCharacter } from \"../Types/character\";\r\nimport { allArtifactRarities, allArtifactSets, allCharacterKeys, allElements, allHitModes, allReactionModes, allSlotKeys, allWeaponKeys } from \"../Types/consts\";\r\n\r\n/// Returns the closest (not necessarily valid) artifact, including errors as necessary\r\nexport function validateFlexArtifact(flex: IFlexArtifact, id: string): { artifact: IArtifact, errors: Displayable[] } {\r\n  const { location, lock, setKey, slotKey, numStars, mainStatKey } = flex\r\n  const level = Math.round(Math.min(Math.max(0, flex.level), numStars >= 3 ? numStars * 4 : 4))\r\n  const mainStatVal = Artifact.mainStatValue(mainStatKey, numStars, level)!\r\n\r\n  const errors: Displayable[] = []\r\n  const substats: Substat[] = flex.substats.map(substat => ({ ...substat, rolls: [], efficiency: 0 }))\r\n  const validated: IArtifact = { id, setKey, location, slotKey, lock, mainStatKey, numStars, level, substats, mainStatVal }\r\n\r\n  const allPossibleRolls: { index: number, substatRolls: number[][] }[] = []\r\n  let totalUnambiguousRolls = 0\r\n\r\n  function efficiency(rolls: number[], key: SubstatKey): number {\r\n    return rolls.reduce((a, b) => a + b, 0) / Artifact.maxSubstatValues(key) * 100 / rolls.length\r\n  }\r\n\r\n  substats.forEach((substat, index) => {\r\n    const { key, value } = substat\r\n    if (!key) {\r\n      substat.value = 0\r\n      return\r\n    }\r\n\r\n    const possibleRolls = Artifact.getSubstatRolls(key, value, numStars)\r\n\r\n    if (possibleRolls.length) { // Valid Substat\r\n      const possibleLengths = new Set(possibleRolls.map(roll => roll.length))\r\n\r\n      if (possibleLengths.size !== 1) { // Ambiguous Rolls\r\n        allPossibleRolls.push({ index, substatRolls: possibleRolls })\r\n      } else { // Unambiguous Rolls\r\n        totalUnambiguousRolls += possibleRolls[0].length\r\n      }\r\n\r\n      substat.rolls = possibleRolls.reduce((best, current) => best.length < current.length ? best : current)\r\n      substat.efficiency = efficiency(substat.rolls, key)\r\n    } else { // Invalid Substat\r\n      substat.rolls = []\r\n      substat.efficiency = 0\r\n      errors.push(<>Invalid substat {Stat.getStatNameWithPercent(substat.key)}</>)\r\n    }\r\n  })\r\n\r\n  if (errors.length) return { artifact: validated, errors }\r\n\r\n  const { low, high } = Artifact.rollInfo(numStars), lowerBound = low + Math.floor(level / 4), upperBound = high + Math.floor(level / 4)\r\n\r\n  let highestScore = -Infinity // -Max(substats.rolls[i].length) over ambiguous rolls\r\n  const tryAllSubstats = (rolls: { index: number, roll: number[] }[], currentScore: number, total: number) => {\r\n    if (rolls.length === allPossibleRolls.length) {\r\n      if (total <= upperBound && total >= lowerBound && highestScore < currentScore) {\r\n        highestScore = currentScore\r\n        for (const { index, roll } of rolls) {\r\n          const key = substats[index].key as SubstatKey\r\n          substats[index].rolls = roll\r\n          substats[index].efficiency = efficiency(roll, key)\r\n        }\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    const { index, substatRolls } = allPossibleRolls[rolls.length]\r\n    for (const roll of substatRolls) {\r\n      rolls.push({ index, roll })\r\n      let newScore = Math.min(currentScore, -roll.length)\r\n      if (newScore >= highestScore) // Scores won't get better, so we can skip.\r\n        tryAllSubstats(rolls, newScore, total + roll.length)\r\n      rolls.pop()\r\n    }\r\n  }\r\n\r\n  tryAllSubstats([], Infinity, totalUnambiguousRolls)\r\n\r\n  const totalRolls = substats.reduce((accu, { rolls }) => accu + rolls.length, 0)\r\n\r\n  if (totalRolls > upperBound)\r\n    errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${upperBound} rolls. It currently has ${totalRolls} rolls.`)\r\n  else if (totalRolls < lowerBound)\r\n    errors.push(`${numStars}-star artifact (level ${level}) should have at least ${lowerBound} rolls. It currently has ${totalRolls} rolls.`)\r\n\r\n  if (substats.some((substat) => !substat.key)) {\r\n    let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n    if (substat)\r\n      errors.push(<>Substat {Stat.getStatNameWithPercent(substat.key)} has {'>'} 1 roll, but not all substats are unlocked.</>)\r\n  }\r\n\r\n  return { artifact: validated, errors }\r\n}\r\n/// Returns the closest flex artifact, or undefined if it's not recoverable\r\nexport function validateDBArtifact(obj: any): IFlexArtifact | undefined {\r\n  if (typeof obj !== \"object\") return\r\n\r\n  let {\r\n    setKey, numStars, level, slotKey, mainStatKey, substats, location, lock,\r\n  } = obj ?? {}\r\n\r\n  if (!allArtifactSets.includes(setKey) ||\r\n    !allSlotKeys.includes(slotKey) ||\r\n    !allMainStatKeys.includes(mainStatKey) ||\r\n    !allArtifactRarities.includes(numStars) ||\r\n    typeof level !== \"number\" || level < 0 || level > 20)\r\n    return // non-recoverable\r\n\r\n  substats = validateSubstats(substats)\r\n  lock = !!lock\r\n  level = Math.round(level)\r\n  if (!allCharacterKeys.includes(location)) location = \"\"\r\n  return { setKey, numStars, level, slotKey, mainStatKey, substats, location, lock }\r\n}\r\n/// Return a new flex artifact from given artifact. All extra keys are removed\r\nexport function extractFlexArtifact(artifact: IArtifact): IFlexArtifact {\r\n  const { setKey, numStars, level, slotKey, mainStatKey, substats, location, lock } = artifact\r\n  return { setKey, numStars, level, slotKey, mainStatKey, substats: substats.map(substat => ({ key: substat.key, value: substat.value })), location, lock }\r\n}\r\nfunction validateSubstats(obj: any): IFlexSubstat[] {\r\n  if (!Array.isArray(obj))\r\n    return new Array(4).map(_ => ({ key: \"\", value: 0 }))\r\n  const substats = obj.map(({ key = undefined, value = undefined }) => {\r\n    if (!allSubstats.includes(key))\r\n      return { key: \"\", value: 0 }\r\n    return { key, value: typeof value === \"number\" && isFinite(value) ? value : 0 }\r\n  })\r\n  while (substats.length !== 4)\r\n    substats.push({ key: \"\", value: 0 })\r\n\r\n  return substats\r\n}\r\n/// Returns the closest character\r\nexport function validateFlexCharacter(flex: IFlexCharacter): ICharacter {\r\n  // TODO: Add more validations to make sure the returned value is a \"valid\" character\r\n  return {\r\n    ...flex,\r\n    equippedArtifacts: Object.fromEntries(allSlotKeys.map(slot => [slot, \"\"])) as any\r\n  }\r\n}\r\n/// Returns the closest flex character, or undefined if it's not recoverable\r\nexport function validateDBCharacter(obj: any, key: string): IFlexCharacter | undefined {\r\n  if (typeof obj !== \"object\") return\r\n\r\n  let {\r\n    characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n  } = obj\r\n\r\n  if (key !== `char_${characterKey}` ||\r\n    !allCharacterKeys.includes(characterKey) ||\r\n    typeof level !== \"number\" || level < 0 || level > 90 ||\r\n    typeof weapon !== \"object\" || !allWeaponKeys.includes(weapon.key))\r\n    return // non-recoverable\r\n\r\n  if (!allHitModes.includes(hitMode)) hitMode = \"avgHit\"\r\n  if (characterKey !== \"traveler\") elementKey = undefined\r\n  else if (!allElements.includes(elementKey)) elementKey = \"anemo\"\r\n  if (!allReactionModes.includes(reactionMode)) reactionMode = null\r\n  if (!allElements.includes(infusionAura)) infusionAura = \"\"\r\n  if (typeof constellation !== \"number\" && constellation < 0 && constellation > 6) constellation = 0\r\n  if (typeof ascension !== \"number\" ||\r\n    !(ascension in ascensionMaxLevel) ||\r\n    level > ascensionMaxLevel[ascension] ||\r\n    level < (ascensionMaxLevel[ascension - 1] ?? 0))\r\n    ascension = ascensionMaxLevel.findIndex(maxLvl => level <= maxLvl)\r\n  if (typeof talentLevelKeys !== \"object\") talentLevelKeys = { auto: 0, skill: 0, burst: 0 }\r\n  else {\r\n    let { auto = 0, skill = 0, burst = 0 } = talentLevelKeys\r\n    if (typeof auto !== \"number\" || auto < 0 || auto > 15) auto = 0\r\n    if (typeof skill !== \"number\" || skill < 0 || skill > 15) skill = 0\r\n    if (typeof burst !== \"number\" || burst < 0 || burst > 15) burst = 0\r\n    talentLevelKeys = { auto, skill, burst }\r\n  }\r\n  {\r\n    let { key, level, ascension, refineIndex } = weapon\r\n    if (typeof level !== \"number\" || level < 1 || level > 90) level = 1\r\n    if (typeof ascension !== \"number\" || ascension < 0 || ascension > 6) ascension = 0\r\n    if (typeof refineIndex !== \"number\" || refineIndex < 0 || refineIndex > 5) refineIndex = 0\r\n    weapon = { key, level, ascension, refineIndex }\r\n  }\r\n  {\r\n    if (typeof buildSettings !== \"object\") buildSettings = {}\r\n    let { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending } = buildSettings ?? {}\r\n    if (!Array.isArray(setFilters)) setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }]\r\n    if (typeof statFilters !== \"object\") statFilters = {}\r\n\r\n    if (!mainStatKeys || !mainStatKeys.sands || !mainStatKeys.goblet || !mainStatKeys.circlet) {\r\n      const tempmainStatKeys = initialBuildSettings().mainStatKeys\r\n      if (Array.isArray(mainStatKeys)) {\r\n        const [sands, goblet, circlet] = mainStatKeys\r\n        if (sands) tempmainStatKeys.sands = [sands]\r\n        if (goblet) tempmainStatKeys.goblet = [goblet]\r\n        if (circlet) tempmainStatKeys.circlet = [circlet]\r\n      }\r\n      mainStatKeys = tempmainStatKeys\r\n    }\r\n\r\n    if (!optimizationTarget) optimizationTarget = \"finalAtk\"\r\n    if (typeof mainStatAssumptionLevel !== \"number\" || mainStatAssumptionLevel < 0 || mainStatAssumptionLevel > 20)\r\n      mainStatAssumptionLevel = 0\r\n    useLockedArts = !!useLockedArts\r\n    useEquippedArts = !!useEquippedArts\r\n    ascending = !!ascending\r\n    buildSettings = { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending }\r\n  }\r\n\r\n  // TODO: validate baseStatOverrides, conditionalValues\r\n  return {\r\n    characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n  }\r\n}\r\n/// Return a new flex character from given character. All extra keys are removed\r\nexport function extractFlexCharacter(char: ICharacter): IFlexCharacter {\r\n  const {\r\n    characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n  } = char\r\n  return {\r\n    characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n  }\r\n}","import { BonusStats, Modifier } from \"../Types/stats\"\r\n\r\nexport function mergeStats(initialStats: BonusStats, stats: BonusStats | undefined) {\r\n  if (!stats) return\r\n  return Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [key, paths] of (Object.entries(val as Modifier))) {\r\n        initialStats.modifiers[key] = initialStats.modifiers[key] ?? []\r\n        initialStats.modifiers[key].push(...paths)\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n}","import { ArtifactRarity, ArtifactSetKey, CharacterKey, ElementKey, SetNum, SlotKey } from \"./consts\";\r\nimport { BonusStats, BasicStats } from \"./stats\";\r\nimport { IConditionals } from \"./IConditional\";\r\nimport { DocumentSection } from \"./character\";\r\n\r\nexport type IArtifactSheets = StrictDict<ArtifactSetKey, IArtifactSheet>\r\n\r\nexport interface IArtifactSheet {\r\n  name: string, // only to stored the English name for OCR, otherwise, should come from localization pipeline\r\n  rarity: readonly ArtifactRarity[],\r\n  icons: Dict<SlotKey, string>,\r\n  conditionals?: IConditionals,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  stats?: BonusStats | ((stats: BasicStats) => BonusStats)\r\n  document?: DocumentSection[],\r\n}\r\n\r\nexport interface IFlexArtifact {\r\n  setKey: ArtifactSetKey,\r\n  numStars: ArtifactRarity,\r\n  level: number,\r\n  slotKey: SlotKey,\r\n  mainStatKey: MainStatKey,\r\n  substats: IFlexSubstat[],\r\n\r\n  location: CharacterKey | \"\",\r\n  lock: boolean,\r\n}\r\nexport interface IArtifact extends IFlexArtifact {\r\n  id: string,\r\n  mainStatVal: number,\r\n  substats: Substat[],\r\n}\r\n\r\nexport interface IFlexSubstat {\r\n  key: SubstatKey | \"\"\r\n  value: number\r\n}\r\nexport interface Substat extends IFlexSubstat {\r\n  rolls: number[],\r\n  efficiency: number,\r\n}\r\nexport type StatKey = MainStatKey | SubstatKey | ReactionDMGStatKey | MoveDMGStatKey | ElementalRESStatKey | ElementalEnemyRESStatKey | SpecializedStatKey\r\n\r\ntype ElementalRESStatKey = `${ElementKey | \"physical\"}_res_`\r\ntype ElementalEnemyRESStatKey = `${ElementKey | \"physical\"}_enemyRes_`\r\ntype ReactionDMGStatKey = \"overloaded_dmg_\" | \"shattered_dmg_\" | \"electrocharged_dmg_\" | \"superconduct_dmg_\" | \"swirl_dmg_\" | \"vaporize_dmg_\" | \"melt_dmg_\" | \"burning_dmg_\" | \"crystalize_dmg_\"\r\ntype MoveDMGStatKey = \"normal_dmg_\" | \"charged_dmg_\" | \"skill_dmg_\" | \"burst_dmg_\"\r\n\r\nexport const allMainStatKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"heal_\"] as const\r\nexport const allSubstats = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"def\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\",] as const\r\n\r\n// TODO: Check if these actually applies\r\ntype SpecializedStatKey = \"normal_critRate_\" | \"charged_critRate_\" | \"plunging_dmg_\" | \"powShield_\" | \"enemyDEFRed_\" | \"skillCDRed_\" | \"incHeal_\" | \"weakspotDMG_\" | \"dmg_\" | \"moveSPD_\" | \"staminaDec_\" | \"atkSPD_\" | \"cdRed_\" | \"finalHP\" | \"finalATK\" | \"finalDEF\"\r\n\r\nexport type MainStatKey = typeof allMainStatKeys[number]\r\nexport type SubstatKey = typeof allSubstats[number]\r\n","import { MainStatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactSubstatRollData: StrictDict<Rarity, { low: number, high: number, numUpgrades: number }> = {\r\n  1: { low: 0, high: 0, numUpgrades: 1 },\r\n  2: { low: 0, high: 1, numUpgrades: 2 },\r\n  3: { low: 1, high: 2, numUpgrades: 3 },\r\n  4: { low: 2, high: 3, numUpgrades: 4 },\r\n  5: { low: 3, high: 4, numUpgrades: 5 }\r\n};\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: readonly MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatRollData as ArtifactStarsData,\r\n};\r\n","import { ArtifactSlotsData, ArtifactStarsData } from '../Data/ArtifactData';\r\nimport { clampPercent, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { allSubstats, IArtifact, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, allRarities, ArtifactRarity } from '../Types/consts';\r\nimport { BonusStats, ICalculatedStats } from '../Types/stats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\nimport { ArtifactSetEffects } from '../Types/Build';\r\nimport { mergeStats } from '../Util/StatUtil';\r\nimport ArtifactMainStatsData from './artifact_main_gen.json'\r\nimport ArtifactSubstatsData from './artifact_sub_gen.json'\r\nimport ArtifactSubstatLookupTable from './artifact_sub_rolls_gen.json'\r\nimport { valueString } from '../Util/UIUtil';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey): string =>\r\n    ArtifactSlotsData[slotKey].name\r\n  static slotMainStats = (slotKey: SlotKey): readonly MainStatKey[] =>\r\n    ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): ArtifactSetEffects => {\r\n    const result: ArtifactSetEffects = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      const setEffect: Dict<SetNum, BonusStats> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, entry]) => {\r\n        const setStats = evalIfFunc(entry.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      mergeStats(result[setKey][setNumKey], condStats)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: IArtifact[]): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, databaseObj.filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey): readonly number[] => {\r\n    if (statKey.endsWith('_')) // TODO: % CONVERSION\r\n      return ArtifactMainStatsData[numStar][statKey].map(k => k * 100)\r\n    return ArtifactMainStatsData[numStar][statKey]\r\n  }\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } =>\r\n    ArtifactStarsData[rarity]\r\n\r\n  static maxSubstatValues = (substatKey: SubstatKey, numStars = maxStar): number => {\r\n    if (substatKey.endsWith(\"_\")) // TODO: % CONVERSION\r\n      return Math.max(...ArtifactSubstatsData[numStars][substatKey]) * 100\r\n    return Math.max(...ArtifactSubstatsData[numStars][substatKey])\r\n  }\r\n\r\n  static maxSubstatRollEfficiency = Object.fromEntries(allRarities.map(rarity =>\r\n    [rarity, 100 * Math.max(...allSubstats.map(substat =>\r\n      Artifact.maxSubstatValues(substat, rarity) /\r\n      Artifact.maxSubstatValues(substat, maxStar)))]))\r\n  static getSubstatKeys = (): readonly SubstatKey[] =>\r\n    allSubstats\r\n  static totalPossibleRolls = (numStars: Rarity): number =>\r\n    ArtifactStarsData[numStars].high + ArtifactStarsData[numStars].numUpgrades\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4)\r\n  static getSubstatRollData = (substatKey: SubstatKey, numStars: Rarity) => {\r\n    if (substatKey.endsWith(\"_\")) // TODO: % CONVERSION\r\n      return ArtifactSubstatsData[numStars][substatKey].map(v => v * 100)\r\n    return ArtifactSubstatsData[numStars][substatKey]\r\n  }\r\n\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: ArtifactRarity): number[][] => {\r\n    const rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    const table = ArtifactSubstatLookupTable[numStars][substatKey]\r\n    const lookupValue = valueString(substatValue, substatKey.endsWith(\"_\") ? \"%\" : \"\")\r\n    return table[lookupValue]?.map(roll => roll.map(i => rollData[i])) ?? []\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static getArtifactEfficiency(artifact: IArtifact, filter: Set<SubstatKey>): { currentEfficiency: number, maxEfficiency: number } {\r\n    const { substats, numStars, level } = artifact\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    const totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    const current = substats.filter(({ key }) => key && filter.has(key)).reduce((sum, { rolls, efficiency }) => sum + ((efficiency ?? 0) * (rolls?.length ?? 0)), 0)\r\n\r\n    const rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    const emptySlotCount = substats.filter(s => !s.key).length\r\n    const matchedSlotCount = substats.filter(s => s.key && filter.has(s.key)).length\r\n    const unusedFilterCount = filter.size - matchedSlotCount\r\n    let maximum\r\n    if (emptySlotCount && unusedFilterCount) maximum = current + Artifact.maxSubstatRollEfficiency[numStars] * rollsRemaining // Rolls into good empty slot\r\n    else if (matchedSlotCount) maximum = current + Artifact.maxSubstatRollEfficiency[numStars] * (rollsRemaining - emptySlotCount) // Rolls into existing matched slot\r\n    else maximum = current // No possible roll\r\n\r\n    const currentEfficiency = current / totalRolls\r\n    const maxEfficiency = maximum / totalRolls\r\n    return { currentEfficiency, maxEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    const setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}\r\n","import { FormulaItem, IBaseStat } from './Types/character';\r\nimport { BonusStats, ICalculatedStats, Modifier } from './Types/stats';\r\nimport { resolve } from './Util/KeyPathUtil';\r\nimport { objPathValue } from './Util/Util';\r\n\r\nexport const formulaImport = import('./Data/formula').then(imp => {\r\n  Formula.formulas = imp.default\r\n  return imp.default\r\n})\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | object | undefined> => formulaImport.then(formulas => objPathValue(formulas, keys))\r\n  static computeModifier(stat: IBaseStat, modifier: Modifier | undefined): (s: ICalculatedStats) => BonusStats {\r\n    if (!modifier) return () => ({})\r\n\r\n    const objs = Object.entries(modifier).map(([key, formulas]) =>\r\n      [key, formulas.map(path => Formula.getCurrent(path, stat)[0])] as [string, ((s: ICalculatedStats) => number)[]])\r\n\r\n    return s => Object.fromEntries(objs.map(([key, formulas]) =>\r\n      [key, formulas.reduce((a, formula) => a + formula(s), 0)]))\r\n  }\r\n  static getCurrent(path: string[], stat: IBaseStat): FormulaItem {\r\n    return resolve<any, (stat: IBaseStat) => FormulaItem>(Formula.formulas, path)(stat)\r\n  }\r\n}\r\n","import { BuildSetting } from \"../Types/Build\";\r\n\r\nexport const initialBuildSettings = (): BuildSetting => ({\r\n  setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n  statFilters: {},\r\n  mainStatKeys: { sands: [], goblet: [], circlet: [] },\r\n  optimizationTarget: \"finalATK\",\r\n  mainStatAssumptionLevel: 0,\r\n  useLockedArts: false,\r\n  useEquippedArts: false,\r\n  ascending: false,\r\n})","import { Trans, useTranslation } from \"react-i18next\"\r\nconst components = {\r\n  anemo: <span className=\"text-anemo\" />,\r\n  geo: <span className=\"text-geo\" />,\r\n  cryo: <span className=\"text-cryo\" />,\r\n  hydro: <span className=\"text-hydro\" />,\r\n  pyro: <span className=\"text-pyro\" />,\r\n  electro: <span className=\"text-electro\" />,\r\n}\r\n\r\nexport function Translate({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  const textObj = values ? t(textKey, values, { returnObjects: true }) as any : t(textKey, { returnObjects: true }) as any\r\n  if (typeof textObj === \"string\") return children ? <Trans i18nKey={textKey} t={t} components={components} values={values} >{children}</Trans> : <Trans i18nKey={textKey} t={t} components={components} values={values} />\r\n  return <T key18={textKey} obj={textObj} t={t} values={values} />\r\n}\r\n/**this is used cause the `components` prop mess with tag interpolation. */\r\nexport function TransWrapper({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  return <Trans i18nKey={textKey} t={t} values={values} >{children}</Trans>\r\n}\r\nfunction Para({ children }: { children?: JSX.Element }) {\r\n  return <p className=\"mb-0\">{children}</p>\r\n}\r\n\r\nfunction T({ key18, obj, li, t, values }: { key18: string, obj: any, li?: boolean, t, values?: any }) {\r\n  if (typeof obj === \"string\") return <Trans i18nKey={key18} components={components} parent={Para} t={t} values={values} />\r\n  if (Array.isArray(obj))\r\n    return <ul className=\"mb-2\">\r\n      <T key18={key18} obj={{ ...obj }} li t={t} values={values} />\r\n    </ul>\r\n  return Object.entries(obj).map(([key, val]) => {\r\n    if (val === \"<br/>\") return <div key={key as any} className=\"mb-2\" />\r\n\r\n    if (typeof val === \"object\") return <T key={key as any} key18={`${key18}.${key as any}`} obj={val} t={t} values={values} />\r\n    if (typeof val === \"string\") {\r\n      const trans = <Trans key={key as any} i18nKey={`${key18}.${key}`} components={components} parent={Para} t={t} values={values} />\r\n      return li ? <li key={key as any}>{trans}</li> : trans\r\n    }\r\n    return null\r\n  }) as any\r\n}","import { ElementKey } from \"../Types/consts\"\r\n\r\nconst ElementalData: StrictDict<ElementKey | \"physical\", { name: string }> = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined, dependencies: any[]): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>(undefined);\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => {\r\n      pending = false\r\n      setRes(undefined)\r\n    }\r\n  }, dependencies)// eslint-disable-line react-hooks/exhaustive-deps\r\n  return res\r\n}\r\n"],"sourceRoot":""}