{"version":3,"sources":["ReactHooks/useCharacterReducer.tsx","Components/FieldDisplay.tsx","Components/CustomNumberInput.tsx","Components/Character/CharacterDropdownButton.tsx","Components/BootstrapTooltip.tsx","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/ExpandButton.tsx","Components/Character/ThumbSide.tsx","Components/Character/LocationName.tsx","Components/TextButton.tsx","Components/StatDisplay.tsx","Character/StatInput.tsx","Artifact/ArtifactCard.tsx","Artifact/PercentBadge.tsx","Components/Weapon/WeaponSelectionModal.tsx","Weapon/WeaponCard.tsx","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Components/EnemyEditor.tsx","Components/HitModeEditor.tsx","Weapon/WeaponStatsCard.tsx","Weapon/WeaponDisplayCard.tsx","Components/FormulaCalcCard.tsx","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx"],"names":["useCharacterReducer","characterKey","database","useContext","DatabaseContext","useCallback","action","type","setWeaponLocation","id","character","_getChar","statKey","value","bonusStats","overrideStatKeys","includes","characterBaseStats","updateChar","FieldDisplay","field","buildContext","newBuild","equippedBuild","compareBuild","build","canShow","useMemo","fixedVal","fixed","fieldVal","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","parseInt","toFixed","diff","color","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","title","component","sx","cursor","ml","icon","faQuestionCircle","unit","display","justifyContent","FieldDisplayList","styled","List","theme","borderRadius","shape","overflow","margin","backgroundColor","palette","contentDark","main","contentDarker","StyledInputBase","InputBase","primary","transition","dark","CustomNumberInputButtonGroupWrapper","shouldForwardProp","prop","padding","border","width","height","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","CustomNumberInput","onChange","disabled","float","props","useState","state","setState","sendChange","parseFunc","parseFloat","useEffect","toString","onInputChange","e","target","onKeyDOwn","key","aria-label","onBlur","onKeyDown","CharacterDropdownButton","inventory","noUnselect","filter","t","useTranslation","characterSheets","usePromise","CharacterSheet","getAll","characterSheet","get","characterKeys","_getCharKeys","ck","sort","name","startIcon","thumbImg","src","thumbImgSide","onClick","selected","variant","noWrap","CharacterMenuItemArray","selectedCharacterKey","map","BootstrapTooltip","className","arrow","classes","popper","tooltipClasses","common","black","tooltip","ConditionalSelector","conditional","conditionalValue","setConditional","stats","conditionalNum","conditionalStateKey","states","Object","values","text","evalIfFunc","maxStack","badge","SqBadge","DropdownButton","size","MenuItem","Divider","entries","flatMap","i","stateKey","condial","Array","keys","v","stack","Button","CheckBox","CheckBoxOutlineBlank","ConditionalDisplay","characterDispatch","Conditional","resolve","undefined","conditionalStats","fields","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","conditionalValues","deletePropPath","objClearEmpties","CardDark","CardContent","m","DocumentDisplay","sections","section","talentText","Box","pb","mb","length","ExpandButton","expand","other","transform","marginLeft","transitions","create","duration","shortest","ThumbSide","lineHeight","verticalAlign","marginTop","spacing","marginRight","marginBottom","LocationName","location","nameWIthIcon","DisabledButton","secondary","TextButton","children","DisplayStatDiff","label","val","oldVal","hasBonus","oldText","diffText","valueText","StatDisplay","isArray","Formula","characterHP","characterDEF","characterATK","weaponATK","Stat","getStatUnit","fixedUnit","StatIcon","getStatName","labelVariant","hasBonusStats","FlexButtonGroup","ButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","whiteSpace","flexBasis","flexGrow","px","inputProps","textAlign","endAdornment","allSubstatFilter","Set","allSubstats","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","effFilter","databaseArtifact","updateDatabaseArtifact","followArt","sheet","ArtifactSheet","_getArt","setKey","editable","localDatabase","art","lock","slotKey","rarity","level","mainStatKey","substats","exclude","mainStatLevel","Math","max","min","levelVariant","floor","mainStatVal","valueStringWithUnit","Artifact","mainStatValue","getArtifactEfficiency","currentEfficiency","maxEfficiency","artifactValid","slotName","getSlotName","slotDesc","getSlotDesc","slotDescTooltip","faInfoCircle","setEffects","setDescTooltip","setNumKey","setNum","setEffectDesc","fallback","minHeight","flexDirection","py","alignItems","pl","updateArt","container","flexWrap","item","stars","colored","xs","md","image","slotIcons","pt","stat","numRolls","rolls","rollColor","clamp","efficiency","effOpacity","statName","mr","opacity","has","my","valid","flexShrink","charKey","setArtLocation","faEdit","faBan","faChartLine","faTrashAlt","PercentBadge","badgeColor","WeaponSelectionModal","show","onHide","onSelect","propWeaponFilter","weaponFilter","weaponSheets","WeaponSheet","setWeaponfilter","weaponIdList","allWeaponKeys","wKey","weaponType","a","b","open","onClose","weaponKey","weaponSheet","lg","img","Assets","weaponTypes","large","WeaponCard","weaponId","canEquip","databaseWeapon","updateDatabaseWeapon","followWeapon","weapon","cs","weaponTypeKey","actionWrapperFunc","equipOnChar","ascension","refinement","weaponMainVal","getMainStatValue","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","statMap","passiveName","push","imgAwaken","condition","wrapper","avatar","fontSize","titleTypographyProps","updateWeapon","ascensionMaxLevel","alignContent","mt","statVal","SetEffectDisplay","setEffectText","setStats","setNumStats","setStatsFields","document","setEffectDocument","StatDisplayComponent","sheets","statsDisplayKeys","sectionKey","sectionValues","header","getFormulaTargetsDisplayHeading","characterEle","sm","gutterBottom","mx","JSON","stringify","EnemyExpandCard","expanded","setexpanded","toggle","getStatValueWithBonus","allElements","element","EnemyResText","aria-expanded","p","in","timeout","unmountOnExit","EnemyEditor","immune","resKey","content","uncoloredEleIcons","bsProps","charBaseStats","fullWidth","href","rel","bgcolor","contentLight","getStatNameRaw","enemyLevel","eleKey","immunityStatKey","elementImmunity","faCheckSquare","faSquare","infusionVals","pyro","cryo","InfusionAuraDropdown","infusionAura","isMelee","ReactionToggle","reactionMode","charEleKey","exclusive","baseColor","hydro","HitModeToggle","hitMode","DamageOptionsCard","WeaponStatsCard","statsVals","s","Typography","WeaponDisplayCard","propWeaponId","charData","footer","useForceUpdate","databaseToken","onDatabaseUpdate","buildContextObj","_getWeapon","weaponDispatch","newWeapon","setLevel","findIndex","ascenML","setAscension","lowerAscension","refineIndex","ws","initialWeaponFilter","showModal","setshowModal","CardLight","Grid","k","startAdornment","ambiguousLevel","milestoneLevels","lv","as","lvlstr","Lock","LockOpen","CloseButton","SwapBtn","onChangeId","substatKey","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","gap","maxWidth","minWidth","description","process","getLevelString","passiveDescription","Provider","setCompareBuild","atk","setShow","close","clickHandler","weapons","dbWeapon","SwapHoriz","ModalWrapper","ImgIcon","FormulaCalcCard","ExpandMore","Collapse","CalculationDisplay","displayStatKeys","getDisplayStatKeys","Skeleton","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","reverse","Boolean","Accordion","AccordionSummary","expandIcon","printStat","AccordionDetails","subKey","formulaField","fieldFixed","fieldUnit","fieldFormula","fieldFormulaDependency","fieldValue","CharacterArtifactPane","history","useHistory","statKeys","edit","artid","pathname","artToEditId","artifactSheets","followAnyArt","equipArts","window","confirm","equippedArtifacts","equipArtifacts","unequipArts","objectFromKeyMap","allSlotKeys","SolidToggleButtonGroup","ToggleButton","Card","warning","setToSlots","setNumKeyArr","CharacterOverviewPane","constellation","tlvl","elementKey","CardMedia","cardImg","star","tKey","Badge","badgeContent","skillBoost","burstBoost","overlap","anchorOrigin","vertical","horizontal","getTalentOfKey","constellationName","equippedWeapon","MainStatsCards","additionalKeys","editStatKeys","otherStatKeys","forEach","ele","miscStatkeys","resetString","statBreakpoint","specializedStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","specializedStatUnit","displayNewBuildProps","StatDisplayCard","columnSpacing","rowSpacing","editContent","characterStatKeys","defVal","round","getBase","getStatNameWithPercent","setedit","faSave","CharacterTalentPane","ReactionDisplay","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","style","onClickTitle","ReactionComponents","superconduct_hit","sKey","electro","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","shattered_hit","information","crystalize_hit","crystalizeEleToDisplay","eleInterArr","ElementToReactionKeys","Ele","anemo","geo","talentLimits","talent","actionWrapeprFunc","CardActionArea","levelBoost","talentLvlKey","newTalentLevelKey","talentStats","getTalentStats","talentStatsFields","statsEle","talentSheet","ConditionalWrapper","TabPanel","current","role","hidden","aria-labelledby","CharacterDisplayCard","setCharacterKey","propNewBuild","tabName","initialCharacter","followChar","deepClone","tab","settab","onTab","calculateBuild","CharSelectDropdown","Tabs","Tab","HeaderIconDisplay","CharacterSelectionModal","ElementalData","talents"],"mappings":"oMAoBe,SAASA,EAAoBC,GAC1C,IAAMC,EAAWC,qBAAWC,KAE5B,OAAOC,uBAAY,SAACC,GAClB,GAAKL,EAEL,GAAI,SAAUK,EAAQ,OAAQA,EAAOC,MACnC,IAAK,SACHL,EAASM,kBAAkBF,EAAOG,GAAIR,GACtC,MACF,IAAK,YACH,IAMwC,EANlCS,EAAYR,EAASS,SAASV,GAC5BW,EAAmBN,EAAnBM,QAASC,EAAUP,EAAVO,MAEXC,EAAaJ,EAAUI,WAE7B,GAAIA,EAAWF,KAAaC,EAAO,OACnC,GAAIE,IAAiBC,SAASJ,IACxB,UAACK,YAAmBP,GAAWE,UAA/B,QAA2C,KAAOC,SAC7CC,EAAWF,GAElBE,EAAWF,GAAWC,OAEpBA,EACFC,EAAWF,GAAWC,SAEfC,EAAWF,GAEtBV,EAASgB,WAAT,2BAAyBR,GAAzB,IAAoCI,gBACpC,MAEF,IAAK,aACH,IAAMJ,EAAYR,EAASS,SAASV,GAC5BW,EAAYN,EAAZM,QAEFE,EAAaJ,EAAUI,kBACtBA,EAAWF,GAElBV,EAASgB,WAAT,2BAAyBR,GAAzB,IAAoCI,qBAItCZ,EAASgB,WAAT,2BAAyBhB,EAASS,SAASV,IAAmBK,MAC/D,CAACL,EAAcC,M,iCC/DpB,oLAUe,SAASiB,EAAT,GAA4D,IAAD,IAAnCC,EAAmC,EAAnCA,MAAmC,EACtBjB,qBAAWkB,KAArDC,EADgE,EAChEA,SAAUC,EADsD,EACtDA,cAAeC,EADuC,EACvCA,aAC3BC,EAASH,GAAsBC,EAC/BG,EAAUC,mBAAQ,yBAAMF,IAAK,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAOM,eAAV,aAAG,OAAAN,EAAiBK,MAAgB,CAACL,EAAOK,IACzEG,GAAgB,OAALR,QAAK,IAALA,OAAA,EAAAA,EAAOS,QAAS,EAC3BC,EAAWH,mBAAQ,WACvB,GAAIP,EAAMP,MAAO,OAAOkB,IAAUC,oBAAoBZ,EAAO,QAASK,GACjE,GAAIL,EAAMa,QAAS,CAAC,IAAD,IAClBC,EAAM,UAAGH,IAAUC,oBAAoBZ,EAAO,UAAWK,UAAnD,iBAAG,EAAyD,UAA5D,aAAG,SAA8DA,GAE3E,GAAID,GAAgBD,GAAmC,kBAAXW,EAAqB,CAAC,IAAD,kBAC3DC,EAAmBf,EAAMP,MAAQO,EAAMP,MAApB,UAA4BO,EAAMa,eAAlC,iBAA4B,OAAAb,EAAgBG,UAA5C,iBAA4B,EAAiC,UAA7D,aAA4B,SAAsCA,GACzD,oBAArBY,IACTA,EAAmBC,SAAQ,UAACD,SAAD,iBAAC,EAAmBZ,UAApB,iBAAC,EAAmCc,eAApC,aAAC,SAA6CT,KAC3E,IAAIU,EAAOJ,EAASC,EACpBD,EAAS,qDAAOC,SAAP,aAAO,EAAkBE,QAAQT,UAAjC,QAA8CO,EAAkBG,EAAO,eAAC,IAAD,CAAWC,MAAOD,EAAO,EAAI,UAAY,QAAzC,eAAqDA,EAAO,EAAI,IAAM,IAAQ,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMD,eAAN,oBAAAC,EAAgBV,KAAaU,EAAvG,OAA4H,MAE9M,OAAOJ,KAER,CAACV,EAAcI,EAAUL,EAAeH,EAAOK,IAE5Ce,EAAYb,mBAAQ,kBAAMI,IAAUC,oBAAoBZ,EAAO,OAAQK,KAAQ,CAACL,EAAOK,IACvFgB,EAAed,mBAAQ,kBAAMI,IAAUC,oBAAoBZ,EAAO,UAAWK,KAAQ,CAACL,EAAOK,IAE7FiB,EAAqBf,mBAAQ,WACjC,IAAMgB,EAAmBZ,IAAUC,oBAAoBZ,EAAO,cAAeK,GAC7E,OAAOkB,EAAmB,cAAC,IAAD,CAAkBC,UAAU,MAAMC,MAAO,cAAC,IAAD,UAAaF,IAAtD,SACxB,cAAC,IAAD,CAAKG,UAAU,OAAOC,GAAI,CAAEC,OAAQ,OAAQC,GAAI,GAAhD,SAAqD,cAAC,IAAD,CAAiBC,KAAMC,UACxD,OACrB,CAAC/B,EAAOK,IAEL2B,EAAOzB,mBAAQ,kBAAMI,IAAUC,oBAAoBZ,EAAO,OAAQK,KAAQ,CAACL,EAAOK,IAExF,OAAKC,EACE,eAAC,IAAD,CAAUqB,GAAI,CAAEM,QAAS,OAAQC,eAAgB,iBAAjD,UACL,iCAAM,4BAAId,IAAeE,KACzB,eAAC,IAAD,CAAYH,MAAK,UAAKE,EAAL,SAAjB,2BAA4CX,QAA5C,IAA4CA,GAA5C,UAA4CA,EAAUO,eAAtD,aAA4C,OAAAP,EAAoBF,UAAhE,QAA6EE,EAAUsB,QAHpE,KAMhB,IAAMG,EAAmBC,YAAOC,IAAPD,EAAa,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC3DC,aAAcD,EAAME,MAAMD,aAC1BE,SAAU,SACVC,OAAQ,EACR,wCAAyC,CACvCC,gBAAiBL,EAAMM,QAAQC,YAAYC,MAE7C,uCAAwC,CACtCH,gBAAiBL,EAAMM,QAAQG,cAAcD,W,iMC/CpCE,EAAkBZ,YAAOa,IAAPb,EAAkB,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC/DK,gBAAiBL,EAAMM,QAAQM,QAAQJ,KACvCK,WAAY,gBACZ,UAAW,CACTR,gBAAiBL,EAAMM,QAAQM,QAAQE,MAEzC,gBAAiB,CACfT,gBAAiBL,EAAMM,QAAQM,QAAQE,MAEzC,iBAAkB,CAChBT,gBAAiBL,EAAMM,QAAQM,QAAQE,UAK9BC,EAAsCjB,YAAO,SAAU,CAClEkB,kBAAmB,SAACC,GAAD,OAAW,CAAC,YAAa,gBAAiB,qBAAsB,oBAAoB3D,SAAS2D,KAD/DnB,EAEhD,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACjBK,gBAAiBL,EAAMM,QAAQM,QAAQJ,KACvCU,QAAS,EACTf,SAAU,SACVgB,OAAQ,OACRlB,aAAcD,EAAME,MAAMD,aAC1B,QAAS,CACPmB,MAAO,OACPC,OAAQ,QAEV,8CAA+C,CAC7CC,qBAAsB,EACtBC,wBAAyB,GAE3B,+CAAgD,CAC9CC,oBAAqB,EACrBC,uBAAwB,OAIb,SAASC,EAAT,GAAmG,IAAtEvE,EAAqE,EAArEA,MAAOwE,EAA8D,EAA9DA,SAA8D,IAApDC,gBAAoD,aAAlCC,aAAkC,SAAhBC,EAAgB,yDACrFC,mBAAS,IAD4E,mBACxGC,EADwG,KACjGC,EADiG,KAEzGC,EAAavF,uBACjB,WACE,GAAc,KAAVqF,EAAc,OAAOL,EAAS,GAClC,IAAMQ,EAAYN,EAAQO,WAAa1D,SACvCiD,EAASQ,EAAUH,MAErB,CAACL,EAAUK,EAAOH,IAEpBQ,qBAAU,wBAAMJ,EAAQ,iBAAC9E,QAAD,IAACA,OAAD,EAACA,EAAOmF,kBAAR,QAAsB,MAAK,CAACnF,EAAO8E,IAC3D,IAAMM,EAAgB5F,uBAAY,SAAA6F,GAAC,OAAIP,EAASO,EAAEC,OAAOtF,SAAQ,CAAC8E,IAC5DS,EAAY/F,uBAAY,SAAA6F,GAAC,MAAc,UAAVA,EAAEG,KAAmBT,MAAc,CAACA,IACvE,OAAO,cAACxB,EAAD,aACLvD,MAAO6E,EACPY,aAAW,eACX/F,KAAK,SACL8E,SAAUY,EACVM,OAAQX,EACRN,SAAUA,EACVkB,UAAWJ,GACPZ,M,mQCjDO,SAASiB,EAAT,GAA2J,IAAD,EAAvH5F,EAAuH,EAAvHA,MAAOwE,EAAgH,EAAhHA,SAAgH,IAAtGqB,iBAAsG,aAAnFC,kBAAmF,aAA/DC,cAA+D,MAAtD,kBAAM,GAAgD,EAAvCpB,EAAuC,sEAC/JqB,EAAMC,YAAe,MAArBD,EACF3G,EAAWC,qBAAWC,KACtB2G,EAAkBC,YAAWC,IAAeC,SAAU,IACtDC,EAAiBH,YAAWC,IAAeG,IAAIvG,GAAQ,CAACA,IACxDwG,EAAgBnH,EAASoH,eAAeV,QAAO,SAAAW,GAAE,OAAmB,OAAfR,QAAe,IAAfA,OAAA,EAAAA,EAAkBQ,KAAOX,EAAOG,EAAgBQ,OAAMC,OACjH,OAAO,eAAC,IAAD,2BACDhC,GADC,IAEL3C,MAAK,iBAAEsE,QAAF,IAAEA,OAAF,EAAEA,EAAgBM,YAAlB,QAAuCZ,EAAZH,EAAS,oEACzCnE,MAAO1B,EAAQ,UAAY,UAC3B6G,WAAyB,OAAdP,QAAc,IAAdA,OAAA,EAAAA,EAAgBQ,UAAW,cAAC,IAAD,CAAWC,IAAKT,EAAeU,eAAoBnB,EAAY,cAAC,IAAD,IAAqB,cAAC,IAAD,IAJrH,WAKHC,IAAeD,EAAY,eAAC,IAAD,CAAUoB,QAAS,kBAAMzC,EAAS,KAAK0C,SAAoB,KAAVlH,EAAcyE,SAAoB,KAAVzE,EAAzE,UAC3B,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAYmH,QAAQ,UAAUC,QAAM,EAApC,SACGpB,EADH,wCAGY,eAAC,IAAD,CAAUiB,QAAS,kBAAMzC,EAAS,KAAK0C,SAAoB,KAAVlH,EAAcyE,SAAoB,KAAVzE,EAAzE,UACZ,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAYmH,QAAQ,UAAUC,QAAM,EAApC,SACGpB,EADH,yCAIAF,GAAc,cAAC,IAAD,GAAa,SAC1BI,GAAmBmB,EAAuBnB,EAAiBM,EAAehC,EAAUxE,OAKpF,SAASqH,EAAuBnB,EAA2DM,EAA+BhC,GAAqF,IAA/C8C,EAA8C,uDAAJ,GAC/M,OAAOd,EAAce,KAAI,SAAAnI,GAAY,aACnC,eAAC,IAAD,CAAU6H,QAAS,kBAAMzC,EAASpF,IAAkC8H,SAAUI,IAAyBlI,EAAcqF,SAAU6C,IAAyBlI,EAAxJ,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAW2H,IAAKb,EAAgB9G,GAAc4H,iBAEhD,cAAC,IAAD,CAAYG,QAAQ,UAAUC,QAAM,EAApC,gBACGlB,QADH,IACGA,GADH,UACGA,EAAkB9G,UADrB,aACG,EAAiCwH,SALgBxH,Q,6FCnDpDoI,EAAmB7E,aAAO,gBAAG8E,EAAH,EAAGA,UAAc9C,EAAjB,oCAC9B,cAAC,IAAD,2BAAaA,GAAb,IAAoB+C,OAAK,EAACC,QAAS,CAAEC,OAAQH,QADtB9E,EAEtB,kBAAGE,EAAH,EAAGA,MAAH,uCACMgF,IAAeH,OAAU,CAC9BhG,MAAOmB,EAAMM,QAAQ2E,OAAOC,QAF7B,2BAIMF,IAAeG,SAAY,CAChC9E,gBAAiBL,EAAMM,QAAQ2E,OAAOC,QALvC,KAQYP,O,gNCHA,SAASS,EAAT,GAC8K,IAD/IC,EAC8I,EAD9IA,YAAaC,EACiI,EADjIA,iBAAkBC,EAC+G,EAD/GA,eAAgBxB,EAC+F,EAD/FA,KAC+F,IADzFnC,gBACyF,SADvE4D,EACuE,EADvEA,MACuE,cACxIF,EADwI,UACnLG,OADmL,MAClK,EADkK,EAC/JC,EAD+J,KAE1L,IAAKL,EAAa,OAAOtB,EACzB,GAAI,WAAYsB,EAAa,CAC3B,IAAMrD,EAAQ0D,EAAsBL,EAAYM,OAAOD,GAAuBE,OAAOC,OAAOR,EAAYM,QAAQ,GAC1GG,EAA0B,IAAnBL,EAAuB,aAAe,iCAAOzD,EAAM+B,KAAb,IAAqBgC,YAAW/D,EAAOgE,SAAUR,GAAmB,EAA/C,YAAyDC,EAAzD,iBAAgFA,EAAiB,EAAI,IAAM,IAAQ,MACrLQ,EAAQ,cAACC,EAAA,EAAD,CAASrH,MAA0B,IAAnB4G,EAAuB,YAAc,UAArD,SAAiEK,IAC/E,OAAO,eAACK,EAAA,EAAD,CAAgBC,KAAK,QAAQjH,MAAO,iCAAO4E,EAAP,IAAckC,KAAerE,SAAUA,EAA3E,UACL,cAACyE,EAAA,EAAD,CAAUjC,QAAS,kBAAMmB,EAAe,CAAC,KAAKlB,SAA6B,IAAnBoB,EAAsB7D,SAA6B,IAAnB6D,EAAxF,SACE,gDAEF,cAACa,EAAA,EAAD,IACCV,OAAOW,QAAQlB,EAAYM,QAAQa,SAAQ,WAA2BC,GAA3B,uBAAEC,EAAF,KAAYC,EAAZ,YAC1C,YAAIC,MAAMD,EAAQX,UAAUa,QAAQnC,KAAI,SAAAoC,GAAC,OAAIA,EAAI,KAAGpC,KAAI,SAACqC,EAAON,GAAR,OACtD,eAACJ,EAAA,EAAD,CAA6BjC,QAAS,kBAAMmB,EAAe,CAACwB,EAAOL,KAAYrC,SAAUqB,IAAwBgB,GAAYjB,IAAmBsB,EAAOnF,SAAU8D,IAAwBgB,GAAYjB,IAAmBsB,EAAxN,UACGJ,EAAQ5C,KAAM4C,EAAQX,SAAW,EAAnB,YAA4Be,EAA5B,iBAA0CA,EAAQ,EAAI,IAAM,IAAO,KADrEL,EAAWD,YAMhC,IAAMT,EAAWD,YAAWV,EAAaW,SAAUR,GACnD,GAAIQ,EAAW,EAAG,CAEhB,IAAMC,EAAQ,cAACC,EAAA,EAAD,CAASrH,MAA0B,IAAnB4G,EAAuB,YAAc,UAArD,SAAiEA,EAAiB,EAAjB,UAAwBA,EAAxB,iBAA+CA,EAAiB,EAAI,IAAM,IAAO,eAChK,OAAO,eAACU,EAAA,EAAD,CAAgBC,KAAK,QAAQjH,MAAO,iCAAO4E,EAAP,IAAckC,KAAerE,SAAUA,EAA3E,UACL,cAACyE,EAAA,EAAD,CAAUjC,QAAS,kBAAMmB,EAAe,CAAC,KAAKlB,SAA6B,IAAnBoB,EAAsB7D,SAA6B,IAAnB6D,EAAxF,SACE,gDAEF,cAACa,EAAA,EAAD,IACC,YAAIM,MAAMZ,GAAUa,QAAQnC,KAAI,SAAAoC,GAAC,OAAIA,EAAI,KAAGpC,KAAI,SAAAqC,GAAK,OACpD,cAACV,EAAA,EAAD,CAAsBjC,QAAS,kBAAMmB,EAAe,CAACwB,KAAS1C,SAAUoB,IAAmBsB,EAAOnF,SAAU6D,IAAmBsB,EAA/H,mBACMA,EADN,iBACoBA,EAAQ,EAAI,IAAM,KADvBA,SAId,OAAiB,IAAbf,EACF,cAACgB,EAAA,EAAD,CAAQZ,KAAK,QAAQhC,QAAS,kBAAMmB,EAAe,CAACE,EAAiB,EAAI,KAAK7D,SAAUA,EAAUoC,UAAWyB,EAAiB,cAACwB,EAAA,EAAD,IAAe,cAACC,EAAA,EAAD,IAA7I,SACJnD,IAIA,K,wCChCM,SAASoD,EAAT,GAAqF,IAAvD9B,EAAsD,EAAtDA,YAAa9I,EAAyC,EAAzCA,aAAyC,EAC7DE,qBAAWkB,KAAvCC,EADyF,EACzFA,SAAUC,EAD+E,EAC/EA,cACZuJ,EAAoB9K,YAAoBC,GACxCiJ,EAAQ5H,GAAsBC,EAC9BG,EAAUC,mBAAQ,kBAAMoJ,IAAYrJ,QAAQqH,EAAaG,KAAQ,CAACH,EAAaG,IAJY,EAKNvH,mBAAQ,kBAAMD,GAAWqJ,IAAYC,QAAQjC,EAAaG,OAAO+B,KAAY,CAACvJ,EAASqH,EAAaG,IAL9F,IAKzFA,MAAOgC,OALkF,MAK/D,GAL+D,MAK3DC,OAAQC,OALmD,MAK/B,GAL+B,EAK3BpC,EAL2B,EAK3BA,iBAChEqC,EAAgB1J,mBAAQ,kBAAMD,GAAO,sBAAQ4J,YAAcJ,EAAkBhC,IAAxC,YAAmDkC,MAAoB,CAAC1J,EAASwJ,EAAkBhC,EAAOkC,IAC/InC,EAAiB5I,uBAAY,SAAAkL,GACjC,GAAKrC,EAAL,CAD0C,kBAEbqC,EAFa,kBAElB,EAFkB,GAM/BxC,EAAYwB,MACrBiB,YAAkBtC,EAAMuC,kBAAmB1C,EAAawB,KAAMgB,IAH9DG,YAAexC,EAAMuC,kBAAmB1C,EAAawB,MACrDoB,YAAgBzC,EAAMuC,oBAGxBX,EAAkB,CAAEW,kBAAmBvC,EAAMuC,uBAC5C,CAAC1C,EAAaG,EAAO4B,IAExB,OAAKpJ,GAAYwH,EACV,eAAC0C,EAAA,EAAD,WACL,cAACC,EAAA,EAAD,UACE,cAAC/C,EAAD,CACEC,YAAaA,EACbC,iBAAkBA,EAClBC,eAAgBA,EAChBxB,KAAMsB,EAAYtB,KAClByB,MAAOA,MAEX,cAAC/H,EAAA,EAAD,CAAkB4B,GAAI,CAAE+I,EAAG,GAA3B,SACGT,EAAcjD,KAAI,SAAChH,EAAO+I,GAAR,OAAc,cAAChJ,EAAA,EAAD,CAAsBC,MAAOA,GAAV+I,WAXzB,KCvBlB,SAAS4B,EAAT,GAA6E,IAAlDC,EAAiD,EAAjDA,SAAU/L,EAAuC,EAAvCA,aAAuC,EACrDE,qBAAWkB,KAAvCC,EADiF,EACjFA,SAAUC,EADuE,EACvEA,cACZE,EAAQH,GAAsBC,EACpC,OAAKE,EACE,qCAAMuK,QAAN,IAAMA,OAAN,EAAMA,EAAU5D,KAAI,SAAC6D,EAAS9B,GAAO,IAAD,IACzC,IAAK8B,EAAQvK,QAASD,GAAQ,OAAO,KACrC,IAAMyK,EAAazC,YAAWwC,EAAQzC,KAAM/H,GACtC0J,EAAM,UAAGc,EAAQd,cAAX,QAAqB,GACjC,OAAO,eAACgB,EAAA,EAAD,CAAyBpJ,GAAI,CAClCqJ,IAAK,EACL,QAAS,CACPC,GAAI,IAHD,UAML,8BAAMH,IACLf,EAAOmB,OAAS,GAAK,cAACnL,EAAA,EAAD,iBACnBgK,QADmB,IACnBA,GADmB,UACnBA,EAAQ/C,WADW,aACnB,OAAA+C,GAAc,SAAC/J,EAAO+I,GAAR,OAAc,cAAChJ,EAAA,EAAD,CAAsBC,MAAOA,GAAV+I,UAE/C8B,EAAQlD,aAAe,cAAC8B,EAAD,CAAoB9B,YAAakD,EAAQlD,YAAa9I,aAAcA,MAV/E,UAAYkK,QALZ,O,6ECXfoC,EAAe/I,aAAO,SAACgC,GACEA,EAArBgH,OAD+C,IACpCC,EADmC,YACzBjH,EADyB,YAEtD,OAAO,cAAC,IAAD,eAAgBiH,MAFJjJ,EAGlB,gBAAGE,EAAH,EAAGA,MAAH,MAAwB,CACzBgJ,UADC,EAAUF,OAC2B,iBAAjB,eACrBG,WAAY,OACZpI,WAAab,EAAckJ,YAAYC,OAAO,YAAa,CACzDC,SAAWpJ,EAAckJ,YAAYE,SAASC,eAInCR,O,iCChBf,aAEMS,EAAYxJ,YAAO,MAAPA,EAAc,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC9CL,QAAS,eACTyB,MAAO,OACPC,OAAO,QACPkI,WAAY,EACZC,cAAe,cACfC,UAAWzJ,EAAM0J,SAAS,GAC1BT,WAAYjJ,EAAM0J,SAAS,MAC3BC,YAAa3J,EAAM0J,SAAS,GAC5BE,aAAc5J,EAAM0J,SAAS,OAGhBJ,O,oICRA,SAASO,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAC7B3G,EAAMC,YAAe,MAArBD,EACFM,EAAiBH,YAAWC,IAAeG,IAAf,OAAmBoG,QAAnB,IAAmBA,IAAY,IAAK,CAACA,IACvE,OAAO,cAAC,IAAD,CAAY1K,UAAU,OAAtB,UACU,OAAdqE,QAAc,IAAdA,OAAA,EAAAA,EAAgBM,MAAON,EAAesG,aAAe,iCAAM,cAAC,IAAD,CAAgB1K,GAAI,CAAEmK,cAAe,iBAA3C,IAAgErG,EAAhE,0C,+GCRpD6G,EAAiBlK,YAAOkH,IAAPlH,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACpD,iBAAkB,CAChBK,gBAAiBL,EAAMM,QAAQM,QAAQE,KACvCjC,MAAOmB,EAAMM,QAAQwF,KAAKmE,eAIf,SAASC,EAAT,GAAoE,IAA9CC,EAA6C,EAA7CA,SAAuBrI,GAAsB,EAAnCF,SAAmC,wCAChF,OAAO,cAACoI,EAAD,2BAAoBlI,GAApB,IAA2BF,UAAQ,EAAnC,SACJuI,O,iCCXL,gIAaA,SAASC,EAAT,GAA+F,IAAD,QAAnEC,aAAmE,MAA3D,GAA2D,EAAvDC,EAAuD,EAAvDA,IAAKC,EAAkD,EAAlDA,OAAkD,IAA1CpM,aAA0C,MAAlC,EAAkC,MAA/BuB,YAA+B,MAAxB,GAAwB,MAApB8K,gBAAoB,SACtE,qBAAXD,GAAyC,kBAARD,IAC1CC,EAASD,EACTA,OAAM/C,GAER,IAAM3I,OAAe2I,IAAR+C,EAAoBA,EAAMC,EAAS,EAC5CE,EAAuB,GAAIC,EAAwB,GACnDH,GAAmB,IAAT3L,EAAY6L,EAAO,UAAGF,SAAH,aAAG,EAAQ5L,QAAQR,QAChCoJ,IAAXgD,IAAsBE,EAAO,UAAGH,SAAH,aAAG,EAAK3L,QAAQR,IAClDsM,IAASA,EAAU,iCAAOA,EAAS/K,MAC1B,IAATd,IAAY8L,EAAW,eAAC,IAAD,CAAW7L,MAAOD,EAAO,EAAI,UAAY,QAAzC,UAAmDA,EAAO,EAAI,IAAM,GAApE,OAAwEA,QAAxE,IAAwEA,OAAxE,EAAwEA,EAAMD,QAAQR,GAAQuB,MACzH,IAAMiL,EAAY,qCAAGF,EAASC,KAC9B,OAAO,eAAC,IAAD,CAAK/K,QAAQ,OAAOC,eAAe,gBAAnC,UACL,cAAC,IAAD,UAAayK,IACb,cAAC,IAAD,UACGG,EAAW,iCAASG,IAAsBA,OAUlC,SAASC,EAAT,GAAyF,IAAlE5N,EAAiE,EAAjEA,UAAWa,EAAsD,EAAtDA,cAAeD,EAAuC,EAAvCA,SAAUV,EAA6B,EAA7BA,QAClEqB,EAAU+E,YAAWsD,MAAMiE,QAAQ3N,GAAW4N,IAAQpH,IAAIxG,QAAWqK,EAAW,CAACrK,IADc,EAG/Ce,mBAAQ,WAC5D,IAAIqM,EAAKC,EAAQpM,EAAOuB,EAAM2K,EAAqB,GACnD,GAAuB,kBAAZnN,EAAsB,CAC/B,GAAIU,GAAYC,EAAe,CAAC,IAAD,IAG7ByM,EAAG,iBAAG1M,QAAH,IAAGA,OAAH,EAAGA,EAAWV,UAAd,QAA0B,EAC7BqN,EAAM,iBAAG1M,QAAH,IAAGA,OAAH,EAAGA,EAAgBX,UAAnB,QAA+B,MAChC,CAAC,IAAD,EACCa,EAAQH,GAAsBC,EAEpCyM,EAAG,iBAAGvM,QAAH,IAAGA,OAAH,EAAGA,EAAQb,UAAX,QAAuB,EAE1BqN,EAAShN,YAAmBP,GAAWE,GACnCa,IACc,YAAZb,EACFqN,EAASxM,EAAMgN,YACI,aAAZ7N,EACPqN,EAASxM,EAAMiN,aACI,aAAZ9N,IACPqN,EAASxM,EAAMkN,aAAelN,EAAMmN,YAG1CxL,EAAOyL,IAAKC,YAAYlO,GACxBiB,EAAQgN,IAAKE,UAAUnO,GACvBmN,EAAQ,iCAAOiB,IAASpO,GAAhB,IAA2BiO,IAAKI,YAAYrO,WAC/C,GAAIqB,EAAS,CAAC,IAAD,IAQa,IAPzBR,EAAQH,GAAsBC,EAC9BH,EAASa,EAAgBb,MACzB8N,EAAenN,IAAUC,oBAAoBZ,EAAO,UAAWK,GAKrE,GAJAsM,EAAQ,cAAC,IAAD,CAAWxL,MAAO2M,EAAlB,SAAkCnN,IAAUC,oBAAoBZ,EAAO,OAAQK,KACvFI,EAAQE,IAAUC,oBAAoBZ,EAAO,QAASK,EAAO,GAC7D2B,EAAOrB,IAAUC,oBAAoBZ,EAAO,OAAQK,EAAO,IAC3DuM,EAAG,UAAGjM,IAAUC,oBAAoBZ,EAAO,UAAWK,UAAnD,iBAAG,EAAyD,UAA5D,aAAG,SAA8DA,GAChEH,GAAYC,EACd0M,EAAM,UAAGlM,IAAUC,oBAAoBZ,EAAO,UAAWG,UAAnD,iBAAG,EAAiE,UAApE,aAAG,SAAsEA,GAGnF,MAAO,CAAEyM,MAAKC,SAAQpM,QAAOuB,OAAM2K,QAAOG,SAAUnM,IAAUoN,cAAczO,EAAWE,MACtF,CAACF,EAAWa,EAAeD,EAAUV,EAASqB,IAvCzC+L,EAH6F,EAG7FA,IAAKC,EAHwF,EAGxFA,OAAQpM,EAHgF,EAGhFA,MAAOuB,EAHyE,EAGzEA,KAAM2K,EAHmE,EAGnEA,MAAOG,EAH4D,EAG5DA,SAyCzC,OAAO,cAACJ,EAAD,CAAuBE,MAAKC,SAAQpM,QAAOuB,OAAM2K,MAAOA,EAAcG,e,mJCjEzEkB,EAAkB5L,YAAO6L,IAAP7L,CAAoB,CAC1CH,QAAS,SAGI,SAASiM,EAAT,GAAuK,IAAlJ7H,EAAiJ,EAAjJA,KAAMoG,EAA2I,EAA3IA,SAAUhN,EAAiI,EAAjIA,MAAO0O,EAA0H,EAA1HA,YAA0H,IAA7GC,oBAA6G,MAA9F,EAA8F,EAA3FC,EAA2F,EAA3FA,cAA2F,IAA5EC,eAA4E,aAA3DpK,gBAA2D,SAAzCqK,EAAyC,EAAzCA,QAAYC,EAA6B,uHAEnL,OAAO,eAACR,EAAD,2BAAqBQ,GAArB,cACJ/B,EACD,cAAC,IAAD,CAAY9K,GAAI,CAAE8M,WAAY,UAA9B,SACGpI,IAEH,cAAC,IAAD,CAAqC1E,GAAI,CAAE+M,UAAW,GAAIC,SAAU,GAApE,SACE,cAAC,IAAD,CACEhN,GAAI,CAAEiN,GAAI,GACVC,WAAY,CACVlN,GAAI,CAAEmN,UAAW,UAEnB3K,MAAOmK,EACPH,YAAaA,EACb1O,MAAOA,EACPwE,SAAUoK,EACVnK,SAAUA,EACV6K,aAAcT,EAAU,SAAMzE,MAGlC,cAAC,IAAD,CAAQnD,QAAS,kBAAM6H,EAAUA,IAAYF,EAAcD,IAAelK,SAAUA,GAAYzE,IAAU2O,EAA1G,SACE,cAAC,IAAD,Y,oZCjBAY,EAAmB,IAAIC,IAAIC,KAElB,SAASC,EAAT,GAA2J,IAAD,QAAlIC,EAAkI,EAAlIA,WAAYC,EAAsH,EAAtHA,YAAaC,EAAyG,EAAzGA,OAAQC,EAAiG,EAAjGA,SAAiG,IAAvFC,+BAAuF,MAA7D,EAA6D,MAA1DC,iBAA0D,MAA9CT,EAA8C,EAC/JvJ,GAAMC,YAAe,CAAC,aAAtBD,EACF3G,GAAWC,qBAAWC,KAF2I,GAGpHqF,wBAASwF,GAH2G,qBAGhK6F,GAHgK,MAG9IC,GAH8I,MAIvKhL,qBAAU,kBACRyK,EAAatQ,GAAS8Q,UAAUR,EAAYO,SAA0B9F,IACtE,CAACuF,EAAYO,GAAwB7Q,KACvC,IAAM+Q,GAAQjK,YAAWkK,IAAc9J,IAAd,iBAAmBqJ,QAAnB,IAAmBA,IAAgBD,EAAatQ,GAASiR,QAAQX,QAAcvF,SAA/E,aAAkB,EAA0EmG,QAAS,CAACX,EAAaD,IAGtIa,IAAYZ,GAAevQ,KAAaoR,IACxCC,GAAG,OAAGd,QAAH,IAAGA,IAAeK,GAC3B,IAAKS,GAAK,OAAO,KAZsJ,IAc/J9Q,GAAoF8Q,GAApF9Q,GAAI+Q,GAAgFD,GAAhFC,KAAMC,GAA0EF,GAA1EE,QAASC,GAAiEH,GAAjEG,OAAQC,GAAyDJ,GAAzDI,MAAOC,GAAkDL,GAAlDK,YAAaC,GAAqCN,GAArCM,SAAUC,GAA2BP,GAA3BO,QAdsG,GAc3EP,GAAlB/D,iBAd6F,OAclF,GAdkF,GAejKuE,GAAgBC,KAAKC,IAAID,KAAKE,IAAItB,EAAkC,EAATc,IAAaC,IACxEQ,GAAe,QAAUH,KAAKI,MAAMJ,KAAKC,IAAIN,GAAO,GAAK,GAAK,GAC9DU,GAAc,cAAC,IAAD,CAAW9P,MAAOwP,KAAkBJ,GAAQ,eAAY1G,EAAxD,SAAoEqH,YAAmB,UAACC,IAASC,cAAcZ,GAAaF,GAAQK,WAA7C,QAA+D,EAAGlD,IAAKC,YAAY8C,OAjBvB,GAkB1HW,IAASE,sBAAsBlB,GAAKV,GAAzE6B,GAlB+J,GAkB/JA,kBAAmBC,GAlB4I,GAkB5IA,cACrBC,GAAkC,IAAlBD,GAChBE,IAAgB,OAAL5B,SAAK,IAALA,QAAA,EAAAA,GAAO6B,YAAYrB,MAAY,qBAC1CsB,GAAQ,OAAG9B,SAAH,IAAGA,QAAH,EAAGA,GAAO+B,YAAYvB,IAC9BwB,GAAkBF,IAAY,cAAC,IAAD,CAAkBnQ,UAAU,MAAMC,MAAO,cAAC,IAAD,UAAakQ,KAAtD,SAClC,+BAAM,cAAC,IAAD,CAAiB7P,KAAMgQ,UAEzBC,GAAU,OAAGlC,SAAH,IAAGA,QAAH,EAAGA,GAAOkC,WACpBC,GAAiBnC,IAASkC,IAAc,cAAC,IAAD,CAAkBvQ,UAAU,MAAMC,MAC9E,+BACGyG,OAAOiB,KAAK4I,IAAY/K,KAAI,SAAAiL,GAAS,OAAI,iCACxC,cAAC,IAAD,CAAYrL,QAAQ,KAApB,SAAyB,cAAC,IAAD,CAASzF,MAAM,UAAf,SAA0BsE,GAAE,eAAgB,CAAEyM,OAAQD,QAC/E,cAAC,IAAD,UAAapC,GAAMsC,cAAcF,OAFkBA,QAFX,SAQ5C,+BAAM,cAAC,IAAD,CAAiBnQ,KAAMgQ,UAG/B,OAAO,cAAC,WAAD,CAAUM,SAAU,cAAC,IAAD,CAAUxL,QAAQ,cAAcjF,GAAI,CAAE+B,MAAO,OAAQC,OAAQ,OAAQ0O,UAAW,OAApG,SACL,eAAC,IAAD,CAAW1Q,GAAI,CAAEgC,OAAQ,OAAQ1B,QAAS,OAAQqQ,cAAe,UAAjE,UACE,eAAC,IAAD,CAAapL,UAAS,eAAUoJ,GAAV,QAAwB3O,GAAI,CAAE4Q,GAAI,GAAxD,UACE,eAAC,IAAD,CAAK7Q,UAAU,MAAMC,GAAI,CAAEM,QAAS,OAAQuQ,WAAY,UAAxD,UACE,cAAC,IAAD,CAAM9J,KAAK,QAAQiE,MAAO,6CAAc4D,MAAmBpP,MAAO4P,KAClE,eAAC,IAAD,CAAYpP,GAAI,CAAE8Q,GAAI,EAAG9D,SAAU,GAAnC,UAAyC8C,GAAzC,IAAoDI,MACpD,cAAC,IAAD,CAAY1Q,MAAM,UAAU+C,UAAW+L,GAAUvJ,QAAS,kBAAM5H,GAAS4T,UAAU,CAAEtC,MAAOA,IAAQ/Q,KAApG,SACG+Q,GAAO,cAAC,IAAD,IAAW,cAAC,IAAD,SAGvB,eAAC,IAAD,CAAMuC,WAAS,EAAChR,GAAI,CAAEiR,SAAU,UAAhC,UACE,eAAC,IAAD,CAAMC,MAAI,EAAClE,SAAU,EAArB,UACE,cAAC,IAAD,CAAYxN,MAAM,iBAAiByF,QAAQ,QAA3C,SACE,cAAC,IAAD,CAAkByJ,QAASA,OAE7B,cAAC,IAAD,CAAYzJ,QAAQ,KAApB,SACG6G,IAAKI,YAAY2C,MAEpB,cAAC,IAAD,CAAY5J,QAAQ,KAApB,SACE,iCAASqK,OAEX,cAAC,IAAD,CAAO6B,MAAOxC,GAAQyC,SAAO,OAG/B,cAAC,IAAD,CAAMF,MAAI,EAACG,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC,IAAD,CACEvR,UAAU,MACVwR,MAAK,iBAAErD,SAAF,IAAEA,QAAF,EAAEA,GAAOsD,UAAU9C,WAAnB,QAA+B,GACpC3M,MAAM,OACNC,OAAO,iBAKf,eAAC,IAAD,CAAahC,GAAI,CAAEgN,SAAU,EAAG1M,QAAS,OAAQqQ,cAAe,SAAUc,GAAI,EAAGpI,GAAI,GAArF,UACGyF,GAASzJ,KAAI,SAACqM,EAAsBtK,GAAO,IAAD,MACzC,IAAKsK,EAAK5T,MAAO,OAAO,KACxB,IAAM6T,EAAQ,oBAAGD,EAAKE,aAAR,aAAG,EAAYrI,cAAf,QAAyB,EACjCsI,EAAS,cAAUC,YAAMH,EAAU,EAAG,IACtCI,EAAU,UAAGL,EAAKK,kBAAR,QAAsB,EAChCC,EAAa,GAAOD,EAAa,IAAO,GACxCE,EAAWnG,IAAKI,YAAYwF,EAAKpO,KACvC,OAAQ,eAAC,IAAD,CAAatD,GAAI,CAAEM,QAAS,QAA5B,UACN,eAAC,IAAD,CAAKN,GAAI,CAAEgN,SAAU,GAArB,UACE,cAAC,IAAD,CAASxN,MAAQmS,EAAWE,EAAY,QAAiB7R,GAAI,CAAEkS,GAAI,GAAnE,SAAwE,iCAASP,GAAsB,QACvG,eAAC,IAAD,CAAYnS,MAAQmS,EAAQ,UAAME,EAAN,SAAyB,aAAsB9R,UAAU,OAArF,UAA6FkS,EAA7F,WAA2G1C,YAAoBmC,EAAK5T,MAAOgO,IAAKC,YAAY2F,EAAKpO,aAEnK,cAAC,IAAD,CAAYtD,GAAI,CAAEmS,QAASH,GAA3B,SAA0CN,EAAKpO,KAAOwK,EAAUsE,IAAIV,EAAKpO,KAAOiM,YAAoBwC,EAAY,OAAS,QALzG3K,MAQpB,eAAC,IAAD,CAAKpH,GAAI,CAAEM,QAAS,OAAQ+R,GAAI,GAAhC,UACE,cAAC,IAAD,CAAY7S,MAAM,iBAAiBO,UAAU,OAAOkF,QAAQ,UAAUjF,GAAI,CAAEgN,SAAU,GAAtF,SAA4FlJ,GAA5F,4CACA,cAAC,IAAD,CAAchG,MAAO6R,GAAmB2C,MAAOzC,QAEhDF,KAAsBC,IAAiB,eAAC,IAAD,CAAK5P,GAAI,CAAEM,QAAS,OAAQgJ,GAAI,GAAhC,UACtC,cAAC,IAAD,CAAY9J,MAAM,iBAAiBO,UAAU,OAAOkF,QAAQ,UAAUjF,GAAI,CAAEgN,SAAU,GAAtF,SAA4FlJ,GAA5F,4CACA,cAAC,IAAD,CAAchG,MAAO8R,GAAe0C,MAAOzC,QAE7C,cAAC,IAAD,CAAK7C,SAAU,IACf,eAAC,IAAD,CAAYxN,MAAM,eAAlB,2BAAkC0O,SAAlC,IAAkCA,QAAlC,EAAkCA,GAAOxJ,YAAzC,QAAiD,eAAjD,IAAkE2L,SAEpE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMW,WAAS,EAAChR,GAAI,CAAEiR,SAAU,UAAhC,UACE,cAAC,IAAD,CAAMC,MAAI,EAACG,GAAG,OAAOkB,WAAY,EAAjC,SACGjE,GACC,cAAC,IAAD,CAAyBvH,KAAK,QAAQpD,WAAS,EAAC7F,MAAO2M,GAAUnI,SA9FzD,SAACkQ,GAAD,OAAgCrV,GAASsV,eAAehF,EAAa+E,MA8FgB,cAAC,IAAD,CAAc/H,SAAUA,OAEzH,cAAC,IAAD,CAAMyG,MAAI,EAAClE,SAAU,EAAGhN,GAAI,CAAEkS,GAAI,KACjC5D,IAAY,cAAC,IAAD,CAAM4C,MAAI,EAACG,GAAG,OAAd,SACX,eAAC,IAAD,CAAarR,GAAI,CAAEgC,OAAQ,QAA3B,YACK2L,GAAU,cAAC,IAAD,CAAQnO,MAAM,OAAOuF,QAAS,kBAAM4I,EAAOjQ,KAAKqJ,KAAK,QAArD,SACX,cAAC,IAAD,CAAiB5G,KAAMuS,IAAQnN,UAAU,YAE3C,cAAC,IAAD,CAASzF,MAAO,cAAC,IAAD,UAAagE,GAAb,8CAAkDjE,UAAU,MAAM2F,OAAK,EAAvF,SACE,cAAC,IAAD,CAAQT,QAAS,kBAAM5H,GAAS4T,UAAU,CAAEhC,SAAUA,IAAWrR,KAAK8B,MAAOuP,GAAU,QAAU,UAAWhI,KAAK,QAAjH,SACE,cAAC,IAAD,CAAiB5G,KAAM4O,GAAU4D,IAAQC,IAAarN,UAAU,gBAGjEqI,GAAY,cAAC,IAAD,CAAQpO,MAAM,QAAQuH,KAAK,QAAQhC,QAAS,kBAAM6I,EAASlQ,KAAK6E,SAAUkM,GAA1E,SACb,cAAC,IAAD,CAAiBtO,KAAM0S,IAAYtN,UAAU,6B,sGC7I9C,SAASuN,EAAT,GAA+C,IAAvBhV,EAAsB,EAAtBA,MAAOwU,EAAe,EAAfA,MAAe,EACjB,kBAAVxU,EAC9B,CAAC,OAAD,OAAQgU,YAAM7C,KAAKI,MAAc,IAARvR,GAAgB,EAAG,EAAG,IAAMA,EAAMwB,QAAQ,GAAK,KAAO,CAAC,YAAaxB,GAFpC,mBACtDiV,EADsD,KAC1CtM,EAD0C,KAI3D,OADK6L,IAAOS,EAAa,SAClB,cAAC,IAAD,CAASvT,MAAOuT,EAAhB,SAA8BtM,M,0PCexB,SAASuM,EAAT,GAA2I,IAA3GC,EAA0G,EAA1GA,KAAMC,EAAoG,EAApGA,OAAQC,EAA4F,EAA5FA,SAA4F,IAAlFtP,cAAkF,MAAzE,kBAAM,GAAmE,EAA/CuP,EAA+C,EAA7DC,aACpFC,EAAerP,YAAWsP,IAAYpP,SAAU,IADiG,EAE/GzB,mBAAQ,OAAqB0Q,QAArB,IAAqBA,IAAoB,IAF8D,mBAEhJC,EAFgJ,KAElIG,EAFkI,KAIvJxQ,qBAAU,kBAAMoQ,GAAoBI,EAAgBJ,KAAmB,CAACA,IAExE,IAAMK,EAAgBH,EAAoB,YAAI,IAAIhG,IAAIoG,MAAgB7P,QAAO,SAAA8P,GAAI,OAAI9P,EAAOyP,EAAaK,OACtG9P,QAAO,SAAA8P,GAAS,IAAD,EACd,OAAIN,GAAgBA,KAAY,OAAKC,QAAL,IAAKA,GAAL,UAAKA,EAAeK,UAApB,aAAK,EAAsBC,eAG5DnP,MAAK,SAACoP,EAAGC,GAAJ,mBAAU,iBAACR,QAAD,IAACA,GAAD,UAACA,EAAeQ,UAAhB,aAAC,EAAmBnF,cAApB,QAA8B,IAA9B,iBAAoC2E,QAApC,IAAoCA,GAApC,UAAoCA,EAAeO,UAAnD,aAAoC,EAAmBlF,cAAvD,QAAiE,MAL9C,GAOrC,OAAK2E,EAEE,cAAC,IAAD,CAAcS,KAAMd,EAAMe,QAASd,EAAnC,SACL,eAAC,IAAD,WACE,cAAC,IAAD,CAAalT,GAAI,CAAE4Q,GAAI,GAAvB,SACE,eAAC,IAAD,CAAMI,WAAS,EAAf,UACE,cAAC,IAAD,CAAME,MAAI,EAAClE,SAAU,EAArB,SACE,cAAC,IAAD,CAAclP,MAAOuV,EAAc/Q,SAAUkR,EAAiBjR,WAAY6Q,EAAkBrM,KAAK,YAEnG,cAAC,IAAD,CAAMmK,MAAI,EAAV,SACE,cAAC,IAAD,CAAanM,QAASmO,WAI5B,cAAC,IAAD,IACA,cAAC,IAAD,UAAa,cAAC,IAAD,CAAMlC,WAAS,EAAC3G,QAAS,EAAzB,SACVoJ,EAAapO,KAAI,SAAA4O,GAAc,IAAD,EACvBC,EAAcZ,EAAaW,GACjC,OAAO,cAAC,IAAD,CAAM/C,MAAI,EAAiBiD,GAAI,EAAG7C,GAAI,EAAtC,SACL,cAAC,IAAD,CAAWtR,GAAI,CAAEgC,OAAQ,QAAzB,SACE,eAAC,IAAD,CAAgB+C,QAAS,WAAQmO,IAAUC,EAASc,IAAcjU,GAAI,CAAEM,QAAS,QAAjF,UACE,cAAC,IAAD,CAAKP,UAAU,MAAM8E,IAAKqP,EAAYE,IAAKpU,GAAI,CAAE+B,MAAO,IAAKC,OAAQ,QAAUuD,UAAS,gBAAW2O,EAAYvF,OAAvB,UACxF,eAAC,IAAD,CAAK3O,GAAI,CAAEgN,SAAU,EAAGC,GAAI,GAA5B,UACE,cAAC,IAAD,CAAYhI,QAAQ,YAApB,SAAiCiP,EAAYxP,OAC7C,eAAC,IAAD,WAAY,cAAC,IAAD,CAASG,IAAG,UAAEwP,IAAOC,mBAAT,aAAE,EAAqBJ,EAAYN,cAA3D,IAA2E,cAAC,IAAD,CAAOzC,MAAO+C,EAAYvF,OAAQyC,SAAO,gBANrG6C,UAa3B,cAAC,IAAD,IACA,cAAC,IAAD,CAAajU,GAAI,CAAE4Q,GAAI,GAAvB,SACE,cAAC,IAAD,CAAa2D,OAAK,EAACxP,QAASmO,WAjCR,O,yUCZb,SAASsB,EAAT,GAAiG,IAAD,EAA1EC,EAA0E,EAA1EA,SAAU1P,EAAgE,EAAhEA,QAAS4I,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,SAA+C,IAArC8G,gBAAqC,SACvGvX,EAAWC,qBAAWC,KADiF,EAE9DqF,wBAASwF,GAFqD,mBAEtGyM,EAFsG,KAEtFC,EAFsF,KAG7G5R,qBAAU,kBACRyR,EAAWtX,EAAS0X,aAAaJ,EAAUG,QAAwB1M,IACnE,CAACuM,EAAUG,EAAsBzX,IACnC,IAAM2X,EAASH,EACTT,EAAcjQ,aAAiB,OAAN6Q,QAAM,IAANA,OAAA,EAAAA,EAAQxR,MAAOiQ,IAAYlP,IAAIyQ,EAAOxR,KAAM,QAACwR,QAAD,IAACA,OAAD,EAACA,EAAQxR,MAE9EO,EAASvG,uBACb,SAACyX,GAAD,OAAwBA,EAAGC,iBAAH,OAAqBd,QAArB,IAAqBA,OAArB,EAAqBA,EAAaN,cAC1D,CAACM,IAGGe,EAAoB3X,uBACxB,SAAAwN,GAAQ,OAAI,cAAC,IAAD,CAAgB/F,QAAS,yBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAU0P,IAAWzU,GAAI,CAAEgC,OAAQ,QAAlE,SAA6E8I,MACzF,CAAC/F,EAAS0P,IAGNS,EAAc5X,uBAAY,SAACkV,GAAD,OAAgCrV,EAASM,kBAAkBgX,EAAUjC,KAAU,CAACrV,EAAUsX,IAC1H,IAAKK,IAAWZ,EAAa,OAAO,KApByE,IAqBrGtF,EAA0DkG,EAA1DlG,MAAOuG,EAAmDL,EAAnDK,UAAWC,EAAwCN,EAAxCM,WAAY1X,EAA4BoX,EAA5BpX,GArBuE,EAqB3CoX,EAAxBrK,gBArBmE,MAqBxD,GArBwD,EAqBpDgE,GAASqG,EAATrG,KAGnDuG,GAAgBd,EAAYN,WAC5ByB,GAAgBnB,EAAYoB,iBAAiB1G,EAAOuG,GAAW7V,QAAQwM,IAAKE,UAAU,QACtFuJ,GAAerB,EAAYsB,gBAC3BC,GAAevB,EAAYwB,gBAAgB9G,EAAOuG,GAAW7V,QAAQwM,IAAKE,UAAUuJ,KAEpFI,GAAU,CAAC,CAAC,YAAaN,MADR,OAAGnB,QAAH,IAAGA,OAAH,EAAGA,EAAa0B,cAElBD,GAAQE,KAAK,CAACN,GAAcE,KACjD,IAAMrB,GAAMe,EAAY,EAAZ,OAAgBjB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAaE,IAA7B,OAAmCF,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAa4B,UAE5D,OAAO,cAAC,WAAD,CAAUrF,SAAU,cAAC,IAAD,CAAUxL,QAAQ,cAAcjF,GAAI,CAAE+B,MAAO,OAAQC,OAAQ,OAAQ0O,UAAW,OAApG,SACL,cAAC,IAAD,CAAoBqF,YAAahR,EAASiR,QAASf,EAAnD,SACE,eAAC,IAAD,CAAWjV,GAAI,CAAEgC,OAAQ,OAAQ1B,QAAS,OAAQqQ,cAAe,UAAjE,UACE,sBAAKpL,UAAS,eAAU2O,EAAYvF,OAAtB,QAAd,UACE,cAAC,IAAD,CAAY7O,MAAOoU,EAAYxP,KAAMuR,OAAQ,cAAC,IAAD,CAASjW,GAAI,CAAEkW,SAAU,OAASrR,IAAG,UAAEwP,IAAOC,mBAAT,aAAE,EAAqBU,MAAoBmB,qBAAsB,CAAElR,QAAS,MAC5J1H,QAASwH,GAAW,cAAC,IAAD,CAAYvF,MAAM,UAAUuF,QAAS,kBAAM5H,EAASiZ,aAAa,CAAE3H,MAAOA,IAAQ/Q,IAAlF,SACjB+Q,GAAO,cAAC,IAAD,IAAW,cAAC,IAAD,QAEvB,eAAC,IAAD,CAAMuC,WAAS,EAAChR,GAAI,CAAEiR,SAAU,SAAUH,GAAI,GAA9C,UACE,eAAC,IAAD,CAAMI,MAAI,EAAClE,SAAU,EAArB,UACE,eAAC,IAAD,CAAYjN,UAAU,OAAOkF,QAAQ,KAArC,iBAA+C2J,KAC/C,eAAC,IAAD,CAAY7O,UAAU,OAAOkF,QAAQ,KAAKzF,MAAM,iBAAhD,cAAmE6W,IAAkBlB,MACrF,eAAC,IAAD,CAAYlQ,QAAQ,KAApB,wBAAoC,iCAASmQ,OAC7C,cAAC,IAAD,UAAY,cAAC,IAAD,CAAOjE,MAAO+C,EAAYvF,OAAQyC,SAAO,SAGvD,cAAC,IAAD,CAAMF,MAAI,EAACF,WAAS,EAACK,GAAI,EAAGiF,aAAa,WAAzC,SACE,cAAC,IAAD,CACEvW,UAAU,MACV8E,IAAKuP,GACLrS,MAAM,OACNC,OAAO,OACPhC,GAAI,CAAEuW,GAAI,kBAKlB,cAAC,IAAD,UACGZ,GAAQtQ,KAAI,YAAyB,IAAD,mBAAtBxH,EAAsB,KAAb2Y,EAAa,KAC/BnW,EAAOyL,IAAKC,YAAYlO,GAC5B,OAAO,eAAC,IAAD,CAAmBmC,GAAI,CAAEM,QAAS,QAAlC,UACL,eAAC,IAAD,CAAY0M,SAAU,EAAtB,UAA0Bf,IAASpO,GAAnC,IAA8CiO,IAAKI,YAAYrO,MAC/D,cAAC,IAAD,UAAa2Y,EAAUnW,MAFRxC,QAOrB,cAAC,IAAD,CAAKmP,SAAU,IACf,cAAC,IAAD,CAAahN,GAAI,CAAE4Q,GAAI,GAAvB,SACE,eAAC,IAAD,CAAMI,WAAS,EAAChR,GAAI,CAAEiR,SAAU,UAAhC,UACE,cAAC,IAAD,CAAMC,MAAI,EAACG,GAAG,OAAOkB,WAAY,EAAjC,SACGmC,EAAW,cAAC,IAAD,CAAyB3N,KAAK,QAAQnD,YAAU,EAACD,WAAS,EAAC7F,MAAO2M,EAAUnI,SAAU4S,EAAarR,OAAQA,IAAa,cAAC,IAAD,CAAc4G,SAAUA,MAE9J,cAAC,IAAD,CAAMyG,MAAI,EAAClE,SAAU,EAAGhN,GAAI,CAAEkS,GAAI,KAClC,cAAC,IAAD,CAAMhB,MAAI,EAACG,GAAG,OAAd,SACE,eAAC,IAAD,CAAarR,GAAI,CAAEgC,OAAQ,QAA3B,YACK2L,GAAU,cAAC,IAAD,CAAQnO,MAAM,OAAOuH,KAAK,QAAQhC,QAAS,kBAAM4I,EAAOjQ,IAAxD,SACX,cAAC,IAAD,CAAiByC,KAAMuS,IAAQnN,UAAU,cAExCqI,GAAY,cAAC,IAAD,CAAQpO,MAAM,QAAQuH,KAAK,QAAQhC,QAAS,kBAAM6I,EAASlQ,IAAK6E,WAAYkI,GAAYgE,GAAxF,SACb,cAAC,IAAD,CAAiBtO,KAAM0S,IAAYtN,UAAU,+B,iCC1G/D,sIAkBe,SAASkR,EAAT,GAAiF,IAArDpI,EAAoD,EAApDA,OAAQiC,EAA4C,EAA5CA,UAAW9R,EAAiC,EAAjCA,cAAeD,EAAkB,EAAlBA,SACrE2P,EAAQjK,YAAWkK,IAAc9J,IAAIgK,GAAS,CAACA,IACrD,IAAKH,EAAO,OAAO,KAEnB,IAAM/H,EAAK,OAAG5H,QAAH,IAAGA,IAAYC,EACpBkY,EAAgBxI,EAAMsC,cAAcF,GACpCqG,EAAWzI,EAAM0I,YAAYtG,EAAWnK,GACxC0Q,EAAiBtO,YAAcoO,EAAUxQ,GACzC2Q,EAAW5I,EAAM6I,kBAAkBzG,GACzC,OAAO,eAAC,IAAD,CAAKtQ,GAAI,CACduW,GAAI,EACJ,QAAS,CAAEjN,GAAI,IAFV,UAIL,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WAAY,eAAC,IAAD,CAAS9J,MAAM,UAAf,UAA0B8Q,EAA1B,UAAZ,IAAgEoG,OAElE,cAAC,IAAD,CAAkB1W,GAAI,CAAE+I,EAAG,GAA3B,SACG8N,EAAexR,KAAI,SAAChH,EAAO+I,GAAR,OAAc,cAAC,IAAD,CAAsB/I,MAAOA,GAAV+I,WAGxD0P,EAAW,cAAC,IAAD,CAAiB7N,SAAU6N,EAAU5Z,aAAciJ,EAAMjJ,eAAmB,U,mJChB7E,SAAS8Z,EAAT,GAAqK,IAArIC,EAAoI,EAApIA,OAAoI,IAA5HA,OAAU7S,EAAkH,EAAlHA,eAAgB8P,EAAkG,EAAlGA,YAAevW,EAAmF,EAAnFA,UAAWa,EAAwE,EAAxEA,cAAeD,EAAyD,EAAzDA,SAAU2Y,EAA+C,EAA/CA,iBAC5HxY,EAAQH,GAAsBC,EACpC,OAAO,cAAC,IAAD,CAAMwS,WAAS,EAAC3G,QAAS,EAAzB,SAA6B9D,OAAOW,QAAQgQ,GAAkB7R,KAAI,YAAuC,IAAD,mBAApC8R,EAAoC,KAAxBC,EAAwB,KACvGC,EAASC,YAAgCH,EAAYF,EAAb,OAAqBvY,QAArB,IAAqBA,OAArB,EAAqBA,EAAO6Y,cAC1E,OAAO,cAAC,IAAD,CAAMrG,MAAI,EAAkBG,GAAI,GAAImG,GAAI,EAAGlG,GAAI,EAAG6C,GAAI,EAAtD,SACL,cAAC,IAAD,CAAUnU,GAAI,CAAEgC,OAAQ,QAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYiD,QAAQ,YAAYwS,cAAY,EAA5C,SAA8CJ,IAC9C,cAAC,IAAD,CAASrX,GAAI,CAAEsJ,GAAI,EAAGoO,IAAK,KAC1BN,EAAc/R,KAAI,SAAAxH,GAAO,OAAI,cAAC,IAAD,CAAiDuG,iBAAgB8P,cAAavW,YAAWa,gBAAeD,WAAUV,WAAhG8Z,KAAKC,UAAU/Z,aAL9CsZ,U,mVCVpB,SAASU,EAAT,GAAyC,IAAdla,EAAa,EAAbA,UAAa,EACb+E,oBAAS,GADI,mBACtCoV,EADsC,KAC5BC,EAD4B,KAEvCC,EAAS1a,uBAAY,kBAAMya,GAAaD,KAAW,CAACC,EAAaD,IACvE,OAAO,eAAC,IAAD,WACL,cAAC,IAAD,UACE,eAAC,IAAD,CAAM9G,WAAS,EAAf,UACE,cAAC,IAAD,CAAME,MAAI,EAAClE,SAAU,EAAG6D,WAAW,SAAnC,SACE,eAAC,IAAD,CAAMG,WAAS,EAAC3G,QAAS,EAAzB,UACE,cAAC,IAAD,CAAM6G,MAAI,EAAV,SACE,cAAC,IAAD,CAAMnK,KAAK,QAAQvH,MAAM,UAAUwL,MAAO,iCAAOc,IAAKI,YAAY,cAAxB,IAAuC,iCAASlN,IAAUiZ,sBAAsBta,EAAW,uBAEtI,CAAC,YAAD,mBAAgBua,MAAa7S,KAAI,SAAA8S,GAAO,OAAI,cAAC,IAAD,CAAMjH,MAAI,EAAV,SAC3C,cAAC,IAAD,UAA2B,cAACkH,EAAD,CAAcD,QAASA,EAASxa,UAAWA,KAArDwa,IAD0CA,MAG7D,cAAC,IAAD,CAAMjH,MAAI,EAAV,SACE,eAAC,IAAD,4BAA2BlS,IAAUiZ,sBAAsBta,EAAW,gBAAtE,cAIN,cAAC,IAAD,CAAMuT,MAAI,EAAV,SACE,cAAC,IAAD,CACEzH,OAAQqO,EACR/S,QAASiT,EACTK,gBAAeP,EACfvU,aAAW,YACXwD,KAAK,QACL/G,GAAI,CAAEsY,EAAG,GANX,SAQE,cAAC,IAAD,aAKR,cAAC,IAAD,CAAUC,GAAIT,EAAUU,QAAQ,OAAOC,eAAa,EAApD,SACE,cAAC,IAAD,CAAazY,GAAI,CAAEyR,GAAI,GAAvB,SACE,cAACiH,EAAD,CAAa/a,UAAWA,WAMzB,SAASya,EAAT,GAAiG,IAAzEza,EAAwE,EAAxEA,UAAWwa,EAA6D,EAA7DA,QAClCQ,IAAW3Z,IAAUiZ,sBAAsBta,EAAhC,UAA8Cwa,EAA9C,mBACXS,EAAM,UAAMT,EAAN,cACNU,EAAUF,EAAS,iCAAQG,IAAkBX,GAA1B,aACvB,iCAAQW,IAAkBX,GAA1B,OAAuC,mCAASnZ,IAAUiZ,sBAAsBta,EAAWib,GAApD,UACzC,OAAO,cAAC,IAAD,CAAWpZ,MAAO2Y,EAAlB,SAA4BU,IAI9B,SAASH,EAAT,GAAwJ,IAAjI/a,EAAgI,EAAhIA,UAA6BT,EAAmG,EAArHS,UAAa2F,IAAwG,IAAlFyV,eAAkF,MAAxE,CAAE1H,GAAI,GAAIC,GAAI,GAA0D,EACtJvJ,EAAoB9K,YAAoBC,GACxC8b,EAAgB9a,YAAmBP,GACzC,OAAO,eAAC,IAAD,CAAMqT,WAAS,EAAC3G,QAAS,EAAzB,UACL,cAAC,IAAD,yBAAM6G,MAAI,GAAK6H,GAAf,aACE,cAAC,IAAD,CAAQE,WAAS,EAACjZ,GAAI,CAAEgC,OAAQ,QAAU+E,KAAK,QAAQhH,UAAU,IAAIP,MAAM,UAAU0Z,KAAK,2EAA2E9V,OAAO,SAAS+V,IAAI,aAAzL,yFAIF,cAAC,IAAD,yBAAMjI,MAAI,GAAK6H,GAAf,aACE,cAAC,IAAD,CACE/Y,GAAI,CAAEoZ,QAAS,SAAAtV,GAAC,OAAIA,EAAE7C,QAAQoY,aAAalY,MAAMY,MAAO,QACxD2C,KAAM,4CACN5G,MAAOkB,IAAUiZ,sBAAsBta,EAAW,cAClD6O,YAAaV,IAAKwN,eAAe,cACjC7M,aAAcuM,EAAcO,WAC5B7M,cAAe,SAAA5O,GAAK,OAAIiK,EAAkB,CAAEvK,KAAM,YAAaK,QAAS,aAAcC,gBAGzF,CAAE,YAAF,mBAAiBoa,MAAgD7S,KAAI,SAAAmU,GACpE,IAAI3b,EAAO,UAAM2b,EAAN,cACPC,EAAe,UAAMD,EAAN,kBACfE,EAAkB1a,IAAUiZ,sBAAsBta,EAAW8b,GACjE,OAAO,cAAC,IAAD,yBAAMvI,MAAI,GAAkB6H,GAA5B,aACL,cAAC,IAAD,CACE/Y,GAAI,CAAEoZ,QAAS,SAAAtV,GAAC,OAAIA,EAAE7C,QAAQoY,aAAalY,MAAMY,MAAO,QACxD2C,KAAM,4BAAIoH,IAAKI,YAAYrO,KAC3BC,MAAOkB,IAAUiZ,sBAAsBta,EAAWE,GAClD2O,YAAaV,IAAKwN,eAAezb,GACjC4O,aAAcuM,EAAcnb,GAC5B6O,cAAe,SAAA5O,GAAK,OAAIiK,EAAkB,CAAEvK,KAAM,YAAaK,UAASC,WACxEyE,SAAUmX,EACV/M,SAAO,EART,SAUE,eAAC,IAAD,CAAQnN,MAAOga,EAAQzU,QAAS,kBAAMgD,EAAkB,CAAEvK,KAAM,YAAaK,QAAS4b,EAAiB3b,OAAQ4b,KAA/G,UACE,cAAC,IAAD,CAAiBvZ,KAAMuZ,EAAkBC,IAAgBC,IAAUrU,UAAU,UAD/E,mBAXmBiU,MAiBzB,cAAC,IAAD,yBAAMtI,MAAI,GAAK6H,GAAf,aACE,cAAC,IAAD,CACE/Y,GAAI,CAAEoZ,QAAS,SAAAtV,GAAC,OAAIA,EAAE7C,QAAQoY,aAAalY,MAAMY,MAAO,QACxD2C,KAAM,4BAAIoH,IAAKI,YAAY,kBAC3BpO,MAAOkB,IAAUiZ,sBAAsBta,EAAW,gBAClD6O,YAAaV,IAAKwN,eAAe,gBACjC7M,aAAcuM,EAAa,aAC3BtM,cAAe,SAAA5O,GAAK,OAAIiK,EAAkB,CAAEvK,KAAM,YAAaK,QAAS,eAAgBC,WACxF6O,SAAO,OAGX,cAAC,IAAD,CAAMuE,MAAI,EAACG,GAAI,GAAf,SACE,2M,wUC1GAwI,EAAe,CACnB,GAAI,wDACJ,KAAQ,iCAAQf,IAAkBgB,KAA1B,oBACR,KAAQ,iCAAQhB,IAAkBiB,KAA1B,qBAKH,SAASC,EAAT,GAA6H,IAAD,IAA5Frc,UAA4F,IAA/Esc,oBAA+E,MAAhE,GAAgE,EAAvD/c,EAAuD,EAA5DoG,IAAwBb,EAAoC,6BAC3H2B,EAAiBH,YAAWC,IAAeG,IAAInH,GAAe,CAACA,IAC/D6K,EAAoB9K,YAAoBC,GAC9C,OAAI,OAACkH,QAAD,IAACA,OAAD,EAACA,EAAgB8V,WACd,cAAC,IAAD,yBAAgBpa,MAAO+Z,EAAaI,GAAeza,MAAOya,GAAgB,aAAiBxX,GAA3F,aACJ8D,OAAOW,QAAQ2S,GAAcxU,KAAI,mCAAE/B,EAAF,KAAOmD,EAAP,YAChC,cAAC,IAAD,CAAoBzG,GAAIsD,EAAM,CAAE9D,MAAM,GAAD,OAAK8D,EAAL,eAAoB4E,EACvDlD,SAAU1B,IAAQ2W,EAAc1X,SAAUe,IAAQ2W,EAClDlV,QAAS,kBAAMgD,EAAkB,CAAEkS,aAAc3W,KAFnD,SAE4DmD,GAF7CnD,SAHoB,KAalC,SAAS6W,EAAT,GAAsI,IAAD,IAA3Gxc,UAA2G,IAA9Fyc,oBAA8F,MAA/E,GAA+E,EAA3EH,EAA2E,EAA3EA,aAAmB/c,EAAwD,EAA7DoG,IAAqB5E,EAAwC,EAAxCA,MAAU+D,EAA8B,qCACpIsF,EAAoB9K,YAAoBC,GAC9C,IAAKwB,EAAO,OAAO,KACnB,IAAM2b,EAAa3b,EAAM6Y,aACzB,MAAK,CAAC,OAAQ,QAAS,QAAQtZ,SAASoc,IAAgB,CAAC,OAAQ,QAAS,QAAQpc,SAASgc,GACpF,eAAC,IAAD,yBAAwBK,WAAS,EAACC,UAAU,YACjDzc,MAAOsc,EAAc9X,SAAU,SAACa,EAAGiX,GAAJ,OAAqBrS,EAAkB,CAAEqS,mBAAqB3X,GADxF,cAEL,cAAC,IAAD,CAAc3E,MAAM,GAApB,2BACiB,SAAfuc,GAA0C,SAAjBJ,IAA4B,cAAC,IAAD,CAAcnc,MAAM,gBAApB,SACrD,eAAC,IAAD,CAAW0B,MAAM,WAAjB,2BAA2CyM,IAASuO,MAApD,IAA4DvO,IAAS6N,WAEtD,SAAfO,GAA0C,SAAjBJ,IAA4B,cAAC,IAAD,CAAcnc,MAAO,YAArB,SACrD,eAAC,IAAD,CAAW0B,MAAM,OAAjB,wBAAoCyM,IAAS8N,KAA7C,IAAoD9N,IAAS6N,WAE9C,UAAfO,GAA2C,UAAjBJ,IAA6B,cAAC,IAAD,CAAcnc,MAAO,iBAArB,SACvD,eAAC,IAAD,CAAW0B,MAAM,WAAjB,6BAA6CyM,IAAS6N,KAAtD,IAA6D7N,IAASuO,YAEvD,SAAfH,GAA0C,SAAjBJ,IAA4B,cAAC,IAAD,CAAcnc,MAAO,YAArB,SACrD,eAAC,IAAD,CAAW0B,MAAM,OAAjB,wBAAoCyM,IAAS6N,KAA7C,IAAoD7N,IAAS8N,cAdgD,KAqB5G,SAASU,EAAT,GAAgH,IAAD,IAAtF9c,UAAsF,IAAzE+c,eAAyE,MAA/D,SAA+D,EAAhDxd,EAAgD,EAArDoG,IAAwBb,EAA6B,6BAC9GsF,EAAoB9K,YAAoBC,GAC9C,OAAO,eAAC,IAAD,yBAAwBod,WAAS,EAACC,UAAU,YACjDzc,MAAO4c,EAASpY,SAAU,SAACa,EAAGuX,GAAJ,OAAgB3S,EAAkB,CAAE2S,cAAgBjY,GADzE,cAEL,cAAC,IAAD,CAAc3E,MAAM,SAApB,sBACA,cAAC,IAAD,CAAcA,MAAM,MAApB,0BACA,cAAC,IAAD,CAAcA,MAAM,UAApB,8BAKG,SAAS6c,EAAT,GAA4E,IAA/Chd,EAA8C,EAA9CA,UAA8C,EAC5CP,qBAAWkB,KAAvCC,EADwE,EACxEA,SAAUC,EAD8D,EAC9DA,cAEZE,EAAQH,GAAsBC,EACpC,OAAO,cAAC,IAAD,UACL,cAAC,IAAD,UACE,eAAC,IAAD,CAAMwS,WAAS,EAAC3G,QAAS,EAAzB,UACE,cAAC,IAAD,CAAM6G,MAAI,EAAV,SAAW,cAACuJ,EAAD,CAAe9c,UAAWA,EAAWoJ,KAAK,YACrD,cAAC,IAAD,CAAMmK,MAAI,EAAV,SAAW,cAAC8I,EAAD,CAAsBrc,UAAWA,MAC5C,cAAC,IAAD,CAAMuT,MAAI,EAAV,SAAW,cAACiJ,EAAD,CAAgBxc,UAAWA,EAAWe,MAAOA,EAAOqI,KAAK,qB,+bC5E7D,SAAS6T,EAAT,GAAiI,IAAtG9a,EAAqG,EAArGA,MAAqG,IAA9F+a,iBAA8F,MAAlF,GAAkF,EAA9E1U,EAA8E,EAA9EA,MAC/D,GAAmF,IAA9EI,OAAOiB,KAAKqT,GAAwBhX,QAAO,SAAAiX,GAAC,MAAU,cAANA,KAAmBvR,OAAc,OAAO,KAC7F,IAAMnB,EAASG,YAAcsS,EAAW1U,GACxC,OAAO,eAAC0C,EAAA,EAAD,CAAU7I,GAAI,CAAEsJ,GAAI,GAApB,UACL,cAACR,EAAA,EAAD,UACE,cAACiS,EAAA,EAAD,UAAajb,MAEf,cAAC1B,EAAA,EAAD,UACGgK,EAAO/C,KAAI,SAAChH,EAAO+I,GAAR,OAAc,cAAChJ,EAAA,EAAD,CAAsBC,MAAOA,GAAV+I,WC+BpC,SAAS4T,EAAT,GAKiB,IAAD,IAJnBC,EAImB,EAJ7BxG,SACAyG,EAG6B,EAH7BA,SAG6B,IAF7BC,cAE6B,SAD7BnH,EAC6B,EAD7BA,QAEM7W,EAAWC,qBAAWC,KADC,EAIa+d,cAJb,mBAItBC,EAJsB,KAIPC,EAJO,KAMvBC,EAAkBne,qBAAWkB,KAC7BwW,EAASlW,mBAAQ,kBACrByc,GAAiBle,EAASqe,WAAWP,KACrC,CAACA,EAAcI,EAAele,IACxBmG,EAA4CwR,EAA5CxR,IAAKsL,EAAuCkG,EAAvClG,MAAOwG,EAAgCN,EAAhCM,WAAYD,EAAoBL,EAApBK,UAAW1G,GAASqG,EAATrG,KAVd,GAWCqG,EAXD,MAWrBrK,iBAXqB,OAWV,GAXU,GAWN/M,GAXM,GAWNA,GACjBwW,GAAuCjQ,YAAWsP,IAAYlP,IAAIf,GAAM,CAACA,IACzE0R,GAAa,OAAGd,SAAH,IAAGA,QAAH,EAAGA,GAAaN,WAEnC5Q,qBAAU,kBACRiY,EAAe9d,EAAS0X,aAAaoG,EAAcK,QAAoBpT,IACvE,CAAC+S,EAAcK,EAAkBne,IAEnC,IAAMse,GAAiBne,uBAAY,SAACoe,GAClCve,EAASiZ,aAAasF,EAAWT,KAChC,CAACA,EAAc9d,IAEZwe,GAAWre,uBAAY,SAAAsR,GAC3BA,EAAQkD,YAAMlD,EAAO,EAAG,IACxB,IAAMuG,EAAYkB,IAAkBuF,WAAU,SAAAC,GAAO,OAAIjN,GAASiN,KAClEJ,GAAe,CAAE7M,QAAOuG,gBACvB,CAACsG,KAEEK,GAAexe,uBAAY,WAC/B,IAAMye,EAAiB1F,IAAkBuF,WAAU,SAAAC,GAAO,OAAc,KAAVjN,GAAgBA,IAAUiN,KACtDJ,GAA9BtG,IAAc4G,EAA+B,CAAE5G,UAAWA,EAAY,GACtD,CAAEA,UAAW4G,MAChC,CAACN,GAAgBtG,EAAWvG,IAEzBlQ,GAAK,eAASwc,EAAQ,UAAIA,EAAS3c,gBAAb,QAAyB2c,EAAS1c,cAAiB,CAAEsW,OAAQ,CAAEkH,YAAa5G,EAAa,EAAGxG,QAAOuG,eAEzH/Q,GAAiBH,YAAWwG,GAAWvG,IAAeG,IAAIoG,SAAYvC,EAAW,CAACuC,KAClF4I,GAAejP,GAAiB,SAAC6X,GAAD,OAAQA,EAAGrI,aAAexP,GAAe4Q,oBAAgB9M,EACzFgU,GAAsB9X,IAAkBA,GAAe4Q,cAEvDE,GAAc5X,uBAAY,SAACkV,GAAD,OAAgC9U,IAAMP,EAASM,kBAAkBC,GAAI8U,KAAU,CAACrV,EAAUO,KACpHmG,GAASvG,uBACb,SAACyX,GAAD,OAAwBA,EAAGC,iBAAH,OAAqBd,SAArB,IAAqBA,QAArB,EAAqBA,GAAaN,cAC1D,CAACM,KA5C0B,GA8CKxR,oBAAS,GA9Cd,qBA8CtByZ,GA9CsB,MA8CXC,GA9CW,MA+CvBhI,GAAMe,EAAY,EAAZ,OAAgBjB,SAAhB,IAAgBA,QAAhB,EAAgBA,GAAaE,IAA7B,OAAmCF,SAAnC,IAAmCA,QAAnC,EAAmCA,GAAa4B,UAC5D,OAAO,eAACuG,EAAA,EAAD,WACL,cAACvT,EAAA,EAAD,CAAa9I,GAAI,CAAE4Q,GAAI,GAAvB,SACE,eAAC0L,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,UACE,cAACiS,EAAA,EAAD,CAAMpL,MAAI,EAAClE,SAAU,EAArB,SACE,eAACsP,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,UACE,eAACiS,EAAA,EAAD,CAAMpL,MAAI,EAAV,UACE,cAAC8B,EAAA,EAAD,CAAsBC,KAAMkJ,GAAWjJ,OAAQ,kBAAMkJ,IAAa,IAAQjJ,SAAU,SAAAoJ,GAAC,OAAId,GAAe,CAAEnY,IAAKiZ,KAAM1Y,OAAQwP,GAAcA,aAAc6I,KACzJ,eAAC5P,EAAA,EAAD,WACE,cAAC3E,EAAA,EAAD,CAAQ5C,QAAS,kBAAMqX,IAAa,IAApC,0BAA6ClI,SAA7C,IAA6CA,QAA7C,EAA6CA,GAAaxP,YAA1D,QAAkE,oBAClE,eAACoC,EAAA,EAAD,CAAgBhH,MAAK,qBAAgBsV,GAArC,UACE,cAACpO,EAAA,EAAD,uCACA,cAACC,EAAA,EAAD,IACC,YAAIM,MAAM,GAAGC,QAAQnC,KAAI,SAAA/B,GAAG,OAC3B,cAAC0D,EAAA,EAAD,CAAoBjC,QAAS,kBAAM0W,GAAe,CAAErG,WAAY9R,EAAM,KAAM0B,SAAUoQ,IAAgB9R,EAAM,EAAIf,SAAU6S,IAAgB9R,EAAM,EAAhJ,8BACiBA,EAAM,IADRA,eAMvB,cAACgZ,EAAA,EAAD,CAAMpL,MAAI,EAAV,SACE,eAAC5E,EAAA,EAAD,CAAatM,GAAI,CAAEoZ,QAAS,SAAAtV,GAAC,OAAIA,EAAE7C,QAAQoY,aAAalY,OAAxD,UACE,cAACkB,EAAA,EAAD,UACE,cAACA,EAAA,EAAD,CAAmBC,SAAUqZ,GAAU7d,MAAO8Q,EAC5C4N,eAAe,QACftP,WAAY,CAAEiC,IAAK,EAAGD,IAAK,GAAIlP,GAAI,CAAEmN,UAAW,WAChDnN,GAAI,CAAE+B,MAAO,OAAQC,OAAQ,OAAQ8O,GAAI,OAG7C,cAACnJ,EAAA,EAAD,CAAQ3H,GAAI,CAAE8Q,GAAI,GAAKvO,UAAWka,YAAe7N,GAAQ7J,QAAS+W,GAAlE,SAAgF,wCAAWzF,IAAkBlB,QAC7G,cAACrO,EAAA,EAAD,CAAgBhH,MAAO,eAAvB,SACG4c,IAAgBrX,KAAI,YAAe,IAAD,mBAAZsX,EAAY,KAARC,EAAQ,KAE3BC,EADYF,IAAOtG,IAAkBuG,GACnB,cAAUD,GAAV,cAAwBA,EAAxB,YAA8BtG,IAAkBuG,IAClE5X,EAAW2X,IAAO/N,GAASgO,IAAOzH,EACxC,OAAO,cAACnO,EAAA,EAAD,CAA8BhC,SAAUA,EAAUzC,SAAUyC,EAAUD,QAAS,kBAAM0W,GAAe,CAAE7M,MAAO+N,EAAIxH,UAAWyH,KAA5H,SAAoIC,GAApI,UAAkBF,EAAlB,YAAwBC,cAKvC,cAACN,EAAA,EAAD,CAAMpL,MAAI,EAAV,SACE,cAACvJ,EAAA,EAAD,CAAQnI,MAAM,QAAQuF,QAAS,kBAAMrH,IAAMP,EAASiZ,aAAa,CAAE3H,MAAOA,IAAQ/Q,KAAKiH,UAAW8J,GAAO,cAACqO,EAAA,EAAD,IAAW,cAACC,EAAA,EAAD,IAApH,SACGtO,GAAO,SAAW,sBAKxBuF,GAAW,cAACsI,EAAA,EAAD,CAAMpL,MAAI,EAAV,SACZ,cAAC8L,EAAA,EAAD,CAAajY,QAASiP,QAErBkH,GAAY/d,IAAaoR,KAAiB,cAAC+N,EAAA,EAAD,CAAMpL,MAAI,EAAV,SAC3C,cAAC+L,EAAD,CAASjI,cAAeA,GAAekI,WAAY,SAAAxf,GAAE,OAAIP,EAASM,kBAAkBC,EAAIwd,EAASvd,UAAU2F,eAIjH,cAAC2D,EAAA,EAAD,IACA,cAAC6B,EAAA,EAAD,UACI,WACA,IAAKoL,GAAa,OAAO,KACzB,IAAMiJ,EAAajJ,GAAYsB,gBACzB4H,EAAuBlJ,GAAYoB,iBAAiB1G,EAAOuG,GAC3DkI,EAAsBnJ,GAAYwB,gBAAgB9G,EAAOuG,GACzDmI,EAAoBpJ,GAAY0B,YAChC2H,EAAmBrJ,GAAY/N,MAAMzH,IACrCuK,EAAWiL,GAAY4C,SAC7B,OAAO,eAAC1N,EAAA,EAAD,CAAK9I,QAAQ,OAAOkd,IAAK,CAAEnM,GAAI,EAAGC,GAAI,IAAK6C,GAAI,GAA/C,UACL,eAAC/K,EAAA,EAAD,CAAKpJ,GAAI,CAAEyd,SAAU,KAAOlL,WAAY,EAAGmL,SAAS,MAApD,UACE,cAACtU,EAAA,EAAD,CAAKrJ,UAAU,MAAM8E,IAAKuP,GAAK7O,UAAS,eAAU2O,GAAYvF,OAAtB,QAAoC3O,GAAI,CAAEyd,SAAU,IAAK1b,MAAO,OAAQC,OAAQ,OAAQpB,aAAc,KAC9I,cAACma,EAAA,EAAD,UAAY,gCAAQ7G,GAAYyJ,mBAElC,eAACvU,EAAA,EAAD,CAAKpJ,GAAI,CAAEsJ,IAAK,GAAK0D,SAAU,EAA/B,UACE,eAAC+N,EAAA,EAAD,CAAY9V,QAAQ,KAApB,WAA2B2Y,EAAgG1J,GAAYxP,KAAvI,QAAkJ6O,IAAYsK,eAAe/I,GAA7K,IAAuLwI,GAAqB,eAACzW,EAAA,EAAD,CAASrH,MAAM,OAAf,wBAAkC4V,QAC9O,cAAC2F,EAAA,EAAD,UAAY,cAAC,IAAD,CAAO5J,MAAO+C,GAAYvF,WACtC,cAACoM,EAAA,EAAD,CAAY9V,QAAQ,YAApB,SAAiCqY,IACjC,cAACvC,EAAA,EAAD,CAAYtD,cAAY,EAAxB,SAA0B6F,GAAqBpJ,GAAY4J,mBAAmBpf,MAC7EA,IAAS,eAAC,IAAaqf,SAAd,CAAuBjgB,MAAOod,EAAWK,EAAkB,CAAE/c,cAAeE,GAAOH,cAAU2J,EAAWzJ,cAAc,EAAOuf,qBAAiB9V,GAA9I,UACR,cAAC0S,EAAD,CAAiB9a,MAAO,aAAc+a,UAAS,aAAIoD,IAAKb,GAAuBD,EAAaA,EAAaE,OAAsBnV,GAAa/B,MAAOzH,KACnJ,cAACkc,EAAD,CAAiB9a,MAAO,cAAe+a,UAAW0C,EAAkBpX,MAAOzH,QAE5Ewc,GAAYjS,EAAY,WAAO,IAAD,EACrBzK,EAA4B0c,EAA5B1c,cAAeD,EAAa2c,EAAb3c,SACjBrB,EAAY,UAAIqB,GAAsBC,SAA1B,aAAG,EAAuCtB,aAC5D,QAASA,GAAgB,cAAE8L,EAAA,EAAF,CAAyBC,WAAUzK,gBAAeD,WAAUrB,iBAH9D,GAIlB,WA1BX,KA+BHie,GAAUzd,IAAM,cAACoL,EAAA,EAAD,CAAa9I,GAAI,CAAE4Q,GAAI,GAAvB,SACf,eAAC0L,EAAA,EAAD,CAAMtL,WAAS,EAAf,UACE,cAACsL,EAAA,EAAD,CAAMpL,MAAI,EAAClE,SAAU,EAArB,SACE,cAACtJ,EAAA,EAAD,CAAyBE,YAAU,EAACD,WAAS,EAAC7F,MAAO2M,GAAUnI,SAAU4S,GAAarR,OAAQA,SAE7FmQ,GAAW,cAACsI,EAAA,EAAD,CAAMpL,MAAI,EAAV,SAAW,cAAC8L,EAAA,EAAD,CAAazI,OAAK,EAACxP,QAASiP,cAK7D,SAASiJ,EAAT,GAAiD,IAA9BC,EAA6B,EAA7BA,WAAYlI,EAAiB,EAAjBA,cACvB7X,EAAWC,qBAAWC,KADkB,EAEtBqF,oBAAS,GAFa,mBAEvCuQ,EAFuC,KAEjCiL,EAFiC,KAIxCC,EAAQ,kBAAMD,GAAQ,IAEtBE,EAAe,SAAC1gB,GACpBwf,EAAWxf,GACXygB,KAGI7K,EAAerP,YAAWsP,IAAYpP,SAAU,IAEhDsP,EAAetW,EAASkhB,QAAQ7W,KAAK3D,QAAO,SAAA8P,GAAS,IAAD,EAClD2K,EAAWnhB,EAASqe,WAAW7H,GACrC,QAAK2K,KACDtJ,GAAiBA,KAAa,OAAK1B,QAAL,IAAKA,GAAL,UAAKA,EAAegL,EAAShb,YAA7B,aAAK,EAA8BsQ,gBAKvE,OAAO,qCACL,cAACjM,EAAA,EAAD,CAAQnI,MAAM,OAAOuF,QAnBV,kBAAMmZ,GAAQ,IAmBWvZ,UAAW,cAAC4Z,EAAA,EAAD,IAA/C,yBACA,cAACC,EAAA,EAAD,CAAczK,KAAMd,EAAMe,QAASmK,EAAnC,SACE,eAACtV,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAa9I,GAAI,CAAE4Q,GAAI,GAAvB,SACE,eAAC0L,EAAA,EAAD,CAAMtL,WAAS,EAAf,UACE,cAACsL,EAAA,EAAD,CAAMpL,MAAI,EAAClE,SAAU,EAArB,SACE,eAAC+N,EAAA,EAAD,CAAY9V,QAAQ,KAApB,UAA0B+P,EAAgB,cAACyJ,EAAA,EAAD,CAAS5Z,IAAKwP,IAAOC,YAAYU,KAAqB,KAAhG,oBAEF,cAACsH,EAAA,EAAD,CAAMpL,MAAI,EAAV,SACE,cAAC8L,EAAA,EAAD,CAAajY,QAASoZ,WAI5B,cAAClX,EAAA,EAAD,IACA,cAAC6B,EAAA,EAAD,UACE,cAACwT,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,SACGoJ,EAAapO,KAAI,SAAAoP,GAAQ,OACxB,cAAC6H,EAAA,EAAD,CAAMpL,MAAI,EAAgBG,GAAI,EAAGmG,GAAI,EAAGlG,GAAI,EAAG6C,GAAI,EAAnD,SACE,cAACK,EAAA,EAAD,CACEC,SAAUA,EACV1P,QAASqZ,KAHG3J,oB,kbCrNf,SAASiK,EAAT,GAMX,IANsCzH,EAMvC,EANuCA,OAMvC,EAC+BvU,oBAAS,GADxC,mBACMoV,EADN,KACgBC,EADhB,KAEKC,EAAS1a,uBAAY,kBAAMya,GAAaD,KAAW,CAACC,EAAaD,IAFtE,EAGmC1a,qBAAWkB,KAAvCC,EAHP,EAGOA,SAAUC,EAHjB,EAGiBA,cAEZE,EAAQH,GAAsBC,EACpC,OAAO,eAAC6d,EAAA,EAAD,WACL,cAACvT,EAAA,EAAD,UACE,eAACwT,EAAA,EAAD,CAAMtL,WAAS,EAAf,UACE,eAACsL,EAAA,EAAD,CAAMpL,MAAI,EAAClE,SAAU,EAArB,UACE,eAAC+N,EAAA,EAAD,uBAAsB,IAAtB,mBACA,cAACA,EAAA,EAAD,CAAY9V,QAAQ,UAAUzF,MAAM,iBAApC,wEAEF,cAAC8c,EAAA,EAAD,CAAMpL,MAAI,EAAV,SACE,cAAC1H,EAAA,EAAD,CACEC,OAAQqO,EACR/S,QAASiT,EACTK,gBAAeP,EACfvU,aAAW,YAJb,SAME,cAACob,EAAA,EAAD,aAKR,cAACC,EAAA,EAAD,CAAUrG,GAAIT,EAAUU,QAAQ,OAAOC,eAAa,EAApD,SACE,cAAC3P,EAAA,EAAD,CAAa9I,GAAI,CAAEyR,GAAI,GAAvB,SACE,cAACoN,EAAD,CAAoB5H,OAAQA,EAAQvY,MAAOA,WAMnD,SAASmgB,EAAT,GAOI,IAP0B5H,EAO3B,EAP2BA,OAAQvY,EAOnC,EAPmCA,MAQ9BogB,EAAkBlgB,mBAAQ,kBAAMF,GAASM,IAAU+f,mBAAmBrgB,EAAOuY,KAAS,CAACvY,EAAOuY,IACpG,OAAKvY,EACE,cAAC,WAAD,CAAU+R,SAAU,cAACuO,EAAA,EAAD,CAAU/Z,QAAQ,cAAclD,MAAM,OAAOC,OAAQ,MAAzE,SACJuE,OAAOW,QAAQ4X,GAAiBzZ,KAAI,YAA0C,IAAD,mBAAvC8R,EAAuC,KAA3B/O,EAA2B,KACtEiP,EAASC,YAAgCH,EAAYF,EAAQvY,EAAM6Y,cACzE,OAAO,eAAC1O,EAAA,EAAD,CAA2B7I,GAAI,CAAEsJ,GAAI,GAArC,UACL,cAACR,EAAA,EAAD,CAAa9I,GAAI,CAAEqJ,GAAI,GAAvB,SACE,cAAC0R,EAAA,EAAD,CAAY9V,QAAQ,KAApB,SAA0BoS,MAE5B,cAACpQ,EAAA,EAAD,IACA,cAAC6B,EAAA,EAAD,UACGV,EAAO/C,KAAI,SAAChH,EAAO4gB,GAClB,GAAI1X,MAAMiE,QAAQnN,GAChB,OAAO,cAAC6gB,EAAD,CAA0CC,UAAW9gB,EAAOK,MAAOA,GAArCugB,GAClC,GAAqB,kBAAV5gB,EAAoB,CAClC,IAAM+gB,EAAwBtT,IAAKuT,+BAA+BC,YAAgB5gB,EAAD,OAAQA,QAAR,IAAQA,OAAR,EAAQA,EAAO6gB,UAAW,CAAClhB,IAA9E,OAAuFK,QAAvF,IAAuFA,OAAvF,EAAuFA,EAAO6gB,WAAWC,UACvI,OAAOC,QAAQL,EAAe7V,SAAW,eAACmW,EAAA,EAAD,CAAW1f,GAAI,CAAEoZ,QAAS,qBAA1B,UACvC,cAACuG,EAAA,EAAD,CAAkBC,WAAY,cAACjB,EAAA,EAAD,IAA9B,SACE,cAAC5D,EAAA,EAAD,UAAajP,IAAK+T,UAAUxhB,EAAOK,OAErC,cAACohB,EAAA,EAAD,UACGV,EAAe/Z,KAAI,SAAA0a,GAAM,OACxB,eAAChF,EAAA,EAAD,WAA0BjP,IAAK+T,UAAUE,EAAQrhB,GAAjD,MAA2D,gCAAO,cAAC,IAAD,CAAgBb,QAASkiB,EAAQ5Z,MAAOzH,EAAO6gB,UAAW7gB,EAAM6gB,UAAW9V,QAAQ,QAApIsW,UANwEd,GAWjG,OAAO,YAtBS9H,QAJP,KAkCrB,SAAS+H,EAAT,GAA0G,IAAD,QAAtEC,EAAsE,EAAtEA,UAAWzgB,EAA2D,EAA3DA,MACtCQ,EAAU+E,YAAWwH,IAAQpH,IAAI8a,GAAY,CAACA,IACpD,IAAKjgB,EAAS,OAAO,KACrB,IAAM8gB,EAAgB9gB,EAAgBb,MAChCoB,EAAYT,IAAUC,oBAAoB+gB,EAAc,OAAQthB,GAChEgB,EAAeV,IAAUC,oBAAoB+gB,EAAc,UAAWthB,GACtEkB,EAAmBZ,IAAUC,oBAAoB+gB,EAAc,cAAethB,GAC9EuhB,EAAU,UAAGjhB,IAAUC,oBAAoB+gB,EAAc,QAASthB,UAAxD,QAAkE,EAC5EwhB,EAAS,UAAGlhB,IAAUC,oBAAoB+gB,EAAc,OAAQthB,UAAvD,QAAiE,GARuB,EASxDM,IAAUC,oBAAoB+gB,EAAc,UAAWthB,EAAO,IATN,mBAShGyhB,EATgG,KASlFC,EATkF,KAUvG,IAAKD,IAAiBC,EAAwB,OAAO,KACrD,IAAMC,EAAU,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAezhB,UAAlB,iBAAG,EAAuBY,eAA1B,aAAG,SAAiC2gB,GAC9Cb,EAAiBtT,IAAKuT,+BAA+BC,YAAgB5gB,EAAD,OAAQA,QAAR,IAAQA,OAAR,EAAQA,EAAO6gB,UAAWa,GAA7E,OAAsG1hB,QAAtG,IAAsGA,OAAtG,EAAsGA,EAAO6gB,WAAWC,UAC/I,OAAO,eAACE,EAAA,EAAD,CAAW1f,GAAI,CAAEoZ,QAAS,qBAA1B,UACL,cAACuG,EAAA,EAAD,CAAkBC,WAAY,cAACjB,EAAA,EAAD,IAA9B,SACE,eAAC5D,EAAA,EAAD,WAAY,cAAC3R,EAAA,EAAD,CAAK5J,MAAK,UAAKE,EAAL,SAA0BK,UAAU,SAA9C,SAAwDN,IAApE,IAAqF,eAAC,IAAD,CAAWD,MAAM,OAAjB,UAAyB6gB,EAAYH,UAE5H,eAACJ,EAAA,EAAD,WACE,eAAC/E,EAAA,EAAD,WAAY,cAAC3R,EAAA,EAAD,CAAK5J,MAAK,UAAKE,EAAL,SAA0BK,UAAU,SAA9C,SAAwDN,IAApE,IAAqF,cAAC,IAAD,CAAWD,MAAM,OAAjB,SAAyB6gB,IAA9G,MAAwI,gCAAQzgB,OAC/Iwf,EAAe/Z,KAAI,SAAA0a,GAAM,OACxB,eAAChF,EAAA,EAAD,WAA0BjP,IAAK+T,UAAUE,EAAQrhB,GAAjD,MAA2D,gCAAO,cAAC,IAAD,CAAgBb,QAASkiB,EAAQ5Z,MAAOzH,EAAO6gB,UAAW7gB,EAAM6gB,UAAW9V,QAAQ,QAApIsW,Y,uJCnBVO,OA5Ef,YAAqH,IAAD,EAAnFrJ,EAAmF,EAAnFA,OAAQtZ,EAA2E,EAA3EA,UAA6BT,EAA8C,EAAhES,UAAa2F,IAAmD,EAC/ClG,qBAAWkB,KAAtEC,EAD0G,EAC1GA,SAAUC,EADgG,EAChGA,cAAeC,EADiF,EACjFA,aAAcuf,EADmE,EACnEA,gBACzC7gB,EAAWC,qBAAWC,KACtBkjB,EAAUC,eAEVra,EAAS5H,GAAsBC,EAC/BqP,EAAuB,iBAAG1H,QAAH,IAAGA,OAAH,EAAGA,EAAO0H,+BAAV,QAAqC,EAC5D4S,EAAW7hB,mBAAQ,kBAAMuH,GAASnH,IAAU+f,mBAAmB5Y,EAAO8Q,KAAS,CAAC9Q,EAAO8Q,IACvFyJ,EAAOpjB,uBACX,SAAAqjB,GAAK,OAAIJ,EAAQ1K,KAAK,CACpB+K,SAAU,YACVC,YAAaF,MACJ,CAACJ,IACRO,EAAiB7c,YAAWkK,IAAchK,SAAU,IAbwD,EAgB5FiX,cAAbrK,EAhByG,oBAiBlH/N,qBAAU,kBAAM7F,EAAS4jB,aAAahQ,MAEtC,IAAMiQ,EAAY1jB,uBAAY,WACvB2jB,OAAOC,QAAQ,gEACf3iB,GACLA,EAAS4iB,mBAAqBhkB,EAASikB,eAAelkB,EAAcqB,EAAS4iB,qBAC5E,CAACjkB,EAAcqB,EAAUpB,IAEtBkkB,EAAc/jB,uBAAY,WACzB2jB,OAAOC,QAAQ,iEACpB/jB,EAASikB,eAAelkB,EAAcokB,YAAiBC,MAAa,iBAAM,SACzE,CAACrkB,EAAcC,IAClB,OAAKgJ,EACE,qCACL,eAACkW,EAAA,EAAD,CAAWrc,GAAI,CAAEsJ,GAAI,GAArB,UACE,cAACR,EAAA,EAAD,UACE,cAACkO,GAAA,EAAD,CAA4BC,SAAQtZ,YAAWa,cAAgBD,IAAaE,OAAgByJ,EAAY1J,EAAeD,WAAU2Y,iBAAkBuJ,MAErJ,cAACxZ,EAAA,EAAD,IACA,cAAC6B,EAAA,EAAD,CAAa9I,GAAI,CAAE4Q,GAAI,GAAvB,SACE,eAAC0L,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,UACE,cAACiS,EAAA,EAAD,CAAMpL,MAAI,EAAV,SACG3S,EAAW,cAACoJ,EAAA,EAAD,CAAQ5C,QAASic,EAAWzb,UAAU,OAAtC,6BAAyEpI,IAAaoR,KAAiB,cAAC5G,EAAA,EAAD,CAAQnI,MAAM,QAAQuF,QAASsc,EAA/B,qCAErH,cAAC/E,EAAA,EAAD,CAAMpL,MAAI,EAAV,WAEK3S,GAAY,eAACijB,GAAA,EAAD,CAAwBlH,WAAS,EAACxc,MAAOW,EAAc6D,SAAU,SAACa,EAAGsE,GAAJ,cAAUuW,QAAV,IAAUA,OAAV,EAAUA,EAAkBvW,IAAIV,KAAK,QAAtG,UACb,cAAC0a,GAAA,EAAD,CAAc3jB,OAAO,EAArB,SACE,8DAEF,cAAC2jB,GAAA,EAAD,CAAc3jB,OAAO,EAArB,SACE,8EAIN,cAACwe,EAAA,EAAD,CAAMpL,MAAI,EAAClE,SAAU,IACrB,cAACsP,EAAA,EAAD,CAAMpL,MAAI,EAAV,WAAcrD,GAA2B,cAAC6T,EAAA,EAAD,CAAM1hB,GAAI,CAAEsY,EAAG,EAAGc,QAAS,SAAAtV,GAAC,OAAIA,EAAE7C,QAAQ0gB,QAAQlgB,OAAlD,SAA0D,cAACsZ,EAAA,EAAD,UAAY,kEAAqClN,mBAI1J,eAACyO,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,UACE,cAACiS,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,GAAImG,GAAI,EAAGlG,GAAI,EAA9B,SACE,cAAC+K,EAAA,EAAD,CAAWrc,GAAI,CAAEgC,OAAQ,QAAzB,SAAoC,cAAC8G,EAAA,EAAD,CAAa9I,GAAI,CAAEgC,OAAQ,QAA3B,SAAqC,cAACsa,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAGsG,cAAc,SAAS3O,OAAO,OAA1D,SACtE8e,GAAkBva,OAAOW,QAAQiH,IAAciC,WAAW0Q,EAAgB3a,EAAMyb,aAAavc,KAAI,qCAAEgJ,EAAF,KAAUwT,EAAV,YAChG,eAACvF,EAAA,EAAD,CAAMpL,MAAI,EAAV,UACE,cAAC6J,EAAA,EAAD,CAAY9V,QAAQ,YAAYwS,cAAY,EAA5C,0BAA8CqJ,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAiBzS,GAAQ3J,YAAvE,QAA+E,KAC7Emd,EAAqBxc,KAAI,SAAAiL,GAAS,OAAI,cAACmG,GAAA,EAAD,CAAiDpI,SAAQiC,YAAW9R,gBAAeD,WAAUrB,gBAAtEmR,EAASiC,QAF1DjC,cAOrBkT,KAAYlc,KAAI,SAAAqJ,GAAO,mBACrB,OAACvI,QAAD,IAACA,GAAD,UAACA,EAAOgb,yBAAR,aAAC,EAA2BzS,KAAY,cAAC4N,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,EAAGC,GAAI,EAAtB,SACvC,cAAC9D,GAAA,EAAD,CAAcC,WAAU,OAAEtH,QAAF,IAAEA,GAAF,UAAEA,EAAOgb,yBAAT,aAAE,EAA2BzS,GAAUb,wBAAyBA,EAAyBF,OAAQ,wBAAM+S,EAAI,OAACva,QAAD,IAACA,GAAD,UAACA,EAAOgb,yBAAR,aAAC,EAA2BzS,QADxH,OAA8BvI,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAOgb,yBAArC,aAA8B,EAA2BzS,aAxCrF,M,oHChCN,SAASoT,GAAT,GAA4I,IAAD,EAA1G1d,EAA0G,EAA1GA,eAAgBzG,EAA0F,EAA1FA,UAA0F,IAA/EA,UAAaokB,EAAkE,EAAlEA,cAAoB7kB,EAA8C,EAAnDoG,IAAmD,EACpHlG,qBAAWkB,KAAvCC,EADgJ,EAChJA,SAAUC,EADsI,EACtIA,cACZuJ,EAAoB9K,YAAoBC,GACxCwB,EAAQH,GAAsBC,EACpC,IAAKE,EAAO,OAAO,KAJqI,IAKhJsjB,EAAStjB,EAATsjB,KACFC,EAAavjB,EAAM6Y,aACnBvC,EAAgB5Q,EAAe4Q,cACrC,OAAO,eAACsH,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,UACL,cAACiS,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,GAAIC,GAAI,EAAvB,SAEE,eAAC+K,EAAA,EAAD,WACE,cAAC6F,GAAA,EAAD,CAAWrd,IAAKT,EAAe+d,QAASpiB,UAAU,MAAMgC,MAAM,OAAOC,OAAO,SAC5E,eAAC8G,EAAA,EAAD,WACE,eAACiS,EAAA,EAAD,CAAY9V,QAAQ,KAApB,UAA2Bb,EAAeM,KAA1C,IAAgD,cAAC+Z,EAAA,EAAD,CAAS5Z,IAAG,UAAEwP,KAAOC,mBAAT,aAAE,EAAqBU,KAAnF,IAAuG/I,KAASgW,GAAhH,OACA,cAAClH,EAAA,EAAD,UAAY,cAAC,KAAD,CAAO5J,MAAO/M,EAAege,KAAMhR,SAAO,MACtD,eAAC2J,EAAA,EAAD,CAAY9V,QAAQ,YAApB,kBAAsCjG,IAAU6e,eAAelgB,MAC/D,cAAC2e,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,SACG,CAAC,OAAQ,QAAS,SAAShF,KAAI,SAAAgd,GAAI,aAClC,cAAC/F,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,EAAf,SACE,cAACiR,GAAA,EAAD,CAAOC,aAAcP,EAAKK,GAAQ,EAAG7iB,MAAkB,UAAT6iB,GAAoB3jB,EAAM8jB,YAAyB,UAATH,GAAoB3jB,EAAM+jB,WAAe,OAAS,YACxIC,QAAQ,WACRC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEd7iB,GAAI,CACF,sBAAuB,CACrBkW,SAAU,SACVrU,QAAS,aACTjB,aAAc,OACdsJ,WAAY,EACZlI,OAAQ,WAZd,SAeE,cAACoH,EAAA,EAAD,CAAKrJ,UAAU,MAAM8E,IAAG,UAAET,EAAe0e,eAAeT,EAAM3jB,EAAM6Y,qBAA5C,aAAE,EAAyDnD,IAAKrS,MAAM,OAAOC,OAAO,YAhBzFqgB,QAoB3B,cAACtH,EAAA,EAAD,CAAY/a,GAAI,CAAEmN,UAAW,SAAUoJ,GAAI,GAAKtR,QAAQ,KAAxD,SAA8Db,EAAe2e,oBAC7E,cAACzG,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,SACG,aAAI9C,MAAM,GAAGC,QAAQnC,KAAI,SAAA+B,GAAC,aACzB,cAACkV,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,EAAf,SACE,cAACjI,EAAA,EAAD,CAAKrJ,UAAU,MAAM8E,IAAG,UAAET,EAAe0e,eAAf,uBAA8C1b,EAAI,GAAK1I,EAAM6Y,qBAA/D,aAAE,EAA4EnD,IACpGpU,GAAE,aACAC,OAAQ,WACJ8hB,EAAgB3a,EAAI,GAAK,CAAEvD,OAAQ,oBAEzC9B,MAAM,OAAOC,OAAO,OACpB+C,QAAS,kBAAMgD,EAAkB,CAAEga,cAAgB3a,EAAI,IAAO2a,EAAgB3a,EAAIA,EAAI,QAPnEA,gBAajC,eAACkV,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,GAAIC,GAAI,EAAGtR,GAAI,CAC5B,yBAA0B,CAAEsJ,GAAI,IADlC,UAGE,cAAC0R,GAAA,QAAD,CAAyBE,SAAU,CAAEvd,YAAWyG,iBAAgB5F,gBAAeD,WAAUwJ,qBAAqB0M,SAAU9W,EAAUqlB,iBAClI,cAACC,GAAD,CAAsB7e,iBAAgBzG,YAAWa,gBAAeD,mBAItE,IAGM2kB,GAAiB,CAAC,SAAU,YAAa,WAAY,YAAa,SAClEpE,GAAkB,CAAC,eAAgB,WAAY,UAAW,YAChEA,GAAgBjJ,KAAhB,MAAAiJ,GAAwBoE,IACxB,IAAMC,GAAe,CAAC,KAAM,MAAO,MAAO,OAAQ,MAAO,QACzDA,GAAatN,KAAb,MAAAsN,GAAqBD,IACrB,IAAME,GAAuB,GAE7B,CAAC,YAAD,oBAAgBlL,OAAamL,SAAQ,SAAAC,GACnCF,GAAcvN,KAAd,UAAsByN,EAAtB,UACAF,GAAcvN,KAAd,UAAsByN,EAAtB,aAEFF,GAAcvN,KAAK,UAAW,WAAY,UAAW,UAErD,IAAM0N,GAAe,CACnB,cAAe,mBACf,eAAgB,oBAChB,gBAAiB,qBACjB,aAAc,kBACd,aAAc,kBACd,OAAQ,sBACR,gBAAiB,aACjB,WAAY,UACZ,gBAGIC,GAAc,CAClB,aAAgB,oBAChB,YAAe,mBACf,aAAgB,qBAQZC,GAAiB,CACrBpS,GAAI,GAAImG,GAAI,EAAGlG,GAAI,EAAG6C,GAAI,GAI5B,SAAS8O,GAAT,GAA0J,IAAhI7e,EAA+H,EAA/HA,eAAgBzG,EAA+G,EAA/GA,UAA+G,IAApGA,UAAkBT,EAAkF,EAAvFoG,IAAmBsL,EAAoE,EAApEA,MAAOuG,EAA6D,EAA7DA,UAAa3W,EAAgD,EAAhDA,cAAeD,EAAiC,EAAjCA,SAChHwJ,EAAoB9K,YAAoBC,GAExCwmB,EAAqBtf,EAAeuf,mBAAmBhmB,EAAUwX,WACjEyO,EAAqBxf,EAAeyf,sBAAsBlmB,EAAUwX,WACpE2O,EAAsBhY,IAAKC,YAAY2X,GAEvCK,EAAuB,CAAEpmB,YAAWa,gBAAeD,YAEzD,OAAO,qCACL,cAACylB,GAAD,CACElkB,MAAM,aACN+Y,QAAS,eAACyD,EAAA,EAAD,CAAMtL,WAAS,EAACiT,cAAe,CAAE5S,GAAI,EAAG8C,GAAI,GAAK+P,WAAY,EAA7D,UACNpF,GAAgBzZ,KAAI,SAAAxH,GAAO,OAAI,cAACye,EAAA,EAAD,yBAAMpL,MAAI,GAAmBuS,IAA7B,aAC9B,cAAClY,GAAA,EAAD,aAAa1N,QAASA,GAAakmB,MADWlmB,MAGhD,eAACye,EAAA,EAAD,yBAAMpL,MAAI,GAAKuS,IAAf,IAA+BnjB,QAAQ,OAAOqQ,cAAc,MAAMpQ,eAAe,gBAAjF,UACE,iCAAM,6CAAN,IAA0B,iCAAOmjB,GAAsBzX,KAASyX,GAAtC,IAA4D5X,IAAKI,YAAYwX,SACvG,yCAAWE,EAAmBtkB,QAAQwM,IAAKE,UAAU0X,KAArD,OAA4EI,YAGhFK,YAAa,eAAC7H,EAAA,EAAD,CAAMtL,WAAS,EAACiT,cAAe,EAAGC,WAAY,EAA9C,UACVE,KAAkB/e,KAAI,SAAAxH,GAAY,IAAD,EAC1BwmB,EAASpV,KAAKqV,MAAMlgB,EAAemgB,QAAQ1mB,EAAS+Q,EAAOuG,IACjE,OAAO,cAACmH,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,GAAI8C,GAAI,EAAvB,SACL,cAAC5H,GAAA,EAAD,CACE7H,KAAM,iCAAOuH,KAASpO,GAAhB,IAA2B2lB,GAAY3lB,MAC7C2O,YAAaV,IAAKwN,eAAezb,GACjCC,MAAK,UAAEH,EAAUI,WAAWF,UAAvB,QAAmCwmB,EACxC5X,aAAc4X,EACd1X,QAAuC,MAA9Bb,IAAKC,YAAYlO,GAC1B6O,cAAe,SAAA5O,GAAK,OAAIiK,EAAkB,CAAEvK,KAAM,YAAaK,UAASC,WACxE8O,QAAS,kBAAM7E,EAAkB,CAAEvK,KAAM,aAAcK,gBARrBA,MAYvCslB,GAAa9d,KAAI,SAAAxH,GAAO,aACvB,cAACye,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,GAAI8C,GAAI,EAAvB,SACE,cAAC5H,GAAA,EAAD,CACE7H,KAAM,iCAAOuH,KAASpO,GAAhB,IAA2BiO,IAAK0Y,uBAAuB3mB,MAC7D2O,YAAaV,IAAKwN,eAAezb,GACjCC,MAAK,UAAEH,EAAUI,WAAWF,UAAvB,QAAmC,EACxC8O,QAAuC,MAA9Bb,IAAKC,YAAYlO,GAC1B6O,cAAe,SAAA5O,GAAK,OAAIiK,EAAkB,CAAEvK,KAAM,YAAaK,UAASC,cAN7CD,WAWrC,cAACmmB,GAAD,CACElkB,MAAM,cACN+Y,QAAS,cAACyD,EAAA,EAAD,CAAMtL,WAAS,EAACiT,cAAe,EAAGC,WAAY,EAA9C,SACNd,GAAc/d,KAAI,SAAAxH,GAAO,OAAI,wBAACye,EAAA,EAAD,yBAAMpL,MAAI,GAAKuS,IAAf,IAA+BngB,IAAKzF,IAAU,cAAC0N,GAAA,EAAD,aAAa1N,QAASA,GAAakmB,UAEjHI,YAAa,cAAC7H,EAAA,EAAD,CAAMtL,WAAS,EAACiT,cAAe,EAAGC,WAAY,EAA9C,SACVd,GAAc/d,KAAI,SAAAxH,GAAO,aACxB,cAACye,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,GAAI8C,GAAI,EAAvB,SACE,cAAC5H,GAAA,EAAD,CACE7H,KAAM,iCAAOuH,KAASpO,GAAhB,IAA2BiO,IAAKI,YAAYrO,MAClD2O,YAAaV,IAAKwN,eAAezb,GACjCC,MAAK,UAAEH,EAAUI,WAAWF,UAAvB,QAAgD,YAAZA,EAAwB,IAAM,EACvE8O,QAAuC,MAA9Bb,IAAKC,YAAYlO,GAC1B4O,aAA0B,YAAZ5O,EAAwB,SAAMqK,EAC5CwE,cAAe,SAAA5O,GAAK,OAAIiK,EAAkB,CAAEvK,KAAM,YAAaK,UAASC,cAP7CD,UAYrC,cAACmmB,GAAD,CACElkB,MAAM,aACN+Y,QAAS,cAACyD,EAAA,EAAD,CAAMtL,WAAS,EAACiT,cAAe,EAAGC,WAAY,EAA9C,SACNX,GAAale,KAAI,SAAAxH,GAAO,OAAI,wBAACye,EAAA,EAAD,yBAAMpL,MAAI,GAAKuS,IAAf,IAA+BngB,IAAKzF,IAAU,cAAC0N,GAAA,EAAD,aAAa1N,QAASA,GAAakmB,UAEhHI,YAAa,cAAC7H,EAAA,EAAD,CAAMtL,WAAS,EAACiT,cAAe,EAAGC,WAAY,EAA9C,SACVX,GAAale,KAAI,SAAAxH,GAAO,aACvB,cAACye,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,GAAI8C,GAAI,EAAvB,SACE,cAAC5H,GAAA,EAAD,CACE7H,KAAM,iCAAOuH,KAASpO,GAAhB,IAA2BiO,IAAKI,YAAYrO,MAClD2O,YAAaV,IAAKwN,eAAezb,GACjCC,MAAK,UAAEH,EAAUI,WAAWF,UAAvB,QAAmC,EACxC8O,QAAuC,MAA9Bb,IAAKC,YAAYlO,GAC1B6O,cAAe,SAAA5O,GAAK,OAAIiK,EAAkB,CAAEvK,KAAM,YAAaK,UAASC,cAN7CD,aAazC,SAASmmB,GAAT,GAA2D,IAAhClkB,EAA+B,EAA/BA,MAAO+Y,EAAwB,EAAxBA,QAASsL,EAAe,EAAfA,YAAe,EAChCzhB,oBAAS,GADuB,mBACjDge,EADiD,KAC3C+D,EAD2C,KAExD,OAAO,eAACpI,EAAA,EAAD,WACL,cAACvT,EAAA,EAAD,CAAa9I,GAAI,CAAE4Q,GAAI,GAAvB,SACE,eAACxH,EAAA,EAAD,CAAK9I,QAAQ,OAAOC,eAAe,gBAAnC,UACE,cAACwa,EAAA,EAAD,CAAY9V,QAAQ,YAApB,SAAiCnF,IACjC,cAAC6H,EAAA,EAAD,CAAQZ,KAAK,QAAQvH,MAAOkhB,EAAO,QAAU,OAAQ3b,QAAS,kBAAM0f,GAAS/D,IAA7E,SACE,iCAAM,cAAC,KAAD,CAAiBvgB,KAAMugB,EAAOgE,KAAShS,OAA7C,IAAyDgO,EAzItD,OADA,uBA8IT,cAACzZ,EAAA,EAAD,IACA,cAAC6B,EAAA,EAAD,UACG4X,EAAOyD,EAActL,O,yEChNb,SAAS8L,GAAT,GAAmJ,IAApHvgB,EAAmH,EAAnHA,eAAgBzG,EAAmG,EAAnGA,UAAmG,IAAxFA,UAAawX,EAA2E,EAA3EA,UAAW4M,EAAgE,EAAhEA,cAAoB7kB,EAA4C,EAAjDoG,IAAiD,EAC3HlG,qBAAWkB,KAAvCC,EADuJ,EACvJA,SAAUC,EAD6I,EAC7IA,cACZuJ,EAAoB9K,YAAoBC,GAGxCwB,EAAQH,GAAsBC,EACpC,OAAO,qCACL,cAAComB,GAAD,CAAiBxgB,eAAgBA,IACjC,eAACkY,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAGrK,GAAI,CAAEsJ,GAAI,GAAtC,UALqB,CAAC,CAAC,OAAQ,yBAA0B,CAAC,QAAS,mBAAoB,CAAC,QAAS,oBAO/EjE,KAAI,mCAAEgd,EAAF,KAAQwC,EAAR,YAClB,cAACvI,EAAA,EAAD,CAAMpL,MAAI,EAAYG,GAAI,GAAIC,GAAI,EAAG6C,GAAI,EAAzC,SACE,cAAC2Q,GAAD,CACE1gB,eAAgBA,EAChBzG,UAAWA,EACXoK,kBAAmBA,EACnBgd,UAAW1C,EACX2C,SAAUH,KANExC,QASfje,EAAe0e,eAAe,SAA9B,OAAwCpkB,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAO6Y,eAAiB,cAAC+E,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,GAAIC,GAAI,EAAG6C,GAAI,EAA9B,SACjE,cAAC2Q,GAAD,CACE1gB,eAAgBA,EAChBzG,UAAWA,EACXoK,kBAAmBA,EACnBgd,UAAU,SACVC,SAAS,2BAGV5gB,EAAe0e,eAAe,UAA9B,OAAyCpkB,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAO6Y,eAAiB,cAAC+E,EAAA,EAAD,CAAMpL,MAAI,EAACG,GAAI,GAAIC,GAAI,EAAG6C,GAAI,EAA9B,SAClE,cAAC2Q,GAAD,CACE1gB,eAAgBA,EAChBzG,UAAWA,EACXoK,kBAAmBA,EACnBgd,UAAU,UACVC,SAAS,iBAIf,cAAC1I,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,SAnCsE,CAAC,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,sBAAuB,IAqCnLhF,KAAI,YAAyB,IAAD,mBAAtBgd,EAAsB,KAAhBwC,EAAgB,KAATI,EAAS,KACpCC,EAAU/P,GAAa8P,EAC3B,OAAK7gB,EAAe0e,eAAeT,EAA9B,OAAoC3jB,QAApC,IAAoCA,OAApC,EAAoCA,EAAO6Y,cACzC,cAAC+E,EAAA,EAAD,CAAMpL,MAAI,EAAYiU,MAAO,CAAEhT,QAAS+S,EAAU,EAAI,IAAO7T,GAAI,GAAIC,GAAI,EAAzE,SACL,cAACwT,GAAD,CACE1gB,eAAgBA,EAChBzG,UAAWA,EACXoK,kBAAmBA,EACnBgd,UAAW1C,EACX2C,SAAUH,KANSxC,GAD+C,UAY1E,eAACtH,EAAA,EAAD,CAAY9V,QAAQ,KAAKjF,GAAI,CAAEmN,UAAW,UAA1C,+BAAyE4U,KACzE,cAACzF,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,SAEG,aAAI9C,MAAM,GAAGC,QAAQnC,KAAI,SAAA+B,GACxB,IAAIib,EAAI,uBAAmBjb,EAAI,GAC/B,OAAO,cAACkV,EAAA,EAAD,CAAMpL,MAAI,EAASG,GAAI,GAAIC,GAAI,EACpC6T,MAAO,CAAEhT,QAAS4P,EAAgB3a,EAAI,EAAI,IADrC,SAEL,cAAC0d,GAAD,CACE1gB,eAAgBA,EAChBzG,UAAWA,EACXoK,kBAAmBA,EACnBgd,UAAW1C,EACX2C,SAAQ,2BAAsB5d,EAAI,GAClCge,aAAc,kBAAMrd,EAAkB,CAAEga,cAAgB3a,EAAI,IAAO2a,EAAgB3a,EAAIA,EAAI,QARxEA,WAe/B,IAAMie,GAAqB,CACzBC,iBA0BF,YAAsC,IAAD,EAATnf,EAAS,EAATA,MACpBof,EAAO,mBACb,OAAO,cAAC1c,EAAA,EAAD,UAAU,cAACC,EAAA,EAAD,CAAa9I,GAAI,CAAEsY,EAAG,GAAtB,SACf,eAACyC,EAAA,EAAD,CAAYvb,MAAM,oBAAlB,UAAuCsM,IAAKI,YAAYqZ,GAAxD,IAAgEtZ,KAASuZ,QAAzE,IAAmFvZ,KAAS8N,KAA5F,IAAkG,2CAAS5T,EAAMof,UAAf,aAAS,EAAajmB,QAAQwM,IAAKE,UAAUuZ,cA5BjJE,mBA+BF,YAAwC,IAAD,EAATtf,EAAS,EAATA,MACtBof,EAAO,qBACb,OAAO,cAAC1c,EAAA,EAAD,UAAU,cAACC,EAAA,EAAD,CAAa9I,GAAI,CAAEsY,EAAG,GAAtB,SACf,eAACyC,EAAA,EAAD,CAAYvb,MAAM,sBAAlB,UAAyCsM,IAAKI,YAAYqZ,GAA1D,IAAkEtZ,KAASuZ,QAA3E,IAAqFvZ,KAASuO,MAA9F,IAAqG,2CAASrU,EAAMof,UAAf,aAAS,EAAajmB,QAAQwM,IAAKE,UAAUuZ,cAjCpJG,eAoCF,YAAoC,IAAD,EAATvf,EAAS,EAATA,MAClBof,EAAO,iBACb,OAAO,cAAC1c,EAAA,EAAD,UAAU,cAACC,EAAA,EAAD,CAAa9I,GAAI,CAAEsY,EAAG,GAAtB,SACf,eAACyC,EAAA,EAAD,CAAYvb,MAAM,kBAAlB,UAAsCsM,IAAKI,YAAYqZ,GAAvD,IAA+DtZ,KAASuZ,QAAxE,IAAkFvZ,KAAS6N,KAA3F,IAAiG,2CAAS3T,EAAMof,UAAf,aAAS,EAAajmB,QAAQwM,IAAKE,UAAUuZ,cAtChJI,eAgDF,YAA+B,IAAD,EAATxf,EAAS,EAATA,MAAS,EACNzD,mBAAS6D,OAAOiB,KAAKoe,IAAmB,IADlC,mBACrBtC,EADqB,KAChBuC,EADgB,KAEtBN,EAAI,UAAMjC,EAAN,cACV,OAAO,eAACza,EAAA,EAAD,CAAU7I,GAAI,CAAEM,QAAS,QAAzB,UACL,cAACwG,EAAA,EAAD,CAAgBC,KAAK,QAAQjH,MAAO8lB,GAAkBtC,GAAM9jB,MAAM,UAAlE,SACG+G,OAAOW,QAAQ0e,IAAmBvgB,KAAI,mCAAE/B,EAAF,KAAO6U,EAAP,YAAoB,cAACnR,EAAA,EAAD,CAAoBhC,SAAUse,IAAQhgB,EAAKf,SAAU+gB,IAAQhgB,EAAKyB,QAAS,kBAAM8gB,EAAOviB,IAAxF,SAA+F6U,GAAhF7U,QAE5E,cAAC8F,EAAA,EAAD,CAAKpJ,GAAI,CAAER,MAAM,GAAD,OAAK8jB,EAAL,SAAiBhL,EAAG,GAApC,SAAyC,2CAASnS,EAAMof,UAAf,aAAS,EAAajmB,QAAQwM,IAAKE,UAAUuZ,YAtDxFO,cAyDF,YAAmC,IAAD,EAAT3f,EAAS,EAATA,MACjBof,EAAO,gBACPQ,EAAc,cAACzgB,GAAA,EAAD,CAAkBzF,UAAU,MAAMC,MAAO,eAACib,EAAA,EAAD,8CAA4C,cAAC,IAAD,CAAWvb,MAAM,MAAjB,wBAArF,SAClB,cAAC4J,EAAA,EAAD,CAAKrJ,UAAU,OAAOC,GAAI,CAAEC,OAAQ,QAApC,SAA8C,cAAC,KAAD,CAAiBE,KAAMC,WAGvE,OAAO,cAACyI,EAAA,EAAD,UAAU,cAACC,EAAA,EAAD,CAAa9I,GAAI,CAAEsY,EAAG,GAAtB,SACf,eAAC,IAAD,CAAW9Y,MAAM,YAAjB,UAA8BsM,IAAKI,YAAYqZ,GAA/C,IAAuDtZ,KAASuO,MAAhE,IAAwEvO,KAAS8N,KAAjF,KAAwF,cAAC,IAAD,CAAWva,MAAM,WAAjB,SAA4B,iDAAoBumB,EAApB,SAApH,IAA0K,2CAAS5f,EAAMof,UAAf,aAAS,EAAajmB,QAAQwM,IAAKE,UAAUuZ,cA/DzNS,eAyEF,YAAoC,IAAD,EAAT7f,EAAS,EAATA,MAAS,EACXzD,mBAAS6D,OAAOiB,KAAKye,IAAwB,IADlC,mBAC1B3C,EAD0B,KACrBuC,EADqB,KAE3BN,EAAe,YAARjC,EAAoB,iBAApB,UAA0CA,EAA1C,mBACb,OAAO,eAACza,EAAA,EAAD,CAAU7I,GAAI,CAAEM,QAAS,QAAzB,UACL,cAACwG,EAAA,EAAD,CAAgBC,KAAK,QAAQjH,MAAOmmB,GAAuB3C,GAAM9jB,MAAM,UAAvE,SACG+G,OAAOW,QAAQ+e,IAAwB5gB,KAAI,mCAAE/B,EAAF,KAAO6U,EAAP,YAAoB,cAACnR,EAAA,EAAD,CAAoBhC,SAAUse,IAAQhgB,EAAKf,SAAU+gB,IAAQhgB,EAAKyB,QAAS,kBAAM8gB,EAAOviB,IAAxF,SAA+F6U,GAAhF7U,QAEjF,cAAC8F,EAAA,EAAD,CAAKpJ,GAAI,CAAER,MAAM,GAAD,OAAK8jB,EAAL,SAAiBhL,EAAG,GAApC,SAAyC,2CAASnS,EAAMof,UAAf,aAAS,EAAajmB,QAAQwM,IAAKE,UAAUuZ,aA9E1F,SAASX,GAAT,GAAkF,IAAvDxgB,EAAsD,EAAtDA,eAAsD,EAC3ChH,qBAAWkB,KAAvCC,EADuE,EACvEA,SAAUC,EAD6D,EAC7DA,cACZE,EAAQH,GAAsBC,EACpC,IAAKE,EAAO,OAAO,KACnB,IAAM2b,EAAa3b,EAAM6Y,aACnB2O,EAAW,aAAQC,KAAsB9L,IAAe,IAE9D,OADK6L,EAAYjoB,SAAS,kBAAqD,aAAjCmG,EAAe4Q,eAA8BkR,EAAYrQ,KAAK,iBACrG,cAACwG,EAAA,EAAD,CAAWrc,GAAI,CAAEsJ,GAAI,GAArB,SACL,cAACR,EAAA,EAAD,UACE,cAACwT,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,SACG6b,EAAY7gB,KAAI,SAAA/B,GACf,IAAM8iB,EAAMf,GAAmB/hB,GAC/B,OAAK8iB,EACE,cAAC9J,EAAA,EAAD,CAAMpL,MAAI,EAAV,SAAqB,cAACkV,EAAD,CAAKjgB,MAAOzH,KAAjB4E,GADN,cA0B3B,IAAMsiB,GAAoB,CACxB,KAAQ,iCAAO9Z,IAAKI,YAAY,kBAAxB,IAA4CD,KAAS6N,KAArD,MAA8D7N,KAASoa,SAC/E,QAAW,iCAAOva,IAAKI,YAAY,qBAAxB,IAA+CD,KAASuZ,QAAxD,IAAkEvZ,KAASoa,SACtF,KAAQ,iCAAOva,IAAKI,YAAY,kBAAxB,IAA4CD,KAAS8N,KAArD,MAA8D9N,KAASoa,SAC/E,MAAS,iCAAOva,IAAKI,YAAY,mBAAxB,IAA6CD,KAASuO,MAAtD,MAAgEvO,KAASoa,UAsBpF,IAAMJ,GAAyB,CAC7B,QAAW,eAAC,IAAD,CAAWzmB,MAAM,aAAjB,UAA+BsM,IAAKI,YAAY,kBAAhD,IAAoED,KAASuZ,QAA7E,IAAuFvZ,KAASuO,MAAhG,IAAwGvO,KAAS6N,KAAjH,IAAwH7N,KAAS8N,KAAjI,IAAwI9N,KAASqa,OAC5J,KAAQ,iCAAOxa,IAAKI,YAAY,uBAAxB,IAAiDD,KAAS6N,KAA1D,IAAiE7N,KAASqa,OAClF,QAAW,iCAAOxa,IAAKI,YAAY,0BAAxB,IAAoDD,KAASuZ,QAA7D,IAAuEvZ,KAASqa,OAC3F,KAAQ,iCAAOxa,IAAKI,YAAY,uBAAxB,IAAiDD,KAAS8N,KAA1D,IAAiE9N,KAASqa,OAClF,MAAS,iCAAOxa,IAAKI,YAAY,wBAAxB,IAAkDD,KAASuO,MAA3D,IAAmEvO,KAASqa,QAavF,IAAMC,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IASxC,SAASzB,GAAT,GAAiL,IAArJ1gB,EAAoJ,EAApJA,eAAoJ,IAApIzG,UAAa6oB,EAAuH,EAAvHA,OAAQrR,EAA+G,EAA/GA,UAAgBjY,EAA+F,EAApGoG,IAAqByE,EAA+E,EAA/EA,kBAAmBgd,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,SAAUI,EAAuC,EAAvCA,aAAuC,EAC1IhoB,qBAAWkB,KAAvCC,EADsK,EACtKA,SAAUC,EAD4J,EAC5JA,cACdE,EAAQH,GAAsBC,EAE5BioB,EAAoBnpB,uBACxB,SAAAwN,GAAQ,OAAI,cAAC4b,GAAA,EAAD,CAAgB3hB,QAASqgB,EAAzB,SAAwCta,MACpD,CAACsa,IAGH,IAAK1mB,EAAO,OAAO,KACnB,IAAI2Y,EAA6B,KAEjC,GAAI0N,KAAayB,EAAQ,CAAC,IAAD,EACjBG,EAAkB,UAAGjoB,EAAM,GAAD,OAAIqmB,EAAJ,iBAAR,QAAiC,EACnD6B,EAAeJ,EAAOzB,GAAa4B,EAKzCtP,EAAS,qCACP,cAACvO,EAAA,EAAD,CAAa9I,GAAI,CAAE4Q,GAAI,GAAvB,SACE,cAAC9J,EAAA,EAAD,CAAgBmS,WAAS,EAACnZ,MAAK,qBAAgB8mB,GAAgBpnB,MAAOmnB,EAAa,OAAS,UAA5F,SACG,aAAIpf,MAAMgf,GAAapR,IAA4B,SAAd4P,GAAyB4B,EAAiB,EAAJ,IAAQnf,QAAQnC,KAAI,SAAA+B,GAAC,OAC/F,cADmG,CAClGJ,EAAA,EAAD,CAAkBhC,SAAUwhB,EAAOzB,KAAgB3d,EAAI,EAAI7E,SAAUikB,EAAOzB,KAAgB3d,EAAI,EAAIrC,QAAS,kBARvF8hB,EAQuHzf,EAAI,EAPvJof,EAOwIzB,GAPzH8B,OACf9e,EAAkB,CAAEye,WAFC,IAAOK,GAQtB,wBAAiKzf,EAAIuf,EAAa,IAAnKvf,UAGrB,cAACH,EAAA,EAAD,OAIJ,IAAM6f,EAAc1iB,EAAe2iB,eAAehC,EAAWrmB,GACvDsoB,EAAoBF,GAAeve,aAAcue,EAAapoB,GAC9DuoB,EAAWD,KAAuBA,EAAkBzd,QACxD,cAACnL,GAAA,EAAD,UACG4oB,EAAkB3hB,KAAI,SAAChH,EAAO+I,GAAR,OACrB,cAAChJ,GAAA,EAAD,CAAsBC,MAAOA,GAAV+I,QAGnB8f,EAAc9iB,EAAe0e,eAAeiC,EAAWrmB,EAAM6Y,cAC7DtO,EAAQ,OAAGie,QAAH,IAAGA,OAAH,EAAGA,EAAaje,SAE9B,OAAO,eAACoT,EAAA,EAAD,CAAWrc,GAAI,CAAEgC,OAAQ,QAAzB,UACJqV,EACD,eAACvO,EAAA,EAAD,WACE,cAACqe,GAAA,EAAD,CAAoBpR,YAAaqP,EAAcpP,QAASyQ,EAAxD,SACE,eAACnK,EAAA,EAAD,CAAMtL,WAAS,EAAChR,GAAI,CAAEiR,SAAU,UAAhC,UACE,cAACqL,EAAA,EAAD,CAAMpL,MAAI,EAAV,SACE,cAAC9H,EAAA,EAAD,CAAKrJ,UAAU,MAAM8E,IAAG,OAAEqiB,QAAF,IAAEA,OAAF,EAAEA,EAAa9S,IAAKpU,GAAI,CAAE+B,MAAO,GAAIC,OAAQ,YAEvE,eAACsa,EAAA,EAAD,CAAMpL,MAAI,EAAClE,SAAU,EAAGhN,GAAI,CAAE8Q,GAAI,GAAlC,UACE,cAACiK,EAAA,EAAD,CAAY9V,QAAQ,KAApB,gBAA0BiiB,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAaxiB,OACvC,cAACqW,EAAA,EAAD,CAAY9V,QAAQ,YAApB,SAAiC+f,YAKtC/b,EAAW,cAACD,GAAA,EAAD,CAAuBC,WAAU/L,eAAcsB,gBAAeD,aAAiB,KAC1F0oB,Q,cCxNP,SAASG,GAAT,GAA0E,IAAtDtc,EAAqD,EAArDA,SAAUuc,EAA2C,EAA3CA,QAASvpB,EAAkC,EAAlCA,MAAU4L,EAAwB,8CACvE,OAAI5L,IAAUupB,EAAgB,KACvB,cAAC,WAAD,CAAU5W,SAAU,cAACuO,EAAA,EAAD,CAAU/Z,QAAQ,cAAclD,MAAM,OAAOC,OAAQ,MAAzE,SACL,6CACEslB,KAAK,WACLC,OAAQzpB,IAAUupB,EAClB3pB,GAAE,0BAAqBI,GACvB0pB,kBAAA,qBAA+B1pB,IAC3B4L,GALN,aAOGoB,OAaQ,SAAS2c,GAAT,GAA+I,IAAD,EAA9GvqB,EAA8G,EAA9GA,aAAcwqB,EAAgG,EAAhGA,gBAAiBvM,EAA+E,EAA/EA,OAAkBwM,EAA6D,EAAvEppB,SAAwByV,EAA+C,EAA/CA,QAAS4T,EAAsC,EAAtCA,QAC/GzqB,EAAWC,qBAAWC,KAD+H,EAEnHqF,oBAAS,GAF0G,mBAEpJjE,EAFoJ,KAEtIuf,EAFsI,OAKjH5C,cALiH,mBAKpJC,EALoJ,KAKrIC,EALqI,KASrJhI,EAAerP,YAAWsP,KAAYpP,SAAU,IAChDH,EAAkBC,YAAWC,KAAeC,SAAU,IACtD2c,EAAiB7c,YAAWkK,IAAchK,SAAU,IAEpDxG,EAAYiB,mBAAQ,wBACxByc,IAAa,UAAKle,EAASS,SAASV,UAAvB,QAAwC2qB,YAAiB3qB,MACtE,CAACA,EAAcme,EAAele,IAC1B2X,EAASlW,mBAAQ,kBACrByc,GAAiBle,EAASqe,WAAW7d,EAAUqlB,kBAC/C,CAACrlB,EAAUqlB,eAAgB3H,EAAele,IAEtCiH,EAAc,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAkB9G,GACnCgX,EAAcY,EAAM,OAAGxB,QAAH,IAAGA,OAAH,EAAGA,EAAewB,EAAOxR,UAAO4E,EACpD+O,EAAS7S,GAAkB8P,GAAe4M,GAAkB,CAAE1c,iBAAgB8P,cAAa4M,kBAEjG9d,qBAAU,WACR,OAAO7F,EAAS2qB,WAAW5qB,EAAcoe,KACxC,CAACpe,EAAcoe,EAAkBne,IAEpC6F,qBAAU,kBAAM7F,EAAS0X,aAAalX,EAAUqlB,eAAgB1H,KAC9D,CAAC3d,EAAUqlB,eAAgB1H,EAAkBne,IAE/C,IAAMoB,EAAWK,mBAAQ,WACvB,GAAK+oB,EACL,OAAOI,YAAUJ,KAChB,CAACA,IAlCuJ,EAqCrIjlB,mBAA2BklB,IAAqBrpB,EAAW,eAAiB,cArCyD,mBAqCpJypB,EArCoJ,KAqC/IC,EArC+I,KAuCrJC,GAAQ5qB,uBAAY,SAAC6F,EAAGsE,GAAJ,OAAUwgB,EAAOxgB,KAAI,CAACwgB,IAE1Cpa,GAAuB,iBAAGtP,QAAH,IAAGA,OAAH,EAAGA,EAAUsP,+BAAb,QAAwC,EAC/DrP,GAAgBI,mBAAQ,kBAAMyc,GAAiBjX,GAAkB8P,GAAe4M,GACpF9hB,IAAUmpB,eAAexqB,EAAWR,EAAUiH,EAAgB8P,EAAa4M,EAAgBjT,MAC3F,CAACwN,EAAe1d,EAAWyG,EAAgB8P,EAAa4M,EAAgBjT,GAAyB1Q,IAGnG,OAAO,cAAC0L,EAAA,EAAD,UACL,eAAC,IAAakV,SAAd,CAAuBjgB,MAAO,CAAES,WAAUC,iBAAeC,eAAcuf,mBAAvE,UACE,eAAClV,EAAA,EAAD,CAAa9I,GAAI,CACf,yBAA0B,CAAEsJ,GAAI,IADlC,UAGE,eAACgT,EAAA,EAAD,CAAMtL,WAAS,EAAC3G,QAAS,EAAzB,UACE,cAACiS,EAAA,EAAD,CAAMpL,MAAI,EAAClE,SAAU,EAArB,SACE,cAACob,GAAD,CAAoBhkB,eAAgBA,EAAgBzG,UAAWA,EAAW+pB,gBAAiBA,QAE1F7Z,IAA2B,cAACyO,EAAA,EAAD,CAAMpL,MAAI,EAAV,SAAW,cAACwQ,EAAA,EAAD,CAAM1hB,GAAI,CAAEsY,EAAG,EAAGc,QAAS,SAAAtV,GAAC,OAAIA,EAAE7C,QAAQ0gB,QAAQlgB,OAAlD,SAA0D,cAACsZ,EAAA,EAAD,UAAY,kEAAqClN,cACjJmG,GAAW,cAACsI,EAAA,EAAD,CAAMpL,MAAI,EAAV,SACZ,cAAC8L,EAAA,EAAD,CAAajY,QAASiP,SAG1B,cAACqI,EAAA,EAAD,UACE,eAACgM,EAAA,EAAD,CACE/lB,SAAU4lB,GACVpqB,MAAOkqB,EACP/iB,QAAQ,YAHV,UAKE,cAACqjB,EAAA,EAAD,CAAKxqB,MAAM,YAAYkN,MAAM,gBAC1BzM,GAAY,cAAC+pB,EAAA,EAAD,CAAKxqB,MAAM,eAAekN,MAAM,kBAC/C,cAACsd,EAAA,EAAD,CAAKxqB,MAAM,YAAYkN,MAAOzM,EAAW,oBAAsB,cAC/D,cAAC+pB,EAAA,EAAD,CAAKxqB,MAAM,SAASkN,MAAM,iBAG9B,cAAC,IAAD,CAAmBrN,UAAWA,MAC3BsZ,GAAU,cAACyH,EAAD,CAAiBzH,OAAQA,IACtC,cAAC,IAAD,CAAiBtZ,UAAWA,IAG3ByG,GAAkB,cAACgjB,GAAD,CAAUtpB,MAAM,YAAYupB,QAASW,EAArC,SACjB,cAAClG,GAAD,CAAuB1d,eAAgBA,EAAgBzG,UAAWA,MAGnEsZ,GAAU,cAAC,IAAa8G,SAAd,CAAuBjgB,MAAO,CAAES,cAAU2J,EAAW1J,iBAAeC,eAAcuf,mBAAlF,SACT,cAACoJ,GAAD,CAAUtpB,MAAM,YAAYupB,QAASW,EAArC,SACE,cAAC,GAAD,CAAuB/Q,OAAQA,EAAQtZ,UAAWA,QAIrDY,GAAY0Y,GAAU,cAACmQ,GAAD,CAAUtpB,MAAM,eAAeupB,QAASW,EAAxC,SACrB,cAAC,GAAD,CAAuB/Q,OAAQA,EAAQtZ,UAAWA,MAGnDyG,GAAkB,cAACgjB,GAAD,CAAUtpB,MAAM,SAASupB,QAASW,EAAlC,SACjB,cAACrD,GAAD,CAAqBvgB,eAAgBA,EAAgBzG,UAAWA,WAGjEwd,GAAU,cAAClU,EAAA,EAAD,IACZkU,GAAU,cAACrS,EAAA,EAAD,CAAa9I,GAAI,CAAE4Q,GAAI,GAAvB,SACRuK,SAYT,SAASiN,GAAT,GAAkM,IAAD,EAAnKhkB,EAAmK,EAAnKA,eAAgBzG,EAAmJ,EAAnJA,UAAmJ,IAAxIA,UAAkBT,EAAsH,EAA3HoG,IAA2H,IAAxG2e,kBAAwG,MAA3F,QAA2F,MAAlFrT,aAAkF,MAA1E,EAA0E,MAAvEuG,iBAAuE,MAA3D,EAA2D,EAAtD5S,EAAsD,EAAtDA,SAAUmlB,EAA4C,EAA5CA,gBAA4C,EAC7JhlB,oBAAS,GADoJ,mBACxLyZ,EADwL,KAC7KC,EAD6K,KAEzLrU,EAAoB9K,YAAoBC,GACxCqrB,EAAoBnkB,EAAiB,iCACzC,cAACqa,EAAA,EAAD,CAAS5Z,IAAKT,EAAeQ,SAAU5E,GAAI,CAAEkS,GAAI,KAChD9N,EAAeM,QACR,sDACJiX,EAAWre,uBAAY,SAACsR,GAC5BA,EAAQkD,YAAMlD,EAAO,EAAG,IACxB,IAAMuG,EAAYkB,IAAkBuF,WAAU,SAAAC,GAAO,OAAIjN,GAASiN,KAClE9T,EAAkB,CAAE6G,QAAOuG,gBAC1B,CAACpN,IACE+T,EAAexe,uBAAY,WAC/B,IAAMye,EAAiB1F,IAAkBuF,WAAU,SAAAC,GAAO,OAAc,KAAVjN,GAAgBA,IAAUiN,KACtD9T,EAA9BoN,IAAc4G,EAAkC,CAAE5G,UAAWA,EAAY,GACtD,CAAEA,UAAW4G,MACnC,CAAChU,EAAmBoN,EAAWvG,IAClC,OAAO,mCAAIrM,EA0BL,eAACwY,EAAA,EAAD,CAAY9V,QAAQ,KAApB,UAA0BsjB,EAA1B,IAA8CnkB,GAAkBpF,IAAU6e,eAAelgB,MA1BzE,qCACpB,cAAC6qB,EAAA,EAAD,CAAyBvV,KAAMkJ,EAAWjJ,OAAQ,kBAAMkJ,GAAa,IAAQjJ,SAAUuU,IACvF,eAACpb,EAAA,EAAD,CAAatM,GAAI,CAAEoZ,QAAS,SAAAtV,GAAC,OAAIA,EAAE7C,QAAQC,YAAYC,OAAvD,UACE,cAACwG,EAAA,EAAD,CAAQpF,UAAWmlB,EAAiB3iB,QAAS,kBAAMqX,GAAa,IAAOzX,UAAW,cAACsF,EAAA,EAAD,CAAWpF,IAAG,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAgBU,eAAlH,0BAAsIV,QAAtI,IAAsIA,OAAtI,EAAsIA,EAAgBM,YAAtJ,QAA8J,wBAC/I,OAAdN,QAAc,IAAdA,OAAA,EAAAA,EAAgB8J,QAAS,mBAAa9J,QAAb,IAAaA,OAAb,EAAaA,EAAgB8J,QAAS,cAACpH,EAAA,EAAD,CAAgBhH,MAAO2oB,IAAcxG,GAAYvd,KAAjD,SAC7D6B,OAAOiB,KAAKpD,EAAe8J,MAAMwa,SAASrjB,KAAI,SAAAmU,GAAM,OACnD,cAACxS,EAAA,EAAD,CAAuBhC,SAAUid,IAAezI,EAAQjX,SAAU0f,IAAezI,EAAQzU,QAAS,kBAAMgD,EAAkB,CAAEka,WAAYzI,KAAxI,SACE,iCAASiP,IAAcjP,GAAQ9U,QADlB8U,QAGnB,cAACnX,EAAA,EAAD,UACE,cAACA,EAAA,EAAD,CAAmBC,SAAUqZ,EAAU7d,MAAO8Q,EAC5C4N,eAAe,QACftP,WAAY,CAAEiC,IAAK,EAAGD,IAAK,GAAIlP,GAAI,CAAEmN,UAAW,WAChDnN,GAAI,CAAE+B,MAAO,OAAQC,OAAQ,OAAQ8O,GAAI,GACzCvO,UAAW6B,MAEf,cAACuD,EAAA,EAAD,CAAQ3H,GAAI,CAAE8Q,GAAI,GAAKvO,UAAWka,YAAe7N,KAAWxK,EAAgBW,QAAS+W,EAArF,SAAmG,wCAAWzF,IAAkBlB,QAChI,cAACrO,EAAA,EAAD,CAAgBhH,MAAO,eAAgByC,UAAW6B,EAAlD,SACGsY,IAAgBrX,KAAI,YAAe,IAAD,mBAAZsX,EAAY,KAARC,EAAQ,KAE3BC,EADYF,IAAOtG,IAAkBuG,GACnB,cAAUD,GAAV,cAAwBA,EAAxB,YAA8BtG,IAAkBuG,IAClE5X,EAAW2X,IAAO/N,GAASgO,IAAOzH,EACxC,OAAO,cAACnO,EAAA,EAAD,CAA8BhC,SAAUA,EAAUzC,SAAUyC,EAAUD,QAAS,kBAAMgD,EAAkB,CAAE6G,MAAO+N,EAAIxH,UAAWyH,KAA/H,SAAuIC,GAAvI,UAAkBF,EAAlB,YAAwBC","file":"static/js/19.8ad6757d.chunk.js","sourcesContent":["import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { characterBaseStats, overrideStatKeys } from \"../Util/StatUtil\";\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | characterReducerResetStatsAction | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey) {\r\n  const database = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"editStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey, value } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n\r\n        if (bonusStats[statKey] === value) return\r\n        if (overrideStatKeys.includes(statKey)) {\r\n          if ((characterBaseStats(character)[statKey] ?? 0) === value)\r\n            delete bonusStats[statKey]\r\n          else\r\n            bonusStats[statKey] = value\r\n        } else {\r\n          if (value)\r\n            bonusStats[statKey] = value\r\n          else\r\n            delete bonusStats[statKey]\r\n        }\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\r\n  }, [characterKey, database])\r\n\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, List, ListItem, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { buildContext } from \"../Build/Build\";\r\nimport Character from \"../Character/Character\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\nimport ColorText from \"./ColoredText\";\r\n\r\nexport default function FieldDisplay({ field }: { field: IFieldDisplay }) {\r\n  const { newBuild, equippedBuild, compareBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild)\r\n  const canShow = useMemo(() => build ? field?.canShow?.(build) : false, [field, build])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", build)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      //compareAgainstEquipped\r\n      if (compareBuild && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</ColorText> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareBuild, fixedVal, equippedBuild, field, build])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", build), [field, build])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", build), [field, build])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build)\r\n    return fieldFormulaText ? <BootstrapTooltip placement=\"top\" title={<Typography>{fieldFormulaText}</Typography>}>\r\n      <Box component=\"span\" sx={{ cursor: \"help\", ml: 1 }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n    </BootstrapTooltip> : null\r\n  }, [field, build])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", build), [field, build])\r\n\r\n  if (!canShow) return null\r\n  return <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}  >\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <Typography color={`${fieldVariant}.main`}>{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</Typography>\r\n  </ListItem>\r\n}\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));","import { InputBase, InputProps, styled } from '@mui/material'\r\nimport { useCallback, useEffect, useState } from 'react'\r\ntype props = Omit<InputProps, \"onChange\"> & {\r\n  value?: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  allowEmpty?: boolean,\r\n}\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  transition: \"all 0.5s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-focused\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}))\r\n\r\n// wrap the Input with this when using the input in a buttongroup\r\nexport const CustomNumberInputButtonGroupWrapper = styled(\"button\", {\r\n  shouldForwardProp: (prop) => ![\"fullWidth\", \"disableRipple\", \"disableFocusRipple\", \"disableElevation\"].includes(prop as string)\r\n})(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  padding: 0,\r\n  overflow: \"hidden\",\r\n  border: \"none\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  \"& div\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"&.MuiButtonGroup-grouped:not(:last-of-type)\": {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n  },\r\n  \"&.MuiButtonGroup-grouped:not(:first-of-type)\": {\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n  },\r\n}))\r\n\r\nexport default function CustomNumberInput({ value, onChange, disabled = false, float = false, ...props }: props) {\r\n  const [state, setState] = useState(\"\")\r\n  const sendChange = useCallback(\r\n    () => {\r\n      if (state === \"\") return onChange(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state))\r\n    },\r\n    [onChange, state, float],\r\n  )\r\n  useEffect(() => setState(value?.toString() ?? \"\"), [value, setState]) // update value on value change\r\n  const onInputChange = useCallback(e => setState(e.target.value), [setState],)\r\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && sendChange(), [sendChange],)\r\n  return <StyledInputBase\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    type=\"number\"\r\n    onChange={onInputChange}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={onKeyDOwn}\r\n    {...props}\r\n  />\r\n}","import { BusinessCenter, Replay } from \"@mui/icons-material\";\r\nimport { Divider, ListItemIcon, MenuItem, Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport DropdownButton, { DropdownButtonProps } from \"../DropdownMenu/DropdownButton\";\r\nimport ThumbSide from \"./ThumbSide\";\r\n\r\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  value: CharacterKey | \"\"\r\n  onChange: (ck: CharacterKey | \"\") => void\r\n  filter?: (cs: CharacterSheet) => boolean\r\n  inventory?: boolean\r\n  noUnselect?: boolean\r\n}\r\n\r\nexport default function CharacterDropdownButton({ value, onChange, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const database = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\r\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck])).sort()\r\n  return <DropdownButton\r\n    {...props}\r\n    title={characterSheet?.name ?? (inventory ? t`inventory` : t`unselect`)}\r\n    color={value ? \"success\" : \"primary\"}\r\n    startIcon={characterSheet?.thumbImg ? <ThumbSide src={characterSheet.thumbImgSide} /> : (inventory ? <BusinessCenter /> : <Replay />)}>\r\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <BusinessCenter />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`inventory`}\r\n      </Typography>\r\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <Replay />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`unselect`}\r\n      </Typography>\r\n    </MenuItem>)}\r\n    {!noUnselect && <Divider key=\"div\" />}\r\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value)}\r\n  </DropdownButton >\r\n}\r\n\r\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\r\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\") {\r\n  return characterKeys.map(characterKey =>\r\n    <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\r\n      <ListItemIcon>\r\n        <ThumbSide src={characterSheets[characterKey].thumbImgSide} />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {characterSheets?.[characterKey]?.name}\r\n      </Typography>\r\n    </MenuItem>)\r\n}","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n}));\r\nexport default BootstrapTooltip","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, Divider, MenuItem } from '@mui/material';\r\nimport React from 'react';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled = false, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled?: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</SqBadge>\r\n    return <DropdownButton size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n      <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n        <span>Not Active</span>\r\n      </MenuItem>\r\n      <Divider />\r\n      {Object.entries(conditional.states).flatMap(([stateKey, condial]: any, i) =>\r\n        [...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n          <MenuItem key={stateKey + i} onClick={() => setConditional([stack, stateKey])} selected={conditionalStateKey === stateKey && conditionalNum === stack} disabled={conditionalStateKey === stateKey && conditionalNum === stack} >\r\n            {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n          </MenuItem>)\r\n      )}\r\n    </DropdownButton>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</SqBadge>\r\n      return <DropdownButton size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n        <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n          <span>Not Active</span>\r\n        </MenuItem>\r\n        <Divider />\r\n        {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <MenuItem key={stack} onClick={() => setConditional([stack])} selected={conditionalNum === stack} disabled={conditionalNum === stack}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </MenuItem>)}\r\n      </DropdownButton>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"small\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled} startIcon={conditionalNum ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n        {name}\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { CardContent } from \"@mui/material\"\r\nimport { useCallback, useContext, useMemo } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport IConditional from \"../Types/IConditional\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  characterKey: CharacterKey\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, characterKey }: ConditionalDisplayProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    if (!stats) return\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else if (conditional.keys)\r\n      layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats, characterDispatch])\r\n\r\n  if (!canShow || !stats) return null\r\n  return <CardDark>\r\n    <CardContent>\r\n      <ConditionalSelector\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </CardContent>\r\n    <FieldDisplayList sx={{ m: 0 }}>\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Box } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport { DocumentSection } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport ConditionalDisplay from \"./ConditionalDisplay\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype SkillDisplayCardProps = {\r\n  sections: DocumentSection[],\r\n  characterKey: CharacterKey,\r\n}\r\nexport default function DocumentDisplay({ sections, characterKey }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  return <div>{sections?.map((section, i) => {\r\n    if (!section.canShow!(build)) return null\r\n    const talentText = evalIfFunc(section.text, build)\r\n    const fields = section.fields ?? []\r\n    return <Box key={\"section\" + i} sx={{\r\n      pb: -1,\r\n      \"& > *\": {\r\n        mb: 1\r\n      }\r\n    }}>\r\n      <div>{talentText}</div>\r\n      {fields.length > 0 && <FieldDisplayList>\r\n        {fields?.map?.((field, i) => <FieldDisplay key={i} field={field} />)}\r\n      </FieldDisplayList>}\r\n      {!!section.conditional && <ConditionalDisplay conditional={section.conditional} characterKey={characterKey} />}\r\n    </Box>\r\n  })}</div>\r\n}\r\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\nconst ExpandButton = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: (theme as any).transitions.create('transform', {\r\n    duration: (theme as any).transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default ExpandButton","import { styled } from \"@mui/system\";\r\n\r\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  height: `2.3em`,\r\n  lineHeight: 1,\r\n  verticalAlign: \"text-bottom\",\r\n  marginTop: theme.spacing(-3),\r\n  marginLeft: theme.spacing(-1.25),\r\n  marginRight: theme.spacing(-1),\r\n  marginBottom: theme.spacing(-1),\r\n}))\r\n\r\nexport default ThumbSide","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\n\r\nexport default function LocationName({ location }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t`inventory`}</span>}\r\n  </Typography>\r\n\r\n}","import { Button, ButtonProps, styled } from \"@mui/material\";\r\n\r\nconst DisabledButton = styled(Button)(({ theme }) => ({\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.text.secondary,\r\n  }\r\n}))\r\n\r\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\r\n  return <DisabledButton {...props} disabled  >\r\n    {children}\r\n  </DisabledButton>\r\n}\r\n","import { Box, Typography } from \"@mui/material\"\r\nimport { useMemo } from \"react\"\r\nimport Character from \"../Character/Character\"\r\nimport Formula from \"../Formula\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat from \"../Stat\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { characterBaseStats } from \"../Util/StatUtil\"\r\nimport ColorText from \"./ColoredText\"\r\nimport StatIcon from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", hasBonus = false }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <ColorText color={diff > 0 ? \"success\" : \"error\"}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</ColorText>\r\n  const valueText = <>{oldText}{diffText}</>\r\n  return <Box display=\"flex\" justifyContent=\"space-between\" >\r\n    <Typography>{label}</Typography>\r\n    <Typography>\r\n      {hasBonus ? <strong>{valueText}</strong> : valueText}\r\n    </Typography>\r\n  </Box>\r\n}\r\ntype StatDisplayProps = {\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ character, equippedBuild, newBuild, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined, [statKey])\r\n\r\n  const { val, oldVal, fixed, unit, label, hasBonus } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        oldVal = characterBaseStats(character)[statKey] as number | undefined\r\n        if (build) {\r\n          if (statKey === \"finalHP\")\r\n            oldVal = build.characterHP\r\n          else if (statKey === \"finalDEF\")\r\n            oldVal = build.characterDEF\r\n          else if (statKey === \"finalATK\")\r\n            oldVal = build.characterATK + build.weaponATK\r\n        }\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <ColorText color={labelVariant} >{Character.getTalentFieldValue(field, \"text\", build)}</ColorText>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      unit = Character.getTalentFieldValue(field, \"unit\", build, \"\")\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    return { val, oldVal, fixed, unit, label, hasBonus: Character.hasBonusStats(character, statKey) }\r\n  }, [character, equippedBuild, newBuild, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, label: label as any, hasBonus }} />\r\n}","import { Replay } from \"@mui/icons-material\"\r\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\r\nimport { ReactNode } from \"react\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport TextButton from \"../Components/TextButton\"\r\n\r\ntype StatInputInput = ButtonGroupProps & {\r\n  name: Displayable,\r\n  children?: ReactNode,\r\n  value: number,\r\n  placeholder?: string,\r\n  defaultValue?: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n  onReset?: () => void\r\n}\r\nconst FlexButtonGroup = styled(ButtonGroup)({\r\n  display: \"flex\"\r\n})\r\n\r\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\r\n\r\n  return <FlexButtonGroup {...restProps} >\r\n    {children}\r\n    <TextButton sx={{ whiteSpace: \"nowrap\" }} >\r\n      {name}\r\n    </TextButton>\r\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: 30, flexGrow: 1 }} >\r\n      <CustomNumberInput\r\n        sx={{ px: 1 }}\r\n        inputProps={{\r\n          sx: { textAlign: \"right\" }\r\n        }}\r\n        float={percent}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onValueChange}\r\n        disabled={disabled}\r\n        endAdornment={percent ? \"%\" : undefined}\r\n      />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\r\n      <Replay />\r\n    </Button>\r\n  </FlexButtonGroup>\r\n}","import { faBan, faChartLine, faEdit, faInfoCircle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Lock, LockOpen } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardActions, CardContent, CardMedia, Chip, Grid, IconButton, Skeleton, Tooltip, Typography } from '@mui/material';\r\nimport React, { Suspense, useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport BootstrapTooltip from '../Components/BootstrapTooltip';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton';\r\nimport LocationName from '../Components/Character/LocationName';\r\nimport ColorText from '../Components/ColoredText';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { database as localDatabase, DatabaseContext } from '../Database/Database';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport Stat from '../Stat';\r\nimport { allSubstats, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { valueStringWithUnit } from '../Util/UIUtil';\r\nimport { clamp } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport SlotNameWithIcon from './Component/SlotNameWIthIcon';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: ICachedArtifact, onEdit?: (string) => void, onDelete?: (string) => void, mainStatAssumptionLevel?: number, effFilter?: Set<SubstatKey> }\r\nconst allSubstatFilter = new Set(allSubstats)\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter }: Data): JSX.Element | null {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseArtifact, updateDatabaseArtifact] = useState(undefined as ICachedArtifact | undefined)\r\n  useEffect(() =>\r\n    artifactId ? database.followArt(artifactId, updateDatabaseArtifact) : undefined,\r\n    [artifactId, updateDatabaseArtifact, database])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? database._getArt(artifactId) : undefined))?.setKey), [artifactObj, artifactId])\r\n  const equipOnChar = (charKey: CharacterKey | \"\") => database.setArtLocation(artifactId!, charKey)\r\n\r\n  const editable = !artifactObj && database === localDatabase // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? databaseArtifact\r\n  if (!art) return null\r\n\r\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude, location = \"\" } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  const mainStatVal = <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{valueStringWithUnit(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, Stat.getStatUnit(mainStatKey))}</ColorText>\r\n  const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\r\n  const artifactValid = maxEfficiency !== 0\r\n  const slotName = sheet?.getSlotName(slotKey) || \"Unknown Piece Name\"\r\n  const slotDesc = sheet?.getSlotDesc(slotKey)\r\n  const slotDescTooltip = slotDesc && <BootstrapTooltip placement=\"top\" title={<Typography>{slotDesc}</Typography>}>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n  const setEffects = sheet?.setEffects\r\n  const setDescTooltip = sheet && setEffects && <BootstrapTooltip placement=\"top\" title={\r\n    <span>\r\n      {Object.keys(setEffects).map(setNumKey => <span key={setNumKey}>\r\n        <Typography variant=\"h6\"><SqBadge color=\"success\">{t(`setEffectNum`, { setNum: setNumKey })}</SqBadge></Typography>\r\n        <Typography>{sheet.setEffectDesc(setNumKey as any)}</Typography>\r\n      </span>)}\r\n    </span>\r\n  }>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <CardContent className={`grad-${rarity}star`} sx={{ py: 1 }}>\r\n        <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={levelVariant as any} />\r\n          <Typography sx={{ pl: 1, flexGrow: 1 }}>{slotName} {slotDescTooltip}</Typography>\r\n          <IconButton color=\"primary\" disabled={!editable} onClick={() => database.updateArt({ lock: !lock }, id)}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>\r\n        </Box>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item flexGrow={1}>\r\n            <Typography color=\"text.secondary\" variant=\"body2\">\r\n              <SlotNameWithIcon slotKey={slotKey} />\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {Stat.getStatName(mainStatKey)}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <strong>{mainStatVal}</strong>\r\n            </Typography>\r\n            <Stars stars={rarity} colored />\r\n            {/* {process.env.NODE_ENV === \"development\" && <Typography color=\"common.black\">{id || `\"\"`} </Typography>} */}\r\n          </Grid>\r\n          <Grid item xs={3} md={4}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={sheet?.slotIcons[slotKey] ?? \"\"}\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardContent sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\", pt: 1, pb: 0 }}>\r\n        {substats.map((stat: ICachedSubstat, i) => {\r\n          if (!stat.value) return null\r\n          const numRolls = stat.rolls?.length ?? 0\r\n          const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n          const efficiency = stat.efficiency ?? 0\r\n          const effOpacity = 0.3 + (efficiency / 100) * 0.7\r\n          const statName = Stat.getStatName(stat.key)\r\n          return (<Box key={i} sx={{ display: \"flex\" }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <SqBadge color={(numRolls ? rollColor : \"error\") as any} sx={{ mr: 1 }}><strong>{numRolls ? numRolls : \"?\"}</strong></SqBadge>\r\n              <Typography color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">{statName}{`+${valueStringWithUnit(stat.value, Stat.getStatUnit(stat.key))}`}</Typography>\r\n            </Box>\r\n            <Typography sx={{ opacity: effOpacity }}>{stat.key && effFilter.has(stat.key) ? valueStringWithUnit(efficiency, \"eff\") : \"-\"}</Typography>\r\n          </Box>)\r\n        })}\r\n        <Box sx={{ display: \"flex\", my: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.curSubEff`}</Typography>\r\n          <PercentBadge value={currentEfficiency} valid={artifactValid} />\r\n        </Box>\r\n        {currentEfficiency !== maxEfficiency && <Box sx={{ display: \"flex\", mb: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.maxSubEff`}</Typography>\r\n          <PercentBadge value={maxEfficiency} valid={artifactValid} />\r\n        </Box>}\r\n        <Box flexGrow={1} />\r\n        <Typography color=\"success.main\">{sheet?.name ?? \"Artifact Set\"} {setDescTooltip}</Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item xs=\"auto\" flexShrink={1}>\r\n            {editable ?\r\n              <CharacterDropdownButton size=\"small\" inventory value={location} onChange={equipOnChar} /> : <LocationName location={location} />}\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n          {editable && <Grid item xs=\"auto\">\r\n            <ButtonGroup sx={{ height: \"100%\" }}>\r\n              {!!onEdit && <Button color=\"info\" onClick={() => onEdit(id)} size=\"small\">\r\n                <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n              </Button>}\r\n              <Tooltip title={<Typography>{t`excludeArtifactTip`}</Typography>} placement=\"top\" arrow>\r\n                <Button onClick={() => database.updateArt({ exclude: !exclude }, id)} color={exclude ? \"error\" : \"success\"} size=\"small\">\r\n                  <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\r\n                </Button>\r\n              </Tooltip>\r\n              {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={lock}>\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n              </Button>}\r\n            </ButtonGroup>\r\n          </Grid>}\r\n        </Grid>\r\n      </CardActions>\r\n    </CardLight >\r\n  </Suspense>\r\n}\r\n","import SqBadge from '../Components/SqBadge';\r\nimport { clamp } from '../Util/Util';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`roll${clamp(Math.floor(value * 0.05) + 1, 1, 6)}`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"error\"\r\n  return <SqBadge color={badgeColor} >{text}</SqBadge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey | \"\">(propWeaponFilter ?? \"\")\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter(propWeaponFilter), [propWeaponFilter])\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.img} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, CardHeader, Grid, IconButton, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useEffect, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton'\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false }: WeaponCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseWeapon, updateDatabaseWeapon] = useState(undefined as ICachedWeapon | undefined)\r\n  useEffect(() =>\r\n    weaponId ? database.followWeapon(weaponId, updateDatabaseWeapon) : undefined,\r\n    [weaponId, updateDatabaseWeapon, database])\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => onClick?.(weaponId)} sx={{ height: \"100%\" }}>{children}</CardActionArea>,\r\n    [onClick, weaponId],\r\n  )\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.setWeaponLocation(weaponId, charKey), [database, weaponId],)\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <div className={`grad-${weaponSheet.rarity}star`} >\r\n          <CardHeader title={weaponSheet.name} avatar={<ImgIcon sx={{ fontSize: \"2em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />} titleTypographyProps={{ variant: \"h6\" }}\r\n            action={!onClick && <IconButton color=\"primary\" onClick={() => database.updateWeapon({ lock: !lock }, id)}>\r\n              {lock ? <Lock /> : <LockOpen />}\r\n            </IconButton>} />\r\n          <Grid container sx={{ flexWrap: \"nowrap\", pl: 2 }}>\r\n            <Grid item flexGrow={1}>\r\n              <Typography component=\"span\" variant=\"h4\">Lv. {level}</Typography>\r\n              <Typography component=\"span\" variant=\"h4\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n              <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n              <Typography><Stars stars={weaponSheet.rarity} colored /></Typography>\r\n            </Grid>\r\n            {/* use flex-end here to align the image to the bottom. */}\r\n            <Grid item container xs={4} alignContent=\"flex-end\">\r\n              <Box\r\n                component=\"img\"\r\n                src={img}\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                sx={{ mt: \"auto\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <CardContent>\r\n          {statMap.map(([statKey, statVal]) => {\r\n            let unit = Stat.getStatUnit(statKey)\r\n            return <Box key={statKey} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[statKey]} {Stat.getStatName(statKey)}</Typography>\r\n              <Typography>{statVal + unit}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n        {/* grow to fill the 100% heigh */}\r\n        <Box flexGrow={1} />\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container sx={{ flexWrap: \"nowrap\" }} >\r\n            <Grid item xs=\"auto\" flexShrink={1}>\r\n              {canEquip ? <CharacterDropdownButton size=\"small\" noUnselect inventory value={location} onChange={equipOnChar} filter={filter} /> : <LocationName location={location} />}\r\n            </Grid>\r\n            <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n            <Grid item xs=\"auto\">\r\n              <ButtonGroup sx={{ height: \"100%\" }}>\r\n                {!!onEdit && <Button color=\"info\" size=\"small\" onClick={() => onEdit(id)} >\r\n                  <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n                </Button>}\r\n                {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n                </Button>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n      </CardLight>\r\n    </ConditionalWrapper>\r\n  </Suspense>\r\n}","import { Box, CardContent, Typography } from \"@mui/material\"\r\nimport CardDark from \"../../Components/Card/CardDark\"\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../../Components/FieldDisplay\"\r\nimport SqBadge from \"../../Components/SqBadge\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectDesc(setNumKey)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const document = sheet.setEffectDocument(setNumKey)\r\n  return <Box sx={{\r\n    mt: 1,\r\n    \"> div\": { mb: 1 },\r\n  }}>\r\n    <CardDark>\r\n      <CardContent>\r\n        <Typography><SqBadge color=\"success\">{setNumKey}-Set</SqBadge> {setEffectText}</Typography>\r\n      </CardContent>\r\n      <FieldDisplayList sx={{ m: 0 }}>\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n      </FieldDisplayList>\r\n    </CardDark>\r\n    {document ? <DocumentDisplay sections={document} characterKey={stats.characterKey} /> : null}\r\n  </Box>\r\n}\r\n","import { CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\"\r\nimport CardDark from \"../../Components/Card/CardDark\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICachedCharacter } from \"../../Types/character\"\r\nimport { ArtifactSetKey } from \"../../Types/consts\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../CharacterUtil\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  character: ICachedCharacter\r\n  statsDisplayKeys: any,\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ sheets, sheets: { characterSheet, weaponSheet }, character, equippedBuild, newBuild, statsDisplayKeys }: StatDisplayComponentProps) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Grid container spacing={1}>{Object.entries(statsDisplayKeys).map(([sectionKey, sectionValues]: any) => {\r\n    const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build?.characterEle)\r\n    return <Grid item key={sectionKey} xs={12} sm={6} md={4} lg={4}>\r\n      <CardDark sx={{ height: \"100%\", }}>\r\n        <CardContent>\r\n          <Typography variant=\"subtitle1\" gutterBottom>{header}</Typography>\r\n          <Divider sx={{ mb: 1, mx: -2 }} />\r\n          {sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statKey }} />)}\r\n        </CardContent>\r\n      </CardDark>\r\n    </Grid>\r\n  })}</Grid>\r\n}","import { faCheckSquare, faSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ExpandMore } from \"@mui/icons-material\";\r\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useState } from 'react';\r\nimport Character from \"../Character/Character\";\r\nimport StatInput from \"../Character/StatInput\";\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../Stat\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allElements, ElementKey } from \"../Types/consts\";\r\nimport { characterBaseStats } from \"../Util/StatUtil\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport ExpandButton from \"./ExpandButton\";\r\nimport { uncoloredEleIcons } from \"./StatIcon\";\r\n\r\nexport function EnemyExpandCard({ character }) {\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1} alignItems=\"center\">\r\n          <Grid container spacing={1}>\r\n            <Grid item>\r\n              <Chip size=\"small\" color=\"success\" label={<span>{Stat.getStatName(\"enemyLevel\")} <strong>{Character.getStatValueWithBonus(character, \"enemyLevel\")}</strong></span>} />\r\n            </Grid>\r\n            {[\"physical\", ...allElements].map(element => <Grid item key={element}>\r\n              <Typography key={element} ><EnemyResText element={element} character={character} /></Typography>\r\n            </Grid>)}\r\n            <Grid item>\r\n              <Typography>DEF Reduction {Character.getStatValueWithBonus(character, \"enemyDEFRed_\")}%</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <ExpandButton\r\n            expand={expanded}\r\n            onClick={toggle}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n            size=\"small\"\r\n            sx={{ p: 0 }}\r\n          >\r\n            <ExpandMore />\r\n          </ExpandButton>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <EnemyEditor character={character} />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nexport function EnemyResText({ character, element }: { character: ICachedCharacter, element: string }) {\r\n  const immune = !!Character.getStatValueWithBonus(character, `${element}_enemyImmunity`)\r\n  const resKey = `${element}_enemyRes_`\r\n  const content = immune ? <span >{uncoloredEleIcons[element]} IMMUNE</span> :\r\n    <span >{uncoloredEleIcons[element]}RES <strong>{Character.getStatValueWithBonus(character, resKey)}%</strong></span>\r\n  return <ColorText color={element}>{content}</ColorText>\r\n}\r\n\r\n\r\nexport function EnemyEditor({ character, character: { key: characterKey, }, bsProps = { xs: 12, md: 6 } }: { character: ICachedCharacter, bsProps?: object }) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const charBaseStats = characterBaseStats(character)\r\n  return <Grid container spacing={1}>\r\n    <Grid item {...bsProps}>\r\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n        To get the specific resistance values of enemies, please visit the wiki.\r\n      </Button>\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>Enemy Level</b>}\r\n        value={Character.getStatValueWithBonus(character, \"enemyLevel\")}\r\n        placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n        defaultValue={charBaseStats.enemyLevel}\r\n        onValueChange={value => characterDispatch({ type: \"editStats\", statKey: \"enemyLevel\", value })}\r\n      />\r\n    </Grid>\r\n    {([\"physical\", ...allElements] as Array<ElementKey | \"physical\">).map(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      let immunityStatKey = `${eleKey}_enemyImmunity`\r\n      let elementImmunity = Character.getStatValueWithBonus(character, immunityStatKey)\r\n      return <Grid item key={eleKey} {...bsProps}>\r\n        <StatInput\r\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n          name={<b>{Stat.getStatName(statKey)}</b>}\r\n          value={Character.getStatValueWithBonus(character, statKey)}\r\n          placeholder={Stat.getStatNameRaw(statKey)}\r\n          defaultValue={charBaseStats[statKey]}\r\n          onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n          disabled={elementImmunity}\r\n          percent\r\n        >\r\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"editStats\", statKey: immunityStatKey, value: !elementImmunity })} >\r\n            <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n          </Button>\r\n        </StatInput>\r\n      </Grid>\r\n    })}\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{Stat.getStatName(\"enemyDEFRed_\")}</b>}\r\n        value={Character.getStatValueWithBonus(character, \"enemyDEFRed_\")}\r\n        placeholder={Stat.getStatNameRaw(\"enemyDEFRed_\")}\r\n        defaultValue={charBaseStats[\"enemyDEFRed_\"]}\r\n        onValueChange={value => characterDispatch({ type: \"editStats\", statKey: \"enemyDEFRed_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\r\n    </Grid>\r\n  </Grid>\r\n}","import { CardContent, Grid, MenuItem, ToggleButton, ToggleButtonGroupProps } from \"@mui/material\";\r\nimport { useContext } from 'react';\r\nimport { buildContext } from \"../Build/Build\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\";\r\nimport usePromise from \"../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport DropdownButton, { DropdownButtonProps } from \"./DropdownMenu/DropdownButton\";\r\nimport SolidToggleButtonGroup from \"./SolidToggleButtonGroup\";\r\nimport StatIcon, { uncoloredEleIcons } from \"./StatIcon\";\r\nconst infusionVals = {\r\n  \"\": <span>No External Infusion</span>,\r\n  \"pyro\": <span >{uncoloredEleIcons.pyro} Pyro Infusion</span>,\r\n  \"cryo\": <span >{uncoloredEleIcons.cryo} Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  character: ICachedCharacter,\r\n}\r\nexport function InfusionAuraDropdown({ character: { infusionAura = \"\", key: characterKey }, ...props }: InfusionAuraDropdownProps) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!characterSheet?.isMelee()) return null\r\n  return <DropdownButton title={infusionVals[infusionAura]} color={infusionAura || \"secondary\"} {...props}>\r\n    {Object.entries(infusionVals).map(([key, text]) =>\r\n      <MenuItem key={key} sx={key ? { color: `${key}.main` } : undefined}\r\n        selected={key === infusionAura} disabled={key === infusionAura}\r\n        onClick={() => characterDispatch({ infusionAura: key })}>{text}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n\r\ntype ReactionToggleProps = Omit<ToggleButtonGroupProps, \"color\"> & {\r\n  character: ICachedCharacter,\r\n  build: ICalculatedStats,\r\n}\r\nexport function ReactionToggle({ character: { reactionMode = \"\", infusionAura, key: characterKey }, build, ...props }: ReactionToggleProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <SolidToggleButtonGroup exclusive baseColor=\"secondary\"\r\n    value={reactionMode} onChange={(e, reactionMode) => characterDispatch({ reactionMode })} {...props}>\r\n    <ToggleButton value=\"\" >No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value=\"pyro_vaporize\"  >\r\n      <ColorText color=\"vaporize\">Vaporize(Pyro){StatIcon.hydro}+{StatIcon.pyro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"}  >\r\n      <ColorText color=\"melt\">Melt(Pyro) {StatIcon.cryo}+{StatIcon.pyro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"}  >\r\n      <ColorText color=\"vaporize\">Vaporize(Hydro) {StatIcon.pyro}+{StatIcon.hydro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"}  >\r\n      <ColorText color=\"melt\">Melt(Cryo) {StatIcon.pyro}+{StatIcon.cryo}</ColorText>\r\n    </ToggleButton >}\r\n  </SolidToggleButtonGroup>\r\n}\r\ntype HitModeToggleProps = Omit<ToggleButtonGroupProps, \"color\"> & {\r\n  character: ICachedCharacter\r\n}\r\nexport function HitModeToggle({ character: { hitMode = \"avgHit\", key: characterKey }, ...props }: HitModeToggleProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  return <SolidToggleButtonGroup exclusive baseColor=\"secondary\"\r\n    value={hitMode} onChange={(e, hitMode) => characterDispatch({ hitMode })} {...props} >\r\n    <ToggleButton value=\"avgHit\">Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\">Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\">Crit Hit DMG</ToggleButton>\r\n  </SolidToggleButtonGroup>\r\n}\r\n\r\n\r\nexport function DamageOptionsCard({ character }: { character: ICachedCharacter }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        <Grid item><HitModeToggle character={character} size=\"small\" /></Grid>\r\n        <Grid item><InfusionAuraDropdown character={character} /></Grid>\r\n        <Grid item><ReactionToggle character={character} build={build} size=\"small\" /></Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\n","import { CardContent, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../Components/FieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nexport default function WeaponStatsCard({ title, statsVals = {}, stats }: { title: Displayable, statsVals?: object, stats: ICalculatedStats }) {\r\n  if ((Object.keys(statsVals) as string[]).filter(s => s !== \"modifiers\").length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <CardDark sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Typography>{title}</Typography>\r\n    </CardContent>\r\n    <FieldDisplayList>\r\n      {fields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ColorText from \"../Components/ColoredText\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/LevelData\"\r\nimport { database as localDatabase, DatabaseContext } from \"../Database/Database\"\r\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\nimport WeaponStatsCard from \"./WeaponStatsCard\"\r\n\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  charData?: {\r\n    character: ICachedCharacter,\r\n    characterSheet: CharacterSheet,\r\n    equippedBuild?: ICalculatedStats\r\n    newBuild?: ICalculatedStats\r\n    characterDispatch: (any) => void\r\n  }\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  charData,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  const buildContextObj = useContext(buildContext)\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(propWeaponId!)!,\r\n    [propWeaponId, databaseToken, database])\r\n  const { key, level, refinement, ascension, lock } = weapon\r\n  const { location = \"\", id } = weapon as Partial<ICachedWeapon>\r\n  const weaponSheet: WeaponSheet | undefined = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  useEffect(() =>\r\n    propWeaponId ? database.followWeapon(propWeaponId, onDatabaseUpdate) : undefined,\r\n    [propWeaponId, onDatabaseUpdate, database])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const build = { ...(charData ? (charData.newBuild ?? charData.equippedBuild) : { weapon: { refineIndex: refinement - 1, level, ascension } }) } as any\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container spacing={1}>\r\n            <Grid item >\r\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n              <ButtonGroup>\r\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n                <DropdownButton title={`Refinement ${refinement}`}>\r\n                  <MenuItem>Select Weapon Refinement</MenuItem>\r\n                  <Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </MenuItem>)}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item >\r\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n                <CustomNumberInputButtonGroupWrapper >\r\n                  <CustomNumberInput onChange={setLevel} value={level}\r\n                    startAdornment=\"Lvl. \"\r\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                  />\r\n                </CustomNumberInputButtonGroupWrapper>\r\n                <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n                <DropdownButton title={\"Select Level\"} >\r\n                  {milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    const selected = lv === level && as === ascension\r\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                  })}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n                {lock ? \"Locked\" : \"Unlocked\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!!onClose && <Grid item  >\r\n          <CloseButton onClick={onClose} />\r\n        </Grid>}\r\n        {!!charData && database === localDatabase && <Grid item >\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, charData.character.key)} />\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      {(() => {\r\n        if (!weaponSheet) return null\r\n        const substatKey = weaponSheet.getSubStatKey()\r\n        const weaponDisplayMainVal = weaponSheet.getMainStatValue(level, ascension)\r\n        const weaponDisplaySubVal = weaponSheet.getSubStatValue(level, ascension)\r\n        const weaponPassiveName = weaponSheet.passiveName\r\n        const weaponBonusStats = weaponSheet.stats(build)\r\n        const sections = weaponSheet.document\r\n        return <Box display=\"flex\" gap={{ xs: 1, md: 1.5, lg: 2 }} >\r\n          <Box sx={{ maxWidth: 256 }} flexShrink={1} minWidth=\"25%\">\r\n            <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            <Typography><small>{weaponSheet.description}</small></Typography>\r\n          </Box>\r\n          <Box sx={{ mb: -1 }} flexGrow={1} >\r\n            <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {WeaponSheet.getLevelString(weapon)} {weaponPassiveName && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\r\n            <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n            <Typography variant=\"subtitle1\">{weaponPassiveName}</Typography>\r\n            <Typography gutterBottom>{weaponPassiveName && weaponSheet.passiveDescription(build)}</Typography>\r\n            {build && <buildContext.Provider value={charData ? buildContextObj : { equippedBuild: build, newBuild: undefined, compareBuild: false, setCompareBuild: undefined }}>\r\n              <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: substatKey ? weaponDisplaySubVal : undefined }} stats={build} />\r\n              <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            </buildContext.Provider>}\r\n            {charData && sections ? (() => {\r\n              const { equippedBuild, newBuild } = charData\r\n              const characterKey = (newBuild ? newBuild : equippedBuild)?.characterKey as CharacterKey | undefined\r\n              return !!characterKey && < DocumentDisplay  {...{ sections, equippedBuild, newBuild, characterKey }} />\r\n            })() : null}\r\n          </Box>\r\n        </Box>\r\n      })()}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}","import { ExpandMore } from \"@mui/icons-material\"\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, Collapse, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo, useState } from \"react\"\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../Character/CharacterUtil\"\r\nimport Formula from \"../Formula\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat, { FormulaDisplay } from \"../Stat\"\r\nimport { GetDependencies } from \"../StatDependency\"\r\nimport { ArtifactSetKey } from \"../Types/consts\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardLight from \"./Card/CardLight\"\r\nimport ColorText from \"./ColoredText\"\r\nimport ExpandButton from \"./ExpandButton\"\r\n\r\nexport default function FormulaCalcCard({ sheets }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n}) {\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <Typography>Formulas {\"&\"} Calculations</Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">Expand to see every formula and all their calculations.</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <ExpandButton\r\n            expand={expanded}\r\n            onClick={toggle}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMore />\r\n          </ExpandButton>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <CalculationDisplay sheets={sheets} build={build} />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nfunction CalculationDisplay({ sheets, build }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  build: ICalculatedStats\r\n}) {\r\n  const displayStatKeys = useMemo(() => build && Character.getDisplayStatKeys(build, sheets), [build, sheets])\r\n  if (!build) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\r\n    {Object.entries(displayStatKeys).map(([sectionKey, fields]: [string, any]) => {\r\n      const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build.characterEle)\r\n      return <CardDark key={sectionKey} sx={{ mb: 1 }}>\r\n        <CardContent sx={{ pb: 1 }}>\r\n          <Typography variant=\"h6\">{header}</Typography>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          {fields.map((field, fieldIndex) => {\r\n            if (Array.isArray(field))\r\n              return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} />\r\n            else if (typeof field === \"string\") {//simple statKey field\r\n              const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, [field]), build?.modifiers).reverse()\r\n              return Boolean(subFormulaKeys.length) && <Accordion sx={{ bgcolor: \"contentLight.main\" }} key={fieldIndex}>\r\n                <AccordionSummary expandIcon={<ExpandMore />}>\r\n                  <Typography>{Stat.printStat(field, build)}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  {subFormulaKeys.map(subKey =>\r\n                    <Typography key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></Typography>\r\n                  )}\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            }\r\n            return null\r\n          })}\r\n        </CardContent>\r\n      </CardDark>\r\n    })}\r\n  </Suspense>\r\n}\r\n\r\nfunction FormulaCalculationField({ fieldKeys, build }: { fieldKeys: string[], build: ICalculatedStats }) {\r\n  const formula = usePromise(Formula.get(fieldKeys), [fieldKeys])\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const fieldFixed = Character.getTalentFieldValue(formulaField, \"fixed\", build) ?? 0\r\n  const fieldUnit = Character.getTalentFieldValue(formulaField, \"unit\", build) ?? \"\"\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.(fieldFixed)\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Accordion sx={{ bgcolor: \"contentLight.main\" }}>\r\n    <AccordionSummary expandIcon={<ExpandMore />}>\r\n      <Typography><Box color={`${fieldVariant}.main`} component=\"strong\">{fieldText}</Box> <ColorText color=\"info\">{fieldValue}{fieldUnit}</ColorText></Typography>\r\n    </AccordionSummary>\r\n    <AccordionDetails>\r\n      <Typography><Box color={`${fieldVariant}.main`} component=\"strong\">{fieldText}</Box> <ColorText color=\"info\">{fieldValue}</ColorText> = <small>{fieldFormulaText}</small></Typography>\r\n      {subFormulaKeys.map(subKey =>\r\n        <Typography key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></Typography>\r\n      )}\r\n    </AccordionDetails>\r\n  </Accordion>\r\n}","import { Button, Card, CardContent, Divider, Grid, ToggleButton, Typography } from '@mui/material';\r\nimport { useCallback, useContext, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { buildContext } from '../../Build/Build';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport SolidToggleButtonGroup from '../../Components/SolidToggleButtonGroup';\r\nimport { database as localDatabase, DatabaseContext } from '../../Database/Database';\r\nimport useForceUpdate from '../../ReactHooks/useForceUpdate';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport { allSlotKeys, ArtifactSetKey } from '../../Types/consts';\r\nimport { objectFromKeyMap } from '../../Util/Util';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n  character: ICachedCharacter,\r\n}\r\nfunction CharacterArtifactPane({ sheets, character, character: { key: characterKey } }: CharacterArtifactPaneProps) {\r\n  const { newBuild, equippedBuild, compareBuild, setCompareBuild } = useContext(buildContext)\r\n  const database = useContext(DatabaseContext)\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = (newBuild ? newBuild : equippedBuild)\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => stats && Character.getDisplayStatKeys(stats, sheets), [stats, sheets])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  // TODO: We can also listen only to equipped artifacts\r\n  const [, updateArt] = useForceUpdate()\r\n  useEffect(() => database.followAnyArt(updateArt))\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && database.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n  }, [characterKey, newBuild, database])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    database.equipArtifacts(characterKey, objectFromKeyMap(allSlotKeys, () => \"\"))\r\n  }, [characterKey, database])\r\n  if (!stats) return null\r\n  return <>\r\n    <CardLight sx={{ mb: 1 }}>\r\n      <CardContent>\r\n        <StatDisplayComponent {...{ sheets, character, equippedBuild: (newBuild && !compareBuild) ? undefined : equippedBuild, newBuild, statsDisplayKeys: statKeys }} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            {newBuild ? <Button onClick={equipArts} className=\"mr-2\">Equip artifacts</Button> : (database === localDatabase && <Button color=\"error\" onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n          </Grid>\r\n          <Grid item>\r\n            {/* Compare against new build toggle */}\r\n            {!!newBuild && <SolidToggleButtonGroup exclusive value={compareBuild} onChange={(e, v) => setCompareBuild?.(v)} size=\"small\">\r\n              <ToggleButton value={false} >\r\n                <small>Show New artifact Stats</small>\r\n              </ToggleButton>\r\n              <ToggleButton value={true} >\r\n                <small>Compare against equipped artifacts</small>\r\n              </ToggleButton>\r\n            </SolidToggleButtonGroup>}\r\n          </Grid>\r\n          <Grid item flexGrow={1}></Grid>\r\n          <Grid item>{!!mainStatAssumptionLevel && <Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card>}</Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </CardLight>\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={6} md={4} >\r\n        <CardLight sx={{ height: \"100%\" }} ><CardContent sx={{ height: \"100%\" }}><Grid container spacing={2} flexDirection=\"column\" height=\"100%\" >\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n            <Grid item key={setKey}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>{artifactSheets?.[setKey].name ?? \"\"}</Typography>\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterKey }} />)}\r\n            </Grid>\r\n          )}\r\n        </Grid></CardContent></CardLight>\r\n      </Grid>\r\n      {allSlotKeys.map(slotKey =>\r\n        !!stats?.equippedArtifacts?.[slotKey] && <Grid item xs={6} md={4} key={stats?.equippedArtifacts?.[slotKey]} >\r\n          <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Badge, Box, Button, CardContent, CardMedia, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport { Stars } from \"../../Components/StarDisplay\";\r\nimport StatDisplay from \"../../Components/StatDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../../Stat\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport { characterStatKeys } from \"../../Util/StatUtil\";\r\nimport WeaponDisplayCard from \"../../Weapon/WeaponDisplayCard\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  character: ICachedCharacter\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, character, character: { constellation, key: characterKey } }: CharacterOverviewPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const { tlvl } = build\r\n  const elementKey = build.characterEle\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  return <Grid container spacing={1}>\r\n    <Grid item xs={12} md={3}  >\r\n      {/* Image card with star and name and level */}\r\n      <CardLight >\r\n        <CardMedia src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\r\n        <CardContent>\r\n          <Typography variant=\"h5\" >{characterSheet.name} <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} /> {StatIcon[elementKey]} </Typography>\r\n          <Typography><Stars stars={characterSheet.star} colored /></Typography>\r\n          <Typography variant=\"subtitle1\">Lvl. {Character.getLevelString(character)}</Typography>\r\n          <Grid container spacing={1}>\r\n            {[\"auto\", \"skill\", \"burst\"].map(tKey =>\r\n              <Grid item xs={4} key={tKey}>\r\n                <Badge badgeContent={tlvl[tKey] + 1} color={((tKey === \"skill\" && build.skillBoost) || (tKey === \"burst\" && build.burstBoost)) ? \"info\" : \"secondary\"}\r\n                  overlap=\"circular\"\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  sx={{\r\n                    \"& > .MuiBadge-badge\": {\r\n                      fontSize: \"1.25em\",\r\n                      padding: \".25em .4em\",\r\n                      borderRadius: \".5em\",\r\n                      lineHeight: 1,\r\n                      height: \"1.25em\"\r\n                    }\r\n                  }}>\r\n                  <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, build.characterEle)?.img} width=\"100%\" height=\"auto\" />\r\n                </Badge>\r\n              </Grid>)}\r\n          </Grid>\r\n          <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\r\n          <Grid container spacing={1}>\r\n            {[...Array(6).keys()].map(i =>\r\n              <Grid item xs={4} key={i}>\r\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i + 1}`, build.characterEle)?.img}\r\n                  sx={{\r\n                    cursor: \"pointer\",\r\n                    ...(constellation > i ? {} : { filter: \"brightness(50%)\" })\r\n                  }}\r\n                  width=\"100%\" height=\"auto\"\r\n                  onClick={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardLight>\r\n    </Grid>\r\n    <Grid item xs={12} md={9} sx={{\r\n      \"> div:not(:last-child)\": { mb: 1 }\r\n    }} >\r\n      <WeaponDisplayCard {...{ charData: { character, characterSheet, equippedBuild, newBuild, characterDispatch }, weaponId: character.equippedWeapon }} />\r\n      <MainStatsCards {...{ characterSheet, character, equippedBuild, newBuild }} />\r\n    </Grid>\r\n  </Grid >\r\n}\r\nconst EDIT = \"Edit Stats\"\r\nconst EXIT = \"EXIT\"\r\n\r\nconst additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\nconst displayStatKeys = [\"characterATK\", \"finalATK\", \"finalHP\", \"finalDEF\"]\r\ndisplayStatKeys.push(...additionalKeys)\r\nconst editStatKeys = [\"hp\", \"hp_\", \"def\", \"def_\", \"atk\", \"atk_\"]\r\neditStatKeys.push(...additionalKeys)\r\nconst otherStatKeys: any[] = [];\r\n\r\n[\"physical\", ...allElements].forEach(ele => {\r\n  otherStatKeys.push(`${ele}_dmg_`)\r\n  otherStatKeys.push(`${ele}_res_`)\r\n})\r\notherStatKeys.push(\"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\")\r\n\r\nconst miscStatkeys = [\r\n  \"normal_dmg_\", \"normal_critRate_\",\r\n  \"charged_dmg_\", \"charged_critRate_\",\r\n  \"plunging_dmg_\", \"plunging_critRate_\",\r\n  \"skill_dmg_\", \"skill_critRate_\",\r\n  \"burst_dmg_\", \"burst_critRate_\",\r\n  \"dmg_\", \"electrocharged_dmg_\",\r\n  \"vaporize_dmg_\", \"swirl_dmg_\",\r\n  \"moveSPD_\", \"atkSPD_\",\r\n  \"weakspotDMG_\",\r\n]\r\n\r\nconst resetString = {\r\n  \"characterATK\": \"Override Base ATK\",\r\n  \"characterHP\": \"Override Base HP\",\r\n  \"characterDEF\": \"Override Base DEF\"\r\n}\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nconst statBreakpoint = {\r\n  xs: 12, sm: 6, md: 6, lg: 4,\r\n} as const\r\n\r\n\r\nfunction MainStatsCards({ characterSheet, character, character: { key: characterKey, level, ascension }, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n\r\n  const specializedStatKey = characterSheet.getSpecializedStat(character.ascension)\r\n  const specializedStatVal = characterSheet.getSpecializedStatVal(character.ascension)\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild }\r\n\r\n  return <>\r\n    <StatDisplayCard\r\n      title=\"Main Stats\"\r\n      content={<Grid container columnSpacing={{ xs: 2, lg: 3 }} rowSpacing={1}>\r\n        {displayStatKeys.map(statKey => <Grid item key={statKey} {...statBreakpoint} >\r\n          <StatDisplay statKey={statKey} {...displayNewBuildProps} />\r\n        </Grid>)}\r\n        <Grid item {...statBreakpoint} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n          <span><b>Specialized:</b> <span>{specializedStatKey && StatIcon[specializedStatKey]} {Stat.getStatName(specializedStatKey)}</span></span>\r\n          <span >{`${specializedStatVal.toFixed(Stat.fixedUnit(specializedStatKey))}${specializedStatUnit}`}</span>\r\n        </Grid>\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {characterStatKeys.map(statKey => {\r\n          const defVal = Math.round(characterSheet.getBase(statKey, level, ascension))\r\n          return <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {resetString[statKey]}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? defVal}\r\n              defaultValue={defVal}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n              onReset={() => characterDispatch({ type: \"resetStats\", statKey })}\r\n            />\r\n          </Grid>\r\n        })}\r\n        {editStatKeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatNameWithPercent(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Other Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey => <Grid item {...statBreakpoint} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Grid>)}\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? (statKey === \"stamina\" ? 100 : 0)}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              defaultValue={statKey === \"stamina\" ? 100 : undefined}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Misc Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey => <Grid item {...statBreakpoint} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Grid>)}\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n  </>\r\n}\r\nfunction StatDisplayCard({ title, content, editContent }) {\r\n  const [edit, setedit] = useState(false)\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n        <Button size=\"small\" color={edit ? \"error\" : \"info\"} onClick={() => setedit(!edit)} >\r\n          <span><FontAwesomeIcon icon={edit ? faSave : faEdit} /> {edit ? EXIT : EDIT}</span>\r\n        </Button>\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      {edit ? editContent : content}\r\n    </CardContent>\r\n  </CardLight>\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\";\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport BootstrapTooltip from \"../../Components/BootstrapTooltip\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport ConditionalWrapper from \"../../Components/ConditionalWrapper\";\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../Components/DropdownMenu/DropdownButton\";\r\nimport FieldDisplay, { FieldDisplayList } from \"../../Components/FieldDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n}\r\nexport default function CharacterTalentPane({ characterSheet, character, character: { ascension, constellation, key: characterKey } }: CharacterTalentPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <>\r\n    <ReactionDisplay characterSheet={characterSheet} />\r\n    <Grid container spacing={1} sx={{ mb: 1 }}>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Grid item key={tKey} xs={12} md={6} lg={4} >\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>)}\r\n      {!!characterSheet.getTalentOfKey(\"sprint\", build?.characterEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Grid>}\r\n      {!!characterSheet.getTalentOfKey(\"passive\", build?.characterEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"passive\"\r\n          subtitle=\"Passive\"\r\n        />\r\n      </Grid>}\r\n    </Grid>\r\n    <Grid container spacing={1}>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalentOfKey(tKey, build?.characterEle)) return null\r\n        return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} >\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n    <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography>\r\n    <Grid container spacing={1}>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Grid item key={i} xs={12} md={4}\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet }: { characterSheet: CharacterSheet }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <CardLight sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Grid item key={key}><Ele stats={build} /></Grid>\r\n        })}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"superconduct.main\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.cryo} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"electrocharged.main\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.hydro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"overloaded.main\" >{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.pyro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} {StatIcon.pyro} + {StatIcon.anemo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} {StatIcon.electro}+{StatIcon.anemo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} {StatIcon.cryo} + {StatIcon.anemo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} {StatIcon.hydro} + {StatIcon.anemo}</span>\r\n} as const\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={swirlEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Box>\r\n  </CardDark>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <BootstrapTooltip placement=\"top\" title={<Typography>Claymores, Plunging Attacks and <ColorText color=\"geo\">Geo DMG</ColorText></Typography>}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <ColorText color=\"shattered\">{Stat.getStatName(sKey)} {StatIcon.hydro}+{StatIcon.cryo}+ <ColorText color=\"physical\"><small>Heavy Attack{information} </small></ColorText> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></ColorText>\r\n  </CardContent></CardDark>\r\n}\r\nconst crystalizeEleToDisplay = {\r\n  \"default\": <ColorText color=\"crystalize\">{Stat.getStatName(\"crystalize_hit\")} {StatIcon.electro}/{StatIcon.hydro}/{StatIcon.pyro}/{StatIcon.cryo}+{StatIcon.geo}</ColorText>,\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_crystalize_hit\")} {StatIcon.pyro}+{StatIcon.geo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_crystalize_hit\")} {StatIcon.electro}+{StatIcon.geo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_crystalize_hit\")} {StatIcon.cryo}+{StatIcon.geo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_crystalize_hit\")} {StatIcon.hydro}+{StatIcon.geo}</span>\r\n} as const\r\nfunction CrystalizeCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(crystalizeEleToDisplay)[0])\r\n  const sKey = ele === \"default\" ? \"crystalize_hit\" : `${ele}_crystalize_hit`\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={crystalizeEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(crystalizeEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Box>\r\n  </CardDark>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { talent, ascension, key: characterKey }, characterDispatch, talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const actionWrapeprFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\r\n    [onClickTitle],\r\n  )\r\n\r\n  if (!build) return null\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    const talentLvlKey = talent[talentKey] + levelBoost\r\n    const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n      talent[tKey] = newTalentLevelKey\r\n      characterDispatch({ talent })\r\n    }\r\n    header = <>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <DropdownButton fullWidth title={`Talent Lv. ${talentLvlKey}`} color={levelBoost ? \"info\" : \"primary\"}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <MenuItem key={i} selected={talent[talentKey] === (i + 1)} disabled={talent[talentKey] === (i + 1)} onClick={() => setTalentLevel(talentKey, i + 1)}>Talent Lv. {i + levelBoost + 1}</MenuItem>)}\r\n        </DropdownButton>\r\n      </CardContent>\r\n      <Divider />\r\n    </>\r\n\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const talentStatsFields = talentStats && statsToFields(talentStats, build)\r\n  const statsEle = talentStatsFields && !!talentStatsFields.length &&\r\n    <FieldDisplayList >\r\n      {talentStatsFields.map((field, i) =>\r\n        <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, build.characterEle)\r\n  const sections = talentSheet?.sections\r\n\r\n  return <CardLight sx={{ height: \"100%\" }}>\r\n    {header}\r\n    <CardContent>\r\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item>\r\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\r\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </ConditionalWrapper>\r\n      {/* Display document sections */}\r\n      {sections ? <DocumentDisplay {...{ sections, characterKey, equippedBuild, newBuild }} /> : null}\r\n      {statsEle}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Button, ButtonGroup, Card, CardContent, Divider, Grid, MenuItem, Skeleton, Tab, Tabs, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport { buildContext } from '../Build/Build';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport { CharacterSelectionModal } from '../Components/Character/CharacterSelectionModal';\r\nimport ThumbSide from '../Components/Character/ThumbSide';\r\nimport CloseButton from '../Components/CloseButton';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from '../Components/CustomNumberInput';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport { EnemyExpandCard } from '../Components/EnemyEditor';\r\nimport FormulaCalcCard from '../Components/FormulaCalcCard';\r\nimport { DamageOptionsCard } from '../Components/HitModeEditor';\r\nimport ImgIcon from '../Components/Image/ImgIcon';\r\nimport ElementalData from '../Data/ElementalData';\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from '../Data/LevelData';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport useCharacterReducer from '../ReactHooks/useCharacterReducer';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { ICachedCharacter } from '../Types/character';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { clamp, deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { initialCharacter } from './CharacterUtil';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  value: string;\r\n  current: string | boolean;\r\n}\r\n\r\nfunction TabPanel({ children, current, value, ...other }: TabPanelProps) {\r\n  if (value !== current) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== current}\r\n      id={`simple-tabpanel-${value}`}\r\n      aria-labelledby={`simple-tab-${value}`}\r\n      {...other}\r\n    >\r\n      {children}\r\n    </div>\r\n  </Suspense>\r\n}\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey, setCharacterKey, footer, newBuild: propNewBuild, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [compareBuild, setCompareBuild] = useState(false)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  // TODO: We probably don't need to fetch all sheets,\r\n  // though this wouldn't affect the performance currently.\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  const character = useMemo(() =>\r\n    databaseToken && (database._getChar(characterKey) ?? initialCharacter(characterKey)),\r\n    [characterKey, databaseToken, database])\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(character.equippedWeapon),\r\n    [character.equippedWeapon, databaseToken, database])\r\n\r\n  const characterSheet = characterSheets?.[characterKey]\r\n  const weaponSheet = weapon ? weaponSheets?.[weapon.key] : undefined\r\n  const sheets = characterSheet && weaponSheet && artifactSheets && { characterSheet, weaponSheet, artifactSheets }\r\n\r\n  useEffect(() => {\r\n    return database.followChar(characterKey, onDatabaseUpdate)\r\n  }, [characterKey, onDatabaseUpdate, database])\r\n\r\n  useEffect(() => database.followWeapon(character.equippedWeapon, onDatabaseUpdate),\r\n    [character.equippedWeapon, onDatabaseUpdate, database])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return undefined\r\n    return deepClone(propNewBuild)\r\n  }, [propNewBuild])\r\n\r\n  // set initial state to false, because it fails to check validity of the tab values on 1st load\r\n  const [tab, settab] = useState<string | boolean>(tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\"))\r\n\r\n  const onTab = useCallback((e, v) => settab(v), [settab])\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => databaseToken && characterSheet && weaponSheet && artifactSheets &&\r\n    Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel),\r\n    [databaseToken, character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel, database])\r\n\r\n  // main CharacterDisplayCard\r\n  return <CardDark >\r\n    <buildContext.Provider value={{ newBuild, equippedBuild, compareBuild, setCompareBuild }}>\r\n      <CardContent sx={{\r\n        \"> div:not(:last-child)\": { mb: 1 },\r\n      }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item flexGrow={1}>\r\n            <CharSelectDropdown characterSheet={characterSheet} character={character} setCharacterKey={setCharacterKey} />\r\n          </Grid>\r\n          {!!mainStatAssumptionLevel && <Grid item><Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card></Grid>}\r\n          {!!onClose && <Grid item>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>}\r\n        </Grid>\r\n        <CardLight>\r\n          <Tabs\r\n            onChange={onTab}\r\n            value={tab}\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab value=\"character\" label=\"Character\" />\r\n            {!!newBuild && <Tab value=\"newartifacts\" label=\"New Artifacts\" />}\r\n            <Tab value=\"artifacts\" label={newBuild ? \"Current Artifacts\" : \"Artifacts\"} />\r\n            <Tab value=\"talent\" label=\"Talents\" />\r\n          </Tabs>\r\n        </CardLight>\r\n        <DamageOptionsCard character={character} />\r\n        {!!sheets && <FormulaCalcCard sheets={sheets} />}\r\n        <EnemyExpandCard character={character} />\r\n\r\n        {/* Character Panel */}\r\n        {characterSheet && <TabPanel value=\"character\" current={tab}>\r\n          <CharacterOverviewPane characterSheet={characterSheet} character={character} />\r\n        </TabPanel >}\r\n        {/* Artifacts Panel */}\r\n        {sheets && <buildContext.Provider value={{ newBuild: undefined, equippedBuild, compareBuild, setCompareBuild }}>\r\n          <TabPanel value=\"artifacts\" current={tab} >\r\n            <CharacterArtifactPane sheets={sheets} character={character} />\r\n          </TabPanel >\r\n        </buildContext.Provider>}\r\n        {/* new build panel */}\r\n        {newBuild && sheets && <TabPanel value=\"newartifacts\" current={tab} >\r\n          <CharacterArtifactPane sheets={sheets} character={character} />\r\n        </TabPanel >}\r\n        {/* talent panel */}\r\n        {characterSheet && <TabPanel value=\"talent\" current={tab}>\r\n          <CharacterTalentPane characterSheet={characterSheet} character={character} />\r\n        </TabPanel >}\r\n      </CardContent>\r\n      {!!footer && <Divider />}\r\n      {footer && <CardContent sx={{ py: 1 }}>\r\n        {footer}\r\n      </CardContent>}\r\n    </buildContext.Provider>\r\n  </CardDark>\r\n}\r\n\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  character: ICachedCharacter\r\n  disabled?: boolean\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, character, character: { key: characterKey, elementKey = \"anemo\", level = 1, ascension = 0 }, disabled, setCharacterKey }: CharSelectDropdownProps) {\r\n  const [showModal, setshowModal] = useState(false)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <ImgIcon src={characterSheet.thumbImg} sx={{ mr: 1 }} />\r\n    {characterSheet.name}\r\n  </span> : <span>Select a Character</span>\r\n  const setLevel = useCallback((level) => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    characterDispatch({ level, ascension })\r\n  }, [characterDispatch])\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\r\n    else characterDispatch({ ascension: lowerAscension })\r\n  }, [characterDispatch, ascension, level])\r\n  return <>{!disabled ? <>\r\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacterKey} />\r\n    <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n      <Button disabled={!setCharacterKey} onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? \"Select a Character\"}</Button>\r\n      {characterSheet?.sheet && \"talents\" in characterSheet?.sheet && <DropdownButton title={ElementalData[elementKey].name}>\r\n        {Object.keys(characterSheet.sheet.talents).map(eleKey =>\r\n          <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\r\n            <strong>{ElementalData[eleKey].name}</strong></MenuItem>)}\r\n      </DropdownButton>}\r\n      <CustomNumberInputButtonGroupWrapper >\r\n        <CustomNumberInput onChange={setLevel} value={level}\r\n          startAdornment=\"Lvl. \"\r\n          inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n          sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n          disabled={!characterSheet} />\r\n      </CustomNumberInputButtonGroupWrapper>\r\n      <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level) || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n      <DropdownButton title={\"Select Level\"} disabled={!characterSheet}>\r\n        {milestoneLevels.map(([lv, as]) => {\r\n          const sameLevel = lv === ascensionMaxLevel[as]\r\n          const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n          const selected = lv === level && as === ascension\r\n          return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n        })}\r\n      </DropdownButton>\r\n    </ButtonGroup>\r\n  </> : <Typography variant=\"h6\">{HeaderIconDisplay} {characterSheet && Character.getLevelString(character)}</Typography>}</>\r\n}"],"sourceRoot":""}