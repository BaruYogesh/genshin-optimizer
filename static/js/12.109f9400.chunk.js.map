{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/react-bootstrap/esm/Button.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Character/CharacterDisplay/Components/FieldDisplay.jsx","Components/CustomFormControl.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Conditional/ConditionalSelector.jsx","Character/CharacterDisplay/Components/ConditionalDisplay.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-bootstrap/esm/Badge.js","Components/CharacterSelection.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","Components/StatDisplay.jsx","Character/StatInput.jsx","../node_modules/react-bootstrap/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-bootstrap/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Artifact/ArtifactCard.jsx","Artifact/PercentBadge.tsx","Character/CharacterDisplay/CharacterArtifactPane.jsx","Character/CharacterDisplay/CharacterOverviewPane.jsx","Character/CharacterDisplay/CharacterTalentPane.jsx","Character/CharacterDisplayCard.jsx","Components/WIPComponent.js","../node_modules/react-bootstrap/esm/Image.js","../node_modules/react-bootstrap/esm/CloseButton.js","Artifact/Component/SetEffectDisplay.jsx","Character/CharacterDisplay/StatDisplayComponent.jsx","Character/CharacterDisplay/DamageOptionsAndCalculation.jsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","TestPage/TestDisplay.jsx"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","Button","React","forwardRef","_ref","ref","bsPrefix","variant","size","active","className","block","type","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","href","createElement","SafeAnchor","_extends","disabled","Component","displayName","defaultProps","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","FieldDisplay","field","index","equippedBuild","newBuild","compareAgainstEquipped","useContext","compareAgainstEquippedContext","stats","canShow","useMemo","fixedVal","fixed","fieldVal","value","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","parseInt","toFixed","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","icon","faQuestionCircle","style","cursor","unit","Item","CustomFormControl","onChange","float","placeholder","allowEmpty","useState","state","setstate","stateDirty","setstateDirty","sendChange","useCallback","parseFunc","parseFloat","useEffect","aria-label","e","onBlur","onKeyDown","_fadeStyles","fadeStyles","ENTERING","ENTERED","Fade","children","handleEnter","node","triggerBrowserReflow","onEnter","Transition","addEndListener","transitionEndListener","status","innerProps","cloneElement","in","timeout","mountOnEnter","unmountOnExit","appear","_defineProperty","obj","configurable","writable","ConditionalSelector","conditional","conditionalValue","setConditional","name","conditionalNum","conditionalStateKey","states","text","maxStack","badge","Badge","Dropdown","Toggle","whiteSpace","Menu","onClick","entries","map","stateKey","condial","Fragment","Array","v","stack","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","editable","fieldClassName","Conditional","resolve","conditionalStats","fields","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","conditionalValues","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","contains","context","compareDocumentPosition","useMounted","mounted","useRef","isMounted","current","useCallbackRef","pill","_ref$as","CharacterSelectionDropdownList","onSelect","CharacterDatabase","getCharacterKeyList","sort","a","b","characterKey","getName","ButtonGroup","toggle","vertical","rest","baseClass","role","DisplayStatDiff","label","val","oldVal","undefined","oldText","diffText","xs","StatDisplay","character","statKey","build","invalid","getStatValueWithOverride","Stat","getStatUnit","fixedUnit","StatIconEle","getStatName","Formula","get","labelVariant","hasOverride","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Prepend","Text","Append","Boolean","pointerEvents","faUndo","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","create","constructor","useWillUnmount","fn","onUnmount","valueRef","useUpdatedRef","resolveContainerRef","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","forceUpdateHook","useForceUpdate","Artifact","getDataImport","then","ArtifactDatabase","registerArtListener","unregisterArtListener","equipOnChar","charKey","equipArtifactOnChar","art","maximumEfficiency","substatsValidation","setKey","slotKey","numStars","level","mainStatKey","substats","location","lock","currentEfficiency","mainStatLevel","Math","max","min","mainStatVal","getMainStatValue","artifactValid","every","sstat","rolls","border","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","stars","stat","numRolls","efficiency","effOpacity","statName","opacity","valid","Footer","Divider","ckey","update","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","floor","badgeColor","artLayoutSize","lg","CharacterArtifactPane","artifacts","history","useHistory","statKeys","getDisplayStatKeys","edit","artid","pathname","artToEditId","equipArts","window","confirm","equipArtifacts","equippedArtifacts","unequipArts","fromEntries","getSlotKeys","sKey","StatDisplayComponent","statsDisplayKeys","Alert","Row","Col","getSetEffects","setToSlots","setNumKeyArr","setNumKey","SetEffectDisplay","find","CharacterOverviewPane","constellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","getStar","colored","InputGroup","clamp","getLevel","levelKey","OverlayTrigger","Tooltip","faSave","getConstellationName","getConstellationImg","roundedCircle","WeaponStatsEditorCard","MainStatsCards","WeaponStatsCard","title","statsVals","weapon","editing","SetEditing","showDescription","setShowDescription","setStateWeapon","talentConditionals","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","conditionals","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","reverse","star","arr","ItemText","getWeaponsOfType","rarity","weaponObj","getLevelName","LevelNameData","refineIndex","faGavel","getWeaponPassiveDescription","atk","getWeaponDescription","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","CharacterSpecializedStatKey","getStatNameRaw","xl","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","crystalize_hit","charEleKey","eleInterArr","ElementToReactionKeys","includes","Ele","talentLimits","talentLevelKeys","header","talentLvlKey","talentLvlKeyRaw","levelBoost","getTalentLevelBoost","newTalentLevelKey","talentStats","getTalentStats","statsEle","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","createContext","CustomMenu","labeledBy","minWidth","aria-labelledby","Children","toArray","child","initialCharacter","hitMode","reactionMode","artifactConditionals","baseStatOverrides","WeaponLevelKeys","auto","skill","burst","infusionAura","characterReducer","action","CharacterDisplayCard","propCharacterKey","propCharacter","propSetCharacterKey","setCharacterKey","footer","propNewBuild","onClose","tabName","useReducer","setcompareAgainstEquipped","firstUpdate","updateState","forceUpdate","char","Promise","all","getCharacterDataImport","getWeaponDataImport","CharacterFormulaImport","newCKey","deepClone","flexArts","calculateBuild","HeaderIconDisplay","getThumb","commonPaneProps","DamageOptionsAndCalculationEle","hasTalentPage","DamageOptionsAndCalculation","DropdownToggle","getAllCharacterKeys","getlevelTemplateName","getlevelKeys","lvlKey","getLevelString","faTimes","Provider","Tab","Container","defaultActiveKey","Nav","fill","Link","eventKey","WIPComponent","Content","Pane","PropTypes","string","bool","fluid","rounded","propTypes","isRequired","func","CloseButton","setEffectText","getSetEffectText","setStats","getArtifactSetNumStats","setStatsFields","getSetEffectConditionals","cardbg","sectionValues","JSON","stringify","infusionVals","InfusionAuraDropdown","isMelee","ReactionToggle","HitModeToggle","m","CalculationDisplay","fieldIndex","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","printStat","Collapse","subKey","printFormula","formulaField","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","callback","currentEventKey","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","rel","eleKey","immunityStatKey","elementImmunity","isValidElement","hasClass","classList","baseVal","indexOf","usePrevious","noop","ToggleButton","checked","inputRef","focused","setFocused","handleFocus","tagName","handleBlur","autoComplete","onFocus","ToggleButtonGroup","_useUncontrolled","useUncontrolled","controlledProps","getValues","concat","invariant","values","_child$props","childVal","childOnChange","chainFunction","inputVal","event","isActive","handleToggle","TestDisplay"],"mappings":"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","file":"static/js/12.109f9400.chunk.js","sourcesContent":["import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Character from \"../../Character\";\r\nimport { compareAgainstEquippedContext } from \"../../CharacterDisplayCard\";\r\n\r\nexport default function FieldDisplay({ field, index, equippedBuild, newBuild, className = \"p-2\" }) {\r\n  const compareAgainstEquipped = useContext(compareAgainstEquippedContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => field.canShow(stats), [field, stats])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", stats)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", stats)?.[0]?.(stats)\r\n      //compareAgainstEquipped\r\n      if (compareAgainstEquipped && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareAgainstEquipped, fixedVal, equippedBuild, field, stats])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", stats), [field, stats])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", stats), [field, stats])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", stats)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, stats])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", stats), [field, stats])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _fadeStyles;\n\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport Transition, { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nvar fadeStyles = (_fadeStyles = {}, _fadeStyles[ENTERING] = 'show', _fadeStyles[ENTERED] = 'show', _fadeStyles);\nvar Fade = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\"]);\n\n  var handleEnter = useCallback(function (node) {\n    triggerBrowserReflow(node);\n    if (props.onEnter) props.onEnter(node);\n  }, [props]);\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    ref: ref,\n    addEndListener: transitionEndListener\n  }, props, {\n    onEnter: handleEnter\n  }), function (status, innerProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames('fade', className, children.props.className, fadeStyles[status])\n    }));\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled }) {\r\n  const [conditionalNum=0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name\r\n  if (conditional.states) {//complex conditional \r\n    const state = conditional.states[conditionalStateKey] ?? {}\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(state.maxStack > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial], i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {//single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n    </Button>\r\n  }\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport Conditional from \"../../../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../../../Conditional/ConditionalSelector\"\r\nimport statsToFields from \"../../../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../../../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\n\r\nexport default function ConditionalDisplay({ conditional, equippedBuild, newBuild, characterDispatch, editable, fieldClassName }) {\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else layeredAssignment(stats.conditionalValues, conditional.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [stats.conditionalValues, conditional.keys, characterDispatch])\r\n\r\n  if (!canShow) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector disabled={!editable}\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild, className: fieldClassName }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/* eslint-disable no-bitwise, no-cond-assign */\n// HTML DOM and SVG DOM may have different support levels,\n// so we need to check on context instead of a document root element.\nexport default function contains(context, node) {\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\nexport default function StatDisplay({ character, equippedBuild, newBuild, editable, statKey }) {\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (statKey === \"finalHP\")\r\n          oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n        else if (statKey === \"finalDEF\")\r\n          oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n        else if (statKey === \"finalATK\")\r\n          oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n    } else {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const formula = Formula.get(statKey)\r\n      const field = formula.field\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, equippedBuild, newBuild, editable, statKey])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Character from '../Character/Character';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { useForceUpdate } from '../Util/ReactUtil';\r\nimport Artifact from './Artifact';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }) {\r\n  const forceUpdateHook = useForceUpdate()\r\n  useEffect(() => {\r\n    Artifact.getDataImport()?.then(forceUpdateHook)\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () =>\r\n      artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook)\r\n  }, [artifactId, forceUpdateHook])\r\n  const equipOnChar = useCallback(\r\n    (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey),\r\n    [artifactId],\r\n  )\r\n  if (!artifactId && !artifactObj) return null;\r\n  const editable = !artifactObj//dont allow edit for flex artifacts\r\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\r\n  if (!art) return null;\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n  const { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} className=\"float-right\" /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location, \"Inventory\")}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.update(art);\r\n                  }}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport Character from \"../Character\";\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\nconst artLayoutSize = { xs: 12, md: 6, lg: 4 }\r\nfunction CharacterArtifactPane({ character, character: { characterKey }, equippedBuild, newBuild, editable, characterDispatch, artifacts }) {\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => Character.getDisplayStatKeys(stats), [stats])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    }), [history])\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    Character.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, newBuild?.equippedArtifacts, characterDispatch])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    Character.equipArtifacts(characterKey, Object.fromEntries(Artifact.getSlotKeys().map(sKey => [sKey, \"\"])))\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, characterDispatch])\r\n  return <>\r\n    <Card className=\"h-100 mb-2\" bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Body>\r\n        <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, editable }} />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        {newBuild ? <Button onClick={equipArts}>Equip all artifacts to current character</Button> : (editable && <Button onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n        {Boolean(mainStatAssumptionLevel) && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert>}\r\n      </Card.Footer>\r\n    </Card>\r\n    <Row className=\"mb-n2\">\r\n      <Col {...artLayoutSize} className=\"d-flex flex-column\">\r\n        {Object.entries(Artifact.getSetEffects(stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n          <Card key={setKey} className=\"mb-2 flex-grow-1\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>{Artifact.getSetName(setKey)}</Card.Header>\r\n            <Card.Body className=\"p-2 mb-n2\">\r\n              {setNumKeyArr.map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      {artifacts ?\r\n        Artifact.getSlotKeys().map(slotKey => {//from flex\r\n          const art = artifacts.find(art => art.slotKey === slotKey)\r\n          return Boolean(art) && <Col {...artLayoutSize} key={slotKey} className=\"mb-2\">\r\n            <ArtifactCard artifactObj={art} />\r\n          </Col>\r\n        }) : Artifact.getSlotKeys().map(slotKey =>\r\n          Boolean(stats.equippedArtifacts[slotKey]) && <Col {...artLayoutSize} key={stats.equippedArtifacts[slotKey]} className=\"mb-2\">\r\n            <ArtifactCard artifactId={stats.equippedArtifacts[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats.equippedArtifacts[slotKey])} />\r\n          </Col>\r\n        )}\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport Conditional from \"../../Conditional/Conditional\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nimport ConditionalDisplay from \"./Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"./Components/FieldDisplay\"\r\nexport default function CharacterOverviewPane({ editable, character, character: { characterKey, constellation }, characterDispatch, equippedBuild, newBuild }) {\r\n  const [editLevel, setEditLevel] = useState(false)\r\n  const elementKey = Character.getElementalKey(characterKey)\r\n  const weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  const level = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl onChange={val => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: clamp(val, 1, 90) })} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: Character.getLevel(character.levelKey) })} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"success\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...{ editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n      <MainStatsCards {...{ editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n    </Col>\r\n  </Row >\r\n}\r\n\r\nfunction WeaponStatsCard({ title, statsVals = {}, stats = {} }) {\r\n  if (Object.keys(statsVals ?? {}).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild: stats, className: \"px-3 py-2\" }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}\r\n\r\nfunction WeaponStatsEditorCard({ editable, character, character: { characterKey, weapon = {} }, characterDispatch, equippedBuild, newBuild }) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => {\r\n    if (key === \"key\") {\r\n      if (value === weapon.key) return\r\n      else {\r\n        //reset the conditionalNum when we switch weapons\r\n        const { talentConditionals } = character\r\n        delete talentConditionals.weapon\r\n        characterDispatch({ talentConditionals })\r\n      }\r\n    }\r\n    character.weapon[key] = value\r\n    characterDispatch({ weapon: character.weapon })\r\n  }\r\n  const subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  const weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  const weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  const weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  const weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, build)\r\n  const conditionals = Conditional.conditionals.weapon[weapon.key]\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      <Row className=\"mb-n2\">\r\n        <Col xs={12} md={3} lg={4}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n            <p><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></p>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, build)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} stats={build} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            {Boolean(conditionals) && Object.entries(conditionals).map(([stateKey, conditional]) =>\r\n              <ConditionalDisplay key={stateKey} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} fieldClassName=\"py-2 px-3\" />)}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <small>{Weapon.getWeaponDescription(weapon.key)}</small>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards({ editable, character, characterDispatch, equippedBuild, newBuild }) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = []\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: key })} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\r\n                  onChange={value => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value })} />\r\n                <InputGroup.Append>\r\n                  {isPercentSpecialStatSelect && <InputGroup.Text>%</InputGroup.Text>}\r\n                  <Button onClick={() => {\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: Character.getBaseStatValue(character, \"specializedStatKey\") })\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value: Character.getBaseStatValue(character, \"specializedStatVal\") })\r\n                  }}\r\n                    disabled={!Character.hasOverride(character, \"specializedStatKey\") && !Character.hasOverride(character, \"specializedStatVal\")}\r\n                  >\r\n                    <FontAwesomeIcon icon={faUndo} />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from 'react';\r\nimport { Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport Character from \"../Character\";\r\nimport ConditionalDisplay from './Components/ConditionalDisplay';\r\nimport FieldDisplay from './Components/FieldDisplay';\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  const { character, character: { characterKey, levelKey, constellation }, editable, characterDispatch, newBuild, equippedBuild } = props\r\n  const ascension = Character.getAscension(levelKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col><ReactionDisplay {...{ character, newBuild, equippedBuild }} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey }, newBuild, equippedBuild }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard({ character: { characterKey, constellation, talentLevelKeys = {}, }, characterDispatch, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, onClickTitle }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n        talentLevelKeys[tKey] = newTalentLevelKey\r\n        characterDispatch({ talentLevelKeys })\r\n      }\r\n      header = <Card.Header>\r\n        <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" ? 1 : 0)).keys()].map(i =>\r\n            <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>{`Talent Level: ${talentLvlKey + 1}`}</Card.Header>\r\n    }\r\n  }\r\n  const talentStats = Character.getTalentStats(characterKey, talentKey, build)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {/* Display document sections */}\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (!section.canShow(build)) return null\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(build)\r\n        let fields = section.fields ?? []\r\n        return <div className=\"my-2\" key={\"section\" + i}>\r\n          <div xs={12}>\r\n            <div className=\"mb-2\">{talentText}</div>\r\n            {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n              {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n            </ListGroup>}\r\n          </div>\r\n          {Boolean(section.conditional) && <ConditionalDisplay {...{ conditional: section.conditional, equippedBuild, newBuild, characterDispatch, editable }} />}\r\n        </div>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { createContext, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { deepClone } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport DamageOptionsAndCalculation from './CharacterDisplay/DamageOptionsAndCalculation';\r\nimport { CharacterFormulaImport } from '../Formula';\r\n\r\nexport const compareAgainstEquippedContext = createContext()\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\nconst initialCharacter = (characterKey) => ({\r\n  characterKey: characterKey ?? \"\",//the game character this is based off\r\n  levelKey: \"L1\",//combination of level and ascension\r\n  hitMode: \"avgHit\",\r\n  reactionMode: null,\r\n  equippedArtifacts: {},\r\n  artifactConditionals: [],\r\n  conditionalValues: {},\r\n  baseStatOverrides: {},//overriding the baseStat\r\n  weapon: {\r\n    key: Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0] ?? \"\",\r\n    levelKey: WeaponLevelKeys[0],\r\n    refineIndex: 0,\r\n    overrideMainVal: 0,\r\n    overrideSubVal: 0,\r\n  },\r\n  talentLevelKeys: {\r\n    auto: 0,\r\n    skill: 0,\r\n    burst: 0,\r\n  },\r\n  infusionAura: \"\",\r\n  talentConditionals: [],\r\n  constellation: 0,\r\n})\r\n\r\nfunction characterReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"overwrite\":\r\n      return { ...state, ...action.character }\r\n    case \"fromDB\"://for equipping artifacts, that makes the changes in DB instead of in state.\r\n      return { ...state, ...CharacterDatabase.get(state.characterKey, {}) }\r\n    case \"statOverride\": {\r\n      const { statKey, value } = action\r\n      const baseStatOverrides = state.baseStatOverrides\r\n      const baseStatVal = Character.getBaseStatValue(state, statKey)\r\n      if (baseStatVal === value)\r\n        delete baseStatOverrides[statKey]\r\n      else\r\n        baseStatOverrides[statKey] = value\r\n      return { ...state, baseStatOverrides }\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\nexport default function CharacterDisplayCard({ characterKey: propCharacterKey, character: propCharacter, setCharacterKey: propSetCharacterKey, footer, newBuild: propNewBuild, editable, onClose, tabName }) {\r\n  const [character, characterDispatch] = useReducer(characterReducer, initialCharacter(propCharacterKey))\r\n  const [compareAgainstEquipped, setcompareAgainstEquipped] = useState(false)\r\n  const firstUpdate = useRef(true)\r\n  const [updateState, update] = useState({})\r\n  const forceUpdate = useCallback(() => update({}), [])\r\n  useEffect(() => {\r\n    if (!propCharacterKey) return\r\n    const char = { ...initialCharacter(propCharacterKey), ...CharacterDatabase.get(propCharacterKey, {}) }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacterKey])\r\n  useEffect(() => {\r\n    if (!propCharacter) return\r\n    const char = { ...initialCharacter(propCharacter.characterKey), ...propCharacter }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacter])\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n      CharacterFormulaImport\r\n    ]).then(forceUpdate)\r\n  }, [forceUpdate])\r\n\r\n  useEffect(() => {\r\n    //skip saving on the first update, since those updates are from loading from DB\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false\r\n      return\r\n    }\r\n    //save character to DB\r\n    editable && CharacterDatabase.update(character)\r\n  }, [character, editable])\r\n\r\n  const characterKey = propCharacter?.characterKey ?? character.characterKey\r\n\r\n  const setCharacterKey = useCallback(\r\n    newCKey => {\r\n      let state = initialCharacter(newCKey)\r\n      const char = CharacterDatabase.get(newCKey)\r\n      if (char) state = { ...state, ...char }\r\n      characterDispatch({ type: \"overwrite\", character: state })\r\n      if (newCKey !== characterKey)\r\n        propSetCharacterKey?.(newCKey)\r\n    }, [characterKey, characterDispatch, propSetCharacterKey])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return\r\n    const newBuild = propNewBuild && deepClone(propNewBuild)\r\n    newBuild.hitMode = character.hitMode;\r\n    newBuild.reactionMode = character.reactionMode;\r\n    return newBuild\r\n  }, [propNewBuild, character.hitMode, character.reactionMode])\r\n\r\n  const { levelKey, artifacts: flexArts } = character\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => updateState && Character.calculateBuild(character, mainStatAssumptionLevel), [character, updateState, mainStatAssumptionLevel])\r\n\r\n  const HeaderIconDisplay = characterKey ? <span >\r\n    <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  const commonPaneProps = { character, newBuild, equippedBuild: (!newBuild || compareAgainstEquipped) ? equippedBuild : undefined, editable, characterDispatch, compareAgainstEquipped }\r\n  if (flexArts) commonPaneProps.artifacts = flexArts//from flex\r\n  // main CharacterDisplayCard\r\n  const DamageOptionsAndCalculationEle = Character.hasTalentPage(characterKey) && <DamageOptionsAndCalculation {...{ character, characterDispatch, newBuild, equippedBuild }} className=\"mb-2\" />\r\n  return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs={\"auto\"} className=\"mr-auto\">\r\n          {/* character selecter/display */}\r\n          {editable ? <ButtonGroup>\r\n            <Dropdown as={ButtonGroup}>\r\n              <DropdownToggle as={Button}>\r\n                {HeaderIconDisplay}\r\n              </DropdownToggle>\r\n              <Dropdown.Menu as={CustomMenu}>\r\n                {Character.getAllCharacterKeys().map(charKey =>\r\n                  <Dropdown.Item key={charKey} onClick={() => setCharacterKey(charKey)}>\r\n                    <span >\r\n                      <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                      <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                    </span>\r\n                  </Dropdown.Item>)}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\r\n              <h6 className=\"d-inline\">Stats Template: {Character.getlevelTemplateName(levelKey)} </h6>\r\n            }>\r\n              <Dropdown.ItemText>\r\n                <span>Select Base Stat Template</span>\r\n              </Dropdown.ItemText>\r\n              {Character.getlevelKeys().map(lvlKey =>\r\n                <Dropdown.Item key={lvlKey} onClick={() => characterDispatch({ levelKey: lvlKey })}>\r\n                  <h6 >{Character.getlevelTemplateName(lvlKey)} </h6>\r\n                </Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </ButtonGroup> : <span>{HeaderIconDisplay} {Character.getLevelString(character)}</span>}\r\n        </Col>\r\n        {Boolean(mainStatAssumptionLevel) && <Col xs=\"auto\"><Alert className=\"mb-0 py-1 h-100\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert></Col>}\r\n        {/* Compare against new build toggle */}\r\n        {newBuild ? <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(false)}>\r\n              <small>Show New artifact Stats</small>\r\n            </Button>\r\n            <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(true)}>\r\n              <small>Compare against equipped artifact</small>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col> : null}\r\n        {Boolean(onClose) && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    {Boolean(characterKey) && <Card.Body>\r\n      <compareAgainstEquippedContext.Provider value={compareAgainstEquipped}>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 mx-0\" fill>\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\"><h5 className=\"mb-0\">Character</h5></Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\"><h5 className=\"mb-0\">New Artifacts</h5></Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\"><h5 className=\"mb-0\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</h5></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {(process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)) ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled><h5 className=\"mb-0\">Talents</h5> <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\"><h5 className=\"mb-0\">Talents</h5></Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterOverviewPane\r\n                {...commonPaneProps}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterTalentPane {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </compareAgainstEquippedContext.Provider>\r\n    </Card.Body>}\r\n    {footer && <Card.Footer>\r\n      {footer}\r\n    </Card.Footer>}\r\n  </Card>)\r\n}\r\n","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip>Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nexport var propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nvar propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n};\nvar defaultProps = {\n  label: 'Close'\n};\nvar CloseButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var label = _ref.label,\n      onClick = _ref.onClick,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"label\", \"onClick\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    ref: ref,\n    type: \"button\",\n    className: classNames('close', className),\n    onClick: onClick\n  }, props), /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label));\n});\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport ConditionalDisplay from \"../../Character/CharacterDisplay/Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"../../Character/CharacterDisplay/Components/FieldDisplay\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport Artifact from \"../Artifact\"\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, editable, characterDispatch }) {\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const setEffectText = Artifact.getSetEffectText(setKey, setNumKey, stats)\r\n  const setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const conditionals = Artifact.getSetEffectConditionals(setKey, setNumKey)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {Boolean(conditionals) && Object.entries(conditionals).map(([ckey, conditional]) => <ConditionalDisplay key={ckey} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n  </>\r\n}","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, sectionValues]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ character, equippedBuild, newBuild, editable, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Formula from \"../../Formula\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No Infusion</span>,\r\n  \"pyro\": <span >Pyro Infusion</span>,\r\n  \"cryo\": <span >Cryo Infusion</span>,\r\n}\r\n\r\nexport function InfusionAuraDropdown({ character: { infusionAura = \"\", characterKey }, characterDispatch, className }) {\r\n  if (!Character.isMelee(characterKey)) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\nexport function ReactionToggle({ character: { characterKey, reactionMode = \"none\", infusionAura }, characterDispatch, className }) {\r\n  if (reactionMode === null) reactionMode = \"none\"\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ build }) {\r\n  const displayStatKeys = useMemo(() => Character.getDisplayStatKeys(build), [build])\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = Character.getTalentName(build.characterKey, talentKey, talentKey)\r\n      return <Card bg=\"darkcontent\" text=\"lightfont\" key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              //simple statKey field\r\n              if (typeof field === \"string\") {\r\n                const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              //fields\r\n              const formula = Formula.get(field)\r\n              const formulaField = formula.field//Character.getDisplayStatKeys already calls formula.field.canShow\r\n              const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n              const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n              const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n              const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [])\r\n              if (!fieldFormula || !fieldFormulaDependency) return null\r\n              const fieldValue = fieldFormula?.(build)?.toFixed?.()\r\n              const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n              return <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                  <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                  <Card.Body className=\"p-2\">\r\n                    <div className=\"mb-n2\">\r\n                      <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n                      {subFormulaKeys.map(subKey =>\r\n                        <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { hitMode }, characterDispatch, newBuild, equippedBuild, className }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown character={character} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle character={character} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle as={Button} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text=\"lightfont\">\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value })}\r\n                    />\r\n                  </Col>\r\n                  {Character.getElementalKeys().map(eleKey => {\r\n                    let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","export default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nexport default function TestDisplay() {\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterKey=\"amber\" tabName=\"talent\" />\r\n  </Container>\r\n}\r\n"],"sourceRoot":""}