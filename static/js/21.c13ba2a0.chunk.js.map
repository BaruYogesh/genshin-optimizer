{"version":3,"sources":["Character/Character.ts","ReactHooks/useCharacterReducer.tsx","Components/CustomNumberInput.tsx","Components/FieldDisplay.tsx","Components/BootstrapTooltip.tsx","Components/DocumentDisplay.tsx","ProcessFormula.ts","StatDependency.ts","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Weapon/WeaponStatsCard.tsx","Weapon/WeaponDisplayCard.tsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/material/ListItem/listItemClasses.js","../node_modules/@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses.js","../node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@mui/material/ListItem/ListItem.js","../node_modules/@mui/icons-material/esm/SwapHoriz.js"],"names":["Character","this","Error","initialStats","database","sheets","characterKey","elementKey","characterEle","conditionalValues","key","Object","entries","Conditional","conditionals","character","map","conditional","maxStack","canShow","mergeCalculatedStats","resolve","stats","tlvl","parseConditionalValues","conditionalValue","keys","condStats","activeCharacter","teamStats","forEach","tstats","tChar","_getChar","artifacts","fromEntries","equippedArtifacts","artid","_getArt","calculateBuildWithConditionalsWithoutArtifacts","calculateBuildwithArtifact","artifactSheets","val","Number","isNaN","getLevelString","level","ascensionMaxLevel","ascension","getTalentFieldValue","field","defVal","evalIfFunc","hasBonusStats","statKey","bonusStats","getStatValueWithBonus","overrideStatKeys","includes","characterBaseStats","calculateBuild","mainStatAssumptionLevel","calculatePreBuild","finalStatProcess","createInitialStats","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","id","values","art","mainStatKey","mainStatValue","rarity","Math","max","min","substats","substat","value","mergeStats","artifact","createInitialStatsWithoutConds","characterSheets","weaponSheets","hitMode","infusionAura","reactionMode","talent","constellation","equippedWeapon","team","characterSheet","weapon","_getWeapon","defaultInitialWeapon","weaponTypeKey","weaponSheet","overrideStats","filter","s","additionalStats","characterLevel","characterHP","getBase","characterDEF","characterATK","weaponType","refineIndex","refinement","partyBuff","partyAllModifiers","partyOnlyModifiers","partyActiveModifiers","specialStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","weaponATK","getMainStatValue","weaponSubKey","getSubStatKey","getSubStatValue","tCharKey","x","allTeam","allTeamStats","tStats","tindex","_","i","getDisplayStatKeys","eleKey","basicKeys","isAutoElemental","push","transReactions","deepClone","ElementToReactionKeys","charFormulas","talentSheet","getTalent","addFormula","fields","formula","parseSection","section","talentKey","sections","formKey","document","length","setKey","num","artifactSheet","setEffects","setNum","parseInt","useCharacterReducer","useContext","DatabaseContext","useCallback","action","type","setWeaponLocation","updateChar","index","newCharKey","charKey","oldCharKey","oldChar","newChar","t","c","tind","StyledInputBase","styled","InputBase","theme","backgroundColor","palette","primary","main","transition","dark","Wrapper","Button","padding","overflow","width","height","CustomNumberInputButtonGroupWrapper","children","props","disableRipple","disableFocusRipple","disableTouchRipple","CustomNumberInput","onChange","disabled","float","useState","number","setNumber","focused","setFocus","parseFunc","useMemo","parseFloat","onBlur","onFocus","useEffect","onInputChange","e","target","onKeyDOwn","aria-label","onKeyDown","FieldDisplay","buildContext","newBuild","equippedBuild","compareBuild","build","fixedVal","fixed","fieldVal","retVal","fieldEquippedVal","toFixed","diff","color","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","title","component","sx","cursor","ml","icon","faQuestionCircle","unit","display","justifyContent","FieldDisplayList","List","borderRadius","shape","margin","contentDark","contentDarker","BootstrapTooltip","className","arrow","classes","popper","tooltipClasses","common","black","tooltip","DocumentDisplay","skipConditionalEquipmentCheck","characterDispatch","onCVChange","v","sectionsDisplay","talentText","text","canShowConditional","flexDirection","gap","hideDesc","PreprocessFormulas","GetDependencies","modifiers","preprocessedStats","addPreModValues","mod","k","premod","modStatsFormula","mods","targets","context","modStatsFunc","Formula","computeModifier","modStats","b","relevantMod","dependencyKeys","premodFormulaList","postmodFormulaList","getStage","StatData","default","Formulas","processTeam","beforePreprocess","preprocessed","undefined","tPartyModifiers","mergeModifiers","teamFormula","modFormula","partyAllFormula","partyOnlyFormula","partyActiveFormula","numStages","const","GetFormulaDependency","dependency","Set","Proxy","get","prop","receiver","add","toString","formulaKeyDependency","freeze","baseStat","found","dependencies","Array","InsertDependencies","flatMap","dep","has","path","getCurrent","ConditionalSelector","setConditional","name","conditionalNum","conditionalStateKey","state","states","badge","SqBadge","DropdownButton","fullWidth","size","MenuItem","onClick","selected","Divider","stateKey","condial","stack","Typography","startIcon","CheckBox","CheckBoxOutlineBlank","ConditionalDisplay","hideHeader","conditionalStats","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","deletePropPath","objClearEmpties","description","CardDark","header","CardHeader","avatar","titleTypographyProps","variant","CardContent","Box","mb","m","WeaponStatsCard","statsVals","WeaponDisplayCard","propWeaponId","weaponId","charData","footer","onClose","buildContextObj","useWeapon","lock","location","usePromise","WeaponSheet","weaponDispatch","newWeapon","updateWeapon","setLevel","clamp","findIndex","ascenML","setAscension","lowerAscension","CharacterSheet","weaponFilter","ws","initialWeaponFilter","equipOnChar","cs","showModal","setshowModal","img","imgAwaken","CardLight","py","Grid","container","spacing","item","flexGrow","WeaponSelectionModal","show","onHide","onSelect","ButtonGroup","bgcolor","contentLight","startAdornment","inputProps","textAlign","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","Lock","LockOpen","CloseButton","localDatabase","SwapBtn","onChangeId","substatKey","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","passiveName","weaponBonusStats","xs","md","lg","maxWidth","flexShrink","minWidth","src","process","stars","gutterBottom","passiveDescription","Provider","setCompareBuild","atk","CharacterDropdownButton","noUnselect","inventory","large","setShow","close","clickHandler","getAll","weaponIdList","weapons","wKey","dbWeapon","SwapHoriz","ModalWrapper","open","ImgIcon","Assets","weaponTypes","sm","WeaponCard","createSvgIcon","_jsx","d","getListItemUtilityClass","slot","generateUtilityClass","listItemClasses","generateUtilityClasses","getListItemSecondaryActionClassesUtilityClass","_excluded","ListItemSecondaryActionRoot","overridesResolver","styles","ownerState","root","disableGutters","_extends","position","right","top","transform","ListItemSecondaryAction","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","ListContext","slots","composeClasses","useUtilityClasses","clsx","muiName","_excluded2","ListItemRoot","dense","alignItems","alignItemsFlexStart","divider","gutters","disablePadding","button","hasSecondaryAction","secondaryAction","textDecoration","boxSizing","paddingTop","paddingBottom","paddingLeft","paddingRight","listItemButtonClasses","focusVisible","focus","alpha","selectedOpacity","focusOpacity","opacity","disabledOpacity","borderBottom","backgroundClip","transitions","create","duration","shortest","hover","hoverOpacity","ListItemContainer","ListItem","autoFocus","childrenProp","componentProp","components","componentsProps","ContainerComponent","ContainerProps","ContainerClassName","focusVisibleClassName","childContext","listItemRef","useEnhancedEffect","current","toArray","isMuiElement","handleRef","useForkRef","Root","rootProps","componentProps","Component","ButtonBase","_jsxs","isHostComponent","pop"],"mappings":"8RAiBqBA,E,WAEnB,aAAgB,GAAD,oBAAKC,gBAAgBD,EAAW,MAAME,MAAM,0C,uFA2J3D,SAAsDC,EAAgCC,EAA2BC,GAAiB,IAAD,WACvHC,EAAmEH,EAAnEG,aAA4BC,EAAuCJ,EAArDK,aADyG,EACpDL,EAA3BM,yBAD+E,MAC3D,GAD2D,EAM/H,IAAK,IAAMC,KAHXC,OAAOC,QAAP,oBAAeC,IAAYC,aAAaC,iBAAxC,aAAe,EAAsD,aAAjBT,EAAA,mBAA0CC,GAAeD,UAA7G,QAA8H,IAAIU,KAAI,mCAAQC,GAAR,mBAClI,WAAYA,IAAyC,IAAzBA,EAAYC,UAAkBL,IAAYM,QAAQF,EAAad,IAAiBiB,YAAqBjB,EAAcU,IAAYQ,QAAQJ,EAAad,GAAcmB,UAEhLnB,EAAaoB,KAA/B,OACEpB,EAAaoB,KAAKb,IAAlB,UAA0BP,EAAa,GAAD,OAAIO,EAAJ,iBAAtC,QAAyD,EAyB3D,OAtBAG,IAAYW,uBAAuBf,GAAmB,SAACQ,EAAaQ,EAAkBC,GAEpF,GAA6B,aAAzBT,EAAYS,KAAM,IACjBb,IAAYM,QAAQF,EAAad,GAAtC,CAH6F,IAI9EwB,EAAcd,IAAYQ,QAAQJ,EAAad,EAAcsB,GAApEH,MACRF,YAAqBjB,EAAcwB,OAGjCxB,EAAayB,iBACfzB,EAAa0B,UAAUC,SAAQ,SAAAC,GAC7B,GAAKA,EAAL,CAEA,IAAMC,EAAQ5B,EAAS6B,SAASF,EAAOzB,cACvC,GAAK0B,EAAL,CACA,IAAME,EAAYvB,OAAOwB,YAAYxB,OAAOC,QAAQoB,EAAMI,mBAAmBpB,KAAI,mCAAEN,EAAF,KAAO2B,EAAP,WAAkB,CAAC3B,EAAKN,EAASkC,QAAQD,QAC1H,EAAKE,+CAA+CR,EAAQ3B,EAAUC,GACtEL,EAAUwC,2BAA2BT,EAAQG,EAAW7B,EAAOoC,qBAGnE9B,OAAOC,QAAQT,GAAc2B,SAAQ,YAAiB,IAAD,mBAATY,GAAS,WAC/CC,OAAOC,MAAMF,MAEZvC,M,KA7LUH,EAIZ6C,eAAiB,SAAC9B,GAAD,gBACnBA,EAAU+B,MADS,YACAC,IAAkBhC,EAAUiC,aALjChD,EAOZiD,oBAAsB,SAACC,EAAsBxC,GAA4D,IAAlCY,EAAiC,uDAAzB,GAAI6B,EAAqB,uDAAZ,GACjG,OAAKD,EAAMxC,GACJ0C,YAAWF,EAAMxC,GAAaY,GADb6B,GARPnD,EAYZqD,cAAgB,SAACtC,EAA6BuC,GACnD,MAAgB,YAAZA,EACKtD,EAAUqD,cAActC,EAAW,OAASf,EAAUqD,cAActC,EAAW,QAAUf,EAAUqD,cAActC,EAAW,eACrH,aAAZuC,EACKtD,EAAUqD,cAActC,EAAW,QAAUf,EAAUqD,cAActC,EAAW,SAAWf,EAAUqD,cAActC,EAAW,gBACvH,aAAZuC,EACKtD,EAAUqD,cAActC,EAAW,QAAUf,EAAUqD,cAActC,EAAW,SAAWf,EAAUqD,cAActC,EAAW,mBACvH,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWwC,aAAcD,KAAWvC,EAAUwC,YAnBpCvD,EAsBZwD,sBAAwB,SAACzC,EAA6BuC,GAAqB,IAAD,UAC/E,OAAIG,IAAiBC,SAASJ,GAC5B,8BAAOvC,EAAUwC,kBAAjB,aAAO,EAAuBD,UAA9B,QAA0CK,YAAmB5C,GAAWuC,UAAxE,QAAoF,EAEpF,oBAAOvC,EAAUwC,kBAAjB,aAAO,EAAuBD,UAA9B,QAA0C,GA1B3BtD,EA6BZ4D,eAAiB,SAAC7C,EAA6BX,EAA2BC,GAAmE,IAAnDwD,EAAkD,uDAAxB,EACnH1D,EA9BWH,EA8BS8D,kBAAkB/C,EAAWX,EAAUC,EAAQwD,GACzE,OAAOE,YAAiB5D,IA/BPH,EAiCZ8D,kBAAoB,SAAC/C,EAA6BX,EAA2BC,GAAmE,IAAnDwD,EAAkD,uDAAxB,EACtH3B,EAAYvB,OAAOwB,YAAYxB,OAAOC,QAAQG,EAAUqB,mBAAmBpB,KAAI,mCAAEN,EAAF,KAAO2B,EAAP,WAAkB,CAAC3B,EAAKN,EAASkC,QAAQD,QACxHlC,EAAeH,EAAUgE,mBAAmBjD,EAAWX,EAAUC,GAGvE,OAFAF,EAAa0D,wBAA0BA,EACvC7D,EAAUwC,2BAA2BrC,EAAc+B,EAAW7B,EAAOoC,gBAC9DtC,GAtCUH,EAyCZwC,2BAA6B,SAAClB,EAAyBY,EAA2CO,GAAiF,IAAD,EACjLwB,EAAaC,IAASD,WAAW/B,GACjCiC,EAA0BC,IAAcC,gBAAgB5B,EAAgBnB,EAAO2C,GAoBrF,OAnBA3C,EAAMc,kBAAoBzB,OAAOwB,YAAYxB,OAAOC,QAAQsB,GAAWlB,KAAI,mCAAEN,EAAF,KAAOgC,EAAP,WAAqB,CAAChC,EAAD,OAAMgC,QAAN,IAAMA,OAAN,EAAMA,EAAK4B,QAC3GhD,EAAM2C,WAAaA,EAEnBtD,OAAO4D,OAAOrC,GAAWJ,SAAQ,SAAA0C,GAAQ,IAAD,IACjCA,IAELlD,EAAMkD,EAAIC,cAAe,UAACnD,EAAMkD,EAAIC,oBAAX,QAA2B,GAAKP,IAASQ,cAAcF,EAAIC,YAAaD,EAAIG,OAAQC,KAAKC,IAAID,KAAKE,IAAL,UAASxD,EAAMuC,+BAAf,QAA0C,GAAiB,EAAbW,EAAIG,QAAaH,EAAI1B,QAEzL0B,EAAIO,SAASjD,SAAQ,SAACkD,GAAD,OACnBA,GAAWA,EAAQtE,MAAQY,EAAM0D,EAAQtE,MAAQY,EAAM0D,EAAQtE,MAAQ,GAAKsE,EAAQC,cAGxFC,YAAW5D,EAAO6C,GAElBtD,IAAYW,uBAAuB,CAAE2D,SAAQ,OAAE7D,QAAF,IAAEA,GAAF,UAAEA,EAAOb,yBAAT,aAAE,EAA0B0E,WAAY,SAAClE,EAAaQ,EAAd,GAA2D,IAAD,6BAC7I,GAAKZ,IAAYM,QAAQF,EAAaK,GAAtC,CAD6I,IAE9HK,EAAcd,IAAYQ,QAAQJ,EAAaK,EAAOG,GAA7DH,MACRF,YAAqBE,EAAOK,OAEvBL,GA/DUtB,EAkEZoF,+BAAiC,SAACrE,EAA6BX,EAA2BC,GAA8D,IAAD,MAA7CuB,IAA6C,yDACpJyD,EAAkChF,EAAlCgF,gBAAiBC,EAAiBjF,EAAjBiF,aACZhF,EACwES,EAD7EL,IAFoJ,EAGvEK,EAD1DwC,kBAFiI,MAEpH,GAFoH,EAEhHhD,EACyCQ,EADzCR,WAAYuC,EAC6B/B,EAD7B+B,MAAOE,EACsBjC,EADtBiC,UAAWuC,EACWxE,EADXwE,QAASC,EACEzE,EADFyE,aAAcC,EACZ1E,EADY0E,aAAcC,EAC1B3E,EAD0B2E,OAC7GC,EAAmF5E,EAAnF4E,cAAevD,EAAoErB,EAApEqB,kBAH2I,EAGvErB,EAAjDN,yBAHwH,MAGpG,GAHoG,EAGhGmF,EAAyB7E,EAAzB6E,eAAgBC,EAAS9E,EAAT8E,KACtEC,EAAiBT,EAAgB/E,GACjCyF,EAAM,UAAG3F,EAAS4F,WAAWJ,UAAvB,QAA0CK,YAAqBH,EAAeI,eACpFC,EAAcb,EAAaS,EAAOrF,KAClC0F,EAAgBzF,OAAOwB,YAAYxB,OAAOC,QAAQ2C,GAAY8C,QAAO,gBAAEC,EAAF,2BAAS7C,IAAiBC,SAAS4C,OACxGC,EAAkB5F,OAAOwB,YAAYxB,OAAOC,QAAQ2C,GAAY8C,QAAO,gBAAEC,EAAF,2BAAU7C,IAAiBC,SAAS4C,OAE7GnG,EAAewD,YAAmB5C,GACtCZ,EAAaG,aAAeA,EAC5BH,EAAaqG,eAAiB1D,EAC9B3C,EAAasG,YAAcX,EAAeY,QAAQ,cAAe5D,EAAOE,GACxE7C,EAAawG,aAAeb,EAAeY,QAAQ,eAAgB5D,EAAOE,GAC1E7C,EAAayG,aAAed,EAAeY,QAAQ,eAAgB5D,EAAOE,GAC1E7C,EAAaK,aAAb,oBAA4BsF,EAAevF,kBAA3C,QAAyDA,SAAzD,QAAuE,QACvEJ,EAAaoF,QAAUA,EACnBC,IACFrF,EAAaqF,aAAeA,GAC9BrF,EAAasF,aAAeA,EAC5BtF,EAAaM,kBAAoBA,EACjCN,EAAa0G,WAAaf,EAAeI,cACzC/F,EAAaoB,KAAOZ,OAAOwB,YAAYxB,OAAOC,QAAP,OAAe8E,QAAf,IAAeA,IAAU,IAAI1E,KAAI,yCAAkB,CAAlB,UAAgC,OACxGb,EAAawF,cAAgBA,EAC7BxF,EAAa6C,UAAYA,EACzB7C,EAAa4F,OAAS,CAAErF,IAAKqF,EAAOrF,IAAKoG,YAAaf,EAAOgB,WAAa,GAC1E5G,EAAaiC,kBAAoBA,EACjCjC,EAAa0F,KAAOA,EACpB1F,EAAY,2BAAQA,GAAiBiG,GACrClB,YAAW/E,EAAcoG,GAEzBpG,EAAa6G,UAAY,GAEzB7G,EAAa8G,kBAAoB,GACjC9G,EAAa+G,mBAAqB,GAClC/G,EAAagH,qBAAuB,GAGpC,IAAMC,EAAiBtB,EAAeuB,mBAAmBrE,GACzD,GAAIoE,EAAgB,CAClB,IAAME,EAAqBxB,EAAeyB,sBAAsBvE,GAChEkC,YAAW/E,EAAD,eAAkBiH,EAAiBE,IAI/C,IAAME,EAAYrB,EAAYsB,iBAAiB1B,EAAOjD,MAAOiD,EAAO/C,WACpE7C,EAAaqH,UAAYA,EACzB,IAAME,EAAevB,EAAYwB,gBAOjC,GANID,GAAcxC,YAAW/E,EAAD,eAAkBuH,EAAevB,EAAYyB,gBAAgB7B,EAAOjD,MAAOiD,EAAO/C,aAC9GkC,YAAW/E,EAAcgG,EAAY7E,MAAMnB,IAE3CA,EAAayB,gBAAkBA,EAG3BA,EAAiB,CAEnBzB,EAAa0B,UAAYgE,EAAK7E,KAAI,SAAA6G,GAChC,IAAKA,EAAU,OAAO,KACtB,IAAM7F,EAAQ5B,EAAS6B,SAAS4F,GAChC,IAAK7F,EAAO,OAAO,KAEnB,IAAM8F,EAAI9F,EAAM6D,KAChB7D,EAAM6D,KAAO,CAAC,GAAI,GAAI,IACtB,IAAMvE,EAAQtB,EAAUoF,+BAA+BpD,EAAO5B,EAAUC,GAAQ,GAEhF,OADA2B,EAAM6D,KAAOiC,EACNxG,KAGT,IAAMyG,EAAO,CAAIzH,GAAJ,mBAAqBH,EAAa0F,OACzCmC,EAAY,CAAI7H,GAAJ,mBAAqBA,EAAa0B,YACpD1B,EAAa0B,UAAUC,SAAQ,SAACmG,EAAQC,GACjCD,IACLA,EAAOpC,KAAOkC,EAAQ1B,QAAO,SAAC8B,EAAGC,GAAJ,OAAUA,IAAOF,EAAS,KACvDD,EAAOpG,UAAYmG,EAAa3B,QAAO,SAAC8B,EAAGC,GAAJ,OAAUA,IAAOF,EAAS,SAOrE,OAHAvH,OAAOC,QAAQT,GAAc2B,SAAQ,YAAiB,IAAD,mBAATY,GAAS,WAC/CC,OAAOC,MAAMF,MAEZvC,GAnJUH,EAsJZgE,mBAAqB,SAACjD,EAA6BX,EAA2BC,GAEnF,IAAMF,EAAeH,EAAUoF,+BAA+BrE,EAAWX,EAAUC,GAGnF,OA3JiBL,EAyJZuC,+CAA+CpC,EAAcC,EAAUC,GAErEF,GA3JUH,EAgMZqI,mBAAqB,SAAC/G,EAAyBjB,GACpD,IAAMiI,EAAShH,EAAMd,aACf+H,EAAY,CAAC,UAAW,WAAY,WAAY,SAAU,YAAa,WAAY,QAAS,YAAhF,UAAgGD,EAAhG,UACZxC,EAAiBzF,EAAOgF,gBAAgB/D,EAAMhB,cAC9C6F,EAAc9F,EAAOiF,aAAahE,EAAMyE,OAAOrF,KAC7BoF,EAAe0C,iBACjBD,EAAUE,KAAK,iBAGrC,IAAMC,EAAiBC,YAAUC,IAAsBN,IACjDpC,EAAgBJ,EAAeI,cAChCwC,EAAehF,SAAS,kBAAsC,aAAlBwC,GAA8BwC,EAAeD,KAAK,iBACnG,IAAMI,EAAe,GACfC,EAAchD,EAAeiD,UAAUT,GACvCU,EAAa,SAACC,EAAyBvI,GAA1B,OAA0CuI,EAAOnH,SAAQ,SAAAoB,GAAU,IAAD,EAC9EA,EAAMgG,UAAW,OAAChG,QAAD,IAACA,GAAD,UAACA,EAAO/B,eAAR,aAAC,OAAA+B,EAAiB5B,MACnCuH,EAAanI,KAAMmI,EAAanI,GAAO,IAC5CmI,EAAanI,GAAK+H,KAAMvF,EAAMgG,QAAgBxH,WAE1CyH,EAAe,SAACC,EAA0B1I,GAE9C,GAAI0I,EAAQnI,aAAeJ,IAAYM,QAAQiI,EAAQnI,YAAaK,GAAQ,CAAC,IACnE2H,EAAWpI,IAAYQ,QAAQ+H,EAAQnI,YAAaK,GAApD2H,OACRA,GAAUD,EAAWC,EAAQvI,GAG3B0I,EAAQH,QAAQD,EAAWI,EAAQH,OAAQvI,IAEjDoI,GAAenI,OAAOC,QAAQkI,EAAYzI,QAAQyB,SAAQ,mCAAEuH,EAAF,iBAAeC,SAC9DxH,SAAQ,SAAAsH,GAAO,OAAID,EAAaC,EAAD,oBAAuBC,UAEjE,IAAME,EAAO,iBAAajI,EAAMyE,OAAOrF,KAWvC,OAVAyF,EAAYqD,UAAYrD,EAAYqD,SAASxI,KAAI,SAAAoI,GAAO,OAAID,EAAaC,EAASG,MAElFjI,EAAM2C,YAActD,OAAOC,QAAQU,EAAM2C,YAAYjD,KAAI,yCAAqB,CAArB,UAAoCyI,WAAS3H,SAAQ,YAAoB,IAAD,mBAAjB4H,EAAiB,KAATC,EAAS,KACzHC,EAA+BvJ,EAAOoC,eAAeiH,GACtDE,GACLjJ,OAAOC,QAAQgJ,EAAcC,YAAY/H,SAAQ,YAA6B,IAAD,mBAA1BgI,EAA0B,KAAhBN,EAAgB,KAAhBA,SACvDG,EAAMI,SAASD,IACnBN,GAAYA,EAASxI,KAAI,SAAAoI,GAAO,OAAID,EAAaC,EAAD,mBAAsBM,EAAtB,YAAgCI,aAG7E,yBAAEvB,aAAcM,GAAvB,IAAqCH,qB,8GClO1B,SAASsB,EAAoB1J,GAC1C,IAAMF,EAAW6J,qBAAWC,KAE5B,OAAOC,uBAAY,SAACC,GAClB,GAAK9J,EAEL,GAAI,SAAU8J,EAAQ,OAAQA,EAAOC,MACnC,IAAK,SACHjK,EAASkK,kBAAkBF,EAAO9F,GAAIhE,GACtC,MACF,IAAK,YACH,IAMwC,EANlCS,EAAYX,EAAS6B,SAAS3B,GAC5BgD,EAAmB8G,EAAnB9G,QAAS2B,EAAUmF,EAAVnF,MAEX1B,EAAaxC,EAAUwC,WAE7B,GAAIA,EAAWD,KAAa2B,EAAO,OACnC,GAAIxB,IAAiBC,SAASJ,IACxB,UAACK,YAAmB5C,GAAWuC,UAA/B,QAA2C,KAAO2B,SAC7C1B,EAAWD,GAElBC,EAAWD,GAAW2B,OAEpBA,EACF1B,EAAWD,GAAW2B,SAEf1B,EAAWD,GAEtBlD,EAASmK,WAAT,2BAAyBxJ,GAAzB,IAAoCwC,gBACpC,MAEF,IAAK,aACH,IAAMxC,EAAYX,EAAS6B,SAAS3B,GAC5BgD,EAAY8G,EAAZ9G,QAEFC,EAAaxC,EAAUwC,kBACtBA,EAAWD,GAElBlD,EAASmK,WAAT,2BAAyBxJ,GAAzB,IAAoCwC,gBACpC,MAEF,IAAK,OACH,IAAMxC,EAAYX,EAAS6B,SAAS3B,GAC5BuF,EAAS9E,EAAT8E,KAEA2E,EAA+BJ,EAA/BI,MAAgBC,EAAeL,EAAxBM,QACTC,EAAa9E,EAAK2E,GAIxB,GAHA3E,EAAK2E,GAASC,EAGVE,EAAY,CACd,IAAMC,EAAUxK,EAAS6B,SAAS0I,GAC9BC,GAASxK,EAASmK,WAAT,2BAAyBK,GAAzB,IAAkC/E,KAAM,CAAC,GAAI,GAAI,OAIhE,GAAI4E,EAAY,CACd,IAAMI,EAAUzK,EAAS6B,SAASwI,GAC9BI,GACFA,EAAQhF,KAAK/D,SAAQ,SAAAgJ,GACnB,GAAKA,EAAL,CACA,IAAM9I,EAAQ5B,EAAS6B,SAAS6I,GAChC9I,GAAS5B,EAASmK,WAAT,2BAAyBvI,GAAzB,IAAgC6D,KAAM7D,EAAM6D,KAAK7E,KAAI,SAAA+J,GAAC,OAAIA,IAAMN,EAAa,GAAKM,YAMjGlF,EAAK/D,SAAQ,SAACgJ,EAAGE,GACf,GAAKF,EAAL,CACA,IAAMD,EAAUzK,EAAS6B,SAAS6I,GAC9BD,GAASzK,EAASmK,WAAT,2BAAyBM,GAAzB,IAAkChF,KAAM,CAACvF,GAAD,mBAAkBuF,IAAMQ,QAAO,SAAC8B,EAAGC,GAAJ,OAAUA,IAAM4C,EAAO,YAI7G5K,EAASmK,WAAT,2BAAyBxJ,GAAzB,IAAoC8E,eAGtCzF,EAASmK,WAAT,2BAAyBnK,EAAS6B,SAAS3B,IAAmB8J,MAC/D,CAAC9J,EAAcF,M,yMC9FP6K,EAAkBC,YAAOC,IAAPD,EAAkB,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC/DC,gBAAiBD,EAAME,QAAQC,QAAQC,KACvCC,WAAY,gBACZ,UAAW,CACTJ,gBAAiBD,EAAME,QAAQC,QAAQG,MAEzC,gBAAiB,CACfL,gBAAiBD,EAAME,QAAQC,QAAQG,MAEzC,iBAAkB,CAChBL,gBAAiBD,EAAME,QAAQC,QAAQG,UAIrCC,EAAUT,YAAOU,IAAPV,EAAe,kBAAgB,CAC7CG,gBAD6B,EAAGD,MACTE,QAAQC,QAAQC,KACvCK,QAAS,EACTC,SAAU,SACV,IAAO,CACLC,MAAO,OACPC,OAAQ,YAKL,SAASC,EAAT,GAA0I,IAA3FC,EAA0F,EAA1FA,SAAoEC,GAAsB,EAAhFC,cAAgF,EAAjEC,mBAAiE,EAA7CC,mBAA6C,uFAC9I,OAAO,cAACX,EAAD,yBAASS,eAAa,EAACC,oBAAkB,EAACC,oBAAkB,GAAKH,GAAjE,aAAyED,KAGnE,SAASK,EAAT,GAAuG,IAAD,IAAzEtH,aAAyE,MAAjE,EAAiE,EAA9DuH,EAA8D,EAA9DA,SAA8D,IAApDC,gBAAoD,aAAlCC,aAAkC,SAAhBP,EAAgB,yDACvFQ,mBAAS1H,GAD8E,mBAC5G2H,EAD4G,KACpGC,EADoG,OAEvFF,oBAAS,GAF8E,mBAE5GG,EAF4G,KAEnGC,EAFmG,KAG7GC,EAAYC,mBAAQ,kBAAMP,EAAQQ,WAAanD,WAAU,CAAC2C,IAC1DS,EAAShD,uBACb,WACEqC,EAASI,GACTG,GAAS,KAEX,CAACP,EAAUI,EAAQG,IAEfK,EAAUjD,uBACd,WACE4C,GAAS,KAEX,CAACA,IAEHM,qBAAU,kBAAMR,EAAU5H,KAAQ,CAACA,EAAO4H,IAC1C,IAAMS,EAAgBnD,uBAAY,SAAAoD,GAAC,OAAIV,EAAUG,EAAUO,EAAEC,OAAOvI,QAAU,KAAI,CAAC4H,EAAWG,IACxFS,EAAYtD,uBAAY,SAAAoD,GAAC,MAAc,UAAVA,EAAE7M,KAAmByM,MAAU,CAACA,IACnE,OAAO,cAAClC,EAAD,aACLhG,MAAQ6H,IAAYF,EAAU,GAAKA,EACnCc,aAAW,eACXrD,KAAK,SACLmC,SAAUc,EACVH,OAAQA,EACRC,QAASA,EACTX,SAAUA,EACVkB,UAAWF,GACPtB,M,iCCpER,mLAUe,SAASyB,EAAT,GAA4D,IAAD,IAAnC1K,EAAmC,EAAnCA,MAAmC,EACtB+G,qBAAW4D,KAArDC,EADgE,EAChEA,SAAUC,EADsD,EACtDA,cAAeC,EADuC,EACvCA,aAC3BC,EAASH,GAAsBC,EAC/B5M,EAAU8L,mBAAQ,yBAAMgB,IAAK,OAAG/K,QAAH,IAAGA,GAAH,UAAGA,EAAO/B,eAAV,aAAG,OAAA+B,EAAiB+K,MAAgB,CAAC/K,EAAO+K,IACzEC,GAAgB,OAALhL,QAAK,IAALA,OAAA,EAAAA,EAAOiL,QAAS,EAC3BC,EAAWnB,mBAAQ,WACvB,GAAI/J,EAAM+B,MAAO,OAAOjF,IAAUiD,oBAAoBC,EAAO,QAAS+K,GACjE,GAAI/K,EAAMgG,QAAS,CAAC,IAAD,IAClBmF,EAAM,UAAGrO,IAAUiD,oBAAoBC,EAAO,UAAW+K,UAAnD,iBAAG,EAAyD,UAA5D,aAAG,SAA8DA,GAE3E,GAAID,GAAgBD,GAAmC,kBAAXM,EAAqB,CAAC,IAAD,kBAC3DC,EAAmBpL,EAAM+B,MAAQ/B,EAAM+B,MAApB,UAA4B/B,EAAMgG,eAAlC,iBAA4B,OAAAhG,EAAgB6K,UAA5C,iBAA4B,EAAiC,UAA7D,aAA4B,SAAsCA,GACzD,oBAArBO,IACTA,EAAmBvE,SAAQ,UAACuE,SAAD,iBAAC,EAAmBP,UAApB,iBAAC,EAAmCQ,eAApC,aAAC,SAA6CL,KAC3E,IAAIM,EAAOH,EAASC,EACpBD,EAAS,qDAAOC,SAAP,aAAO,EAAkBC,QAAQL,UAAjC,QAA8CI,EAAkBE,EAAO,eAAC,IAAD,CAAWC,MAAOD,EAAO,EAAI,UAAY,QAAzC,eAAqDA,EAAO,EAAI,IAAM,IAAQ,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMD,eAAN,oBAAAC,EAAgBN,KAAaM,EAAvG,OAA4H,MAE9M,OAAOH,KAER,CAACL,EAAcE,EAAUH,EAAe7K,EAAO+K,IAE5CS,EAAYzB,mBAAQ,kBAAMjN,IAAUiD,oBAAoBC,EAAO,OAAQ+K,KAAQ,CAAC/K,EAAO+K,IACvFU,EAAe1B,mBAAQ,kBAAMjN,IAAUiD,oBAAoBC,EAAO,UAAW+K,KAAQ,CAAC/K,EAAO+K,IAE7FW,EAAqB3B,mBAAQ,WACjC,IAAM4B,EAAmB7O,IAAUiD,oBAAoBC,EAAO,cAAe+K,GAC7E,OAAOY,EAAmB,cAAC,IAAD,CAAkBC,UAAU,MAAMC,MAAO,cAAC,IAAD,UAAaF,IAAtD,SACxB,cAAC,IAAD,CAAKG,UAAU,OAAOC,GAAI,CAAEC,OAAQ,OAAQC,GAAI,GAAhD,SAAqD,cAAC,IAAD,CAAiBC,KAAMC,UACxD,OACrB,CAACnM,EAAO+K,IAELqB,EAAOrC,mBAAQ,kBAAMjN,IAAUiD,oBAAoBC,EAAO,OAAQ+K,KAAQ,CAAC/K,EAAO+K,IAExF,OAAK9M,EACE,eAAC,IAAD,CAAU8N,GAAI,CAAEM,QAAS,OAAQC,eAAgB,iBAAjD,UACL,iCAAM,4BAAId,IAAeE,KACzB,eAAC,IAAD,CAAYH,MAAK,UAAKE,EAAL,SAAjB,2BAA4CP,QAA5C,IAA4CA,GAA5C,UAA4CA,EAAUG,eAAtD,aAA4C,OAAAH,EAAoBF,UAAhE,QAA6EE,EAAUkB,QAHpE,KAMhB,IAAMG,EAAmBvE,YAAOwE,IAAPxE,EAAa,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC3DuE,aAAcvE,EAAMwE,MAAMD,aAC1B7D,SAAU,SACV+D,OAAQ,EACR,wCAAyC,CACvCxE,gBAAiBD,EAAME,QAAQwE,YAAYtE,MAE7C,uCAAwC,CACtCH,gBAAiBD,EAAME,QAAQyE,cAAcvE,W,6FCvD3CwE,EAAmB9E,aAAO,gBAAG+E,EAAH,EAAGA,UAAc9D,EAAjB,oCAC9B,cAAC,IAAD,2BAAaA,GAAb,IAAoB+D,OAAK,EAACC,QAAS,CAAEC,OAAQH,QADtB/E,EAEtB,kBAAGE,EAAH,EAAGA,MAAH,uCACMiF,IAAeH,OAAU,CAC9BzB,MAAOrD,EAAME,QAAQgF,OAAOC,QAF7B,2BAIMF,IAAeG,SAAY,CAChCnF,gBAAiBD,EAAME,QAAQgF,OAAOC,QALvC,KAQYP,O,iCCZf,iHAiBe,SAASS,EAAT,GAA4G,IAAjFnH,EAAgF,EAAhFA,SAAUhJ,EAAsE,EAAtEA,aAAcoQ,EAAwD,EAAxDA,8BAAwD,EACpFzG,qBAAW4D,KAAvCC,EADgH,EAChHA,SAAUC,EADsG,EACtGA,cACZE,EAASH,GAAsBC,EAC/B4C,EAAoB3G,YAAoB1J,GACxCsQ,EAAazG,uBACjB,SAAA0G,GAAC,OAAIF,EAAkB,CAAElQ,kBAAmBoQ,MAAM,CAACF,IACrD,IAAK1C,EAAO,OAAO,KAEnB,IAAM6C,EAAe,OAAGxH,QAAH,IAAGA,OAAH,EAAGA,EAAUtI,KAAI,SAACoI,EAAShB,GAAO,IAAD,IACpD,IAAKgB,EAAQjI,QAAS8M,GAAQ,OAAO,KACrC,IAAM8C,EAAa3N,YAAWgG,EAAQ4H,KAAM/C,GACtChF,EAAM,UAAGG,EAAQH,cAAX,QAAqB,GAC3BgI,EAAqB7H,EAAQnI,aAAiD,cAAlCmI,EAAQnI,YAAY+F,WAA6BnG,IAAYM,QAAQiI,EAAQnI,YAAagN,EAAOyC,GACnJ,OAAKK,GAAe9H,EAAOQ,QAAWwH,EAC/B,eAAC,IAAD,CAAyB1B,QAAQ,OAAO2B,cAAc,SAASC,IAAK,EAApE,UACJJ,GAAc,8BAAMA,IACpB9H,EAAOQ,OAAS,GAAK,cAAC,IAAD,iBACnBR,QADmB,IACnBA,GADmB,UACnBA,EAAQjI,WADW,aACnB,OAAAiI,GAAc,SAAC/F,EAAOkF,GAAR,OAAc,cAAC,IAAD,CAAsBlF,MAAOA,GAAVkF,UAE/CgB,EAAQnI,aAAegQ,GAAsB,cAAC,IAAD,CAAoBhQ,YAAamI,EAAQnI,YAAaK,MAAO2M,EAAOzB,SAAUoE,EAAYQ,UAAQ,EAACV,8BAA+BA,MALnK,UAAYtI,GADoC,QAQhE/B,QAAO,SAAAC,GAAC,OAAIA,KACf,OAAKwK,EAAgBrH,OACd,cAAC,IAAD,CAAK8F,QAAQ,OAAO2B,cAAc,SAASC,IAAK,EAAhD,SAAoDL,IADvB,O,kNCjCvB,SAAS/M,EAAiBzC,GACvC,IADgE,EAEX+P,EADlCC,YAAgBhQ,EAAD,OAAQA,QAAR,IAAQA,OAAR,EAAQA,EAAOiQ,WACqCjQ,GAAhEkQ,EAF0C,EAExDrR,aAER,OADA+I,EAHgE,EAEvBA,SACjCsI,GACD,2BAAKlQ,GAAUkQ,GAGxB,SAASC,EAAgBnQ,EAAyBoQ,GAC3CA,GAAQpQ,GACbX,OAAOe,KAAKgQ,GAAK5P,SAAQ,SAAA6P,GAAM,IAAD,IACvBrQ,EAAMsQ,SAAQtQ,EAAMsQ,OAAS,IAClCtQ,EAAMsQ,OAAOD,GAAb,iBAAkBrQ,QAAlB,IAAkBA,GAAlB,UAAkBA,EAAOsQ,cAAzB,aAAkB,EAAgBD,UAAlC,QAAwCrQ,EAAMqQ,MAIlD,SAASE,EAAgBvQ,EAAyBwQ,EAAgBC,EAA+DC,GAC/H,IAAKF,IAASnR,OAAOe,KAAKoQ,GAAMrI,OAAQ,OAAO,kBAAM,MACrD,IAAMwI,EAAeC,IAAQC,gBAAgB7Q,EAAOwQ,GACpD,OAAO,SAACxL,GACN,IAAM8L,EAAWH,EAAa3L,GAE9BlF,YAAqBkF,EAAD,eAAO0L,EAAUI,IACrCL,EAAQzL,GAAGxE,SAAQ,SAAAuQ,GACZA,GACLZ,EAAgBY,EAAGP,OAIzB,SAASQ,EAAYC,EAA0BhB,GAC7C,OAAO5Q,OAAOwB,YAAYxB,OAAOC,QAAQ2Q,GACtClL,QAAO,gBAAE3F,EAAF,2BAAW6R,EAAe7O,SAAShD,OAKxC,SAAS2Q,EAAmBkB,EAA0BjR,GAA0B,IAAD,UACzDA,EAAnBiQ,iBAD4E,MAChE,GADgE,EAClDpR,EAAe,GAC3CqS,EAAoC,GAAIC,EAAqC,GAFC,cAGlEF,GAHkE,IAGpF,2BAAkC,CAAC,IAAxB7R,EAAuB,QAChC,OAAQgS,EAAShS,IACf,KAAK,EAAGP,EAAaO,GAAb,oBAAoBY,EAAMZ,UAA1B,kBAAkCiS,IAASjS,UAA3C,aAAkC,EAAekS,eAAjD,QAA4D,EAAG,MACvE,KAAK,EAAGzS,EAAaO,GAAOmS,IAASnS,GAAMP,GAAe,MAC1D,KAAK,EAAGqS,EAAkB/J,KAAK,CAAC/H,EAAKmS,IAASnS,KAAS,MACvD,KAAK,EACH8R,EAAkB/J,KAAK,CAAC/H,EAAKmS,IAASnS,KACtC+R,EAAmBhK,KAAK,CAAC/H,EAAKmS,IAASnS,KACvC,MACF,KAAK,EAAG+R,EAAmBhK,KAAK,CAAC/H,EAAKmS,IAASnS,OAZiC,8BAgBpFP,EAAayB,gBAAkBN,EAAMM,gBACrCzB,EAAa6G,UAAY1F,EAAM0F,UAE/B,IAAI8L,EAAc,SAACxM,KACnB,GAAIhF,EAAMM,gBAAiB,CACzB,IAAMmR,EAAgB,YAAOzR,EAAMO,WAC7BmR,EAAyF1R,EAAMO,UAAUb,KAAI,SAAA8J,GACjH,IAAKA,EAAG,MAAO,CAAC,UAAMmI,GACtB,IAAMC,EAAkB,GACxBC,YAAeD,EAAiBpI,EAAE7D,mBAClCkM,YAAeD,EAAiBpI,EAAE5D,oBAClCiM,YAAeD,EAAiBpI,EAAE3D,sBAClC,IANsH,EAOlEkK,EAD/BC,YAAgBhQ,EAAO4R,EAAiBX,GACwBzH,GACrF,MAAO,CAR+G,EAO9G3K,aAP8G,EAOxF+I,YAGhC/I,EAAa0B,UAAYmR,EAAahS,KAAI,0CAC1C,IAAM6E,EAAI,CAAI1F,GAAJ,mBAAqBA,EAAa0B,YAC5C1B,EAAa0B,UAAUC,SAAQ,SAACgJ,EAAG1C,GAC5B0C,IACLA,EAAEjJ,UAAYgE,EAAKQ,QAAO,SAAC8B,EAAGqC,GAAJ,OAAcA,IAAUpC,EAAI,SAExD,IAAMgL,EAAcJ,EAAahS,KAAI,uDACrC8R,EAAc,SAACxM,GACbA,EAAEzE,UAAYyE,EAAEzE,UAAUb,KAAI,SAAC8J,EAAG1C,GAChC,OAAK0C,GACLsI,EAAYhL,GAAI0C,GACT,2BAAKiI,EAAiB3K,IAAQ0C,IAFtBA,MAOrB,IAAMuI,EAAanB,IAAQC,gBAAgB7Q,EAAOgR,EAAYC,EAAgBhB,IACxE+B,EAAkBzB,EAAgBvQ,EAAOgR,EAAYC,EAAgBjR,EAAM2F,oBAAoB,SAACX,GAAD,OAAQA,GAAR,mBAAcA,EAAEzE,cAAY,YAC3H0R,EAAmB1B,EAAgBvQ,EAAOgR,EAAYC,EAAgBjR,EAAM4F,qBAAqB,SAACZ,GAAD,OAAOA,EAAEzE,YAAW,aACrH2R,EAAqB3B,EAAgBvQ,EAAOgR,EAAYC,EAAgBjR,EAAM6F,uBAAuB,SAACb,GAAD,MAAO,CAACA,KAAI,eAEvH,MAAO,CACLnG,aAAcA,EACd+I,QAAS,SAAC5C,GACRkM,EAAkB1Q,SAAQ,mCAAEpB,EAAF,KAAOwI,EAAP,YAAoB5C,EAAE5F,GAAOwI,EAAQ5C,MAE/D,IAAM8L,EAAWF,IAAQC,gBAAgB7L,EAAGA,EAAEiL,UAA7BW,CAAwC5L,GACzDpB,YAAWkN,EAAUiB,EAAW/M,IAChCiL,GAAaE,EAAgBnL,EAAGiL,GAChCjL,EAAEiL,WAAaE,EAAgBnL,EAAGA,EAAEiL,WAGpC+B,EAAgBhN,GAChBiN,EAAiBjN,GACjBkN,EAAmBlN,GAEnBwM,EAAYxM,GAGZlF,YAAqBkF,EAAG8L,GACxBlN,YAAWoB,EAAG,CAAEiL,cAEhBkB,EAAmB3Q,SAAQ,mCAAEpB,EAAF,KAAOwI,EAAP,YAAoB5C,EAAE5F,GAAOwI,EAAQ5C,QAI/D,IAAMmN,EAAY,EAClB,SAASf,EAAShS,GAAsB,IAAD,EAC5C,OAAMA,KAAOmS,KACb,UAAIF,IAASjS,UAAb,aAAI,EAAegT,OAAc,EAErB,aAARhT,GAA8B,aAARA,GAA8B,YAARA,EAA0B,EACnE,EAJwB,I,gHClHjC,SAASiT,EAAqBzK,GAC5B,IAAM0K,EAA0B,IAAIC,IAEpC,OADA3K,EAAQ,IAAI4K,MAAM,GAAI,CAAEC,IAAK,SAACvG,EAAQwG,EAAMC,GAAeL,EAAWM,IAAIF,EAAKG,gBACxE,YAAIP,GAEb,IAAMQ,EAAuBzT,OAAO0T,OAAO1T,OAAOwB,YAChDxB,OAAOC,QAAQiS,KAAU7R,KAAI,yCAAkB,CAAlB,KAAwB2S,EAAxB,YAkB/B,SAASrC,EAAgBgD,GAA4F,IAAvE/C,EAAsE,uDAAhD,GAAI7P,EAA4C,uDAArCf,OAAOe,KAAKiR,KACnF4B,EAAQ,IAAIV,IACZW,EAAe,YAAIC,MAAMhB,MAAYzS,KAAI,SAAAmH,GAAC,OAAI,IAAI0L,OAExD,OADAnS,EAAKI,SAAQ,SAAApB,GAAG,OAAIgU,EAAmBJ,EAAU5T,EAAK6Q,EAAWiD,EAAcD,MACxEC,EAAaG,SAAQ,SAAAC,GAAG,mBAAQA,MAEzC,SAASF,EAAmBJ,EAAqB5T,EAAa6Q,EAAqBiD,EAA6BD,GAAqB,IAAD,IAC9HA,EAAMM,IAAInU,KACd6T,EAAML,IAAIxT,GAEV,UAAA0T,EAAqB1T,UAArB,SAA2BoB,SAAQ,SAAA6P,GAAC,OAAI+C,EAAmBJ,EAAU3C,EAAGJ,EAAWiD,EAAcD,OACjG,UAAChD,EAAU7Q,UAAX,QAAmB,IAAIoB,SAAQ,SAAAgT,GAAI,OAAI5C,IAAQ6C,WAAWD,EAAMR,GAAU,GAAGxS,SAAQ,SAAA6P,GAAC,OACpF+C,EAAmBJ,EAAU3C,EAAGJ,EAAWiD,EAAcD,SAC3DC,EAAa9B,YAAShS,IAAMwT,IAAIxT,M,wNCnCnB,SAASsU,EAAT,GAC+K,IADhJ/T,EAC+I,EAD/IA,YAAaQ,EACkI,EADlIA,iBAAkBwT,EACgH,EADhHA,eAAgBC,EACgG,EADhGA,KACgG,IAD1FzI,gBAC0F,SADxEnL,EACwE,EADxEA,MACwE,cACzIG,EADyI,UACpL0T,OADoL,MACnK,EADmK,EAChKC,EADgK,KAE3L,IAAKnU,EAAa,OAAOiU,EACzB,GAAI,WAAYjU,EAAa,CAC3B,IAAMoU,EAAQD,EAAsBnU,EAAYqU,OAAOF,GAAuBzU,OAAO4D,OAAOtD,EAAYqU,QAAQ,GAC1GtE,EAA0B,IAAnBmE,EAAuB,aAAe,iCAAOE,EAAMH,KAAb,IAAqB9R,YAAWiS,EAAOnU,SAAUI,GAAmB,EAA/C,YAAyD6T,EAAzD,iBAAgFA,EAAiB,EAAI,IAAM,IAAQ,MACrLI,EAAQ,cAACC,EAAA,EAAD,CAAS/G,MAA0B,IAAnB0G,EAAuB,YAAc,UAArD,SAAiEnE,IAC/E,OAAO,eAACyE,EAAA,EAAD,CAAgBC,WAAS,EAACC,KAAK,QAAQ5G,MAAO,iCAAOmG,EAAP,IAAcK,KAAe9I,SAAUA,EAArF,UACL,cAACmJ,EAAA,EAAD,CAAUC,QAAS,kBAAMZ,EAAe,CAAC,KAAKa,SAA6B,IAAnBX,EAAsB1I,SAA6B,IAAnB0I,EAAxF,SACE,gDAEF,cAACY,EAAA,EAAD,IACCpV,OAAOC,QAAQK,EAAYqU,QAAQX,SAAQ,WAA2BvM,GAA3B,uBAAE4N,EAAF,KAAYC,EAAZ,YAC1C,YAAIxB,MAAMwB,EAAQ/U,UAAUQ,QAAQV,KAAI,SAAA6P,GAAC,OAAIA,EAAI,KAAG7P,KAAI,SAACkV,EAAO9N,GAAR,OACtD,eAACwN,EAAA,EAAD,CAA6BC,QAAS,kBAAMZ,EAAe,CAACiB,EAAOF,KAAYF,SAAUV,IAAwBY,GAAYb,IAAmBe,EAAOzJ,SAAU2I,IAAwBY,GAAYb,IAAmBe,EAAxN,UACGD,EAAQf,KAAMe,EAAQ/U,SAAW,EAAnB,YAA4BgV,EAA5B,iBAA0CA,EAAQ,EAAI,IAAM,IAAO,KADrEF,EAAW5N,YAMhC,IAAMlH,EAAWkC,YAAWnC,EAAaC,SAAUI,GACnD,GAAiB,IAAbJ,EACF,OAAOgU,EAAO,cAACiB,EAAA,EAAD,UAAajB,IAAqB,KAC3C,GAAiB,IAAbhU,EACT,OAAO,cAAC0K,EAAA,EAAD,CAAQ8J,WAAS,EAACC,KAAK,QAAQE,QAAS,kBAAMZ,EAAe,CAACE,EAAiB,EAAI,KAAK1I,SAAUA,EAAU2J,UAAWjB,EAAiB,cAACkB,EAAA,EAAD,IAAe,cAACC,EAAA,EAAD,IAAvJ,SACJpB,IAEE,GAAIhU,EAAW,EAAG,CAEvB,IAAMqU,EAAQ,cAACC,EAAA,EAAD,CAAS/G,MAA0B,IAAnB0G,EAAuB,YAAc,UAArD,SAAiEA,EAAiB,EAAjB,UAAwBA,EAAxB,iBAA+CA,EAAiB,EAAI,IAAM,IAAO,eAChK,OAAO,eAACM,EAAA,EAAD,CAAgBC,WAAS,EAACC,KAAK,QAAQ5G,MAAO,iCAAOmG,EAAP,IAAcK,KAAe9I,SAAUA,EAArF,UACL,cAACmJ,EAAA,EAAD,CAAUC,QAAS,kBAAMZ,EAAe,CAAC,KAAKa,SAA6B,IAAnBX,EAAsB1I,SAA6B,IAAnB0I,EAAxF,SACE,gDAEF,cAACY,EAAA,EAAD,IACC,YAAItB,MAAMvT,GAAUQ,QAAQV,KAAI,SAAA6P,GAAC,OAAIA,EAAI,KAAG7P,KAAI,SAAAkV,GAAK,OACpD,cAACN,EAAA,EAAD,CAAsBC,QAAS,kBAAMZ,EAAe,CAACiB,KAASJ,SAAUX,IAAmBe,EAAOzJ,SAAU0I,IAAmBe,EAA/H,mBACMA,EADN,iBACoBA,EAAQ,EAAI,IAAM,KADvBA,SAMvB,OAAO,K,+BChCM,SAASK,EAAT,GAAqK,IAAvItV,EAAsI,EAAtIA,YAAaK,EAAyH,EAAzHA,MAAyH,IAAlHkV,kBAAkH,aAA9FpF,gBAA8F,SAA5E5E,EAA4E,EAA5EA,SAA4E,IAAlEkE,qCAAkE,SAC3KvP,EAAU8L,mBAAQ,kBAAMpM,IAAYM,QAAQF,EAAaK,EAAOoP,KAAgC,CAACzP,EAAaK,EAAOoP,IADsD,EAEtFzD,mBAAQ,kBAAM9L,EAAUN,IAAYQ,QAAQJ,EAAaK,GAAS,CAAEA,MAAO,GAAI2H,OAAQ,GAAIxH,iBAAkB,CAAC,MAA2B,CAACN,EAASF,EAAaK,IAF1E,IAEzKA,MAAOmV,OAFkK,MAE/I,GAF+I,MAE3IxN,OAAQyN,OAFmI,MAE/G,GAF+G,EAE3GjV,EAF2G,EAE3GA,iBAChEkV,EAAgB1J,mBAAQ,kBAAM9L,EAAO,sBAAOyV,YAAcH,EAAkBnV,IAAvC,YAAkDoV,IAAqB,KAAI,CAACvV,EAASsV,EAAkBnV,EAAOoV,IACnJzB,EAAiB9K,uBAAY,SAAA0M,GAAU,IAAD,cACbA,EADa,kBAClB,EADkB,GAK/B5V,EAAYS,MACrBoV,YAAkBxV,EAAMb,kBAAmBQ,EAAaS,KAAMmV,IAH9DE,YAAezV,EAAMb,kBAAmBQ,EAAaS,MACrDsV,YAAgB1V,EAAMb,oBAGxB+L,EAASlL,EAAMb,qBACd,CAACQ,EAAaK,EAAOkL,IAElByK,GAAe7F,GAAYnQ,EAAYgW,aAAe7T,YAAWnC,EAAYgW,YAAa3V,GAEhG,OAAKH,GAAYG,EACV,eAAC4V,EAAA,EAAD,YACHV,GAAcvV,EAAYkW,QAAU,cAACC,EAAA,EAAD,CAAYC,OAAQpW,EAAYkW,OAAO/H,MAAQhM,YAAWnC,EAAYkW,OAAO/H,KAAM9N,GAAQyN,MAAO9N,EAAYkW,OAAOpI,MAAO3E,OAAQnJ,EAAYkW,OAAO/M,OAAQkN,qBAAsB,CAAEC,QAAS,gBACpOf,GAAcvV,EAAYkW,QAAU,cAACpB,EAAA,EAAD,MACnC9U,EAAYiU,MAAQ,eAACsC,EAAA,EAAD,WACpBP,GAAe,cAACQ,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAaT,IAC7B,cAACjC,EAAD,CACE/T,YAAaA,EACbQ,iBAAkBA,EAClBwT,eAAgBA,EAChBC,KAAMjU,EAAYiU,KAClB5T,MAAOA,OAEX,cAACsM,EAAA,EAAD,CAAkBqB,GAAI,CAAE0I,EAAG,GAA3B,SACGhB,EAAc3V,KAAI,SAACkC,EAAOkF,GAAR,OAAc,cAACwF,EAAA,EAAD,CAAsB1K,MAAOA,GAAVkF,WAdzB,O,8bC9BlB,SAASwP,EAAT,GAAiI,IAAtG7I,EAAqG,EAArGA,MAAqG,IAA9F8I,iBAA8F,MAAlF,GAAkF,EAA9EvW,EAA8E,EAA9EA,MAC/D,GAAmF,IAA9EX,OAAOe,KAAKmW,GAAwBxR,QAAO,SAAAC,GAAC,MAAU,cAANA,KAAmBmD,OAAc,OAAO,KAC7F,IAAMR,EAAS2N,YAAciB,EAAWvW,GACxC,OAAO,eAAC4V,EAAA,EAAD,WACL,cAACM,EAAA,EAAD,UACE,cAACrB,EAAA,EAAD,UAAapH,MAEf,cAACnB,EAAA,EAAD,UACG3E,EAAOjI,KAAI,SAACkC,EAAOkF,GAAR,OAAc,cAACwF,EAAA,EAAD,CAAsB1K,MAAOA,GAAVkF,WC+BpC,SAAS0P,EAAT,GAKiB,IAAD,IAJnBC,EAImB,EAJ7BC,SACAC,EAG6B,EAH7BA,SAG6B,IAF7BC,cAE6B,SAD7BC,EAC6B,EAD7BA,QAEM/X,EAAW6J,qBAAWC,KAEtBkO,EAAkBnO,qBAAW4D,KAC7B9H,EAASsS,YAAUN,GAJI,SAKuDhS,QALvD,IAKuDA,IAAU,GALjE,IAKrBrF,WALqB,MAKf,GALe,EAKXoC,EALW,EAKXA,MALW,IAKJiE,kBALI,MAKS,EALT,MAKY/D,iBALZ,MAKwB,EALxB,EAK2BsV,GAL3B,EAK2BA,KAL3B,KAKiCC,iBALjC,OAK4C,GAL5C,GAKgDjU,GALhD,EAKgDA,GACvE6B,GAAcqS,YAAWC,IAAY1E,IAAIrT,GAAM,CAACA,IAChDwF,GAAa,OAAGC,SAAH,IAAGA,QAAH,EAAGA,GAAaU,WAE7B6R,GAAiBvO,uBAAY,SAACwO,GAClCvY,EAASwY,aAAaD,EAAWZ,KAChC,CAACA,EAAc3X,IAEZyY,GAAW1O,uBAAY,SAAArH,GAC3BA,EAAQgW,YAAMhW,EAAO,EAAG,IACxB,IAAME,EAAYD,IAAkBgW,WAAU,SAAAC,GAAO,OAAIlW,GAASkW,KAClEN,GAAe,CAAE5V,QAAOE,gBACvB,CAAC0V,KAEEO,GAAe9O,uBAAY,WAC/B,IAAM+O,EAAiBnW,IAAkBgW,WAAU,SAAAC,GAAO,OAAc,KAAVlW,GAAgBA,IAAUkW,KACtDN,GAA9B1V,IAAckW,EAA+B,CAAElW,UAAWA,EAAY,GACtD,CAAEA,UAAWkW,MAChC,CAACR,GAAgB1V,EAAWF,IAEzBmL,GAAK,eAASgK,EAAQ,UAAIA,EAASnK,gBAAb,QAAyBmK,EAASlK,cAAiB,CAAEhI,OAAQ,CAAEe,YAAaC,EAAa,EAAGjE,QAAOE,eAEzH8C,GAAiB0S,YAAWD,GAAWY,IAAepF,IAAIwE,SAAYtF,EAAW,CAACsF,KAClFa,GAAetT,GAAiB,SAACuT,GAAD,OAAQA,EAAGxS,aAAef,GAAeI,oBAAgB+M,EACzFqG,GAAsBxT,IAAkBA,GAAeI,cAEvDqT,GAAcpP,uBAAY,SAACO,GAAD,OAAgCpG,IAAMlE,EAASkK,kBAAkBhG,GAAIoG,KAAU,CAACtK,EAAUkE,KACpH+B,GAAS8D,uBACb,SAACqP,GAAD,OAAwBA,EAAGtT,iBAAH,OAAqBC,SAArB,IAAqBA,QAArB,EAAqBA,GAAaU,cAC1D,CAACV,KAlC0B,GAoCKwG,oBAAS,GApCd,qBAoCtB8M,GApCsB,MAoCXC,GApCW,MAqCvBC,GAAM3W,EAAY,EAAZ,OAAgBmD,SAAhB,IAAgBA,QAAhB,EAAgBA,GAAawT,IAA7B,OAAmCxT,SAAnC,IAAmCA,QAAnC,EAAmCA,GAAayT,UAC5D,OAAO,eAACC,EAAA,EAAD,WACL,cAACrC,EAAA,EAAD,CAAavI,GAAI,CAAE6K,GAAI,GAAvB,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,SAAU,EAArB,SACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAACE,EAAA,EAAD,CAAsBC,KAAMZ,GAAWa,OAAQ,kBAAMZ,IAAa,IAAQa,SAAU,SAAA5I,GAAC,OAAI+G,GAAe,CAAEhY,IAAKiR,KAAMtL,OAAQ+S,GAAcA,aAAcE,KACzJ,eAACkB,EAAA,EAAD,WACE,cAAC5O,EAAA,EAAD,CAAQiK,QAAS,kBAAM6D,IAAa,IAApC,0BAA6CvT,SAA7C,IAA6CA,QAA7C,EAA6CA,GAAa+O,YAA1D,QAAkE,oBAClE,eAACO,EAAA,EAAD,CAAgB1G,MAAK,qBAAgBhI,GAArC,UACE,cAAC6O,EAAA,EAAD,uCACA,cAACG,EAAA,EAAD,IACC,YAAItB,MAAM,GAAG/S,QAAQV,KAAI,SAAAN,GAAG,OAC3B,cAACkV,EAAA,EAAD,CAAoBC,QAAS,kBAAM6C,GAAe,CAAE3R,WAAYrG,EAAM,KAAMoV,SAAU/O,IAAgBrG,EAAM,EAAI+L,SAAU1F,IAAgBrG,EAAM,EAAhJ,8BACiBA,EAAM,IADRA,eAMvB,cAACqZ,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACM,EAAA,EAAD,CAAavL,GAAI,CAAEwL,QAAS,SAAA3P,GAAC,OAAIA,EAAEQ,QAAQoP,aAAalP,OAAxD,UACE,cAACe,EAAA,EAAD,UACE,cAACA,EAAA,EAAD,CAAmBC,SAAUqM,GAAU5T,MAAOnC,EAC5C6X,eAAe,QACfC,WAAY,CAAE9V,IAAK,EAAGD,IAAK,GAAIoK,GAAI,CAAE4L,UAAW,WAChD5L,GAAI,CAAElD,MAAO,OAAQC,OAAQ,OAAQ8O,GAAI,OAG7C,cAAClP,EAAA,EAAD,CAAQqD,GAAI,CAAE6L,GAAI,GAAKrO,UAAWsO,YAAejY,GAAQ+S,QAASoD,GAAlE,SAAgF,wCAAWlW,IAAkBC,QAC7G,cAACyS,EAAA,EAAD,CAAgB1G,MAAO,eAAvB,SACGiM,IAAgBha,KAAI,YAAe,IAAD,mBAAZia,EAAY,KAARC,EAAQ,KAE3BC,EADYF,IAAOlY,IAAkBmY,GACnB,cAAUD,GAAV,cAAwBA,EAAxB,YAA8BlY,IAAkBmY,IAClEpF,EAAWmF,IAAOnY,GAASoY,IAAOlY,EACxC,OAAO,cAAC4S,EAAA,EAAD,CAA8BE,SAAUA,EAAUrJ,SAAUqJ,EAAUD,QAAS,kBAAM6C,GAAe,CAAE5V,MAAOmY,EAAIjY,UAAWkY,KAA5H,SAAoIC,GAApI,UAAkBF,EAAlB,YAAwBC,cAKvC,cAACnB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACtO,EAAA,EAAD,CAAQ6C,MAAM,QAAQoH,QAAS,kBAAMvR,IAAMlE,EAASwY,aAAa,CAAEN,MAAOA,IAAQhU,KAAK8R,UAAWkC,GAAO,cAAC8C,EAAA,EAAD,IAAW,cAACC,EAAA,EAAD,IAApH,SACG/C,GAAO,SAAW,sBAKxBH,GAAW,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAAV,SACZ,cAACoB,EAAA,EAAD,CAAazF,QAASsC,QAErBF,GAAY7X,IAAamb,KAAiB,cAACxB,EAAA,EAAD,CAAMG,MAAI,EAAV,SAC3C,cAACsB,EAAD,CAAStV,cAAeA,GAAeuV,WAAY,SAAAnX,GAAE,OAAIlE,EAASkK,kBAAkBhG,EAAI2T,EAASlX,UAAUL,eAIjH,cAACqV,EAAA,EAAD,IACA,cAACyB,EAAA,EAAD,UACI,WACA,IAAKrR,GAAa,OAAO,KACzB,IAAMuV,EAAavV,GAAYwB,gBACzBgU,EAAuBxV,GAAYsB,iBAAiB3E,EAAOE,GAC3D4Y,EAAsBzV,GAAYyB,gBAAgB9E,EAAOE,GACzD6Y,EAAoB1V,GAAY2V,YAChCC,EAAmB5V,GAAY7E,MAAM2M,IACrC3E,EAAWnD,GAAYqD,SAC7B,OAAO,eAACiO,EAAA,EAAD,CAAKlI,QAAQ,OAAO4B,IAAK,CAAE6K,GAAI,EAAGC,GAAI,IAAKC,GAAI,GAA/C,UACL,eAACzE,EAAA,EAAD,CAAKxI,GAAI,CAAEkN,SAAU,KAAOC,WAAY,EAAGC,SAAS,MAApD,UACE,cAAC5E,EAAA,EAAD,CAAKzI,UAAU,MAAMsN,IAAK3C,GAAK1J,UAAS,eAAU9J,GAAYxB,OAAtB,QAAoCsK,GAAI,CAAEkN,SAAU,IAAKpQ,MAAO,OAAQC,OAAQ,OAAQ2D,aAAc,KAC9I,cAACwG,EAAA,EAAD,UAAY,gCAAQhQ,GAAY8Q,mBAElC,eAACQ,EAAA,EAAD,CAAKxI,GAAI,CAAEyI,IAAK,GAAKyC,SAAU,EAA/B,UACE,eAAChE,EAAA,EAAD,CAAYoB,QAAQ,KAApB,WAA2BgF,EAAgGpW,GAAY+O,KAAvI,QAAkJnP,GAAU0S,IAAY5V,eAAekD,GAAvL,IAAiM8V,GAAqB,eAACrG,EAAA,EAAD,CAAS/G,MAAM,OAAf,wBAAkC1H,QACxP,cAACoP,EAAA,EAAD,UAAY,cAAC,IAAD,CAAOqG,MAAOrW,GAAYxB,WACtC,cAACwR,EAAA,EAAD,CAAYoB,QAAQ,YAApB,SAAiCsE,IACjC,cAAC1F,EAAA,EAAD,CAAYsG,cAAY,EAAxB,SAA0BZ,GAAqB1V,GAAYuW,mBAAmBzO,MAC7EA,IAAS,cAAC,IAAa0O,SAAd,CAAuB1X,MAAOgT,EAAWG,EAAkB,CAAErK,cAAeE,GAAOH,cAAUmF,EAAWjF,cAAc,EAAO4O,qBAAiB3J,GAA9I,SACR,eAACwE,EAAA,EAAD,CAAKlI,QAAQ,OAAO2B,cAAc,SAASC,IAAK,EAAhD,UACE,cAACyG,EAAD,CAAiB7I,MAAO,aAAc8I,UAAS,aAAIgF,IAAKlB,GAAuBD,EAAaA,EAAaE,OAAsB3I,GAAa3R,MAAO2M,KACnJ,cAAC2J,EAAD,CAAiB7I,MAAO,cAAe8I,UAAWkE,EAAkBza,MAAO2M,UAG9EgK,GAAY3O,EAAY,WAAO,IAAD,EACrByE,EAA4BkK,EAA5BlK,cAAeD,EAAamK,EAAbnK,SACjBxN,EAAY,UAAIwN,GAAsBC,SAA1B,aAAG,EAAuCzN,aAC5D,QAASA,GAAgB,cAAEmQ,EAAA,EAAF,CAAkBnH,SAAUA,EAAUhJ,aAAcA,IAHtD,GAIlB,WA5BX,KAiCH4X,GAAU5T,IAAM,cAACkT,EAAA,EAAD,CAAavI,GAAI,CAAE6K,GAAI,GAAvB,SACf,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,SAAU,EAArB,SACE,cAAC2C,EAAA,EAAD,CAAyBC,YAAU,EAACC,WAAS,EAAC/X,MAAOsT,GAAU/L,SAAU+M,GAAalT,OAAQA,SAE7F8R,GAAW,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAAV,SAAW,cAACoB,EAAA,EAAD,CAAa2B,OAAK,EAACpH,QAASsC,cAK7D,SAASqD,EAAT,GAAiD,IAA9BC,EAA6B,EAA7BA,WAAYvV,EAAiB,EAAjBA,cACvB9F,EAAW6J,qBAAWC,KADkB,EAEtByC,oBAAS,GAFa,mBAEvC0N,EAFuC,KAEjC6C,EAFiC,KAIxCC,EAAQ,kBAAMD,GAAQ,IAEtBE,EAAe,SAAC9Y,GACpBmX,EAAWnX,GACX6Y,KAGI7X,EAAekT,YAAWC,IAAY4E,SAAU,IAEhDC,EAAeld,EAASmd,QAAQ7b,KAAK2E,QAAO,SAAAmX,GAAS,IAAD,EAClDC,EAAWrd,EAAS4F,WAAWwX,GACrC,QAAKC,KACDvX,GAAiBA,KAAa,OAAKZ,QAAL,IAAKA,GAAL,UAAKA,EAAemY,EAAS/c,YAA7B,aAAK,EAA8BmG,gBAKvE,OAAO,qCACL,cAAC+E,EAAA,EAAD,CAAQ6C,MAAM,OAAOoH,QAnBV,kBAAMqH,GAAQ,IAmBW9G,UAAW,cAACsH,EAAA,EAAD,IAA/C,yBACA,cAACC,EAAA,EAAD,CAAcC,KAAMvD,EAAMlC,QAASgF,EAAnC,SACE,eAACjG,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,CAAavI,GAAI,CAAE6K,GAAI,GAAvB,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,SAAU,EAArB,SACE,eAAChE,EAAA,EAAD,CAAYoB,QAAQ,KAApB,UAA0BrR,EAAgB,cAAC2X,EAAA,EAAD,CAASvB,IAAKwB,IAAOC,YAAY7X,KAAqB,KAAhG,oBAEF,cAAC6T,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACoB,EAAA,EAAD,CAAazF,QAASsH,WAI5B,cAACpH,EAAA,EAAD,IACA,cAACyB,EAAA,EAAD,UACE,cAACuC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGqD,EAAatc,KAAI,SAAAgX,GAAQ,OACxB,cAAC+B,EAAA,EAAD,CAAMG,MAAI,EAAgB8B,GAAI,EAAGgC,GAAI,EAAG/B,GAAI,EAAGC,GAAI,EAAnD,SACE,cAAC+B,EAAA,EAAD,CACEjG,SAAUA,EACVnC,QAASuH,KAHGpF,oB,iCClO9B,mBAEekG,gBAA4BC,cAAK,OAAQ,CACtDC,EAAG,uIACD,a,iCCJJ,mBAEeF,gBAA4BC,cAAK,OAAQ,CACtDC,EAAG,+FACD,yB,qLCHG,SAASC,EAAwBC,GACtC,OAAOC,YAAqB,cAAeD,GAE7C,IACeE,EADSC,YAAuB,cAAe,CAAC,OAAQ,YAAa,eAAgB,QAAS,sBAAuB,WAAY,UAAW,UAAW,UAAW,SAAU,kBAAmB,a,QCHvM,SAASC,EAA8CJ,GAC5D,OAAOC,YAAqB,6BAA8BD,GAErBG,YAAuB,6BAA8B,CAAC,OAAQ,mBAArG,I,OCFME,EAAY,CAAC,aAsBbC,EAA8B1T,YAAO,MAAO,CAChDgK,KAAM,6BACNoJ,KAAM,OACNO,kBAAmB,SAAC1S,EAAO2S,GAAW,IAElCC,EACE5S,EADF4S,WAEF,MAAO,CAACD,EAAOE,KAAMD,EAAWE,gBAAkBH,EAAOG,kBAPzB/T,EASjC,gBACD6T,EADC,EACDA,WADC,OAEGG,YAAS,CACbC,SAAU,WACVC,MAAO,GACPC,IAAK,MACLC,UAAW,oBACVP,EAAWE,gBAAkB,CAC9BG,MAAO,OAMHG,EAAuCC,cAAiB,SAAiCC,EAASC,GACtG,IAAMvT,EAAQwT,YAAc,CAC1BxT,MAAOsT,EACPvK,KAAM,+BAINjF,EACE9D,EADF8D,UAEI2P,EAAQC,YAA8B1T,EAAOwS,GAE7C3M,EAAUwN,aAAiBM,KAE3Bf,EAAaG,YAAS,GAAI/S,EAAO,CACrC8S,eAAgBjN,EAAQiN,iBAGpB9O,EAnDkB,SAAA4O,GAAc,IAEpCE,EAEEF,EAFFE,eACA9O,EACE4O,EADF5O,QAEI4P,EAAQ,CACZf,KAAM,CAAC,OAAQC,GAAkB,mBAEnC,OAAOe,YAAeD,EAAOrB,EAA+CvO,GA2C5D8P,CAAkBlB,GAClC,OAAoBZ,cAAKS,EAA6BM,YAAS,CAC7DjP,UAAWiQ,YAAK/P,EAAQ6O,KAAM/O,GAC9B8O,WAAYA,EACZW,IAAKA,GACJE,OA8BLL,EAAwBY,QAAU,0BACnBZ,QClGTZ,EAAY,CAAC,aACbyB,EAAa,CAAC,aAAc,YAAa,SAAU,WAAY,YAAa,YAAa,aAAc,kBAAmB,qBAAsB,iBAAkB,QAAS,WAAY,iBAAkB,iBAAkB,UAAW,wBAAyB,kBAAmB,YA8C3QC,EAAenV,YAAO,MAAO,CACxCgK,KAAM,cACNoJ,KAAM,OACNO,kBA9B+B,SAAC1S,EAAO2S,GAAW,IAEhDC,EACE5S,EADF4S,WAEF,MAAO,CAACD,EAAOE,KAAMD,EAAWuB,OAASxB,EAAOwB,MAAiC,eAA1BvB,EAAWwB,YAA+BzB,EAAO0B,oBAAqBzB,EAAW0B,SAAW3B,EAAO2B,SAAU1B,EAAWE,gBAAkBH,EAAO4B,SAAU3B,EAAW4B,gBAAkB7B,EAAOjT,QAASkT,EAAW6B,QAAU9B,EAAO8B,OAAQ7B,EAAW8B,oBAAsB/B,EAAOgC,mBAuBjT5V,EAIzB,kBACDE,EADC,EACDA,MACA2T,EAFC,EAEDA,WAFC,OAGGG,YAAS,CACb3P,QAAS,OACTC,eAAgB,aAChB+Q,WAAY,SACZpB,SAAU,WACV4B,eAAgB,OAChBhV,MAAO,OACPiV,UAAW,aACXnG,UAAW,SACTkE,EAAW4B,gBAAkBzB,YAAS,CACxC+B,WAAY,EACZC,cAAe,GACdnC,EAAWuB,OAAS,CACrBW,WAAY,EACZC,cAAe,IACbnC,EAAWE,gBAAkB,CAC/BkC,YAAa,GACbC,aAAc,MACXrC,EAAW+B,iBAAmB,CAGjCM,aAAc,OACVrC,EAAW+B,iBAAb,8BACOO,IAAsBrC,MAAS,CACtCoC,aAAc,MAxBJ,+BA2BN5C,EAAgB8C,cAAiB,CACrCjW,gBAAiBD,EAAME,QAAQlB,OAAOmX,QA5B5B,0BA8BN/C,EAAgB1I,UA9BV,aA+BVzK,gBAAiBmW,YAAMpW,EAAME,QAAQC,QAAQC,KAAMJ,EAAME,QAAQlB,OAAOqX,kBA/B9D,YAgCJjD,EAAgB8C,cAAiB,CACrCjW,gBAAiBmW,YAAMpW,EAAME,QAAQC,QAAQC,KAAMJ,EAAME,QAAQlB,OAAOqX,gBAAkBrW,EAAME,QAAQlB,OAAOsX,iBAjCvG,0BAoCNlD,EAAgB/R,UAAa,CACjCkV,QAASvW,EAAME,QAAQlB,OAAOwX,kBArCpB,GAuCe,eAA1B7C,EAAWwB,YAA+B,CAC3CA,WAAY,cACXxB,EAAW0B,SAAW,CACvBoB,aAAc,aAAF,OAAezW,EAAME,QAAQmV,SACzCqB,eAAgB,eACf/C,EAAW6B,QAAX,aACDnV,WAAYL,EAAM2W,YAAYC,OAAO,mBAAoB,CACvDC,SAAU7W,EAAM2W,YAAYE,SAASC,WAEvC,UAAW,CACTnB,eAAgB,OAChB1V,gBAAiBD,EAAME,QAAQlB,OAAO+X,MAEtC,uBAAwB,CACtB9W,gBAAiB,iBATpB,YAYKmT,EAAgB1I,SAZrB,UAYwC,CACvCzK,gBAAiBmW,YAAMpW,EAAME,QAAQC,QAAQC,KAAMJ,EAAME,QAAQlB,OAAOqX,gBAAkBrW,EAAME,QAAQlB,OAAOgY,cAE/G,uBAAwB,CACtB/W,gBAAiBmW,YAAMpW,EAAME,QAAQC,QAAQC,KAAMJ,EAAME,QAAQlB,OAAOqX,oBAG3E1C,EAAW8B,oBAAsB,CAGlCO,aAAc,QAEViB,EAAoBnX,YAAO,KAAM,CACrCgK,KAAM,cACNoJ,KAAM,YACNO,kBAAmB,SAAC1S,EAAO2S,GAAR,OAAmBA,EAAO9E,YAHrB9O,CAIvB,CACDiU,SAAU,aAMNmD,EAAwB9C,cAAiB,SAAkBC,EAASC,GACxE,IAAMvT,EAAQwT,YAAc,CAC1BxT,MAAOsT,EACPvK,KAAM,gBAHqE,EA2BzE/I,EApBFoU,kBAP2E,MAO9D,SAP8D,IA2BzEpU,EAnBFoW,iBAR2E,WA2BzEpW,EAlBFyU,cAT2E,SAUjE4B,EAiBRrW,EAjBFD,SACA+D,EAgBE9D,EAhBF8D,UACWwS,EAeTtW,EAfF6C,UAZ2E,EA2BzE7C,EAdFuW,kBAb2E,MAa9D,GAb8D,IA2BzEvW,EAbFwW,uBAd2E,MAczD,GAdyD,IA2BzExW,EAZFyW,0BAf2E,MAetD,KAfsD,IA2BzEzW,EAXF0W,eACaC,GAjB8D,aAkBvE,GAlBuE,GAiBzE7S,UAjByE,EA2BzE9D,EARFmU,aAnB2E,WA2BzEnU,EAPFM,gBApB2E,WA2BzEN,EANF8S,sBArB2E,WA2BzE9S,EALFwU,sBAtB2E,WA2BzExU,EAJFsU,eAvB2E,SAwB3EsC,EAGE5W,EAHF4W,sBACAjC,EAEE3U,EAFF2U,gBAzB2E,EA2BzE3U,EADF2J,gBA1B2E,SA4BvE+M,GAAiBhD,YAA8B1T,EAAM0W,eAAgBlE,GACrEiB,GAAQC,YAA8B1T,EAAOiU,GAE7CpO,GAAUwN,aAAiBM,KAC3BkD,GAAe,CACnB1C,MAAOA,GAAStO,GAAQsO,QAAS,EACjCC,aACAtB,kBAEIgE,GAAczD,SAAa,MACjC0D,aAAkB,WACZX,GACEU,GAAYE,SACdF,GAAYE,QAAQ5B,UAKvB,CAACgB,IACJ,IAAMrW,GAAWsT,WAAe4D,QAAQZ,GAElC3B,GAAqB3U,GAASzC,QAAU4Z,YAAanX,GAASA,GAASzC,OAAS,GAAI,CAAC,4BAErFsV,GAAaG,YAAS,GAAI/S,EAAO,CACrCoU,aACAgC,YACA3B,SACAN,MAAO0C,GAAa1C,MACpB7T,WACAwS,iBACA0B,iBACAF,UACAI,sBACA/K,aAGI3F,GA1KkB,SAAA4O,GAAc,IAEpCwB,EAUExB,EAVFwB,WACAK,EASE7B,EATF6B,OACAzQ,EAQE4O,EARF5O,QACAmQ,EAOEvB,EAPFuB,MACA7T,EAMEsS,EANFtS,SAOIsT,EAAQ,CACZf,KAAM,CAAC,OAAQsB,GAAS,SAFtBvB,EALFE,gBAOoD,WAFlDF,EAJF4B,gBAMkF,UAFhF5B,EAHF0B,SAKwG,UAAWhU,GAAY,WAAYmU,GAAU,SAAyB,eAAfL,GAA+B,sBAF5LxB,EAFF8B,oBAI2O,kBAFzO9B,EADFjJ,UAG0Q,YAC1QkE,UAAW,CAAC,cAEd,OAAOgG,YAAeD,EAAO1B,EAAyBlO,GAyJtC8P,CAAkBlB,IAC5BuE,GAAYC,YAAWN,GAAavD,GACpC8D,GAAOd,EAAWc,MAAQnD,EAC1BoD,GAAYd,EAAgB3D,MAAQ,GAEpC0E,GAAiBxE,YAAS,CAC9BjP,UAAWiQ,YAAK/P,GAAQ6O,KAAMyE,GAAUxT,UAAWA,GACnDxD,YACCmT,IAEC+D,GAAYlB,GAAiB,KASjC,OAPI7B,IACF8C,GAAe1U,UAAYyT,GAAiB,MAC5CiB,GAAeX,sBAAwB7C,YAAK1B,EAAgB8C,aAAcyB,GAC1EY,GAAYC,KAIV/C,IAEF8C,GAAaD,GAAe1U,WAAcyT,EAAwBkB,GAAR,MAE/B,OAAvBf,IACgB,OAAde,GACFA,GAAY,MAC0B,OAA7BD,GAAe1U,YACxB0U,GAAe1U,UAAY,QAIXmP,cAAK2B,IAAYnD,SAAU,CAC7C1X,MAAO+d,GACP9W,SAAuB2X,eAAMxB,EAAmBnD,YAAS,CACvDhE,GAAI0H,EACJ3S,UAAWiQ,YAAK/P,GAAQ6J,UAAW8I,GACnCpD,IAAK4D,GACLvE,WAAYA,IACX8D,GAAgB,CACjB3W,SAAU,CAAciS,cAAKqF,GAAMtE,YAAS,GAAIuE,IAAYK,YAAgBN,KAAS,CACnFtI,GAAIyI,GACJ5E,WAAYG,YAAS,GAAIH,GAAY0E,GAAU1E,aAC9C2E,GAAgB,CACjBxX,SAAUA,MACPA,GAAS6X,aAKA5F,cAAK2B,IAAYnD,SAAU,CAC7C1X,MAAO+d,GACP9W,SAAuB2X,eAAML,GAAMtE,YAAS,GAAIuE,GAAW,CACzDvI,GAAIyI,GACJjE,IAAK4D,GACLvE,WAAYA,KACV+E,YAAgBN,KAAS,CAC3BzE,WAAYG,YAAS,GAAIH,GAAY0E,GAAU1E,aAC9C2E,GAAgB,CACjBxX,SAAU,CAACA,GAAU4U,GAAgC3C,cAAKoB,EAAyB,CACjFrT,SAAU4U,aAgKHwB,O,iCClaf,mBAEepE,gBAA4BC,cAAK,OAAQ,CACtDC,EAAG,4EACD","file":"static/js/21.c13ba2a0.chunk.js","sourcesContent":["import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport finalStatProcess from \"../ProcessFormula\";\r\nimport { Sheets } from \"../ReactHooks/useSheets\";\r\nimport { ElementToReactionKeys } from \"../StatData\";\r\nimport { ICachedArtifact, StatKey } from \"../Types/artifact\";\r\nimport { DocumentSection, ICachedCharacter } from \"../Types/character\";\r\nimport { ArtifactSetKey, SlotKey } from \"../Types/consts\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { characterBaseStats, mergeCalculatedStats, mergeStats, overrideStatKeys } from \"../Util/StatUtil\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport { defaultInitialWeapon } from \"../Weapon/WeaponUtil\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getLevelString = (character: ICachedCharacter): string =>\r\n    `${character.level}/${ascensionMaxLevel[character.ascension]}`\r\n\r\n  static getTalentFieldValue = (field: IFieldDisplay, key: keyof IFieldDisplay, stats = {}, defVal = \"\"): any => {\r\n    if (!field[key]) return defVal\r\n    return evalIfFunc(field[key] as any, stats!)\r\n  }\r\n\r\n  static hasBonusStats = (character: ICachedCharacter, statKey): boolean => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasBonusStats(character, \"hp\") || Character.hasBonusStats(character, \"hp_\") || Character.hasBonusStats(character, \"characterHP\")\r\n    if (statKey === \"finalDEF\")\r\n      return Character.hasBonusStats(character, \"def\") || Character.hasBonusStats(character, \"def_\") || Character.hasBonusStats(character, \"characterDEF\")\r\n    if (statKey === \"finalATK\")\r\n      return Character.hasBonusStats(character, \"atk\") || Character.hasBonusStats(character, \"atk_\") || Character.hasBonusStats(character, \"characterATK\")\r\n    return character?.bonusStats ? (statKey in character.bonusStats) : false;\r\n  }\r\n\r\n  static getStatValueWithBonus = (character: ICachedCharacter, statKey: string) => {\r\n    if (overrideStatKeys.includes(statKey))\r\n      return character.bonusStats?.[statKey] ?? characterBaseStats(character)[statKey] ?? 0\r\n    else\r\n      return character.bonusStats?.[statKey] ?? 0\r\n  }\r\n\r\n  static calculateBuild = (character: ICachedCharacter, database: ArtCharDatabase, sheets: Sheets, mainStatAssumptionLevel = 0): ICalculatedStats => {\r\n    const initialStats = this.calculatePreBuild(character, database, sheets, mainStatAssumptionLevel)\r\n    return finalStatProcess(initialStats)\r\n  }\r\n  static calculatePreBuild = (character: ICachedCharacter, database: ArtCharDatabase, sheets: Sheets, mainStatAssumptionLevel = 0): ICalculatedStats => {\r\n    const artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, database._getArt(artid)]))\r\n    const initialStats = Character.createInitialStats(character, database, sheets)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    Character.calculateBuildwithArtifact(initialStats, artifacts, sheets.artifactSheets)\r\n    return initialStats\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (stats: ICalculatedStats, artifacts: Dict<SlotKey, ICachedArtifact>, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>): ICalculatedStats => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    const artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, stats, setToSlots)\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] ?? 0) + Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(stats.mainStatAssumptionLevel ?? 20, art.rarity * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    mergeStats(stats, artifactSetEffectsStats)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      if (!Conditional.canShow(conditional, stats)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      mergeCalculatedStats(stats, condStats)\r\n    })\r\n    return stats\r\n  }\r\n\r\n  static createInitialStatsWithoutConds = (character: ICachedCharacter, database: ArtCharDatabase, sheets: Sheets, activeCharacter = true): ICalculatedStats => {\r\n    const { characterSheets, weaponSheets } = sheets\r\n    const { key: characterKey, bonusStats = {}, elementKey, level, ascension, hitMode, infusionAura, reactionMode, talent,\r\n      constellation, equippedArtifacts, conditionalValues = {}, equippedWeapon, team } = character\r\n    const characterSheet = characterSheets[characterKey]\r\n    const weapon = database._getWeapon(equippedWeapon) ?? defaultInitialWeapon(characterSheet.weaponTypeKey) // need to ensure all characters have a weapon\r\n    const weaponSheet = weaponSheets[weapon.key]\r\n    const overrideStats = Object.fromEntries(Object.entries(bonusStats).filter(([s]) => overrideStatKeys.includes(s)))\r\n    const additionalStats = Object.fromEntries(Object.entries(bonusStats).filter(([s]) => !overrideStatKeys.includes(s)))\r\n    //generate the initalStats obj with data from Character\r\n    let initialStats = characterBaseStats(character)\r\n    initialStats.characterKey = characterKey\r\n    initialStats.characterLevel = level\r\n    initialStats.characterHP = characterSheet.getBase(\"characterHP\", level, ascension)\r\n    initialStats.characterDEF = characterSheet.getBase(\"characterDEF\", level, ascension)\r\n    initialStats.characterATK = characterSheet.getBase(\"characterATK\", level, ascension)\r\n    initialStats.characterEle = characterSheet.elementKey ?? elementKey ?? \"anemo\";\r\n    initialStats.hitMode = hitMode;\r\n    if (infusionAura)\r\n      initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = Object.fromEntries(Object.entries(talent ?? {}).map(([key, value]) => [key, value - 1])) as any;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = { key: weapon.key, refineIndex: weapon.refinement - 1 }\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n    initialStats.team = team\r\n    initialStats = { ...initialStats, ...overrideStats }\r\n    mergeStats(initialStats, additionalStats)\r\n\r\n    initialStats.partyBuff = {}\r\n    // This stores any party stats from this character.\r\n    initialStats.partyAllModifiers = {}\r\n    initialStats.partyOnlyModifiers = {}\r\n    initialStats.partyActiveModifiers = {}\r\n\r\n    //add specialized stat\r\n    const specialStatKey = characterSheet.getSpecializedStat(ascension)\r\n    if (specialStatKey) {\r\n      const specializedStatVal = characterSheet.getSpecializedStatVal(ascension)\r\n      mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n    }\r\n\r\n    //add stats from weapons\r\n    const weaponATK = weaponSheet.getMainStatValue(weapon.level, weapon.ascension)\r\n    initialStats.weaponATK = weaponATK\r\n    const weaponSubKey = weaponSheet.getSubStatKey()\r\n    if (weaponSubKey) mergeStats(initialStats, { [weaponSubKey]: weaponSheet.getSubStatValue(weapon.level, weapon.ascension) })\r\n    mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n    initialStats.activeCharacter = activeCharacter\r\n\r\n    // Team stuff\r\n    if (activeCharacter) {\r\n      // initiate Team stats.\r\n      initialStats.teamStats = team.map(tCharKey => {\r\n        if (!tCharKey) return null\r\n        const tChar = database._getChar(tCharKey)\r\n        if (!tChar) return null\r\n        // Empty teammate's team in calculation to stop recursion\r\n        const x = tChar.team\r\n        tChar.team = [\"\", \"\", \"\"] // Whatever this is, we're sooooooo not supposed to edit ICharacter objects in-place like this.\r\n        const stats = Character.createInitialStatsWithoutConds(tChar, database, sheets, false)\r\n        tChar.team = x\r\n        return stats\r\n      }) as ICalculatedStats[\"teamStats\"]\r\n\r\n      const allTeam = [characterKey, ...initialStats.team]\r\n      const allTeamStats = [initialStats, ...initialStats.teamStats]\r\n      initialStats.teamStats.forEach((tStats, tindex) => {\r\n        if (!tStats) return\r\n        tStats.team = allTeam.filter((_, i) => i !== (tindex + 1)) as ICalculatedStats[\"team\"]\r\n        tStats.teamStats = allTeamStats.filter((_, i) => i !== (tindex + 1)) as ICalculatedStats[\"teamStats\"]\r\n      });\r\n    }\r\n\r\n    Object.entries(initialStats).forEach(([key, val]) => {\r\n      if (Number.isNaN(val)) debugger\r\n    })\r\n    return initialStats\r\n  }\r\n\r\n  static createInitialStats = (character: ICachedCharacter, database: ArtCharDatabase, sheets: Sheets): ICalculatedStats => {\r\n    //generate the initalStats obj with data from Character\r\n    const initialStats = Character.createInitialStatsWithoutConds(character, database, sheets)\r\n    this.calculateBuildWithConditionalsWithoutArtifacts(initialStats, database, sheets)\r\n\r\n    return initialStats\r\n  }\r\n  static calculateBuildWithConditionalsWithoutArtifacts(initialStats: ICalculatedStats, database: ArtCharDatabase, sheets: Sheets) {\r\n    const { characterKey, characterEle: elementKey, conditionalValues = {} } = initialStats\r\n    // Handle maxStack:0 conditionals. This is mainly skill boosts.\r\n    Object.entries(Conditional.conditionals.character?.[characterKey === \"Traveler\" ? `Traveler_${elementKey}` : characterKey] ?? {}).map(([cKey, conditional]) =>\r\n      !(\"states\" in conditional) && conditional.maxStack === 0 && Conditional.canShow(conditional, initialStats) && mergeCalculatedStats(initialStats, Conditional.resolve(conditional, initialStats).stats))\r\n    // Add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    // Handle conditionals.\r\n    Conditional.parseConditionalValues(conditionalValues, (conditional, conditionalValue, keys) => {\r\n      // Ignore artifact conditionals.\r\n      if (conditional.keys![0] === \"artifact\") return\r\n      if (!Conditional.canShow(conditional, initialStats)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      mergeCalculatedStats(initialStats, condStats)\r\n    })\r\n    // Handle Teammate's conditional\r\n    if (initialStats.activeCharacter) {\r\n      initialStats.teamStats.forEach(tstats => {\r\n        if (!tstats) return\r\n        // Calculate Teammate's build with artifacts, since the manual step of calculating artifacts is skipped in the builder path.\r\n        const tChar = database._getChar(tstats.characterKey)\r\n        if (!tChar) return\r\n        const artifacts = Object.fromEntries(Object.entries(tChar.equippedArtifacts).map(([key, artid]) => [key, database._getArt(artid)]))\r\n        this.calculateBuildWithConditionalsWithoutArtifacts(tstats, database, sheets)\r\n        Character.calculateBuildwithArtifact(tstats, artifacts, sheets.artifactSheets)\r\n      })\r\n    }\r\n    Object.entries(initialStats).forEach(([key, val]) => {\r\n      if (Number.isNaN(val)) debugger\r\n    })\r\n    return initialStats\r\n  }\r\n\r\n  static getDisplayStatKeys = (stats: ICalculatedStats, sheets: Sheets) => {\r\n    const eleKey = stats.characterEle\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`] as StatKey[]\r\n    const characterSheet = sheets.characterSheets[stats.characterKey]\r\n    const weaponSheet = sheets.weaponSheets[stats.weapon.key]\r\n    const isAutoElemental = characterSheet.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = characterSheet.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    const charFormulas = {}\r\n    const talentSheet = characterSheet.getTalent(eleKey)\r\n    const addFormula = (fields: IFieldDisplay[], key: string) => fields.forEach(field => {\r\n      if (!field.formula || !field?.canShow?.(stats)) return\r\n      if (!charFormulas[key]) charFormulas[key] = []\r\n      charFormulas[key].push((field.formula as any).keys)\r\n    })\r\n    const parseSection = (section: DocumentSection, key: string) => {\r\n      //conditional\r\n      if (section.conditional && Conditional.canShow(section.conditional, stats)) {\r\n        const { fields } = Conditional.resolve(section.conditional, stats)\r\n        fields && addFormula(fields, key)\r\n      }\r\n      //fields\r\n      if (section.fields) addFormula(section.fields, key)\r\n    }\r\n    talentSheet && Object.entries(talentSheet.sheets).forEach(([talentKey, { sections }]) =>\r\n      sections.forEach(section => parseSection(section, `talentKey_${talentKey}`)))\r\n\r\n    const formKey = `weapon_${stats.weapon.key}`\r\n    weaponSheet.document && weaponSheet.document.map(section => parseSection(section, formKey))\r\n\r\n    stats.setToSlots && Object.entries(stats.setToSlots).map(([setKey, slots]) => [setKey, slots.length]).forEach(([setKey, num]) => {\r\n      const artifactSheet: ArtifactSheet = sheets.artifactSheets[setKey]\r\n      if (!artifactSheet) return\r\n      Object.entries(artifactSheet.setEffects).forEach(([setNum, { document }]) => {\r\n        if (num < parseInt(setNum)) return\r\n        document && document.map(section => parseSection(section, `artifact_${setKey}_${setNum}`))\r\n      })\r\n    })\r\n    return { basicKeys, ...charFormulas, transReactions }\r\n  }\r\n}","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { characterBaseStats, overrideStatKeys } from \"../Util/StatUtil\";\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | characterReducerResetStatsAction | characterTeamAction | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n  const database = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"editStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey, value } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n\r\n        if (bonusStats[statKey] === value) return\r\n        if (overrideStatKeys.includes(statKey)) {\r\n          if ((characterBaseStats(character)[statKey] ?? 0) === value)\r\n            delete bonusStats[statKey]\r\n          else\r\n            bonusStats[statKey] = value\r\n        } else {\r\n          if (value)\r\n            bonusStats[statKey] = value\r\n          else\r\n            delete bonusStats[statKey]\r\n        }\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { team } = character\r\n\r\n        const { index, charKey: newCharKey } = action\r\n        const oldCharKey = team[index]\r\n        team[index] = newCharKey\r\n\r\n        // move the old char to \"inventory\"\r\n        if (oldCharKey) {\r\n          const oldChar = database._getChar(oldCharKey)\r\n          if (oldChar) database.updateChar({ ...oldChar, team: [\"\", \"\", \"\"] })\r\n        }\r\n\r\n        // unequip new char from its old teammates\r\n        if (newCharKey) {\r\n          const newChar = database._getChar(newCharKey)\r\n          if (newChar) {\r\n            newChar.team.forEach(t => {\r\n              if (!t) return\r\n              const tChar = database._getChar(t)\r\n              tChar && database.updateChar({ ...tChar, team: tChar.team.map(c => c === newCharKey ? \"\" : c) as ICachedCharacter[\"team\"] })\r\n            })\r\n          }\r\n        }\r\n\r\n        // equip new char to new teammates\r\n        team.forEach((t, tind) => {\r\n          if (!t) return\r\n          const newChar = database._getChar(t)\r\n          if (newChar) database.updateChar({ ...newChar, team: [characterKey, ...team].filter((_, i) => i !== tind + 1) as ICachedCharacter[\"team\"] })\r\n        })\r\n\r\n        // update src character\r\n        database.updateChar({ ...character, team })\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\r\n  }, [characterKey, database])\r\n\r\n}","import { Button, ButtonProps, InputBase, InputProps, styled } from '@mui/material'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\ntype props = Omit<InputProps, \"onChange\"> & {\r\n  value?: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  allowEmpty?: boolean,\r\n}\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  transition: \"all 0.5s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-focused\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}))\r\n\r\nconst Wrapper = styled(Button)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  padding: 0,\r\n  overflow: \"hidden\",\r\n  \"div\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n}))\r\n\r\n// wrap the Input with this when using the input in a buttongroup\r\nexport function CustomNumberInputButtonGroupWrapper({ children, disableRipple, disableFocusRipple, disableTouchRipple, ...props }: ButtonProps) {\r\n  return <Wrapper disableRipple disableFocusRipple disableTouchRipple {...props}>{children}</Wrapper>\r\n}\r\n\r\nexport default function CustomNumberInput({ value = 0, onChange, disabled = false, float = false, ...props }: props) {\r\n  const [number, setNumber] = useState(value)\r\n  const [focused, setFocus] = useState(false)\r\n  const parseFunc = useMemo(() => float ? parseFloat : parseInt, [float],)\r\n  const onBlur = useCallback(\r\n    () => {\r\n      onChange(number)\r\n      setFocus(false)\r\n    },\r\n    [onChange, number, setFocus],\r\n  )\r\n  const onFocus = useCallback(\r\n    () => {\r\n      setFocus(true)\r\n    },\r\n    [setFocus],\r\n  )\r\n  useEffect(() => setNumber(value), [value, setNumber]) // update value on value change\r\n  const onInputChange = useCallback(e => setNumber(parseFunc(e.target.value) || 0), [setNumber, parseFunc],)\r\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && onBlur(), [onBlur],)\r\n  return <StyledInputBase\r\n    value={(focused && !number) ? \"\" : number}\r\n    aria-label=\"custom-input\"\r\n    type=\"number\"\r\n    onChange={onInputChange}\r\n    onBlur={onBlur}\r\n    onFocus={onFocus}\r\n    disabled={disabled}\r\n    onKeyDown={onKeyDOwn}\r\n    {...props}\r\n  />\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, List, ListItem, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { buildContext } from \"../Build/Build\";\r\nimport Character from \"../Character/Character\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\nimport ColorText from \"./ColoredText\";\r\n\r\nexport default function FieldDisplay({ field }: { field: IFieldDisplay }) {\r\n  const { newBuild, equippedBuild, compareBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild)\r\n  const canShow = useMemo(() => build ? field?.canShow?.(build) : false, [field, build])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", build)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      //compareAgainstEquipped\r\n      if (compareBuild && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</ColorText> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareBuild, fixedVal, equippedBuild, field, build])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", build), [field, build])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", build), [field, build])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build)\r\n    return fieldFormulaText ? <BootstrapTooltip placement=\"top\" title={<Typography>{fieldFormulaText}</Typography>}>\r\n      <Box component=\"span\" sx={{ cursor: \"help\", ml: 1 }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n    </BootstrapTooltip> : null\r\n  }, [field, build])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", build), [field, build])\r\n\r\n  if (!canShow) return null\r\n  return <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}  >\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <Typography color={`${fieldVariant}.main`}>{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</Typography>\r\n  </ListItem>\r\n}\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n}));\r\nexport default BootstrapTooltip","import { Box } from \"@mui/material\"\r\nimport { useCallback, useContext } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\"\r\nimport { DocumentSection } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport ConditionalDisplay from \"./ConditionalDisplay\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype SkillDisplayCardProps = {\r\n  sections: DocumentSection[],\r\n  characterKey: CharacterKey,\r\n  skipConditionalEquipmentCheck?: boolean\r\n}\r\nexport default function DocumentDisplay({ sections, characterKey, skipConditionalEquipmentCheck }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild) as ICalculatedStats\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const onCVChange = useCallback(\r\n    v => characterDispatch({ conditionalValues: v }), [characterDispatch])\r\n  if (!build) return null\r\n\r\n  const sectionsDisplay = sections?.map((section, i) => {\r\n    if (!section.canShow!(build)) return null\r\n    const talentText = evalIfFunc(section.text, build)\r\n    const fields = section.fields ?? []\r\n    const canShowConditional = section.conditional && section.conditional.partyBuff !== \"partyOnly\" && Conditional.canShow(section.conditional, build, skipConditionalEquipmentCheck)\r\n    if (!talentText && !fields.length && !canShowConditional) return null\r\n    return <Box key={\"section\" + i} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n      {talentText && <div>{talentText}</div>}\r\n      {fields.length > 0 && <FieldDisplayList>\r\n        {fields?.map?.((field, i) => <FieldDisplay key={i} field={field} />)}\r\n      </FieldDisplayList>}\r\n      {!!section.conditional && canShowConditional && <ConditionalDisplay conditional={section.conditional} stats={build} onChange={onCVChange} hideDesc skipConditionalEquipmentCheck={skipConditionalEquipmentCheck} />}\r\n    </Box>\r\n  }).filter(s => s)\r\n  if (!sectionsDisplay.length) return null\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionsDisplay}</Box>\r\n}\r\n","import Formula from \"./Formula\"\r\nimport { Formulas, StatData } from \"./StatData\"\r\nimport { GetDependencies } from \"./StatDependency\"\r\nimport { ICalculatedStats, Modifier } from \"./Types/stats\"\r\nimport { mergeCalculatedStats, mergeModifiers, mergeStats } from \"./Util/StatUtil\"\r\n\r\nexport default function finalStatProcess(stats): ICalculatedStats {\r\n  let dependencies = GetDependencies(stats, stats?.modifiers)\r\n  const { initialStats: preprocessedStats, formula } = PreprocessFormulas(dependencies, stats)\r\n  formula(preprocessedStats)\r\n  return { ...stats, ...preprocessedStats }\r\n}\r\n\r\nfunction addPreModValues(stats: ICalculatedStats, mod: Modifier) {\r\n  if (!mod || !stats) return\r\n  Object.keys(mod).forEach(k => {\r\n    if (!stats.premod) stats.premod = {}\r\n    stats.premod[k] = stats?.premod?.[k] ?? stats[k]\r\n  })\r\n}\r\n\r\nfunction modStatsFormula(stats: ICalculatedStats, mods: Modifier, targets: (s: ICalculatedStats) => (ICalculatedStats | null)[], context: \"partyAll\" | \"partyOnly\" | \"partyActive\") {\r\n  if (!mods || !Object.keys(mods).length) return () => null\r\n  const modStatsFunc = Formula.computeModifier(stats, mods)\r\n  return (s: ICalculatedStats) => {\r\n    const modStats = modStatsFunc(s);\r\n    // Use mergeCalculatedStats here to allow the application to s.partyBuff\r\n    mergeCalculatedStats(s, { [context]: modStats })\r\n    targets(s).forEach(b => {\r\n      if (!b) return\r\n      addPreModValues(b, mods)\r\n    })\r\n  }\r\n}\r\nfunction relevantMod(dependencyKeys: string[], modifiers: Modifier) {\r\n  return Object.fromEntries(Object.entries(modifiers)\r\n    .filter(([key]) => dependencyKeys.includes(key)) // Keep only relevant keys\r\n  )\r\n}\r\ntype KeyedFormula = [string, (s: ICalculatedStats) => number]\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nexport function PreprocessFormulas(dependencyKeys: string[], stats: ICalculatedStats) {\r\n  const { modifiers = {} } = stats, initialStats = {} as ICalculatedStats\r\n  const premodFormulaList: KeyedFormula[] = [], postmodFormulaList: KeyedFormula[] = []\r\n  for (const key of dependencyKeys) {\r\n    switch (getStage(key)) {\r\n      case 0: initialStats[key] = stats[key] ?? StatData[key]?.default ?? 0; break // Stat\r\n      case 1: initialStats[key] = Formulas[key]!(initialStats); break // Const Formula\r\n      case 2: premodFormulaList.push([key, Formulas[key]!]); break // Premod\r\n      case 3:  // Premod + Postmod\r\n        premodFormulaList.push([key, Formulas[key]!])\r\n        postmodFormulaList.push([key, Formulas[key]!])\r\n        break\r\n      case 4: postmodFormulaList.push([key, Formulas[key]!]); break // Postmod\r\n    }\r\n  }\r\n\r\n  initialStats.activeCharacter = stats.activeCharacter\r\n  initialStats.partyBuff = stats.partyBuff\r\n\r\n  let processTeam = (s: ICalculatedStats) => { }\r\n  if (stats.activeCharacter) {\r\n    const beforePreprocess = [...stats.teamStats]\r\n    const preprocessed: [ICalculatedStats | null, undefined | ((s: ICalculatedStats) => void)][] = stats.teamStats.map(t => {\r\n      if (!t) return [null, undefined]\r\n      const tPartyModifiers = {} as Modifier\r\n      mergeModifiers(tPartyModifiers, t.partyAllModifiers)\r\n      mergeModifiers(tPartyModifiers, t.partyOnlyModifiers)\r\n      mergeModifiers(tPartyModifiers, t.partyActiveModifiers)\r\n      const tprocessKeys = GetDependencies(stats, tPartyModifiers, dependencyKeys)\r\n      const { initialStats: tStats, formula: tFormula } = PreprocessFormulas(tprocessKeys, t)\r\n      return [tStats, tFormula]\r\n    })\r\n    initialStats.teamStats = preprocessed.map(([stats]) => stats) as ICalculatedStats['teamStats']\r\n    const team = [initialStats, ...initialStats.teamStats]\r\n    initialStats.teamStats.forEach((t, i) => {\r\n      if (!t) return\r\n      t.teamStats = team.filter((_, index) => index !== i + 1) as ICalculatedStats['teamStats']\r\n    })\r\n    const teamFormula = preprocessed.map(([_, formula]) => formula)\r\n    processTeam = (s: ICalculatedStats) => {\r\n      s.teamStats = s.teamStats.map((t, i) => {\r\n        if (!t) return t\r\n        teamFormula[i]!(t)\r\n        return { ...beforePreprocess[i]!, ...t }\r\n      }) as ICalculatedStats['teamStats']\r\n    }\r\n  }\r\n\r\n  const modFormula = Formula.computeModifier(stats, relevantMod(dependencyKeys, modifiers))\r\n  const partyAllFormula = modStatsFormula(stats, relevantMod(dependencyKeys, stats.partyAllModifiers), (s) => [s, ...s.teamStats], \"partyAll\")\r\n  const partyOnlyFormula = modStatsFormula(stats, relevantMod(dependencyKeys, stats.partyOnlyModifiers), (s) => s.teamStats, \"partyOnly\")\r\n  const partyActiveFormula = modStatsFormula(stats, relevantMod(dependencyKeys, stats.partyActiveModifiers), (s) => [s], \"partyActive\")\r\n\r\n  return {\r\n    initialStats: initialStats as ICalculatedStats,\r\n    formula: (s: ICalculatedStats) => {\r\n      premodFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n\r\n      const modStats = Formula.computeModifier(s, s.modifiers)(s) // late-binding modifiers (arts mod)\r\n      mergeStats(modStats, modFormula(s))\r\n      modifiers && addPreModValues(s, modifiers)\r\n      s.modifiers && addPreModValues(s, s.modifiers)\r\n\r\n      // Calculate & apply modStats.\r\n      partyAllFormula(s)\r\n      partyOnlyFormula(s)\r\n      partyActiveFormula(s)\r\n\r\n      processTeam(s)\r\n\r\n      // Apply modifiers\r\n      mergeCalculatedStats(s, modStats)\r\n      mergeStats(s, { modifiers })\r\n\r\n      postmodFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n    }\r\n  }\r\n}\r\nexport const numStages = 5\r\nexport function getStage(key: string): number {\r\n  if (!(key in Formulas)) return 0 // Stat\r\n  if (StatData[key]?.const) return 1 // Const\r\n  // Premod (doesn't exist right now)\r\n  if (key === \"finalATK\" || key === \"finalDEF\" || key === \"finalHP\") return 3 // Premod + Postmod\r\n  return 4 // Postmod\r\n}","import Formula from \"./Formula\"\r\nimport { getStage, numStages } from \"./ProcessFormula\"\r\nimport { Formulas, StatData } from \"./StatData\"\r\nimport { IBaseStat } from \"./Types/character\"\r\nimport { Modifier } from \"./Types/stats\"\r\n\r\n// Generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula: (s) => number) {\r\n  const dependency: Set<string> = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop.toString()) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.entries(Formulas).map(([key, value]) => [key, GetFormulaDependency(value)])\r\n)) as Dict<string, string[]>\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(baseStat: IBaseStat, modifiers: Modifier = {}, keys = Object.keys(StatData)): Dependencies {\r\n  const found = new Set<string>()\r\n  const dependencies = [...Array(numStages)].map(_ => new Set<string>())\r\n  keys.forEach(key => InsertDependencies(baseStat, key, modifiers, dependencies, found))\r\n  return dependencies.flatMap(dep => [...dep])\r\n}\r\nfunction InsertDependencies(baseStat: IBaseStat, key: string, modifiers: Modifier, dependencies: Set<string>[], found: Set<string>) {\r\n  if (found.has(key)) return\r\n  found.add(key)\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(baseStat, k, modifiers, dependencies, found));\r\n  (modifiers[key] ?? []).forEach(path => Formula.getCurrent(path, baseStat)[1].forEach(k =>\r\n    InsertDependencies(baseStat, k, modifiers, dependencies, found)))\r\n  dependencies[getStage(key)].add(key)\r\n}\r\n\r\ntype Dependencies = string[]\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, Divider, MenuItem, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled = false, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name?: Displayable, disabled?: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</SqBadge>\r\n    return <DropdownButton fullWidth size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n      <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n        <span>Not Active</span>\r\n      </MenuItem>\r\n      <Divider />\r\n      {Object.entries(conditional.states).flatMap(([stateKey, condial]: any, i) =>\r\n        [...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n          <MenuItem key={stateKey + i} onClick={() => setConditional([stack, stateKey])} selected={conditionalStateKey === stateKey && conditionalNum === stack} disabled={conditionalStateKey === stateKey && conditionalNum === stack} >\r\n            {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n          </MenuItem>)\r\n      )}\r\n    </DropdownButton>\r\n  } else {// Simple conditional\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack === 0) {// Auto resolving conditional\r\n      return name ? <Typography>{name}</Typography> : null\r\n    } else if (maxStack === 1) {// Single boolean conditional\r\n      return <Button fullWidth size=\"small\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled} startIcon={conditionalNum ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n        {name}\r\n      </Button>\r\n    } else if (maxStack > 1) {\r\n      // Stacking conditional\r\n      const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</SqBadge>\r\n      return <DropdownButton fullWidth size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n        <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n          <span>Not Active</span>\r\n        </MenuItem>\r\n        <Divider />\r\n        {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <MenuItem key={stack} onClick={() => setConditional([stack])} selected={conditionalNum === stack} disabled={conditionalNum === stack}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </MenuItem>)}\r\n      </DropdownButton>\r\n    }\r\n  }\r\n  return null\r\n}","import { CardContent, Box, CardHeader, Divider } from \"@mui/material\"\r\nimport { useCallback, useMemo } from \"react\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\r\nimport IConditional, { IConditionalValue, IConditionalValues } from \"../Types/IConditional\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nimport { deletePropPath, evalIfFunc, layeredAssignment, objClearEmpties } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  stats: ICalculatedStats,\r\n  hideHeader?: boolean,\r\n  hideDesc?: boolean,\r\n  onChange: (value: IConditionalValues<IConditionalValue>) => void\r\n  skipConditionalEquipmentCheck?: boolean\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, stats, hideHeader = false, hideDesc = false, onChange, skipConditionalEquipmentCheck = false }: ConditionalDisplayProps) {\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats, skipConditionalEquipmentCheck), [conditional, stats, skipConditionalEquipmentCheck])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow ? Conditional.resolve(conditional, stats) : { stats: {}, fields: [], conditionalValue: [0] as IConditionalValue }, [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow ? [...statsToFields(conditionalStats, stats), ...conditionalFields] : [], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else if (conditional.keys)\r\n      layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    onChange(stats.conditionalValues)\r\n  }, [conditional, stats, onChange])\r\n\r\n  const description = !hideDesc && conditional.description && evalIfFunc(conditional.description, stats)\r\n\r\n  if (!canShow || !stats) return null\r\n  return <CardDark>\r\n    {!hideHeader && conditional.header && <CardHeader avatar={conditional.header.icon && evalIfFunc(conditional.header.icon, stats)} title={conditional.header.title} action={conditional.header.action} titleTypographyProps={{ variant: \"subtitle2\" }} />}\r\n    {!hideHeader && conditional.header && <Divider />}\r\n    {!!conditional.name && <CardContent>\r\n      {description && <Box mb={1}>{description}</Box>}\r\n      <ConditionalSelector\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </CardContent>}\r\n    <FieldDisplayList sx={{ m: 0 }}>\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { CardContent, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../Components/FieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nexport default function WeaponStatsCard({ title, statsVals = {}, stats }: { title: Displayable, statsVals?: object, stats: ICalculatedStats }) {\r\n  if ((Object.keys(statsVals) as string[]).filter(s => s !== \"modifiers\").length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <CardDark >\r\n    <CardContent>\r\n      <Typography>{title}</Typography>\r\n    </CardContent>\r\n    <FieldDisplayList>\r\n      {fields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ColorText from \"../Components/ColoredText\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/LevelData\"\r\nimport { database as localDatabase, DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\nimport WeaponStatsCard from \"./WeaponStatsCard\"\r\n\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  charData?: {\r\n    character: ICachedCharacter,\r\n    characterSheet: CharacterSheet,\r\n    equippedBuild?: ICalculatedStats\r\n    newBuild?: ICalculatedStats\r\n    characterDispatch: (any) => void\r\n  }\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  charData,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n\r\n  const buildContextObj = useContext(buildContext)\r\n  const weapon = useWeapon(propWeaponId)\r\n  const { key = \"\", level, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\r\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const build = { ...(charData ? (charData.newBuild ?? charData.equippedBuild) : { weapon: { refineIndex: refinement - 1, level, ascension } }) } as any\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container spacing={1}>\r\n            <Grid item >\r\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n              <ButtonGroup>\r\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n                <DropdownButton title={`Refinement ${refinement}`}>\r\n                  <MenuItem>Select Weapon Refinement</MenuItem>\r\n                  <Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </MenuItem>)}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item >\r\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n                <CustomNumberInputButtonGroupWrapper >\r\n                  <CustomNumberInput onChange={setLevel} value={level}\r\n                    startAdornment=\"Lvl. \"\r\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                  />\r\n                </CustomNumberInputButtonGroupWrapper>\r\n                <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n                <DropdownButton title={\"Select Level\"} >\r\n                  {milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    const selected = lv === level && as === ascension\r\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                  })}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n                {lock ? \"Locked\" : \"Unlocked\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!!onClose && <Grid item  >\r\n          <CloseButton onClick={onClose} />\r\n        </Grid>}\r\n        {!!charData && database === localDatabase && <Grid item >\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, charData.character.key)} />\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      {(() => {\r\n        if (!weaponSheet) return null\r\n        const substatKey = weaponSheet.getSubStatKey()\r\n        const weaponDisplayMainVal = weaponSheet.getMainStatValue(level, ascension)\r\n        const weaponDisplaySubVal = weaponSheet.getSubStatValue(level, ascension)\r\n        const weaponPassiveName = weaponSheet.passiveName\r\n        const weaponBonusStats = weaponSheet.stats(build)\r\n        const sections = weaponSheet.document\r\n        return <Box display=\"flex\" gap={{ xs: 1, md: 1.5, lg: 2 }} >\r\n          <Box sx={{ maxWidth: 256 }} flexShrink={1} minWidth=\"25%\">\r\n            <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            <Typography><small>{weaponSheet.description}</small></Typography>\r\n          </Box>\r\n          <Box sx={{ mb: -1 }} flexGrow={1} >\r\n            <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {weapon && WeaponSheet.getLevelString(weapon)} {weaponPassiveName && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\r\n            <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n            <Typography variant=\"subtitle1\">{weaponPassiveName}</Typography>\r\n            <Typography gutterBottom>{weaponPassiveName && weaponSheet.passiveDescription(build)}</Typography>\r\n            {build && <buildContext.Provider value={charData ? buildContextObj : { equippedBuild: build, newBuild: undefined, compareBuild: false, setCompareBuild: undefined }}>\r\n              <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n                <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: substatKey ? weaponDisplaySubVal : undefined }} stats={build} />\r\n                <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n              </Box>\r\n            </buildContext.Provider>}\r\n            {charData && sections ? (() => {\r\n              const { equippedBuild, newBuild } = charData\r\n              const characterKey = (newBuild ? newBuild : equippedBuild)?.characterKey as CharacterKey | undefined\r\n              return !!characterKey && < DocumentDisplay sections={sections} characterKey={characterKey} />\r\n            })() : null}\r\n          </Box>\r\n        </Box>\r\n      })()}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemUtilityClass(slot) {\n  return generateUtilityClass('MuiListItem', slot);\n}\nconst listItemClasses = generateUtilityClasses('MuiListItem', ['root', 'container', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'padding', 'button', 'secondaryAction', 'selected']);\nexport default listItemClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemSecondaryActionClassesUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemSecondaryAction', slot);\n}\nconst listItemSecondaryActionClasses = generateUtilityClasses('MuiListItemSecondaryAction', ['root', 'disableGutters']);\nexport default listItemSecondaryActionClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport { getListItemSecondaryActionClassesUtilityClass } from './listItemSecondaryActionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disableGutters,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getListItemSecondaryActionClassesUtilityClass, classes);\n};\n\nconst ListItemSecondaryActionRoot = styled('div', {\n  name: 'MuiListItemSecondaryAction',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  right: 16,\n  top: '50%',\n  transform: 'translateY(-50%)'\n}, ownerState.disableGutters && {\n  right: 0\n}));\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nconst ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemSecondaryAction'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    disableGutters: context.disableGutters\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemSecondaryActionRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default ListItemSecondaryAction;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"],\n      _excluded2 = [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"disablePadding\", \"divider\", \"focusVisibleClassName\", \"secondaryAction\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport { chainPropTypes, elementTypeAcceptingRef } from '@mui/utils';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemClasses, { getListItemUtilityClass } from './listItemClasses';\nimport { listItemButtonClasses } from '../ListItemButton';\nimport ListItemSecondaryAction from '../ListItemSecondaryAction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters, !ownerState.disablePadding && styles.padding, ownerState.button && styles.button, ownerState.hasSecondaryAction && styles.secondaryAction];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    button,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', !disablePadding && 'padding', divider && 'divider', disabled && 'disabled', button && 'button', alignItems === 'flex-start' && 'alignItemsFlexStart', hasSecondaryAction && 'secondaryAction', selected && 'selected'],\n    container: ['container']\n  };\n  return composeClasses(slots, getListItemUtilityClass, classes);\n};\n\nexport const ListItemRoot = styled('div', {\n  name: 'MuiListItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  width: '100%',\n  boxSizing: 'border-box',\n  textAlign: 'left'\n}, !ownerState.disablePadding && _extends({\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, !!ownerState.secondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}), !!ownerState.secondaryAction && {\n  [`& > .${listItemButtonClasses.root}`]: {\n    paddingRight: 48\n  }\n}, {\n  [`&.${listItemClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${listItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity\n  }\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, ownerState.divider && {\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.button && {\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemClasses.selected}:hover`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  }\n}, ownerState.hasSecondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}));\nconst ListItemContainer = styled('li', {\n  name: 'MuiListItem',\n  slot: 'Container',\n  overridesResolver: (props, styles) => styles.container\n})({\n  position: 'relative'\n});\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItem'\n  });\n\n  const {\n    alignItems = 'center',\n    autoFocus = false,\n    button = false,\n    children: childrenProp,\n    className,\n    component: componentProp,\n    components = {},\n    componentsProps = {},\n    ContainerComponent = 'li',\n    ContainerProps: {\n      className: ContainerClassName\n    } = {},\n    dense = false,\n    disabled = false,\n    disableGutters = false,\n    disablePadding = false,\n    divider = false,\n    focusVisibleClassName,\n    secondaryAction,\n    selected = false\n  } = props,\n        ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  };\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp); // v4 implementation, deprecated in v5, will be removed in v6\n\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n\n  const ownerState = _extends({}, props, {\n    alignItems,\n    autoFocus,\n    button,\n    dense: childContext.dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  const Root = components.Root || ListItemRoot;\n  const rootProps = componentsProps.root || {};\n\n  const componentProps = _extends({\n    className: clsx(classes.root, rootProps.className, className),\n    disabled\n  }, other);\n\n  let Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(listItemClasses.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  } // v4 implementation, deprecated in v5, will be removed in v6\n\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: childContext,\n      children: /*#__PURE__*/_jsxs(ListItemContainer, _extends({\n        as: ContainerComponent,\n        className: clsx(classes.container, ContainerClassName),\n        ref: handleRef,\n        ownerState: ownerState\n      }, ContainerProps, {\n        children: [/*#__PURE__*/_jsx(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n          as: Component,\n          ownerState: _extends({}, ownerState, rootProps.ownerState)\n        }, componentProps, {\n          children: children\n        })), children.pop()]\n      }))\n    });\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      as: Component,\n      ref: handleRef,\n      ownerState: ownerState\n    }, !isHostComponent(Root) && {\n      ownerState: _extends({}, ownerState, rootProps.ownerState)\n    }, componentProps, {\n      children: [children, secondaryAction && /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n        children: secondaryAction\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item is a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    let secondaryActionIndex = -1;\n\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('MUI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the InputBase.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   * @default 'li'\n   * @deprecated\n   */\n  ContainerComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to the container component if used.\n   * @default {}\n   * @deprecated\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, all padding is removed.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The element to display at the end of ListItem.\n   */\n  secondaryAction: PropTypes.node,\n\n  /**\n   * Use to apply selected styling.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItem;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.99 11 3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\"\n}), 'SwapHoriz');"],"sourceRoot":""}