{"version":3,"sources":["Data/Weapons/Claymore/BlackcliffSlasher/Weapon_Blackcliff_Slasher.png","Data/Weapons/Claymore/BlackcliffSlasher/index.tsx","Data/Weapons/Claymore/BloodtaintedGreatsword/Weapon_Bloodtainted_Greatsword.png","Data/Weapons/Claymore/BloodtaintedGreatsword/index.tsx","Data/Weapons/Claymore/DebateClub/Weapon_Debate_Club.png","Data/Weapons/Claymore/DebateClub/index.tsx","Data/Weapons/Claymore/FavoniusGreatsword/Weapon_Favonius_Greatsword.png","Data/Weapons/Claymore/FavoniusGreatsword/index.tsx","Data/Weapons/Claymore/FerrousShadow/Weapon_Ferrous_Shadow.png","Data/Weapons/Claymore/FerrousShadow/index.tsx","Data/Weapons/Claymore/KatsuragikiriNagamasa/Weapon_Katsuragikiri_Nagamasa.png","Data/Weapons/Claymore/KatsuragikiriNagamasa/index.tsx","Data/Weapons/Claymore/LithicBlade/Weapon_Lithic_Blade.png","Data/Weapons/Claymore/LithicBlade/index.tsx","Data/Weapons/Claymore/OldMercsPal/Weapon_Old_Merc's_Pal.png","Data/Weapons/Claymore/OldMercsPal/index.tsx","Data/Weapons/Claymore/PrototypeAminus/Weapon_Prototype_Aminus.png","Data/Weapons/Claymore/PrototypeAminus/index.tsx","Data/Weapons/Claymore/Quartz/Weapon_Quartz.png","Data/Weapons/Claymore/Quartz/index.tsx","Data/Weapons/Claymore/Rainslasher/Weapon_Rainslasher.png","Data/Weapons/Claymore/Rainslasher/index.tsx","Data/Weapons/Claymore/RoyalGreatsword/Weapon_Royal_Greatsword.png","Data/Weapons/Claymore/RoyalGreatsword/index.tsx","Data/Weapons/Claymore/SacrificialGreatsword/Weapon_Sacrificial_Greatsword.png","Data/Weapons/Claymore/SacrificialGreatsword/index.tsx","Data/Weapons/Claymore/SerpentSpine/Weapon_Serpent_Spine.png","Data/Weapons/Claymore/SerpentSpine/index.tsx","Data/Weapons/Claymore/SkyriderGreatsword/Weapon_Skyrider_Greatsword.png","Data/Weapons/Claymore/SkyriderGreatsword/index.tsx","Data/Weapons/Claymore/SkywardPride/Weapon_Skyward_Pride.png","Data/Weapons/Claymore/SkywardPride/index.tsx","Data/Weapons/Claymore/SnowTombedStarsilver/Weapon_Snow-Tombed_Starsilver.png","Data/Weapons/Claymore/SnowTombedStarsilver/index.tsx","Data/Weapons/Claymore/SongOfBrokenPines/Weapon_Song_of_Broken_Pines.png","Data/Weapons/Claymore/SongOfBrokenPines/index.tsx","Data/Weapons/Claymore/TheBell/Weapon_The_Bell.png","Data/Weapons/Claymore/TheBell/index.tsx","Data/Weapons/Claymore/TheUnforged/Weapon_The_Unforged.png","Data/Weapons/Claymore/TheUnforged/index.tsx","Data/Weapons/Claymore/WasterGreatsword/Weapon_Waster_Greatsword.png","Data/Weapons/Claymore/WasterGreatsword/index.tsx","Data/Weapons/Claymore/Whiteblind/Weapon_Whiteblind.png","Data/Weapons/Claymore/Whiteblind/index.tsx","Data/Weapons/Claymore/WhiteIronGreatsword/Weapon_White_Iron_Greatsword.png","Data/Weapons/Claymore/WhiteIronGreatsword/index.tsx","Data/Weapons/Claymore/WolfsGravestone/Weapon_Wolf's_Gravestone.png","Data/Weapons/Claymore/WolfsGravestone/index.tsx","Data/Weapons/Claymore/index.ts","Data/Weapons/Sword/AmenomaKageuchi/Weapon_Amenoma_Kageuchi.png","Data/Weapons/Sword/AmenomaKageuchi/index.tsx","Data/Weapons/Sword/AquilaFavonia/Weapon_Aquila_Favonia.png","Data/Weapons/Sword/AquilaFavonia/index.tsx","Data/Weapons/Sword/BlackcliffLongsword/Weapon_Blackcliff_Longsword.png","Data/Weapons/Sword/BlackcliffLongsword/index.tsx","Data/Weapons/Sword/CoolSteel/Weapon_Cool_Steel.png","Data/Weapons/Sword/CoolSteel/index.tsx","Data/Weapons/Sword/DarkIronSword/Weapon_Dark_Iron_Sword.png","Data/Weapons/Sword/DarkIronSword/index.tsx","Data/Weapons/Sword/DullBlade/Weapon_Dull_Blade.png","Data/Weapons/Sword/DullBlade/index.tsx","Data/Weapons/Sword/FavoniusSword/Weapon_Favonius_Sword.png","Data/Weapons/Sword/FavoniusSword/index.tsx","Data/Weapons/Sword/FesteringDesire/Weapon_Festering_Desire.png","Data/Weapons/Sword/FesteringDesire/index.tsx","Data/Weapons/Sword/FilletBlade/Weapon_Fillet_Blade.png","Data/Weapons/Sword/FilletBlade/index.tsx","Data/Weapons/Sword/FreedomSworn/Weapon_Freedom-Sworn.png","Data/Weapons/Sword/FreedomSworn/index.tsx","Data/Weapons/Sword/HarbingerOfDawn/Weapon_Harbinger_of_Dawn.png","Data/Weapons/Sword/HarbingerOfDawn/index.tsx","Data/Weapons/Sword/IronSting/Weapon_Iron_Sting.png","Data/Weapons/Sword/IronSting/index.tsx","Data/Weapons/Sword/LionsRoar/Weapon_Lion's_Roar.png","Data/Weapons/Sword/LionsRoar/index.tsx","Data/Weapons/Sword/MistsplitterReforged/Weapon_Mistsplitter_Reforged.png","Data/Weapons/Sword/MistsplitterReforged/index.tsx","Data/Weapons/Sword/PrimordialJadeCutter/Weapon_Primordial_Jade_Cutter.png","Data/Weapons/Sword/PrimordialJadeCutter/index.tsx","Data/Weapons/Sword/PrototypeRancour/Weapon_Prototype_Rancour.png","Data/Weapons/Sword/PrototypeRancour/index.tsx","Data/Weapons/Sword/RoyalLongsword/Weapon_Royal_Longsword.png","Data/Weapons/Sword/RoyalLongsword/index.tsx","Data/Weapons/Sword/SacrificialSword/Weapon_Sacrificial_Sword.png","Data/Weapons/Sword/SacrificialSword/index.tsx","Data/Weapons/Sword/SilverSword/Weapon_Silver_Sword.png","Data/Weapons/Sword/SilverSword/index.tsx","Data/Weapons/Sword/SkyriderSword/Weapon_Skyrider_Sword.png","Data/Weapons/Sword/SkyriderSword/index.tsx","Data/Weapons/Sword/SkywardBlade/Weapon_Skyward_Blade.png","Data/Weapons/Sword/SkywardBlade/index.tsx","Data/Weapons/Sword/SummitShaper/Weapon_Summit_Shaper.png","Data/Weapons/Sword/SummitShaper/index.tsx","Data/Weapons/Sword/SwordOfDescension/Weapon_Sword_of_Descension.png","Data/Weapons/Sword/SwordOfDescension/index.tsx","Data/Weapons/Sword/TheAlleyFlash/Weapon_The_Alley_Flash.png","Data/Weapons/Sword/TheAlleyFlash/index.tsx","Data/Weapons/Sword/TheBlackSword/Weapon_The_Black_Sword.png","Data/Weapons/Sword/TheBlackSword/index.tsx","Data/Weapons/Sword/TheFlute/Weapon_The_Flute.png","Data/Weapons/Sword/TheFlute/index.tsx","Data/Weapons/Sword/TravelersHandySword/Weapon_Traveler's_Handy_Sword.png","Data/Weapons/Sword/TravelersHandySword/index.tsx","Data/Weapons/Sword/index.ts","Data/Weapons/Polearm/BeginnersProtector/Weapon_Beginner's_Protector.png","Data/Weapons/Polearm/BeginnersProtector/index.tsx","Data/Weapons/Polearm/BlackcliffPole/Weapon_Blackcliff_Pole.png","Data/Weapons/Polearm/BlackcliffPole/index.tsx","Data/Weapons/Polearm/BlackTassel/Weapon_Black_Tassel.png","Data/Weapons/Polearm/BlackTassel/index.tsx","Data/Weapons/Polearm/CrescentPike/Weapon_Crescent_Pike.png","Data/Weapons/Polearm/CrescentPike/index.tsx","Data/Weapons/Polearm/Deathmatch/Weapon_Deathmatch.png","Data/Weapons/Polearm/Deathmatch/index.tsx","Data/Weapons/Polearm/DragonsBane/Weapon_Dragon's_Bane.png","Data/Weapons/Polearm/DragonsBane/index.tsx","Data/Weapons/Polearm/DragonspineSpear/Weapon_Dragonspine_Spear.png","Data/Weapons/Polearm/DragonspineSpear/index.tsx","Data/Weapons/Polearm/FavoniusLance/Weapon_Favonius_Lance.png","Data/Weapons/Polearm/FavoniusLance/index.tsx","Data/Weapons/Polearm/Halberd/Weapon_Halberd.png","Data/Weapons/Polearm/Halberd/index.tsx","Data/Weapons/Polearm/IronPoint/Weapon_Iron_Point.png","Data/Weapons/Polearm/IronPoint/index.tsx","Data/Weapons/Polearm/KitainCrossSpear/Weapon_Kitain_Cross_Spear.png","Data/Weapons/Polearm/KitainCrossSpear/index.tsx","Data/Weapons/Polearm/LithicSpear/Weapon_Lithic_Spear.png","Data/Weapons/Polearm/LithicSpear/index.tsx","Data/Weapons/Polearm/PrimordialJadeWingedSpear/Weapon_Primordial_Jade_Winged-Spear.png","Data/Weapons/Polearm/PrimordialJadeWingedSpear/index.tsx","Data/Weapons/Polearm/PrototypeGrudge/Weapon_Prototype_Grudge.png","Data/Weapons/Polearm/PrototypeGrudge/index.tsx","Data/Weapons/Polearm/RoyalSpear/Weapon_Royal_Spear.png","Data/Weapons/Polearm/RoyalSpear/index.tsx","Data/Weapons/Polearm/SkywardSpine/Weapon_Skyward_Spine.png","Data/Weapons/Polearm/SkywardSpine/index.tsx","Data/Weapons/Polearm/StaffOfHoma/Weapon_Staff_of_Homa.png","Data/Weapons/Polearm/StaffOfHoma/index.tsx","Data/Weapons/Polearm/VortexVanquisher/Weapon_Vortex_Vanquisher.png","Data/Weapons/Polearm/VortexVanquisher/index.tsx","Data/Weapons/Polearm/WhiteTassel/Weapon_White_Tassel.png","Data/Weapons/Polearm/WhiteTassel/index.tsx","Data/Weapons/Polearm/index.ts","Data/Weapons/Bow/AlleyHunter/Weapon_Alley_Hunter.png","Data/Weapons/Bow/AlleyHunter/index.tsx","Data/Weapons/Bow/AmosBow/Weapon_Amos'_Bow.png","Data/Weapons/Bow/AmosBow/index.tsx","Data/Weapons/Bow/BlackcliffWarbow/Weapon_Blackcliff_Warbow.png","Data/Weapons/Bow/BlackcliffWarbow/index.tsx","Data/Weapons/Bow/CompoundBow/Weapon_Compound_Bow.png","Data/Weapons/Bow/CompoundBow/index.tsx","Data/Weapons/Bow/EbonyBow/Weapon_Ebony_Bow.png","Data/Weapons/Bow/EbonyBow/index.tsx","Data/Weapons/Bow/ElegyForTheEnd/Weapon_Elegy_for_the_End.png","Data/Weapons/Bow/ElegyForTheEnd/index.tsx","Data/Weapons/Bow/FavoniusWarbow/Weapon_Favonius_Warbow.png","Data/Weapons/Bow/FavoniusWarbow/index.tsx","Data/Weapons/Bow/Hamayumi/Weapon_Hamayumi.png","Data/Weapons/Bow/Hamayumi/index.tsx","Data/Weapons/Bow/HuntersBow/Weapon_Hunter's_Bow.png","Data/Weapons/Bow/HuntersBow/index.tsx","Data/Weapons/Bow/Messenger/Weapon_Messenger.png","Data/Weapons/Bow/Messenger/index.tsx","Data/Weapons/Bow/MitternachtsWaltz/Weapon_Mitternachts_Waltz.png","Data/Weapons/Bow/MitternachtsWaltz/index.tsx","Data/Weapons/Bow/PrototypeCrescent/Weapon_Prototype_Crescent.png","Data/Weapons/Bow/PrototypeCrescent/index.tsx","Data/Weapons/Bow/RavenBow/Weapon_Raven_Bow.png","Data/Weapons/Bow/RavenBow/index.tsx","Data/Weapons/Bow/RecurveBow/Weapon_Recurve_Bow.png","Data/Weapons/Bow/RecurveBow/index.tsx","Data/Weapons/Bow/RoyalBow/Weapon_Royal_Bow.png","Data/Weapons/Bow/RoyalBow/index.tsx","Data/Weapons/Bow/Rust/Weapon_Rust.png","Data/Weapons/Bow/Rust/index.tsx","Data/Weapons/Bow/SacrificialBow/Weapon_Sacrificial_Bow.png","Data/Weapons/Bow/SacrificialBow/index.tsx","Data/Weapons/Bow/SeasonedHuntersBow/Weapon_Seasoned_Hunter's_Bow.png","Data/Weapons/Bow/SeasonedHuntersBow/index.tsx","Data/Weapons/Bow/SharpshootersOath/Weapon_Sharpshooter's_Oath.png","Data/Weapons/Bow/SharpshootersOath/index.tsx","Data/Weapons/Bow/SkywardHarp/Weapon_Skyward_Harp.png","Data/Weapons/Bow/SkywardHarp/index.tsx","Data/Weapons/Bow/Slingshot/Weapon_Slingshot.png","Data/Weapons/Bow/Slingshot/index.tsx","Data/Weapons/Bow/TheStringless/Weapon_The_Stringless.png","Data/Weapons/Bow/TheStringless/index.tsx","Data/Weapons/Bow/TheViridescentHunt/Weapon_The_Viridescent_Hunt.png","Data/Weapons/Bow/TheViridescentHunt/index.tsx","Data/Weapons/Bow/ThunderingPulse/Weapon_Thundering_Pulse.png","Data/Weapons/Bow/ThunderingPulse/index.tsx","Data/Weapons/Bow/WindblumeOde/Weapon_Windblume_Ode.png","Data/Weapons/Bow/WindblumeOde/index.tsx","Data/Weapons/Bow/index.ts","Data/Weapons/Catalyst/ApprenticesNotes/Weapon_Apprentice's_Notes.png","Data/Weapons/Catalyst/ApprenticesNotes/index.tsx","Data/Weapons/Catalyst/BlackcliffAgate/Weapon_Blackcliff_Amulet.png","Data/Weapons/Catalyst/BlackcliffAgate/index.tsx","Data/Weapons/Catalyst/DodocoTales/Weapon_Dodoco_Tales.png","Data/Weapons/Catalyst/DodocoTales/index.tsx","Data/Weapons/Catalyst/EmeraldOrb/Weapon_Emerald_Orb.png","Data/Weapons/Catalyst/EmeraldOrb/index.tsx","Data/Weapons/Catalyst/EyeOfPerception/Weapon_Eye_of_Perception.png","Data/Weapons/Catalyst/EyeOfPerception/index.tsx","Data/Weapons/Catalyst/FavoniusCodex/Weapon_Favonius_Codex.png","Data/Weapons/Catalyst/FavoniusCodex/index.tsx","Data/Weapons/Catalyst/Frostbearer/Weapon_Frostbearer.png","Data/Weapons/Catalyst/Frostbearer/index.tsx","Data/Weapons/Catalyst/HakushinRing/Weapon_Hakushin_Ring.png","Data/Weapons/Catalyst/HakushinRing/index.tsx","Data/Weapons/Catalyst/LostPrayerToTheSacredWinds/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Data/Weapons/Catalyst/LostPrayerToTheSacredWinds/index.tsx","Data/Weapons/Catalyst/MagicGuide/Weapon_Magic_Guide.png","Data/Weapons/Catalyst/MagicGuide/index.tsx","Data/Weapons/Catalyst/MappaMare/Weapon_Mappa_Mare.png","Data/Weapons/Catalyst/MappaMare/index.tsx","Data/Weapons/Catalyst/MemoryOfDust/Weapon_Memory_of_Dust.png","Data/Weapons/Catalyst/MemoryOfDust/index.tsx","Data/Weapons/Catalyst/OtherworldlyStory/Weapon_Otherworldly_Story.png","Data/Weapons/Catalyst/OtherworldlyStory/index.tsx","Data/Weapons/Catalyst/PocketGrimoire/Weapon_Pocket_Grimoire.png","Data/Weapons/Catalyst/PocketGrimoire/index.tsx","Data/Weapons/Catalyst/PrototypeMalice/Weapon_Prototype_Malice.png","Data/Weapons/Catalyst/PrototypeMalice/index.tsx","Data/Weapons/Catalyst/RoyalGrimoire/Weapon_Royal_Grimoire.png","Data/Weapons/Catalyst/RoyalGrimoire/index.tsx","Data/Weapons/Catalyst/SacrificialFragments/Weapon_Sacrificial_Fragments.png","Data/Weapons/Catalyst/SacrificialFragments/index.tsx","Data/Weapons/Catalyst/SkywardAtlas/Weapon_Skyward_Atlas.png","Data/Weapons/Catalyst/SkywardAtlas/index.tsx","Data/Weapons/Catalyst/SolarPearl/Weapon_Solar_Pearl.png","Data/Weapons/Catalyst/SolarPearl/index.tsx","Data/Weapons/Catalyst/TheWidsith/Weapon_The_Widsith.png","Data/Weapons/Catalyst/TheWidsith/index.tsx","Data/Weapons/Catalyst/ThrillingTalesOfDragonSlayers/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Data/Weapons/Catalyst/ThrillingTalesOfDragonSlayers/index.tsx","Data/Weapons/Catalyst/TwinNephrite/Weapon_Twin_Nephrite.png","Data/Weapons/Catalyst/TwinNephrite/index.tsx","Data/Weapons/Catalyst/WineAndSong/Weapon_Wine_and_Song.png","Data/Weapons/Catalyst/WineAndSong/index.tsx","Data/Weapons/Catalyst/index.ts","Data/Weapons/index.ts","Util/FormulaUtil.ts","Build/Build.ts","Util/DocumentUtil.ts","Data/Weapons/Sword/AquilaFavonia/data.ts","Data/Weapons/Sword/FilletBlade/data.ts","Data/Weapons/Sword/PrimordialJadeCutter/data.ts","Data/Weapons/Sword/SkywardBlade/data.ts","Data/Weapons/Sword/SwordOfDescension/data.ts","Data/Weapons/Sword/TheBlackSword/data.ts","Data/Weapons/Sword/TheFlute/data.ts","Data/Weapons/Sword/TravelersHandySword/data.ts","Data/Weapons/Polearm/CrescentPike/data.ts","Data/Weapons/Polearm/DragonspineSpear/data.ts","Data/Weapons/Polearm/Halberd/data.ts","Data/Weapons/Polearm/SkywardSpine/data.ts","Data/Weapons/Polearm/StaffOfHoma/data.ts","Data/Weapons/Claymore/DebateClub/data.ts","Data/Weapons/Claymore/PrototypeAminus/data.ts","Data/Weapons/Claymore/SkywardPride/data.ts","Data/Weapons/Claymore/SnowTombedStarsilver/data.ts","Data/Weapons/Claymore/TheBell/data.ts","Data/Weapons/Claymore/WhiteIronGreatsword/data.ts","Data/Weapons/Catalyst/EyeOfPerception/data.ts","Data/Weapons/Catalyst/Frostbearer/data.ts","Data/Weapons/Catalyst/OtherworldlyStory/data.ts","Data/Weapons/Catalyst/PrototypeMalice/data.ts","Data/Weapons/Catalyst/SkywardAtlas/data.ts","Data/Weapons/Bow/Messenger/data.ts","Data/Weapons/Bow/RecurveBow/data.ts","Data/Weapons/Bow/SkywardHarp/data.ts","Data/Weapons/Bow/TheViridescentHunt/data.ts"],"names":["atk_s","conditionals","pa","name","maxStack","stats","atk_","weapon","refineIndex","data_gen","img","document","conditional","dmg_s","bft","dmg_","fields","text","ns","key18","formulaText","data","dmg","Stat","printStat","getTalentStatKey","formula","variant","getTalentStatKeyVariant","u","charged_dmg_","skill_dmg_s","skill_dmg_","crit_s","lau","critRate_","rh","bst","f","c","cdRed_","takeDMG_s","w","value","conditionalValues","SerpentSpine","num","unit","dmgc","atkSPD_","condAtk_","r","rg","shield","shield_","gm","states","wo","powShield_","atk_def_s","infusionBlade","def_","heal","atk_partys","wt","claymore","BlackcliffSlasher","BloodtaintedGreatsword","DebateClub","FavoniusGreatsword","FerrousShadow","KatsuragikiriNagamasa","LithicBlade","OldMercsPal","PrototypeAminus","Quartz","Rainslasher","RoyalGreatsword","SacrificialGreatsword","SkyriderGreatsword","SkywardPride","SnowTombedStarsilver","SongOfBrokenPines","TheBell","TheUnforged","WasterGreatsword","Whiteblind","WhiteIronGreatsword","WolfsGravestone","refinementVals","bwi","em","refinementVals2","skill_critRate_","cds","auto","normal_dmg_","plunging_dmg_","v","is","ele_dmg_s","ele_dmg_ss","ele","Object","fromEntries","allElements","map","ElementalData","canShow","MistsplitterReforged","stacks","values","count","path","KeyPath","PrimordialJadeCutter","refinementVals_hp","hp_","modifiers","finalATK","bonus","hp_atk","smashedStone","d","moveSPD_","refinementMoveSpdVals","refinementatkSpdVals","spf","refinementAtkVals","characterKey","startsWith","atk","ih","regen","vals","sword","AmenomaKageuchi","AquilaFavonia","BlackcliffLongsword","CoolSteel","DarkIronSword","DullBlade","FavoniusSword","FesteringDesire","FilletBlade","FreedomSworn","HarbingerOfDawn","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","SilverSword","SkyriderSword","SkywardBlade","SummitShaper","SwordOfDescension","TheAlleyFlash","TheBlackSword","TheFlute","TravelersHandySword","s","refinementSoloVals","g","o2","o1","bfw","refinementCritVals","refinementDmgVals","e","l7","a7","ma","crit_","StaffOfHoma","hp","esjadd","hp_atk_add","esj","polearm","BeginnersProtector","BlackcliffPole","BlackTassel","CrescentPike","Deathmatch","DragonsBane","DragonspineSpear","FavoniusLance","Halberd","IronPoint","KitainCrossSpear","LithicSpear","PrimordialJadeWingedSpear","PrototypeGrudge","RoyalSpear","SkywardSpine","VortexVanquisher","WhiteTassel","ug","sw","refinementSpdVals","ia","refinementEM","eleMass","pr","eleMas","normal_dmg_s","charged_dmg_s","skill_","normal_","a","Translate","weakspotDMG_","critd_s","critDMG_","burst_dmg_","ww","bow","AlleyHunter","AmosBow","BlackcliffWarbow","CompoundBow","EbonyBow","ElegyForTheEnd","FavoniusWarbow","Hamayumi","HuntersBow","Messenger","MitternachtsWaltz","PrototypeCrescent","RavenBow","RecurveBow","RoyalBow","Rust","SacrificialBow","SeasonedHuntersBow","SharpshootersOath","SkywardHarp","Slingshot","TheStringless","TheViridescentHunt","ThunderingPulse","WindblumeOde","cdmg_","bb","anemo_dmg_","geo_dmg_","electro_dmg_","hydro_dmg_","pyro_dmg_","cryo_dmg_","ss","n","b","refinementEleDmgVals","refinementEleMasVals","i","gt","ws","catalyst","ApprenticesNotes","BlackcliffAgate","DodocoTales","EmeraldOrb","EyeOfPerception","FavoniusCodex","Frostbearer","HakushinRing","LostPrayerToTheSacredWinds","MagicGuide","MappaMare","MemoryOfDust","OtherworldlyStory","PocketGrimoire","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SkywardAtlas","SolarPearl","TheWidsith","ThrillingTalesOfDragonSlayers","TwinNephrite","WineAndSong","WeaponData","forEach","documentSectionsProcessing","basicDMGFormula","percent","skillKey","elemental","val","statKey","basicHealingFormula","scaleStatKey","flat","ratio","heal_multi","calculateTotalBuildNumber","artifactsBySlot","setFilters","setKeys","Set","key","filteredArtifactsBySlot","slotKeys","keys","slotKey","artifactsBySet","artifact","has","setKey","push","freeze","setCount","accu","result","slotPerm","index","length","artifactSetPermutations","reduce","entries","artifacts","overwriteElement","hitMode","infusionAura","infusionSelf","reactionMode","characterEle","weaponType","includes","eleKey","sections","section","fieldProcessing","finalHP","hpMulti"],"mappings":"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","file":"static/js/8.f4369100.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Blackcliff_Slasher.png'\r\n\r\nconst atk_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Bloodtainted_Greatsword.png'\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bft: {\r\n    name: \"Against Opponents affected by Pyro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bft\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Debate_Club.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Favonius_Greatsword.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Ferrous_Shadow.png'\r\n\r\n// const refinementHpVals = [70, 75, 80, 85, 90]\r\nconst dmg_s = [30, 35, 40, 45, 50]\r\nconst conditionals: IConditionals = {\r\n  u: {\r\n    name: \"Low HP\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      charged_dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.u\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Katsuragikiri_Nagamasa.bfb9ec69.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Katsuragikiri_Nagamasa.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst skill_dmg_s = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    skill_dmg_: skill_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ad84ddeb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Lithic_Blade.png'\r\n\r\nconst crit_s = [3, 4, 5, 6, 7]\r\nconst atk_s = [7, 8, 9, 10, 11]\r\nconst conditionals: IConditionals = {\r\n  lau: {\r\n    name: \"Liyue Members\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex],\r\n      critRate_: crit_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.lau\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Old_Merc\\'s_Pal.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Prototype_Aminus.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Quartz.png'\r\n\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  rh: {\r\n    name: \"After Pyro-related Reactions\",\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.rh\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Rainslasher.png'\r\n\r\nconst dmg_s = [20, 24, 28, 32, 36]\r\nconst conditionals: IConditionals = {\r\n  bst: {\r\n    name: \"Against Opponents Affected by Hydro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bst\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Royal_Greatsword.png'\r\n\r\nconst crit_s = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: crit_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sacrificial_Greatsword.png'\r\n\r\n// const refinementVals = [40, 50, 60, 70, 80]\r\n// const refinementCdVals = [30, 26, 22, 19, 16]\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"After Elemental Skill\",\r\n    maxStack: 1,\r\n    stats: () => ({\r\n      cdRed_: 100\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals, IConditionalValue } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Serpent_Spine.png'\r\n\r\nconst dmg_s = [6, 7, 8, 9, 10]\r\nconst takeDMG_s = [3, 2.7, 2.4, 2.2, 2]\r\nconst conditionals: IConditionals = {\r\n  w: {\r\n    name: \"Duration on Field (4s / stack)\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    }),\r\n    fields: [{\r\n      text: \"Take more DMG\",\r\n      value: stats => {\r\n        const value = stats.conditionalValues?.weapon?.SerpentSpine?.w as IConditionalValue | undefined\r\n        const [num,] = value ?? [0]\r\n        return takeDMG_s[stats.weapon.refineIndex] * num\r\n      },\r\n      unit: \"%\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.w\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyrider_Greatsword.png'\r\n\r\nconst atk_s = [6, 7, 8, 9, 10]\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyward_Pride.png'\r\nconst dmg_s = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    dmg_: dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Snow-Tombed_Starsilver.dd5076a9.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Snow-Tombed_Starsilver.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Song_of_Broken_Pines.b8bd0af1.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Song_of_Broken_Pines.png'\r\nconst atk_ = [16, 20, 24, 28, 32]\r\nconst atkSPD_ = [12, 15, 18, 21, 24]\r\nconst condAtk_ = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  r: {\r\n    name: <TransWrapper ns=\"weapon_SongOfBrokenPines\" key18=\"name\" />,\r\n    stats: stats => ({\r\n      atk_: condAtk_[stats.weapon.refineIndex],\r\n      atkSPD_: atkSPD_[stats.weapon.refineIndex],\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    atk_: atk_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.r\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Bell.png'\r\n\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  rg: {\r\n    name: \"Taking DMG\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    fields: [{\r\n      text: \"Shield Absorption\",\r\n      formulaText: stats => <span>{data.shield[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * (100% + {Stat.printStat(\"powShield_\", stats)})</span>,\r\n      formula: formula.shield,\r\n    }],\r\n    conditional: conditionals.rg\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Unforged.png'\r\n\r\nconst shield_ = [20, 25, 30, 35, 40]\r\nconst atk_s = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits\",\r\n    states: {\r\n      wo: {\r\n        name: \"Without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: atk_s[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"With shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * atk_s[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    powShield_: shield_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Waster_Greatsword.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Whiteblind.png'\r\nconst atk_def_s = [6, 7.5, 9, 10.5, 12]\r\nconst conditionals: IConditionals = {\r\n  infusionBlade: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: atk_def_s[stats.weapon.refineIndex],\r\n      def_: atk_def_s[stats.weapon.refineIndex]\r\n    }),\r\n    fields: [{\r\n      text: \"Duration\",\r\n      value: \"6s\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.infusionBlade\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_White_Iron_Greatsword.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Wolf\\'s_Gravestone.png'\r\n\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst atk_partys = [40, 50, 60, 70, 80]\r\nconst conditionals: IConditionals = {\r\n  wt: {\r\n    name: \"Attacked Opponent with Low HP\",//TODO: party buff\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: atk_partys[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    atk_: atk_s[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.wt\r\n  }],\r\n}\r\nexport default weapon","import BlackcliffSlasher from './BlackcliffSlasher'\r\nimport BloodtaintedGreatsword from './BloodtaintedGreatsword'\r\nimport DebateClub from './DebateClub'\r\nimport FavoniusGreatsword from './FavoniusGreatsword'\r\nimport FerrousShadow from './FerrousShadow'\r\nimport KatsuragikiriNagamasa from './KatsuragikiriNagamasa'\r\nimport LithicBlade from './LithicBlade'\r\nimport OldMercsPal from './OldMercsPal'\r\nimport PrototypeAminus from './PrototypeAminus'\r\nimport Quartz from './Quartz'\r\nimport Rainslasher from './Rainslasher'\r\nimport RoyalGreatsword from './RoyalGreatsword'\r\nimport SacrificialGreatsword from './SacrificialGreatsword'\r\nimport SerpentSpine from './SerpentSpine'\r\nimport SkyriderGreatsword from './SkyriderGreatsword'\r\nimport SkywardPride from './SkywardPride'\r\nimport SnowTombedStarsilver from './SnowTombedStarsilver'\r\nimport SongOfBrokenPines from './SongOfBrokenPines'\r\nimport TheBell from './TheBell'\r\nimport TheUnforged from './TheUnforged'\r\nimport WasterGreatsword from './WasterGreatsword'\r\nimport Whiteblind from './Whiteblind'\r\nimport WhiteIronGreatsword from './WhiteIronGreatsword'\r\nimport WolfsGravestone from './WolfsGravestone'\r\nconst claymore = {\r\n  BlackcliffSlasher,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FavoniusGreatsword,\r\n  FerrousShadow,\r\n  KatsuragikiriNagamasa,\r\n  LithicBlade,\r\n  OldMercsPal,\r\n  PrototypeAminus,\r\n  Quartz,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SacrificialGreatsword,\r\n  SerpentSpine,\r\n  SkyriderGreatsword,\r\n  SkywardPride,\r\n  SnowTombedStarsilver,\r\n  SongOfBrokenPines,\r\n  TheBell,\r\n  TheUnforged,\r\n  WasterGreatsword,\r\n  Whiteblind,\r\n  WhiteIronGreatsword,\r\n  WolfsGravestone,\r\n} as const\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Amenoma_Kageuchi.ec7856ba.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Amenoma_Kageuchi.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Aquila_Favonia.png'\r\nconst atk_ = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    atk_: atk_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalATK\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }, {\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Blackcliff_Longsword.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Cool_Steel.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bwi: {\r\n    name: \"Against Opponents Affected by Hydro/Cryo\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bwi\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Dark_Iron_Sword.png'\r\n\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  em: {\r\n    name: \"After Electro-related reactions\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.em\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Dull_Blade.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Favonius_Sword.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Festering_Desire.184574f4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Festering_Desire.png'\r\n\r\nconst refinementVals = [16, 20, 24, 28, 32]\r\nconst refinementVals2 = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    skill_critRate_: refinementVals2[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Fillet_Blade.png'\r\nconst cds = [15, 14, 13, 12, 11]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"CD\",\r\n      value: stats => `${cds[stats.weapon.refineIndex]}s`\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Freedom-Sworn.0f5d8fed.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Freedom-Sworn.png'\r\nconst dmg_ = [10, 12.5, 15, 17.5, 20]\r\nconst auto = [16, 20, 24, 28, 32]\r\nconst atk_ = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  r: {\r\n    name: <TransWrapper ns=\"weapon_FreedomSworn\" key18=\"name\" />,\r\n    stats: stats => ({\r\n      atk_: atk_[stats.weapon.refineIndex],\r\n      normal_dmg_: auto[stats.weapon.refineIndex],\r\n      charged_dmg_: auto[stats.weapon.refineIndex],\r\n      plunging_dmg_: auto[stats.weapon.refineIndex],\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    dmg_: dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.r\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Harbinger_of_Dawn.png'\r\n\r\nconst refinementVals = [14, 17.5, 21, 24.5, 28]\r\nconst conditionals: IConditionals = {\r\n  v: {\r\n    name: \"HP > 90%\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      critRate_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.v\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Iron_Sting.png'\r\n\r\nconst refinementVals = [6, 7.5, 9, 10.5, 12]\r\nconst conditionals: IConditionals = {\r\n  is: {\r\n    name: \"Elemental Hits\",\r\n    maxStack: 2,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.is\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Lion\\'s_Roar.png'\r\n\r\nconst refinementVals = [20, 24, 28, 32, 36]\r\nconst conditionals: IConditionals = {\r\n  bft: {\r\n    name: \"Against Opponents Affected by Pyro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bft\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Mistsplitter_Reforged.f731d31b.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Mistsplitter_Reforged.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { IConditionals, IConditionalValue } from '../../../../Types/IConditional'\r\nimport { allElements } from '../../../../Types/consts'\r\nimport ElementalData from '../../../ElementalData'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nconst ele_dmg_s = [12, 15, 18, 21, 24]\r\nconst ele_dmg_ss = [\r\n  [8, 16, 28],\r\n  [10, 20, 35],\r\n  [12, 24, 42],\r\n  [14, 28, 49],\r\n  [16, 32, 56]\r\n]\r\nconst conditionals: IConditionals = {\r\n  ele: {\r\n    name: <TransWrapper ns=\"weapon_MistsplitterReforged\" key18=\"ele\" />,\r\n    states: Object.fromEntries(allElements.map(ele => [ele, {\r\n      name: ElementalData[ele].name\r\n    }])) as any\r\n  },\r\n  em: {//Emblem\r\n    canShow: stats => {\r\n      const value = stats.conditionalValues?.weapon?.MistsplitterReforged?.ele as IConditionalValue | undefined\r\n      if (!value) return false\r\n      const [num,] = value\r\n      if (!num) return false\r\n      return true\r\n    },\r\n    name: <TransWrapper ns=\"weapon_MistsplitterReforged\" key18=\"emblem\" />,\r\n    states: Object.fromEntries([1, 2, 3].map(stacks => [stacks, {\r\n      name: <TransWrapper ns=\"sheet\" key18=\"stack\" values={{ count: stacks }} />,\r\n      stats: stats => {\r\n        const [num, ele] = stats.conditionalValues?.weapon?.MistsplitterReforged?.ele ?? [0, \"\"] as IConditionalValue | undefined\r\n        if (!num || !ele) return {}\r\n        return {\r\n          [`${ele}_dmg_`]: ele_dmg_ss[stats.weapon.refineIndex][stacks - 1]\r\n        }\r\n      }\r\n    }]))\r\n\r\n  }\r\n\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => Object.fromEntries(allElements.map(ele => [`${ele}_dmg_`, ele_dmg_s[stats.weapon.refineIndex]])),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ele,\r\n  }, {\r\n    conditional: conditionals.em,\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Cutter.f607798f.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Primordial_Jade_Cutter.png'\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\n\r\nconst path = KeyPath<FormulaPathBase>().weapon.PrimordialJadeCutter\r\nconst refinementVals_hp = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    hp_: refinementVals_hp[stats.weapon.refineIndex],\r\n    modifiers: { finalATK: [path.bonus()] }\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: \"ATK Increase\",\r\n      formulaText: stats => <span>{data.hp_atk[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.bonus,\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Prototype_Rancour.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  smashedStone: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      def_: refinementVals[stats.weapon.refineIndex]\r\n    }),\r\n    fields: [{\r\n      text: \"Duration\",\r\n      value: \"6s\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.smashedStone\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Royal_Longsword.png'\r\n\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sacrificial_Sword.png'\r\n\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"Elemental Skill Resets CD\",\r\n    maxStack: 1,\r\n    stats: () => ({\r\n      cdRed_: 100\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Silver_Sword.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyrider_Sword.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  d: {\r\n    name: \"After Elemental Burst\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      moveSPD_: refinementVals[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.d\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyward_Blade.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst refinementMoveSpdVals = [10, 10, 10, 10, 10]\r\nconst refinementatkSpdVals = [10, 10, 10, 10, 10]\r\nconst conditionals: IConditionals = {\r\n  spf: {\r\n    name: \"After Elemental Burst\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      moveSPD_: refinementMoveSpdVals[stats.weapon.refineIndex],\r\n      atkSPD_: refinementatkSpdVals[stats.weapon.refineIndex],\r\n    }),\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    critRate_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.spf\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Summit_Shaper.62f1f0d9.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Summit_Shaper.png'\r\n\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst refinementAtkVals = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits\",\r\n    states: {\r\n      wo: {\r\n        name: \"Without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: refinementAtkVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"With shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * refinementAtkVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    powShield_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sword_of_Descension.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => stats.characterKey.startsWith(\"traveler\") ? {\r\n    atk: 66\r\n  } : {},\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>200% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Alley_Flash.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  ih: {\r\n    name: \"Not Taking DMG\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ih\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_The_Black_Sword.png'\r\nimport formula, { data } from './data'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    normal_dmg_: data.dmg_[stats.weapon.refineIndex],\r\n    charged_dmg_: data.dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.regen,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","import { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_The_Flute.png'\r\nimport formula, { data } from './data'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.vals[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","import AmenomaKageuchi from './AmenomaKageuchi'\r\nimport AquilaFavonia from './AquilaFavonia'\r\nimport BlackcliffLongsword from './BlackcliffLongsword'\r\nimport CoolSteel from './CoolSteel'\r\nimport DarkIronSword from './DarkIronSword'\r\nimport DullBlade from './DullBlade'\r\nimport FavoniusSword from './FavoniusSword'\r\nimport FesteringDesire from './FesteringDesire'\r\nimport FilletBlade from './FilletBlade'\r\nimport FreedomSworn from './FreedomSworn'\r\nimport HarbingerOfDawn from './HarbingerOfDawn'\r\nimport IronSting from './IronSting'\r\nimport LionsRoar from './LionsRoar'\r\nimport MistsplitterReforged from './MistsplitterReforged'\r\nimport PrimordialJadeCutter from './PrimordialJadeCutter'\r\nimport PrototypeRancour from './PrototypeRancour'\r\nimport RoyalLongsword from './RoyalLongsword'\r\nimport SacrificialSword from './SacrificialSword'\r\nimport SilverSword from './SilverSword'\r\nimport SkyriderSword from './SkyriderSword'\r\nimport SkywardBlade from './SkywardBlade'\r\nimport SummitShaper from './SummitShaper'\r\nimport SwordOfDescension from './SwordOfDescension'\r\nimport TheAlleyFlash from './TheAlleyFlash'\r\nimport TheBlackSword from './TheBlackSword'\r\nimport TheFlute from './TheFlute'\r\nimport TravelersHandySword from './TravelersHandySword'\r\nconst sword = {\r\n  AmenomaKageuchi,\r\n  AquilaFavonia,\r\n  BlackcliffLongsword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  DullBlade,\r\n  FavoniusSword,\r\n  FesteringDesire,\r\n  FilletBlade,\r\n  FreedomSworn,\r\n  HarbingerOfDawn,\r\n  IronSting,\r\n  LionsRoar,\r\n  MistsplitterReforged,\r\n  PrimordialJadeCutter,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  SilverSword,\r\n  SkyriderSword,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n  SwordOfDescension,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  TravelersHandySword,\r\n} as const\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Beginner\\'s_Protector.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Blackcliff_Pole.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Black_Tassel.png'\r\n\r\nconst dmg_s = [40, 50, 60, 70, 80]\r\nconst conditionals: IConditionals = {\r\n  s: {\r\n    name: \"Against Slimes\",\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex],\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.s\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","import { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Crescent_Pike.png'\r\nimport formula, { data } from './data'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Deathmatch.png'\r\nconst refinementVals = [16, 20, 24, 28, 32]\r\nconst refinementSoloVals = [24, 30, 36, 42, 48]\r\nconst conditionals: IConditionals = {\r\n  g: {\r\n    name: \"\",\r\n    states: {\r\n      o2: {\r\n        name: \"At least 2 opponents\",\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex],\r\n          def_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      o1: {\r\n        name: \"Less than 2 opponents\",\r\n        stats: stats => ({\r\n          atk_: refinementSoloVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.g\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Dragon\\'s_Bane.png'\r\n\r\nconst dmg_s = [20, 24, 28, 32, 36]\r\nconst conditionals: IConditionals = {\r\n  bfw: {\r\n    name: \"Against Opponents Affected by Hydro/Pyro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bfw\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Dragonspine_Spear.a9e18e36.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Dragonspine_Spear.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Favonius_Lance.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Halberd.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Iron_Point.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Kitain_Cross_Spear.ed8bd9cc.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Kitain_Cross_Spear.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst skill_dmg_s = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    skill_dmg_: skill_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.db446b21.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Lithic_Spear.png'\r\n\r\nconst refinementCritVals = [3, 4, 5, 6, 7]\r\nconst refinementAtkVals = [7, 8, 9, 10, 11]\r\nconst conditionals: IConditionals = {\r\n  lau: {\r\n    name: \"Liyue Members\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: refinementAtkVals[stats.weapon.refineIndex],\r\n      critRate_: refinementCritVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.lau\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Primordial_Jade_Winged-Spear.png'\r\n\r\nconst refinementVals = [3.2, 3.9, 4.6, 5.3, 6]\r\nconst refinementDmgVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  e: {\r\n    name: \"On Hit\",\r\n    states: {\r\n      l7: {\r\n        name: \"On Hit\",\r\n        maxStack: 6,\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      a7: {\r\n        name: \"At 7 stacks\",\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex] * 7,\r\n          dmg_: refinementDmgVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.e\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Prototype_Grudge.png'\r\n\r\nconst dmg_ = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  ma: {\r\n    name: \"After Using Elemental Skills\",\r\n    maxStack: 2,\r\n    stats: stats => ({\r\n      normal_dmg_: dmg_[stats.weapon.refineIndex],\r\n      charged_dmg_: dmg_[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ma\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Royal_Spear.png'\r\n\r\nconst crit_ = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: crit_[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyward_Spine.png'\r\n\r\nconst crit_ = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    critRate_: crit_[stats.weapon.refineIndex],\r\n    atkSPD_: 12\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Staff_of_Homa.b8d62b3c.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Staff_of_Homa.png'\r\nimport formula, { data } from './data'\r\n\r\nconst path = KeyPath<FormulaPathBase>().weapon.StaffOfHoma\r\nconst refinementVals_hp = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  hp: {\r\n    name: \"HP < 50%\",\r\n    maxStack: 1,\r\n    stats: {\r\n      modifiers: { finalATK: [path.esjadd()] }\r\n    },\r\n    fields: [{\r\n      text: \"ATK Increase\",\r\n      formulaText: stats => <span>{data.hp_atk_add[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.esjadd,\r\n    }],\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    hp_: refinementVals_hp[stats.weapon.refineIndex],\r\n    modifiers: { finalATK: [path.esj()] }\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    fields: [{\r\n      text: \"ATK Increase\",\r\n      formulaText: stats => <span>{data.hp_atk[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.esj,\r\n    }],\r\n    conditional: conditionals.hp\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Vortex_Vanquisher.png'\r\n\r\nconst shield_ = [20, 25, 30, 35, 40]\r\nconst atk_ = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits\",\r\n    states: {\r\n      wo: {\r\n        name: \"Without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: atk_[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"With shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * atk_[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    powShield_: shield_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_White_Tassel.png'\r\n\r\nconst dmg_ = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    normal_dmg_: dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","import BeginnersProtector from './BeginnersProtector'\r\nimport BlackcliffPole from './BlackcliffPole'\r\nimport BlackTassel from './BlackTassel'\r\nimport CrescentPike from './CrescentPike'\r\nimport Deathmatch from './Deathmatch'\r\nimport DragonsBane from './DragonsBane'\r\nimport DragonspineSpear from './DragonspineSpear'\r\nimport FavoniusLance from './FavoniusLance'\r\nimport Halberd from './Halberd'\r\nimport IronPoint from './IronPoint'\r\nimport KitainCrossSpear from './KitainCrossSpear'\r\nimport LithicSpear from './LithicSpear'\r\nimport PrimordialJadeWingedSpear from './PrimordialJadeWingedSpear'\r\nimport PrototypeGrudge from './PrototypeGrudge'\r\nimport RoyalSpear from './RoyalSpear'\r\nimport SkywardSpine from './SkywardSpine'\r\nimport StaffOfHoma from './StaffOfHoma'\r\nimport VortexVanquisher from './VortexVanquisher'\r\nimport WhiteTassel from './WhiteTassel'\r\nconst polearm = {\r\n  BeginnersProtector,\r\n  BlackcliffPole,\r\n  BlackTassel,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  DragonspineSpear,\r\n  FavoniusLance,\r\n  Halberd,\r\n  IronPoint,\r\n  KitainCrossSpear,\r\n  LithicSpear,\r\n  PrimordialJadeWingedSpear,\r\n  PrototypeGrudge,\r\n  RoyalSpear,\r\n  SkywardSpine,\r\n  StaffOfHoma,\r\n  VortexVanquisher,\r\n  WhiteTassel,\r\n} as const\r\nexport default polearm","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.94feb928.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Alley_Hunter.png'\r\n\r\nconst refinementVals = [2, 2.5, 3, 3.5, 4]\r\nconst conditionals: IConditionals = {\r\n  ug: {\r\n    name: \"Duration not on Field (1s / stack)\",\r\n    maxStack: 10,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ug\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Amos\\'_Bow.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst refinementDmgVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  sw: {\r\n    name: \"Arrow Flight Duration (0.1s / stack)\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      normal_dmg_: refinementDmgVals[stats.weapon.refineIndex],\r\n      charged_dmg_: refinementDmgVals[stats.weapon.refineIndex]\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    normal_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    charged_dmg_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.sw\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Blackcliff_Warbow.png'\r\n\r\nconst atk_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Compound_Bow.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst refinementSpdVals = [1.2, 1.5, 1.8, 2.1, 2.4]\r\nconst conditionals: IConditionals = {\r\n  ia: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      atkSPD_: refinementSpdVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ia\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Ebony_Bow.png'\r\n\r\nconst dmg_s = [40, 50, 60, 70, 80]\r\nconst conditionals: IConditionals = {\r\n  d: {\r\n    name: \"Against Ruin Opponents\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.d\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Elegy_for_the_End.73b73f92.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Elegy_for_the_End.png'\r\n\r\nconst refinementEM = [60, 75, 90, 105, 120]\r\nconst eleMass = [100, 125, 150, 175, 200]\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  pr: {\r\n    name: \"Millennial Movement: Farewell Song\",\r\n    stats: stats => ({\r\n      eleMas: eleMass[stats.weapon.refineIndex],\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    eleMas: refinementEM[stats.weapon.refineIndex],\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pr\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Favonius_Warbow.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Hamayumi.02e14781.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Hamayumi.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nconst normal_dmg_s = [16, 20, 24, 28, 32]\r\nconst charged_dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  e: {//100% energy\r\n    name: <TransWrapper ns=\"weapon_Hamayumi\" key18=\"ener\" />,\r\n    stats: stats => ({\r\n      normal_dmg_: normal_dmg_s[stats.weapon.refineIndex],\r\n      charged_dmg_: charged_dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    normal_dmg_: normal_dmg_s[stats.weapon.refineIndex],\r\n    charged_dmg_: charged_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.e\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Hunter\\'s_Bow.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Messenger.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Mitternachts_Waltz.a3cd83a8.png\";","import { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Mitternachts_Waltz.png'\r\nconst skill_ = [20, 25, 30, 35, 40]\r\nconst normal_ = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  a: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.normal\" />,\r\n    stats: stats => ({\r\n      skill_dmg_: skill_[stats.weapon.refineIndex],\r\n    })\r\n  },\r\n  s: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.skill\" />,\r\n    stats: stats => ({\r\n      normal_dmg_: normal_[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.a\r\n  }, {\r\n    conditional: conditionals.s\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Prototype_Crescent.png'\r\n\r\nconst atk_s = [36, 45, 54, 63, 72]\r\nconst conditionals: IConditionals = {\r\n  u: {\r\n    name: \"Against Weak Points\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      moveSPD_: 10,\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.u\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Raven_Bow.png'\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bfw: {\r\n    name: \"Against Opponents Affected by Hydro/Pyro\",\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bfw\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Recurve_Bow.png'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Royal_Bow.png'\r\n\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Rust.png'\r\n\r\nconst refinementVals = [40, 50, 60, 70, 80]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    normal_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    charged_dmg_: -10\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","import { WeaponData } from 'pipeline'\r\n// import { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sacrificial_Bow.png'\r\n\r\n// const refinementVals = [40, 50, 60, 70, 80]\r\n// const refinementCdVals = [30, 26, 22, 19, 16]\r\n// const conditionals: IConditionals = {\r\n//   c: {\r\n//     name: \"Elemental Skill Ends CD\",\r\n//     stats: { cdRed_: 100 }),\r\n//   }\r\n// }\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  // conditionals,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sharpshooter\\'s_Oath.png'\r\n\r\nconst refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    weakspotDMG_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyward_Harp.png'\r\n\r\nconst critd_s = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    critDMG_: critd_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>125% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Slingshot.png'\r\n\r\nconst refinementVals = [36, 42, 48, 54, 60]\r\nconst conditionals: IConditionals = {\r\n  s: {\r\n    name: \"Normal/Charged Attack Hits within 0.3s\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      // TODO: Shouldn't we exclude elemental skill/burst?\r\n      dmg_: refinementVals[stats.weapon.refineIndex] + 10//+10 to neutralize the -10\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: () => ({\r\n    dmg_: -10\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.s\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Stringless.png'\r\n\r\nconst refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    burst_dmg_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Viridescent_Hunt.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <Translate ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.vals[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Thundering_Pulse.8ed15b35.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Thundering_Pulse.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst ele_dmg_ss = [\r\n  [12, 24, 40],\r\n  [15, 30, 50],\r\n  [18, 36, 60],\r\n  [21, 42, 70],\r\n  [24, 48, 80]\r\n]\r\nconst conditionals: IConditionals = {\r\n  em: {\r\n    name: <TransWrapper ns=\"weapon_ThunderingPulse\" key18=\"emblem\" />,\r\n    states: Object.fromEntries([1, 2, 3].map(stacks => [stacks, {\r\n      name: <TransWrapper ns=\"sheet\" key18=\"stack\" values={{ count: stacks }} />,\r\n      stats: stats => {\r\n        return {\r\n          normal_dmg_: ele_dmg_ss[stats.weapon.refineIndex][stacks - 1]\r\n        }\r\n      }\r\n    }]))\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({ atk_: atk_s[stats.weapon.refineIndex] }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.em,\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Windblume_Ode.f38d3c91.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Windblume_Ode.png'\r\n\r\nconst atk_s = [16, 20, 24, 28, 32]\r\nconst conditionals: IConditionals = {\r\n  ww: {\r\n    name: \"After Elemental Skill\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ww\r\n  }],\r\n}\r\nexport default weapon","import AlleyHunter from './AlleyHunter'\r\nimport AmosBow from './AmosBow'\r\nimport BlackcliffWarbow from './BlackcliffWarbow'\r\nimport CompoundBow from './CompoundBow'\r\nimport EbonyBow from './EbonyBow'\r\nimport ElegyForTheEnd from './ElegyForTheEnd'\r\nimport FavoniusWarbow from './FavoniusWarbow'\r\nimport Hamayumi from './Hamayumi'\r\nimport HuntersBow from './HuntersBow'\r\nimport Messenger from './Messenger'\r\nimport MitternachtsWaltz from './MitternachtsWaltz'\r\nimport PrototypeCrescent from './PrototypeCrescent'\r\nimport RavenBow from './RavenBow'\r\nimport RecurveBow from './RecurveBow'\r\nimport RoyalBow from './RoyalBow'\r\nimport Rust from './Rust'\r\nimport SacrificialBow from './SacrificialBow'\r\nimport SeasonedHuntersBow from './SeasonedHuntersBow'\r\nimport SharpshootersOath from './SharpshootersOath'\r\nimport SkywardHarp from './SkywardHarp'\r\nimport Slingshot from './Slingshot'\r\nimport TheStringless from './TheStringless'\r\nimport TheViridescentHunt from './TheViridescentHunt'\r\nimport ThunderingPulse from './ThunderingPulse'\r\nimport WindblumeOde from './WindblumeOde'\r\nconst bow = {\r\n  AlleyHunter,\r\n  AmosBow,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  EbonyBow,\r\n  ElegyForTheEnd,\r\n  FavoniusWarbow,\r\n  Hamayumi,\r\n  HuntersBow,\r\n  Messenger,\r\n  MitternachtsWaltz,\r\n  PrototypeCrescent,\r\n  RavenBow,\r\n  RecurveBow,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  SeasonedHuntersBow,\r\n  SharpshootersOath,\r\n  SkywardHarp,\r\n  Slingshot,\r\n  TheStringless,\r\n  TheViridescentHunt,\r\n  ThunderingPulse,\r\n  WindblumeOde,\r\n} as const\r\nexport default bow","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Apprentice\\'s_Notes.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Blackcliff_Amulet.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Dodoco_Tales.c3b0c989.png\";","import { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Dodoco_Tales.png'\r\nconst cdmg_ = [16, 20, 24, 28, 32]\r\nconst atk_ = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  a: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.normal\" />,\r\n    stats: stats => ({\r\n      charged_dmg_: cdmg_[stats.weapon.refineIndex],\r\n    })\r\n  },\r\n  c: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.charged\" />,\r\n    stats: stats => ({\r\n      atk_: atk_[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.a\r\n  }, {\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Emerald_Orb.png'\r\n\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  r: {\r\n    name: \"After Hydro-Related Reactions\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.r\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Eye_of_Perception.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Favonius_Codex.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Frostbearer.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Hakushin_Ring.85bb77bb.png\";","import { WeaponData } from 'pipeline'\r\n// import { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Hakushin_Ring.png'\r\n\r\n// const refinementVals = [20, 25, 30, 35, 40]\r\n// const conditionals: IConditionals = {\r\n//   r: {\r\n//     name: \"After Electro Elemental Reaction\",\r\n//     maxStack: 1,\r\n//     stats: stats => ({\r\n//       atk_: refinementVals[stats.weapon.refineIndex]\r\n//     })\r\n//   }\r\n// }//TODO: party elemental bonus\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  // conditionals,\r\n  // document: [{\r\n  //   conditional: conditionals.r\r\n  // }],\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\n\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  bb: {\r\n    name: \"Duration on Field (4s / stack)\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      anemo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      geo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      electro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      hydro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      pyro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      cryo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: () => ({\r\n    moveSPD_: 10\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bb\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Magic_Guide.png'\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bst: {\r\n    name: \"Against Opponents Accefted by Hydro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bst\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Mappa_Mare.png'\r\n\r\nconst dmg_s = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  is: {\r\n    name: \"Elemental Reactions\",\r\n    maxStack: 2,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.is\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Memory_of_Dust.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits on opponents\",\r\n    states: {\r\n      wo: {\r\n        name: \"Hits without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"Hits with shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Otherworldly_Story.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport img from './Weapon_Pocket_Grimoire.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Prototype_Malice.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  document: [{\r\n    fields: [{//TODO: party heal\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Royal_Grimoire.png'\r\n\r\nconst crit_s = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: crit_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Sacrificial_Fragments.png'\r\n\r\n// const refinementVals = [40, 50, 60, 70, 80]\r\n// const refinementCdVals = [30, 26, 22, 19, 16]\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"After Elemental Skill\",\r\n    maxStack: 1,\r\n    stats: () => ({\r\n      cdRed_: 100\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Skyward_Atlas.png'\r\n\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  stats: stats => ({\r\n    anemo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    geo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    electro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    hydro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    pyro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    cryo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Solar_Pearl.png'\r\nconst conditionals: IConditionals = {\r\n  ss: {\r\n    name: \"Hits\",\r\n    states: {\r\n      n: {\r\n        name: \"Normal attack\",\r\n        stats: stats => ({\r\n          skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n          burst_dmg_: refinementVals[stats.weapon.refineIndex],\r\n        })\r\n      },\r\n      s: {\r\n        name: \"Skill or Burst\",\r\n        stats: stats => ({\r\n          normal_dmg_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      b: {\r\n        name: \"Both Normal & Skill/Burst\",\r\n        stats: stats => ({\r\n          skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n          burst_dmg_: refinementVals[stats.weapon.refineIndex],\r\n          normal_dmg_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ss\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","import { WeaponData } from 'pipeline'\r\nimport { allElements } from '../../../../Types/consts'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_The_Widsith.png'\r\n\r\nconst refinementAtkVals = [60, 75, 90, 105, 120]\r\nconst refinementEleDmgVals = [48, 60, 72, 84, 96]\r\nconst refinementEleMasVals = [240, 300, 360, 420, 480]\r\nconst conditionals: IConditionals = {\r\n  d: {\r\n    name: \"\",\r\n    states: {\r\n      r: {\r\n        name: \"Recitative\",\r\n        stats: stats => ({\r\n          atk_: refinementAtkVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      a: {\r\n        name: \"Aria\",\r\n        maxStack: 1,\r\n        stats: stats => Object.fromEntries(allElements.map(ele => [`${ele}_dmg_`, refinementEleDmgVals[stats.weapon.refineIndex]]))\r\n      },\r\n      i: {\r\n        name: \"Interlude\",\r\n        stats: stats => ({\r\n          eleMas: refinementEleMasVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.d\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\n\r\n// const refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,  //TODO: show this up as a conditional when in the party\r\n  document: []\r\n  // conditional: {\r\n  //   type: \"weapon\",\r\n  //   sourceKey: \"ThrillingTalesOfDragonSlayers\",\r\n  //   maxStack: 1,\r\n  //   stats: stats => ({\r\n  //     atk_: refinementVals[stats.weapon.refineIndex]\r\n  //   })\r\n  // }\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Twin_Nephrite.png'\r\n\r\nconst refinementVals = [12, 14, 16, 18, 20]\r\nconst conditionals: IConditionals = {\r\n  gt: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      moveSPD_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gt\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.787df5e4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport img from './Weapon_Wine_and_Song.png'\r\n\r\n// const refinementSprintVals = [14, 16, 18, 20, 22]\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  ws: {\r\n    name: \"After Sprint\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex],//TODO: stamine decrease for sprint\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  img,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ws\r\n  }],\r\n}\r\nexport default weapon","import ApprenticesNotes from './ApprenticesNotes'\r\nimport BlackcliffAgate from './BlackcliffAgate'\r\nimport DodocoTales from './DodocoTales'\r\nimport EmeraldOrb from './EmeraldOrb'\r\nimport EyeOfPerception from './EyeOfPerception'\r\nimport FavoniusCodex from './FavoniusCodex'\r\nimport Frostbearer from './Frostbearer'\r\nimport HakushinRing from './HakushinRing'\r\nimport LostPrayerToTheSacredWinds from './LostPrayerToTheSacredWinds'\r\nimport MagicGuide from './MagicGuide'\r\nimport MappaMare from './MappaMare'\r\nimport MemoryOfDust from './MemoryOfDust'\r\nimport OtherworldlyStory from './OtherworldlyStory'\r\nimport PocketGrimoire from './PocketGrimoire'\r\nimport PrototypeMalice from './PrototypeMalice'\r\nimport RoyalGrimoire from './RoyalGrimoire'\r\nimport SacrificialFragments from './SacrificialFragments'\r\nimport SkywardAtlas from './SkywardAtlas'\r\nimport SolarPearl from './SolarPearl'\r\nimport TheWidsith from './TheWidsith'\r\nimport ThrillingTalesOfDragonSlayers from './ThrillingTalesOfDragonSlayers'\r\nimport TwinNephrite from './TwinNephrite'\r\nimport WineAndSong from './WineAndSong'\r\nconst catalyst = {\r\n  ApprenticesNotes,\r\n  BlackcliffAgate,\r\n  DodocoTales,\r\n  EmeraldOrb,\r\n  EyeOfPerception,\r\n  FavoniusCodex,\r\n  Frostbearer,\r\n  HakushinRing,\r\n  LostPrayerToTheSacredWinds,\r\n  MagicGuide,\r\n  MappaMare,\r\n  MemoryOfDust,\r\n  OtherworldlyStory,\r\n  PocketGrimoire,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SkywardAtlas,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  WineAndSong,\r\n} as const\r\nexport default catalyst","import claymore from './Claymore'\r\nimport sword from './Sword'\r\nimport polearm from './Polearm'\r\nimport bow from './Bow'\r\nimport catalyst from './Catalyst'\r\nimport { IWeaponSheets } from '../../Types/weapon'\r\nimport { documentSectionsProcessing } from '../../Util/DocumentUtil'\r\n\r\nconst WeaponData: IWeaponSheets = {\r\n  ...sword,\r\n  ...claymore,\r\n  ...polearm,\r\n  ...bow,\r\n  ...catalyst\r\n} as const\r\nObject.values(WeaponData).forEach(weapon => weapon.document && documentSectionsProcessing(weapon.document))\r\nexport default WeaponData","import { getTalentStatKey } from \"../Build/Build\"\r\nimport { StatKey } from \"../Types/artifact\"\r\nimport { FormulaItem } from \"../Types/character\"\r\nimport { ElementKey } from \"../Types/consts\"\r\nimport { BasicStats } from \"../Types/stats\"\r\n\r\n//for basic formula in the format of \"percent/100 * s[statKey]\"\r\nexport function basicDMGFormula(percent: number, stats: BasicStats, skillKey: string, elemental?: \"physical\" | ElementKey): FormulaItem {\r\n  const val = percent / 100\r\n  const statKey = getTalentStatKey(skillKey, stats, elemental)\r\n  return [s => val * s[statKey], [statKey]]\r\n}\r\nexport function basicHealingFormula(percent: number, scaleStatKey: StatKey, flat: number = 0): FormulaItem {\r\n  const ratio = percent / 100\r\n  return [s => ((ratio * s[scaleStatKey]) + flat) * s.heal_multi, [scaleStatKey, \"heal_multi\"]]\r\n}","import ElementalData from \"../Data/ElementalData\"\r\nimport { StatKey, IArtifact, SubstatKey } from \"../Types/artifact\"\r\nimport { ArtifactSetEffects, ArtifactsBySlot, SetFilter } from \"../Types/Build\"\r\nimport { ArtifactSetKey, ElementKey, SetNum, SlotKey } from \"../Types/consts\"\r\nimport { BasicStats, BonusStats, ICalculatedStats } from \"../Types/stats\"\r\nimport { mergeStats } from \"../Util/StatUtil\"\r\nimport { deepClone } from \"../Util/Util\"\r\n\r\n/**\r\n * Remove artifacts that can never be used in optimized builds when trying to optimize for top `maxBuildsToShow` builds\r\n * @param {artifact[]} artifacts - List of artifacts of the same slot\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - The list of the set effects\r\n * @param {Set.<statKey>} significantStats - A set of stats that pruning needs to take into consideration\r\n * @param {bool} ascending - Whether the sorting is ascending or descending\r\n * @param {Set.<setKey>} alwaysAccepted - The list of artifact sets that are always included\r\n */\r\nexport function pruneArtifacts(artifacts: IArtifact[], artifactSetEffects: ArtifactSetEffects, significantStats: Set<StatKey>, maxBuildsToShow: number = 1, ascending: boolean = false, alwaysAccepted: Set<ArtifactSetKey> = new Set()): IArtifact[] {\r\n  function shouldKeepFirst(first: Dict<StatKey, number>, second: Dict<StatKey, number>, preferFirst: boolean) {\r\n    let firstBetter = Object.entries(first).some(([k, v]) => !isFinite(v) || v > (second[k] ?? 0))\r\n    let secondBetter = Object.entries(second).some(([k, v]) => !isFinite(v) || v > (first[k] ?? 0))\r\n    if (ascending) [firstBetter, secondBetter] = [secondBetter, firstBetter]\r\n    // Keep if first is strictly better, uncomparable, or equal + prefer first.\r\n    // That is, return false if second is strictly better, or equal + NOT prefer first\r\n    return firstBetter || (!secondBetter && preferFirst)\r\n  }\r\n\r\n  // Prune unused set effects. Sets with no relevant effects are regrouped to \"other\"\r\n  const prunedSetEffects: PrunedArtifactSetEffects = { \"other\": {} }\r\n  Object.entries(artifactSetEffects).forEach(([set, effect]) => {\r\n    Object.entries(effect).forEach(([num, item]) => {\r\n      const effects = Object.entries(item).filter(([key]) => significantStats.has(key as StatKey))\r\n      if (effects.length > 0) {\r\n        prunedSetEffects[set] = prunedSetEffects[set] ?? {}\r\n        prunedSetEffects[set]![num] = Object.fromEntries(effects)\r\n      }\r\n      const modifiers = item.modifiers\r\n      if (modifiers) {\r\n        // Modifiers are treated as infinite stats\r\n        prunedSetEffects[set] = prunedSetEffects[set] ?? {}\r\n        prunedSetEffects[set]![num] = prunedSetEffects[set]![num] ?? {}\r\n\r\n        Object.keys(modifiers)\r\n          .filter(key => significantStats.has(key as StatKey))\r\n          .forEach(key =>\r\n            prunedSetEffects[set]![num]![key] = Infinity\r\n          )\r\n      }\r\n    })\r\n  })\r\n\r\n  // array of artifacts, artifact stats, and set (may be \"other\")\r\n  let tmp: { artifact: IArtifact, numberOfBetterSameSetArtifacts: number, stats: Dict<StatKey, number>, set: ArtifactSetKey | \"other\" }[] = artifacts.map(artifact => {\r\n    const stats: Dict<StatKey, number> = {}, set: ArtifactSetKey | \"other\" = (artifact.setKey in prunedSetEffects || alwaysAccepted.has(artifact.setKey)) ? artifact.setKey : \"other\"\r\n    if (significantStats.has(artifact.mainStatKey as any))\r\n      stats[artifact.mainStatKey] = artifact.mainStatVal!\r\n    for (const { key, value } of artifact.substats)\r\n      if (key && significantStats.has(key as SubstatKey))\r\n        stats[key] = (stats[key] ?? 0) + value\r\n    for (const key in stats)\r\n      if (key.endsWith(\"enemyRes_\"))\r\n        stats[key as StatKey] = -stats[key as StatKey]!\r\n    return { artifact, numberOfBetterSameSetArtifacts: 0, stats, set }\r\n  })\r\n\r\n  // Compare artifacts' base stats from the same set\r\n  tmp = tmp.filter((first) => {\r\n    const { artifact: candidate, stats: candidateStats, set: candidateSet } = first\r\n    return tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) => {\r\n      if (candidateSet !== otherSet || shouldKeepFirst(candidateStats, otherStats, candidate.id! <= other.id!)) {\r\n        return true\r\n      } else {\r\n        first.numberOfBetterSameSetArtifacts += 1\r\n        return first.numberOfBetterSameSetArtifacts < maxBuildsToShow\r\n      }\r\n    })\r\n  })\r\n\r\n  // Cross-check with different sets\r\n  tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) => {\r\n    if (alwaysAccepted.has(candidate.setKey))\r\n      return true\r\n    // Possible \"additional stats\" if a build equips `candidate` on an empty slot.\r\n    let possibleStats = [...Object.values(prunedSetEffects[candidateSet]!), {}].map(c => {\r\n      const current: BonusStats = { ...candidateStats }\r\n      mergeStats(current, c)\r\n      return { stat: current, numberOfBetterArtifacts: 0 }\r\n    })\r\n    return tmp.every(({ artifact: other, stats: otherStats, set: otherSet, numberOfBetterSameSetArtifacts }) => {\r\n      if (candidateSet === otherSet) return true // Already checked same-set\r\n\r\n      // Remove possibilities that shouldn't be kept\r\n      possibleStats = possibleStats.filter(current => {\r\n        if (shouldKeepFirst(current.stat, otherStats, candidate.id! <= other.id!)) {\r\n          return true\r\n        } else {\r\n          current.numberOfBetterArtifacts += 1\r\n          return current.numberOfBetterArtifacts + numberOfBetterSameSetArtifacts < maxBuildsToShow\r\n        }\r\n      })\r\n      return possibleStats.length !== 0\r\n    })\r\n  })\r\n\r\n  return tmp.map(tmp => tmp.artifact)\r\n}\r\n\r\n/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet: Dict<ArtifactSetKey, IArtifact[]> = {}\r\n    for (const artifact of (artifactsBySlot[slotKey] ?? [])) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey]!.push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet['null']) artifactsBySet['null'].push(artifact)\r\n        else artifactsBySet['null'] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu: ArtifactsBySlot = {}, result: ArtifactsBySlot[] = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1]!.length, 1)\r\n    , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats: ICalculatedStats, artifactsBySlot: ArtifactsBySlot, artifactSetEffects: ArtifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount: Dict<ArtifactSetKey, SetNum> = {}, accu = {}\r\n  function slotPerm(index: number, stats: ICalculatedStats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    for (const artifact of artifactsBySlot[slotKey] ?? []) {\r\n      const newStats = { ...stats }\r\n\r\n      // Hand-pick costly copying\r\n      if (newStats.modifiers) newStats.modifiers = deepClone(newStats.modifiers)\r\n\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey]! -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey: SlotKey, art: IArtifact, setCount: Dict<ArtifactSetKey, SetNum>, accu: Dict<SlotKey, IArtifact>, stats: ICalculatedStats, artifactSetEffects: ArtifactSetEffects) {\r\n  const setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1 as SetNum\r\n\r\n  // Add artifact stats\r\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal!\r\n  art.substats.forEach((substat) => {\r\n    if (substat?.key in stats) stats[substat.key] += substat.value\r\n  })\r\n\r\n  // Add set effects\r\n  const setEffect = artifactSetEffects[setKey]?.[setCount[setKey]!]\r\n  setEffect && mergeStats(stats, setEffect) // TODO: This may slow down the computation\r\n}\r\n\r\n/**\r\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\r\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\r\n  * @param {*} stats - The calculated stats\r\n  * @param {*} overwriteElement - Override the hit to be the character's elemental, that is not part of infusion.\r\n  */\r\nexport function getTalentStatKey(skillKey: string, stats: BasicStats, overwriteElement?: ElementKey | \"physical\") {\r\n  const { hitMode = \"\", infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if ((Object.keys(ElementalData) as any).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\r\n  if (!overwriteElement && weaponType === \"catalyst\") overwriteElement = characterEle\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || overwriteElement) {\r\n    if (reactionMode && reactionMode.startsWith(overwriteElement || characterEle)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n    return `${overwriteElement || characterEle}_${skillKey}_${hitMode}`\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n\r\n  return `${eleKey}_${skillKey}_${hitMode}`\r\n}\r\n\r\nexport function getTalentStatKeyVariant(skillKey: string, stats: BasicStats, overwriteElement: ElementKey | \"physical\" | undefined | \"\" = \"\") {\r\n  if ((Object.keys(ElementalData) as any).includes(skillKey)) return skillKey//elemental DMG\r\n  const { infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (!overwriteElement && weaponType === \"catalyst\") overwriteElement = characterEle\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || overwriteElement) {\r\n    if (reactionMode && reactionMode.startsWith(overwriteElement || characterEle)) {\r\n      if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n      else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n    }\r\n    return overwriteElement || characterEle\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) {\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n  }\r\n  return eleKey\r\n}\r\n\r\nexport type PrunedArtifactSetEffects = Dict<ArtifactSetKey | \"other\", Dict<SetNum, Dict<StatKey, number>>>\r\n","import { DocumentSection } from \"../Types/character\";\r\nimport { fieldProcessing } from \"./FieldUtil\";\r\n\r\nexport function documentSectionsProcessing(sections: DocumentSection[]) {\r\n  sections.forEach(section => {\r\n    if (typeof section.canShow !== \"function\") section.canShow = () => true\r\n    section.fields?.forEach?.(fieldProcessing)\r\n  })\r\n}","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  heal: [100, 115, 130, 145, 160],\r\n  dmg: [200, 230, 260, 290, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalATK) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 280, 320, 360, 400]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_atk: [1.2, 1.5, 1.8, 2.1, 2.4]\r\n}\r\n\r\nconst formula: ISubFormula = {\r\n  bonus: stats => [s => s.finalHP * data.hp_atk[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n}\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [20, 25, 30, 35, 40]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(200, stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  dmg_: [20, 25, 30, 35, 40],\r\n  heal: [60, 70, 80, 90, 100]\r\n}\r\nconst formula: ISubFormula = {\r\n  regen: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalATK) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  vals: [100, 125, 150, 175, 200]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.vals[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [1, 1.25, 1.5, 1.75, 2]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [20, 25, 30, 35, 40]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [160, 200, 240, 280, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg:  [40, 55, 70, 85, 100]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_atk: [0.8, 1, 1.2, 1.4, 1.6],\r\n  hp_atk_add: [1, 1.2, 1.4, 1.6, 1.8]\r\n}\r\n\r\nconst formula: ISubFormula = {\r\n  esj: stats => [s => s.finalHP * data.hp_atk[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n  esjadd: stats => [s => s.finalHP * data.hp_atk_add[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n}\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [60, 75, 90, 105, 120]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 300, 360, 420, 480]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 100, 120, 140, 160]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  shield: [20, 23, 26, 29, 32]\r\n}\r\nconst formula: ISubFormula = {\r\n  shield: stats => {\r\n    const hpMulti = data.shield[stats.weapon.refineIndex] / 100\r\n    return [s => hpMulti * s.finalHP * (1 + s.powShield_ / 100) * 1.5, [\"finalHP\", \"powShield_\"]]\r\n  }\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [8, 10, 12, 14, 16]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 270, 300, 330, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [1, 1.25, 1.5, 1.75, 2]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [4, 4.5, 5, 5.5, 6]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [160, 200, 240, 280, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [100, 125, 150, 175, 200]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [8, 10, 12, 14, 16]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(125, stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  vals: [40, 50, 60, 70, 80]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.vals[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula"],"sourceRoot":""}