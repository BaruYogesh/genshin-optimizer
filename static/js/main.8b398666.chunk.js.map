{"version":3,"sources":["i18n.ts","Artifact/ArtifactSheet.tsx","Character/CharacterSheet.ts","Util/KeyPathUtil.ts","Weapon/WeaponSheet.tsx","Components/StatIcon.tsx","Types/consts.ts","StatConstants.ts","Settings/SettingsDisplay.tsx","Components/LoadingCard.tsx","App.tsx","reportWebVitals.ts","index.tsx","Stat.tsx","Data/CharacterData.ts","StatData.ts","Database/utils.ts","Database/DataManager.ts","Database/migration.ts","Database/Database.ts","Data/ArtifactData.ts","Artifact/Artifact.ts","Util/StatUtil.ts","Database/validation.ts","faIcons/index.ts","Types/artifact.ts","Formula.ts","Components/Translate.tsx","Data/ElementalData.ts","Util/ReactUtil.ts","Util/Util.ts","Util/FieldUtil.tsx","Conditional/Conditional.ts"],"names":["languageCodeList","i18n","use","Backend","initReactI18next","LanguageDetector","init","debug","process","fallbackLng","ns","defaultNS","load","returnEmptyString","backend","loadPath","interpolation","escapeValue","artifactImport","then","imp","Object","fromEntries","entries","default","map","set","value","ArtifactSheet","promiseSheets","allArtifactSets","sheets","tr","setKey","strKey","key18","data","key","getSlotName","slotKey","getSlotDesc","setEffectDesc","setNum","setEffectDocument","setEffects","document","this","name","rarity","deepClone","allSlotKeys","icons","conditionals","num","stats","evalIfFunc","grouped","forEach","sheet","Math","max","push","filter","charStats","setToSlots","artifactSetEffect","slots","parseInt","length","mergeStats","keys","expCurve","expCurveJSON","charImport","a","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","getBase","statKey","level","ascensionLvl","baseStat","baseStatCurve","ascensions","props","getSpecializedStat","find","k","getSpecializedStatVal","Stat","getStatUnit","isMelee","weaponTypeKey","getTalent","eleKey","talent","talents","getTalentOfKey","talentKey","getTalentStats","split","constell","constellation","getTalentStatsAll","statsArr","talentStats","cardImg","thumbImg","star","elementKey","undefined","constellationName","get","getAll","KeyPath","prefix","path","Proxy","partial","symbol","toString","resolve","base","reduce","current","weaponImport","weaponKey","WeaponSheet","loadWeaponSheet","allWeaponKeys","weaponSheet","passiveDescription","getSubStatKey","weapon","refineIndex","build","getMainStatValue","ascension","mainStat","type","curve","addStats","getSubStatValue","subStat","weaponType","img","getWeaponsOfType","getLevelString","ascensionMaxLevel","elefamap","anemo","faAnemo","geo","faGeo","electro","faElectro","hydro","faHydro","pyro","faPyro","cryo","faCryo","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","critRate_","faDice","critDMG_","faDiceD20","enerRech_","faSync","heal_","faFirstAid","allElements","flatMap","ele","StatIconEle","icon","className","allHitModes","allReactionModes","allRarities","allArtifactRarities","allWeaponTypeKeys","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","elemental","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","multi","variants","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","SettingsDisplay","t","useTranslation","useForceUpdate","forceUpdate","ReactGA","pageview","bg","text","Header","i18nKey","Body","LanguageCard","DownloadCard","UploadCard","variant","LanguageDropdown","nativeLanguages","onSetLanguage","lang","changeLanguage","currentLang","languages","Toggle","language","Menu","Item","onClick","copyToClipboard","navigator","clipboard","writeText","JSON","stringify","database","exportStorage","alert","numChar","_getCharKeys","numArt","_getArts","downloadValid","Boolean","xs","md","count","Footer","disabled","JSONstr","filename","contentType","window","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","confirm","clear","deleteDatabase","file","cb","reader","FileReader","onload","result","readAsText","dataObj","useState","setdata","setfilename","error","parse","characterDatabase","artifactDatabase","e","dataValid","File","label","onChange","files","readFile","custom","accept","style","minHeight","obj","importStorage","replaceDatabase","LoadingCard","useSuspense","ready","Card","Trans","Spinner","animation","Home","lazy","ArtifactDisplay","CharacterDisplay","BuildDisplay","Planner","FlexDisplay","AppInner","id","Navbar","expand","Brand","as","Link","to","aria-controls","Collapse","Nav","rel","outboundLink","faPaypal","faPatreon","faDiscord","faCog","fallback","Container","component","Row","Col","values","version","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","getElementById","Error","getStatName","defVal","htmlStatsData","StatData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","unit","fixedUnit","printStat","premod","f","getPrintableFormulaStatKeyList","statList","modifiers","Set","FormulaText","has","ModFormula","formula","usePromise","Formula","field","formulaText","FormulaDisplay","modifierText","join","options","statName","statUnit","printValue","toFixed","o","enemyLevel_multi","heal_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_hit","move","res","reaction","baseMulti","milestoneLevels","characterStatBase","stamina","flat","const","characterEle","characterLevel","weaponATK","dmg_","critHit_base_multi","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaSprintDec_","staminaGlidingDec_","staminaChargedDec_","transformative_level_multi","crystalize_multi","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","s","ElementToReactionKeys","physical","dendro","PreprocessFormulas","dependencyKeys","initialStats","preModFormulaList","getStage","x","modFormula","computeModifier","includes","postModFormulaList","func","modStats","moveName","clamp","eleName","opt","typeName","getDBVersion","storage","getItem","setDBVersion","setItem","string","removeItem","save","remove","DataManager","listeners","anyListeners","callback","listener","allKeys","migrate","report","migrated","state","Array","isArray","elementalFilter","weaponFilter","startsWith","buildSetting","artifactsAssumeFull","ascending","setFilters","useLockedArts","buildSettings","mainStatAssumptionLevel","mainStatKeys","migrateV2ToV3","traveler","characterKey","requireUpdate","location","migrateV3ToV4","levelKey","lvla","findIndex","maxLevel","addAsc","baseStatOverrides","migrateV4ToV5","character","migrateV5ToV6","Database","arts","chars","flex","validateDBCharacter","validateFlexCharacter","equippedArtifacts","slot","validateDBArtifact","artifact","validateFlexArtifact","art","extractFlexArtifact","char","follow","followAny","newChar","oldChar","saveChar","newArt","candidate","getRandomInt","size","generateRandomArtID","oldArt","lock","saveArt","artKey","newCharKey","oldCharKey","oldArtKey","newArts","oldArts","setLocation","extractFlexCharacter","artifactDisplay","characterDisplay","buildsDisplay","newDatabase","removeAll","shared","localStorage","ArtifactSubstatRollData","1","low","high","numUpgrades","2","3","4","5","ArtifactSlotsData","flower","plume","sands","goblet","circlet","Artifact","substats","numStars","totalRolls","totalPossibleRolls","sum","rolls","efficiency","rollsRemaining","emptySlotCount","matchedSlotCount","unusedFilterCount","currentEfficiency","maxEfficiency","maxSubstatRollEfficiency","slotName","slotMainStats","setEffectsObjs","artifactSheets","setObj","setEffect","setNumKey","entry","setStats","Conditional","parseConditionalValues","conditionalValues","conditional","conditionalValue","condStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","endsWith","ArtifactMainStatsData","mainStatValue","rollInfo","ArtifactStarsData","maxSubstatValues","substatKey","ArtifactSubstatsData","allSubstats","substat","getSubstatKeys","ceil","getSubstatRollData","v","getSubstatRolls","substatValue","rollData","ArtifactSubstatLookupTable","round","roll","i","getSubstatEfficiency","b","clampPercent","artifacts","val","paths","mainStatKey","min","mainStatVal","errors","validated","allSubstatRolls","total","index","substatRolls","some","minimum","floor","remaining","maximum","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accu","allMainStatKeys","_","validateSubstats","hitMode","reactionMode","talentLevelKeys","infusionAura","maxLvl","auto","statFilters","optimizationTarget","useEquippedArts","iconName","faDendro","formulaImport","formulas","stat","modifier","objs","getCurrent","objPathValue","components","Translate","children","textKey","textObj","returnObjects","T","TransWrapper","Para","li","parent","trans","stateDirty","update","useCallback","promise","dependencies","setRes","useEffect","pending","console","getRandomElementFromArray","array","random","getRandomIntInclusive","loadFromLocalStorage","saveToLocalStorage","strPadLeft","pad","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","prop","layeredAssignment","arr","deletePropPath","tempPath","lastKey","objClearEmpties","crawlObject","validate","arg","statsToFields","statVals","statVal","canShow","fixed","fieldProcessing","processed","Promise","all","addConditional","source","findConditionals","condKey","states","maxStack","fields","stacks","stateKey","conditionalStats","c"],"mappings":"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","file":"static/js/main.8b398666.chunk.js","sourcesContent":["import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n// Probably a way to auto-populate this.\r\nexport const languageCodeList = [\r\n  \"chs\",\r\n  \"cht\",\r\n  \"de\",\r\n  \"en\",\r\n  \"es\",\r\n  \"fr\",\r\n  \"id\",\r\n  \"ja\",\r\n  \"ko\",\r\n  \"pt\",\r\n  \"ru\",\r\n  \"th\",\r\n  \"vi\"\r\n];\r\n\r\n/**\r\n * @see: https://www.i18next.com/translation-function/essentials\r\n * @see: https://react.i18next.com/latest/using-with-hooks\r\n */\r\ni18n\r\n  // load translation using http ->\r\n  // see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // Configure localization.\r\n  .init({\r\n    debug: process.env.NODE_ENV === \"development\",\r\n    // Use English strings by default, if the current language does not include\r\n    // the specified string.\r\n    fallbackLng: 'en',\r\n    // fallbackLng: 'dev', // Switch to this to force the fallback value on missing strings.\r\n\r\n    // List all translation namespaces.\r\n    ns: [\r\n      \"artifact\",\r\n      \"home\",\r\n      \"languages\",\r\n      \"settings\",\r\n      \"ui\",\r\n    ],\r\n    // Specify the default namespace.\r\n    defaultNS: \"ui\",\r\n\r\n    // Only use the language code, skipping the region code.\r\n    // For example, en-US becomes simply en.\r\n    load: 'languageOnly',\r\n\r\n    // allow an empty value to count as invalid (by default is true)\r\n    returnEmptyString: false,\r\n\r\n    backend: process.env.NODE_ENV === \"development\" ? {\r\n      // Path to load localization data from.\r\n      loadPath: 'genshin-optimizer/locales/{{lng}}/{{ns}}.json',\r\n    } : {\r\n      // Path to load localization data from.\r\n      loadPath: 'locales/{{lng}}/{{ns}}.json',\r\n    },\r\n    interpolation: {\r\n      escapeValue: false,//react does interlopation already\r\n    }\r\n  });\r\n\r\nexport default i18n;","import { Translate } from \"../Components/Translate\";\r\nimport { IArtifactSheet, SetEffectEntry } from \"../Types/artifact\";\r\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { BonusStats, ICalculatedStats } from \"../Types/stats\";\r\nimport { mergeStats } from \"../Util/StatUtil\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value, set)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  readonly key: ArtifactSetKey\r\n  constructor(data: IArtifactSheet, setKey: ArtifactSetKey) {\r\n    this.data = data\r\n    this.key = setKey\r\n  }\r\n\r\n  get name() { return tr(this.key, \"setName\") }\r\n\r\n  //This is only for OCR, because we only scan in english right now.\r\n  get nameRaw(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slots(): SlotKey[] {\r\n    switch (this.key) {\r\n      case \"PrayersForDestiny\":\r\n      case \"PrayersForIllumination\":\r\n      case \"PrayersForWisdom\":\r\n      case \"PrayersToSpringtime\": return [\"circlet\"]\r\n      default: return deepClone(allSlotKeys) as any\r\n    }\r\n  }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\r\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): BonusStats {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\r\n  setEffectDocument = (setNum: SetNum) => this.data.setEffects[setNum]?.document\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<Rarity, ArtifactSetKey[]> {\r\n    const grouped: Dict<Rarity, ArtifactSetKey[]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push(key)\r\n      else grouped[rarity] = [key]\r\n    })\r\n    return grouped\r\n  }\r\n\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): BonusStats {\r\n    const artifactSetEffect: BonusStats = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && mergeStats(artifactSetEffect, evalIfFunc(value.stats, charStats))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import { ICharacterSheet, TalentSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey } from \"../Types/consts\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport { CharacterExpCurveData } from \"pipeline\";\r\nimport expCurveJSON from './expCurve_gen.json'\r\nimport Stat from '../Stat'\r\n\r\nconst expCurve = expCurveJSON as CharacterExpCurveData\r\n\r\nexport const charImport = import('../Data/Characters').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>\r\n})\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | \"\"): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return \"elementKey\" in this.sheet ? this.sheet.elementKey : undefined }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get isAutoElemental() { return this.sheet.weaponTypeKey === \"catalyst\" }\r\n  getBase = (statKey: \"hp\" | \"def\" | \"atk\", level = 1, ascensionLvl = 0) =>\r\n    this.sheet.baseStat[statKey] * (expCurve[this.sheet.baseStatCurve[statKey] as any])[level] + this.sheet.ascensions[ascensionLvl].props[statKey]\r\n  getSpecializedStat = (ascensionLvl = 0): string | undefined => Object.keys(this.sheet.ascensions[ascensionLvl].props).find(k => k !== \"hp\" && k !== \"def\" && k !== \"atk\")\r\n  getSpecializedStatVal = (ascensionLvl = 0): number => {\r\n    const statKey = this.getSpecializedStat(ascensionLvl)\r\n    if (!statKey) return 0\r\n    const value = this.sheet.ascensions[ascensionLvl].props[statKey] ?? 0\r\n    if (Stat.getStatUnit(statKey) === \"%\") return value * 100\r\n    return value\r\n  }\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (eleKey: ElementKey = \"anemo\"): TalentSheet | undefined => {\r\n    if (\"talent\" in this.sheet) return this.sheet.talent\r\n    else return this.sheet.talents[eleKey]\r\n  }\r\n  getTalentOfKey = (talentKey: string, eleKey: ElementKey = \"anemo\") => this.getTalent(eleKey)?.sheets[talentKey]\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalentOfKey(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats, eleKey: ElementKey = \"anemo\") => {\r\n    const talents = this.getTalent(eleKey)?.sheets\r\n    if (!talents) return []\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n}\r\n","export function KeyPath<Base, Value = Base>(prefix: string[] = []): PartialPath<Base, Value> {\r\n  const path = () => path.keys\r\n  path.keys = prefix\r\n\r\n  return new Proxy(path, {\r\n    get: (partial, symbol) => KeyPath([...partial.keys, symbol.toString()])\r\n  }) as any\r\n}\r\nexport function resolve<Base, Value>(base: Base, path: Path<Base, Value>): Value {\r\n  return path.reduce((current, key) => current?.[key], base as any)\r\n}\r\nexport function assign<Base, Value>(base: Base, path: Path<Base, Value>, value: Value) {\r\n  path.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, base as any)\r\n}\r\n\r\ntype PartialPath<Base, Value> = {\r\n  [key in keyof Value]: PartialPath<Base, Value[key]> & (() => Path<Base, Value>)\r\n}\r\n// eslint-disable-next-line\r\nexport type Path<Base, Value> = string[]","import { WeaponExpCurveData } from 'pipeline';\r\nimport { Translate } from '../Components/Translate'\r\nimport { ascensionMaxLevel } from '../Data/CharacterData';\r\nimport Stat from '../Stat';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\nimport expCurveJSON from './expCurve_gen.json'\r\nconst expCurve = expCurveJSON as WeaponExpCurveData\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return Object.fromEntries(Object.entries(imp.default).map(([weaponKey, value]) =>\r\n    [weaponKey, new WeaponSheet(weaponKey, value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>\r\n})\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  key: WeaponKey;\r\n  constructor(key: string, weaponSheet: IWeaponSheet) {\r\n    this.key = key as WeaponKey\r\n    this.sheet = weaponSheet\r\n  }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICharacter[\"weapon\"]): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  //when there is no substat, assume there is no passive. \r\n  get passiveName() { return this.getSubStatKey() ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (stats: ICalculatedStats) => this.getSubStatKey() ? this.tr(`passiveDescription.${stats.weapon.refineIndex}`) : \"\"\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  stats = (build: ICalculatedStats): object | undefined => evalIfFunc(this.sheet.stats, build) || {}\r\n  get conditionals() { return this.sheet.conditionals }\r\n  get document() { return this.sheet.document }\r\n  getMainStatValue = (level = 1, ascension = 0) => {\r\n    const { type, base, curve } = this.sheet.mainStat\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatValue = (level = 1, ascension = 0) => {\r\n    if (!this.sheet.subStat) return 0\r\n    let { type, base, curve } = this.sheet.subStat\r\n    if (Stat.getStatUnit(type) === \"%\") base = base * 100\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatKey = () => this.sheet.subStat?.type ?? \"\"\r\n}\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { allElements } from '../Types/consts'\r\n\r\nimport { faAnemo, faGeo, faElectro, faHydro, faPyro, faCryo } from '../faIcons'\r\nconst elefamap = {\r\n  anemo: faAnemo,\r\n  geo: faGeo,\r\n  electro: faElectro,\r\n  hydro: faHydro,\r\n  pyro: faPyro,\r\n  cryo: faCryo,\r\n}\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n\r\n  ...Object.fromEntries(allElements.flatMap(ele => [[`${ele}_dmg_`, elefamap[ele]], [`${ele}_res_`, elefamap[ele]]]))\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nexport const allHitModes = [\"hit\", \"avgHit\", \"critHit\"] as const\r\nexport const allReactionModes = [\"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",] as const\r\nexport const allArtifactSetCount = [1, 2, 3, 4, 5] as const\r\nexport const allRarities = [5, 4, 3, 2, 1] as const\r\nexport const allArtifactRarities = [5, 4, 3] as const\r\nexport const allSlotKeys = [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"] as const\r\nexport const allElements = ['anemo', 'geo', 'electro', 'hydro', 'pyro', 'cryo'] as const\r\nexport const allWeaponTypeKeys = ['sword', 'claymore', 'polearm', 'bow', 'catalyst'] as const\r\nexport const allArtifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\",\r\n  \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\",\r\n  \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\",\r\n  \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\",\r\n  \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\",\r\n  \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\",\r\n  \"WanderersTroupe\", \"TenacityOfTheMillelith\", \"PaleFlame\", \"EmblemOfSeveredFate\", \"ShimenawasReminiscence\",\r\n] as const\r\nexport const allCharacterKeys = [\r\n  \"albedo\", \"amber\", \"barbara\", \"beidou\", \"bennett\", \"chongyun\", \"diluc\", \"diona\", \"fischl\", \"ganyu\",\r\n  \"hutao\", \"jean\", \"kaeya\", \"keqing\", \"klee\", \"lisa\", \"mona\", \"ningguang\", \"noelle\", \"qiqi\",\r\n  \"razor\", \"sucrose\", \"tartaglia\", \"traveler\", \"traveler\", \"venti\", \"xiao\", \"xiangling\", \"xingqiu\", \"xinyan\",\r\n  \"zhongli\", \"rosaria\", \"yanfei\", \"eula\", \"kaedeharakazuha\", \"kamisatoayaka\", \"sayu\", \"yoimiya\"\r\n] as const\r\nexport const allWeaponKeys = [\r\n  \"DullBlade\", \"SilverSword\", \"CoolSteel\", \"DarkIronSword\", \"FilletBlade\", \"HarbingerOfDawn\", \"SkyriderSword\",\r\n  \"TravelersHandySword\", \"BlackcliffLongsword\", \"FavoniusSword\", \"IronSting\", \"LionsRoar\", \"PrimordialJadeCutter\",\r\n  \"PrototypeRancour\", \"RoyalLongsword\", \"SacrificialSword\", \"TheAlleyFlash\", \"TheBlackSword\", \"TheFlute\",\r\n  \"SwordOfDescension\", \"FesteringDesire\", \"AquilaFavonia\", \"SkywardBlade\", \"SummitShaper\", \"WasterGreatsword\",\r\n  \"OldMercsPal\", \"BloodtaintedGreatsword\", \"DebateClub\", \"FerrousShadow\", \"Quartz\", \"SkyriderGreatsword\",\r\n  \"WhiteIronGreatsword\", \"BlackcliffSlasher\", \"FavoniusGreatsword\", \"LithicBlade\", \"PrototypeAminus\", \"Rainslasher\",\r\n  \"RoyalGreatsword\", \"SerpentSpine\", \"TheBell\", \"Whiteblind\", \"SacrificialGreatsword\", \"SnowTombedStarsilver\",\r\n  \"SkywardPride\", \"WolfsGravestone\", \"TheUnforged\", \"BeginnersProtector\", \"IronPoint\", \"BlackTassel\", \"Halberd\",\r\n  \"WhiteTassel\", \"BlackcliffPole\", \"CrescentPike\", \"Deathmatch\", \"DragonsBane\", \"LithicSpear\", \"PrototypeGrudge\",\r\n  \"FavoniusLance\", \"RoyalSpear\", \"DragonspineSpear\", \"VortexVanquisher\", \"PrimordialJadeWingedSpear\", \"StaffOfHoma\",\r\n  \"SkywardSpine\", \"HuntersBow\", \"SeasonedHuntersBow\", \"EbonyBow\", \"Messenger\", \"RavenBow\", \"RecurveBow\",\r\n  \"SharpshootersOath\", \"Slingshot\", \"TheStringless\", \"AlleyHunter\", \"BlackcliffWarbow\", \"CompoundBow\",\r\n  \"FavoniusWarbow\", \"PrototypeCrescent\", \"RoyalBow\", \"Rust\", \"SacrificialBow\", \"TheViridescentHunt\", \"SkywardHarp\",\r\n  \"AmosBow\", \"ElegyForTheEnd\", \"WindblumeOde\", \"ApprenticesNotes\", \"PocketGrimoire\", \"DullBlade\", \"EmeraldOrb\", //TODO: AmberCatalyst => DullBlade, replace with another weaponKey\r\n  \"MagicGuide\", \"OtherworldlyStory\", \"ThrillingTalesOfDragonSlayers\", \"TwinNephrite\", \"BlackcliffAgate\",\r\n  \"FavoniusCodex\", \"MappaMare\", \"PrototypeMalice\", \"RoyalGrimoire\", \"SacrificialFragments\", \"SolarPearl\", \"TheWidsith\",\r\n  \"WineAndSong\", \"EyeOfPerception\", \"Frostbearer\", \"LostPrayerToTheSacredWinds\", \"SkywardAtlas\", \"MemoryOfDust\",\r\n  \"SongOfBrokenPines\", \"DodocoTales\", \"MitternachtsWaltz\", \"FreedomSworn\", \"AmenomaKageuchi\", \"MistsplitterReforged\",\r\n  \"KatsuragikiriNagamasa\", \"KitainCrossSpear\", \"ThunderingPulse\", \"Hamayumi\", \"HakushinRing\",\r\n] as const\r\nexport const characterSpecializedStatKeys = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"] as const\r\n\r\nexport type HitModeKey = typeof allHitModes[number]\r\nexport type ReactionModeKey = typeof allReactionModes[number]\r\nexport type SetNum = typeof allArtifactSetCount[number]\r\nexport type Rarity = typeof allRarities[number]\r\nexport type SlotKey = typeof allSlotKeys[number]\r\nexport type ElementKey = typeof allElements[number]\r\nexport type ArtifactSetKey = typeof allArtifactSets[number]\r\nexport type CharacterKey = typeof allCharacterKeys[number]\r\nexport type WeaponKey = typeof allWeaponKeys[number]\r\nexport type WeaponTypeKey = typeof allWeaponTypeKeys[number]\r\nexport type CharacterSpecializedStatKey = typeof characterSpecializedStatKeys[number]","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\n\r\n// https://github.com/Dimbreath/GenshinData/blob/72c9112a7c5e8e5014f61009a1a2764e266aeab7/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//   or if the permalink is dead,\r\n// https://github.com/Dimbreath/GenshinData/blob/master/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//\r\n// PlayerElementLevelCo\r\nexport const transformativeReactionLevelMultipliers = [-1.0, // lvl 0\r\n  17.165606, 18.535048, 19.904854, 21.274902, 22.6454, 24.649612, 26.640642, 28.868587, 31.36768, 34.143345, 37.201, 40.66, 44.446667, 48.56352, 53.74848, 59.081898, 64.420044, 69.72446, 75.12314, 80.58478, 86.11203, 91.70374, 97.24463, 102.812645, 108.40956, 113.20169, 118.102905, 122.97932, 129.72733, 136.29291, 142.67085, 149.02902, 155.41699, 161.8255, 169.10631, 176.51808, 184.07274, 191.70952, 199.55692, 207.38205, 215.3989, 224.16566, 233.50217, 243.35057, 256.06308, 268.5435, 281.52606, 295.01364, 309.0672, 323.6016, 336.75754, 350.5303, 364.4827, 378.61917, 398.6004, 416.39825, 434.387, 452.95105, 472.60623, 492.8849, 513.56854, 539.1032, 565.51056, 592.53876, 624.4434, 651.47015, 679.4968, 707.79407, 736.67145, 765.64026, 794.7734, 824.67737, 851.1578, 877.74207, 914.2291, 946.74677, 979.4114, 1011.223, 1044.7917, 1077.4437, 1109.9976, 1142.9766, 1176.3695, 1210.1844, 1253.8357, 1288.9528, 1325.4841, 1363.4569, 1405.0974, 1446.8535]\r\n// PlayerShieldLevelCo\r\nexport const crystalizeLevelMultipliers = [-1.0, // lvl 0\r\n  91.1791, 98.707664, 106.23622, 113.76477, 121.29332, 128.82188, 136.35042, 143.87898, 151.40752, 158.93608, 169.99149, 181.07625, 192.19037, 204.0482, 215.939, 227.86275, 247.68594, 267.5421, 287.4312, 303.82642, 320.22522, 336.62762, 352.31927, 368.01093, 383.70255, 394.43237, 405.18146, 415.94992, 426.73764, 437.5447, 450.6, 463.7003, 476.84558, 491.1275, 502.55457, 514.0121, 531.4096, 549.9796, 568.5849, 584.9965, 605.67035, 626.3862, 646.0523, 665.7556, 685.4961, 700.8394, 723.3331, 745.8653, 768.4357, 786.79193, 809.5388, 832.32904, 855.16266, 878.0396, 899.4848, 919.362, 946.0396, 974.7642, 1003.5786, 1030.077, 1056.635, 1085.2463, 1113.9244, 1149.2587, 1178.0648, 1200.2238, 1227.6603, 1257.243, 1284.9174, 1314.7529, 1342.6652, 1372.7524, 1396.321, 1427.3124, 1458.3745, 1482.3358, 1511.9109, 1541.5493, 1569.1537, 1596.8143, 1622.4197, 1648.074, 1666.3761, 1684.6782, 1702.9803, 1726.1047, 1754.6715, 1785.8666, 1817.1375, 1851.0603]\r\n","import { useState } from \"react\"\r\nimport { Alert, Badge, Button, Card, Col, Container, Dropdown, Form, Row } from \"react-bootstrap\"\r\nimport ReactGA from 'react-ga'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport { database } from \"../Database/Database\"\r\nimport { languageCodeList } from \"../i18n\"\r\nimport { useForceUpdate } from \"../Util/ReactUtil\"\r\n\r\nexport default function SettingsDisplay() {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const [, forceUpdate] = useForceUpdate()\r\n  ReactGA.pageview('/setting')\r\n\r\n  return <Container>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n      <Card.Header><Trans t={t} i18nKey=\"title\" /></Card.Header>\r\n      <Card.Body>\r\n        <LanguageCard />\r\n        <DownloadCard forceUpdate={forceUpdate} />\r\n        <UploadCard forceUpdate={forceUpdate} />\r\n      </Card.Body>\r\n    </Card>\r\n  </Container >\r\n}\r\n\r\nfunction LanguageCard() {\r\n  const { t } = useTranslation();\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header>{t(\"settings:languageCard.selectLanguage\")} <Badge variant=\"warning\">{t(\"ui:underConstruction\")}</Badge></Card.Header>\r\n    <Card.Body>\r\n      <LanguageDropdown />\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nconst nativeLanguages = {\r\n  \"chs\": \"中文 正体字\",\r\n  \"cht\": \"中文 繁體字\",\r\n  \"de\": \"Deutsch\",\r\n  \"en\": \"English\",\r\n  \"es\": \"español\",\r\n  \"fr\": \"français\",\r\n  \"id\": \"Bahasa Indonesia\",\r\n  \"ja\": \"日本語\",\r\n  \"ko\": \"한국어\",\r\n  \"pt\": \"Português\",\r\n  \"ru\": \"Русский язык\",\r\n  \"th\": \"ภาษาไทย\",\r\n  \"vi\": \"Tiếng Việt\"\r\n}\r\nexport function LanguageDropdown() {\r\n  const { t, i18n } = useTranslation([\"ui\", \"settings\"]);\r\n  const onSetLanguage = (lang) => () => i18n.changeLanguage(lang);\r\n  const currentLang = i18n.languages[0];\r\n  return <Dropdown className=\"flex-grow-1 mb-2\">\r\n    <Dropdown.Toggle className=\"w-100\" variant=\"primary\">\r\n      {t('settings:languageCard.languageFormat', { language: t(`languages:${currentLang}`) })}\r\n    </Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {languageCodeList.map((lang) => <Dropdown.Item key={lang} onClick={onSetLanguage(lang)}><Trans i18nKey={`languages:${lang}`} />{lang !== currentLang ? ` (${nativeLanguages[lang]})` : \"\"}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\nfunction download(JSONstr, filename = \"data.json\") {\r\n  const contentType = \"application/json;charset=utf-8\"\r\n  if (window?.navigator?.msSaveOrOpenBlob as any) { // TODO: Function is always defined, do we want to call it instead?\r\n    const blob = new Blob([decodeURIComponent(encodeURI(JSONstr))], { type: contentType })\r\n    navigator.msSaveOrOpenBlob(blob, filename)\r\n  } else {\r\n    const a = document.createElement('a');\r\n    a.download = filename\r\n    a.href = `data:${contentType},${encodeURIComponent(JSONstr)}`\r\n    a.target = \"_blank\"\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n  }\r\n}\r\n\r\nfunction deleteDatabase(t) {\r\n  if (!window.confirm(t(\"settings:dialog.delete-database\"))) return\r\n  database.clear()\r\n}\r\nfunction copyToClipboard() {\r\n  navigator.clipboard.writeText(JSON.stringify(database.exportStorage()))\r\n  alert(\"Copied database to clipboard.\")\r\n}\r\nfunction DownloadCard({ forceUpdate }) {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const numChar = database._getCharKeys().length\r\n  const numArt = database._getArts().length\r\n  const downloadValid = Boolean(numChar || numArt)\r\n  const deleteDB = () => {\r\n    deleteDatabase(t);\r\n    forceUpdate()\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header><Trans t={t} i18nKey=\"downloadCard.databaseDownload\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"downloadCard.charsStored\" count={numChar}><b>{{ count: numChar }}</b> Characters Stored</Trans></h6></Col>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"downloadCard.artisStored\" count={numArt}><b>{{ count: numArt }}</b> Artifacts Stored</Trans></h6></Col>\r\n      </Row>\r\n      <small><Trans t={t} i18nKey=\"downloadCard.databaseDisclaimer\" /></small>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Row>\r\n        <Col xs=\"auto\"><Button disabled={!downloadValid} onClick={() => download(JSON.stringify(database.exportStorage()))}><Trans t={t} i18nKey=\"downloadCard.button.download\" /></Button></Col>\r\n        <Col ><Button disabled={!downloadValid} variant=\"info\" onClick={copyToClipboard}><Trans t={t} i18nKey=\"downloadCard.button.copy\" /></Button></Col>\r\n        <Col xs=\"auto\"><Button disabled={!downloadValid} variant=\"danger\" onClick={deleteDB} ><Trans t={t} i18nKey=\"downloadCard.button.delete\" /></Button></Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>\r\n}\r\nasync function readFile(file, cb) {\r\n  if (!file) return\r\n  const reader = new FileReader()\r\n  reader.onload = () => {\r\n    cb(reader.result)\r\n  }\r\n  reader.readAsText(file)\r\n}\r\nfunction replaceDatabase(obj, cb = () => { }) {\r\n  if (!window.confirm(\"Are you sure you want to replace your database? All existing characters and artifacts will be deleted before replacement.\")) return\r\n  database.importStorage(obj)\r\n  cb()\r\n}\r\nfunction UploadCard({ forceUpdate }) {\r\n  const { t } = useTranslation([\"ui\", \"settings\"]);\r\n  const [data, setdata] = useState(\"\")\r\n  const [filename, setfilename] = useState(\"\")\r\n  let error = \"\"\r\n  let numChar, numArt, dataObj\r\n  if (data) {\r\n    try {\r\n      dataObj = JSON.parse(data)\r\n      const { characterDatabase, artifactDatabase } = dataObj\r\n      numChar = Object.keys(characterDatabase).length\r\n      numArt = Object.keys(artifactDatabase).length\r\n    } catch (e) {\r\n      error = `Invalid JSON: ${e}`\r\n    }\r\n  }\r\n  const dataValid = Boolean(numChar || numArt)\r\n  const replaceDB = () => {\r\n    replaceDatabase(dataObj)\r\n    setdata(\"\")\r\n    setfilename(\"\")\r\n    forceUpdate()\r\n  }\r\n  const onUpload = e => {\r\n    const file = e.target.files[0]\r\n    e.target.value = null//reset the value so the same file can be uploaded again...\r\n    if (file) setfilename(file.name)\r\n    readFile(file, setdata)\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header><Trans t={t} i18nKey=\"settings:uploadCard.title\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Form.File\r\n          className=\"mb-2\"\r\n          label={filename ? filename : <Trans t={t} i18nKey=\"settings:uploadCard.hint\" />}\r\n          onChange={onUpload}\r\n          custom\r\n          accept=\".json\"\r\n        />\r\n        <h6><Trans t={t} i18nKey=\"settings:uploadCard.hintPaste\" /></h6>\r\n        <textarea className=\"w-100 text-monospace\" value={data} onChange={e => setdata(e.target.value)} style={{ minHeight: \"10em\" }} />\r\n      </Row>\r\n      {dataValid && <Row>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"settings:uploadCard.numChar\" /> <b>{numChar}</b></h6></Col>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"settings:uploadCard.numArt\" /> <b>{numArt}</b></h6></Col>\r\n      </Row>}\r\n      {Boolean(data && (error || !dataValid)) && <Alert variant=\"danger\">{error ? error : \"Unable to parse character & artifact data from file.\"}</Alert>}\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Button variant={dataValid ? \"success\" : \"danger\"} disabled={!dataValid} onClick={replaceDB}><Trans t={t} i18nKey=\"settings:uploadCard.replaceDatabase\" /></Button>\r\n    </Card.Footer>\r\n  </Card>\r\n}","import { Card, Spinner } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nexport default function LoadingCard() {\r\n  const { t, ready } = useTranslation(\"ui\", { useSuspense: false });\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n    <Card.Body>\r\n      <h3 className=\"text-center\">{ready ? <Trans t={t} i18nKey=\"ui:loading\" /> : \"Loading...\"}<Spinner animation=\"border\" variant=\"primary\" /></h3>\r\n    </Card.Body>\r\n  </Card>\r\n}","import { faDiscord, faPatreon, faPaypal } from '@fortawesome/free-brands-svg-icons';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ReactGA from 'react-ga';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { HashRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { version } from \"../package.json\";\r\nimport './App.scss';\r\nimport './Assets/Image.scss';\r\nimport LoadingCard from './Components/LoadingCard';\r\nimport './Database/Database';\r\nimport './i18n';\r\nimport { LanguageDropdown } from './Settings/SettingsDisplay';\r\n\r\nconst Home = lazy(() => import('./Home/HomeDisplay'))\r\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\r\nconst CharacterDisplay = lazy(() => import('./Character/CharacterDisplay'))\r\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\r\nconst Planner = lazy(() => import('./Planner/PlannerDisplay'))\r\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\r\nconst FlexDisplay = lazy(() => import('./FlexPage/FlexDisplay'))\r\nconst SettingsDisplay = lazy(() => import('./Settings/SettingsDisplay'))\r\n\r\nfunction App() {\r\n  return <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n    <AppInner />\r\n  </Suspense>\r\n}\r\nfunction AppInner() {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <HashRouter>\r\n    <div className=\"h-100 d-flex flex-column\" id=\"mainContainer\">\r\n      <div id=\"content\" className=\"flex-grow-1\">\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand as={Link} to=\"/\"><Trans t={t} i18nKey=\"pageTitle\">Genshin Optimizer</Trans></Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link as={Link} to=\"/artifact\"><Trans t={t} i18nKey=\"ui:tabs.artifacts\">Artifacts</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/character\"><Trans t={t} i18nKey=\"ui:tabs.characters\">Character</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/build\"><Trans t={t} i18nKey=\"ui:tabs.builds\">Builds</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/tools\"><Trans t={t} i18nKey=\"ui:tabs.tools\">Tools</Trans></Nav.Link>\r\n              {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/test\">TEST</Nav.Link>}\r\n            </Nav>\r\n            <Nav>\r\n              {process.env.NODE_ENV === \"development\" && <LanguageDropdown />}\r\n              <Nav.Link href={process.env.REACT_APP_PAYPAL_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPaypal} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.paypal\">PayPal</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_PATREON_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPatreon} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.patreon\">Patreon</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"discord\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faDiscord} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.discord\">Discord</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/setting\"><FontAwesomeIcon icon={faCog} /></Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n          <Switch>\r\n            <Route path=\"/artifact\" component={ArtifactDisplay} />\r\n            <Route path=\"/character\" component={CharacterDisplay} />\r\n            <Route path=\"/build\" component={BuildDisplay} />\r\n            <Route path=\"/tools\" component={Planner} />\r\n            {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\r\n            <Route path=\"/setting\" component={SettingsDisplay} />\r\n            <Route path=\"/flex\" component={FlexDisplay} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n      <Nav id=\"footer\" className=\"bg-dark\">\r\n        <Row className=\"w-100 ml-0 mr-0 mb-2 text-light d-flex justify-content-between\">\r\n          <Col xs={\"auto\"}>\r\n            <span><small><Trans t={t} i18nKey=\"ui:rightsDisclaimer\">Genshin Optimizer is not affiliated with or endorsed by miHoYo.</Trans></small></span>\r\n          </Col>\r\n          <Col xs={\"auto\"}>\r\n            <span><small ><Trans t={t} i18nKey=\"ui:appVersion\" values={{ version: version }}>Genshin Optimizer Version: {{ version }}</Trans></small></span>\r\n          </Col>\r\n        </Row>\r\n      </Nav>\r\n    </div>\r\n  </HashRouter>\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID as any, {\r\n  // debug: process.env.NODE_ENV === \"development\"\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(undefined);\r\n","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\nimport { usePromise } from \"./Util/ReactUtil\";\r\nimport { evalIfFunc } from \"./Util/Util\";\r\nimport Formula from \"./Formula\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats, premod = false) =>\r\n    f({ stats, expand: false, premod }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nconst ModFormula = ({ path, stats }) => {\r\n  const formula = usePromise(Formula.get(path), [path]) as any\r\n  if (!formula?.field?.formulaText) return null\r\n  const ret = evalIfFunc(formula.field.formulaText, stats) as JSX.Element\r\n  return ret\r\n}\r\nexport function FormulaDisplay({ statKey, stats, modifiers = {}, expand = true }) {\r\n  if (modifiers[statKey]) {\r\n    const modifierText = (modifiers?.[statKey] ?? []).map(path =>\r\n      <span key={path.join()}> + <ModFormula path={path} stats={stats} /></span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand, premod: true })}{modifierText} </span>\r\n    else\r\n      return <span>{f({ stats, premod: true }, statKey)}{modifierText} </span>\r\n  }\r\n\r\n  if (typeof FormulaText?.[statKey] === \"function\")\r\n    return FormulaText[statKey]({ stats, expand })\r\n  else return null\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true, premod = false } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  const value = (premod ? stats?.premod?.[statKey] : undefined) ?? stats?.[statKey]\r\n  const printValue = value?.toFixed?.(fixedUnit) || value\r\n  const debug = process.env.NODE_ENV === \"development\" ? <code className=\"text-warning\"> {statKey}</code> : null\r\n  return <span className=\"text-nowrap\"><b>{statName}</b>{debug} <span className=\"text-info\">{printValue}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>16 * {f(o, \"eleMas\")} / ( 2000 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n};\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].map(ele => FormulaText[`${ele}_crystalize_hit`] = o => <span>250% * {f(o, `crystalize_hit`)}</span>)\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","// import characters from\r\n\r\nconst ascensionMaxLevel = [20, 40, 50, 60, 70, 80, 90] as const\r\n\r\nconst milestoneLevels = [\r\n  [90, 6],\r\n  [80, 6],\r\n  [80, 5],\r\n  [70, 5],\r\n  [70, 4],\r\n  [60, 4],\r\n  [60, 3],\r\n  [50, 3],\r\n  [50, 2],\r\n  [40, 2],\r\n  [40, 1],\r\n  [20, 1],\r\n  [20, 0],\r\n  [1, 0]\r\n] as const\r\n\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n} as const\r\n\r\nexport {\r\n  ascensionMaxLevel,\r\n  characterStatBase,\r\n  milestoneLevels\r\n}","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\nimport { ICalculatedStats } from \"./Types/stats\";\r\nimport { mergeStats } from \"./Util/StatUtil\";\r\nimport Formula from \"./Formula\";\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaSprintDec_: { name: \"Sprinting Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas: Dict<string, (s: ICalculatedStats) => number> = {\r\n  // Basic Stats\r\n  baseATK: (s) => s.characterATK + s.weaponATK,\r\n  finalATK: (s) => s.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s) => s.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s) => s.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s) => (100 + s.characterLevel) / ((100 + s.characterLevel) + (100 + s.enemyLevel) * (1 - s.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s) => transformativeReactionLevelMultipliers[s.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 1600 * s.eleMas / (2000 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s) => crystalizeLevelMultipliers[s.characterLevel],\r\n  crystalize_hit: (s) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * s.crystalize_multi,\r\n};\r\n\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].forEach(ele => {\r\n  StatData[`${ele}_crystalize_hit`] = { name: `Crystalize Shield ${hitElements[ele].name} Effective HP`, variant: ele }\r\n  Formulas[`${ele}_crystalize_hit`] = s => s.crystalize_hit * 2.5\r\n})\r\n\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"shattered_hit\", \"crystalize_hit\", \"electro_crystalize_hit\", \"pyro_crystalize_hit\", \"cryo_crystalize_hit\", \"hydro_crystalize_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s) => s[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s) => s[`${ele}_${move}_hit_base_multi`] * s.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s) => multi * s.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * s[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * s[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\ntype KeyedFormula = [string, (s: ICalculatedStats) => number]\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys: string[], stats: ICalculatedStats) {\r\n  const { modifiers = {} } = stats, initialStats = {} as ICalculatedStats\r\n\r\n  const preModFormulaList = dependencyKeys.map(key => {\r\n    if (getStage(key) !== 0)\r\n      return [\"\", () => 0] as KeyedFormula\r\n\r\n    if (key in Formulas)\r\n      return [key, Formulas[key]] as KeyedFormula\r\n    initialStats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n    return [\"\", () => 0] as KeyedFormula\r\n  }).filter(x => x[0])\r\n\r\n  const modFormula = Formula.computeModifier(stats, Object.fromEntries(Object.entries(modifiers)\r\n    .filter(([key]) => dependencyKeys.includes(key)) // Keep only relevant keys\r\n  ))\r\n\r\n  const postModFormulaList = dependencyKeys.map(key => {\r\n    if (getStage(key) !== 1)\r\n      return [\"\", () => 0] as KeyedFormula\r\n\r\n    const func = Formulas[key]!\r\n\r\n    if (StatData[key]?.const) {\r\n      initialStats[key] = func(initialStats)\r\n      return [\"\", () => 0] as KeyedFormula\r\n    }\r\n\r\n    return [key, func] as KeyedFormula\r\n  }).filter(x => x[0])\r\n\r\n  return {\r\n    initialStats: initialStats as ICalculatedStats,\r\n    formula: (s: ICalculatedStats) => {\r\n      preModFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n\r\n      const modStats = Formula.computeModifier(s, s.modifiers)(s) // late-binding modifiers (arts mod)\r\n      mergeStats(modStats, modFormula(s))\r\n      s.premod = Object.fromEntries(Object.keys(modifiers).map(key => [key, s[key]]))\r\n      // Apply modifiers\r\n      mergeStats(s, modStats)\r\n      mergeStats(s, { modifiers })\r\n\r\n      postModFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n    }\r\n  }\r\n}\r\nexport function getStage(key: string): number {\r\n  return ((key in Formulas) && key !== \"baseATK\" && key !== \"finalATK\" && key !== \"finalHP\" && key !== \"finalDEF\")\r\n    ? 1 // postmod\r\n    : 0 // premod\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","export function getDBVersion(storage: Storage) {\r\n  return parseInt(storage.getItem('db_ver') ?? '0')\r\n}\r\nexport function setDBVersion(storage: Storage, version: number) {\r\n  storage.setItem('db_ver', version.toString())\r\n}\r\n\r\nexport function load(storage: Storage, key: string): any | undefined {\r\n  const string = storage.getItem(key)\r\n  if (!string) return undefined\r\n  try {\r\n    return JSON.parse(string)\r\n  } catch {\r\n    storage.removeItem(key)\r\n    return undefined\r\n  }\r\n}\r\nexport function save(storage: Storage, key: string, value: any) {\r\n  storage.setItem(key, JSON.stringify(value))\r\n}\r\nexport function remove(storage: Storage, key: string) {\r\n  storage.removeItem(key)\r\n}\r\n","export class DataManager<Key extends string | number, Value> {\r\n  static readonly allKeys = {} as const\r\n\r\n  data: Dict<Key, Value> = {}\r\n  listeners: Dict<Key, Callback<Value | undefined>[]> = {}\r\n  anyListeners: Callback<Key | typeof DataManager.allKeys>[] = []\r\n\r\n  followAny(callback: Callback<Key | typeof DataManager.allKeys>): () => void {\r\n    this.anyListeners.push(callback)\r\n    return () => {\r\n      this.anyListeners = this.anyListeners.filter(cb => cb !== callback)\r\n    }\r\n  }\r\n  follow(key: Key, callback: Callback<Value | undefined>) {\r\n    const value = this.get(key)\r\n    callback(value)\r\n    if (this.listeners[key]) this.listeners[key]!.push(callback)\r\n    else this.listeners[key] = [callback]\r\n    return () => {\r\n      this.listeners[key] = this.listeners[key]?.filter(cb => cb !== callback)\r\n      if (!this.listeners[key]?.length) delete this.listeners[key]\r\n    }\r\n  }\r\n\r\n  get keys() { return Object.keys(this.data) }\r\n  get values() { return Object.values(this.data) }\r\n  get(key: Key): Value | undefined { return this.data[key] }\r\n  set(key: Key, value: Value) {\r\n    this.data[key] = value\r\n\r\n    this.listeners[key]?.forEach(cb => cb(value))\r\n    this.anyListeners.forEach(cb => cb(key))\r\n  }\r\n  remove(key: Key) {\r\n    delete this.data[key]\r\n\r\n    this.listeners[key]?.forEach(cb => cb(undefined))\r\n    this.anyListeners.forEach(cb => cb(key))\r\n    delete this.listeners[key]\r\n  }\r\n  removeAll() {\r\n    this.data = {}\r\n\r\n    Object.values(this.listeners).forEach(listeners => listeners.forEach(listener => listener(undefined)))\r\n    this.anyListeners.forEach(listener => listener(DataManager.allKeys))\r\n    this.listeners = {}\r\n    this.anyListeners = []\r\n  }\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg) => void\r\n","import { ascensionMaxLevel } from \"../Data/CharacterData\"\r\nimport { getDBVersion, load, save, setDBVersion } from \"./utils\"\r\n\r\nconst currentDBVersion = 6\r\n\r\nexport function migrate(storage: Storage): { migrated: boolean } {\r\n  const version = getDBVersion(storage)\r\n  const report = { migrated: false }\r\n\r\n  if (version > currentDBVersion)\r\n    throw new Error(\"Database is not supported\")\r\n\r\n  if (version < 3) migrateV2ToV3(storage)\r\n  if (version < 4) migrateV3ToV4(storage)\r\n  if (version < 5) migrateV4ToV5(storage)\r\n  if (version < 6) migrateV5ToV6(storage)\r\n\r\n  if (version < currentDBVersion) {\r\n    report.migrated = true\r\n  }\r\n\r\n  setDBVersion(storage, currentDBVersion)\r\n\r\n  return report\r\n}\r\n/// v4.0.0 - v4.23.2\r\nfunction migrateV2ToV3(storage: Storage) {\r\n  const state = load(storage, \"CharacterDisplay.state\")\r\n  if (state) {\r\n    if (Array.isArray(state.elementalFilter)) state.elementalFilter = \"\"\r\n    if (Array.isArray(state.weaponFilter)) state.weaponFilter = \"\"\r\n    save(storage, \"CharacterDisplay.state\", state)\r\n  }\r\n\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = load(storage, key)\r\n      if (!value) continue\r\n      if (value.buildSetting) {\r\n        const { artifactsAssumeFull = false, ascending = false, mainStat = [\"\", \"\", \"\"], setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }], useLockedArts = false } = value.buildSetting ?? {}\r\n        value.buildSettings = { mainStatAssumptionLevel: artifactsAssumeFull ? 20 : 0, ascending, mainStatKeys: mainStat, setFilters, useLockedArts }\r\n      }\r\n\r\n      save(storage, key, value)\r\n    }\r\n  }\r\n}\r\n/// v5.0.0 - v5.7.15\r\nfunction migrateV3ToV4(storage: Storage) { // \r\n  // Convert anemo traveler to traveler, and remove geo traveler\r\n  const traveler = load(storage, \"char_traveler_anemo\")\r\n  // Deletion of old travelers are handled during validation\r\n\r\n  if (traveler) {\r\n    traveler.elementKey = \"anemo\"\r\n    traveler.characterKey = \"traveler\"\r\n    save(storage, \"char_traveler\", traveler)\r\n  }\r\n\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"artifact_\")) {\r\n      const value = load(storage, key)\r\n      let requireUpdate = false\r\n      if (value.location === \"traveler_anemo\") {\r\n        value.location = \"traveler\"\r\n        requireUpdate = true\r\n      } else if (value.location === \"traveler_geo\") {\r\n        value.location = \"\"\r\n        requireUpdate = true\r\n      }\r\n\r\n      if (requireUpdate)\r\n        save(storage, key, value)\r\n    }\r\n  }\r\n}\r\n/// v5.8.0 - v5.11.5\r\nfunction migrateV4ToV5(storage: Storage) {\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = load(storage, key)\r\n\r\n      const levelKey = value.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        value.level = 1\r\n        value.ascension = 0\r\n      } else {\r\n        value.level = level\r\n        value.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n\r\n      // TODO: Remove this once we validate baseStatOverrides\r\n      delete value.baseStatOverrides?.characterLevel\r\n      delete value.baseStatOverrides?.characterHP\r\n      delete value.baseStatOverrides?.characterATK\r\n      delete value.baseStatOverrides?.characterDEF\r\n\r\n      save(storage, key, value)\r\n    }\r\n  }\r\n}\r\n\r\n// v5.12.0 - Present\r\nfunction migrateV5ToV6(storage: Storage) {\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = load(storage, key)\r\n\r\n      //migrate character weapon levels\r\n      const levelKey = character.weapon.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        character.weapon.level = 1\r\n        character.weapon.ascension = 0\r\n      } else {\r\n        character.weapon.level = level\r\n        character.weapon.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n      save(storage, key, character)\r\n    }\r\n  }\r\n}\r\n","import { IArtifact, IFlexArtifact } from \"../Types/artifact\";\r\nimport { ICharacter, IFlexCharacter } from \"../Types/character\";\r\nimport { allSlotKeys, CharacterKey, SlotKey } from \"../Types/consts\";\r\nimport { deepClone, getRandomInt } from \"../Util/Util\";\r\nimport { load, save, remove, getDBVersion, setDBVersion } from \"./utils\";\r\nimport { DataManager } from \"./DataManager\";\r\nimport { migrate } from \"./migration\";\r\nimport { validateFlexArtifact, validateDBCharacter, validateDBArtifact, extractFlexArtifact, validateFlexCharacter, extractFlexCharacter } from \"./validation\";\r\n\r\nexport class Database {\r\n  storage: Storage\r\n  arts = new DataManager<string, IArtifact>()\r\n  chars = new DataManager<CharacterKey, ICharacter>()\r\n\r\n  private constructor(storage: Storage) {\r\n    this.storage = storage\r\n\r\n    const { migrated } = migrate(storage)\r\n\r\n    // Load into memory and verify database integrity\r\n    for (const key in storage) {\r\n      if (key.startsWith(\"char_\")) {\r\n        const flex = validateDBCharacter(load(storage, key), key)\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          remove(storage, key)\r\n          continue\r\n        }\r\n        const character = validateFlexCharacter(flex)\r\n        // Use relations from artifact\r\n        character.equippedArtifacts = Object.fromEntries(allSlotKeys.map(slot => [slot, \"\"])) as any\r\n\r\n        this.chars.set(flex.characterKey, character)\r\n        // Save migrated version back to db\r\n        if (migrated) save(this.storage, `char_${flex.characterKey}`, flex)\r\n      }\r\n    }\r\n\r\n    for (const key in storage) {\r\n      if (key.startsWith(\"artifact_\")) {\r\n        const flex = validateDBArtifact(load(storage, key), key)\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          remove(storage, key)\r\n          continue\r\n        }\r\n\r\n        // Update relations\r\n        const { location, slotKey } = flex\r\n        if (location && this.chars.data[location]?.equippedArtifacts[slotKey] === \"\") {\r\n          this.chars.data[location]!.equippedArtifacts[slotKey] = key // equiped on `location`\r\n        } else flex.location = \"\"\r\n\r\n        const { artifact } = validateFlexArtifact(flex)\r\n\r\n        this.arts.set(artifact.id, artifact)\r\n        // Save migrated version back to db\r\n        if (migrated) save(this.storage, key, flex)\r\n      }\r\n    }\r\n  }\r\n\r\n  private saveArt(key: string, art: IArtifact) {\r\n    save(this.storage, key, extractFlexArtifact(art))\r\n    this.arts.set(key, art)\r\n  }\r\n  private saveChar(key: CharacterKey, char: ICharacter) {\r\n    save(this.storage, `char_${key}`, char)\r\n    this.chars.set(key, char)\r\n  }\r\n  // TODO: Make theses `_` functions private once we migrate to use `followXXX`,\r\n  // or de-underscored it if we decide that these are to stay\r\n  _getArt(key: string) { return this.arts.get(key) }\r\n  _getChar(key: CharacterKey | \"\") { return key ? this.chars.get(key) : undefined }\r\n  _getArts() { return this.arts.values }\r\n  _getCharKeys(): CharacterKey[] { return this.chars.keys }\r\n\r\n  followChar(key: CharacterKey, cb: Callback<ICharacter>): (() => void) | undefined { return this.chars.follow(key, cb) }\r\n  followArt(key: string, cb: Callback<IArtifact>): (() => void) | undefined {\r\n    if (this.arts.get(key) !== undefined)\r\n      return this.arts.follow(key, cb)\r\n    cb(undefined)\r\n  }\r\n  followAnyChar(cb: (key: string | {}) => void): (() => void) | undefined { return this.chars.followAny(cb) }\r\n  followAnyArt(cb: (key: CharacterKey | {}) => void): (() => void) | undefined { return this.arts.followAny(cb) }\r\n\r\n  /**\r\n   * **Caution**: This does not update `equippedArtifacts`, use `equipArtifacts` instead\r\n   */\r\n  updateChar(value: ICharacter): void {\r\n    const newChar = deepClone(value), key = newChar.characterKey, oldChar = this.chars.get(key)\r\n\r\n    if (oldChar) {\r\n      newChar.equippedArtifacts = oldChar.equippedArtifacts\r\n    } else {\r\n      newChar.equippedArtifacts = Object.fromEntries(allSlotKeys.map(slot => ([slot, \"\"]))) as any\r\n    }\r\n\r\n    this.saveChar(key, newChar)\r\n  }\r\n  /**\r\n   * **Caution** This does not update `location` and `lock`, use `setLocation` or `lockArtifact` instead\r\n   */\r\n  updateArt(value: IArtifact): string {\r\n    const newArt = deepClone(value)\r\n    const key = newArt.id || generateRandomArtID(new Set(Object.keys(this.arts.data)))\r\n    const oldArt = this.arts.get(key)\r\n\r\n    if (!newArt.id)\r\n      newArt.id = key\r\n\r\n    if (oldArt) {\r\n      newArt.location = oldArt.location\r\n      newArt.lock = oldArt.lock\r\n    } else {\r\n      newArt.location = \"\"\r\n      newArt.lock = false\r\n    }\r\n\r\n    this.saveArt(key, newArt)\r\n    if (newArt.location)\r\n      this.chars.set(newArt.location, deepClone(this.chars.get(newArt.location)!))\r\n    return key\r\n  }\r\n  removeChar(key: CharacterKey) {\r\n    const char = this.chars.get(key)\r\n    if (!char) return\r\n\r\n    for (const artKey of Object.values(char.equippedArtifacts)) {\r\n      if (!artKey) continue\r\n      const art = this.arts.get(artKey)!\r\n      art.location = \"\"\r\n      this.saveArt(artKey, art)\r\n    }\r\n    remove(this.storage, `char_${key}`)\r\n    this.chars.remove(key)\r\n  }\r\n  removeArt(key: string) {\r\n    const art = this.arts.get(key)\r\n    if (!art) return\r\n\r\n    const charKey = art.location\r\n    if (charKey) {\r\n      const char = this.chars.get(charKey)!\r\n      char.equippedArtifacts[art.slotKey] = \"\"\r\n      this.saveChar(charKey, char)\r\n    }\r\n    remove(this.storage, key)\r\n    this.arts.remove(key)\r\n  }\r\n  setLocation(artKey: string, newCharKey: CharacterKey | \"\") {\r\n    const newArt = deepClone(this.arts.get(artKey))\r\n    if (!newArt) return\r\n\r\n    const slot = newArt.slotKey, oldCharKey = newArt.location\r\n    const newChar = newCharKey ? deepClone(this.chars.get(newCharKey))! : undefined\r\n    const oldChar = oldCharKey ? deepClone(this.chars.get(oldCharKey))! : undefined\r\n    newArt.location = newCharKey\r\n    if (oldChar) oldChar.equippedArtifacts[slot] = \"\"\r\n\r\n    if (newChar) {\r\n      const oldArtKey = newChar?.equippedArtifacts[slot] ?? \"\"\r\n      const oldArt = oldArtKey ? deepClone(this.arts.get(oldArtKey))! : undefined\r\n      newChar.equippedArtifacts[slot] = newArt.id!\r\n\r\n      if (oldChar && oldArt) {\r\n        oldChar.equippedArtifacts[slot] = oldArt.id!\r\n        oldArt.location = oldChar.characterKey\r\n      } else if (oldArt) oldArt.location = \"\"\r\n\r\n      if (oldArt) this.saveArt(oldArtKey, oldArt)\r\n    }\r\n\r\n    this.saveArt(artKey, newArt)\r\n    if (newCharKey) this.saveChar(newCharKey, newChar!)\r\n    if (oldCharKey) this.saveChar(oldCharKey, oldChar!)\r\n  }\r\n  equipArtifacts(charKey: CharacterKey, newArts: StrictDict<SlotKey, string>) {\r\n    const char = this.chars.get(charKey)\r\n    if (!char) return\r\n\r\n    const oldArts = char.equippedArtifacts\r\n    for (const [slot, newArt] of Object.entries(newArts)) {\r\n      if (newArt) this.setLocation(newArt, charKey)\r\n      else if (oldArts[slot]) this.setLocation(oldArts[slot], \"\")\r\n    }\r\n  }\r\n  lockArtifact(key: string, lock = true) {\r\n    const art = this.arts.get(key)\r\n    if (!art || art.lock === lock) return\r\n\r\n    art.lock = lock\r\n    this.saveArt(key, art)\r\n  }\r\n\r\n  exportStorage() {\r\n    const characterDatabase = Object.fromEntries(Object.entries(this.chars.data).map(([key, value]) =>\r\n      [key, extractFlexCharacter(value)]))\r\n    const artifactDatabase = Object.fromEntries(Object.entries(this.arts.data).map(([key, value]) =>\r\n      [key, extractFlexArtifact(value)]))\r\n    const version = getDBVersion(this.storage)\r\n    const artifactDisplay = load(this.storage, \"ArtifactDisplay.state\") ?? {}\r\n    const characterDisplay = load(this.storage, \"CharacterDisplay.state\") ?? {}\r\n    const buildsDisplay = load(this.storage, \"BuildsDisplay.state\") ?? {}\r\n\r\n    return {\r\n      version,\r\n      characterDatabase,\r\n      artifactDatabase,\r\n      artifactDisplay,\r\n      characterDisplay,\r\n      buildsDisplay,\r\n    }\r\n  }\r\n\r\n  importStorage({ version, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay }: DatabaseObj) {\r\n    this.clear()\r\n    const storage = this.storage\r\n\r\n    Object.entries(characterDatabase).forEach(([charKey, char]) => save(storage, `char_${charKey}`, char))\r\n    Object.entries(artifactDatabase).forEach(([id, art]) => save(storage, id, art))\r\n    //override version\r\n    setDBVersion(storage, version)\r\n    save(storage, \"ArtifactDisplay.state\", artifactDisplay)\r\n    save(storage, \"CharacterDisplay.state\", characterDisplay)\r\n    save(storage, \"BuildsDisplay.state\", buildsDisplay)\r\n\r\n    const newDatabase = new Database(storage)\r\n    this.arts = newDatabase.arts\r\n    this.chars = newDatabase.chars\r\n  }\r\n\r\n  clear() {\r\n    const storage = this.storage\r\n    Object.keys(storage)\r\n      .filter(key => key.startsWith(\"char_\") || key.startsWith(\"artifact_\"))\r\n      .forEach(id => remove(storage, id))\r\n    remove(storage, \"db_ver\")\r\n    remove(storage, \"ArtifactDisplay.state\")\r\n    remove(storage, \"CharacterDisplay.state\")\r\n    remove(storage, \"BuildsDisplay.state\")\r\n\r\n    this.arts.removeAll()\r\n    this.chars.removeAll()\r\n  }\r\n\r\n  static shared = new Database(localStorage)\r\n}\r\n\r\ntype DatabaseObj = {\r\n  version: number,\r\n  characterDatabase: Dict<CharacterKey, IFlexCharacter>\r\n  artifactDatabase: Dict<string, IFlexArtifact>\r\n  artifactDisplay: any\r\n  characterDisplay: any\r\n  buildsDisplay: any\r\n}\r\n\r\n/// Get a random integer (converted to string) that is not in `keys`\r\nfunction generateRandomArtID(keys: Set<string>): string {\r\n  let candidate = \"\"\r\n  do {\r\n    candidate = `artifact_${getRandomInt(1, 2 * (keys.size + 1))}`\r\n  } while (keys.has(candidate))\r\n  return candidate\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg | undefined) => void\r\n\r\nexport const database = Database.shared\r\n","import { MainStatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactSubstatRollData: StrictDict<Rarity, { low: number, high: number, numUpgrades: number }> = {\r\n  1: { low: 0, high: 0, numUpgrades: 1 },\r\n  2: { low: 0, high: 1, numUpgrades: 2 },\r\n  3: { low: 1, high: 2, numUpgrades: 3 },\r\n  4: { low: 2, high: 3, numUpgrades: 4 },\r\n  5: { low: 3, high: 4, numUpgrades: 5 }\r\n};\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: readonly MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatRollData as ArtifactStarsData,\r\n};\r\n","import { ArtifactSlotsData, ArtifactStarsData } from '../Data/ArtifactData';\r\nimport { clampPercent, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { allSubstats, IArtifact, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, allRarities } from '../Types/consts';\r\nimport { BonusStats, ICalculatedStats } from '../Types/stats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\nimport { ArtifactSetEffects } from '../Types/Build';\r\nimport { mergeStats } from '../Util/StatUtil';\r\nimport ArtifactMainStatsData from './artifact_main_gen.json'\r\nimport ArtifactSubstatsData from './artifact_sub_gen.json'\r\nimport ArtifactSubstatLookupTable from './artifact_sub_rolls_gen.json'\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey): string =>\r\n    ArtifactSlotsData[slotKey].name\r\n  static slotMainStats = (slotKey: SlotKey): readonly MainStatKey[] =>\r\n    ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): ArtifactSetEffects => {\r\n    const result: ArtifactSetEffects = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      const setEffect: Dict<SetNum, BonusStats> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, entry]) => {\r\n        const setStats = evalIfFunc(entry.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      mergeStats(result[setKey][setNumKey], condStats)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: IArtifact[]): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, databaseObj.filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey): readonly number[] => {\r\n    if (statKey.endsWith('_')) // TODO: % CONVERSION\r\n      return ArtifactMainStatsData[numStar][statKey].map(k => k * 100)\r\n    return ArtifactMainStatsData[numStar][statKey]\r\n  }\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } =>\r\n    ArtifactStarsData[rarity]\r\n\r\n  static maxSubstatValues = (substatKey: SubstatKey, numStars = maxStar): number => {\r\n    if (substatKey.endsWith(\"_\")) // TODO: % CONVERSION\r\n      return Math.max(...ArtifactSubstatsData[numStars][substatKey]) * 100\r\n    return Math.max(...ArtifactSubstatsData[numStars][substatKey])\r\n  }\r\n\r\n  static maxSubstatRollEfficiency = Object.fromEntries(allRarities.map(rarity =>\r\n    [rarity, 100 * Math.max(...allSubstats.map(substat =>\r\n      Artifact.maxSubstatValues(substat, rarity) /\r\n      Artifact.maxSubstatValues(substat, maxStar)))]))\r\n  static getSubstatKeys = (): readonly SubstatKey[] =>\r\n    allSubstats\r\n  static totalPossibleRolls = (numStars: Rarity): number =>\r\n    ArtifactStarsData[numStars].high + ArtifactStarsData[numStars].numUpgrades\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4)\r\n  static getSubstatRollData = (substatKey: SubstatKey, numStars: Rarity) => {\r\n    if (substatKey.endsWith(\"_\")) // TODO: % CONVERSION\r\n      return ArtifactSubstatsData[numStars][substatKey].map(v => v * 100)\r\n    return ArtifactSubstatsData[numStars][substatKey]\r\n  }\r\n\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    const rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    const table = ArtifactSubstatLookupTable[numStars][substatKey]\r\n    const lookupValue = Math.round(substatKey.endsWith('_')\r\n      ? (substatValue * 10) // TODO: % CONVERSION\r\n      : substatValue)\r\n    return table[lookupValue]?.map(roll => roll.map(i => rollData[i])) ?? []\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static getArtifactEfficiency(artifact: IArtifact, filter: Set<SubstatKey>): { currentEfficiency: number, maxEfficiency: number } {\r\n    const { substats, numStars, level } = artifact\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    const totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    const current = substats.filter(({ key }) => key && filter.has(key)).reduce((sum, { rolls, efficiency }) => sum + ((efficiency ?? 0) * (rolls?.length ?? 0)), 0)\r\n\r\n    const rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    const emptySlotCount = substats.filter(s => !s.key).length\r\n    const matchedSlotCount = substats.filter(s => s.key && filter.has(s.key)).length\r\n    const unusedFilterCount = filter.size - matchedSlotCount\r\n    let maximum\r\n    if (emptySlotCount && unusedFilterCount) maximum = current + Artifact.maxSubstatRollEfficiency[numStars] * rollsRemaining // Rolls into good empty slot\r\n    else if (matchedSlotCount) maximum = current + Artifact.maxSubstatRollEfficiency[numStars] * (rollsRemaining - emptySlotCount) // Rolls into existing matched slot\r\n    else maximum = current // No possible roll\r\n\r\n    const currentEfficiency = current / totalRolls\r\n    const maxEfficiency = maximum / totalRolls\r\n    return { currentEfficiency, maxEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    const setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}\r\n","import { BonusStats, Modifier } from \"../Types/stats\"\r\n\r\nexport function mergeStats(initialStats: BonusStats, stats: BonusStats | undefined) {\r\n  if (!stats) return\r\n  return Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [key, paths] of (Object.entries(val as Modifier))) {\r\n        initialStats.modifiers[key] = initialStats.modifiers[key] ?? []\r\n        initialStats.modifiers[key].push(...paths)\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport { ascensionMaxLevel } from \"../Data/CharacterData\";\r\nimport Stat from \"../Stat\";\r\nimport { allMainStatKeys, allSubstats, IArtifact, IFlexArtifact, IFlexSubstat, Substat } from \"../Types/artifact\";\r\nimport { ICharacter, IFlexCharacter } from \"../Types/character\";\r\nimport { allArtifactSets, allCharacterKeys, allElements, allHitModes, allRarities, allReactionModes, allSlotKeys, allWeaponKeys } from \"../Types/consts\";\r\n\r\n/// Returns the closest (not necessarily valid) artifact, including errors as necessary\r\nexport function validateFlexArtifact(flex: IFlexArtifact): { artifact: IArtifact, errors: string[] } {\r\n  const { id, location, lock, setKey, slotKey, numStars, mainStatKey } = flex\r\n  const level = Math.round(Math.min(Math.max(0, flex.level), numStars >= 3 ? numStars * 4 : 4))\r\n  const mainStatVal = Artifact.mainStatValue(mainStatKey, numStars, level)!\r\n\r\n  const errors: string[] = []\r\n  const substats: Substat[] = flex.substats.map(substat => ({ ...substat, rolls: [], efficiency: 0 }))\r\n  const validated: IArtifact = { id, setKey, location, slotKey, lock, mainStatKey, numStars, level, substats, mainStatVal }\r\n\r\n  const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n  let total = 0\r\n  substats.forEach((substat, index) => {\r\n    const { key, value } = substat\r\n    if (!key) return\r\n\r\n    const substatRolls = Artifact.getSubstatRolls(key, value, numStars)\r\n\r\n    if (substatRolls.length) {\r\n      const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n      if (possibleLengths.size !== 1)\r\n        allSubstatRolls.push({ index, substatRolls })\r\n      else {\r\n        total += substatRolls[0].length\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = substat.rolls.reduce((a, b) => a + b) / Artifact.maxSubstatValues(key) * 100 / substatRolls[0].length\r\n      }\r\n    } else if (substat.key) {\r\n      substat.rolls = []\r\n      substat.efficiency = 0\r\n      errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n    }\r\n  })\r\n\r\n  if (substats.some((substat) => !substat.key)) {\r\n    let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n    if (substat)\r\n      errors.push(`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`)\r\n  }\r\n\r\n  if (errors.length) return { artifact: validated, errors }\r\n\r\n  const { low } = Artifact.rollInfo(numStars)\r\n  const minimum = low + Math.floor(level / 4)\r\n  const remaining = Artifact.rollsRemaining(level, numStars);\r\n  const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n  let minimumMaxRolls = Infinity\r\n  function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n    if (rolls.length === allSubstatRolls.length) {\r\n      if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n        minimumMaxRolls = maxRolls\r\n        for (const { index, roll } of rolls) {\r\n          const key = substats[index].key\r\n          if (!key) continue\r\n          substats[index].rolls = roll\r\n          substats[index].efficiency = roll.reduce((a, b) => a + b) / Artifact.maxSubstatValues(key) * 100 / roll.length\r\n        }\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n    for (const roll of substatRolls) {\r\n      rolls.push({ index, roll })\r\n      tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n      rolls.pop()\r\n    }\r\n  }\r\n\r\n  tryAllSubstats([], 0, total)\r\n\r\n  if (!isFinite(minimumMaxRolls)) {\r\n    // No build found\r\n    const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n    if (total < minimum)\r\n      errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n    else {\r\n      errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n    }\r\n  }\r\n\r\n  return { artifact: validated, errors }\r\n}\r\n/// Returns the closest flex artifact, or undefined if it's not recoverable\r\nexport function validateDBArtifact(obj: any, key: string): IFlexArtifact | undefined {\r\n  if (typeof obj !== \"object\") return\r\n\r\n  let {\r\n    setKey, numStars, level, slotKey, mainStatKey, substats, location, lock,\r\n  } = obj ?? {}\r\n\r\n  if (!allArtifactSets.includes(setKey) ||\r\n    !allSlotKeys.includes(slotKey) ||\r\n    !allMainStatKeys.includes(mainStatKey) ||\r\n    !allRarities.includes(numStars) ||\r\n    typeof level !== \"number\" || level < 0 || level > 20)\r\n    return // non-recoverable\r\n\r\n  substats = validateSubstats(substats)\r\n  lock = !!lock\r\n  level = Math.round(level)\r\n  if (!allCharacterKeys.includes(location)) location = \"\"\r\n  return { id: key, setKey, numStars, level, slotKey, mainStatKey, substats, location, lock }\r\n}\r\n/// Return a new flex artifact from given artifact. All extra keys are removed\r\nexport function extractFlexArtifact(artifact: IArtifact): IFlexArtifact {\r\n  const { id, setKey, numStars, level, slotKey, mainStatKey, substats, location, lock } = artifact\r\n  return { id, setKey, numStars, level, slotKey, mainStatKey, substats: substats.map(substat => ({ key: substat.key, value: substat.value })), location, lock }\r\n}\r\nfunction validateSubstats(obj: any): IFlexSubstat[] {\r\n  if (!Array.isArray(obj))\r\n    return new Array(4).map(_ => ({ key: \"\", value: 0 }))\r\n  const substats = obj.map(({ key = undefined, value = undefined }) => {\r\n    if (!allSubstats.includes(key))\r\n      return { key: \"\", value: 0 }\r\n    return { key, value: typeof value === \"number\" && isFinite(value) ? value : 0 }\r\n  })\r\n  while (substats.length !== 4)\r\n    substats.push({ key: \"\", value: 0 })\r\n\r\n  return substats\r\n}\r\n/// Returns the closest character\r\nexport function validateFlexCharacter(flex: IFlexCharacter): ICharacter {\r\n  // TODO: Add more validations to make sure the returned value is a \"valid\" character\r\n  return {\r\n    ...flex,\r\n    equippedArtifacts: Object.fromEntries(allSlotKeys.map(slot => [slot, \"\"])) as any\r\n  }\r\n}\r\n/// Returns the closest flex character, or undefined if it's not recoverable\r\nexport function validateDBCharacter(obj: any, key: string): IFlexCharacter | undefined {\r\n  if (typeof obj !== \"object\") return\r\n\r\n  let {\r\n    characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n  } = obj\r\n\r\n  if (key !== `char_${characterKey}` ||\r\n    !allCharacterKeys.includes(characterKey) ||\r\n    typeof level !== \"number\" || level < 0 || level > 90 ||\r\n    typeof weapon !== \"object\" || !allWeaponKeys.includes(weapon.key))\r\n    return // non-recoverable\r\n\r\n  if (!allHitModes.includes(hitMode)) hitMode = \"avgHit\"\r\n  if (characterKey !== \"traveler\") elementKey = undefined\r\n  else if (!allElements.includes(elementKey)) elementKey = \"anemo\"\r\n  if (!allReactionModes.includes(reactionMode)) reactionMode = null\r\n  if (!allElements.includes(infusionAura)) infusionAura = \"\"\r\n  if (typeof constellation !== \"number\" && constellation < 0 && constellation > 6) constellation = 0\r\n  if (typeof ascension !== \"number\" ||\r\n    !(ascension in ascensionMaxLevel) ||\r\n    level > ascensionMaxLevel[ascension] ||\r\n    level < (ascensionMaxLevel[ascension - 1] ?? 0))\r\n    ascension = ascensionMaxLevel.findIndex(maxLvl => level <= maxLvl)\r\n  if (typeof talentLevelKeys !== \"object\") talentLevelKeys = { auto: 0, skill: 0, burst: 0 }\r\n  else {\r\n    let { auto = 0, skill = 0, burst = 0 } = talentLevelKeys\r\n    if (typeof auto !== \"number\" || auto < 0 || auto > 15) auto = 0\r\n    if (typeof skill !== \"number\" || skill < 0 || skill > 15) skill = 0\r\n    if (typeof burst !== \"number\" || burst < 0 || burst > 15) burst = 0\r\n    talentLevelKeys = { auto, skill, burst }\r\n  }\r\n  {\r\n    let { key, level, ascension, refineIndex } = weapon\r\n    if (typeof level !== \"number\" || level < 1 || level > 90) level = 1\r\n    if (typeof ascension !== \"number\" || ascension < 0 || ascension > 6) ascension = 0\r\n    if (typeof refineIndex !== \"number\" || refineIndex < 0 || refineIndex > 5) refineIndex = 0\r\n    weapon = { key, level, ascension, refineIndex }\r\n  }\r\n  {\r\n    if (typeof buildSettings !== \"object\") buildSettings = {}\r\n    let { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending } = buildSettings ?? {}\r\n    if (!Array.isArray(setFilters)) setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }]\r\n    if (typeof statFilters !== \"object\") statFilters = {}\r\n    if (!Array.isArray(mainStatKeys)) mainStatKeys = [\"\", \"\", \"\"]\r\n    if (!optimizationTarget) optimizationTarget = \"finalAtk\"\r\n    if (typeof mainStatAssumptionLevel !== \"number\" || mainStatAssumptionLevel < 0 || mainStatAssumptionLevel > 20)\r\n      mainStatAssumptionLevel = 0\r\n    useLockedArts = !!useLockedArts\r\n    useEquippedArts = !!useEquippedArts\r\n    ascending = !!ascending\r\n    buildSettings = { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending }\r\n  }\r\n\r\n  // TODO: validate baseStatOverrides, conditionalValues\r\n  return {\r\n    characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n  }\r\n}\r\n/// Return a new flex character from given character. All extra keys are removed\r\nexport function extractFlexCharacter(char: ICharacter): IFlexCharacter {\r\n  const {\r\n    characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n  } = char\r\n  return {\r\n    characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n  }\r\n}","export const faAnemo = {\r\n  prefix: 'faga',\r\n  iconName: \"anemo\",\r\n  icon: [\r\n    256, 253.38,\r\n    [],\r\n    null,\r\n    \"m 225.76,37.18 c -12.21,89.21 -73.58,65.65 -97.74,114.49 -24.44,-49.47 -85.28,-24.8 -97.5,-114.47 -21.2,33.52 -14.69,77.38 28.6,86.18 9.36,2.18 19,3.3 28.34,5.51 19.13,4.1 40.75,21 36.24,42.73 -2,10.91 -17.47,24.55 -28.44,18.21 -3.88,-3.08 -8.22,-2.84 -13.27,0 21.27,16.82 34.53,39 46.14,63.59 11.29,-25 25.06,-46.78 46,-63.66 -5.93,-2.75 -9.11,-2.85 -13.18,0.21 -4.16,3.52 -8.33,1.65 -12.6,-0.25 -23.06,-9 -19.31,-38.35 -1.28,-50.61 19.32,-15.63 45.86,-10.26 66.76,-22.26 C 245,101.6 240.59,63.06 225.76,37.18 Z m -97.63,192.46 -10.6,-17.77 10.44,-7 10.48,6.89 z m 18.73,-29.23 c -4.6,3 -11.32,1.31 -19.12,-4.67 -4.94,5.41 -11.07,6.89 -18.11,5 8.12,-3 14.67,-7.73 18.31,-16.66 3.85,8.69 10.36,13.7 18.92,16.33 z M 115.47,119.27 C 98.15,113.68 80.41,108.41 66,96.68 30.69,68.23 45.06,13 86.56,0 63.14,40.08 80.05,92.48 116.09,118.44 Z M 169.8,0.34 c 47.64,15.41 54.68,78.46 11.56,102.66 -12.49,7.77 -26.54,12.27 -40.71,15.73 34.89,-27.12 52.6,-78.11 29.15,-118.39 z m 82.68,88.28 c 10.67,28.57 -3.35,67.33 -36.37,70.56 -15.35,1.25 -29.11,-6.93 -42.84,-12.56 -25,-12.67 -36,25.65 -6.32,25.64 7.87,1.22 0.4,11.43 -5.37,11.2 -10.79,1.34 -19.77,-6.55 -20.11,-18 -1.35,-22.36 24.12,-34 43.43,-32.66 31.82,3.35 51.68,-20.31 67.58,-44.18 z M 3.65,88.4 c 14,22 33.15,45.24 61.48,44.49 18.75,-1.21 43.41,4.11 49,24.86 5.72,15.82 -15.13,36.25 -27.68,20.55 -2,-3.41 -0.71,-5.44 3.16,-6 18.3,0.38 24.65,-20.49 7.36,-27.67 C 82.1,142.79 68.66,154.27 54.38,157.55 14.46,169.09 -9.58,121.71 3.65,88.4 Z\"\r\n  ]\r\n} as const\r\n\r\nexport const faCryo = {\r\n  prefix: 'faga',\r\n  iconName: \"cryo\",\r\n  icon: [\r\n    221.01, 256,\r\n    [],\r\n    null,\r\n    \"m 113.51,128.62 24,8.1 12.29,-8.6 -12.29,-8.61 -24,8.1 a 3,3 0 0 0 -1,-1.91 l 19,-16.7 -1.3,-14.94 -13.6,6.34 -5,24.74 a 3,3 0 0 0 -2.19,0 l -5,-24.74 -13.6,-6.34 -1.28,14.94 18.95,16.7 a 3,3 0 0 0 -1,1.91 l -24,-8.1 -12.29,8.61 12.29,8.6 24,-8.1 a 3.09,3.09 0 0 0 1.14,1.8 l -19.09,16.81 1.3,14.94 13.6,-6.34 5,-25 a 3,3 0 0 0 2.1,0 l 5,25 13.6,6.34 1.3,-14.94 -19.09,-16.81 a 3,3 0 0 0 1.16,-1.8 z M 110.5,0 c 0,0 -18.43,40.55 -34.41,60.22 0,0 8.61,-2.46 11.06,-3.69 0,0 19.67,23.35 23.35,59.6 3.69,-36.25 23.35,-59.6 23.35,-59.6 2.46,1.23 11.06,3.69 11.06,3.69 C 128.94,40.55 110.5,0 110.5,0 Z m 0,93.14 C 109.89,75 97.6,49.84 97.6,49.84 c 4.92,-2.46 12.9,-11.76 12.9,-11.76 v 0 c 0,0 8,9.3 12.91,11.76 0,0 -12.29,25.16 -12.91,43.3 z M 221,64.37 c 0,0 -25.91,36.24 -34.95,59.9 0,0 -2.17,-8.67 -2.33,-11.42 0,0 -30.06,-5.35 -63.3,9.58 29.56,-21.32 39.95,-50 39.95,-50 -2.3,-1.51 -8.73,-7.74 -8.73,-7.74 25.03,3.99 69.36,-0.32 69.36,-0.32 z m -80.67,46.57 c 16,-8.54 44,-10.48 44,-10.48 -0.33,-5.49 3.73,-17 3.73,-17 v 0 c 0,0 -12.06,-2.32 -16.66,-5.35 0,0 -15.65,23.23 -31.06,32.83 z M 221,191.63 c 0,0 -25.91,-36.24 -34.95,-59.9 0,0 -2.17,8.67 -2.33,11.42 0,0 -30.06,5.35 -63.3,-9.58 29.56,21.32 39.95,50 39.95,50 -2.3,1.51 -8.73,7.74 -8.73,7.74 25.03,-3.99 69.36,0.32 69.36,0.32 z m -80.67,-46.57 c 16,8.54 44,10.48 44,10.48 C 184,161 188,172.59 188,172.59 v 0 c 0,0 -12.05,2.27 -16.63,5.3 0.03,0 -15.62,-23.23 -31.03,-32.83 z M 110.5,256 c 0,0 -18.43,-40.55 -34.41,-60.22 0,0 8.61,2.46 11.06,3.69 0,0 19.67,-23.35 23.35,-59.6 3.69,36.25 23.35,59.6 23.35,59.6 2.46,-1.23 11.06,-3.69 11.06,-3.69 C 128.94,215.45 110.5,256 110.5,256 Z m 0,-93.14 c -0.61,18.14 -12.9,43.3 -12.9,43.3 4.92,2.46 12.9,11.76 12.9,11.76 v 0 c 0,0 8,-9.3 12.91,-11.76 0,0 -12.29,-25.16 -12.91,-43.3 z M 0,191.63 c 0,0 25.9,-36.24 34.94,-59.9 0,0 2.18,8.67 2.34,11.42 0,0 30.05,5.35 63.29,-9.58 -29.55,21.32 -39.94,50 -39.94,50 2.29,1.51 8.72,7.74 8.72,7.74 C 44.34,187.32 0,191.63 0,191.63 Z m 80.67,-46.57 c -16,8.54 -44,10.48 -44,10.48 C 37,161 33,172.59 33,172.59 v 0 c 0,0 12.05,2.27 16.63,5.3 -0.02,0 15.63,-23.23 31.04,-32.83 z M 0,64.37 c 0,0 25.9,36.24 34.94,59.9 0,0 2.18,-8.67 2.34,-11.42 0,0 30.05,-5.35 63.29,9.58 -29.55,-21.32 -39.94,-50 -39.94,-50 2.29,-1.51 8.72,-7.74 8.72,-7.74 C 44.34,68.68 0,64.37 0,64.37 Z m 80.67,46.57 c -16,-8.54 -44,-10.48 -44,-10.48 C 37,95 33,83.41 33,83.41 v 0 c 0,0 12,-2.27 16.61,-5.3 0,0 15.65,23.23 31.06,32.83 z\"\r\n  ]\r\n} as const\r\n\r\nexport const faDendro = {\r\n  prefix: 'faga',\r\n  iconName: \"dengro\",\r\n  icon: [\r\n    256, 243.83,\r\n    [],\r\n    null,\r\n    \"M 128.13,0.38 V 0 c 0,0.06 -0.09,0.12 -0.13,0.19 -0.04,0.07 -0.09,-0.13 -0.13,-0.19 v 0.38 c -19.63,27.28 -32.6,41.67 0,65.74 h 0.26 c 32.6,-24.12 19.63,-38.45 0,-65.74 z M 128,208.46 C 111.72,179.85 73.3,181.17 54.66,154.64 35.48,131.3 36.24,90.44 65.26,75.41 c 15.11,-7.63 38.85,-7.83 49.07,7.85 1.26,2.1 2.74,1.9 4.5,0.73 C 136.38,68.3 97.19,52.3 84.35,55.18 68.94,55.59 56.52,64.46 44.41,73.18 42.53,60.25 41,51 26.83,49.35 23.83,49.59 6.49,45.6 8.26,50.43 15,70.78 17.33,81 41.62,76 29.41,93.2 25.18,112.05 28.24,133.38 15.09,122.55 11.62,127 0,136.78 c 22.65,22.37 25.82,-5.4 29.85,2.44 10.51,59.58 79.42,50.89 98.15,104.61 v 0 c 18.7,-53.69 87.67,-45.07 98.15,-104.61 4,-7.84 7.2,19.93 29.85,-2.44 -11.62,-9.74 -15.09,-14.23 -28.24,-3.4 3.06,-21.33 -1.17,-40.18 -13.38,-57.39 24.29,5 26.59,-5.21 33.36,-25.56 1.77,-4.83 -15.59,-0.84 -18.57,-1.08 -14.17,1.65 -15.7,10.9 -17.58,23.85 -12.11,-8.74 -24.53,-17.61 -39.94,-18 -12.84,-2.88 -52,13.12 -34.48,28.81 1.76,1.17 3.24,1.37 4.5,-0.73 10.22,-15.68 34,-15.48 49.07,-7.85 29,15 29.78,55.89 10.6,79.23 -18.64,26.53 -57.06,25.22 -73.34,53.82 M 55.53,145.72 c 22.71,-6.19 39.22,9.32 58,19.48 -9.16,-15.26 -29.49,-25.07 -29,-45.08 0.6,-15.15 9.75,-22.07 24.3,-21.38 -13.55,-32.27 -72.77,0.62 -39.75,35.8 -5.55,2.57 -11.42,4.61 -13.55,11.18 z m 144.81,0 c -22.71,-6.19 -39.22,9.32 -58,19.48 9.15,-15.26 29.49,-25.07 29,-45.08 -0.59,-15.15 -9.75,-22.07 -24.3,-21.38 13.56,-32.27 72.78,0.62 39.76,35.8 5.53,2.57 11.4,4.61 13.54,11.18 z\"\r\n  ]\r\n} as const\r\n\r\nexport const faElectro = {\r\n  prefix: 'faga',\r\n  iconName: \"electro\",\r\n  icon: [\r\n    256, 255.93,\r\n    [],\r\n    null,\r\n    \"m 82.89,247 c 18.67,-0.54 37.53,0.32 55.29,-8.56 -4.33,-1.33 -8.38,-2.44 -12.34,-3.83 -3.96,-1.39 -7.9,-2.9 -11.75,-4.59 -18.94,-8.36 -33.54,-21.16 -40.88,-41 -4,-10.76 -4.3,-21.89 -2.34,-33.27 2.15,2.54 4.07,5.06 6.25,7.34 a 19.06,19.06 0 0 0 18.45,5.87 c 13.74,-2.69 20.43,-12.1 23.23,-24.81 6,-27.23 -17.69,-49 -38.08,-51.19 C 54,90 31.07,105.38 22,132.23 c -4.39,13 -5.78,26.38 -6,40 -0.09,5.66 0,11.31 0,16.39 C 7.41,180.19 -1.49,140.78 0.21,120.34 4,75.12 26.48,44.41 49.2,27.4 44.46,36 39.72,44.15 35.46,52.52 a 66.8,66.8 0 0 0 -7.54,27.81 c 3.8,-3.52 7,-6.6 10.36,-9.58 11.41,-10.27 24.25,-18 39.4,-21.2 21,-4.48 39.36,1.3 56.23,14.51 l -8.1,1.64 c -16.84,3.42 -20.26,19.38 -16,30.91 5.32,14.55 16.58,22.4 31.38,24.52 31.78,4.54 52,-22.88 52.53,-46.84 C 194.14,55.79 186.29,41.07 173.6,28.44 161.92,16.86 148,8.64 133.29,1.65 c -1,-0.45 -1.9,-0.93 -3.31,-1.63 58.92,-1.16 117.5,45.2 126,108.14 -5.15,-8.24 -9.95,-16.44 -15.29,-24.28 A 67.88,67.88 0 0 0 220.43,64 c 1.44,6.78 3.13,13.17 4.14,19.67 3.48,22.42 0.22,43.4 -14.48,61.52 -7.26,8.94 -17.06,14.39 -27.61,18.59 a 2.24,2.24 0 0 1 -0.89,-0.05 c 1.15,-3.61 2.46,-7.11 3.36,-10.72 2.48,-9.88 -1.74,-17.14 -9.58,-22.57 -10.49,-7.26 -21.48,-5.8 -32.28,-0.84 -19.72,9.05 -29.13,32.62 -21.36,54.15 7.33,20.28 22.23,31.38 43.47,34.33 16.08,2.25 30.82,-2.52 45,-9.06 8.51,-3.92 16.41,-9.18 24.57,-13.87 1,-0.58 2,-1.3 3.3,-2.18 -25.8,49.26 -96.72,78.83 -155.18,54.03 z\"\r\n  ]\r\n} as const\r\n\r\nexport const faGeo = {\r\n  prefix: 'faga',\r\n  iconName: \"geo\",\r\n  icon: [\r\n    238.25, 256,\r\n    [],\r\n    null,\r\n    \"m 117,146.13 c 9.05,-9.84 17.43,-19 26,-28.11 1.62,-1.71 2,-3.07 1.1,-5.23 C 138.69,100 129.78,90 119.26,81.36 a 3.27,3.27 0 0 0 -3,0.15 c -7.08,4.71 -14.35,9.2 -21.05,14.43 a 294.61,294.61 0 0 0 -39.14,36.43 c -3.31,-6.69 -7,-12.84 -9.47,-19.44 -3.69,-9.79 -6.51,-19.9 -9.79,-29.85 -0.68,-2.06 -0.06,-3.56 1.13,-5.22 A 223.77,223.77 0 0 1 70.27,41.56 C 85.61,27.75 101.6,14.68 117.33,1.3 a 20.33,20.33 0 0 1 2,-1.3 c 9.21,7.52 18.66,14.93 27.77,22.73 a 531.86,531.86 0 0 1 52.08,50.73 c 14.37,16.16 27.6,33.17 38.31,52 a 4.45,4.45 0 0 1 0,5.09 c -6.79,11.61 -15.17,22 -24.59,32.16 C 193.24,105.15 157.97,57.64 118.59,12.01 96.37,37.82 73.4,62.75 64.05,96.47 l 0.66,0.56 53.63,-45 c 0.72,0.58 1.48,1.1 2.13,1.73 a 247.49,247.49 0 0 1 46.86,61.6 c 1.48,2.77 1.22,4.61 -0.94,6.51 -9.14,8.1 -18.21,16.28 -27.47,24.24 -4.13,3.55 -8.64,6.66 -13.46,10.34 z m 4.29,-36.26 c -9.05,9.84 -17.43,19 -26,28.11 -1.62,1.71 -2,3.07 -1.1,5.23 C 99.56,156 108.48,166 119,174.64 a 3.27,3.27 0 0 0 3,-0.15 c 7.09,-4.71 14.35,-9.2 21,-14.43 a 294.61,294.61 0 0 0 39.14,-36.43 c 3.32,6.69 7,12.84 9.47,19.44 3.69,9.79 6.51,19.9 9.79,29.85 0.68,2.06 0.06,3.56 -1.13,5.22 A 223.71,223.71 0 0 1 168,214.44 c -15.35,13.81 -31.34,26.88 -47.07,40.26 a 20.33,20.33 0 0 1 -2,1.3 c -9.21,-7.52 -18.66,-14.93 -27.77,-22.73 A 533,533 0 0 1 39.1,182.54 C 24.73,166.38 11.5,149.37 0.79,130.54 a 4.45,4.45 0 0 1 0,-5.09 c 6.8,-11.61 15.17,-22 24.59,-32.16 19.69,57.52 54.95,105.03 94.33,150.71 22.18,-25.77 45.14,-50.7 54.49,-84.42 l -0.66,-0.56 -53.63,45 c -0.72,-0.58 -1.48,-1.1 -2.13,-1.73 a 247.21,247.21 0 0 1 -46.85,-61.6 c -1.49,-2.77 -1.22,-4.61 0.93,-6.51 9.14,-8.1 18.22,-16.28 27.47,-24.24 4.14,-3.55 8.65,-6.66 13.46,-10.34 z\"\r\n  ]\r\n} as const\r\n\r\nexport const faHydro = {\r\n  prefix: 'faga',\r\n  iconName: \"hydro\",\r\n  icon: [\r\n    256, 255.08,\r\n    [],\r\n    null,\r\n    \"m 35.02,129.17999 a 17.51,17.51 0 0 1 -17.51,17.51 17.51,17.51 0 0 1 -17.51,-17.51 17.51,17.51 0 0 1 17.51,-17.51 17.51,17.51 0 0 1 17.51,17.51 z M 52.53,185.75 a 12.12,12.12 0 0 1 -12.12,12.12 12.12,12.12 0 0 1 -12.12,-12.12 12.12,12.12 0 0 1 12.12,-12.12 12.12,12.12 0 0 1 12.12,12.12 z m 113.38,26.36 c -6.42,10.72 -15.68,18 -27.81,20.95 A 45.73,45.73 0 0 1 82.1,195 c -4.17,-29.65 20.51,-50.45 41.69,-51.37 16.32,-0.71 29.92,4.2 39.68,17.38 22.18,25.48 -11.95,60.45 -26.05,22.78 -4.07,-11.36 -15.6,-15.22 -26.2,-9.24 -21.34,12 -15.74,37.72 0.13,47.78 14.5,9.18 29,7.78 43,-1.17 4.06,-2.63 7.7,-6.01 11.56,-9.05 z M 53.43,223.43 c 2,1 3.31,1.68 4.62,2.38 a 145.39,145.39 0 0 0 71.15,17.61 c 31,-0.3 57.78,-21.91 65.42,-52 9.16,-36.14 -13.08,-77.45 -56.52,-84.44 a 66.15,66.15 0 0 0 -30.92,2.41 C 95.25,113.13 87.86,106.6 85,99 81.82,90.57 85.56,81.61 94.09,77.69 A 79.12,79.12 0 0 1 121.17,71 c 41.42,-3.23 80.05,23.18 92.29,63 12.92,41.41 -8.18,85.75 -46,105.4 C 244.58,211.18 253.8,96.6 182.3,56.24 163.15,43.76 141.9,39.24 119.44,41.06 93.13,43.2 70.87,54.36 52.72,73.53 a 116,116 0 0 0 -7.62,9.58 c -4.36,5.68 -10.25,7.53 -17,6.16 C 21.35,87.9 16,84.7 13.86,77.61 12.49,73.13 13.66,68.92 15.66,65.1 A 113,113 0 0 1 40.66,33.62 129.63,129.63 0 0 1 112.19,1 c 49.3,-6.26 99.42,17.15 125.22,61.43 49,74.95 -4.82,182.61 -93.16,191.49 A 125,125 0 0 1 85,247.65 C 74,243.79 58.83,232.28 53.43,223.43 Z\"\r\n  ]\r\n} as const\r\n\r\nexport const faPyro = {\r\n  prefix: 'faga',\r\n  iconName: \"pyro\",\r\n  icon: [\r\n    209.91, 256,\r\n    [],\r\n    null,\r\n    \"M 73.69,155.3 C 99.47,97.56 186.24,166 116.93,192 135.08,163.12 99.59,140.5 73.69,155.3 Z M 107,256 C 78.82,229.13 43.38,214.86 12.63,192.42 -14.27,172.26 7.73,136.7 23.35,116.3 34.4,100.88 47,87.42 55.43,70.19 c -0.12,29.27 28.52,39.35 50.85,49.53 -42.11,-2.47 -78,46.67 -44.37,80 -34.27,-14.14 -49.42,-44.88 -23.83,-76.26 -26.09,11.49 -36.63,49.08 -9.8,67 24.37,16.53 52.4,27.12 76,45 a 3.76,3.76 0 0 0 3.42,0.34 c 22.73,-16.31 47.72,-28.83 71.75,-43 30.24,-16.22 26.88,-50.72 -2.82,-65.53 26.62,51.57 -22.18,90.38 -71.24,86.78 -53.55,-3.92 -56.4,-58 -11.51,-49.53 -9.16,6.75 -15.54,15.78 -12.48,27.35 9.63,27.35 54,17.82 69.67,0.57 20,-18.78 6,-55.42 -17.9,-65.74 -27.28,-12.85 -81.25,-27.93 -60.38,-68.33 12.76,-19.8 27.65,-33 30,-58.36 7.92,10.63 26.4,31.43 22.68,44.83 C 121,58 105.55,62.79 100.74,76.1 c -6.23,12.63 -2.29,25.78 10.56,33.35 -18.62,-19.93 1.65,-44 21,-54.5 -11.38,28.41 -3.57,55.63 20.78,74.16 -13.25,-29.18 -24.62,-30 -2.33,-62.31 4.32,21.43 16.15,37.48 33,50.57 37.62,33 34.76,68.23 -9.51,92.66 C 150.44,223.42 126.7,236.62 107,256 Z\"\r\n  ]\r\n} as const\r\n","import { ArtifactSetKey, CharacterKey, ElementKey, Rarity, SetNum, SlotKey } from \"./consts\";\r\nimport { BonusStats, BasicStats } from \"./stats\";\r\nimport { IConditionals } from \"./IConditional\";\r\nimport { DocumentSection } from \"./character\";\r\n\r\nexport type IArtifactSheets = StrictDict<ArtifactSetKey, IArtifactSheet>\r\n\r\nexport interface IArtifactSheet {\r\n  name: string, // only to stored the English name for OCR, otherwise, should come from localization pipeline\r\n  rarity: readonly Rarity[],\r\n  icons: Dict<SlotKey, string>,\r\n  conditionals?: IConditionals,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  stats?: BonusStats | ((stats: BasicStats) => BonusStats)\r\n  document?: DocumentSection[],\r\n}\r\n\r\nexport interface IFlexArtifact {\r\n  id: string\r\n  setKey: ArtifactSetKey\r\n  numStars: Rarity\r\n  level: number,\r\n  slotKey: SlotKey,\r\n  mainStatKey: MainStatKey,\r\n  substats: IFlexSubstat[],\r\n\r\n  location: CharacterKey | \"\",\r\n  lock: boolean,\r\n}\r\nexport interface IArtifact extends IFlexArtifact {\r\n  mainStatVal: number,\r\n  substats: Substat[],\r\n}\r\n\r\nexport interface IFlexSubstat {\r\n  key: SubstatKey | \"\"\r\n  value: number\r\n}\r\nexport interface Substat extends IFlexSubstat {\r\n  rolls: number[],\r\n  efficiency: number,\r\n}\r\nexport type StatKey = MainStatKey | SubstatKey | ReactionDMGStatKey | MoveDMGStatKey | ElementalRESStatKey | ElementalEnemyRESStatKey | SpecializedStatKey\r\n\r\ntype ElementalRESStatKey = `${ElementKey | \"physical\"}_res_`\r\ntype ElementalEnemyRESStatKey = `${ElementKey | \"physical\"}_enemyRes_`\r\ntype ReactionDMGStatKey = \"overloaded_dmg_\" | \"shattered_dmg_\" | \"electrocharged_dmg_\" | \"superconduct_dmg_\" | \"swirl_dmg_\" | \"vaporize_dmg_\" | \"melt_dmg_\" | \"burning_dmg_\" | \"crystalize_dmg_\"\r\ntype MoveDMGStatKey = \"normal_dmg_\" | \"charged_dmg_\" | \"skill_dmg_\" | \"burst_dmg_\"\r\n\r\nexport const allMainStatKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"heal_\"] as const\r\nexport const allSubstats = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"def\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\",] as const\r\n\r\n// TODO: Check if these actually applies\r\ntype SpecializedStatKey = \"normal_critRate_\" | \"charged_critRate_\" | \"plunging_dmg_\" | \"powShield_\" | \"enemyDEFRed_\" | \"skillCDRed_\" | \"incHeal_\" | \"weakspotDMG_\" | \"dmg_\" | \"moveSPD_\" | \"staminaDec_\" | \"atkSPD_\" | \"cdRed_\" | \"finalHP\" | \"finalATK\" | \"finalDEF\"\r\n\r\nexport type MainStatKey = typeof allMainStatKeys[number]\r\nexport type SubstatKey = typeof allSubstats[number]\r\n","import { FormulaItem, IBaseStat } from './Types/character';\r\nimport { BonusStats, ICalculatedStats, Modifier } from './Types/stats';\r\nimport { resolve } from './Util/KeyPathUtil';\r\nimport { objPathValue } from './Util/Util';\r\n\r\nexport const formulaImport = import('./Data/formula').then(imp => {\r\n  Formula.formulas = imp.default\r\n  return imp.default\r\n})\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | object | undefined> => formulaImport.then(formulas => objPathValue(formulas, keys))\r\n  static computeModifier(stat: IBaseStat, modifier: Modifier | undefined): (s: ICalculatedStats) => BonusStats {\r\n    if (!modifier) return () => ({})\r\n\r\n    const objs = Object.entries(modifier).map(([key, formulas]) =>\r\n      [key, formulas.map(path => Formula.getCurrent(path, stat)[0])] as [string, ((s: ICalculatedStats) => number)[]])\r\n\r\n    return s => Object.fromEntries(objs.map(([key, formulas]) =>\r\n      [key, formulas.reduce((a, formula) => a + formula(s), 0)]))\r\n  }\r\n  static getCurrent(path: string[], stat: IBaseStat): FormulaItem {\r\n    return resolve<any, (stat: IBaseStat) => FormulaItem>(Formula.formulas, path)(stat)\r\n  }\r\n}\r\n","import { Trans, useTranslation } from \"react-i18next\"\r\nconst components = {\r\n  anemo: <span className=\"text-anemo\" />,\r\n  geo: <span className=\"text-geo\" />,\r\n  cryo: <span className=\"text-cryo\" />,\r\n  hydro: <span className=\"text-hydro\" />,\r\n  pyro: <span className=\"text-pyro\" />,\r\n  electro: <span className=\"text-electro\" />,\r\n}\r\n\r\nexport function Translate({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  const textObj = values ? t(textKey, values, { returnObjects: true }) as any : t(textKey, { returnObjects: true }) as any\r\n  if (typeof textObj === \"string\") return children ? <Trans i18nKey={textKey} t={t} components={components} values={values} >{children}</Trans> : <Trans i18nKey={textKey} t={t} components={components} values={values} />\r\n  return <T key18={textKey} obj={textObj} t={t} values={values} />\r\n}\r\n/**this is used cause the `components` prop mess with tag interpolation. */\r\nexport function TransWrapper({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  return <Trans i18nKey={textKey} t={t} values={values} >{children}</Trans>\r\n}\r\nfunction Para({ children }: { children?: JSX.Element }) {\r\n  return <p className=\"mb-0\">{children}</p>\r\n}\r\n\r\nfunction T({ key18, obj, li, t, values }: { key18: string, obj: any, li?: boolean, t, values?: any }) {\r\n  if (typeof obj === \"string\") return <Trans i18nKey={key18} components={components} parent={Para} t={t} values={values} />\r\n  if (Array.isArray(obj))\r\n    return <ul className=\"mb-2\">\r\n      <T key18={key18} obj={{ ...obj }} li t={t} values={values} />\r\n    </ul>\r\n  return Object.entries(obj).map(([key, val]) => {\r\n    if (val === \"<br/>\") return <div key={key as any} className=\"mb-2\" />\r\n\r\n    if (typeof val === \"object\") return <T key={key as any} key18={`${key18}.${key as any}`} obj={val} t={t} values={values} />\r\n    if (typeof val === \"string\") {\r\n      const trans = <Trans key={key as any} i18nKey={`${key18}.${key}`} components={components} parent={Para} t={t} values={values} />\r\n      return li ? <li key={key as any}>{trans}</li> : trans\r\n    }\r\n    return null\r\n  }) as any\r\n}","import { ElementKey } from \"../Types/consts\"\r\n\r\nconst ElementalData: StrictDict<ElementKey | \"physical\", { name: string }> = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined, dependencies: any[]): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>(undefined);\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => {\r\n      pending = false\r\n      setRes(undefined)\r\n    }\r\n  }, dependencies)// eslint-disable-line react-hooks/exhaustive-deps\r\n  return res\r\n}\r\n","export const getRandomElementFromArray = <T>(array: readonly T[]): T => array[Math.floor(Math.random() * array.length)];\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nexport function getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n}\r\nexport function getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport const loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nexport const saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nexport const deepClone = <T>(obj: T): T =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nexport const clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nexport const getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nexport const clamp01 = (val) => clamp(val, 0, 1)\r\nexport const clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nexport function strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nexport function hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nexport function objMultiplication(obj, multi) {\r\n  if (multi === 1) return obj\r\n  Object.keys(obj).forEach((prop: any) => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n  return obj\r\n}\r\n\r\n//assign obj.[keys...] = value\r\nexport function layeredAssignment(obj, keys: string[], value) {\r\n  keys.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, obj)\r\n  return obj\r\n}\r\n//get the value in a nested object, giving array of path\r\nexport function objPathValue(obj: object, keys: string[]) {\r\n  return keys.reduce((a, k) => a?.[k], obj)\r\n}\r\n//delete the value denoted by the path. Will also delete empty objects as well.\r\nexport function deletePropPath(obj, path) {\r\n  const tempPath = [...path]\r\n  const lastKey = tempPath.pop()\r\n  const objPathed = objPathValue(obj, tempPath)\r\n  delete objPathed[lastKey];\r\n}\r\n\r\nexport function objClearEmpties(o) {\r\n  for (const k in o) {\r\n    if (typeof o[k] !== \"object\") continue\r\n    objClearEmpties(o[k])\r\n    if (!Object.keys(o[k]).length) delete o[k];\r\n  }\r\n}\r\nexport function crawlObject(obj, keys, validate, cb) {\r\n  if (validate(obj)) cb(obj, keys)\r\n  else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => crawlObject(val, [...keys, key], validate, cb))\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nexport const getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\n\r\nexport function evalIfFunc<T, X>(value: T | ((arg: X) => T), arg: X): T {\r\n  return typeof value === \"function\" ? (value as any)(arg) : value\r\n}","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\n\r\nexport default function statsToFields(statVals, stats = {}): IFieldDisplay[] {\r\n  return Object.entries(statVals).filter(([statKey]) => statKey !== \"modifiers\").map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal as number,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => addConditional(sheets, \"weapon\")), //attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => addConditional(sheets, \"artifact\")) //attach artifact conditionals to Conditional\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow?.(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n"],"sourceRoot":""}