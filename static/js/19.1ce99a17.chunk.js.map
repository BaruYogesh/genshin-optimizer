{"version":3,"sources":["ReactHooks/useCharacterReducer.tsx","Components/FieldDisplay.tsx","Components/CustomNumberInput.tsx","Components/Character/CharacterDropdownButton.tsx","Components/BootstrapTooltip.tsx","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/ExpandButton.tsx","Components/Character/ThumbSide.tsx","Components/Character/LocationName.tsx","Components/TextButton.tsx","Components/StatDisplay.tsx","Character/StatInput.tsx","Artifact/ArtifactCard.tsx","Artifact/PercentBadge.tsx","Components/Weapon/WeaponSelectionModal.tsx","Weapon/WeaponCard.tsx","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Components/EnemyEditor.tsx","Components/HitModeEditor.tsx","Weapon/WeaponStatsCard.tsx","Weapon/WeaponDisplayCard.tsx","Components/FormulaCalcCard.tsx","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx"],"names":["useCharacterReducer","characterKey","database","useContext","DatabaseContext","useCallback","action","type","setWeaponLocation","id","character","_getChar","statKey","value","bonusStats","characterBaseStats","updateChar","FieldDisplay","field","buildContext","newBuild","equippedBuild","compareBuild","build","canShow","useMemo","fixedVal","fixed","fieldVal","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","parseInt","toFixed","diff","color","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","title","component","sx","cursor","ml","icon","faQuestionCircle","unit","display","justifyContent","FieldDisplayList","styled","List","theme","borderRadius","shape","overflow","margin","backgroundColor","palette","contentDark","main","contentDarker","StyledInputBase","InputBase","primary","transition","dark","CustomNumberInputButtonGroupWrapper","shouldForwardProp","prop","includes","padding","border","width","height","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","CustomNumberInput","onChange","disabled","float","props","useState","state","setState","sendChange","parseFunc","parseFloat","useEffect","toString","onInputChange","e","target","onKeyDOwn","key","aria-label","onBlur","onKeyDown","CharacterDropdownButton","inventory","noUnselect","filter","t","useTranslation","characterSheets","usePromise","CharacterSheet","getAll","characterSheet","get","characterKeys","_getCharKeys","ck","sort","name","startIcon","thumbImg","src","thumbImgSide","onClick","selected","variant","noWrap","CharacterMenuItemArray","selectedCharacterKey","map","BootstrapTooltip","className","arrow","classes","popper","tooltipClasses","common","black","tooltip","ConditionalSelector","conditional","conditionalValue","setConditional","stats","conditionalNum","conditionalStateKey","states","Object","values","text","evalIfFunc","maxStack","badge","SqBadge","DropdownButton","size","MenuItem","Divider","entries","flatMap","i","stateKey","condial","Array","keys","v","stack","Button","CheckBox","CheckBoxOutlineBlank","ConditionalDisplay","characterDispatch","Conditional","resolve","undefined","conditionalStats","fields","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","conditionalValues","deletePropPath","objClearEmpties","CardDark","CardContent","m","DocumentDisplay","sections","section","talentText","Box","pb","mb","length","ExpandButton","expand","other","transform","marginLeft","transitions","create","duration","shortest","ThumbSide","lineHeight","verticalAlign","marginTop","spacing","marginRight","marginBottom","LocationName","location","nameWIthIcon","DisabledButton","secondary","TextButton","children","DisplayStatDiff","label","val","oldVal","hasBonus","oldText","diffText","valueText","StatDisplay","isArray","Formula","characterHP","characterDEF","characterATK","weaponATK","Stat","getStatUnit","fixedUnit","StatIcon","getStatName","labelVariant","hasBonusStats","FlexButtonGroup","ButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","restProps","whiteSpace","flexBasis","flexGrow","px","inputProps","textAlign","endAdornment","allSubstatFilter","Set","allSubstats","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","effFilter","databaseArtifact","updateDatabaseArtifact","followArt","sheet","ArtifactSheet","_getArt","setKey","editable","localDatabase","art","lock","slotKey","rarity","level","mainStatKey","substats","exclude","mainStatLevel","Math","max","min","levelVariant","floor","mainStatVal","valueStringWithUnit","Artifact","mainStatValue","getArtifactEfficiency","currentEfficiency","maxEfficiency","artifactValid","slotName","getSlotName","slotDesc","getSlotDesc","slotDescTooltip","faInfoCircle","setEffects","setDescTooltip","setNumKey","setNum","setEffectDesc","fallback","minHeight","flexDirection","py","alignItems","pl","updateArt","container","flexWrap","item","stars","colored","xs","md","image","slotIcons","pt","stat","numRolls","rolls","rollColor","clamp","efficiency","effOpacity","statName","mr","opacity","has","my","valid","flexShrink","charKey","setArtLocation","faEdit","faBan","faChartLine","faTrashAlt","PercentBadge","badgeColor","WeaponSelectionModal","show","onHide","onSelect","propWeaponFilter","weaponFilter","weaponSheets","WeaponSheet","setWeaponfilter","weaponIdList","allWeaponKeys","wKey","weaponType","a","b","open","onClose","weaponKey","weaponSheet","lg","img","Assets","weaponTypes","large","WeaponCard","weaponId","canEquip","databaseWeapon","updateDatabaseWeapon","followWeapon","weapon","cs","weaponTypeKey","actionWrapperFunc","equipOnChar","ascension","refinement","weaponMainVal","getMainStatValue","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","statMap","passiveName","push","imgAwaken","condition","wrapper","avatar","fontSize","titleTypographyProps","updateWeapon","ascensionMaxLevel","alignContent","mt","statVal","SetEffectDisplay","setEffectText","setStats","setNumStats","setStatsFields","document","setEffectDocument","StatDisplayComponent","sheets","statsDisplayKeys","sectionKey","sectionValues","header","getFormulaTargetsDisplayHeading","characterEle","sm","gutterBottom","mx","JSON","stringify","EnemyExpandCard","expanded","setexpanded","toggle","getStatValueWithBonus","allElements","element","EnemyResText","aria-expanded","p","in","timeout","unmountOnExit","EnemyEditor","immune","resKey","content","uncoloredEleIcons","bsProps","charBaseStats","fullWidth","href","rel","bgcolor","contentLight","getStatNameRaw","enemyLevel","eleKey","immunityStatKey","elementImmunity","faCheckSquare","faSquare","infusionVals","pyro","cryo","InfusionAuraDropdown","infusionAura","isMelee","ReactionToggle","reactionMode","charEleKey","exclusive","baseColor","hydro","HitModeToggle","hitMode","DamageOptionsCard","WeaponStatsCard","statsVals","s","Typography","WeaponDisplayCard","propWeaponId","charData","footer","useForceUpdate","databaseToken","onDatabaseUpdate","buildContextObj","_getWeapon","weaponDispatch","newWeapon","setLevel","findIndex","ascenML","setAscension","lowerAscension","refineIndex","ws","initialWeaponFilter","showModal","setshowModal","CardLight","Grid","k","startAdornment","ambiguousLevel","milestoneLevels","lv","as","lvlstr","Lock","LockOpen","CloseButton","SwapBtn","onChangeId","substatKey","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","gap","maxWidth","minWidth","description","process","getLevelString","passiveDescription","Provider","setCompareBuild","atk","setShow","close","clickHandler","weapons","dbWeapon","SwapHoriz","ModalWrapper","ImgIcon","FormulaCalcCard","ExpandMore","Collapse","CalculationDisplay","displayStatKeys","getDisplayStatKeys","Skeleton","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","reverse","Boolean","Accordion","AccordionSummary","expandIcon","printStat","AccordionDetails","subKey","formulaField","fieldFixed","fieldUnit","fieldFormula","fieldFormulaDependency","fieldValue","CharacterArtifactPane","history","useHistory","statKeys","edit","artid","pathname","artToEditId","artifactSheets","followAnyArt","equipArts","window","confirm","equippedArtifacts","equipArtifacts","unequipArts","objectFromKeyMap","allSlotKeys","SolidToggleButtonGroup","ToggleButton","Card","warning","setToSlots","setNumKeyArr","CharacterOverviewPane","constellation","tlvl","elementKey","CardMedia","cardImg","star","tKey","Badge","badgeContent","skillBoost","burstBoost","overlap","anchorOrigin","vertical","horizontal","getTalentOfKey","constellationName","equippedWeapon","MainStatsCards","statBreakpoint","additionalKeys","editStatKeys","otherStatKeys","forEach","ele","miscStatkeys","specializedStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","specializedStatUnit","displayNewBuildProps","StatDisplayCard","columnSpacing","rowSpacing","editContent","getStatNameWithPercent","setedit","faSave","CharacterTalentPane","ReactionDisplay","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","style","onClickTitle","ReactionComponents","superconduct_hit","sKey","electro","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","shattered_hit","information","crystalize_hit","crystalizeEleToDisplay","eleInterArr","ElementToReactionKeys","Ele","anemo","geo","talentLimits","talent","actionWrapeprFunc","CardActionArea","levelBoost","talentLvlKey","newTalentLevelKey","talentStats","getTalentStats","talentStatsFields","statsEle","talentSheet","ConditionalWrapper","TabPanel","current","role","hidden","aria-labelledby","CharacterDisplayCard","setCharacterKey","propNewBuild","tabName","initialCharacter","followChar","deepClone","tab","settab","onTab","calculateBuild","CharSelectDropdown","Tabs","Tab","HeaderIconDisplay","CharacterSelectionModal","ElementalData","talents"],"mappings":"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","file":"static/js/19.1ce99a17.chunk.js","sourcesContent":["import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { characterBaseStats } from \"../Util/StatUtil\";\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"bonusStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey) {\r\n  const database = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"bonusStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey, value } = action\r\n        const bonusStats = character.bonusStats\r\n        if (bonusStats[statKey] === value) return\r\n\r\n        bonusStats[statKey] = value\r\n        if ((characterBaseStats(character)[statKey] ?? 0) === value)\r\n          delete bonusStats[statKey]\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\r\n  }, [characterKey, database])\r\n\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, List, ListItem, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { buildContext } from \"../Build/Build\";\r\nimport Character from \"../Character/Character\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\nimport ColorText from \"./ColoredText\";\r\n\r\nexport default function FieldDisplay({ field }: { field: IFieldDisplay }) {\r\n  const { newBuild, equippedBuild, compareBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild)\r\n  const canShow = useMemo(() => build ? field?.canShow?.(build) : false, [field, build])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", build)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      //compareAgainstEquipped\r\n      if (compareBuild && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</ColorText> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareBuild, fixedVal, equippedBuild, field, build])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", build), [field, build])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", build), [field, build])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build)\r\n    return fieldFormulaText ? <BootstrapTooltip placement=\"top\" title={<Typography>{fieldFormulaText}</Typography>}>\r\n      <Box component=\"span\" sx={{ cursor: \"help\", ml: 1 }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n    </BootstrapTooltip> : null\r\n  }, [field, build])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", build), [field, build])\r\n\r\n  if (!canShow) return null\r\n  return <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}  >\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <Typography color={`${fieldVariant}.main`}>{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</Typography>\r\n  </ListItem>\r\n}\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));","import { InputBase, InputProps, styled } from '@mui/material'\r\nimport { useCallback, useEffect, useState } from 'react'\r\ntype props = Omit<InputProps, \"onChange\"> & {\r\n  value?: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  allowEmpty?: boolean,\r\n}\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  transition: \"all 0.5s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-focused\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}))\r\n\r\n// wrap the Input with this when using the input in a buttongroup\r\nexport const CustomNumberInputButtonGroupWrapper = styled(\"button\", {\r\n  shouldForwardProp: (prop) => ![\"fullWidth\", \"disableRipple\", \"disableFocusRipple\", \"disableElevation\"].includes(prop as string)\r\n})(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  padding: 0,\r\n  overflow: \"hidden\",\r\n  border: \"none\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  \"& div\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"&.MuiButtonGroup-grouped:not(:last-of-type)\": {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n  },\r\n  \"&.MuiButtonGroup-grouped:not(:first-of-type)\": {\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n  },\r\n}))\r\n\r\nexport default function CustomNumberInput({ value, onChange, disabled = false, float = false, ...props }: props) {\r\n  const [state, setState] = useState(\"\")\r\n  const sendChange = useCallback(\r\n    () => {\r\n      if (state === \"\") return onChange(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state))\r\n    },\r\n    [onChange, state, float],\r\n  )\r\n  useEffect(() => setState(value?.toString() ?? \"\"), [value, setState]) // update value on value change\r\n  const onInputChange = useCallback(e => setState(e.target.value), [setState],)\r\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && sendChange(), [sendChange],)\r\n  return <StyledInputBase\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    type=\"number\"\r\n    onChange={onInputChange}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={onKeyDOwn}\r\n    {...props}\r\n  />\r\n}","import { BusinessCenter, Replay } from \"@mui/icons-material\";\r\nimport { Divider, ListItemIcon, MenuItem, Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport DropdownButton, { DropdownButtonProps } from \"../DropdownMenu/DropdownButton\";\r\nimport ThumbSide from \"./ThumbSide\";\r\n\r\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  value: CharacterKey | \"\"\r\n  onChange: (ck: CharacterKey | \"\") => void\r\n  filter?: (cs: CharacterSheet) => boolean\r\n  inventory?: boolean\r\n  noUnselect?: boolean\r\n}\r\n\r\nexport default function CharacterDropdownButton({ value, onChange, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const database = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\r\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck])).sort()\r\n  return <DropdownButton\r\n    {...props}\r\n    title={characterSheet?.name ?? (inventory ? t`inventory` : t`unselect`)}\r\n    color={value ? \"success\" : \"primary\"}\r\n    startIcon={characterSheet?.thumbImg ? <ThumbSide src={characterSheet.thumbImgSide} /> : (inventory ? <BusinessCenter /> : <Replay />)}>\r\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <BusinessCenter />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`inventory`}\r\n      </Typography>\r\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <Replay />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`unselect`}\r\n      </Typography>\r\n    </MenuItem>)}\r\n    {!noUnselect && <Divider key=\"div\" />}\r\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value)}\r\n  </DropdownButton >\r\n}\r\n\r\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\r\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\") {\r\n  return characterKeys.map(characterKey =>\r\n    <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\r\n      <ListItemIcon>\r\n        <ThumbSide src={characterSheets[characterKey].thumbImgSide} />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {characterSheets?.[characterKey]?.name}\r\n      </Typography>\r\n    </MenuItem>)\r\n}","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n}));\r\nexport default BootstrapTooltip","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, Divider, MenuItem } from '@mui/material';\r\nimport React from 'react';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled = false, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled?: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</SqBadge>\r\n    return <DropdownButton size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n      <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n        <span>Not Active</span>\r\n      </MenuItem>\r\n      <Divider />\r\n      {Object.entries(conditional.states).flatMap(([stateKey, condial]: any, i) =>\r\n        [...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n          <MenuItem key={stateKey + i} onClick={() => setConditional([stack, stateKey])} selected={conditionalStateKey === stateKey && conditionalNum === stack} disabled={conditionalStateKey === stateKey && conditionalNum === stack} >\r\n            {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n          </MenuItem>)\r\n      )}\r\n    </DropdownButton>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</SqBadge>\r\n      return <DropdownButton size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n        <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n          <span>Not Active</span>\r\n        </MenuItem>\r\n        <Divider />\r\n        {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <MenuItem key={stack} onClick={() => setConditional([stack])} selected={conditionalNum === stack} disabled={conditionalNum === stack}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </MenuItem>)}\r\n      </DropdownButton>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"small\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled} startIcon={conditionalNum ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n        {name}\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { CardContent } from \"@mui/material\"\r\nimport { useCallback, useContext, useMemo } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport IConditional from \"../Types/IConditional\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  characterKey: CharacterKey\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, characterKey }: ConditionalDisplayProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    if (!stats) return\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else if (conditional.keys)\r\n      layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats, characterDispatch])\r\n\r\n  if (!canShow || !stats) return null\r\n  return <CardDark>\r\n    <CardContent>\r\n      <ConditionalSelector\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </CardContent>\r\n    <FieldDisplayList sx={{ m: 0 }}>\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Box } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport { DocumentSection } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport ConditionalDisplay from \"./ConditionalDisplay\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype SkillDisplayCardProps = {\r\n  sections: DocumentSection[],\r\n  characterKey: CharacterKey,\r\n}\r\nexport default function DocumentDisplay({ sections, characterKey }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  return <div>{sections?.map((section, i) => {\r\n    if (!section.canShow!(build)) return null\r\n    const talentText = evalIfFunc(section.text, build)\r\n    const fields = section.fields ?? []\r\n    return <Box key={\"section\" + i} sx={{\r\n      pb: -1,\r\n      \"& > *\": {\r\n        mb: 1\r\n      }\r\n    }}>\r\n      <div>{talentText}</div>\r\n      {fields.length > 0 && <FieldDisplayList>\r\n        {fields?.map?.((field, i) => <FieldDisplay key={i} field={field} />)}\r\n      </FieldDisplayList>}\r\n      {!!section.conditional && <ConditionalDisplay conditional={section.conditional} characterKey={characterKey} />}\r\n    </Box>\r\n  })}</div>\r\n}\r\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\nconst ExpandButton = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: (theme as any).transitions.create('transform', {\r\n    duration: (theme as any).transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default ExpandButton","import { styled } from \"@mui/system\";\r\n\r\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  height: `2.3em`,\r\n  lineHeight: 1,\r\n  verticalAlign: \"text-bottom\",\r\n  marginTop: theme.spacing(-3),\r\n  marginLeft: theme.spacing(-1.25),\r\n  marginRight: theme.spacing(-1),\r\n  marginBottom: theme.spacing(-1),\r\n}))\r\n\r\nexport default ThumbSide","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\n\r\nexport default function LocationName({ location }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t`inventory`}</span>}\r\n  </Typography>\r\n\r\n}","import { Button, ButtonProps, styled } from \"@mui/material\";\r\n\r\nconst DisabledButton = styled(Button)(({ theme }) => ({\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.text.secondary,\r\n  }\r\n}))\r\n\r\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\r\n  return <DisabledButton {...props} disabled  >\r\n    {children}\r\n  </DisabledButton>\r\n}\r\n","import { Box, Typography } from \"@mui/material\"\r\nimport { useMemo } from \"react\"\r\nimport Character from \"../Character/Character\"\r\nimport Formula from \"../Formula\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat from \"../Stat\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { characterBaseStats } from \"../Util/StatUtil\"\r\nimport ColorText from \"./ColoredText\"\r\nimport StatIcon from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", hasBonus = false }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <ColorText color={diff > 0 ? \"success\" : \"error\"}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</ColorText>\r\n  const valueText = <>{oldText}{diffText}</>\r\n  return <Box display=\"flex\" justifyContent=\"space-between\" >\r\n    <Typography>{label}</Typography>\r\n    <Typography>\r\n      {hasBonus ? <strong>{valueText}</strong> : valueText}\r\n    </Typography>\r\n  </Box>\r\n}\r\ntype StatDisplayProps = {\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ character, equippedBuild, newBuild, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined, [statKey])\r\n\r\n  const { val, oldVal, fixed, unit, label, hasBonus } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        oldVal = characterBaseStats(character)[statKey] as number | undefined\r\n        if (build) {\r\n          if (statKey === \"finalHP\")\r\n            oldVal = build.characterHP\r\n          else if (statKey === \"finalDEF\")\r\n            oldVal = build.characterDEF\r\n          else if (statKey === \"finalATK\")\r\n            oldVal = build.characterATK + build.weaponATK\r\n        }\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <ColorText color={labelVariant} >{Character.getTalentFieldValue(field, \"text\", build)}</ColorText>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      unit = Character.getTalentFieldValue(field, \"unit\", build, \"\")\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    return { val, oldVal, fixed, unit, label, hasBonus: Character.hasBonusStats(character, statKey) }\r\n  }, [character, equippedBuild, newBuild, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, label: label as any, hasBonus }} />\r\n}","import { Replay } from \"@mui/icons-material\"\r\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\r\nimport { ReactNode } from \"react\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport TextButton from \"../Components/TextButton\"\r\n\r\ntype StatInputInput = ButtonGroupProps & {\r\n  name: Displayable,\r\n  children?: ReactNode,\r\n  value: number,\r\n  placeholder?: string,\r\n  defaultValue?: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n}\r\nconst FlexButtonGroup = styled(ButtonGroup)({\r\n  display: \"flex\"\r\n})\r\n\r\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, ...restProps }: StatInputInput) {\r\n  return <FlexButtonGroup {...restProps} >\r\n    {children}\r\n    <TextButton sx={{ whiteSpace: \"nowrap\" }} >\r\n      {name}\r\n    </TextButton>\r\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: 30, flexGrow: 1 }} >\r\n      <CustomNumberInput\r\n        sx={{ px: 1 }}\r\n        inputProps={{\r\n          sx: { textAlign: \"right\" }\r\n        }}\r\n        float={percent}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onValueChange}\r\n        disabled={disabled}\r\n        endAdornment={percent ? \"%\" : undefined}\r\n      />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\r\n      <Replay />\r\n    </Button>\r\n  </FlexButtonGroup>\r\n}","import { faBan, faChartLine, faEdit, faInfoCircle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Lock, LockOpen } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardActions, CardContent, CardMedia, Chip, Grid, IconButton, Skeleton, Tooltip, Typography } from '@mui/material';\r\nimport React, { Suspense, useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport BootstrapTooltip from '../Components/BootstrapTooltip';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton';\r\nimport LocationName from '../Components/Character/LocationName';\r\nimport ColorText from '../Components/ColoredText';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { database as localDatabase, DatabaseContext } from '../Database/Database';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport Stat from '../Stat';\r\nimport { allSubstats, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { valueStringWithUnit } from '../Util/UIUtil';\r\nimport { clamp } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport SlotNameWithIcon from './Component/SlotNameWIthIcon';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: ICachedArtifact, onEdit?: (string) => void, onDelete?: (string) => void, mainStatAssumptionLevel?: number, effFilter?: Set<SubstatKey> }\r\nconst allSubstatFilter = new Set(allSubstats)\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter }: Data): JSX.Element | null {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseArtifact, updateDatabaseArtifact] = useState(undefined as ICachedArtifact | undefined)\r\n  useEffect(() =>\r\n    artifactId ? database.followArt(artifactId, updateDatabaseArtifact) : undefined,\r\n    [artifactId, updateDatabaseArtifact, database])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? database._getArt(artifactId) : undefined))?.setKey), [artifactObj, artifactId])\r\n  const equipOnChar = (charKey: CharacterKey | \"\") => database.setArtLocation(artifactId!, charKey)\r\n\r\n  const editable = !artifactObj && database === localDatabase // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? databaseArtifact\r\n  if (!art) return null\r\n\r\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude, location = \"\" } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  const mainStatVal = <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{valueStringWithUnit(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, Stat.getStatUnit(mainStatKey))}</ColorText>\r\n  const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\r\n  const artifactValid = maxEfficiency !== 0\r\n  const slotName = sheet?.getSlotName(slotKey) || \"Unknown Piece Name\"\r\n  const slotDesc = sheet?.getSlotDesc(slotKey)\r\n  const slotDescTooltip = slotDesc && <BootstrapTooltip placement=\"top\" title={<Typography>{slotDesc}</Typography>}>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n  const setEffects = sheet?.setEffects\r\n  const setDescTooltip = sheet && setEffects && <BootstrapTooltip placement=\"top\" title={\r\n    <span>\r\n      {Object.keys(setEffects).map(setNumKey => <span key={setNumKey}>\r\n        <Typography variant=\"h6\"><SqBadge color=\"success\">{t(`setEffectNum`, { setNum: setNumKey })}</SqBadge></Typography>\r\n        <Typography>{sheet.setEffectDesc(setNumKey as any)}</Typography>\r\n      </span>)}\r\n    </span>\r\n  }>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <CardContent className={`grad-${rarity}star`} sx={{ py: 1 }}>\r\n        <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={levelVariant as any} />\r\n          <Typography sx={{ pl: 1, flexGrow: 1 }}>{slotName} {slotDescTooltip}</Typography>\r\n          <IconButton color=\"primary\" disabled={!editable} onClick={() => database.updateArt({ lock: !lock }, id)}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>\r\n        </Box>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item flexGrow={1}>\r\n            <Typography color=\"text.secondary\" variant=\"body2\">\r\n              <SlotNameWithIcon slotKey={slotKey} />\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {Stat.getStatName(mainStatKey)}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <strong>{mainStatVal}</strong>\r\n            </Typography>\r\n            <Stars stars={rarity} colored />\r\n            {/* {process.env.NODE_ENV === \"development\" && <Typography color=\"common.black\">{id || `\"\"`} </Typography>} */}\r\n          </Grid>\r\n          <Grid item xs={3} md={4}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={sheet?.slotIcons[slotKey] ?? \"\"}\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardContent sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\", pt: 1, pb: 0 }}>\r\n        {substats.map((stat: ICachedSubstat, i) => {\r\n          if (!stat.value) return null\r\n          const numRolls = stat.rolls?.length ?? 0\r\n          const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n          const efficiency = stat.efficiency ?? 0\r\n          const effOpacity = 0.3 + (efficiency / 100) * 0.7\r\n          const statName = Stat.getStatName(stat.key)\r\n          return (<Box key={i} sx={{ display: \"flex\" }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <SqBadge color={(numRolls ? rollColor : \"error\") as any} sx={{ mr: 1 }}><strong>{numRolls ? numRolls : \"?\"}</strong></SqBadge>\r\n              <Typography color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">{statName}{`+${valueStringWithUnit(stat.value, Stat.getStatUnit(stat.key))}`}</Typography>\r\n            </Box>\r\n            <Typography sx={{ opacity: effOpacity }}>{stat.key && effFilter.has(stat.key) ? valueStringWithUnit(efficiency, \"eff\") : \"-\"}</Typography>\r\n          </Box>)\r\n        })}\r\n        <Box sx={{ display: \"flex\", my: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.curSubEff`}</Typography>\r\n          <PercentBadge value={currentEfficiency} valid={artifactValid} />\r\n        </Box>\r\n        {currentEfficiency !== maxEfficiency && <Box sx={{ display: \"flex\", mb: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.maxSubEff`}</Typography>\r\n          <PercentBadge value={maxEfficiency} valid={artifactValid} />\r\n        </Box>}\r\n        <Box flexGrow={1} />\r\n        <Typography color=\"success.main\">{sheet?.name ?? \"Artifact Set\"} {setDescTooltip}</Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item xs=\"auto\" flexShrink={1}>\r\n            {editable ?\r\n              <CharacterDropdownButton size=\"small\" inventory value={location} onChange={equipOnChar} /> : <LocationName location={location} />}\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n          {editable && <Grid item xs=\"auto\">\r\n            <ButtonGroup sx={{ height: \"100%\" }}>\r\n              {!!onEdit && <Button color=\"info\" onClick={() => onEdit(id)} size=\"small\">\r\n                <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n              </Button>}\r\n              <Tooltip title={<Typography>{t`excludeArtifactTip`}</Typography>} placement=\"top\" arrow>\r\n                <Button onClick={() => database.updateArt({ exclude: !exclude }, id)} color={exclude ? \"error\" : \"success\"} size=\"small\">\r\n                  <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\r\n                </Button>\r\n              </Tooltip>\r\n              {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={lock}>\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n              </Button>}\r\n            </ButtonGroup>\r\n          </Grid>}\r\n        </Grid>\r\n      </CardActions>\r\n    </CardLight >\r\n  </Suspense>\r\n}\r\n","import SqBadge from '../Components/SqBadge';\r\nimport { clamp } from '../Util/Util';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`roll${clamp(Math.floor(value * 0.05) + 1, 1, 6)}`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"error\"\r\n  return <SqBadge color={badgeColor} >{text}</SqBadge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey | \"\">(propWeaponFilter ?? \"\")\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter(propWeaponFilter), [propWeaponFilter])\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.img} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, CardHeader, Grid, IconButton, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useEffect, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton'\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false }: WeaponCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseWeapon, updateDatabaseWeapon] = useState(undefined as ICachedWeapon | undefined)\r\n  useEffect(() =>\r\n    weaponId ? database.followWeapon(weaponId, updateDatabaseWeapon) : undefined,\r\n    [weaponId, updateDatabaseWeapon, database])\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => onClick?.(weaponId)} sx={{ height: \"100%\" }}>{children}</CardActionArea>,\r\n    [onClick, weaponId],\r\n  )\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.setWeaponLocation(weaponId, charKey), [database, weaponId],)\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <div className={`grad-${weaponSheet.rarity}star`} >\r\n          <CardHeader title={weaponSheet.name} avatar={<ImgIcon sx={{ fontSize: \"2em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />} titleTypographyProps={{ variant: \"h6\" }}\r\n            action={!onClick && <IconButton color=\"primary\" onClick={() => database.updateWeapon({ lock: !lock }, id)}>\r\n              {lock ? <Lock /> : <LockOpen />}\r\n            </IconButton>} />\r\n          <Grid container sx={{ flexWrap: \"nowrap\", pl: 2 }}>\r\n            <Grid item flexGrow={1}>\r\n              <Typography component=\"span\" variant=\"h4\">Lv. {level}</Typography>\r\n              <Typography component=\"span\" variant=\"h4\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n              <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n              <Typography><Stars stars={weaponSheet.rarity} colored /></Typography>\r\n            </Grid>\r\n            {/* use flex-end here to align the image to the bottom. */}\r\n            <Grid item container xs={4} alignContent=\"flex-end\">\r\n              <Box\r\n                component=\"img\"\r\n                src={img}\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                sx={{ mt: \"auto\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <CardContent>\r\n          {statMap.map(([statKey, statVal]) => {\r\n            let unit = Stat.getStatUnit(statKey)\r\n            return <Box key={statKey} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[statKey]} {Stat.getStatName(statKey)}</Typography>\r\n              <Typography>{statVal + unit}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n        {/* grow to fill the 100% heigh */}\r\n        <Box flexGrow={1} />\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container sx={{ flexWrap: \"nowrap\" }} >\r\n            <Grid item xs=\"auto\" flexShrink={1}>\r\n              {canEquip ? <CharacterDropdownButton size=\"small\" noUnselect inventory value={location} onChange={equipOnChar} filter={filter} /> : <LocationName location={location} />}\r\n            </Grid>\r\n            <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n            <Grid item xs=\"auto\">\r\n              <ButtonGroup sx={{ height: \"100%\" }}>\r\n                {!!onEdit && <Button color=\"info\" size=\"small\" onClick={() => onEdit(id)} >\r\n                  <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n                </Button>}\r\n                {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n                </Button>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n      </CardLight>\r\n    </ConditionalWrapper>\r\n  </Suspense>\r\n}","import { Box, CardContent, Typography } from \"@mui/material\"\r\nimport CardDark from \"../../Components/Card/CardDark\"\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../../Components/FieldDisplay\"\r\nimport SqBadge from \"../../Components/SqBadge\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectDesc(setNumKey)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const document = sheet.setEffectDocument(setNumKey)\r\n  return <Box sx={{\r\n    mt: 1,\r\n    \"> div\": { mb: 1 },\r\n  }}>\r\n    <CardDark>\r\n      <CardContent>\r\n        <Typography><SqBadge color=\"success\">{setNumKey}-Set</SqBadge> {setEffectText}</Typography>\r\n      </CardContent>\r\n      <FieldDisplayList sx={{ m: 0 }}>\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n      </FieldDisplayList>\r\n    </CardDark>\r\n    {document ? <DocumentDisplay sections={document} characterKey={stats.characterKey} /> : null}\r\n  </Box>\r\n}\r\n","import { CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\"\r\nimport CardDark from \"../../Components/Card/CardDark\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICachedCharacter } from \"../../Types/character\"\r\nimport { ArtifactSetKey } from \"../../Types/consts\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../CharacterUtil\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  character: ICachedCharacter\r\n  statsDisplayKeys: any,\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ sheets, sheets: { characterSheet, weaponSheet }, character, equippedBuild, newBuild, statsDisplayKeys }: StatDisplayComponentProps) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Grid container spacing={1}>{Object.entries(statsDisplayKeys).map(([sectionKey, sectionValues]: any) => {\r\n    const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build?.characterEle)\r\n    return <Grid item key={sectionKey} xs={12} sm={6} md={4} lg={4}>\r\n      <CardDark sx={{ height: \"100%\", }}>\r\n        <CardContent>\r\n          <Typography variant=\"subtitle1\" gutterBottom>{header}</Typography>\r\n          <Divider sx={{ mb: 1, mx: -2 }} />\r\n          {sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statKey }} />)}\r\n        </CardContent>\r\n      </CardDark>\r\n    </Grid>\r\n  })}</Grid>\r\n}","import { faCheckSquare, faSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ExpandMore } from \"@mui/icons-material\";\r\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useState } from 'react';\r\nimport Character from \"../Character/Character\";\r\nimport StatInput from \"../Character/StatInput\";\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../Stat\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allElements, ElementKey } from \"../Types/consts\";\r\nimport { characterBaseStats } from \"../Util/StatUtil\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport ExpandButton from \"./ExpandButton\";\r\nimport { uncoloredEleIcons } from \"./StatIcon\";\r\n\r\nexport function EnemyExpandCard({ character }) {\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1} alignItems=\"center\">\r\n          <Grid container spacing={1}>\r\n            <Grid item>\r\n              <Chip size=\"small\" color=\"success\" label={<span>{Stat.getStatName(\"enemyLevel\")} <strong>{Character.getStatValueWithBonus(character, \"enemyLevel\")}</strong></span>} />\r\n            </Grid>\r\n            {[\"physical\", ...allElements].map(element => <Grid item key={element}>\r\n              <Typography key={element} ><EnemyResText element={element} character={character} /></Typography>\r\n            </Grid>)}\r\n            <Grid item>\r\n              <Typography>DEF Reduction {Character.getStatValueWithBonus(character, \"enemyDEFRed_\")}%</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <ExpandButton\r\n            expand={expanded}\r\n            onClick={toggle}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n            size=\"small\"\r\n            sx={{ p: 0 }}\r\n          >\r\n            <ExpandMore />\r\n          </ExpandButton>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <EnemyEditor character={character} />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nexport function EnemyResText({ character, element }: { character: ICachedCharacter, element: string }) {\r\n  const immune = !!Character.getStatValueWithBonus(character, `${element}_enemyImmunity`)\r\n  const resKey = `${element}_enemyRes_`\r\n  const content = immune ? <span >{uncoloredEleIcons[element]} IMMUNE</span> :\r\n    <span >{uncoloredEleIcons[element]}RES <strong>{Character.getStatValueWithBonus(character, resKey)}%</strong></span>\r\n  return <ColorText color={element}>{content}</ColorText>\r\n}\r\n\r\n\r\nexport function EnemyEditor({ character, character: { key: characterKey, }, bsProps = { xs: 12, md: 6 } }: { character: ICachedCharacter, bsProps?: object }) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const charBaseStats = characterBaseStats(character)\r\n  return <Grid container spacing={1}>\r\n    <Grid item {...bsProps}>\r\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n        To get the specific resistance values of enemies, please visit the wiki.\r\n      </Button>\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>Enemy Level</b>}\r\n        value={Character.getStatValueWithBonus(character, \"enemyLevel\")}\r\n        placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n        defaultValue={charBaseStats.enemyLevel}\r\n        onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey: \"enemyLevel\", value })}\r\n      />\r\n    </Grid>\r\n    {([\"physical\", ...allElements] as Array<ElementKey | \"physical\">).map(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      let immunityStatKey = `${eleKey}_enemyImmunity`\r\n      let elementImmunity = Character.getStatValueWithBonus(character, immunityStatKey)\r\n      return <Grid item key={eleKey} {...bsProps}>\r\n        <StatInput\r\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n          name={<b>{Stat.getStatName(statKey)}</b>}\r\n          value={Character.getStatValueWithBonus(character, statKey)}\r\n          placeholder={Stat.getStatNameRaw(statKey)}\r\n          defaultValue={charBaseStats[statKey]}\r\n          onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey, value })}\r\n          disabled={elementImmunity}\r\n          percent\r\n        >\r\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"bonusStats\", statKey: immunityStatKey, value: !elementImmunity })} >\r\n            <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n          </Button>\r\n        </StatInput>\r\n      </Grid>\r\n    })}\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{Stat.getStatName(\"enemyDEFRed_\")}</b>}\r\n        value={Character.getStatValueWithBonus(character, \"enemyDEFRed_\")}\r\n        placeholder={Stat.getStatNameRaw(\"enemyDEFRed_\")}\r\n        defaultValue={charBaseStats[\"enemyDEFRed_\"]}\r\n        onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey: \"enemyDEFRed_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\r\n    </Grid>\r\n  </Grid>\r\n}","import { CardContent, Grid, MenuItem, ToggleButton, ToggleButtonGroupProps } from \"@mui/material\";\r\nimport { useContext } from 'react';\r\nimport { buildContext } from \"../Build/Build\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\";\r\nimport usePromise from \"../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport DropdownButton, { DropdownButtonProps } from \"./DropdownMenu/DropdownButton\";\r\nimport SolidToggleButtonGroup from \"./SolidToggleButtonGroup\";\r\nimport StatIcon, { uncoloredEleIcons } from \"./StatIcon\";\r\nconst infusionVals = {\r\n  \"\": <span>No External Infusion</span>,\r\n  \"pyro\": <span >{uncoloredEleIcons.pyro} Pyro Infusion</span>,\r\n  \"cryo\": <span >{uncoloredEleIcons.cryo} Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  character: ICachedCharacter,\r\n}\r\nexport function InfusionAuraDropdown({ character: { infusionAura = \"\", key: characterKey }, ...props }: InfusionAuraDropdownProps) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!characterSheet?.isMelee()) return null\r\n  return <DropdownButton title={infusionVals[infusionAura]} color={infusionAura || \"secondary\"} {...props}>\r\n    {Object.entries(infusionVals).map(([key, text]) =>\r\n      <MenuItem key={key} sx={key ? { color: `${key}.main` } : undefined}\r\n        selected={key === infusionAura} disabled={key === infusionAura}\r\n        onClick={() => characterDispatch({ infusionAura: key })}>{text}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n\r\ntype ReactionToggleProps = Omit<ToggleButtonGroupProps, \"color\"> & {\r\n  character: ICachedCharacter,\r\n  build: ICalculatedStats,\r\n}\r\nexport function ReactionToggle({ character: { reactionMode = \"\", infusionAura, key: characterKey }, build, ...props }: ReactionToggleProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <SolidToggleButtonGroup exclusive baseColor=\"secondary\"\r\n    value={reactionMode} onChange={(e, reactionMode) => characterDispatch({ reactionMode })} {...props}>\r\n    <ToggleButton value=\"\" >No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value=\"pyro_vaporize\"  >\r\n      <ColorText color=\"vaporize\">Vaporize(Pyro){StatIcon.hydro}+{StatIcon.pyro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"}  >\r\n      <ColorText color=\"melt\">Melt(Pyro) {StatIcon.cryo}+{StatIcon.pyro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"}  >\r\n      <ColorText color=\"vaporize\">Vaporize(Hydro) {StatIcon.pyro}+{StatIcon.hydro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"}  >\r\n      <ColorText color=\"melt\">Melt(Cryo) {StatIcon.pyro}+{StatIcon.cryo}</ColorText>\r\n    </ToggleButton >}\r\n  </SolidToggleButtonGroup>\r\n}\r\ntype HitModeToggleProps = Omit<ToggleButtonGroupProps, \"color\"> & {\r\n  character: ICachedCharacter\r\n}\r\nexport function HitModeToggle({ character: { hitMode = \"avgHit\", key: characterKey }, ...props }: HitModeToggleProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  return <SolidToggleButtonGroup exclusive baseColor=\"secondary\"\r\n    value={hitMode} onChange={(e, hitMode) => characterDispatch({ hitMode })} {...props} >\r\n    <ToggleButton value=\"avgHit\">Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\">Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\">Crit Hit DMG</ToggleButton>\r\n  </SolidToggleButtonGroup>\r\n}\r\n\r\n\r\nexport function DamageOptionsCard({ character }: { character: ICachedCharacter }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        <Grid item><HitModeToggle character={character} size=\"small\" /></Grid>\r\n        <Grid item><InfusionAuraDropdown character={character} /></Grid>\r\n        <Grid item><ReactionToggle character={character} build={build} size=\"small\" /></Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\n","import { CardContent, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../Components/FieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nexport default function WeaponStatsCard({ title, statsVals = {}, stats }: { title: Displayable, statsVals?: object, stats: ICalculatedStats }) {\r\n  if ((Object.keys(statsVals) as string[]).filter(s => s !== \"modifiers\").length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <CardDark sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Typography>{title}</Typography>\r\n    </CardContent>\r\n    <FieldDisplayList>\r\n      {fields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ColorText from \"../Components/ColoredText\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/LevelData\"\r\nimport { database as localDatabase, DatabaseContext } from \"../Database/Database\"\r\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\nimport WeaponStatsCard from \"./WeaponStatsCard\"\r\n\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  charData?: {\r\n    character: ICachedCharacter,\r\n    characterSheet: CharacterSheet,\r\n    equippedBuild?: ICalculatedStats\r\n    newBuild?: ICalculatedStats\r\n    characterDispatch: (any) => void\r\n  }\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  charData,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  const buildContextObj = useContext(buildContext)\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(propWeaponId!)!,\r\n    [propWeaponId, databaseToken, database])\r\n  const { key, level, refinement, ascension, lock } = weapon\r\n  const { location = \"\", id } = weapon as Partial<ICachedWeapon>\r\n  const weaponSheet: WeaponSheet | undefined = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  useEffect(() =>\r\n    propWeaponId ? database.followWeapon(propWeaponId, onDatabaseUpdate) : undefined,\r\n    [propWeaponId, onDatabaseUpdate, database])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const build = { ...(charData ? (charData.newBuild ?? charData.equippedBuild) : { weapon: { refineIndex: refinement - 1, level, ascension } }) } as any\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container spacing={1}>\r\n            <Grid item >\r\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n              <ButtonGroup>\r\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n                <DropdownButton title={`Refinement ${refinement}`}>\r\n                  <MenuItem>Select Weapon Refinement</MenuItem>\r\n                  <Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </MenuItem>)}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item >\r\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n                <CustomNumberInputButtonGroupWrapper >\r\n                  <CustomNumberInput onChange={setLevel} value={level}\r\n                    startAdornment=\"Lvl. \"\r\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                  />\r\n                </CustomNumberInputButtonGroupWrapper>\r\n                <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n                <DropdownButton title={\"Select Level\"} >\r\n                  {milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    const selected = lv === level && as === ascension\r\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                  })}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n                {lock ? \"Locked\" : \"Unlocked\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!!onClose && <Grid item  >\r\n          <CloseButton onClick={onClose} />\r\n        </Grid>}\r\n        {!!charData && database === localDatabase && <Grid item >\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, charData.character.key)} />\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      {(() => {\r\n        if (!weaponSheet) return null\r\n        const substatKey = weaponSheet.getSubStatKey()\r\n        const weaponDisplayMainVal = weaponSheet.getMainStatValue(level, ascension)\r\n        const weaponDisplaySubVal = weaponSheet.getSubStatValue(level, ascension)\r\n        const weaponPassiveName = weaponSheet.passiveName\r\n        const weaponBonusStats = weaponSheet.stats(build)\r\n        const sections = weaponSheet.document\r\n        return <Box display=\"flex\" gap={{ xs: 1, md: 1.5, lg: 2 }} >\r\n          <Box sx={{ maxWidth: 256 }} flexShrink={1} minWidth=\"25%\">\r\n            <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            <Typography><small>{weaponSheet.description}</small></Typography>\r\n          </Box>\r\n          <Box sx={{ mb: -1 }} flexGrow={1} >\r\n            <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {WeaponSheet.getLevelString(weapon)} {weaponPassiveName && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\r\n            <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n            <Typography variant=\"subtitle1\">{weaponPassiveName}</Typography>\r\n            <Typography gutterBottom>{weaponPassiveName && weaponSheet.passiveDescription(build)}</Typography>\r\n            {build && <buildContext.Provider value={charData ? buildContextObj : { equippedBuild: build, newBuild: undefined, compareBuild: false, setCompareBuild: undefined }}>\r\n              <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: substatKey ? weaponDisplaySubVal : undefined }} stats={build} />\r\n              <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            </buildContext.Provider>}\r\n            {charData && sections ? (() => {\r\n              const { equippedBuild, newBuild } = charData\r\n              const characterKey = (newBuild ? newBuild : equippedBuild)?.characterKey as CharacterKey | undefined\r\n              return !!characterKey && < DocumentDisplay  {...{ sections, equippedBuild, newBuild, characterKey }} />\r\n            })() : null}\r\n          </Box>\r\n        </Box>\r\n      })()}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}","import { ExpandMore } from \"@mui/icons-material\"\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, Collapse, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo, useState } from \"react\"\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../Character/CharacterUtil\"\r\nimport Formula from \"../Formula\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat, { FormulaDisplay } from \"../Stat\"\r\nimport { GetDependencies } from \"../StatDependency\"\r\nimport { ArtifactSetKey } from \"../Types/consts\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardLight from \"./Card/CardLight\"\r\nimport ColorText from \"./ColoredText\"\r\nimport ExpandButton from \"./ExpandButton\"\r\n\r\nexport default function FormulaCalcCard({ sheets }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n}) {\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <Typography>Formulas {\"&\"} Calculations</Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">Expand to see every formula and all their calculations.</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <ExpandButton\r\n            expand={expanded}\r\n            onClick={toggle}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMore />\r\n          </ExpandButton>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <CalculationDisplay sheets={sheets} build={build} />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nfunction CalculationDisplay({ sheets, build }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  build: ICalculatedStats\r\n}) {\r\n  const displayStatKeys = useMemo(() => build && Character.getDisplayStatKeys(build, sheets), [build, sheets])\r\n  if (!build) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\r\n    {Object.entries(displayStatKeys).map(([sectionKey, fields]: [string, any]) => {\r\n      const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build.characterEle)\r\n      return <CardDark key={sectionKey} sx={{ mb: 1 }}>\r\n        <CardContent sx={{ pb: 1 }}>\r\n          <Typography variant=\"h6\">{header}</Typography>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          {fields.map((field, fieldIndex) => {\r\n            if (Array.isArray(field))\r\n              return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} />\r\n            else if (typeof field === \"string\") {//simple statKey field\r\n              const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, [field]), build?.modifiers).reverse()\r\n              return Boolean(subFormulaKeys.length) && <Accordion sx={{ bgcolor: \"contentLight.main\" }} key={fieldIndex}>\r\n                <AccordionSummary expandIcon={<ExpandMore />}>\r\n                  <Typography>{Stat.printStat(field, build)}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  {subFormulaKeys.map(subKey =>\r\n                    <Typography key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></Typography>\r\n                  )}\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            }\r\n            return null\r\n          })}\r\n        </CardContent>\r\n      </CardDark>\r\n    })}\r\n  </Suspense>\r\n}\r\n\r\nfunction FormulaCalculationField({ fieldKeys, build }: { fieldKeys: string[], build: ICalculatedStats }) {\r\n  const formula = usePromise(Formula.get(fieldKeys), [fieldKeys])\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const fieldFixed = Character.getTalentFieldValue(formulaField, \"fixed\", build) ?? 0\r\n  const fieldUnit = Character.getTalentFieldValue(formulaField, \"unit\", build) ?? \"\"\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.(fieldFixed)\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Accordion sx={{ bgcolor: \"contentLight.main\" }}>\r\n    <AccordionSummary expandIcon={<ExpandMore />}>\r\n      <Typography><Box color={`${fieldVariant}.main`} component=\"strong\">{fieldText}</Box> <ColorText color=\"info\">{fieldValue}{fieldUnit}</ColorText></Typography>\r\n    </AccordionSummary>\r\n    <AccordionDetails>\r\n      <Typography><Box color={`${fieldVariant}.main`} component=\"strong\">{fieldText}</Box> <ColorText color=\"info\">{fieldValue}</ColorText> = <small>{fieldFormulaText}</small></Typography>\r\n      {subFormulaKeys.map(subKey =>\r\n        <Typography key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></Typography>\r\n      )}\r\n    </AccordionDetails>\r\n  </Accordion>\r\n}","import { Button, Card, CardContent, Divider, Grid, ToggleButton, Typography } from '@mui/material';\r\nimport { useCallback, useContext, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { buildContext } from '../../Build/Build';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport SolidToggleButtonGroup from '../../Components/SolidToggleButtonGroup';\r\nimport { database as localDatabase, DatabaseContext } from '../../Database/Database';\r\nimport useForceUpdate from '../../ReactHooks/useForceUpdate';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport { allSlotKeys, ArtifactSetKey } from '../../Types/consts';\r\nimport { objectFromKeyMap } from '../../Util/Util';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n  character: ICachedCharacter,\r\n}\r\nfunction CharacterArtifactPane({ sheets, character, character: { key: characterKey } }: CharacterArtifactPaneProps) {\r\n  const { newBuild, equippedBuild, compareBuild, setCompareBuild } = useContext(buildContext)\r\n  const database = useContext(DatabaseContext)\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = (newBuild ? newBuild : equippedBuild)\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => stats && Character.getDisplayStatKeys(stats, sheets), [stats, sheets])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  // TODO: We can also listen only to equipped artifacts\r\n  const [, updateArt] = useForceUpdate()\r\n  useEffect(() => database.followAnyArt(updateArt))\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && database.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n  }, [characterKey, newBuild, database])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    database.equipArtifacts(characterKey, objectFromKeyMap(allSlotKeys, () => \"\"))\r\n  }, [characterKey, database])\r\n  if (!stats) return null\r\n  return <>\r\n    <CardLight sx={{ mb: 1 }}>\r\n      <CardContent>\r\n        <StatDisplayComponent {...{ sheets, character, equippedBuild: (newBuild && !compareBuild) ? undefined : equippedBuild, newBuild, statsDisplayKeys: statKeys }} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            {newBuild ? <Button onClick={equipArts} className=\"mr-2\">Equip artifacts</Button> : (database === localDatabase && <Button color=\"error\" onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n          </Grid>\r\n          <Grid item>\r\n            {/* Compare against new build toggle */}\r\n            {!!newBuild && <SolidToggleButtonGroup exclusive value={compareBuild} onChange={(e, v) => setCompareBuild?.(v)} size=\"small\">\r\n              <ToggleButton value={false} >\r\n                <small>Show New artifact Stats</small>\r\n              </ToggleButton>\r\n              <ToggleButton value={true} >\r\n                <small>Compare against equipped artifacts</small>\r\n              </ToggleButton>\r\n            </SolidToggleButtonGroup>}\r\n          </Grid>\r\n          <Grid item flexGrow={1}></Grid>\r\n          <Grid item>{!!mainStatAssumptionLevel && <Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card>}</Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </CardLight>\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={6} md={4} >\r\n        <CardLight sx={{ height: \"100%\" }} ><CardContent sx={{ height: \"100%\" }}><Grid container spacing={2} flexDirection=\"column\" height=\"100%\" >\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n            <Grid item key={setKey}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>{artifactSheets?.[setKey].name ?? \"\"}</Typography>\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterKey }} />)}\r\n            </Grid>\r\n          )}\r\n        </Grid></CardContent></CardLight>\r\n      </Grid>\r\n      {allSlotKeys.map(slotKey =>\r\n        !!stats?.equippedArtifacts?.[slotKey] && <Grid item xs={6} md={4} key={stats?.equippedArtifacts?.[slotKey]} >\r\n          <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Badge, Box, Button, CardContent, CardMedia, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport { Stars } from \"../../Components/StarDisplay\";\r\nimport StatDisplay from \"../../Components/StatDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../../Stat\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport WeaponDisplayCard from \"../../Weapon/WeaponDisplayCard\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  weaponSheet: WeaponSheet\r\n  character: ICachedCharacter\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, weaponSheet, character, character: { constellation, key: characterKey } }: CharacterOverviewPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const { tlvl } = build\r\n  const elementKey = build.characterEle\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  return <Grid container spacing={1}>\r\n    <Grid item xs={12} md={3}  >\r\n      {/* Image card with star and name and level */}\r\n      <CardLight >\r\n        <CardMedia src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\r\n        <CardContent>\r\n          <Typography variant=\"h5\" >{characterSheet.name} <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} /> {StatIcon[elementKey]} </Typography>\r\n          <Typography><Stars stars={characterSheet.star} colored /></Typography>\r\n          <Typography variant=\"subtitle1\">Lvl. {Character.getLevelString(character)}</Typography>\r\n          <Grid container spacing={1}>\r\n            {[\"auto\", \"skill\", \"burst\"].map(tKey =>\r\n              <Grid item xs={4} key={tKey}>\r\n                <Badge badgeContent={tlvl[tKey] + 1} color={((tKey === \"skill\" && build.skillBoost) || (tKey === \"burst\" && build.burstBoost)) ? \"info\" : \"secondary\"}\r\n                  overlap=\"circular\"\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  sx={{\r\n                    \"& > .MuiBadge-badge\": {\r\n                      fontSize: \"1.25em\",\r\n                      padding: \".25em .4em\",\r\n                      borderRadius: \".5em\",\r\n                      lineHeight: 1,\r\n                      height: \"1.25em\"\r\n                    }\r\n                  }}>\r\n                  <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, build.characterEle)?.img} width=\"100%\" height=\"auto\" />\r\n                </Badge>\r\n              </Grid>)}\r\n          </Grid>\r\n          <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\r\n          <Grid container spacing={1}>\r\n            {[...Array(6).keys()].map(i =>\r\n              <Grid item xs={4} key={i}>\r\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i + 1}`, build.characterEle)?.img}\r\n                  sx={{\r\n                    cursor: \"pointer\",\r\n                    ...(constellation > i ? {} : { filter: \"brightness(50%)\" })\r\n                  }}\r\n                  width=\"100%\" height=\"auto\"\r\n                  onClick={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardLight>\r\n    </Grid>\r\n    <Grid item xs={12} md={9} sx={{\r\n      \"> div:not(:last-child)\": { mb: 1 }\r\n    }} >\r\n      <WeaponDisplayCard {...{ charData: { character, characterSheet, equippedBuild, newBuild, characterDispatch }, weaponId: character.equippedWeapon }} />\r\n      <MainStatsCards {...{ characterSheet, character, equippedBuild, newBuild }} />\r\n    </Grid>\r\n  </Grid >\r\n}\r\nconst EDIT = \"Edit Stats\"\r\nconst EXIT = \"EXIT\"\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nconst statBreakpoint = {\r\n  xs: 12, sm: 6, md: 6, lg: 4,\r\n} as const\r\nfunction MainStatsCards({ characterSheet, character, character: { key: characterKey }, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp\", \"hp_\", \"def\", \"def_\", \"atk\", \"atk_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys: any[] = [];\r\n\r\n  [\"physical\", ...allElements].forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"plunging_dmg_\", \"plunging_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"electrocharged_dmg_\",\r\n    \"vaporize_dmg_\", \"swirl_dmg_\",\r\n    \"moveSPD_\", \"atkSPD_\",\r\n    \"weakspotDMG_\",\r\n  ]\r\n\r\n  const specializedStatKey = characterSheet.getSpecializedStat(character.ascension)\r\n  const specializedStatVal = characterSheet.getSpecializedStatVal(character.ascension)\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild }\r\n  return <>\r\n    <StatDisplayCard\r\n      title=\"Main Base Stats\"\r\n      content={<Grid container columnSpacing={{ xs: 2, lg: 3 }} rowSpacing={1}>\r\n        {displayStatKeys.map(statKey => <Grid item key={statKey} {...statBreakpoint} >\r\n          <StatDisplay statKey={statKey} {...displayNewBuildProps} />\r\n        </Grid>)}\r\n        <Grid item {...statBreakpoint} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n          <span><b>Specialized:</b> <span>{specializedStatKey && StatIcon[specializedStatKey]} {Stat.getStatName(specializedStatKey)}</span></span>\r\n          <span >{`${specializedStatVal.toFixed(Stat.fixedUnit(specializedStatKey))}${specializedStatUnit}`}</span>\r\n        </Grid>\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {editStatKeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              disabled={undefined}\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatNameWithPercent(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Other Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey => <Grid item {...statBreakpoint} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Grid>)}\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? (statKey === \"stamina\" ? 100 : 0)}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              defaultValue={statKey === \"stamina\" ? 100 : undefined}\r\n              onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Misc Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey => <Grid item {...statBreakpoint} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Grid>)}\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n  </>\r\n}\r\nfunction StatDisplayCard({ title, content, editContent }) {\r\n  const [edit, setedit] = useState(false)\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <Typography variant=\"subtitle1\">{title}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button size=\"small\" color={edit ? \"error\" : \"info\"} onClick={() => setedit(!edit)} >\r\n            <span><FontAwesomeIcon icon={edit ? faSave : faEdit} /> {edit ? EXIT : EDIT}</span>\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      {edit ? editContent : content}\r\n    </CardContent>\r\n  </CardLight>\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\";\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport BootstrapTooltip from \"../../Components/BootstrapTooltip\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport ConditionalWrapper from \"../../Components/ConditionalWrapper\";\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../Components/DropdownMenu/DropdownButton\";\r\nimport FieldDisplay, { FieldDisplayList } from \"../../Components/FieldDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n}\r\nexport default function CharacterTalentPane({ characterSheet, character, character: { ascension, constellation, key: characterKey } }: CharacterTalentPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <>\r\n    <ReactionDisplay characterSheet={characterSheet} />\r\n    <Grid container spacing={1} sx={{ mb: 1 }}>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Grid item key={tKey} xs={12} md={6} lg={4} >\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>)}\r\n      {!!characterSheet.getTalentOfKey(\"sprint\", build?.characterEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Grid>}\r\n      {!!characterSheet.getTalentOfKey(\"passive\", build?.characterEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"passive\"\r\n          subtitle=\"Passive\"\r\n        />\r\n      </Grid>}\r\n    </Grid>\r\n    <Grid container spacing={1}>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalentOfKey(tKey, build?.characterEle)) return null\r\n        return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} >\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n    <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography>\r\n    <Grid container spacing={1}>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Grid item key={i} xs={12} md={4}\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet }: { characterSheet: CharacterSheet }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <CardLight sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Grid item key={key}><Ele stats={build} /></Grid>\r\n        })}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"superconduct.main\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.cryo} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"electrocharged.main\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.hydro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"overloaded.main\" >{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.pyro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} {StatIcon.pyro} + {StatIcon.anemo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} {StatIcon.electro}+{StatIcon.anemo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} {StatIcon.cryo} + {StatIcon.anemo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} {StatIcon.hydro} + {StatIcon.anemo}</span>\r\n} as const\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={swirlEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Box>\r\n  </CardDark>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <BootstrapTooltip placement=\"top\" title={<Typography>Claymores, Plunging Attacks and <ColorText color=\"geo\">Geo DMG</ColorText></Typography>}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <ColorText color=\"shattered\">{Stat.getStatName(sKey)} {StatIcon.hydro}+{StatIcon.cryo}+ <ColorText color=\"physical\"><small>Heavy Attack{information} </small></ColorText> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></ColorText>\r\n  </CardContent></CardDark>\r\n}\r\nconst crystalizeEleToDisplay = {\r\n  \"default\": <ColorText color=\"crystalize\">{Stat.getStatName(\"crystalize_hit\")} {StatIcon.electro}/{StatIcon.hydro}/{StatIcon.pyro}/{StatIcon.cryo}+{StatIcon.geo}</ColorText>,\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_crystalize_hit\")} {StatIcon.pyro}+{StatIcon.geo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_crystalize_hit\")} {StatIcon.electro}+{StatIcon.geo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_crystalize_hit\")} {StatIcon.cryo}+{StatIcon.geo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_crystalize_hit\")} {StatIcon.hydro}+{StatIcon.geo}</span>\r\n} as const\r\nfunction CrystalizeCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(crystalizeEleToDisplay)[0])\r\n  const sKey = ele === \"default\" ? \"crystalize_hit\" : `${ele}_crystalize_hit`\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={crystalizeEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(crystalizeEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Box>\r\n  </CardDark>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { talent, ascension, key: characterKey }, characterDispatch, talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const actionWrapeprFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\r\n    [onClickTitle],\r\n  )\r\n\r\n  if (!build) return null\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    const talentLvlKey = talent[talentKey] + levelBoost\r\n    const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n      talent[tKey] = newTalentLevelKey\r\n      characterDispatch({ talent })\r\n    }\r\n    header = <>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <DropdownButton fullWidth title={`Talent Lv. ${talentLvlKey}`} color={levelBoost ? \"info\" : \"primary\"}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <MenuItem key={i} selected={talent[talentKey] === (i + 1)} disabled={talent[talentKey] === (i + 1)} onClick={() => setTalentLevel(talentKey, i + 1)}>Talent Lv. {i + levelBoost + 1}</MenuItem>)}\r\n        </DropdownButton>\r\n      </CardContent>\r\n      <Divider />\r\n    </>\r\n\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const talentStatsFields = talentStats && statsToFields(talentStats, build)\r\n  const statsEle = talentStatsFields && !!talentStatsFields.length &&\r\n    <FieldDisplayList >\r\n      {talentStatsFields.map((field, i) =>\r\n        <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, build.characterEle)\r\n  const sections = talentSheet?.sections\r\n\r\n  return <CardLight sx={{ height: \"100%\" }}>\r\n    {header}\r\n    <CardContent>\r\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item>\r\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\r\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </ConditionalWrapper>\r\n      {/* Display document sections */}\r\n      {sections ? <DocumentDisplay {...{ sections, characterKey, equippedBuild, newBuild }} /> : null}\r\n      {statsEle}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Button, ButtonGroup, Card, CardContent, Divider, Grid, MenuItem, Skeleton, Tab, Tabs, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport { buildContext } from '../Build/Build';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport { CharacterSelectionModal } from '../Components/Character/CharacterSelectionModal';\r\nimport ThumbSide from '../Components/Character/ThumbSide';\r\nimport CloseButton from '../Components/CloseButton';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from '../Components/CustomNumberInput';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport { EnemyExpandCard } from '../Components/EnemyEditor';\r\nimport FormulaCalcCard from '../Components/FormulaCalcCard';\r\nimport { DamageOptionsCard } from '../Components/HitModeEditor';\r\nimport ImgIcon from '../Components/Image/ImgIcon';\r\nimport ElementalData from '../Data/ElementalData';\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from '../Data/LevelData';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport useCharacterReducer from '../ReactHooks/useCharacterReducer';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { ICachedCharacter } from '../Types/character';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { clamp, deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { initialCharacter } from './CharacterUtil';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  value: string;\r\n  current: string | boolean;\r\n}\r\n\r\nfunction TabPanel({ children, current, value, ...other }: TabPanelProps) {\r\n  if (value !== current) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== current}\r\n      id={`simple-tabpanel-${value}`}\r\n      aria-labelledby={`simple-tab-${value}`}\r\n      {...other}\r\n    >\r\n      {children}\r\n    </div>\r\n  </Suspense>\r\n}\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey, setCharacterKey, footer, newBuild: propNewBuild, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [compareBuild, setCompareBuild] = useState(false)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  // TODO: We probably don't need to fetch all sheets,\r\n  // though this wouldn't affect the performance currently.\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  const character = useMemo(() =>\r\n    databaseToken && (database._getChar(characterKey) ?? initialCharacter(characterKey)),\r\n    [characterKey, databaseToken, database])\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(character.equippedWeapon),\r\n    [character.equippedWeapon, databaseToken, database])\r\n\r\n  const characterSheet = characterSheets?.[characterKey]\r\n  const weaponSheet = weapon ? weaponSheets?.[weapon.key] : undefined\r\n  const sheets = characterSheet && weaponSheet && artifactSheets && { characterSheet, weaponSheet, artifactSheets }\r\n\r\n  useEffect(() => {\r\n    return database.followChar(characterKey, onDatabaseUpdate)\r\n  }, [characterKey, onDatabaseUpdate, database])\r\n\r\n  useEffect(() => database.followWeapon(character.equippedWeapon, onDatabaseUpdate),\r\n    [character.equippedWeapon, onDatabaseUpdate, database])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return undefined\r\n    return deepClone(propNewBuild)\r\n  }, [propNewBuild])\r\n\r\n  // set initial state to false, because it fails to check validity of the tab values on 1st load\r\n  const [tab, settab] = useState<string | boolean>(tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\"))\r\n\r\n  const onTab = useCallback((e, v) => settab(v), [settab])\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => databaseToken && characterSheet && weaponSheet && artifactSheets &&\r\n    Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel),\r\n    [databaseToken, character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel, database])\r\n\r\n  // main CharacterDisplayCard\r\n  return <CardDark >\r\n    <buildContext.Provider value={{ newBuild, equippedBuild, compareBuild, setCompareBuild }}>\r\n      <CardContent sx={{\r\n        \"> div:not(:last-child)\": { mb: 1 },\r\n      }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item flexGrow={1}>\r\n            <CharSelectDropdown characterSheet={characterSheet} character={character} weaponSheet={weaponSheet} setCharacterKey={setCharacterKey} />\r\n          </Grid>\r\n          {!!mainStatAssumptionLevel && <Grid item><Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card></Grid>}\r\n          {!!onClose && <Grid item>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>}\r\n        </Grid>\r\n        <CardLight>\r\n          <Tabs\r\n            onChange={onTab}\r\n            value={tab}\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab value=\"character\" label=\"Character\" />\r\n            {!!newBuild && <Tab value=\"newartifacts\" label=\"New Artifacts\" />}\r\n            <Tab value=\"artifacts\" label={newBuild ? \"Current Artifacts\" : \"Artifacts\"} />\r\n            <Tab value=\"talent\" label=\"Talents\" />\r\n          </Tabs>\r\n        </CardLight>\r\n        <DamageOptionsCard character={character} />\r\n        {!!sheets && <FormulaCalcCard sheets={sheets} />}\r\n        <EnemyExpandCard character={character} />\r\n\r\n        {/* Character Panel */}\r\n        {characterSheet && weaponSheet && <TabPanel value=\"character\" current={tab}>\r\n          <CharacterOverviewPane characterSheet={characterSheet} weaponSheet={weaponSheet} character={character} />\r\n        </TabPanel >}\r\n        {/* Artifacts Panel */}\r\n        {sheets && <buildContext.Provider value={{ newBuild: undefined, equippedBuild, compareBuild, setCompareBuild }}>\r\n          <TabPanel value=\"artifacts\" current={tab} >\r\n            <CharacterArtifactPane sheets={sheets} character={character} />\r\n          </TabPanel >\r\n        </buildContext.Provider>}\r\n        {/* new build panel */}\r\n        {newBuild && sheets && <TabPanel value=\"newartifacts\" current={tab} >\r\n          <CharacterArtifactPane sheets={sheets} character={character} />\r\n        </TabPanel >}\r\n        {/* talent panel */}\r\n        {characterSheet && <TabPanel value=\"talent\" current={tab}>\r\n          <CharacterTalentPane characterSheet={characterSheet} character={character} />\r\n        </TabPanel >}\r\n      </CardContent>\r\n      {!!footer && <Divider />}\r\n      {footer && <CardContent sx={{ py: 1 }}>\r\n        {footer}\r\n      </CardContent>}\r\n    </buildContext.Provider>\r\n  </CardDark>\r\n}\r\n\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  weaponSheet?: WeaponSheet,\r\n  character: ICachedCharacter\r\n  disabled?: boolean\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, weaponSheet, character, character: { key: characterKey, elementKey = \"anemo\", level = 1, ascension = 0 }, disabled, setCharacterKey }: CharSelectDropdownProps) {\r\n  const [showModal, setshowModal] = useState(false)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <ImgIcon src={characterSheet.thumbImg} sx={{ mr: 1 }} />\r\n    {characterSheet.name}\r\n  </span> : <span>Select a Character</span>\r\n  const setLevel = useCallback((level) => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    characterDispatch({ level, ascension })\r\n  }, [characterDispatch])\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\r\n    else characterDispatch({ ascension: lowerAscension })\r\n  }, [characterDispatch, ascension, level])\r\n  return <>{!disabled ? <>\r\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacterKey} />\r\n    <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n      <Button disabled={!setCharacterKey} onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? \"Select a Character\"}</Button>\r\n      {characterSheet?.sheet && \"talents\" in characterSheet?.sheet && <DropdownButton title={ElementalData[elementKey].name}>\r\n        {Object.keys(characterSheet.sheet.talents).map(eleKey =>\r\n          <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\r\n            <strong>{ElementalData[eleKey].name}</strong></MenuItem>)}\r\n      </DropdownButton>}\r\n      <CustomNumberInputButtonGroupWrapper >\r\n        <CustomNumberInput onChange={setLevel} value={level}\r\n          startAdornment=\"Lvl. \"\r\n          inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n          sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n          disabled={!characterSheet} />\r\n      </CustomNumberInputButtonGroupWrapper>\r\n      <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level) || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n      <DropdownButton title={\"Select Level\"} disabled={!characterSheet}>\r\n        {milestoneLevels.map(([lv, as]) => {\r\n          const sameLevel = lv === ascensionMaxLevel[as]\r\n          const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n          const selected = lv === level && as === ascension\r\n          return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n        })}\r\n      </DropdownButton>\r\n    </ButtonGroup>\r\n  </> : <Typography variant=\"h6\">{HeaderIconDisplay} {characterSheet && weaponSheet && Character.getLevelString(character)}</Typography>}</>\r\n}"],"sourceRoot":""}