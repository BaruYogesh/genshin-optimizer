{"version":3,"sources":["Components/Card/CardLight.tsx","Components/Card/CardDark.tsx","Components/DropdownMenu/DropdownButton.tsx","Components/StarDisplay.tsx","Assets/icon_bow.png","Assets/Assets.ts","Assets/icon_catalyst.png","Assets/icon_claymore.png","Assets/icon_polearm.png","Assets/icon_sword.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/CloseButton.tsx","Components/ModalWrapper.tsx","Components/SolidToggleButtonGroup.tsx","ReactHooks/useForceUpdate.tsx","Components/Character/CharacterDropdownButton.tsx","Components/Character/ThumbSide.tsx","Components/Character/LocationName.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/ConditionalWrapper.tsx","Components/SortByButton.tsx","Util/SortByFilters.ts","Components/Weapon/WeaponSelectionModal.tsx","Weapon/WeaponCard.tsx","Util/WeaponSort.ts","Weapon/WeaponDisplay.tsx"],"names":["CardLight","styled","Card","backgroundColor","theme","palette","contentLight","main","CardDark","contentDark","DropdownButton","title","children","id","props","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","useCallback","event","currentTarget","handleClose","fallback","endIcon","width","aria-controls","aria-haspopup","aria-expanded","undefined","onClick","onClose","MenuListProps","height","StarIcon","icon","faStar","Stars","stars","colored","color","component","Array","keys","map","_","i","Assets","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","CloseButton","large","t","useTranslation","startIcon","sx","p","minWidth","ScrollModal","Modal","overflow","paddingTop","spacing","paddingBottom","ModalContainer","Container","padding","minHeight","display","flexDirection","justifyContent","pointerEvents","ModalWrapper","containerProps","variant","SolidToggleButtonGroup","ToggleButtonGroup","shouldForwardProp","prop","baseColor","selectedColor","contrastText","dark","useForceUpdate","stateDirty","update","CharacterDropdownButton","value","onChange","inventory","noUnselect","filter","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","getAll","characterSheet","get","characterKeys","_getCharKeys","ck","sort","name","thumbImg","src","thumbImgSide","selected","disabled","noWrap","CharacterMenuItemArray","selectedCharacterKey","characterKey","ThumbSide","lineHeight","verticalAlign","marginTop","marginLeft","marginRight","marginBottom","LocationName","location","nameWIthIcon","WeaponToggle","cb","e","newVal","exclusive","allWeaponTypeKeys","wt","size","ConditionalWrapper","condition","wrapper","SortByButton","sortKeys","ascending","onChangeAsc","i18nKey","key","faSortAmountDownAlt","faSortAmountUp","className","SortByFilters","sortby","options","Sort","a","b","filterOption","aV","getValue","bV","localeCompare","diff","tieBreaker","WeaponSelectionModal","show","onHide","onSelect","propWeaponFilter","weaponFilter","weaponSheets","WeaponSheet","setWeaponfilter","useEffect","weaponIdList","Set","allWeaponKeys","wKey","weaponType","rarity","py","container","item","flexGrow","weaponKey","weaponSheet","lg","md","img","px","WeaponCard","weaponId","onEdit","onDelete","canEquip","databaseWeapon","updateDatabaseWeapon","followWeapon","weapon","cs","weaponTypeKey","actionWrapperFunc","equipOnChar","charKey","setWeaponLocation","level","ascension","refinement","lock","weaponMainVal","getMainStatValue","toFixed","Stat","fixedUnit","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","statMap","passiveName","push","imgAwaken","avatar","fontSize","titleTypographyProps","action","updateWeapon","flexWrap","pl","ascensionMaxLevel","xs","alignContent","mt","statKey","statVal","unit","getStatUnit","StatIcon","getStatName","flexShrink","mr","faEdit","faTrashAlt","WeaponDisplayCard","lazy","initialState","editWeaponId","sortType","maxNumToDisplay","filterReducer","state","filterInit","initial","dbStorage","WeaponDisplay","useReducer","stateDisplatch","newWeaponModalShow","setnewWeaponModalShow","dbDirty","forceUpdate","scrollRef","useRef","invScrollRef","pageIdex","setpageIdex","ReactGA","pageview","followAnyWeapon","set","allWeaponSheets","deleteWeapon","_getWeapon","i18next","window","confirm","removeWeapon","editWeapon","setTimeout","current","scrollIntoView","behavior","newWeapon","createWeapon","initialWeapon","sortOptions","useMemo","WeaponSortOptions","weapons","totalWeaponNum","length","dbWeapon","includes","numPages","Math","ceil","currentPageIndex","clamp","weaponIdsToShow","slice","totalShowing","setPage","resetEditWeapon","Box","mb","ref","footer","pb","Grid","allRarities","star","ToggleButton","alignItems","Pagination","count","page","Typography","Skeleton","xl","CardContent","textAlign","Button","borderRadius","faPlus","sm"],"mappings":"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","file":"static/js/20.2ad3bd34.chunk.js","sourcesContent":["import { Card, styled } from \"@mui/material\";\r\n\r\nconst CardLight = styled(Card)(({ theme }) => ({\r\n  backgroundColor: theme.palette.contentLight.main\r\n}));\r\n\r\nexport default CardLight","import { Card, styled } from \"@mui/material\";\r\n\r\nconst CardDark = styled(Card)(({ theme }) => ({\r\n  backgroundColor: theme.palette.contentDark.main\r\n}));\r\n\r\nexport default CardDark","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Button, ButtonProps, Menu, Skeleton } from \"@mui/material\";\r\nimport { Suspense, useCallback, useState } from \"react\";\r\n\r\nexport type DropdownButtonProps = Omit<ButtonProps, \"title\"> & {\r\n  title: React.ReactNode,\r\n  id?: string,\r\n  children: React.ReactNode\r\n}\r\nexport default function DropdownButton({ title, children, id = \"dropdownbtn\", ...props }: DropdownButtonProps) {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget),\r\n    [setAnchorEl],\r\n  )\r\n  const handleClose = useCallback(\r\n    () => setAnchorEl(null),\r\n    [setAnchorEl],\r\n  )\r\n\r\n  return <Suspense fallback={<Button endIcon={<KeyboardArrowDown />}{...props}><Skeleton width={50} /></Button>} >\r\n    <Button\r\n      {...props}\r\n      id={id}\r\n      aria-controls=\"basic-menu\"\r\n      aria-haspopup=\"true\"\r\n      aria-expanded={open ? 'true' : undefined}\r\n      onClick={handleClick}\r\n      endIcon={<KeyboardArrowDown />}\r\n    >\r\n      {title}\r\n    </Button>\r\n    <Menu\r\n      id=\"basic-menu\"\r\n      anchorEl={anchorEl}\r\n      open={open}\r\n      onClose={handleClose}\r\n      MenuListProps={{\r\n        'aria-labelledby': id,\r\n      }}\r\n      onClick={handleClose}\r\n    >\r\n      {/* set Skeleton to be really high so the taller dropdowns can still be placed properly... */}\r\n      <Suspense fallback={<Skeleton width=\"100%\" height=\"1000\" />}>\r\n        {children}\r\n      </Suspense>\r\n    </Menu>\r\n  </Suspense>\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Typography } from '@mui/material'\r\nimport { Rarity } from '../Types/consts'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\r\n  <Typography color={colored ? \"warning.main\" : undefined} component=\"span\">\r\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n  </Typography>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon_bow.7ceaa8e2.png\";","import bow from './icon_bow.png'\r\nimport catalyst from './icon_catalyst.png'\r\nimport claymore from './icon_claymore.png'\r\nimport polearm from './icon_polearm.png'\r\nimport sword from './icon_sword.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nconst Assets = {\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/icon_catalyst.db078b7b.png\";","export default __webpack_public_path__ + \"static/media/icon_claymore.63b1abb8.png\";","export default __webpack_public_path__ + \"static/media/icon_polearm.e5f4a2a1.png\";","export default __webpack_public_path__ + \"static/media/icon_sword.619c9c2d.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { Close } from \"@mui/icons-material\";\r\nimport { Button, ButtonProps } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\ntype CloseButtonProps = ButtonProps & {\r\n  large?: boolean\r\n}\r\nexport default function CloseButton({ large = false, ...props }: CloseButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  if (large)\r\n    return <Button color=\"error\" startIcon={<Close />} {...props} >{t`close`}</Button>\r\n  return <Button color=\"error\" sx={{ p: 1, minWidth: 0 }} {...props} >\r\n    <Close />\r\n  </Button>\r\n}","import { CardContent, Container, ContainerProps, Modal, ModalProps, Skeleton, styled } from \"@mui/material\"\r\nimport { Suspense } from \"react\"\r\nimport CardLight from \"./Card/CardLight\"\r\n\r\nconst ScrollModal = styled(Modal)(({ theme }) => ({\r\n  overflow: \"scroll\",\r\n  paddingTop: theme.spacing(2),\r\n  paddingBottom: theme.spacing(2),\r\n\r\n}))\r\nconst ModalContainer = styled(Container)(({ theme }) => ({\r\n  padding: 0,\r\n  minHeight: \"100%\",\r\n  display: \"flex\", flexDirection: \"column\", justifyContent: \"center\",\r\n  pointerEvents: \"none\",\r\n  \"& > *\": {\r\n    pointerEvents: \"auto\"\r\n  }\r\n}))\r\n\r\ntype ModalWrapperProps = ModalProps & {\r\n  containerProps?: ContainerProps\r\n}\r\nexport default function ModalWrapper({ children, containerProps, ...props }: ModalWrapperProps) {\r\n  return <ScrollModal {...props}>\r\n    <ModalContainer {...containerProps}>\r\n      <Suspense fallback={<CardLight><CardContent><Skeleton variant=\"rectangular\" width=\"100%\" height={300} /></CardContent></CardLight>}>\r\n        {children}\r\n      </Suspense>\r\n    </ModalContainer>\r\n  </ScrollModal>\r\n}","import { ButtonProps, styled, ToggleButtonGroup, ToggleButtonGroupProps } from \"@mui/material\";\r\n\r\nexport type SolidToggleButtonGroupProps = SolidToggleButtonGroupPropsPartial & ToggleButtonGroupProps\r\ntype SolidToggleButtonGroupPropsPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\n\r\nconst SolidToggleButtonGroup = styled(ToggleButtonGroup, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\"\r\n})<SolidToggleButtonGroupPropsPartial>(({ theme, baseColor = \"primary\", selectedColor = \"success\" }) => ({\r\n  '& .MuiToggleButtonGroup-grouped': {\r\n    '&': {\r\n      backgroundColor: theme.palette[baseColor].main,\r\n      color: theme.palette[baseColor].contrastText,\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: theme.palette[baseColor].dark,\r\n    },\r\n    '&.Mui-selected': {\r\n      backgroundColor: theme.palette[selectedColor].main,\r\n      color: theme.palette[selectedColor].contrastText,\r\n    },\r\n    '&.Mui-selected:hover': {\r\n      backgroundColor: theme.palette[selectedColor].dark,\r\n    },\r\n    '&.Mui-disabled': {\r\n      backgroundColor: theme.palette[baseColor].dark,\r\n    },\r\n    '&.Mui-selected.Mui-disabled': {\r\n      backgroundColor: theme.palette[selectedColor].dark,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default SolidToggleButtonGroup","import { useCallback, useState } from \"react\"\r\n\r\nexport default function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}","import { BusinessCenter, Replay } from \"@mui/icons-material\";\r\nimport { Divider, ListItemIcon, MenuItem, Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport DropdownButton, { DropdownButtonProps } from \"../DropdownMenu/DropdownButton\";\r\nimport ThumbSide from \"./ThumbSide\";\r\n\r\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  value: CharacterKey | \"\"\r\n  onChange: (ck: CharacterKey | \"\") => void\r\n  filter?: (cs: CharacterSheet) => boolean\r\n  inventory?: boolean\r\n  noUnselect?: boolean\r\n}\r\n\r\nexport default function CharacterDropdownButton({ value, onChange, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const database = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\r\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck])).sort()\r\n  return <DropdownButton\r\n    {...props}\r\n    title={characterSheet?.name ?? (inventory ? t`inventory` : t`unselect`)}\r\n    color={value ? \"success\" : \"primary\"}\r\n    startIcon={characterSheet?.thumbImg ? <ThumbSide src={characterSheet.thumbImgSide} /> : (inventory ? <BusinessCenter /> : <Replay />)}>\r\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <BusinessCenter />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`inventory`}\r\n      </Typography>\r\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <Replay />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`unselect`}\r\n      </Typography>\r\n    </MenuItem>)}\r\n    {!noUnselect && <Divider key=\"div\" />}\r\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value)}\r\n  </DropdownButton >\r\n}\r\n\r\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\r\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\") {\r\n  return characterKeys.map(characterKey =>\r\n    <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\r\n      <ListItemIcon>\r\n        <ThumbSide src={characterSheets[characterKey].thumbImgSide} />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {characterSheets?.[characterKey]?.name}\r\n      </Typography>\r\n    </MenuItem>)\r\n}","import { styled } from \"@mui/system\";\r\n\r\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  height: `2.3em`,\r\n  lineHeight: 1,\r\n  verticalAlign: \"text-bottom\",\r\n  marginTop: theme.spacing(-3),\r\n  marginLeft: theme.spacing(-1.25),\r\n  marginRight: theme.spacing(-1),\r\n  marginBottom: theme.spacing(-1),\r\n}))\r\n\r\nexport default ThumbSide","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\n\r\nexport default function LocationName({ location }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t`inventory`}</span>}\r\n  </Typography>\r\n\r\n}","import { ToggleButton } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey | \"\") => void\r\n  value: WeaponTypeKey | \"\"\r\n}\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allWeaponTypeKeys} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : children) as JSX.Element;\r\n}","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\r\n\r\ntype SortByButtonProps = ButtonGroupProps & {\r\n  sortKeys: string[]\r\n  value: string\r\n  onChange: (value: string) => void\r\n  ascending: boolean\r\n  onChangeAsc: (value: boolean) => void\r\n}\r\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\r\nexport default function SortByButton({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: SortByButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <ButtonGroup {...props} >\r\n    <DropdownButton title={<Trans t={t} i18nKey=\"sortByFormat\" value={t(`sortMap.${value}`) as any}>Sort By: {{ value: t(`sortMap.${value}`) }}</Trans>}>\r\n      {sortKeys.map(key =>\r\n        <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\r\n      {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\r\n    </Button>\r\n  </ButtonGroup>\r\n}","\r\ninterface SortOption {\r\n  getValue: (id: string) => number | string\r\n  tieBreaker?: string\r\n}\r\nexport interface SortOptions { [key: string]: SortOption }\r\n\r\n\r\nexport default function SortByFilters(sortby: string, ascending: boolean, options: SortOptions) {\r\n  function Sort(a: string, b: string, ascending: boolean, filterOption: SortOption,) {\r\n    const aV = filterOption.getValue(a)\r\n    const bV = filterOption.getValue(b)\r\n    let diff = 0\r\n    if (typeof aV === \"string\" && typeof aV === \"string\")\r\n      diff = a.localeCompare(b)\r\n    else\r\n      diff = ((bV as number) - aV)\r\n    return (ascending ? -1 : 1) * diff\r\n  }\r\n  return (a: string, b: string) => {\r\n    const filterOption = options[sortby]\r\n    let diff = Sort(a, b, ascending, filterOption)\r\n    if (!diff && filterOption.tieBreaker)\r\n      diff = Sort(a, b, ascending, options[filterOption.tieBreaker])\r\n    return diff\r\n  }\r\n}\r\n","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey | \"\">(propWeaponFilter ?? \"\")\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter(propWeaponFilter), [propWeaponFilter])\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.img} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, CardHeader, Grid, IconButton, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useEffect, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton'\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false }: WeaponCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseWeapon, updateDatabaseWeapon] = useState(undefined as ICachedWeapon | undefined)\r\n  useEffect(() =>\r\n    weaponId ? database.followWeapon(weaponId, updateDatabaseWeapon) : undefined,\r\n    [weaponId, updateDatabaseWeapon, database])\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => onClick?.(weaponId)} sx={{ height: \"100%\" }}>{children}</CardActionArea>,\r\n    [onClick, weaponId],\r\n  )\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.setWeaponLocation(weaponId, charKey), [database, weaponId],)\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <div className={`grad-${weaponSheet.rarity}star`} >\r\n          <CardHeader title={weaponSheet.name} avatar={<ImgIcon sx={{ fontSize: \"2em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />} titleTypographyProps={{ variant: \"h6\" }}\r\n            action={!onClick && <IconButton color=\"primary\" onClick={() => database.updateWeapon({ lock: !lock }, id)}>\r\n              {lock ? <Lock /> : <LockOpen />}\r\n            </IconButton>} />\r\n          <Grid container sx={{ flexWrap: \"nowrap\", pl: 2 }}>\r\n            <Grid item flexGrow={1}>\r\n              <Typography component=\"span\" variant=\"h4\">Lv. {level}</Typography>\r\n              <Typography component=\"span\" variant=\"h4\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n              <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n              <Typography><Stars stars={weaponSheet.rarity} colored /></Typography>\r\n            </Grid>\r\n            {/* use flex-end here to align the image to the bottom. */}\r\n            <Grid item container xs={4} alignContent=\"flex-end\">\r\n              <Box\r\n                component=\"img\"\r\n                src={img}\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                sx={{ mt: \"auto\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <CardContent>\r\n          {statMap.map(([statKey, statVal]) => {\r\n            let unit = Stat.getStatUnit(statKey)\r\n            return <Box key={statKey} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[statKey]} {Stat.getStatName(statKey)}</Typography>\r\n              <Typography>{statVal + unit}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n        {/* grow to fill the 100% heigh */}\r\n        <Box flexGrow={1} />\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container sx={{ flexWrap: \"nowrap\" }} >\r\n            <Grid item xs=\"auto\" flexShrink={1}>\r\n              {canEquip ? <CharacterDropdownButton size=\"small\" noUnselect inventory value={location} onChange={equipOnChar} filter={filter} /> : <LocationName location={location} />}\r\n            </Grid>\r\n            <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n            <Grid item xs=\"auto\">\r\n              <ButtonGroup sx={{ height: \"100%\" }}>\r\n                {!!onEdit && <Button color=\"info\" size=\"small\" onClick={() => onEdit(id)} >\r\n                  <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n                </Button>}\r\n                {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n                </Button>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n      </CardLight>\r\n    </ConditionalWrapper>\r\n  </Suspense>\r\n}","import { ArtCharDatabase } from \"../Database/Database\";\r\nimport { WeaponKey } from \"../Types/consts\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport { SortOptions } from \"./SortByFilters\";\r\nexport const sortKeys = [\"level\", \"rarity\"]\r\nexport default function WeaponSortOptions(database: ArtCharDatabase, weaponSheets: StrictDict<WeaponKey, WeaponSheet>): SortOptions {\r\n  return {\r\n    level: {\r\n      getValue: (id: string) => database._getWeapon(id)?.level ?? 0,\r\n      tieBreaker: \"rarity\"\r\n    },\r\n    rarity: {\r\n      getValue: (id) => weaponSheets?.[database._getWeapon(id)?.key as any]?.rarity,\r\n      tieBreaker: \"level\"\r\n    }\r\n  }\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Box, Button, CardContent, Grid, Pagination, Skeleton, ToggleButton, Typography } from '@mui/material';\r\nimport i18next from 'i18next';\r\nimport React, { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport SolidToggleButtonGroup from '../Components/SolidToggleButtonGroup';\r\nimport SortByButton from '../Components/SortByButton';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport WeaponToggle from '../Components/ToggleButton/WeaponToggle';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport { dbStorage } from '../Database/DBStorage';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { allRarities, WeaponKey, WeaponTypeKey } from '../Types/consts';\r\nimport SortByFilters from '../Util/SortByFilters';\r\nimport { clamp } from '../Util/Util';\r\nimport WeaponSortOptions, { sortKeys } from '../Util/WeaponSort';\r\nimport WeaponCard from './WeaponCard';\r\nimport WeaponSelectionModal from '../Components/Weapon/WeaponSelectionModal';\r\nimport WeaponSheet from './WeaponSheet';\r\nimport { initialWeapon } from './WeaponUtil';\r\n\r\n//lazy load the weapon display\r\nconst WeaponDisplayCard = lazy(() => import('./WeaponDisplayCard'))\r\n\r\nconst initialState = () => ({\r\n  editWeaponId: \"\",\r\n  sortType: sortKeys[0],\r\n  ascending: false,\r\n  rarity: [5, 4],\r\n  weaponType: \"\" as WeaponTypeKey | \"\",\r\n  maxNumToDisplay: 30,\r\n})\r\nexport type stateType = ReturnType<typeof initialState>\r\n\r\nfunction filterReducer(state: stateType, action): stateType {\r\n  return { ...state, ...action }\r\n}\r\nfunction filterInit(initial = initialState()): stateType {\r\n  return { ...initial, ...(dbStorage.get(\"WeaponDisplay.state\") ?? {}) }\r\n}\r\n\r\nexport default function WeaponDisplay(props) {\r\n  const database = useContext(DatabaseContext)\r\n  const [state, stateDisplatch] = useReducer(filterReducer, initialState(), filterInit)\r\n  const [newWeaponModalShow, setnewWeaponModalShow] = useState(false)\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const invScrollRef = useRef<HTMLDivElement>(null)\r\n  const [pageIdex, setpageIdex] = useState(0)\r\n  //set follow, should run only once\r\n  useEffect(() => {\r\n    ReactGA.pageview('/weapon')\r\n    return database.followAnyWeapon(forceUpdate)\r\n  }, [forceUpdate, database])\r\n\r\n  //save to db\r\n  useEffect(() => {\r\n    dbStorage.set(\"WeaponDisplay.state\", state)\r\n  }, [state])\r\n\r\n  const allWeaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const deleteWeapon = useCallback(async (key) => {\r\n    const weapon = database._getWeapon(key)\r\n    if (!weapon) return\r\n    const name = i18next.t(`weapon_${weapon.key}_gen:name`)\r\n\r\n    if (!window.confirm(`Are you sure you want to remove ${name}?`)) return\r\n    database.removeWeapon(key)\r\n    if (state.editWeaponId === key)\r\n      stateDisplatch({ editWeaponId: \"\" })\r\n  }, [state.editWeaponId, stateDisplatch, database])\r\n\r\n  const editWeapon = useCallback(key => {\r\n    stateDisplatch({ editWeaponId: key })\r\n    setTimeout(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, 500);\r\n  }, [stateDisplatch, scrollRef])\r\n\r\n  const newWeapon = useCallback(\r\n    (weaponKey: WeaponKey) => {\r\n      editWeapon(database.createWeapon(initialWeapon(weaponKey)))\r\n    },\r\n    [database, editWeapon])\r\n\r\n  const sortOptions = useMemo(() => allWeaponSheets && WeaponSortOptions(database, allWeaponSheets), [database, allWeaponSheets])\r\n\r\n  const { weaponIdList, totalWeaponNum } = useMemo(() => {\r\n    const keys = database.weapons.keys\r\n    if (!sortOptions) return { weaponIdList: [], totalWeaponNum: keys.length }\r\n    const weaponIdList = keys.filter(wKey => {\r\n      const dbWeapon = database._getWeapon(wKey)\r\n      if (!dbWeapon) return false\r\n      if (state.weaponType && state.weaponType !== allWeaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n      if (!state.rarity.includes(allWeaponSheets?.[dbWeapon.key]?.rarity as any)) return false\r\n      return true\r\n    }).sort(SortByFilters(state.sortType, state.ascending, sortOptions));\r\n    return dbDirty && { weaponIdList, totalWeaponNum: keys.length }\r\n  }, [dbDirty, allWeaponSheets, database, sortOptions, state.sortType, state.ascending, state.rarity, state.weaponType])\r\n\r\n  const { weaponIdsToShow, numPages, currentPageIndex } = useMemo(() => {\r\n    const numPages = Math.ceil(weaponIdList.length / state.maxNumToDisplay)\r\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\r\n    return { weaponIdsToShow: weaponIdList.slice(currentPageIndex * state.maxNumToDisplay, (currentPageIndex + 1) * state.maxNumToDisplay), numPages, currentPageIndex }\r\n  }, [weaponIdList, pageIdex, state.maxNumToDisplay])\r\n\r\n  //for pagination\r\n  const totalShowing = weaponIdList.length !== totalWeaponNum ? `${weaponIdList.length}/${totalWeaponNum}` : `${totalWeaponNum}`\r\n  const setPage = useCallback(\r\n    (e, value) => {\r\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n      setpageIdex(value - 1);\r\n    },\r\n    [setpageIdex, invScrollRef],\r\n  )\r\n\r\n  const resetEditWeapon = useCallback(() => stateDisplatch({ editWeaponId: \"\" }), [stateDisplatch])\r\n\r\n  const { editWeaponId } = state\r\n  return <Box sx={{\r\n    mt: 1,\r\n    // select all excluding last\r\n    \"> div\": { mb: 1 },\r\n  }}>\r\n    {/* editor/character detail display */}\r\n    {!!editWeaponId && <Box ref={scrollRef} >\r\n      <WeaponDisplayCard\r\n        weaponId={editWeaponId}\r\n        footer\r\n        onClose={resetEditWeapon}\r\n      />\r\n    </Box>}\r\n    <CardDark ref={invScrollRef} sx={{ p: 2, pb: 1 }}>\r\n      <Grid container spacing={1} sx={{ mb: 1 }}>\r\n        <Grid item>\r\n          <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => stateDisplatch({ weaponType })} value={state.weaponType} size=\"small\" />\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <SolidToggleButtonGroup sx={{ height: \"100%\" }} onChange={(e, newVal) => stateDisplatch({ rarity: newVal })} value={state.rarity} size=\"small\">\r\n            {allRarities.map(star => <ToggleButton key={star} value={star}><strong>{star}{' '}</strong><Stars stars={1} /></ToggleButton>)}\r\n          </SolidToggleButtonGroup>\r\n        </Grid>\r\n        <Grid item >\r\n          <SortByButton sx={{ height: \"100%\" }} sortKeys={sortKeys}\r\n            value={state.sortType} onChange={sortType => stateDisplatch({ sortType })}\r\n            ascending={state.ascending} onChangeAsc={ascending => stateDisplatch({ ascending })}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"flex-end\">\r\n        <Grid item flexGrow={1}>\r\n          <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography color=\"text.secondary\">\r\n            {/* <Trans t={t} i18nKey=\"showingNum\" count={numShowing} value={total} > */}\r\n            Showing <b>{weaponIdsToShow.length}</b> out of {totalShowing} Weapons\r\n            {/* </Trans> */}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </CardDark>\r\n    <Grid container spacing={1}>\r\n      <Suspense fallback={<Grid item xs={12}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 500 }} /></Grid>}>\r\n        {!editWeaponId && <Grid item xs={6} md={4} lg={4} xl={3}>\r\n          <CardDark sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\r\n            <CardContent>\r\n              <Typography sx={{ textAlign: \"center\" }}>Add New Weapon</Typography>\r\n            </CardContent>\r\n            <WeaponSelectionModal show={newWeaponModalShow} onHide={() => setnewWeaponModalShow(false)} onSelect={newWeapon} />\r\n            <Box sx={{\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n            >\r\n              <Button onClick={() => setnewWeaponModalShow(true)} sx={{\r\n                borderRadius: \"1em\"\r\n              }}>\r\n                <Typography variant=\"h1\"><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></Typography>\r\n              </Button>\r\n            </Box>\r\n          </CardDark>\r\n        </Grid>}\r\n        {weaponIdsToShow.map(weaponId =>\r\n          <Grid item key={weaponId} xs={12} sm={6} md={4} lg={4} xl={3} >\r\n            <WeaponCard\r\n              weaponId={weaponId}\r\n              onDelete={deleteWeapon}\r\n              onEdit={editWeapon}\r\n              canEquip\r\n            />\r\n          </Grid>)}\r\n      </Suspense>\r\n    </Grid>\r\n  </Box>\r\n}"],"sourceRoot":""}