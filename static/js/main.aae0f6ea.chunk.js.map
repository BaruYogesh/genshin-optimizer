{"version":3,"sources":["Settings/SettingsDisplay.tsx","Components/LoadingCard.tsx","App.tsx","reportWebVitals.ts","index.tsx","Database/CharacterDatabase.ts","Database/ArtifactDatabase.ts","Database/dbV2KeyMap.ts","Database/DatabaseUtil.ts","Util/Util.ts","i18n.ts","Types/consts.ts","Util/ReactUtil.ts","Data/CharacterData.ts"],"names":["SettingsDisplay","t","useTranslation","useForceUpdate","forceUpdate","ReactGA","pageview","bg","text","className","Header","i18nKey","Body","LanguageCard","DownloadCard","UploadCard","variant","LanguageDropdown","DatabaseInitAndVerify","nativeLanguages","i18n","onSetLanguage","lang","changeLanguage","currentLang","languages","Toggle","language","Menu","languageCodeList","map","Item","onClick","copyToClipboard","navigator","clipboard","writeText","JSON","stringify","createDatabaseObj","alert","numChar","CharacterDatabase","getIdList","length","numArt","ArtifactDatabase","downloadValid","Boolean","xs","md","count","Footer","disabled","JSONstr","filename","contentType","window","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","type","a","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","confirm","clearDatabase","deleteDatabase","file","cb","reader","FileReader","onload","result","readAsText","dataObj","useState","data","setdata","setfilename","error","parse","characterDatabase","artifactDatabase","Object","keys","e","dataValid","File","label","onChange","files","value","name","readFile","custom","accept","style","minHeight","obj","loadDatabaseObj","replaceDatabase","LoadingCard","useSuspense","ready","Card","Trans","Spinner","animation","Home","lazy","ArtifactDisplay","CharacterDisplay","BuildDisplay","Planner","FlexDisplay","AppInner","id","Navbar","expand","Brand","as","Link","to","aria-controls","Collapse","Nav","process","rel","outboundLink","icon","faPaypal","faPatreon","faDiscord","faCog","fallback","Container","path","component","Row","Col","values","version","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","getElementById","undefined","this","Error","callback","listener","push","filter","forEach","characterKey","charListener","char","initiated","getCharacterDatabase","deepClone","getCharacterKeyList","populateDatebaseFromLocalStorage","localStorage","key","startsWith","split","character","loadFromLocalStorage","emitEvent","update","emit","dchar","saveToLocalStorage","emitCharEvent","get","remove","removeItem","getArtifactIDFromSlot","slotKey","equippedArtifacts","equipArtifactOnSlot","artid","equipArtifactBuild","artifactIds","unequipAllArtifacts","artIdIndex","artListener","art","isInvalid","setKey","numStars","mainStatKey","substats","some","substat","getArtifactDatabase","removeArtifactById","removeArtifact","getItem","dart","emitArtEvent","artId","moveToNewLocation","location","setLocked","lock","swapLocations","artA","artB","locA","locB","swapLocationsById","artAid","artBid","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","CurrentDatabaseVersion","dbVersion","getDatabaseVersion","dbKey","dmgMode","rest","Array","isArray","buildSetting","mainStat","stat","v2change","statFilters","fromEntries","entries","hitMode","ArtifactDisplayState","filterMainStatKey","filterSubstats","state","elementalFilter","weaponFilter","traveler","elementKey","charDBJustPopualted","artDBJustPopualted","valid","mainStatVal","artInSlotId","i","currentEfficiency","maximumEfficiency","efficiency","rolls","chars","allSlotKeys","sk","equippedArt","artifactConditional","talentCondtiional","autoInfused","artifactsAssumeFull","ascending","setFilters","num","useLockedArts","buildSettings","mainStatAssumptionLevel","mainStatKeys","weapon","conditionalNum","levelKey","lvla","level","parseInt","ascension","ascensionMaxLevel","findIndex","ascenML","addAsc","includes","baseStatOverrides","characterLevel","characterHP","characterATK","characterDEF","setDatabaseVersion","defVal","artifactDisplay","characterDisplay","buildsDisplay","charKey","getRandomElementFromArray","array","Math","floor","random","getRandomIntInclusive","min","max","ceil","setItem","closeEnoughFloat","b","abs","closeEnoughInt","clamp","val","low","high","getArrLastElement","arr","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","multi","prop","layeredAssignment","reduce","accu","objPathValue","k","deletePropPath","tempPath","lastKey","pop","objClearEmpties","o","crawlObject","validate","evalIfFunc","arg","use","Backend","initReactI18next","LanguageDetector","init","debug","fallbackLng","ns","defaultNS","load","returnEmptyString","backend","loadPath","interpolation","escapeValue","allHitModes","allReactionModes","allRarities","allArtifactRarities","allElements","allArtifactSets","allCharacterKeys","allWeaponKeys","characterSpecializedStatKeys","stateDirty","useCallback","usePromise","promise","dependencies","res","setRes","useEffect","pending","console","characterStatBase","critRate_","critDMG_","enerRech_","stamina"],"mappings":"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","file":"static/js/main.aae0f6ea.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport { Alert, Badge, Button, Card, Col, Container, Dropdown, Form, Row } from \"react-bootstrap\"\r\nimport ReactGA from 'react-ga'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\"\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\"\r\nimport { clearDatabase, createDatabaseObj, DatabaseInitAndVerify, loadDatabaseObj } from \"../Database/DatabaseUtil\"\r\nimport { languageCodeList } from \"../i18n\"\r\nimport { useForceUpdate } from \"../Util/ReactUtil\"\r\n\r\nDatabaseInitAndVerify()\r\nexport default function SettingsDisplay() {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const [, forceUpdate] = useForceUpdate()\r\n  ReactGA.pageview('/setting')\r\n\r\n  return <Container>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n      <Card.Header><Trans t={t} i18nKey=\"title\" /></Card.Header>\r\n      <Card.Body>\r\n        <LanguageCard />\r\n        <DownloadCard forceUpdate={forceUpdate} />\r\n        <UploadCard forceUpdate={forceUpdate} />\r\n      </Card.Body>\r\n    </Card>\r\n  </Container >\r\n}\r\n\r\nfunction LanguageCard() {\r\n  const { t } = useTranslation();\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header>{t(\"settings:languageCard.selectLanguage\")} <Badge variant=\"warning\">{t(\"ui:underConstruction\")}</Badge></Card.Header>\r\n    <Card.Body>\r\n      <LanguageDropdown />\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nconst nativeLanguages = {\r\n  \"chs\": \"中文 正体字\",\r\n  \"cht\": \"中文 繁體字\",\r\n  \"de\": \"Deutsch\",\r\n  \"en\": \"English\",\r\n  \"es\": \"español\",\r\n  \"fr\": \"français\",\r\n  \"id\": \"Bahasa Indonesia\",\r\n  \"ja\": \"日本語\",\r\n  \"ko\": \"한국어\",\r\n  \"pt\": \"Português\",\r\n  \"ru\": \"Русский язык\",\r\n  \"th\": \"ภาษาไทย\",\r\n  \"vi\": \"Tiếng Việt\"\r\n}\r\nexport function LanguageDropdown() {\r\n  const { t, i18n } = useTranslation([\"ui\", \"settings\"]);\r\n  const onSetLanguage = (lang) => () => i18n.changeLanguage(lang);\r\n  const currentLang = i18n.languages[0];\r\n  return <Dropdown className=\"flex-grow-1 mb-2\">\r\n    <Dropdown.Toggle className=\"w-100\" variant=\"primary\">\r\n      {t('settings:languageCard.languageFormat', { language: t(`languages:${currentLang}`) })}\r\n    </Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {languageCodeList.map((lang) => <Dropdown.Item key={lang} onClick={onSetLanguage(lang)}><Trans i18nKey={`languages:${lang}`} />{lang !== currentLang ? ` (${nativeLanguages[lang]})` : \"\"}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\nfunction download(JSONstr, filename = \"data.json\") {\r\n  const contentType = \"application/json;charset=utf-8\"\r\n  if (window?.navigator?.msSaveOrOpenBlob as any) { // TODO: Function is always defined, do we want to call it instead?\r\n    const blob = new Blob([decodeURIComponent(encodeURI(JSONstr))], { type: contentType })\r\n    navigator.msSaveOrOpenBlob(blob, filename)\r\n  } else {\r\n    const a = document.createElement('a');\r\n    a.download = filename\r\n    a.href = `data:${contentType},${encodeURIComponent(JSONstr)}`\r\n    a.target = \"_blank\"\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n  }\r\n}\r\n\r\nfunction deleteDatabase(t) {\r\n  if (!window.confirm(t(\"settings:dialog.delete-database\"))) return\r\n  clearDatabase()\r\n}\r\nfunction copyToClipboard() {\r\n  navigator.clipboard.writeText(JSON.stringify(createDatabaseObj()))\r\n  alert(\"Copied database to clipboard.\")\r\n}\r\nfunction DownloadCard({ forceUpdate }) {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const numChar = CharacterDatabase.getIdList().length\r\n  const numArt = ArtifactDatabase.getIdList().length\r\n  const downloadValid = Boolean(numChar || numArt)\r\n  const deleteDB = () => {\r\n    deleteDatabase(t);\r\n    forceUpdate()\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header><Trans t={t} i18nKey=\"downloadCard.databaseDownload\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"downloadCard.charsStored\" count={numChar}><b>{{ count: numChar }}</b> Characters Stored</Trans></h6></Col>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"downloadCard.artisStored\" count={numArt}><b>{{ count: numArt }}</b> Artifacts Stored</Trans></h6></Col>\r\n      </Row>\r\n      <small><Trans t={t} i18nKey=\"downloadCard.databaseDisclaimer\" /></small>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Row>\r\n        <Col xs=\"auto\"><Button disabled={!downloadValid} onClick={() => download(JSON.stringify(createDatabaseObj()))}><Trans t={t} i18nKey=\"downloadCard.button.download\" /></Button></Col>\r\n        <Col ><Button disabled={!downloadValid} variant=\"info\" onClick={copyToClipboard}><Trans t={t} i18nKey=\"downloadCard.button.copy\" /></Button></Col>\r\n        <Col xs=\"auto\"><Button disabled={!downloadValid} variant=\"danger\" onClick={deleteDB} ><Trans t={t} i18nKey=\"downloadCard.button.delete\" /></Button></Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>\r\n}\r\nasync function readFile(file, cb) {\r\n  if (!file) return\r\n  const reader = new FileReader()\r\n  reader.onload = () => {\r\n    cb(reader.result)\r\n  }\r\n  reader.readAsText(file)\r\n}\r\nfunction replaceDatabase(obj, cb = () => { }) {\r\n  if (!window.confirm(\"Are you sure you want to replace your database? All existing characters and artifacts will be deleted before replacement.\")) return\r\n  loadDatabaseObj(obj)\r\n  cb()\r\n}\r\nfunction UploadCard({ forceUpdate }) {\r\n  const { t } = useTranslation([\"ui\", \"settings\"]);\r\n  const [data, setdata] = useState(\"\")\r\n  const [filename, setfilename] = useState(\"\")\r\n  let error = \"\"\r\n  let numChar, numArt, dataObj\r\n  if (data) {\r\n    try {\r\n      dataObj = JSON.parse(data)\r\n      const { characterDatabase, artifactDatabase } = dataObj\r\n      numChar = Object.keys(characterDatabase).length\r\n      numArt = Object.keys(artifactDatabase).length\r\n    } catch (e) {\r\n      error = `Invalid JSON: ${e}`\r\n    }\r\n  }\r\n  const dataValid = Boolean(numChar || numArt)\r\n  const replaceDB = () => {\r\n    replaceDatabase(dataObj)\r\n    setdata(\"\")\r\n    setfilename(\"\")\r\n    forceUpdate()\r\n  }\r\n  const onUpload = e => {\r\n    const file = e.target.files[0]\r\n    e.target.value = null//reset the value so the same file can be uploaded again...\r\n    if (file) setfilename(file.name)\r\n    readFile(file, setdata)\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header><Trans t={t} i18nKey=\"settings:uploadCard.title\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Form.File\r\n          className=\"mb-2\"\r\n          label={filename ? filename : <Trans t={t} i18nKey=\"settings:uploadCard.hint\" />}\r\n          onChange={onUpload}\r\n          custom\r\n          accept=\".json\"\r\n        />\r\n        <h6><Trans t={t} i18nKey=\"settings:uploadCard.hintPaste\" /></h6>\r\n        <textarea className=\"w-100 text-monospace\" value={data} onChange={e => setdata(e.target.value)} style={{ minHeight: \"10em\" }} />\r\n      </Row>\r\n      {dataValid && <Row>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"settings:uploadCard.numChar\" /> <b>{numChar}</b></h6></Col>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"settings:uploadCard.numArt\" /> <b>{numArt}</b></h6></Col>\r\n      </Row>}\r\n      {Boolean(data && (error || !dataValid)) && <Alert variant=\"danger\">{error ? error : \"Unable to parse character & artifact data from file.\"}</Alert>}\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Button variant={dataValid ? \"success\" : \"danger\"} disabled={!dataValid} onClick={replaceDB}><Trans t={t} i18nKey=\"settings:uploadCard.replaceDatabase\" /></Button>\r\n    </Card.Footer>\r\n  </Card>\r\n}","import { Card, Spinner } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nexport default function LoadingCard() {\r\n  const { t, ready } = useTranslation(\"ui\", { useSuspense: false });\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n    <Card.Body>\r\n      <h3 className=\"text-center\">{ready ? <Trans t={t} i18nKey=\"ui:loading\" /> : \"Loading...\"}<Spinner animation=\"border\" variant=\"primary\" /></h3>\r\n    </Card.Body>\r\n  </Card>\r\n}","import { faDiscord, faPatreon, faPaypal } from '@fortawesome/free-brands-svg-icons';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ReactGA from 'react-ga';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { HashRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { version } from \"../package.json\";\r\nimport './App.scss';\r\nimport './Assets/Image.scss';\r\nimport LoadingCard from './Components/LoadingCard';\r\nimport { DatabaseInitAndVerify } from './Database/DatabaseUtil';\r\nimport './i18n';\r\nimport { LanguageDropdown } from './Settings/SettingsDisplay';\r\n\r\nconst Home = lazy(() => import('./Home/HomeDisplay'))\r\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\r\nconst CharacterDisplay = lazy(() => import('./Character/CharacterDisplay'))\r\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\r\nconst Planner = lazy(() => import('./Planner/PlannerDisplay'))\r\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\r\nconst FlexDisplay = lazy(() => import('./FlexPage/FlexDisplay'))\r\nconst SettingsDisplay = lazy(() => import('./Settings/SettingsDisplay'))\r\nDatabaseInitAndVerify()\r\nfunction App() {\r\n  return <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n    <AppInner />\r\n  </Suspense>\r\n}\r\nfunction AppInner() {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <HashRouter>\r\n    <div className=\"h-100 d-flex flex-column\" id=\"mainContainer\">\r\n      <div id=\"content\" className=\"flex-grow-1\">\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand as={Link} to=\"/\"><Trans t={t} i18nKey=\"pageTitle\">Genshin Optimizer</Trans></Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link as={Link} to=\"/artifact\"><Trans t={t} i18nKey=\"ui:tabs.artifacts\">Artifacts</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/character\"><Trans t={t} i18nKey=\"ui:tabs.characters\">Character</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/build\"><Trans t={t} i18nKey=\"ui:tabs.builds\">Builds</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/tools\"><Trans t={t} i18nKey=\"ui:tabs.tools\">Tools</Trans></Nav.Link>\r\n              {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/test\">TEST</Nav.Link>}\r\n            </Nav>\r\n            <Nav>\r\n              {process.env.NODE_ENV === \"development\" && <LanguageDropdown />}\r\n              <Nav.Link href={process.env.REACT_APP_PAYPAL_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPaypal} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.paypal\">PayPal</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_PATREON_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPatreon} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.patreon\">Patreon</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"discord\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faDiscord} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.discord\">Discord</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/setting\"><FontAwesomeIcon icon={faCog} /></Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n          <Switch>\r\n            <Route path=\"/artifact\" component={ArtifactDisplay} />\r\n            <Route path=\"/character\" component={CharacterDisplay} />\r\n            <Route path=\"/build\" component={BuildDisplay} />\r\n            <Route path=\"/tools\" component={Planner} />\r\n            {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\r\n            <Route path=\"/setting\" component={SettingsDisplay} />\r\n            <Route path=\"/flex\" component={FlexDisplay} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n      <Nav id=\"footer\" className=\"bg-dark\">\r\n        <Row className=\"w-100 ml-0 mr-0 mb-2 text-light d-flex justify-content-between\">\r\n          <Col xs={\"auto\"}>\r\n            <span><small><Trans t={t} i18nKey=\"ui:rightsDisclaimer\">Genshin Optimizer is not affiliated with or endorsed by miHoYo.</Trans></small></span>\r\n          </Col>\r\n          <Col xs={\"auto\"}>\r\n            <span><small ><Trans t={t} i18nKey=\"ui:appVersion\" values={{ version: version }}>Genshin Optimizer Version: {{ version }}</Trans></small></span>\r\n          </Col>\r\n        </Row>\r\n      </Nav>\r\n    </div>\r\n  </HashRouter>\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID as any, {\r\n  // debug: process.env.NODE_ENV === \"development\"\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(undefined);\r\n","import { ICharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static initiated = false\r\n  static characterDatabase: Dict<CharacterKey, ICharacter> = {}\r\n  static listener: any[] = []\r\n  static charListener: any[] = []\r\n  static getCharacterDatabase = () => deepClone(CharacterDatabase.characterDatabase);\r\n  static getCharacterKeyList = (): CharacterKey[] => Object.keys(CharacterDatabase.characterDatabase);\r\n  static getIdList = () => Object.keys(CharacterDatabase.characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (CharacterDatabase.initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\r\n      const [, characterKey] = key.split(\"char_\")\r\n      if (!CharacterDatabase.characterDatabase[characterKey]) {\r\n        const character = loadFromLocalStorage(key);\r\n        if (!character) return;\r\n        CharacterDatabase.characterDatabase[characterKey] = character;\r\n      }\r\n    })\r\n    CharacterDatabase.initiated = true\r\n    CharacterDatabase.emitEvent()\r\n    return true\r\n  }\r\n  static update = (char: ICharacter, emit = true) => {\r\n    const dchar = deepClone(char)\r\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\r\n    CharacterDatabase.characterDatabase[char.characterKey] = dchar;\r\n    if (emit) {\r\n      CharacterDatabase.emitEvent()\r\n      CharacterDatabase.emitCharEvent(dchar.characterKey, dchar)\r\n    }\r\n  }\r\n  static get = (characterKey: string): ICharacter | undefined => CharacterDatabase.characterDatabase[characterKey]\r\n\r\n  static remove = (characterKey) => {\r\n    delete CharacterDatabase.characterDatabase[characterKey];\r\n    localStorage.removeItem(`char_${characterKey}`);\r\n    CharacterDatabase.emitEvent()\r\n  }\r\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\r\n    CharacterDatabase.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\r\n\r\n  static equipArtifactOnSlot = (characterKey, slotKey, artid) => {\r\n    const char = CharacterDatabase.get(characterKey)\r\n    if (!char) return\r\n    char.equippedArtifacts[slotKey] = artid;\r\n    CharacterDatabase.update(char)\r\n  }\r\n  static equipArtifactBuild = (characterKey, artifactIds) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    character.equippedArtifacts = artifactIds\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(CharacterDatabase.characterDatabase).forEach(char => {\r\n      char.equippedArtifacts = {}\r\n      CharacterDatabase.update(char)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    CharacterDatabase.characterDatabase = {}\r\n    CharacterDatabase.initiated = false\r\n    CharacterDatabase.emitEvent()\r\n  }\r\n  static registerListener(callback) {\r\n    CharacterDatabase.listener.push(callback)\r\n  }\r\n  static unregisterListener(callback) {\r\n    CharacterDatabase.listener = CharacterDatabase.listener.filter(cb => cb !== callback)\r\n  }\r\n  static emitEvent() {\r\n    CharacterDatabase.listener.forEach(cb => cb(CharacterDatabase.characterDatabase))\r\n  }\r\n  static registerCharListener(characterKey, callback) {\r\n    if (!CharacterDatabase.charListener[characterKey]) CharacterDatabase.charListener[characterKey] = [callback]\r\n    else CharacterDatabase.charListener[characterKey].push(callback)\r\n  }\r\n  static unregisterCharListener(characterKey, callback) {\r\n    CharacterDatabase.charListener[characterKey] = CharacterDatabase.charListener[characterKey]?.filter(cb => cb !== callback)\r\n  }\r\n  static emitCharEvent(characterKey, char) {\r\n    CharacterDatabase.charListener[characterKey]?.forEach(cb => cb(char))\r\n  }\r\n}\r\n","import { IArtifact } from \"../Types/artifact\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase: Dict<string, IArtifact> = {};\r\nvar artIdIndex = 1;\r\nconst artListener = {}\r\nvar listener: any[] = []\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) throw Error('A static class cannot be instantiated.');\r\n\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey || art.substats?.some(substat => substat.key && !substat.value) //TODO: is this necessary now that we are using typescript?\r\n  static getArtifactDatabase = () => artifactDatabase;\r\n  static getIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (ArtifactDatabase.isInvalid(art)) {\r\n          ArtifactDatabase.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    ArtifactDatabase.emitEvent()\r\n    return true\r\n  }\r\n  static get = (id) => artifactDatabase[id]\r\n  static removeArtifact = (art) => {\r\n    ArtifactDatabase.removeArtifactById(art.id);\r\n  }\r\n  static update = (art) => {\r\n    if (ArtifactDatabase.isInvalid(art)) return;\r\n    let id = art.id;\r\n    if (!id) {//if does not have id, generate ID\r\n      do {\r\n        id = `artifact_${artIdIndex++}`\r\n      } while (localStorage.getItem(id) !== null)\r\n      art.id = id\r\n    }\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    ArtifactDatabase.emitEvent()\r\n    ArtifactDatabase.emitArtEvent(id, dart)\r\n    return id\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n    ArtifactDatabase.emitEvent()\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location: CharacterKey | \"\" = \"\") => {\r\n    const art = ArtifactDatabase.get(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    ArtifactDatabase.update(art);\r\n  }\r\n  static setLocked = (artid, lock = false) => {\r\n    const art = ArtifactDatabase.get(artid)\r\n    if (!art || art.lock === lock) return;\r\n    art.lock = lock;\r\n    ArtifactDatabase.update(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    ArtifactDatabase.moveToNewLocation(artA.id, locB)\r\n    ArtifactDatabase.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    ArtifactDatabase.swapLocations(ArtifactDatabase.get(artAid), ArtifactDatabase.get(artBid))\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(artifactDatabase).forEach(art => {\r\n      art.location = \"\"\r\n      ArtifactDatabase.update(art)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    artifactDatabase = {}\r\n    initiated = false\r\n    artIdIndex = 1\r\n    ArtifactDatabase.emitEvent()\r\n  }\r\n  static registerListener(callback) {\r\n    listener.push(callback)\r\n  }\r\n  static unregisterListener(callback) {\r\n    listener = listener.filter(cb => cb !== callback)\r\n  }\r\n  static emitEvent() {\r\n    listener.forEach(cb => cb(artifactDatabase))\r\n  }\r\n  static registerArtListener(id, callback) {\r\n    if (!artListener[id]) artListener[id] = [callback]\r\n    else artListener[id].push(callback)\r\n  }\r\n  static unregisterArtListener(id, callback) {\r\n    artListener[id] = artListener[id]?.filter(cb => cb !== callback)\r\n  }\r\n  static emitArtEvent(id, art) {\r\n    artListener[id]?.forEach(cb => cb(art))\r\n  }\r\n}","//for DB v2, we changed a bunch of keys.\r\nconst changes: { [oldKey: string]: string } = {\r\n  char_ele_key: \"characterEle\",\r\n  char_level: \"characterLevel\",\r\n\r\n  hp_base: \"characterHP\",\r\n  hp_final: \"finalHP\",\r\n  atk_character_base: \"characterATK\",\r\n  atk_base: \"baseATK\",\r\n  atk_final: \"finalATK\",\r\n  atk_weapon: \"weaponATK\",\r\n  def_base: \"characterDEF\",\r\n  def_final: \"finalDEF\",\r\n  phy_dmg_bonus: \"physical_dmg_\",\r\n  phy_res: \"physical_res_\",\r\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\r\n  geo_ele_dmg_bonus: \"geo_dmg_\",\r\n  electro_ele_dmg_bonus: \"electro_dmg_\",\r\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\r\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\r\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\r\n  anemo_ele_res: \"anemo_res_\",\r\n  geo_ele_res: \"geo_res_\",\r\n  electro_ele_res: \"electro_res_\",\r\n  hydro_ele_res: \"hydro_res_\",\r\n  pyro_ele_res: \"pyro_res_\",\r\n  cryo_ele_res: \"cryo_res_\",\r\n  ener_rech: \"enerRech_\",\r\n  crit_rate: \"critRate_\",\r\n  crit_dmg: \"critDMG_\",\r\n  stam: \"stamina\",\r\n  heal_bonu: \"heal_\",\r\n  inc_heal: \"incHeal_\",\r\n  pow_shield: \"powShield_\",\r\n  red_cd: \"cdRed_\",\r\n  skill_cd_red: \"skillCDRed_\",\r\n  burst_cd_red: \"burstCDRed_\",\r\n  all_dmg_bonus: \"dmg_\",\r\n  move_spd: \"moveSPD_\",\r\n  atk_spd: \"atkSPD_\",\r\n  weakspot_dmg: \"weakspotDMG_\",\r\n  stamina_dec: \"staminaDec_\",\r\n  stamina_gliding_dec: \"staminaGlidingDec_\",\r\n  stamina_charged_dec: \"staminaChargedDec_\",\r\n  ele_mas_multi_x: \"eleMasX\",\r\n  ele_mas_multi_y: \"eleMasY\",\r\n  ele_mas_multi_z: \"eleMasZ\",\r\n\r\n  norm_atk_dmg: \"physical_normal_hit\",\r\n  char_atk_dmg: \"physical_charged_hit\",\r\n  plunge_dmg: \"physical_plunging_hit\",\r\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\r\n  char_atk_crit_dmg: \"physical_charged_critHit\",\r\n  plunge_crit_dmg: \"physical_plunging_critHit\",\r\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\r\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\r\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\r\n  norm_atk_dmg_bonus: \"normal_dmg_\",\r\n  char_atk_dmg_bonus: \"charged_dmg_\",\r\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\r\n  skill_dmg_bonus: \"skill_dmg_\",\r\n  burst_dmg_bonus: \"burst_dmg_\",\r\n  norm_atk_crit_rate: \"normal_critRate_\",\r\n  char_atk_crit_rate: \"charged_critRate_\",\r\n  skill_crit_rate: \"skill_critRate_\",\r\n  burst_crit_rate: \"burst_critRate_\",\r\n\r\n  anemo_skill_dmg: \"anemo_skill_hit\",\r\n  anemo_burst_dmg: \"anemo_burst_hit\",\r\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\r\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\r\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\r\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\r\n  geo_skill_dmg: \"geo_skill_hit\",\r\n  geo_burst_dmg: \"geo_burst_hit\",\r\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\r\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\r\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\r\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\r\n  electro_skill_dmg: \"electro_skill_hit\",\r\n  electro_burst_dmg: \"electro_burst_hit\",\r\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\r\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\r\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\r\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\r\n  hydro_skill_dmg: \"hydro_skill_hit\",\r\n  hydro_burst_dmg: \"hydro_burst_hit\",\r\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\r\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\r\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\r\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\r\n  pyro_skill_dmg: \"pyro_skill_hit\",\r\n  pyro_burst_dmg: \"pyro_burst_hit\",\r\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\r\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\r\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\r\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\r\n  cryo_skill_dmg: \"cryo_skill_hit\",\r\n  cryo_burst_dmg: \"cryo_burst_hit\",\r\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\r\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\r\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\r\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\r\n\r\n  phy_dmg: \"physical_hit\",\r\n  phy_crit_dmg: \"physical_critHit\",\r\n  phy_avg_dmg: \"physical_avgHit\",\r\n  anemo_ele_dmg: \"anemo_hit\",\r\n  anemo_ele_crit_dmg: \"anemo_critHit\",\r\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\r\n  geo_ele_dmg: \"geo_hit\",\r\n  geo_ele_crit_dmg: \"geo_critHit\",\r\n  geo_ele_avg_dmg: \"geo_avgHit\",\r\n  electro_ele_dmg: \"electro_hit\",\r\n  electro_ele_crit_dmg: \"electro_critHit\",\r\n  electro_ele_avg_dmg: \"electro_avgHit\",\r\n  hydro_ele_dmg: \"hydro_hit\",\r\n  hydro_ele_crit_dmg: \"hydro_critHit\",\r\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\r\n  pyro_ele_dmg: \"pyro_hit\",\r\n  pyro_ele_crit_dmg: \"pyro_critHit\",\r\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\r\n  cryo_ele_dmg: \"cryo_hit\",\r\n  cryo_ele_crit_dmg: \"cryo_critHit\",\r\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\r\n\r\n  overload_dmg: \"overload_hit\",\r\n  overload_dmg_bonus: \"overload_dmg_\",\r\n  overload_multi: \"overload_multi\",\r\n  electrocharged_dmg: \"electrocharged_hit\",\r\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\r\n  electrocharged_multi: \"electrocharged_multi\",\r\n  superconduct_dmg: \"superconduct_hit\",\r\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\r\n  superconduct_multi: \"superconduct_multi\",\r\n  burning_dmg: \"burning_hit\",\r\n  burning_dmg_bonus: \"burning_dmg_\",\r\n  swirl_dmg: \"swirl_hit\",\r\n  swirl_dmg_bonus: \"swirl_dmg_\",\r\n  swirl_multi: \"swirl_multi\",\r\n  shatter_dmg: \"shattered_hit\",\r\n  shatter_dmg_bonus: \"shattered_dmg_\",\r\n  shatter_multi: \"shattered_multi\",\r\n  crystalize_dmg: \"crystalize_hit\",\r\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\r\n\r\n  melt_dmg_bonus: \"melt_dmg_\",\r\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\r\n\r\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\r\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\r\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\r\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\r\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\r\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\r\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\r\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\r\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\r\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\r\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\r\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\r\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\r\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\r\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\r\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\r\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\r\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\r\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\r\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\r\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\r\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\r\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\r\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\r\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\r\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\r\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\r\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\r\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\r\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\r\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\r\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\r\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\r\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\r\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\r\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\r\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\r\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\r\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\r\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\r\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\r\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\r\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\r\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\r\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\r\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\r\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\r\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\r\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\r\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\r\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\r\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\r\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\r\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\r\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\r\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\r\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\r\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\r\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\r\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\r\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\r\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\r\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\r\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\r\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\r\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\r\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\r\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\r\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\r\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\r\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\r\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\r\n\r\n  enemy_phy_res: \"physical_enemyRes_\",\r\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\r\n  enemy_phy_immunity: \"physical_enemyImmunity\",\r\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\r\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\r\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\r\n  geo_enemy_ele_res: \"geo_enemyRes_\",\r\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\r\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\r\n  electro_enemy_ele_res: \"electro_enemyRes_\",\r\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\r\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\r\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\r\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\r\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\r\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\r\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\r\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\r\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\r\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\r\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\r\n\r\n  ele_mas: \"eleMas\",\r\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\r\n\r\n  enemy_level_multi: \"enemyLevel_multi\",\r\n  enemy_level: \"enemyLevel\"\r\n}\r\n/*\r\nconst same = [\r\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\r\n]\r\n\r\nconst removed = [\r\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\r\n]\r\n\r\nconst aded = [\r\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\r\n]\r\n*/\r\n\r\n//renamed dmgMode to hitMode\r\nconst dmgModeToHitMode = {\r\n  avg_dmg: \"avgHit\",\r\n  dmg: \"hit\",\r\n  crit_dmg: \"critHit\"\r\n}\r\nexport { changes, dmgModeToHitMode }","import ArtifactDatabase from \"./ArtifactDatabase\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nimport { allSlotKeys } from \"../Types/consts\";\r\nimport { ICharacter } from \"../Types/character\";\r\nimport { ascensionMaxLevel } from \"../Data/CharacterData\";\r\n\r\nconst CurrentDatabaseVersion = 5\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  const dbVersion = getDatabaseVersion()\r\n  //edit the data before the database is populated\r\n  if (dbVersion < 2) {\r\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\r\n      const character = loadFromLocalStorage(key);\r\n      const { characterKey, equippedArtifacts = {} } = character\r\n      const dbKey = `char_${characterKey}`\r\n      if (localStorage.getItem(dbKey) === null) {\r\n        //if there is no character saved, create a new character\r\n        const { id, name, dmgMode, ...rest } = character\r\n        if (Array.isArray(rest?.buildSetting?.mainStat))\r\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\r\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\r\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]: any) => [stat in v2change ? v2change[stat] : stat, value]))\r\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\r\n        saveToLocalStorage(dbKey, rest)\r\n        //equip to the new character\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = characterKey\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      } else {\r\n        //if the character does exist, \"move\" the artifacts equipped to inventory\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = \"\"\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      }\r\n      //delete the old database\r\n      localStorage.removeItem(key)\r\n    })\r\n    //reset the ArtifactDisplay keys\r\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\r\n    if (ArtifactDisplayState) {\r\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\r\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\r\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\r\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\r\n    }\r\n  }\r\n  if (dbVersion < 3) {\r\n    const state = loadFromLocalStorage(\"CharacterDisplay.state\")\r\n    if (state) {\r\n      if (Array.isArray(state.elementalFilter)) state.elementalFilter = \"\"\r\n      if (Array.isArray(state.weaponFilter)) state.weaponFilter = \"\"\r\n      saveToLocalStorage(\"CharacterDisplay.state\", state)\r\n    }\r\n  }\r\n\r\n  if (dbVersion < 4) {\r\n    //merged both travelers in the system. So need to convert & merge. Keep anemo, and delete geo.\r\n    const traveler = loadFromLocalStorage(\"char_traveler_anemo\") as ICharacter\r\n    if (traveler) {\r\n      localStorage.removeItem(\"char_traveler_anemo\")\r\n      localStorage.removeItem(\"char_traveler_geo\")\r\n      traveler.elementKey = \"anemo\"\r\n      traveler.characterKey = \"traveler\"\r\n      saveToLocalStorage(\"char_traveler\", traveler)\r\n    }\r\n  }\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n\r\n  Object.values(deepClone(ArtifactDatabase.getArtifactDatabase())).forEach((art: any) => {\r\n    let valid = true\r\n\r\n    // remove mainStatVal\r\n    if (art.mainStatVal) {\r\n      delete art.mainStatVal\r\n      valid = false\r\n    }\r\n\r\n    //verify the linking of artifacts and characters\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.get(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifactOnSlot(art.location, art.slotKey, art.id)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 2) {\r\n      if (art.mainStatKey in v2change) {\r\n        art.mainStatKey = v2change[art.mainStatKey]\r\n        valid = false\r\n      }\r\n      art?.substats?.forEach((obj, i) => {\r\n        if (obj.key in v2change) {\r\n          art.substats[i].key = v2change[obj.key]\r\n          valid = false\r\n        }\r\n      })\r\n    }\r\n    if (dbVersion < 3) {\r\n      //remove cached efficiency & rolls\r\n      delete art.currentEfficiency\r\n      delete art.maximumEfficiency\r\n      art?.substats?.forEach((substat, i) => {\r\n        delete substat.efficiency\r\n        delete substat.rolls\r\n      })\r\n      valid = false\r\n    }\r\n\r\n    if (dbVersion < 4) {\r\n      //move traveler_anemo artifacts to traveler, and remove geo artifacts\r\n      if (art.location === \"traveler_anemo\") {\r\n        art.location = \"traveler\"\r\n        valid = false\r\n      } else if (art.location === \"traveler_geo\") {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n    //Update any invalid artifacts in DB\r\n    if (!valid) ArtifactDatabase.update(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach((character: any) => {\r\n    let valid = true;\r\n    const { characterKey } = character\r\n    //verify character database equipment validity\r\n    if (!character.equippedArtifacts || !Object.keys(character.equippedArtifacts).length) {\r\n      character.equippedArtifacts = Object.fromEntries(allSlotKeys.map(sk => [sk, \"\"]))\r\n      valid = false\r\n    }\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.get(artid)\r\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\r\n      if (artid && !equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey as any] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 3) {\r\n      delete character.artifactConditional\r\n      delete character.talentCondtiional\r\n      delete character.autoInfused\r\n      if (character.buildSetting) {\r\n        const { artifactsAssumeFull = false, ascending = false, mainStat = [\"\", \"\", \"\"], setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }], useLockedArts = false } = character.buildSetting ?? {}\r\n        delete character.buildSetting\r\n        character.buildSettings = { mainStatAssumptionLevel: artifactsAssumeFull ? 20 : 0, ascending, mainStatKeys: mainStat, setFilters, useLockedArts }\r\n      }\r\n      delete character.weapon?.conditionalNum\r\n      valid = false\r\n    }\r\n    if (dbVersion < 5 && character.levelKey) {\r\n      const levelKey = character.levelKey\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        character.level = 1\r\n        character.ascension = 0\r\n      } else {\r\n        character.level = level\r\n        character.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n      delete character.levelKey\r\n      delete character.baseStatOverrides?.characterLevel\r\n      delete character.baseStatOverrides?.characterHP\r\n      delete character.baseStatOverrides?.characterATK\r\n      delete character.baseStatOverrides?.characterDEF\r\n      valid = false\r\n    }\r\n\r\n    //update any invalid characters in DB\r\n    if (!valid) CharacterDatabase.update(character)\r\n  })\r\n  setDatabaseVersion(CurrentDatabaseVersion)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nfunction createDatabaseObj() {\r\n  const characterDatabase = CharacterDatabase.getCharacterDatabase()\r\n  const artifactDatabase = ArtifactDatabase.getArtifactDatabase()\r\n  const artifactDisplay = loadFromLocalStorage(\"ArtifactDisplay.state\") ?? {}\r\n  const characterDisplay = loadFromLocalStorage(\"CharacterDisplay.state\") ?? {}\r\n  const buildsDisplay = loadFromLocalStorage(\"BuildsDisplay.state\") ?? {}\r\n\r\n  return {\r\n    version: getDatabaseVersion(),\r\n    characterDatabase,\r\n    artifactDatabase,\r\n    artifactDisplay,\r\n    characterDisplay,\r\n    buildsDisplay,\r\n  }\r\n}\r\n\r\nfunction loadDatabaseObj({ version = 0, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay, }) {\r\n  clearDatabase()\r\n  //load from obj charDB,artDB\r\n  Object.entries(characterDatabase).forEach(([charKey, char]) => saveToLocalStorage(`char_${charKey}`, char))\r\n  Object.entries(artifactDatabase).forEach(([id, art]) => saveToLocalStorage(id, art))\r\n  //override version\r\n  setDatabaseVersion(version)\r\n  saveToLocalStorage(\"ArtifactDisplay.state\", artifactDisplay)\r\n  saveToLocalStorage(\"CharacterDisplay.state\", characterDisplay)\r\n  saveToLocalStorage(\"BuildsDisplay.state\", buildsDisplay)\r\n\r\n  DatabaseInitAndVerify()\r\n}\r\nfunction clearDatabase() {\r\n  //delete all characters and artifacts\r\n  Object.keys(localStorage).filter(key => key.startsWith(\"char_\") || key.startsWith(\"artifact_\")).forEach(id =>\r\n    localStorage.removeItem(id))\r\n  localStorage.removeItem(\"db_ver\")\r\n  localStorage.removeItem(\"ArtifactDisplay.state\")\r\n  localStorage.removeItem(\"CharacterDisplay.state\")\r\n  localStorage.removeItem(\"BuildsDisplay.state\")\r\n  //clear the database to validate again\r\n  CharacterDatabase.clearDatabase()\r\n  ArtifactDatabase.clearDatabase()\r\n}\r\nexport {\r\n  DatabaseInitAndVerify,\r\n  createDatabaseObj,\r\n  loadDatabaseObj,\r\n  clearDatabase,\r\n  CurrentDatabaseVersion\r\n};\r\n","export const getRandomElementFromArray = <T>(array: readonly T[]): T => array[Math.floor(Math.random() * array.length)];\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nexport function getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n}\r\nexport function getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport const loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nexport const saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nexport const deepClone = <T>(obj: T): T =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nexport const closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nexport const closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nexport const clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nexport const getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nexport const clamp01 = (val) => clamp(val, 0, 1)\r\nexport const clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nexport function strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nexport function hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nexport function objMultiplication(obj, multi) {\r\n  if (multi === 1) return obj\r\n  Object.keys(obj).forEach((prop: any) => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n  return obj\r\n}\r\n\r\n//assign obj.[keys...] = value\r\nexport function layeredAssignment(obj, keys, value) {\r\n  keys.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, obj)\r\n  return obj\r\n}\r\nexport function objPathValue(obj, keys) {\r\n  return keys.reduce((a, k) => a?.[k], obj)\r\n}\r\n//delete the value denoted by the path. Will also delete empty objects as well.\r\nexport function deletePropPath(obj, path) {\r\n  const tempPath = [...path]\r\n  const lastKey = tempPath.pop()\r\n  const objPathed = objPathValue(obj, tempPath)\r\n  delete objPathed[lastKey];\r\n}\r\n\r\nexport function objClearEmpties(o) {\r\n  for (const k in o) {\r\n    if (typeof o[k] !== \"object\") continue\r\n    objClearEmpties(o[k])\r\n    if (!Object.keys(o[k]).length) delete o[k];\r\n  }\r\n}\r\nexport function crawlObject(obj, keys, validate, cb) {\r\n  if (validate(obj)) cb(obj, keys)\r\n  else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => crawlObject(val, [...keys, key], validate, cb))\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nexport const getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\n\r\nexport function evalIfFunc<T, X>(value: T | ((arg: X) => T), arg: X): T {\r\n  return typeof value === \"function\" ? (value as any)(arg) : value\r\n}","import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n// Probably a way to auto-populate this.\r\nexport const languageCodeList = [\r\n  \"chs\",\r\n  \"cht\",\r\n  \"de\",\r\n  \"en\",\r\n  \"es\",\r\n  \"fr\",\r\n  \"id\",\r\n  \"ja\",\r\n  \"ko\",\r\n  \"pt\",\r\n  \"ru\",\r\n  \"th\",\r\n  \"vi\"\r\n];\r\n\r\n/**\r\n * @see: https://www.i18next.com/translation-function/essentials\r\n * @see: https://react.i18next.com/latest/using-with-hooks\r\n */\r\ni18n\r\n  // load translation using http ->\r\n  // see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // Configure localization.\r\n  .init({\r\n    debug: process.env.NODE_ENV === \"development\",\r\n    // Use English strings by default, if the current language does not include\r\n    // the specified string.\r\n    fallbackLng: 'en',\r\n    // fallbackLng: 'dev', // Switch to this to force the fallback value on missing strings.\r\n\r\n    // List all translation namespaces.\r\n    ns: [\r\n      \"artifact\",\r\n      \"home\",\r\n      \"languages\",\r\n      \"settings\",\r\n      \"ui\",\r\n    ],\r\n    // Specify the default namespace.\r\n    defaultNS: \"ui\",\r\n\r\n    // Only use the language code, skipping the region code.\r\n    // For example, en-US becomes simply en.\r\n    load: 'languageOnly',\r\n\r\n    // allow an empty value to count as invalid (by default is true)\r\n    returnEmptyString: false,\r\n\r\n    backend: process.env.NODE_ENV === \"development\" ? {\r\n      // Path to load localization data from.\r\n      loadPath: 'genshin-optimizer/locales/{{lng}}/{{ns}}.json',\r\n    } : {\r\n      // Path to load localization data from.\r\n      loadPath: 'locales/{{lng}}/{{ns}}.json',\r\n    },\r\n    interpolation: {\r\n      escapeValue: false,//react does interlopation already\r\n    }\r\n  });\r\n\r\nexport default i18n;","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nexport const allHitModes = [\"hit\", \"avgHit\", \"critHit\"] as const\r\nexport const allReactionModes = [\"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",] as const\r\nexport const allArtifactSetCount = [1, 2, 3, 4, 5] as const\r\nexport const allRarities = [5, 4, 3, 2, 1] as const\r\nexport const allArtifactRarities = [5, 4, 3] as const\r\nexport const allSlotKeys = [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"] as const\r\nexport const allElements = ['anemo', 'geo', 'electro', 'hydro', 'pyro', 'cryo'] as const\r\nexport const allWeaponTypeKeys = ['sword', 'claymore', 'polearm', 'bow', 'catalyst'] as const\r\nexport const allArtifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\",\r\n  \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\",\r\n  \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\",\r\n  \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\",\r\n  \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\",\r\n  \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\",\r\n  \"WanderersTroupe\", \"TenacityOfTheMillelith\", \"PaleFlame\",\r\n] as const\r\nexport const allCharacterKeys = [\r\n  \"albedo\", \"amber\", \"barbara\", \"beidou\", \"bennett\", \"chongyun\", \"diluc\", \"diona\", \"fischl\", \"ganyu\",\r\n  \"hutao\", \"jean\", \"kaeya\", \"keqing\", \"klee\", \"lisa\", \"mona\", \"ningguang\", \"noelle\", \"qiqi\",\r\n  \"razor\", \"sucrose\", \"tartaglia\", \"traveler\", \"traveler\", \"venti\", \"xiao\", \"xiangling\", \"xingqiu\", \"xinyan\",\r\n  \"zhongli\", \"rosaria\", \"yanfei\", \"eula\", \"kaedeharakazuha\"\r\n] as const\r\nexport const allWeaponKeys = [\r\n  \"DullBlade\", \"SilverSword\", \"CoolSteel\", \"DarkIronSword\", \"FilletBlade\", \"HarbingerOfDawn\", \"SkyriderSword\",\r\n  \"TravelersHandySword\", \"BlackcliffLongsword\", \"FavoniusSword\", \"IronSting\", \"LionsRoar\", \"PrimordialJadeCutter\",\r\n  \"PrototypeRancour\", \"RoyalLongsword\", \"SacrificialSword\", \"TheAlleyFlash\", \"TheBlackSword\", \"TheFlute\",\r\n  \"SwordOfDescension\", \"FesteringDesire\", \"AquilaFavonia\", \"SkywardBlade\", \"SummitShaper\", \"WasterGreatsword\",\r\n  \"OldMercsPal\", \"BloodtaintedGreatsword\", \"DebateClub\", \"FerrousShadow\", \"Quartz\", \"SkyriderGreatsword\",\r\n  \"WhiteIronGreatsword\", \"BlackcliffSlasher\", \"FavoniusGreatsword\", \"LithicBlade\", \"PrototypeAminus\", \"Rainslasher\",\r\n  \"RoyalGreatsword\", \"SerpentSpine\", \"TheBell\", \"Whiteblind\", \"SacrificialGreatsword\", \"SnowTombedStarsilver\",\r\n  \"SkywardPride\", \"WolfsGravestone\", \"TheUnforged\", \"BeginnersProtector\", \"IronPoint\", \"BlackTassel\", \"Halberd\",\r\n  \"WhiteTassel\", \"BlackcliffPole\", \"CrescentPike\", \"Deathmatch\", \"DragonsBane\", \"LithicSpear\", \"PrototypeGrudge\",\r\n  \"FavoniusLance\", \"RoyalSpear\", \"DragonspineSpear\", \"VortexVanquisher\", \"PrimordialJadeWingedSpear\", \"StaffOfHoma\",\r\n  \"SkywardSpine\", \"HuntersBow\", \"SeasonedHuntersBow\", \"EbonyBow\", \"Messenger\", \"RavenBow\", \"RecurveBow\",\r\n  \"SharpshootersOath\", \"Slingshot\", \"TheStringless\", \"AlleyHunter\", \"BlackcliffWarbow\", \"CompoundBow\",\r\n  \"FavoniusWarbow\", \"PrototypeCrescent\", \"RoyalBow\", \"Rust\", \"SacrificialBow\", \"TheViridescentHunt\", \"SkywardHarp\",\r\n  \"AmosBow\", \"ElegyForTheEnd\", \"WindblumeOde\", \"ApprenticesNotes\", \"PocketGrimoire\", \"AmberCatalyst\", \"EmeraldOrb\",\r\n  \"MagicGuide\", \"OtherworldlyStory\", \"ThrillingTalesOfDragonSlayers\", \"TwinNephrite\", \"BlackcliffAgate\",\r\n  \"FavoniusCodex\", \"MappaMare\", \"PrototypeMalice\", \"RoyalGrimoire\", \"SacrificialFragments\", \"SolarPearl\", \"TheWidsith\",\r\n  \"WineAndSong\", \"EyeOfPerception\", \"Frostbearer\", \"LostPrayerToTheSacredWinds\", \"SkywardAtlas\", \"MemoryOfDust\",\r\n  \"SongOfBrokenPines\", \"DodocoTales\", \"MitternachtsWaltz\", \"FreedomSworn\"\r\n] as const\r\nexport const characterSpecializedStatKeys = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"] as const\r\n\r\nexport type HitModeKey = typeof allHitModes[number]\r\nexport type ReactionModeKey = typeof allReactionModes[number]\r\nexport type SetNum = typeof allArtifactSetCount[number]\r\nexport type Rarity = typeof allRarities[number]\r\nexport type SlotKey = typeof allSlotKeys[number]\r\nexport type ElementKey = typeof allElements[number]\r\nexport type ArtifactSetKey = typeof allArtifactSets[number]\r\nexport type CharacterKey = typeof allCharacterKeys[number]\r\nexport type WeaponKey = typeof allWeaponKeys[number]\r\nexport type WeaponTypeKey = typeof allWeaponTypeKeys[number]\r\nexport type CharacterSpecializedStatKey = typeof characterSpecializedStatKeys[number]","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined, dependencies: any[]): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>(undefined);\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => {\r\n      pending = false\r\n      setRes(undefined)\r\n    }\r\n  }, dependencies)// eslint-disable-line react-hooks/exhaustive-deps\r\n  return res\r\n}\r\n","// import characters from\r\n\r\nconst ascensionMaxLevel = [20, 40, 50, 60, 70, 80, 90] as const\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n} as const\r\n\r\nexport {\r\n  ascensionMaxLevel,\r\n  characterStatBase,\r\n}"],"sourceRoot":""}