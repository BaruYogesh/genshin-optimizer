{"version":3,"sources":["Components/StarDisplay.tsx","Character/Character.ts","Assets/Element_Anemo.png","Assets/Assets.ts","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Formula.ts","StatDependency.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/InfoComponent.tsx","Character/CharacterCard.tsx"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","Character","this","Error","key","characterSheet","weaponSheet","eleKey","startsWith","subkey","split","getTalentOfKey","name","getElementalName","elementalKey","ElementalData","getLevelString","character","level","ascensionMaxLevel","ascension","getTalentFieldValue","field","stats","defVal","evalIfFunc","hasOverride","statKey","baseStatOverrides","getBaseStatValue","characetSheet","includes","characterStatBase","getStatValueWithOverride","calculateBuild","artifactSheets","artifacts","mainStatAssumptionLevel","Object","fromEntries","art","equippedArtifacts","entries","artid","database","_getArt","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","values","forEach","mainStatKey","mainStatValue","numStars","Math","max","min","substats","substat","value","stat","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","length","condStats","resolve","val","id","dependencies","GetDependencies","modifiers","PreprocessFormulas","formula","mergeStats","modifier","mkey","multiplier","undefined","characterKey","elementKey","hitMode","infusionAura","reactionMode","talentLevelKeys","constellation","weapon","statKeys","characterHP","getBase","characterDEF","characterATK","characterLevel","characterEle","weaponType","weaponTypeKey","tlvl","allElements","overrides","hasOwnProperty","specialStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","getTalentStatsAll","s","weaponATK","getMainStatValue","weaponSubKey","getSubStatKey","getSubStatValue","weaponCond","otherCond","canShow","getDisplayStatKeys","basicKeys","isAutoElemental","push","transReactions","ElementToReactionKeys","charFormulas","talentSheet","getTalent","talentKey","formulas","formKey","weaponFormulas","Formula","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","formulaImport","then","imp","default","get","objPathValue","GetFormulaDependency","dependency","Set","Proxy","target","prop","receiver","add","toString","formulaKeyDependency","freeze","Formulas","StatData","InsertDependencies","has","k","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","InfoComponent","pageKey","text","modalTitle","children","useState","loadFromLocalStorage","showInfoModal","setshowInfoModal","isArray","getRandomElementFromArray","displayText","closeModal","infoShown","saveToLocalStorage","show","onHide","size","variant","contentClassName","bg","Header","Title","xs","onClick","faTimes","Body","fallback","animation","Footer","faQuestionCircle","CharacterCard","onEdit","onDelete","cardClassName","header","footer","databaseCharacter","updateDatabaseCharacter","useEffect","followChar","usePromise","getAll","CharacterSheet","WeaponSheet","useMemo","weaponName","weaponMainVal","toFixed","Stat","fixedUnit","weaponSubVal","weaponLevelName","weaponPassiveName","passiveName","faEdit","faTrashAlt","src","thumbImg","star","thumbnail","auto","skill","burst","refineIndex","getStatName","getStatUnit","setEffects","arr","artifactSetName","highestNum","unit","statVal","StatIconEle","as","Link","to","pathname"],"mappings":"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","file":"static/js/5.1228e8bf.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Rarity } from '../Types/consts'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { ascensionMaxLevel, characterStatBase } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { database } from \"../Database/Database\";\r\nimport Formula from \"../Formula\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { IArtifact } from \"../Types/artifact\";\r\nimport { ICharacter } from \"../Types/character\";\r\nimport { allElements, ArtifactSetKey, ElementKey, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey: ElementKey | \"physical\"): string =>\r\n    ElementalData[elementalKey].name\r\n  static getLevelString = (character: ICharacter): string =>\r\n    `${character.level}/${ascensionMaxLevel[character.ascension]}`\r\n\r\n  static getTalentFieldValue = (field: IFieldDisplay, key: keyof IFieldDisplay, stats = {}, defVal = \"\"): any => {\r\n    if (!field[key]) return defVal\r\n    return evalIfFunc(field[key] as any, stats!)\r\n  }\r\n\r\n  static hasOverride = (character: ICharacter, statKey): boolean => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\")\r\n    if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\")\r\n    if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\")\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getBaseStatValue = (character: ICharacter, characetSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string): number => {\r\n    if (statKey === \"enemyLevel\") return character.level\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    return 0\r\n  }\r\n  static getStatValueWithOverride = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string) => {\r\n    if (Character.hasOverride(character, statKey)) return character.baseStatOverrides?.[statKey] ?? 0\r\n    else return Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)\r\n  }\r\n\r\n  static calculateBuild = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, mainStatAssumptionLevel = 0): ICalculatedStats => {\r\n    let artifacts\r\n    if (character.artifacts) // from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, database._getArt(artid)]))\r\n    const initialStats = Character.createInitialStats(character, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats: ICalculatedStats, artifacts: Dict<SlotKey, IArtifact>, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>): ICalculatedStats => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, initialStats, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach((art: any) => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(stats.mainStatAssumptionLevel, art.numStars * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.value)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      Object.entries(condStats).forEach(([statKey, val]) => stats[statKey as any] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return stats\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of (Object.entries(val) as any)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of (Object.entries(modifier) as any))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n\r\n  static createInitialStats = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    character = deepClone(character)\r\n    const { characterKey, elementKey, level, ascension, hitMode, infusionAura, reactionMode, talentLevelKeys, constellation, equippedArtifacts, conditionalValues = {}, weapon } = character\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"enemyLevel\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, Character.getStatValueWithOverride(character, characterSheet, weaponSheet, key)])) as ICalculatedStats\r\n    initialStats.characterHP = characterSheet.getBase(\"hp\", level, ascension)\r\n    initialStats.characterDEF = characterSheet.getBase(\"def\", level, ascension)\r\n    initialStats.characterATK = characterSheet.getBase(\"atk\", level, ascension)\r\n    initialStats.characterLevel = level\r\n    initialStats.characterEle = characterSheet.elementKey ?? elementKey ?? \"anemo\";\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = deepClone(weapon)\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n\r\n    //enemy stuff\r\n    [\"physical\", ...allElements].forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]: any) => {\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    const specialStatKey = characterSheet.getSpecializedStat(ascension)\r\n    if (specialStatKey) {\r\n      const specializedStatVal = characterSheet.getSpecializedStatVal(ascension)\r\n      Character.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n    }\r\n\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats, initialStats.characterEle).forEach(s => Character.mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponATK = weaponSheet.getMainStatValue(weapon.level, weapon.ascension)\r\n    initialStats.weaponATK = weaponATK\r\n    const weaponSubKey = weaponSheet.getSubStatKey()\r\n    if (weaponSubKey) Character.mergeStats(initialStats, { [weaponSubKey]: weaponSheet.getSubStatValue(weapon.level, weapon.ascension) })\r\n    Character.mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      if (!Conditional.canShow(conditional, initialStats)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      Character.mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n  //TODO: this needs weaponSheet/artifactsheets as a parameter.\r\n  static getDisplayStatKeys = (stats: ICalculatedStats, characterSheet: CharacterSheet) => {\r\n    const eleKey = stats.characterEle\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = characterSheet.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = characterSheet.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    const charFormulas = {}\r\n    const talentSheet = characterSheet.getTalent(eleKey)\r\n    talentSheet && Object.entries(talentSheet.formula).forEach(([talentKey, formulas]) => {\r\n      Object.values(formulas).forEach((formula: any) => {\r\n        if (!formula.field.canShow(stats)) return\r\n        if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n        const formKey = `talentKey_${talentKey}`\r\n        if (!charFormulas[formKey]) charFormulas[formKey] = []\r\n        charFormulas[formKey].push(formula.keys)\r\n      })\r\n    })\r\n\r\n    const weaponFormulas = Formula.formulas?.weapon?.[stats.weapon.key]\r\n\r\n    if (weaponFormulas) {\r\n      Object.values(weaponFormulas as any).forEach((formula: any) => {\r\n        if (!formula.field.canShow(stats)) return\r\n        const formKey = `weapon_${stats.weapon.key}`\r\n        if (!charFormulas[formKey]) charFormulas[formKey] = []\r\n        charFormulas[formKey].push(formula.keys)\r\n      })\r\n    }\r\n    return { basicKeys, ...charFormulas, transReactions }\r\n  }\r\n  static getDisplayHeading(key: string, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, eleKey: ElementKey = \"anemo\") {\r\n    if (key === \"basicKeys\") return \"Basic Stats\"\r\n    else if (key === \"genericAvgHit\") return \"Generic Optimization Values\"\r\n    else if (key === \"transReactions\") return \"Transformation Reaction\"\r\n    else if (key.startsWith(\"talentKey_\")) {\r\n      const subkey = key.split(\"talentKey_\")[1]\r\n      return (characterSheet?.getTalentOfKey(subkey, eleKey)?.name ?? subkey)\r\n    } else if (key.startsWith(\"weapon_\")) {\r\n      const subkey = key.split(\"weapon_\")[1]\r\n      return (weaponSheet?.name ?? subkey)\r\n    }\r\n    return \"\"\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nconst Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import ICalculatedStats from './Types/ICalculatedStats';\r\nimport { objPathValue } from './Util/Util';\r\n\r\nexport const formulaImport = import('./Data/formula').then(imp => {\r\n  Formula.formulas = imp.default\r\n  return imp.default\r\n})\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | object | undefined> => formulaImport.then(formulas => objPathValue(formulas, keys))\r\n}\r\n","import { Formulas, StatData } from \"./StatData\"\r\nimport { Modifier } from \"./Types/ICalculatedStats\"\r\n\r\n// Generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula: (s, c) => number) {\r\n  const dependency: Set<string> = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop.toString()) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop.toString()) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.entries(Formulas).map(([key, value]) => [key, GetFormulaDependency(value)])\r\n)) as Dict<string, string[]>\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers: Modifier = {}, keys = Object.keys(StatData)) {\r\n  let dependencies: Set<string> = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key: string, modifiers: Modifier, dependencies: Set<string>) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0] as any] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faQuestionCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Suspense, useState } from \"react\"\r\nimport { Button, Card, Col, Modal, Row, Spinner } from \"react-bootstrap\"\r\nimport { getRandomElementFromArray, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\"\r\n\r\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }: { pageKey: string, text: Displayable | Displayable[], modalTitle: Displayable, children: JSX.Element }) {\r\n  const [showInfoModal, setshowInfoModal] = useState(loadFromLocalStorage(\"infoShown\")?.[pageKey] ?? true)\r\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\r\n  const closeModal = () => {\r\n    const infoShown = loadFromLocalStorage(\"infoShown\") ?? {}\r\n    infoShown[pageKey] = false\r\n    saveToLocalStorage(\"infoShown\", infoShown)\r\n    setshowInfoModal(false)\r\n  }\r\n  return <>\r\n    <Modal show={showInfoModal} onHide={() => closeModal()} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <Card.Title>{modalTitle}</Card.Title>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button variant=\"danger\" onClick={() => closeModal()} >\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Suspense fallback={<h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>}>\r\n            {children}\r\n          </Suspense>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={() => closeModal()}>\r\n            <span>Close</span>\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"pl-2 py-0 pr-0\">\r\n        <Row>\r\n          <Col><small>{displayText}</small></Col>\r\n          <Col xs=\"auto\">\r\n            <Button size=\"sm\" variant=\"info\" className=\"m-0 py-1\" onClick={() => setshowInfoModal(true)}><FontAwesomeIcon icon={faQuestionCircle} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport { database } from '../Database/Database';\r\nimport Stat from '../Stat';\r\nimport { ICharacter } from '../Types/character';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { usePromise } from '../Util/ReactUtil';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterSheet from './CharacterSheet';\r\ntype CharacterCardProps = { characterKey: CharacterKey | \"\", onEdit?: (any) => void, onDelete?: (any) => void, cardClassName: string, header?: JSX.Element, bg?: string, footer?: boolean }\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer = false }: CharacterCardProps) {\r\n  const [databaseCharacter, updateDatabaseCharacter] = useState(undefined as ICharacter | undefined)\r\n  useEffect(() =>\r\n    characterKey ? database.followChar(characterKey, updateDatabaseCharacter) : undefined,\r\n    [characterKey, updateDatabaseCharacter])\r\n\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n  const character = databaseCharacter\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const weaponSheet = usePromise(character && WeaponSheet.get(character.weapon.key), [character])\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets])\r\n  if (!character || !characterSheet || !weaponSheet || !stats) return null;\r\n\r\n  const { weapon, constellation } = character\r\n  const { level, ascension } = weapon\r\n  const { tlvl } = stats\r\n  const name = characterSheet.name\r\n  const elementKey = stats.characterEle\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponName = weaponSheet?.name\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponLevelName = WeaponSheet.getLevelString(weapon)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {header ? header : <h5><b>{name}</b></h5>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(characterKey)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete(characterKey)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onEdit?.(characterKey)} className={onEdit ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={characterSheet.thumbImg} className={`thumb-big grad-${characterSheet.star}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h5 className=\"mb-0\">Lv. {Character.getLevelString(character)} {`C${constellation}`}</h5>\r\n          <h6 className=\"mb-0\">\r\n            <Badge variant=\"secondary\"><strong className=\"mx-1\">{tlvl.auto + 1}</strong></Badge>{` `}\r\n            <Badge variant=\"secondary\"><strong className=\"mx-1\">{tlvl.skill + 1}</strong></Badge>{` `}\r\n            <Badge variant=\"secondary\"><strong className=\"mx-1\">{tlvl.burst + 1}</strong></Badge>\r\n          </h6>\r\n          <h6 className=\"mb-0\"><Stars stars={characterSheet.star} colored /></h6>\r\n          <h4 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && <Badge variant=\"info\" className=\"ml-1\">{weapon.refineIndex + 1}</Badge>} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = artifactSheets?.[key].name ?? \"\"\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = stats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      } as any}>Generate Builds</Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}"],"sourceRoot":""}