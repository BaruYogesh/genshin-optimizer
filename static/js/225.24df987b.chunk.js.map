{"version":3,"file":"static/js/225.24df987b.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactMainStatMultipleSelectChip.tsx","Components/Artifact/ArtifactSetMultipleSelectChip.tsx","Components/Artifact/ArtifactSubStatMultipleSelectChip.tsx","Components/Artifact/ArtifactFilterDisplay.tsx","Components/Artifact/ArtifactLevelSlider.tsx","../node_modules/@mui/material/utils/isMuiElement.js","../node_modules/@mui/utils/esm/isMuiElement.js"],"sourcesContent":["import { ListItemIcon, ListItemText } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport { Theme, useTheme } from '@mui/material/styles';\r\nimport KeyMap from '../../KeyMap';\r\nimport { allMainStatKeys, MainStatKey } from '../../Types/artifact';\r\nimport { allElementsWithPhy } from '../../Types/consts';\r\nimport StatIcon from '../StatIcon';\r\n\r\n\r\nfunction getStyles(name: string, personName: readonly string[], theme: Theme) {\r\n  return {\r\n    fontWeight: personName.includes(name)\r\n      ? theme.typography.fontWeightMedium\r\n      : theme.typography.fontWeightRegular,\r\n  };\r\n}\r\n\r\nexport default function ArtifactMainStatMultipleSelectChip({ mainStatKeys, setMainStatKeys }:\r\n  { mainStatKeys: MainStatKey[], setMainStatKeys: (keys: MainStatKey[]) => void }) {\r\n  const theme = useTheme();\r\n\r\n  const handleChange = (event: SelectChangeEvent<typeof mainStatKeys>) => {\r\n    const { target: { value }, } = event\r\n    setMainStatKeys((typeof value === 'string' ? value.split(',') : value) as MainStatKey[]);// On autofill we get a stringified value.\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"main-stat-multiple-chip-label\">Main Stats</InputLabel>\r\n        <Select\r\n          labelId=\"main-stat-multiple-chip-label\"\r\n          id=\"main-stat-multiple-chip\"\r\n          multiple\r\n          value={mainStatKeys}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput id=\"main-stat-select-multiple-chip\" label=\"Main Stats\" />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value) => {\r\n                const element = allElementsWithPhy.find(ele => value.includes(ele))\r\n                const color = element ? element : undefined\r\n\r\n                return <Chip key={value} icon={StatIcon[value]} label={KeyMap.getArtStr(value)} color={color}/>\r\n              })}\r\n            </Box>\r\n          )}\r\n        >\r\n          {allMainStatKeys.map(statKey => <MenuItem key={statKey} value={statKey}>\r\n            <ListItemIcon>{StatIcon[statKey]}</ListItemIcon>\r\n            <ListItemText primaryTypographyProps={{ style: getStyles(statKey, mainStatKeys, theme) }}>\r\n              {KeyMap.getArtStr(statKey)}\r\n            </ListItemText>\r\n          </MenuItem>)}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import { Divider, ListItemIcon, ListItemText, Skeleton, Typography } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport { Theme, useTheme } from '@mui/material/styles';\r\nimport { Suspense, useMemo } from 'react';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ArtifactSetKey, Rarity } from '../../Types/consts';\r\nimport { Stars } from '../StarDisplay';\r\n\r\n\r\nfunction getStyles(name: string, personName: readonly string[], theme: Theme) {\r\n  return {\r\n    fontWeight: personName.includes(name)\r\n      ? theme.typography.fontWeightMedium\r\n      : theme.typography.fontWeightRegular,\r\n  };\r\n}\r\n\r\nexport default function ArtifactSetMultipleSelectChip({ artSetKeys, setArtSetKeys }:\r\n  { artSetKeys: ArtifactSetKey[], setArtSetKeys: (keys: ArtifactSetKey[]) => void }) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll, [])\r\n  const theme = useTheme();\r\n\r\n  const handleChange = (event: SelectChangeEvent<typeof artSetKeys>) => {\r\n    const { target: { value }, } = event\r\n    setArtSetKeys((typeof value === 'string' ? value.split(',') : value) as ArtifactSetKey[]);// On autofill we get a stringified value.\r\n  };\r\n  const displaySets = useMemo(() => {\r\n    if (!artifactSheets) return {}\r\n    return ArtifactSheet.setKeysByRarities(artifactSheets)\r\n  }, [artifactSheets])\r\n  if (!artifactSheets) return null\r\n  return (\r\n    <div>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"artifact-set-multiple-chip-label\">Artifact Sets</InputLabel>\r\n        <Select\r\n          labelId=\"artifact-set-multiple-chip-label\"\r\n          id=\"artifact-set-multiple-chip\"\r\n          multiple\r\n          value={artSetKeys}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput id=\"artifact-set-select-multiple-chip\" label=\"Artifact Sets\" />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value) =>\r\n                <Chip key={value} icon={artifactSheets[value]?.defIcon} label={artifactSheets[value].name} />\r\n              )}\r\n            </Box>\r\n          )}\r\n        >\r\n          {!!Object.keys(displaySets).length && Object.entries(displaySets).reverse().flatMap(([star, sets], i) => [\r\n            ...((i > 0) && sets.length ? [<Divider key={`${star}divi`} />] : []),\r\n            ...(sets.length ? [<MenuItem key={`${star}header`} style={{ pointerEvents: 'none' }} >\r\n              <Typography>\r\n                <Trans t={t} i18nKey=\"editor.set.maxRarity\">Max Rarity <Stars stars={parseInt(star) as Rarity} /></Trans>\r\n              </Typography>\r\n            </MenuItem>] : []),\r\n            ...sets.map(setKey => <MenuItem key={setKey} value={setKey}>\r\n              <ListItemIcon>{artifactSheets[setKey]?.defIcon}</ListItemIcon>\r\n              <ListItemText primaryTypographyProps={{ style: getStyles(setKey, artSetKeys, theme) }}>\r\n                <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n                  {artifactSheets[setKey]?.name}\r\n                </Suspense>\r\n              </ListItemText>\r\n            </MenuItem >)\r\n          ])}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import { ListItemIcon, ListItemText } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport { Theme, useTheme } from '@mui/material/styles';\r\nimport KeyMap from '../../KeyMap';\r\nimport { allSubstats, SubstatKey } from '../../Types/artifact';\r\nimport StatIcon from '../StatIcon';\r\n\r\n\r\nfunction getStyles(name: string, personName: readonly string[], theme: Theme) {\r\n  return {\r\n    fontWeight: personName.includes(name)\r\n      ? theme.typography.fontWeightMedium\r\n      : theme.typography.fontWeightRegular,\r\n  };\r\n}\r\n\r\nexport default function ArtifactSubStatMultipleSelectChip({ subStatKeys, setSubStatKeys }:\r\n  { subStatKeys: SubstatKey[], setSubStatKeys: (keys: SubstatKey[]) => void }) {\r\n  const theme = useTheme();\r\n\r\n  const handleChange = (event: SelectChangeEvent<typeof subStatKeys>) => {\r\n    const { target: { value }, } = event\r\n    setSubStatKeys((typeof value === 'string' ? value.split(',') : value) as SubstatKey[]);// On autofill we get a stringified value.\r\n  };\r\n  return (\r\n    <div>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"sub-stat-multiple-chip-label\">Sub Stats</InputLabel>\r\n        <Select\r\n          labelId=\"sub-stat-multiple-chip-label\"\r\n          id=\"sub-stat-multiple-chip\"\r\n          multiple\r\n          value={subStatKeys}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput id=\"sub-stat-select-multiple-chip\" label=\"Sub Stats\" />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value) =>\r\n                <Chip key={value} icon={StatIcon[value]} label={KeyMap.getArtStr(value)} />\r\n              )}\r\n            </Box>\r\n          )}\r\n        >\r\n          {allSubstats.map(statKey => <MenuItem key={statKey} value={statKey}>\r\n            <ListItemIcon>{StatIcon[statKey]}</ListItemIcon>\r\n            <ListItemText primaryTypographyProps={{ style: getStyles(statKey, subStatKeys, theme) }}>\r\n              {KeyMap.getArtStr(statKey)}\r\n            </ListItemText>\r\n          </MenuItem>)}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import { faBan, faChartLine, faUserShield } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { BusinessCenter, Replay } from \"@mui/icons-material\"\r\nimport { Divider, Grid, ListItemIcon, ListItemText, MenuItem, ToggleButton } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { useContext, useMemo } from \"react\"\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport ArtifactLevelSlider from \"./ArtifactLevelSlider\"\r\nimport ArtifactMainStatMultipleSelectChip from \"./ArtifactMainStatMultipleSelectChip\"\r\nimport ArtifactSetMultipleSelectChip from \"./ArtifactSetMultipleSelectChip\"\r\nimport ArtifactSubStatMultipleSelectChip from \"./ArtifactSubStatMultipleSelectChip\"\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\"\r\nimport { CharacterMenuItemArray } from \"../Character/CharacterDropdownButton\"\r\nimport DropdownButton from \"../DropdownMenu/DropdownButton\"\r\nimport SolidToggleButtonGroup from \"../SolidToggleButtonGroup\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\"\r\nimport { DatabaseContext } from \"../../Database/Database\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allArtifactRarities, allSlotKeys, CharacterKey } from \"../../Types/consts\"\r\nimport { characterFilterConfigs } from \"../../Util/CharacterSort\"\r\nimport { FilterOption } from \"../../PageArtifact/ArtifactSort\"\r\n\r\nexport default function ArtifactFilterDisplay({ filterOption, filterOptionDispatch, }: { filterOption: FilterOption, filterOptionDispatch: (any) => void }) {\r\n  const { t } = useTranslation([\"artifact\", \"ui\"]);\r\n\r\n  const { artSetKeys = [], mainStatKeys = [], rarity = [], slotKeys = [], levelLow, levelHigh, substats = [],\r\n    location = \"\", excluded = \"\" } = filterOption\r\n  const locationCharacterSheet = usePromise(CharacterSheet.get(location as CharacterKey), [location])\r\n\r\n  let locationDisplay\r\n  if (!location) locationDisplay = t(\"filterLocation.any\")\r\n  else if (location === \"Inventory\") locationDisplay = <span><BusinessCenter /> {t(\"filterLocation.inventory\")}</span>\r\n  else if (location === \"Equipped\") locationDisplay = <span><FontAwesomeIcon icon={faUserShield} /> {t(\"filterLocation.currentlyEquipped\")}</span>\r\n  else locationDisplay = <b>{locationCharacterSheet?.nameWIthIcon}</b>\r\n\r\n  let excludedDisplay\r\n  if (excluded === \"excluded\") excludedDisplay = <span><FontAwesomeIcon icon={faBan} /> {t`exclusion.excluded`}</span>\r\n  else if (excluded === \"included\") excludedDisplay = <span><FontAwesomeIcon icon={faChartLine} /> {t`exclusion.included`}</span>\r\n  else excludedDisplay = t(\"exclusionDisplay\", { value: t(\"exclusion.any\") })\r\n  return <Grid container spacing={1} >\r\n    {/* left */}\r\n    <Grid item xs={12} md={6} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n      {/* Artifact stars filter */}\r\n      <SolidToggleButtonGroup fullWidth onChange={(e, newVal) => filterOptionDispatch({ rarity: newVal })} value={rarity} size=\"small\">\r\n        {allArtifactRarities.map(star => <ToggleButton key={star} value={star}><Stars stars={star} /></ToggleButton>)}\r\n      </SolidToggleButtonGroup>\r\n      {/* Artifact Slot */}\r\n      <SolidToggleButtonGroup fullWidth onChange={(e, newVal) => filterOptionDispatch({ slotKeys: newVal })} value={slotKeys} size=\"small\">\r\n        {allSlotKeys.map(slotKey => <ToggleButton key={slotKey} value={slotKey}>{artifactSlotIcon(slotKey)}</ToggleButton>)}\r\n      </SolidToggleButtonGroup>\r\n      {/* Artiface level filter */}\r\n      <ArtifactLevelSlider showLevelText levelLow={levelLow} levelHigh={levelHigh}\r\n        setLow={levelLow => filterOptionDispatch({ levelLow })}\r\n        setHigh={levelHigh => filterOptionDispatch({ levelHigh })}\r\n        setBoth={(levelLow, levelHigh) => filterOptionDispatch({ levelLow, levelHigh })} />\r\n      <Box display=\"flex\" gap={1}>\r\n        {/* location */}\r\n        <LocationDropdown dropdownProps={{ color: location ? \"success\" : \"primary\" }} title={locationDisplay} onChange={location => filterOptionDispatch({ location })} selectedCharacterKey={location} />\r\n        {/* exclusion state */}\r\n        <DropdownButton fullWidth title={excludedDisplay} color={excluded ? (excluded === \"included\" ? \"success\" : \"error\") : \"primary\"}>\r\n          <MenuItem selected={excluded === \"\"} disabled={excluded === \"\"} onClick={() => filterOptionDispatch({ excluded: \"\" })}><Trans t={t} i18nKey=\"exclusion.any\" >Any</Trans></MenuItem>\r\n          <MenuItem selected={excluded === \"excluded\"} disabled={excluded === \"excluded\"} onClick={() => filterOptionDispatch({ excluded: \"excluded\" })}>\r\n            <ListItemIcon>\r\n              <FontAwesomeIcon icon={faBan} />\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              <Trans t={t} i18nKey=\"exclusion.excluded\" >Excluded</Trans>\r\n            </ListItemText>\r\n          </MenuItem>\r\n          <MenuItem selected={excluded === \"included\"} disabled={excluded === \"included\"} onClick={() => filterOptionDispatch({ excluded: \"included\" })}>\r\n            <ListItemIcon>\r\n              <FontAwesomeIcon icon={faChartLine} />\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              <Trans t={t} i18nKey=\"exclusion.included\" >Included</Trans>\r\n            </ListItemText>\r\n          </MenuItem>\r\n        </DropdownButton>\r\n      </Box>\r\n    </Grid>\r\n    {/* right */}\r\n    <Grid item xs={12} md={6} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n      {/* Artifact Set */}\r\n      <ArtifactSetMultipleSelectChip artSetKeys={artSetKeys} setArtSetKeys={artSetKeys => filterOptionDispatch({ artSetKeys })} />\r\n      <ArtifactMainStatMultipleSelectChip mainStatKeys={mainStatKeys} setMainStatKeys={mainStatKeys => filterOptionDispatch({ mainStatKeys })} />\r\n      <ArtifactSubStatMultipleSelectChip subStatKeys={substats} setSubStatKeys={substats => filterOptionDispatch({ substats })} />\r\n    </Grid>\r\n  </Grid>\r\n}\r\n\r\nfunction LocationDropdown({ title, onChange, selectedCharacterKey, dropdownProps }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\r\n  const filterConfigs = useMemo(() => characterSheets && characterFilterConfigs(database, characterSheets), [database, characterSheets])\r\n  const { t } = useTranslation([\"artifact\", \"ui\"]);\r\n\r\n  return <DropdownButton fullWidth {...dropdownProps} title={title}>\r\n    <MenuItem key=\"unselect\" selected={selectedCharacterKey === \"\"} disabled={selectedCharacterKey === \"\"} onClick={() => onChange(\"\")}>\r\n      <ListItemIcon>\r\n        <Replay />\r\n      </ListItemIcon>\r\n      <ListItemText>\r\n        <Trans t={t} i18nKey=\"ui:unselect\" >Unselect</Trans>\r\n      </ListItemText>\r\n    </MenuItem>\r\n    <MenuItem key=\"inventory\" selected={selectedCharacterKey === \"Inventory\"} disabled={selectedCharacterKey === \"Inventory\"} onClick={() => onChange(\"Inventory\")}>\r\n      <ListItemIcon>\r\n        <BusinessCenter />\r\n      </ListItemIcon>\r\n      <ListItemText>\r\n        <Trans t={t} i18nKey=\"filterLocation.inventory\" >Inventory</Trans>\r\n      </ListItemText>\r\n    </MenuItem>\r\n    <MenuItem key=\"equipped\" selected={selectedCharacterKey === \"Equipped\"} disabled={selectedCharacterKey === \"Equipped\"} onClick={() => onChange(\"Equipped\")}>\r\n      <ListItemIcon>\r\n        <FontAwesomeIcon icon={faUserShield} />\r\n      </ListItemIcon>\r\n      <ListItemText>\r\n        <Trans t={t} i18nKey=\"filterLocation.currentlyEquipped\" >Currently Equipped</Trans>\r\n      </ListItemText>\r\n    </MenuItem>\r\n    <Divider />\r\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, database._getCharKeys().sort(), onChange, selectedCharacterKey, filterConfigs)}\r\n  </DropdownButton>\r\n}\r\n","import { Card, Slider } from \"@mui/material\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport CustomNumberInput from \"../CustomNumberInput\"\r\n\r\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\r\n  levelLow: number,\r\n  levelHigh: number,\r\n  setLow: (low: number) => void,\r\n  setHigh: (high: number) => void,\r\n  setBoth: (low: number, high: number) => void,\r\n  dark?: boolean,\r\n  disabled?: boolean,\r\n  showLevelText?: boolean,\r\n}) {\r\n  const [sliderLow, setsliderLow] = useState(levelLow)\r\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\r\n  const setSlider = useCallback(\r\n    (e, [l, h]) => {\r\n      setsliderLow(l)\r\n      setsliderHigh(h)\r\n    },\r\n    [setsliderLow, setsliderHigh])\r\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\r\n\r\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\r\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\r\n    <CustomNumberInput\r\n      value={sliderLow}\r\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\r\n      sx={{ pl: 2, width: showLevelText ? 100 : 50, }}\r\n      inputProps={{ sx: { textAlign: \"center\" } }}\r\n      startAdornment={showLevelText ? \"Level: \" : undefined}\r\n      disabled={disabled}\r\n    />\r\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\r\n      getAriaLabel={() => 'Arifact Level Range'}\r\n      value={[sliderLow, sliderHigh]}\r\n      onChange={setSlider}\r\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\r\n      valueLabelDisplay=\"auto\"\r\n      min={0} max={20} step={1} marks\r\n      disabled={disabled}\r\n    />\r\n    <CustomNumberInput\r\n      value={sliderHigh}\r\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\r\n      sx={{ px: 1, width: 50, }}\r\n      inputProps={{ sx: { textAlign: \"center\" } }}\r\n      disabled={disabled}\r\n    />\r\n  </Card>\r\n}\r\n","import { unstable_isMuiElement as isMuiElement } from '@mui/utils';\nexport default isMuiElement;","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}"],"names":["getStyles","name","personName","theme","fontWeight","includes","typography","fontWeightMedium","fontWeightRegular","ArtifactMainStatMultipleSelectChip","mainStatKeys","setMainStatKeys","useTheme","FormControl","fullWidth","InputLabel","id","Select","labelId","multiple","value","onChange","event","target","split","input","OutlinedInput","label","renderValue","selected","sx","display","flexWrap","gap","map","element","allElementsWithPhy","ele","color","undefined","Chip","icon","StatIcon","KeyMap","allMainStatKeys","statKey","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","style","ArtifactSetMultipleSelectChip","artSetKeys","setArtSetKeys","t","useTranslation","artifactSheets","usePromise","ArtifactSheet","displaySets","useMemo","defIcon","Object","keys","length","entries","reverse","flatMap","i","star","sets","Divider","pointerEvents","Typography","Trans","i18nKey","stars","parseInt","setKey","Suspense","fallback","Skeleton","variant","width","ArtifactSubStatMultipleSelectChip","subStatKeys","setSubStatKeys","allSubstats","ArtifactFilterDisplay","locationDisplay","excludedDisplay","filterOption","filterOptionDispatch","rarity","slotKeys","levelLow","levelHigh","substats","location","excluded","locationCharacterSheet","CharacterSheet","BusinessCenter","faUserShield","nameWIthIcon","faBan","faChartLine","Grid","container","spacing","item","xs","md","flexDirection","SolidToggleButtonGroup","e","newVal","size","allArtifactRarities","ToggleButton","allSlotKeys","slotKey","artifactSlotIcon","ArtifactLevelSlider","showLevelText","setLow","setHigh","setBoth","Box","LocationDropdown","dropdownProps","title","selectedCharacterKey","DropdownButton","disabled","onClick","database","useContext","DatabaseContext","characterSheets","filterConfigs","characterFilterConfigs","Replay","CharacterMenuItemArray","_getCharKeys","sort","dark","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","l","h","useEffect","alignItems","bgcolor","val","clamp","pl","inputProps","textAlign","startAdornment","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","px","muiNames","React","indexOf","type","muiName"],"sourceRoot":""}