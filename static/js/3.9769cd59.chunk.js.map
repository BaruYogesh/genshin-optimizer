{"version":3,"sources":["Components/CustomFormControl.tsx","Components/FieldDisplay.tsx","../node_modules/react-bootstrap/esm/Tooltip.js","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/DropdownButton.js","Artifact/Component/SetEffectDisplay.tsx","Character/StatInput.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Components/StatDisplay.tsx","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","Character/CharacterDisplay/DamageOptionsAndCalculation.tsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"names":["CustomFormControl","value","onChange","className","disabled","float","placeholder","allowEmpty","max","min","useState","state","setState","sendChange","useCallback","undefined","parseFunc","parseFloat","parseInt","useEffect","toString","aria-label","type","e","target","onBlur","onKeyDown","key","FieldDisplay","field","index","useContext","buildContext","newBuild","equippedBuild","compareBuild","build","canShow","useMemo","fixedVal","fixed","fieldVal","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","toFixed","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","id","icon","faQuestionCircle","style","cursor","unit","Item","variant","_excluded","Tooltip","React","forwardRef","_ref","ref","bsPrefix","children","arrowProps","props","popper","show","_objectWithoutPropertiesLoose","useBootstrapPrefix","primaryPlacement","split","createElement","_extends","role","classNames","defaultProps","displayName","ConditionalSelector","conditional","conditionalValue","setConditional","name","stats","conditionalNum","conditionalStateKey","states","Object","values","text","evalIfFunc","maxStack","badge","Badge","Dropdown","Toggle","size","whiteSpace","Menu","onClick","entries","map","i","stateKey","condial","Fragment","Array","keys","v","stack","Button","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","fieldClassName","Conditional","resolve","conditionalStats","fields","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","conditionalValues","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","DocumentDisplay","sections","section","talentText","length","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","hasValidation","_ref$as","as","InputGroupWithExtras","Text","Radio","Checkbox","Append","Prepend","propTypes","PropTypes","any","href","string","func","title","node","isRequired","bool","menuAlign","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","DropdownButton","DropdownToggle","childBsPrefix","DropdownMenu","align","renderOnMount","SetEffectDisplay","setKey","setNumKey","sheet","usePromise","ArtifactSheet","get","setEffectText","setEffectDesc","setStats","setNumStats","setStatsFields","document","setEffectDocument","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Boolean","pointerEvents","faUndo","StatDisplayComponent","sheets","characterSheet","weaponSheet","character","statsDisplayKeys","cardbg","sectionKey","sectionValues","header","getFormulaTargetsDisplayHeading","characterEle","xs","md","xl","Body","statKey","JSON","stringify","DisplayStatDiff","label","val","oldVal","oldText","diffText","StatDisplay","isArray","Formula","invalid","getStatValueWithOverride","characterHP","characterDEF","characterATK","weaponATK","Stat","getStatUnit","fixedUnit","StatIcon","getStatName","labelVariant","hasOverride","context","createContext","useAccordionToggle","eventKey","contextEventKey","AccordionContext","onSelect","SelectableContext","AccordionToggle","accordionOnClick","AccordionCollapse","Provider","Collapse","in","Children","only","Accordion","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","controlledProps","finalClassName","infusionVals","uncoloredEleIcons","pyro","cryo","InfusionAuraDropdown","infusionAura","isMelee","ReactionToggle","reactionMode","charEleKey","includes","s","ToggleButtonGroup","ToggleButton","hydro","HitModeToggle","hitMode","m","CalculationDisplay","displayStatKeys","getDisplayStatKeys","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","reverse","printStat","subKey","expand","formulaField","fieldFixed","fieldUnit","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","DamageOptionsAndCalculation","Row","Col","rel","getStatNameRaw","getBaseStatValue","allElements","eleKey","immunityStatKey","elementImmunity","active","ListGroupItem","action","handleClick","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav"],"mappings":"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","file":"static/js/3.9769cd59.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\ntype props = {\r\n  value: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  className?: string\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  placeholder?: string,\r\n  allowEmpty?: boolean,\r\n  max?: string | number,\r\n  min?: string | number,\r\n}\r\nexport default function CustomFormControl({ value, onChange, className = \"\", disabled = false, float = false, placeholder, allowEmpty = false, max, min }: props) {\r\n  const [state, setState] = useState(\"\")\r\n  const sendChange = useCallback(\r\n    () => {\r\n      if (allowEmpty && state === \"\") return onChange(undefined)\r\n      if (state === \"\") return onChange(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state))\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setState(value?.toString() ?? \"\"), [value, setState]) // update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className={`hide-appearance ${className}`}\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={(e: any) => setState(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={(e: any) => e.key === \"Enter\" && sendChange()}\r\n    max={max}\r\n    min={min}\r\n  />\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { buildContext } from \"../Build/Build\";\r\nimport Character from \"../Character/Character\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\n\r\nexport default function FieldDisplay({ field, index, className = \"p-2\" }: { field: IFieldDisplay, index: number, className?: string }) {\r\n  const { newBuild, equippedBuild, compareBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild)\r\n  const canShow = useMemo(() => build ? field?.canShow?.(build) : false, [field, build])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", build)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      //compareAgainstEquipped\r\n      if (compareBuild && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareBuild, fixedVal, equippedBuild, field, build])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", build), [field, build])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", build), [field, build])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip id=\"field-formula\">{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, build])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", build), [field, build])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"placement\", \"className\", \"style\", \"children\", \"arrowProps\", \"popper\", \"show\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  placement: 'right'\n};\nvar Tooltip = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      placement = _ref.placement,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      arrowProps = _ref.arrowProps,\n      _ = _ref.popper,\n      _2 = _ref.show,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n\n  var _ref2 = (placement == null ? void 0 : placement.split('-')) || [],\n      primaryPlacement = _ref2[0];\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    style: style,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, \"bs-tooltip-\" + primaryPlacement)\n  }, props), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"arrow\"\n  }, arrowProps)), /*#__PURE__*/React.createElement(\"div\", {\n    className: bsPrefix + \"-inner\"\n  }, children));\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled?: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial]: any, i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n          <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setConditional([0])}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n            <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n              {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n            </Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n        <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { useCallback, useContext, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\r\nimport IConditional from \"../Types/IConditional\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  characterDispatch: (any) => void,//TODO: characterDispatch type\r\n  fieldClassName?: string\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, characterDispatch, fieldClassName }: ConditionalDisplayProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    if (!stats) return\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else if (conditional.keys)\r\n      layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats, characterDispatch])\r\n\r\n  if (!canShow || !stats) return null\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} field={field} className={fieldClassName} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","import { useContext } from \"react\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport { DocumentSection } from \"../Types/character\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport ConditionalDisplay from \"./ConditionalDisplay\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\n\r\ntype SkillDisplayCardProps = {\r\n  sections: DocumentSection[],\r\n  characterDispatch: (any) => void,\r\n}\r\nexport default function DocumentDisplay({ sections, characterDispatch }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  return <div className=\"w-100\">{sections?.map((section, i) => {\r\n    if (!section.canShow!(build)) return null\r\n    const talentText = evalIfFunc(section.text, build)\r\n    const fields = section.fields ?? []\r\n    return <div className=\"my-2\" key={\"section\" + i}>\r\n      <div>\r\n        <div className=\"mb-2\">{talentText}</div>\r\n        {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n          {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} field={field} />)}\r\n        </ListGroup>}\r\n      </div>\r\n      {!!section.conditional && <ConditionalDisplay conditional={section.conditional} characterDispatch={characterDispatch} />}\r\n    </div>\r\n  })}</div>\r\n}\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"bsPrefix\", \"size\", \"hasValidation\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      hasValidation = _ref.hasValidation,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, hasValidation && 'has-validation')\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\"\r\nimport FieldDisplay from \"../../Components/FieldDisplay\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n  characterDispatch: (arg0: any) => void,\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, characterDispatch }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectDesc(setNumKey)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const document = sheet.setEffectDocument(setNumKey)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} field={field} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {document ? <DocumentDisplay sections={document} characterDispatch={characterDispatch} /> : null}\r\n  </>\r\n}\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\ntype StatInputInput = {\r\n  name: Displayable,\r\n  prependEle?: Displayable,\r\n  value: number,\r\n  placeholder: string,\r\n  defaultValue: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n  className?: any,\r\n}\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent = false, disabled = false, ...restProps }: StatInputInput) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip id=\"reset-tooltip\">Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICachedCharacter } from \"../../Types/character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport { ArtifactSetKey } from \"../../Types/consts\"\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../CharacterUtil\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  character: ICachedCharacter\r\n  statsDisplayKeys: any,\r\n  cardbg?: string\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ sheets, sheets: { characterSheet, weaponSheet }, character, equippedBuild, newBuild, statsDisplayKeys, cardbg = \"darkcontent\" }: StatDisplayComponentProps) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([sectionKey, sectionValues]: any) => {\r\n    const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build?.characterEle)\r\n    return <Col key={sectionKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text={\"lightfont\" as any} className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport StatIcon from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\ntype StatDisplayProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ characterSheet, weaponSheet, character, equippedBuild, newBuild, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined, [statKey])\r\n\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\" //can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey) ?? invalid\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (build) {\r\n          if (statKey === \"finalHP\")\r\n            oldVal = build.characterHP\r\n          else if (statKey === \"finalDEF\")\r\n            oldVal = build.characterDEF\r\n          else if (statKey === \"finalATK\")\r\n            oldVal = build.characterATK + build.weaponATK\r\n        }\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, characterSheet, weaponSheet, equippedBuild, newBuild, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label: label as any }} />\r\n}","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"children\", \"eventKey\", \"onClick\"];\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"eventKey\"];\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\";\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport StatIcon, { uncoloredEleIcons } from \"../../Components/StatIcon\";\r\nimport Formula from \"../../Formula\";\r\nimport Stat, { FormulaDisplay } from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allElements, ArtifactSetKey } from \"../../Types/consts\";\r\nimport { IFieldDisplay } from \"../../Types/IFieldDisplay\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport { usePromise } from \"../../Util/ReactUtil\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport type { characterReducerAction } from \"../CharacterDisplayCard\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport { getFormulaTargetsDisplayHeading } from \"../CharacterUtil\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No External Infusion</span>,\r\n  \"pyro\": <span >{uncoloredEleIcons.pyro} Pyro Infusion</span>,\r\n  \"cryo\": <span >{uncoloredEleIcons.cryo} Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  className?: string\r\n  disabled?: boolean\r\n}\r\nexport function InfusionAuraDropdown({ characterSheet, character: { infusionAura = \"\" }, characterDispatch, className, disabled = false }: InfusionAuraDropdownProps) {\r\n  if (!characterSheet.isMelee()) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"} disabled={disabled}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\ntype ReactionToggleProps = {\r\n  character: ICachedCharacter,\r\n  build: ICalculatedStats,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  className: string\r\n  disabled?: boolean\r\n}\r\nexport function ReactionToggle({ character: { reactionMode = null, infusionAura }, build, characterDispatch, className, disabled = false }: ReactionToggleProps) {\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  const v = s => s ? \"success\" : \"secondary\"\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={v(!reactionMode)} disabled={disabled}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={v(reactionMode === \"pyro_vaporize\")} disabled={disabled}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) {StatIcon.hydro}+{StatIcon.pyro}</span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={v(reactionMode === \"pyro_melt\")} disabled={disabled}>\r\n      <span className=\"text-melt\">Melt(Pyro) {StatIcon.cryo}+{StatIcon.pyro}</span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={v(reactionMode === \"hydro_vaporize\")} disabled={disabled}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) {StatIcon.pyro}+{StatIcon.hydro}</span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={v(reactionMode === \"cryo_melt\")} disabled={disabled}>\r\n      <span className=\"text-melt\">Melt(Cryo) {StatIcon.pyro}+{StatIcon.cryo}</span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className, disabled = false }) {\r\n  const v = s => s ? \"success\" : \"secondary\"\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className} >\r\n    <ToggleButton value=\"avgHit\" variant={v(hitMode === \"avgHit\")} disabled={disabled} >Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={v(hitMode === \"hit\")} disabled={disabled} >Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={v(hitMode === \"critHit\")} disabled={disabled} >Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ sheets, build }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  build: ICalculatedStats\r\n}) {\r\n  const displayStatKeys = useMemo(() => build && Character.getDisplayStatKeys(build, sheets), [build, sheets])\r\n  if (!build) return null\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([sectionKey, fields]: [string, any]) => {\r\n      const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build.characterEle)\r\n      return <Card bg=\"darkcontent\" text={\"lightfont\" as any} key={sectionKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              if (Array.isArray(field))\r\n                return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} fieldIndex={fieldIndex} />\r\n              else if (typeof field === \"string\") {//simple statKey field\r\n                const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              return null\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\nfunction FormulaCalculationField({ fieldKeys, build, fieldIndex }: { fieldKeys: string[], build: ICalculatedStats, fieldIndex: number, }) {\r\n  const formula = usePromise(Formula.get(fieldKeys), [fieldKeys])\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const fieldFixed = Character.getTalentFieldValue(formulaField, \"fixed\", build) ?? 0\r\n  const fieldUnit = Character.getTalentFieldValue(formulaField, \"unit\", build) ?? \"\"\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.(fieldFixed)\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n      <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}{fieldUnit}</span>\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n      <Card.Body className=\"p-2\">\r\n        <div className=\"mb-n2\">\r\n          <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n          {subFormulaKeys.map(subKey =>\r\n            <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></p>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\ntype DamageOptionsAndCalculationProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  className: string\r\n}\r\nexport default function DamageOptionsAndCalculation({ sheets, sheets: { characterSheet, weaponSheet }, character, character: { hitMode }, characterDispatch, className }: DamageOptionsAndCalculationProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle character={character} build={build} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle callback={undefined} {...{ as: Button }} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value })}\r\n                    />\r\n                  </Col>\r\n                  {[\"physical\", ...allElements].map(eleKey => {\r\n                    let statKey = `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay sheets={sheets} build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"onClick\"];\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // eslint-disable-next-line no-nested-ternary\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;"],"sourceRoot":""}