{"version":3,"sources":["Components/SqBadge.tsx","Character/Character.ts","ReactHooks/useCharacterReducer.tsx","Components/FieldDisplay.tsx","Components/CustomNumberInput.tsx","Components/BootstrapTooltip.tsx","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","StatDependency.ts","Weapon/WeaponStatsCard.tsx","Weapon/WeaponDisplayCard.tsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/material/ListItem/listItemClasses.js","../node_modules/@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses.js","../node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@mui/material/ListItem/ListItem.js","../node_modules/@mui/icons-material/esm/SwapHoriz.js"],"names":["SqBadge","styled","name","slot","theme","color","display","padding","fontSize","fontWeight","lineHeight","textAlign","whiteSpace","verticalAlign","borderRadius","backgroundColor","palette","main","contrastText","Character","this","Error","getElementalName","elementalKey","ElementalData","getLevelString","character","level","ascensionMaxLevel","ascension","getTalentFieldValue","field","key","stats","defVal","evalIfFunc","hasBonusStats","statKey","bonusStats","getStatValueWithBonus","overrideStatKeys","includes","characterBaseStats","calculateBuild","database","characterSheet","weaponSheet","artifactSheets","mainStatAssumptionLevel","artifacts","Object","fromEntries","entries","equippedArtifacts","map","artid","_getArt","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","values","forEach","art","mainStatKey","mainStatValue","rarity","Math","max","min","substats","substat","value","mergeStats","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","length","condStats","resolve","val","id","dependencies","GetDependencies","modifiers","PreprocessFormulas","preprocessedStats","formula","characterKey","elementKey","hitMode","infusionAura","reactionMode","talent","constellation","equippedWeapon","weapon","_getWeapon","defaultInitialWeapon","weaponTypeKey","overrideStats","filter","s","additionalStats","characterLevel","characterHP","getBase","characterDEF","characterATK","characterEle","weaponType","tlvl","refineIndex","refinement","specialStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","getTalentStatsAll","weaponATK","getMainStatValue","weaponSubKey","getSubStatKey","getSubStatValue","weaponCond","otherCond","keys","canShow","getDisplayStatKeys","eleKey","basicKeys","isAutoElemental","push","transReactions","ElementToReactionKeys","charFormulas","talentSheet","getTalent","addFormula","fields","parseSection","section","sheets","talentKey","sections","formKey","document","num","artifactSheet","setEffects","setNum","useCharacterReducer","useContext","DatabaseContext","useCallback","action","type","setWeaponLocation","_getChar","updateChar","FieldDisplay","buildContext","newBuild","equippedBuild","compareBuild","build","useMemo","fixedVal","fixed","fieldVal","retVal","fieldEquippedVal","toFixed","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","title","component","sx","cursor","ml","icon","faQuestionCircle","unit","justifyContent","FieldDisplayList","List","shape","overflow","margin","contentDark","contentDarker","StyledInputBase","InputBase","primary","transition","dark","CustomNumberInputButtonGroupWrapper","shouldForwardProp","prop","border","width","height","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","CustomNumberInput","onChange","disabled","float","props","useState","number","setNumber","focused","setFocus","parseFunc","parseFloat","onBlur","onFocus","useEffect","onInputChange","e","target","onKeyDOwn","aria-label","onKeyDown","BootstrapTooltip","className","arrow","classes","popper","tooltipClasses","common","black","tooltip","ConditionalSelector","setConditional","conditionalNum","conditionalStateKey","state","states","text","maxStack","badge","DropdownButton","size","MenuItem","onClick","selected","Divider","flatMap","i","stateKey","condial","Array","v","stack","Button","startIcon","CheckBox","CheckBoxOutlineBlank","ConditionalDisplay","characterDispatch","undefined","conditionalStats","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","deletePropPath","objClearEmpties","CardDark","CardContent","m","DocumentDisplay","talentText","Box","pb","mb","GetFormulaDependency","dependency","Set","Proxy","get","receiver","add","toString","formulaKeyDependency","freeze","Formulas","baseStat","StatData","found","numStages","_","InsertDependencies","dep","has","k","path","Formula","getCurrent","getStage","WeaponStatsCard","statsVals","Typography","WeaponDisplayCard","propWeaponId","weaponId","charData","footer","onClose","useForceUpdate","databaseToken","onDatabaseUpdate","buildContextObj","lock","location","usePromise","WeaponSheet","followWeapon","weaponDispatch","newWeapon","updateWeapon","setLevel","clamp","findIndex","ascenML","setAscension","lowerAscension","CharacterSheet","weaponFilter","ws","initialWeaponFilter","equipOnChar","charKey","cs","showModal","setshowModal","img","imgAwaken","CardLight","py","Grid","container","spacing","item","flexGrow","WeaponSelectionModal","show","onHide","onSelect","ButtonGroup","bgcolor","t","contentLight","startAdornment","inputProps","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","Lock","LockOpen","CloseButton","localDatabase","SwapBtn","onChangeId","substatKey","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","passiveName","weaponBonusStats","gap","xs","md","lg","maxWidth","flexShrink","minWidth","src","description","variant","process","stars","gutterBottom","passiveDescription","Provider","setCompareBuild","atk","CharacterDropdownButton","noUnselect","inventory","large","setShow","close","clickHandler","weaponSheets","getAll","weaponIdList","weapons","wKey","dbWeapon","SwapHoriz","ModalWrapper","open","ImgIcon","Assets","weaponTypes","sm","WeaponCard","createSvgIcon","_jsx","d","getListItemUtilityClass","generateUtilityClass","listItemClasses","generateUtilityClasses","getListItemSecondaryActionClassesUtilityClass","_excluded","ListItemSecondaryActionRoot","overridesResolver","styles","ownerState","root","disableGutters","_extends","position","right","top","transform","ListItemSecondaryAction","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","context","ListContext","slots","composeClasses","useUtilityClasses","clsx","muiName","_excluded2","ListItemRoot","dense","alignItems","alignItemsFlexStart","divider","gutters","disablePadding","button","hasSecondaryAction","secondaryAction","textDecoration","boxSizing","paddingTop","paddingBottom","paddingLeft","paddingRight","listItemButtonClasses","focusVisible","focus","alpha","selectedOpacity","focusOpacity","opacity","disabledOpacity","borderBottom","backgroundClip","transitions","create","duration","shortest","hover","hoverOpacity","ListItemContainer","ListItem","autoFocus","childrenProp","children","componentProp","components","componentsProps","ContainerComponent","ContainerProps","ContainerClassName","focusVisibleClassName","childContext","listItemRef","useEnhancedEffect","current","toArray","isMuiElement","handleRef","useForkRef","Root","rootProps","componentProps","Component","ButtonBase","_jsxs","isHostComponent","pop"],"mappings":"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","file":"static/js/21.dd93e9ba.chunk.js","sourcesContent":["import { styled } from \"@mui/material\";\r\n\r\nconst SqBadge = styled(\"span\", {\r\n  name: 'SqBadge',\r\n  slot: 'Root',\r\n})(({ theme, color = \"primary\" }) => ({\r\n  display: \"inline-block\",\r\n  padding: \".25em .4em\",\r\n  fontSize: \"75%\",\r\n  fontWeight: 700,\r\n  lineHeight: 1,\r\n  textAlign: \"center\",\r\n  whiteSpace: \"nowrap\",\r\n  verticalAlign: \"baseline\",\r\n  borderRadius: \".25em\",\r\n  backgroundColor: theme.palette[color]?.main,\r\n  color: theme.palette[color]?.contrastText\r\n}))\r\nexport default SqBadge","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { ArtifactSetKey, ElementKey, SlotKey } from \"../Types/consts\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { characterBaseStats, mergeStats, overrideStatKeys } from \"../Util/StatUtil\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport { defaultInitialWeapon } from \"../Weapon/WeaponUtil\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey: ElementKey | \"physical\"): string =>\r\n    ElementalData[elementalKey].name\r\n  static getLevelString = (character: ICachedCharacter): string =>\r\n    `${character.level}/${ascensionMaxLevel[character.ascension]}`\r\n\r\n  static getTalentFieldValue = (field: IFieldDisplay, key: keyof IFieldDisplay, stats = {}, defVal = \"\"): any => {\r\n    if (!field[key]) return defVal\r\n    return evalIfFunc(field[key] as any, stats!)\r\n  }\r\n\r\n  static hasBonusStats = (character: ICachedCharacter, statKey): boolean => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasBonusStats(character, \"hp\") || Character.hasBonusStats(character, \"hp_\") || Character.hasBonusStats(character, \"characterHP\")\r\n    if (statKey === \"finalDEF\")\r\n      return Character.hasBonusStats(character, \"def\") || Character.hasBonusStats(character, \"def_\") || Character.hasBonusStats(character, \"characterDEF\")\r\n    if (statKey === \"finalATK\")\r\n      return Character.hasBonusStats(character, \"atk\") || Character.hasBonusStats(character, \"atk_\") || Character.hasBonusStats(character, \"characterATK\")\r\n    return character?.bonusStats ? (statKey in character.bonusStats) : false;\r\n  }\r\n\r\n  static getStatValueWithBonus = (character: ICachedCharacter, statKey: string) => {\r\n    if (overrideStatKeys.includes(statKey))\r\n      return character.bonusStats?.[statKey] ?? characterBaseStats(character)[statKey] ?? 0\r\n    else\r\n      return character.bonusStats?.[statKey] ?? 0\r\n  }\r\n\r\n  static calculateBuild = (character: ICachedCharacter, database: ArtCharDatabase, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, mainStatAssumptionLevel = 0): ICalculatedStats => {\r\n    const artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, database._getArt(artid)]))\r\n    const initialStats = Character.createInitialStats(character, database, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats: ICalculatedStats, artifacts: Dict<SlotKey, ICachedArtifact>, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>): ICalculatedStats => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    const artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, initialStats, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(stats.mainStatAssumptionLevel, art.rarity * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    mergeStats(stats, artifactSetEffectsStats)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      mergeStats(stats, condStats)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats, stats?.modifiers)\r\n    const { initialStats: preprocessedStats, formula } = PreprocessFormulas(dependencies, stats)\r\n    formula(preprocessedStats)\r\n    return { ...stats, ...preprocessedStats }\r\n  }\r\n\r\n  static createInitialStats = (character: ICachedCharacter, database: ArtCharDatabase, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    const { key: characterKey, bonusStats = {}, elementKey, level, ascension, hitMode, infusionAura, reactionMode, talent, constellation, equippedArtifacts, conditionalValues = {}, equippedWeapon } = character\r\n    const weapon = database._getWeapon(equippedWeapon) ?? defaultInitialWeapon(characterSheet.weaponTypeKey) // need to ensure all characters have a weapon\r\n\r\n    const overrideStats = Object.fromEntries(Object.entries(bonusStats).filter(([s]) => overrideStatKeys.includes(s)))\r\n    const additionalStats = Object.fromEntries(Object.entries(bonusStats).filter(([s]) => !overrideStatKeys.includes(s)))\r\n    //generate the initalStats obj with data from Character \r\n    let initialStats = characterBaseStats(character)\r\n    initialStats.characterKey = characterKey\r\n    initialStats.characterLevel = level\r\n    initialStats.characterHP = characterSheet.getBase(\"characterHP\", level, ascension)\r\n    initialStats.characterDEF = characterSheet.getBase(\"characterDEF\", level, ascension)\r\n    initialStats.characterATK = characterSheet.getBase(\"characterATK\", level, ascension)\r\n    initialStats.characterEle = characterSheet.elementKey ?? elementKey ?? \"anemo\";\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = Object.fromEntries(Object.entries(talent ?? {}).map(([key, value]) => [key, value - 1])) as any;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = { key: weapon.key, refineIndex: weapon.refinement - 1 }\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n    initialStats = { ...initialStats, ...overrideStats }\r\n    mergeStats(initialStats, additionalStats)\r\n    //add specialized stat\r\n    const specialStatKey = characterSheet.getSpecializedStat(ascension)\r\n    if (specialStatKey) {\r\n      const specializedStatVal = characterSheet.getSpecializedStatVal(ascension)\r\n      mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n    }\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats, initialStats.characterEle).forEach(s => mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponATK = weaponSheet.getMainStatValue(weapon.level, weapon.ascension)\r\n    initialStats.weaponATK = weaponATK\r\n    const weaponSubKey = weaponSheet.getSubStatKey()\r\n    if (weaponSubKey) mergeStats(initialStats, { [weaponSubKey]: weaponSheet.getSubStatValue(weapon.level, weapon.ascension) })\r\n    mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      if (keys[0] === \"character\" && keys[3] === \"talents\" && keys[4] !== elementKey) return //fix for Traveler, make sure conditionals match element.\r\n      if (!Conditional.canShow(conditional, initialStats)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n\r\n  static getDisplayStatKeys = (stats: ICalculatedStats, { characterSheet, weaponSheet, artifactSheets }: { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet> }) => {\r\n    const eleKey = stats.characterEle\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = characterSheet.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = characterSheet.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    const charFormulas = {}\r\n    const talentSheet = characterSheet.getTalent(eleKey)\r\n    const addFormula = (fields, key) => fields.forEach(field => {\r\n      if (!field.formula || !field?.canShow?.(stats)) return\r\n      if (!charFormulas[key]) charFormulas[key] = []\r\n      charFormulas[key].push((field.formula as any).keys)\r\n    })\r\n    const parseSection = (section, key) => {\r\n      //conditional\r\n      if (section.conditional && Conditional.canShow(section.conditional, stats)) {\r\n        const { fields }: { fields?: Array<IFieldDisplay> } = Conditional.resolve(section.conditional, stats, null)\r\n        fields && addFormula(fields, key)\r\n      }\r\n      //fields\r\n      if (section.fields) addFormula(section.fields, key)\r\n    }\r\n    talentSheet && Object.entries(talentSheet.sheets).forEach(([talentKey, { sections }]) => {\r\n      if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n      sections.forEach(section => parseSection(section, `talentKey_${talentKey}`))\r\n    })\r\n\r\n    const formKey = `weapon_${stats.weapon.key}`\r\n    weaponSheet.document && weaponSheet.document.map(section => parseSection(section, formKey))\r\n\r\n    stats.setToSlots && Object.entries(stats.setToSlots).map(([setKey, slots]) => [setKey, slots.length]).forEach(([setKey, num]) => {\r\n      const artifactSheet = artifactSheets[setKey] as ArtifactSheet\r\n      if (!artifactSheet) return\r\n      Object.entries(artifactSheet.setEffects).forEach(([setNum, { document }]) => {\r\n        if (num < parseInt(setNum)) return\r\n        document && document.map(section => parseSection(section, `artifact_${setKey}_${setNum}`))\r\n      })\r\n    })\r\n\r\n    return { basicKeys, ...charFormulas, transReactions }\r\n  }\r\n}","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { characterBaseStats, overrideStatKeys } from \"../Util/StatUtil\";\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | characterReducerResetStatsAction | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey) {\r\n  const database = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"editStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey, value } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n\r\n        if (bonusStats[statKey] === value) return\r\n        if (overrideStatKeys.includes(statKey)) {\r\n          if ((characterBaseStats(character)[statKey] ?? 0) === value)\r\n            delete bonusStats[statKey]\r\n          else\r\n            bonusStats[statKey] = value\r\n        } else {\r\n          if (value)\r\n            bonusStats[statKey] = value\r\n          else\r\n            delete bonusStats[statKey]\r\n        }\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\r\n  }, [characterKey, database])\r\n\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, List, ListItem, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { buildContext } from \"../Build/Build\";\r\nimport Character from \"../Character/Character\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\nimport ColorText from \"./ColoredText\";\r\n\r\nexport default function FieldDisplay({ field }: { field: IFieldDisplay }) {\r\n  const { newBuild, equippedBuild, compareBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild)\r\n  const canShow = useMemo(() => build ? field?.canShow?.(build) : false, [field, build])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", build)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      //compareAgainstEquipped\r\n      if (compareBuild && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</ColorText> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareBuild, fixedVal, equippedBuild, field, build])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", build), [field, build])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", build), [field, build])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build)\r\n    return fieldFormulaText ? <BootstrapTooltip placement=\"top\" title={<Typography>{fieldFormulaText}</Typography>}>\r\n      <Box component=\"span\" sx={{ cursor: \"help\", ml: 1 }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n    </BootstrapTooltip> : null\r\n  }, [field, build])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", build), [field, build])\r\n\r\n  if (!canShow) return null\r\n  return <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}  >\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <Typography color={`${fieldVariant}.main`}>{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</Typography>\r\n  </ListItem>\r\n}\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));","import { InputBase, InputProps, styled } from '@mui/material'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\ntype props = Omit<InputProps, \"onChange\"> & {\r\n  value?: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  allowEmpty?: boolean,\r\n}\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  transition: \"all 0.5s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-focused\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}))\r\n\r\n// wrap the Input with this when using the input in a buttongroup\r\nexport const CustomNumberInputButtonGroupWrapper = styled(\"button\", {\r\n  shouldForwardProp: (prop) => ![\"fullWidth\", \"disableRipple\", \"disableFocusRipple\", \"disableElevation\"].includes(prop as string)\r\n})(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  padding: 0,\r\n  overflow: \"hidden\",\r\n  border: \"none\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  \"& div\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"&.MuiButtonGroup-grouped:not(:last-of-type)\": {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n  },\r\n  \"&.MuiButtonGroup-grouped:not(:first-of-type)\": {\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n  },\r\n}))\r\n\r\nexport default function CustomNumberInput({ value = 0, onChange, disabled = false, float = false, ...props }: props) {\r\n  const [number, setNumber] = useState(value)\r\n  const [focused, setFocus] = useState(false)\r\n  const parseFunc = useMemo(() => float ? parseFloat : parseInt, [float],)\r\n  const onBlur = useCallback(\r\n    () => {\r\n      onChange(number)\r\n      setFocus(false)\r\n    },\r\n    [onChange, number, setFocus],\r\n  )\r\n  const onFocus = useCallback(\r\n    () => {\r\n      setFocus(true)\r\n    },\r\n    [setFocus],\r\n  )\r\n  useEffect(() => setNumber(value), [value, setNumber]) // update value on value change\r\n  const onInputChange = useCallback(e => setNumber(parseFunc(e.target.value) || 0), [setNumber, parseFunc],)\r\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && onBlur(), [onBlur],)\r\n  return <StyledInputBase\r\n    value={(focused && !number) ? \"\" : number}\r\n    aria-label=\"custom-input\"\r\n    type=\"number\"\r\n    onChange={onInputChange}\r\n    onBlur={onBlur}\r\n    onFocus={onFocus}\r\n    disabled={disabled}\r\n    onKeyDown={onKeyDOwn}\r\n    {...props}\r\n  />\r\n}","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n}));\r\nexport default BootstrapTooltip","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, Divider, MenuItem } from '@mui/material';\r\nimport React from 'react';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled = false, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled?: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</SqBadge>\r\n    return <DropdownButton size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n      <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n        <span>Not Active</span>\r\n      </MenuItem>\r\n      <Divider />\r\n      {Object.entries(conditional.states).flatMap(([stateKey, condial]: any, i) =>\r\n        [...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n          <MenuItem key={stateKey + i} onClick={() => setConditional([stack, stateKey])} selected={conditionalStateKey === stateKey && conditionalNum === stack} disabled={conditionalStateKey === stateKey && conditionalNum === stack} >\r\n            {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n          </MenuItem>)\r\n      )}\r\n    </DropdownButton>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</SqBadge>\r\n      return <DropdownButton size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n        <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n          <span>Not Active</span>\r\n        </MenuItem>\r\n        <Divider />\r\n        {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <MenuItem key={stack} onClick={() => setConditional([stack])} selected={conditionalNum === stack} disabled={conditionalNum === stack}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </MenuItem>)}\r\n      </DropdownButton>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"small\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled} startIcon={conditionalNum ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n        {name}\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { CardContent } from \"@mui/material\"\r\nimport { useCallback, useContext, useMemo } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport IConditional from \"../Types/IConditional\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  characterKey: CharacterKey\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, characterKey }: ConditionalDisplayProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    if (!stats) return\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else if (conditional.keys)\r\n      layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats, characterDispatch])\r\n\r\n  if (!canShow || !stats) return null\r\n  return <CardDark>\r\n    <CardContent>\r\n      <ConditionalSelector\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </CardContent>\r\n    <FieldDisplayList sx={{ m: 0 }}>\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Box } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport { DocumentSection } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport ConditionalDisplay from \"./ConditionalDisplay\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype SkillDisplayCardProps = {\r\n  sections: DocumentSection[],\r\n  characterKey: CharacterKey,\r\n}\r\nexport default function DocumentDisplay({ sections, characterKey }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  return <div>{sections?.map((section, i) => {\r\n    if (!section.canShow!(build)) return null\r\n    const talentText = evalIfFunc(section.text, build)\r\n    const fields = section.fields ?? []\r\n    return <Box key={\"section\" + i} sx={{\r\n      pb: -1,\r\n      \"& > *\": {\r\n        mb: 1\r\n      }\r\n    }}>\r\n      <div>{talentText}</div>\r\n      {fields.length > 0 && <FieldDisplayList>\r\n        {fields?.map?.((field, i) => <FieldDisplay key={i} field={field} />)}\r\n      </FieldDisplayList>}\r\n      {!!section.conditional && <ConditionalDisplay conditional={section.conditional} characterKey={characterKey} />}\r\n    </Box>\r\n  })}</div>\r\n}\r\n","import Formula from \"./Formula\"\r\nimport { Formulas, getStage, numStages, StatData } from \"./StatData\"\r\nimport { IBaseStat } from \"./Types/character\"\r\nimport { Modifier } from \"./Types/stats\"\r\n\r\n// Generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula: (s) => number) {\r\n  const dependency: Set<string> = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop.toString()) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.entries(Formulas).map(([key, value]) => [key, GetFormulaDependency(value)])\r\n)) as Dict<string, string[]>\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(baseStat: IBaseStat, modifiers: Modifier = {}, keys = Object.keys(StatData)): Dependencies {\r\n  const found = new Set<string>()\r\n  const dependencies = [...Array(numStages)].map(_ => new Set<string>())\r\n  keys.forEach(key => InsertDependencies(baseStat, key, modifiers, dependencies, found))\r\n  return dependencies.flatMap(dep => [...dep])\r\n}\r\nfunction InsertDependencies(baseStat: IBaseStat, key: string, modifiers: Modifier, dependencies: Set<string>[], found: Set<string>) {\r\n  if (found.has(key)) return\r\n  found.add(key)\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(baseStat, k, modifiers, dependencies, found));\r\n  (modifiers[key] ?? []).forEach(path => Formula.getCurrent(path, baseStat)[1].forEach(k =>\r\n    InsertDependencies(baseStat, k, modifiers, dependencies, found)))\r\n  dependencies[getStage(key)].add(key)\r\n}\r\n\r\ntype Dependencies = string[]\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n","import { CardContent, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../Components/FieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nexport default function WeaponStatsCard({ title, statsVals = {}, stats }: { title: Displayable, statsVals?: object, stats: ICalculatedStats }) {\r\n  if ((Object.keys(statsVals) as string[]).filter(s => s !== \"modifiers\").length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <CardDark sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Typography>{title}</Typography>\r\n    </CardContent>\r\n    <FieldDisplayList>\r\n      {fields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ColorText from \"../Components/ColoredText\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/LevelData\"\r\nimport { database as localDatabase, DatabaseContext } from \"../Database/Database\"\r\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\nimport WeaponStatsCard from \"./WeaponStatsCard\"\r\n\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  charData?: {\r\n    character: ICachedCharacter,\r\n    characterSheet: CharacterSheet,\r\n    equippedBuild?: ICalculatedStats\r\n    newBuild?: ICalculatedStats\r\n    characterDispatch: (any) => void\r\n  }\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  charData,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  const buildContextObj = useContext(buildContext)\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(propWeaponId!)!,\r\n    [propWeaponId, databaseToken, database])\r\n  const { key, level, refinement, ascension, lock } = weapon\r\n  const { location = \"\", id } = weapon as Partial<ICachedWeapon>\r\n  const weaponSheet: WeaponSheet | undefined = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  useEffect(() =>\r\n    propWeaponId ? database.followWeapon(propWeaponId, onDatabaseUpdate) : undefined,\r\n    [propWeaponId, onDatabaseUpdate, database])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const build = { ...(charData ? (charData.newBuild ?? charData.equippedBuild) : { weapon: { refineIndex: refinement - 1, level, ascension } }) } as any\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container spacing={1}>\r\n            <Grid item >\r\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n              <ButtonGroup>\r\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n                <DropdownButton title={`Refinement ${refinement}`}>\r\n                  <MenuItem>Select Weapon Refinement</MenuItem>\r\n                  <Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </MenuItem>)}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item >\r\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n                <CustomNumberInputButtonGroupWrapper >\r\n                  <CustomNumberInput onChange={setLevel} value={level}\r\n                    startAdornment=\"Lvl. \"\r\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                  />\r\n                </CustomNumberInputButtonGroupWrapper>\r\n                <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n                <DropdownButton title={\"Select Level\"} >\r\n                  {milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    const selected = lv === level && as === ascension\r\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                  })}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n                {lock ? \"Locked\" : \"Unlocked\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!!onClose && <Grid item  >\r\n          <CloseButton onClick={onClose} />\r\n        </Grid>}\r\n        {!!charData && database === localDatabase && <Grid item >\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, charData.character.key)} />\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      {(() => {\r\n        if (!weaponSheet) return null\r\n        const substatKey = weaponSheet.getSubStatKey()\r\n        const weaponDisplayMainVal = weaponSheet.getMainStatValue(level, ascension)\r\n        const weaponDisplaySubVal = weaponSheet.getSubStatValue(level, ascension)\r\n        const weaponPassiveName = weaponSheet.passiveName\r\n        const weaponBonusStats = weaponSheet.stats(build)\r\n        const sections = weaponSheet.document\r\n        return <Box display=\"flex\" gap={{ xs: 1, md: 1.5, lg: 2 }} >\r\n          <Box sx={{ maxWidth: 256 }} flexShrink={1} minWidth=\"25%\">\r\n            <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            <Typography><small>{weaponSheet.description}</small></Typography>\r\n          </Box>\r\n          <Box sx={{ mb: -1 }} flexGrow={1} >\r\n            <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {WeaponSheet.getLevelString(weapon)} {weaponPassiveName && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\r\n            <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n            <Typography variant=\"subtitle1\">{weaponPassiveName}</Typography>\r\n            <Typography gutterBottom>{weaponPassiveName && weaponSheet.passiveDescription(build)}</Typography>\r\n            {build && <buildContext.Provider value={charData ? buildContextObj : { equippedBuild: build, newBuild: undefined, compareBuild: false, setCompareBuild: undefined }}>\r\n              <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: substatKey ? weaponDisplaySubVal : undefined }} stats={build} />\r\n              <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            </buildContext.Provider>}\r\n            {charData && sections ? (() => {\r\n              const { equippedBuild, newBuild } = charData\r\n              const characterKey = (newBuild ? newBuild : equippedBuild)?.characterKey as CharacterKey | undefined\r\n              return !!characterKey && < DocumentDisplay  {...{ sections, equippedBuild, newBuild, characterKey }} />\r\n            })() : null}\r\n          </Box>\r\n        </Box>\r\n      })()}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getListItemUtilityClass(slot) {\n  return generateUtilityClass('MuiListItem', slot);\n}\nconst listItemClasses = generateUtilityClasses('MuiListItem', ['root', 'container', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'padding', 'button', 'secondaryAction', 'selected']);\nexport default listItemClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getListItemSecondaryActionClassesUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemSecondaryAction', slot);\n}\nconst listItemSecondaryActionClasses = generateUtilityClasses('MuiListItemSecondaryAction', ['root', 'disableGutters']);\nexport default listItemSecondaryActionClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport { getListItemSecondaryActionClassesUtilityClass } from './listItemSecondaryActionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disableGutters,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getListItemSecondaryActionClassesUtilityClass, classes);\n};\n\nconst ListItemSecondaryActionRoot = styled('div', {\n  name: 'MuiListItemSecondaryAction',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  right: 16,\n  top: '50%',\n  transform: 'translateY(-50%)'\n}, ownerState.disableGutters && {\n  right: 0\n}));\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nconst ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemSecondaryAction'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    disableGutters: context.disableGutters\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemSecondaryActionRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default ListItemSecondaryAction;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"],\n      _excluded2 = [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"disablePadding\", \"divider\", \"focusVisibleClassName\", \"secondaryAction\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/core';\nimport { chainPropTypes, elementTypeAcceptingRef } from '@mui/utils';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemClasses, { getListItemUtilityClass } from './listItemClasses';\nimport { listItemButtonClasses } from '../ListItemButton';\nimport ListItemSecondaryAction from '../ListItemSecondaryAction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters, !ownerState.disablePadding && styles.padding, ownerState.button && styles.button, ownerState.hasSecondaryAction && styles.secondaryAction];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    button,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', !disablePadding && 'padding', divider && 'divider', disabled && 'disabled', button && 'button', alignItems === 'flex-start' && 'alignItemsFlexStart', hasSecondaryAction && 'secondaryAction', selected && 'selected'],\n    container: ['container']\n  };\n  return composeClasses(slots, getListItemUtilityClass, classes);\n};\n\nexport const ListItemRoot = styled('div', {\n  name: 'MuiListItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  width: '100%',\n  boxSizing: 'border-box',\n  textAlign: 'left'\n}, !ownerState.disablePadding && _extends({\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, !!ownerState.secondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}), !!ownerState.secondaryAction && {\n  [`& > .${listItemButtonClasses.root}`]: {\n    paddingRight: 48\n  }\n}, {\n  [`&.${listItemClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${listItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity\n  }\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, ownerState.divider && {\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.button && {\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemClasses.selected}:hover`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  }\n}, ownerState.hasSecondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}));\nconst ListItemContainer = styled('li', {\n  name: 'MuiListItem',\n  slot: 'Container',\n  overridesResolver: (props, styles) => styles.container\n})({\n  position: 'relative'\n});\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItem'\n  });\n\n  const {\n    alignItems = 'center',\n    autoFocus = false,\n    button = false,\n    children: childrenProp,\n    className,\n    component: componentProp,\n    components = {},\n    componentsProps = {},\n    ContainerComponent = 'li',\n    ContainerProps: {\n      className: ContainerClassName\n    } = {},\n    dense = false,\n    disabled = false,\n    disableGutters = false,\n    disablePadding = false,\n    divider = false,\n    focusVisibleClassName,\n    secondaryAction,\n    selected = false\n  } = props,\n        ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  };\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp); // v4 implementation, deprecated in v5, will be removed in v6\n\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n\n  const ownerState = _extends({}, props, {\n    alignItems,\n    autoFocus,\n    button,\n    dense: childContext.dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  const Root = components.Root || ListItemRoot;\n  const rootProps = componentsProps.root || {};\n\n  const componentProps = _extends({\n    className: clsx(classes.root, rootProps.className, className),\n    disabled\n  }, other);\n\n  let Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(listItemClasses.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  } // v4 implementation, deprecated in v5, will be removed in v6\n\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: childContext,\n      children: /*#__PURE__*/_jsxs(ListItemContainer, _extends({\n        as: ContainerComponent,\n        className: clsx(classes.container, ContainerClassName),\n        ref: handleRef,\n        ownerState: ownerState\n      }, ContainerProps, {\n        children: [/*#__PURE__*/_jsx(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n          as: Component,\n          ownerState: _extends({}, ownerState, rootProps.ownerState)\n        }, componentProps, {\n          children: children\n        })), children.pop()]\n      }))\n    });\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      as: Component,\n      ref: handleRef,\n      ownerState: ownerState\n    }, !isHostComponent(Root) && {\n      ownerState: _extends({}, ownerState, rootProps.ownerState)\n    }, componentProps, {\n      children: [children, secondaryAction && /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n        children: secondaryAction\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item is a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    let secondaryActionIndex = -1;\n\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('MUI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the InputBase.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   * @default 'li'\n   * @deprecated\n   */\n  ContainerComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to the container component if used.\n   * @default {}\n   * @deprecated\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, all padding is removed.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The element to display at the end of ListItem.\n   */\n  secondaryAction: PropTypes.node,\n\n  /**\n   * Use to apply selected styling.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListItem;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.99 11 3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\"\n}), 'SwapHoriz');"],"sourceRoot":""}