{"version":3,"sources":["Util/ReactUtil.ts","Types/consts.ts","Character/Character.ts","Artifact/ArtifactSheet.tsx","Character/CharacterSheet.ts","Util/FieldUtil.tsx","Data/ElementalData.ts","StatData.ts","Character/CharacterDisplay/Components/FieldDisplay.tsx","Assets/Element_Anemo.png","Assets/Assets.ts","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.tsx","Conditional/Conditional.ts","Weapon/WeaponSheet.ts","Components/CustomFormControl.tsx","Components/StatIcon.tsx","Formula.ts","Components/SlotIcon.ts","Data/ArtifactData.ts","Data/ArtifactLookupTable.ts","Artifact/Artifact.tsx","Conditional/ConditionalSelector.tsx","Character/CharacterDisplay/Components/ConditionalDisplay.tsx","Data/WeaponData.ts","Weapon/Weapon.ts","StatConstants.ts","Components/CharacterSelection.tsx","Components/StatDisplay.tsx","Character/StatInput.tsx","Artifact/ArtifactCard.tsx","Util/UIUtil.ts","Artifact/PercentBadge.tsx","StatDependency.ts","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx","Components/WIPComponent.tsx","Data/CharacterData.ts","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Character/CharacterDisplay/DamageOptionsAndCalculation.tsx","Character/CharacterCard.tsx","Util/TimeUtil.ts","../node_modules/react-bootstrap/esm/ProgressBar.js","Build/BuildWorker.ts","Build/BuildDisplay.tsx","Stat.tsx","Build/Build.ts"],"names":["useForceUpdate","useState","stateDirty","update","useCallback","usePromise","promise","res","setRes","useEffect","pending","then","console","error","undefined","allHitModes","allReactionModes","allRarities","allArtifactRarities","allSlotKeys","allElements","allArtifactSets","allCharacterKeys","allWeaponKeys","Character","this","Error","characterKey","character","CharacterDatabase","get","equippedArtifacts","Object","values","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getElementalName","elementalKey","defVal","ElementalData","name","getlevelKeys","keys","LevelsData","getlevelTemplateName","levelKey","getLevelString","characterSheet","weaponSheet","levelOverride","getStatValueWithOverride","getLevel","getIndexFromlevelkey","indexOf","level","getAscension","asend","getTalentFieldValue","field","key","stats","evalIfFunc","hasOverride","statKey","baseStatOverrides","getBaseStatValue","characetSheet","specializeStat","value","Weapon","getWeaponMainStatValWithOverride","weapon","includes","characterStatBase","baseStat","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","slotKey","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifact","fromEntries","map","sKey","entries","calculateBuild","artifactSheets","artifacts","mainStatAssumptionLevel","art","i","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","mainStatKey","mainStatValue","numStars","Math","max","min","substats","substat","stat","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","length","condStats","resolve","val","dependencies","GetDependencies","modifiers","PreprocessFormulas","formula","mergeStats","modifier","mkey","multiplier","hitMode","infusionAura","reactionMode","talentLevelKeys","constellation","ascension","statKeys","characterEle","elementKey","weaponType","weaponTypeKey","tlvl","eleKey","overrides","hasOwnProperty","specializedStatVal","specialStatKey","getTalentStatsAll","s","weaponSubKey","getWeaponSubstatKey","getWeaponSubstatValWithOverride","weaponCond","otherCond","artifactImport","imp","default","set","promiseSheets","sheets","data","rarity","pieces","icons","setEffects","conditionals","num","setNum","text","effects","grouped","sheet","push","filter","artifactSetEffect","slots","charImport","charKey","CharacterSheet","loadCharacterSheet","charSheet","isAutoElemental","isMelee","getTalent","talentKey","talent","getTalentStats","split","constell","talents","statsArr","talentStats","getDisplayStatKeys","basicKeys","transReactions","ElementToReactionKeys","Formula","formulas","charFormulas","canShow","genericAvgHit","reactions","startsWith","replace","cardImg","thumbImg","star","constellationName","Boolean","getAll","modifiersToFields","mStatKey","Stat","getStatName","variant","getStatVariant","reduce","accu","formulaText","printStat","toFixed","fixed","fixedUnit","unit","getStatUnit","statsToFields","statVals","statVal","className","StatIconEle","flat","fieldProcessing","physical","anemo","geo","electro","hydro","pyro","cryo","StatData","characterHP","pretty","const","characterDEF","characterATK","characterLevel","weaponATK","baseATK","hp","hp_","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","dendro","dependencyKeys","debug","constData","formulaList","tmp","constModifier","k","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","func","log","assign","hitMoves","move","moveName","clamp","hitElements","ele","eleName","opt","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","FieldDisplay","index","equippedBuild","newBuild","compareAgainstEquipped","useContext","compareAgainstEquippedContext","useMemo","fixedVal","fieldVal","retVal","fieldEquippedVal","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","icon","faQuestionCircle","style","cursor","Item","Assets","elements","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","faStar","Stars","stars","colored","Array","_","processed","Promise","all","addConditional","weaponImport","setObj","setNumObj","source","findConditionals","obj","callback","condKey","states","state","maxStack","fields","layeredAssignment","objPathValue","stacks","stateKey","conditionalStats","objMultiplication","crawlObject","isArray","WeaponSheet","loadWeaponSheet","build","img","passiveName","desc","passiveDescription","description","baseStats","weaponKey","getWeaponsOfType","CustomFormControl","onChange","disabled","float","placeholder","allowEmpty","setstate","setstateDirty","sendChange","parseFunc","parseFloat","aria-label","e","target","onBlur","onKeyDown","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","formulaImport","src","f","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubstatsData","ArtifactSubstatsMinMax","getArrLastElement","ArtifactSlotsData","ArtifactSubstatLookupTable","errors","allSubstatRolls","total","substatRolls","getSubstatRolls","Set","roll","size","rolls","efficiency","getSubstatEfficiency","getStatNameWithPercent","find","some","minimum","rollInfo","low","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accurateValue","sum","cur","getArtifactEfficiency","currentEfficiency","maximumEfficiency","current","totalRolls","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","slotName","slotIcon","slotNameWithIcon","slotMainStats","setEffectsObjs","result","setEffect","setEffectObj","setStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","endsWith","high","numUpgrades","maxSubstatValues","getSubstatKeys","substatCloseEnough","value1","value2","closeEnoughFloat","closeEnoughInt","ceil","getSubstatRollData","substatKey","substatValue","rollData","table","lookupValue","a","b","clampPercent","ConditionalSelector","setConditional","conditionalNum","conditionalStateKey","badge","Badge","Dropdown","Toggle","whiteSpace","Menu","onClick","condial","Fragment","v","stack","Button","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","editable","fieldClassName","conditionalFields","displayFields","condV","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","WeaponLevelKeys","LevelNameData","WeaponTypeData","getLevelName","getLevelIndex","getWeaponMainStatVal","main","getWeaponSubstatVal","sub","getWeaponTypeName","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","DropDownItem","DisplayStatDiff","label","oldVal","oldText","diffText","xs","StatDisplay","invalid","labelVariant","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Prepend","Text","Append","pointerEvents","faUndo","ArtifactCard","artifactObj","onEdit","onDelete","forceUpdateHook","registerArtListener","unregisterArtListener","equipOnChar","equipArtifactOnChar","substatsValidation","lock","mainStatLevel","mainStatVal","artifactValid","locationName","border","md","slotIcons","thumbnail","slotNames","Body","Title","numRolls","effOpacity","statName","valueString","opacity","valid","Footer","Divider","faLock","faLockOpen","faEdit","faTrashAlt","round","PercentBadge","badgeColor","GetFormulaDependency","dependency","Proxy","prop","receiver","add","formulaKeyDependency","freeze","InsertDependencies","has","artLayoutSize","lg","CharacterArtifactPane","history","useHistory","edit","pathname","artToEditId","equipArts","window","confirm","unequipArts","StatDisplayComponent","statsDisplayKeys","Alert","Row","Col","setNumKeyArr","SetEffectDisplay","CharacterOverviewPane","editLevel","setEditLevel","Img","Image","InputGroup","OverlayTrigger","Tooltip","faSave","roundedCircle","WeaponStatsEditorCard","MainStatsCards","WeaponStatsCard","title","statsVals","WeaponStatsEditorCardWeaponDropdown","setStateWeapon","weaponSheets","DropdownButton","reverse","arr","ItemText","editing","SetEditing","showDescription","setShowDescription","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","faQuoteLeft","refineIndex","faGavel","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","miscStatkeys","specializedStatKey","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","as","CharacterSpecializedStatKey","getStatNameRaw","xl","CharacterTalentPane","props","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","charEleKey","eleInterArr","Ele","talentLimits","header","talentLvlKey","talentLvlKeyRaw","levelBoost","newTalentLevelKey","statsEle","Subtitle","document","section","talentText","createContext","CustomMenu","React","forwardRef","ref","children","labeledBy","minWidth","aria-labelledby","Children","toArray","child","initialCharacter","auto","characterReducer","action","CharacterDisplayCard","propCharacterKey","propCharacter","propSetCharacterKey","setCharacterKey","footer","propNewBuild","onClose","tabName","useReducer","setcompareAgainstEquipped","firstUpdate","useRef","char","newCKey","flexArts","commonPaneProps","DamageOptionsAndCalculationEle","hasTalentPage","DamageOptionsAndCalculation","CharSelectDropdown","ButtonGroup","faTimes","Provider","Tab","Container","defaultActiveKey","mountOnEnter","unmountOnExit","Nav","fill","Link","eventKey","WIPComponent","Content","Pane","HeaderIconDisplay","CharDropdownItem","lvlKey","setEffectText","setEffectTexts","setNumStats","setStatsFields","setEffectConditionals","ckey","cardbg","sectionValues","JSON","stringify","infusionVals","InfusionAuraDropdown","ReactionToggle","HitModeToggle","CalculationDisplay","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","Collapse","subKey","printFormula","formulaField","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","currentEventKey","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","href","rel","immunityStatKey","elementImmunity","CharacterCard","cardClassName","forceUpdate","registerCharListener","unregisterCharListener","weaponName","weaponMainVal","weaponSubVal","weaponLevelName","artifactSetName","highestNum","to","msToUnits","ms","milliseconds","seconds","minutes","hours","timeString","timeText","strPadLeft","timeStringMs","getPercentage","now","percentage","renderProgressBar","_ref","_classNames","srOnly","striped","animated","bsPrefix","_objectWithoutPropertiesLoose","createElement","_extends","role","classNames","width","ProgressBar","_ref2","isChild","useBootstrapPrefix","wrapperProps","cloneElement","displayName","defaultProps","Worker_fn","Worker","lazy","warningBuildNumber","maxBuildsToShowList","artifactsSlotsToSelectMainStats","buildSettingsReducer","mainStatKeys","setFilters","BuildDisplay","setcharacterKey","statFilters","optimizationTarget","useLockedArts","useEquippedArts","ascending","buildSettings","buildSettingsDispatch","builds","setbuilds","maxBuildsToShow","setmaxBuildsToShow","modalBuild","setmodalBuild","showArtCondModal","setshowArtCondModal","showCharacterModal","setshowCharacterModal","generatingBuilds","setgeneratingBuilds","generationProgress","setgenerationProgress","generationDuration","setgenerationDuration","generationSkipped","setgenerationSkipped","charDirty","setCharDirty","isMounted","worker","ReactGA","pageview","terminate","selectCharacter","cKey","localStorage","loadFromLocalStorage","saveToLocalStorage","totBuildNumber","artifactDatabase","getArtifactDatabase","calculateTotalBuildNumber","generateBuilds","turbo","artifactSetEffects","splitArtifacts","artArr","minFilters","maxFilters","onmessage","progress","timing","skipped","category","variable","toString","postMessage","dropdownitemsForStar","setsWithMaxRarity","setobj","setsNumArr","artsAccountedOther","ind","every","characterName","characterDropDown","CharacterSelection","sortByText","artsAccounted","artifactCondCount","count","hasMinFilters","hasMaxFilters","disabledTurbo","BuildModal","ArtConditionalModal","HitModeCard","StatFilterCard","setStatFilters","sFs","setNKey","setNkey","AssumeFullLevelToggle","setmainStatAssumptionLevel","BuildAlert","drop","align","overflow","textOverflow","TargetSelectorDropdownItem","faSortAmountDownAlt","faSortAmountUp","ArtifactDisplayItem","talentField","closeModal","Modal","show","onHide","contentClassName","Suspense","fallback","closeArtCondModal","artSetKeyList","namesByMaxRarities","flatMap","StatFilterItem","close","setFilter","isFloat","inputProps","minInputProps","maxInputProps","faTrash","setHitmode","setReactionMode","setInfusionAura","remainingKeys","slotarr1","slotarr","totalBuildNumberString","toLocaleString","totalUnskipped","generationProgressString","generationSkippedString","totalUnskippedString","generationSkippedText","progPercent","levels","0","8","12","16","20","htmlStatsData","expand","statList","FormulaText","modifierText","options","statUnit","o","artifactsBySlot","setKeys","filteredArtifactsBySlot","slotKeys","artifactsBySet","setCount","slotPerm","artifactSetPermutations","getTalentStatKey","skillKey","useCharElement","getTalentStatKeyVariant"],"mappings":"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AC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,KACrsBC,EAAG,CAAE,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAE5kDpM,OAAQ,CACJ+L,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KAC1LI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhD7M,IAAK,CACDwM,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriD3M,IAAK,CACDsM,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,E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IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,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,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ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","file":"static/js/10.84c65d1e.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>();\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => { pending = false }\r\n  }, [promise])\r\n  return res\r\n}\r\n","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nexport const allHitModes = [\"hit\", \"avgHit\", \"critHit\"] as const\r\nexport const allReactionModes = [\"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",] as const\r\nexport const allArtifactSetCount = [1, 2, 3, 4, 5] as const\r\nexport const allRarities = [5, 4, 3, 2, 1] as const\r\nexport const allArtifactRarities = [5, 4, 3] as const\r\nexport const allSlotKeys = [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"] as const\r\nexport const allElements = ['anemo', 'geo', 'electro', 'hydro', 'pyro', 'cryo'] as const\r\nexport const allWeaponTypeKeys = ['sword', 'claymore', 'polearm', 'bow', 'catalyst'] as const\r\nexport const allArtifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\",\r\n  \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\",\r\n  \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\",\r\n  \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\",\r\n  \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\",\r\n  \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\",\r\n  \"WanderersTroupe\", \"TenacityOfTheMillelith\", \"PaleFlame\",\r\n] as const\r\nexport const allCharacterKeys = [\r\n  \"albedo\", \"amber\", \"barbara\", \"beidou\", \"bennett\", \"chongyun\", \"diluc\", \"diona\", \"fischl\", \"ganyu\",\r\n  \"hutao\", \"jean\", \"kaeya\", \"keqing\", \"klee\", \"lisa\", \"mona\", \"ningguang\", \"noelle\", \"qiqi\",\r\n  \"razor\", \"sucrose\", \"tartaglia\", \"traveler_anemo\", \"traveler_geo\", \"venti\", \"xiao\", \"xiangling\", \"xingqiu\", \"xinyan\",\r\n  \"zhongli\", \"rosaria\", \"yanfei\",\r\n] as const\r\nexport const allWeaponKeys = [\r\n  \"DullBlade\", \"SilverSword\", \"CoolSteel\", \"DarkIronSword\", \"FilletBlade\", \"HarbingerOfDawn\", \"SkyriderSword\",\r\n  \"TravelersHandySword\", \"BlackcliffLongsword\", \"FavoniusSword\", \"IronSting\", \"LionsRoar\", \"PrimordialJadeCutter\",\r\n  \"PrototypeRancour\", \"RoyalLongsword\", \"SacrificialSword\", \"TheAlleyFlash\", \"TheBlackSword\", \"TheFlute\",\r\n  \"SwordOfDescension\", \"FesteringDesire\", \"AquilaFavonia\", \"SkywardBlade\", \"SummitShaper\", \"WasterGreatsword\",\r\n  \"OldMercsPal\", \"BloodtaintedGreatsword\", \"DebateClub\", \"FerrousShadow\", \"Quartz\", \"SkyriderGreatsword\",\r\n  \"WhiteIronGreatsword\", \"BlackcliffSlasher\", \"FavoniusGreatsword\", \"LithicBlade\", \"PrototypeAminus\", \"Rainslasher\",\r\n  \"RoyalGreatsword\", \"SerpentSpine\", \"TheBell\", \"Whiteblind\", \"SacrificialGreatsword\", \"SnowTombedStarsilver\",\r\n  \"SkywardPride\", \"WolfsGravestone\", \"TheUnforged\", \"BeginnersProtector\", \"IronPoint\", \"BlackTassel\", \"Halberd\",\r\n  \"WhiteTassel\", \"BlackcliffPole\", \"CrescentPike\", \"Deathmatch\", \"DragonsBane\", \"LithicSpear\", \"PrototypeGrudge\",\r\n  \"FavoniusLance\", \"RoyalSpear\", \"DragonspineSpear\", \"VortexVanquisher\", \"PrimordialJadeWingedSpear\", \"StaffOfHoma\",\r\n  \"SkywardSpine\", \"HuntersBow\", \"SeasonedHuntersBow\", \"EbonyBow\", \"Messenger\", \"RavenBow\", \"RecurveBow\",\r\n  \"SharpshootersOath\", \"Slingshot\", \"TheStringless\", \"AlleyHunter\", \"BlackcliffWarbow\", \"CompoundBow\",\r\n  \"FavoniusWarbow\", \"PrototypeCrescent\", \"RoyalBow\", \"Rust\", \"SacrificialBow\", \"TheViridescentHunt\", \"SkywardHarp\",\r\n  \"AmosBow\", \"ElegyForTheEnd\", \"WindblumeOde\", \"ApprenticesNotes\", \"PocketGrimoire\", \"AmberCatalyst\", \"EmeraldOrb\",\r\n  \"MagicGuide\", \"OtherworldlyStory\", \"ThrillingTalesOfDragonSlayers\", \"TwinNephrite\", \"BlackcliffAgate\",\r\n  \"FavoniusCodex\", \"MappaMare\", \"PrototypeMalice\", \"RoyalGrimoire\", \"SacrificialFragments\", \"SolarPearl\", \"TheWidsith\",\r\n  \"WineAndSong\", \"EyeOfPerception\", \"Frostbearer\", \"LostPrayerToTheSacredWinds\", \"SkywardAtlas\", \"MemoryOfDust\"\r\n] as const\r\nexport type HitModeKey = typeof allHitModes[number]\r\nexport type ReactionModeKey = typeof allReactionModes[number]\r\nexport type SetNum = typeof allArtifactSetCount[number]\r\nexport type Rarity = typeof allRarities[number]\r\nexport type SlotKey = typeof allSlotKeys[number]\r\nexport type ElementKey = typeof allElements[number]\r\nexport type ArtifactSetKey = typeof allArtifactSets[number]\r\nexport type CharacterKey = typeof allCharacterKeys[number]\r\nexport type WeaponKey = typeof allWeaponKeys[number]\r\nexport type WeaponTypeKey = typeof allWeaponTypeKeys[number]","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { ICharacter } from \"../Types/character\";\r\nimport { allElements, allSlotKeys } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = (): string[] => Object.keys(LevelsData)\r\n  static getlevelTemplateName = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getLevelString = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet) => {\r\n    const levelOverride = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n    return Character.getLevel(character.levelKey) === levelOverride ? Character.getlevelTemplateName(character.levelKey) : `Lvl. ${levelOverride}`\r\n  }\r\n  static getIndexFromlevelkey = (levelKey) => Character.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return evalIfFunc(field?.[key], stats)\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getBaseStatValue = (character: ICharacter, characetSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    const { levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return characetSheet.specializeStat.key\r\n    if (statKey === \"specializedStatVal\") return characetSheet.specializeStat.value[Character.getIndexFromlevelkey(levelKey)]\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon, weaponSheet)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return Character.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    if (statKey in characetSheet.baseStat) return characetSheet.baseStat[statKey][Character.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n  static getStatValueWithOverride = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    if (Character.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    const artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    allSlotKeys.forEach(slotKey => {\r\n      const artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar?.location === characterKey) return; //it is already equipped\r\n      const artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      const notCharLoc = (artNotOnChar?.location ?? \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char\r\n    character.equippedArtifacts = Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"]))\r\n    Object.entries(artifactIds).forEach(([key, artid]: any) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets, mainStatAssumptionLevel = 0) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.createInitialStats(character, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats, artifacts, artifactSheets) => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach((art: any) => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(stats.mainStatAssumptionLevel, art.numStars * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.value)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return stats\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of (Object.entries(val) as any)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of (Object.entries(modifier) as any))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n\r\n  static createInitialStats = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, infusionAura, reactionMode, talentLevelKeys, constellation, equippedArtifacts, conditionalValues = {}, weapon = { key: \"\" } } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, Character.getStatValueWithOverride(character, characterSheet, weaponSheet, key)]))\r\n    initialStats.characterEle = characterSheet.elementKey;\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = weapon\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n\r\n\r\n    //enemy stuff\r\n    [\"physical\", ...allElements].forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]: any) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n    Character.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats).forEach(s => Character.mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n    if (weaponSubKey) Character.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubstatValWithOverride(character?.weapon, weaponSheet) })\r\n    Character.mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      Character.mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n}","import { IArtifactSheet, SetEffectEntry, StatArr, StatDict } from \"../Types/artifact\";\r\nimport { allArtifactSets, allRarities, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  constructor(data: IArtifactSheet) { this.data = data }\r\n\r\n  get name(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slotNames(): Dict<SlotKey, string> { return this.data.pieces }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): StatDict {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectTexts(setNum: SetNum, stats: ICalculatedStats): Displayable {\r\n    let text = this.setEffects[setNum]?.text\r\n    return evalIfFunc(text ?? \"\", stats)\r\n  }\r\n  setEffectConditionals(setNum: SetNum, stats: ICalculatedStats) {\r\n    const effects = this.setEffects[setNum]\r\n    if (effects?.conditional || effects?.conditionals) {\r\n      return {\r\n        ...effects?.conditional && { default: effects?.conditional },\r\n        ...effects?.conditionals && effects?.conditionals\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static namesByMaxRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): [Rarity, [ArtifactSetKey, string][]][] {\r\n    const grouped: Dict<Rarity, [ArtifactSetKey, string][]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push([key, sheet.name])\r\n      else grouped[rarity] = [[key, sheet.name]]\r\n    })\r\n    return allRarities.map(rarity => [rarity, grouped[rarity] ?? []] as [Rarity, [ArtifactSetKey, string][]]).filter(([, group]) => group.length)\r\n  }\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): StatArr {\r\n    let artifactSetEffect: StatArr = []\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && Object.keys(value.stats ?? {}).length &&\r\n        Object.entries(value.stats!).forEach(([key, value]) =>\r\n          artifactSetEffect.push({ key, value }))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import Formula from \"../Formula\";\r\nimport { ElementToReactionKeys } from \"../StatData\";\r\nimport { ICharacterSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const charImport = import('../Data/Characters').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>)\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | string): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return this.sheet.elementKey }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get specializeStat() { return this.sheet.specializeStat }\r\n  get baseStat() { return this.sheet.baseStat }\r\n  get talent() { return this.sheet.talent }\r\n  get formula() { return this.sheet.formula }\r\n  get conditionals() { return this.sheet.conditionals }\r\n  isAutoElemental = () => this.sheet.weaponTypeKey === \"catalyst\"\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (talentKey: string) => this.talent[talentKey]\r\n  get hasTalentPage() { return Boolean(Object.keys(this.sheet.talent).length) } //TODO: remove when all chararacter sheets are complete\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalent(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats) => {\r\n    const talents = this.sheet.talent\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n\r\n  getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats || !Object.keys(stats).length) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = this.elementKey\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = this.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (Formula.formulas.character?.[characterKey]) {\r\n      const charFormulas = {}\r\n      Object.entries(Formula.formulas.character[characterKey]).forEach(([talentKey, formulas]: any) => {\r\n        Object.values(formulas as any).forEach((formula: any) => {\r\n          if (!formula.field.canShow(stats)) return\r\n          if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n          if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n          charFormulas[talentKey].push(formula.keys)\r\n        })\r\n      })\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {//TODO: doesnt have character sheet\r\n      //generic average hit parameters.\r\n      const genericAvgHit: string[] = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical\r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      else if (weaponTypeKey === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst\r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions: string[] = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n}\r\n","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier as any ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey as any] * (multiplier as any), 0),\r\n    formulaText: <span>{Object.entries(modifier as any ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}) {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]: any) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]: any) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]: any) => accu + c[k] * (m as any), 0)\r\n    const dynamicFunc = (s, c) => dynamicModifier.reduce((accu, [k, m]: any) => accu + s[k] * (m as any), 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Character from \"../../Character\";\r\nimport { compareAgainstEquippedContext } from \"../../CharacterDisplayCard\";\r\n\r\nexport default function FieldDisplay({ field, index, equippedBuild, newBuild, className = \"p-2\" }) {\r\n  const compareAgainstEquipped = useContext(compareAgainstEquippedContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => field.canShow(stats), [field, stats])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", stats)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", stats)?.[0]?.(stats)\r\n      //compareAgainstEquipped\r\n      if (compareAgainstEquipped && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareAgainstEquipped, fixedVal, equippedBuild, field, stats])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", stats), [field, stats])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", stats), [field, stats])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", stats)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip id=\"field-formula\">{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, stats])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", stats), [field, stats])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => {\r\n    addConditional(sheets, \"weapon\");\r\n  }),//attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => {\r\n    addConditional(sheets, \"artifact\")\r\n    //attach metadata prop setNumKey to the conditional\r\n    Object.values(sheets).forEach(setObj =>\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n        if (setNumObj.conditional) (setNumObj.conditional as any).setNumKey = setNumKey // TODO, typechecker says there's no `setNumKey`\r\n        if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach((c: any) => c.setNumKey = setNumKey)\r\n      }))\r\n  })\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","import { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new WeaponSheet(value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>)\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  constructor(weaponSheet: IWeaponSheet) { this.sheet = weaponSheet }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string) => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  get name() { return this.sheet.name }\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  get passiveName() { return this.sheet.passiveName }\r\n  passiveDescription(stats: ICalculatedStats) {\r\n    const desc = this.sheet.passiveDescription\r\n    return evalIfFunc(desc, stats)\r\n  }\r\n  get description() { return this.sheet.description }\r\n  get baseStats() { return this.sheet.baseStats }\r\n  stats = (build: ICalculatedStats): object | false | undefined => evalIfFunc(this.sheet.stats, build)\r\n  get conditionals() { return this.sheet.conditionals }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled = false, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import ICalculatedStats from './Types/ICalculatedStats';\r\nimport { crawlObject, objPathValue } from './Util/Util';\r\n\r\n//Currently only import character formulas, but formulas from other sources should be able to be imported as well.\r\nexport const formulaImport = import('./Data/Characters/formula').then(imp => addFormula(imp.default, \"character\"))\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | undefined> => formulaImport.then(() => objPathValue(Formula.formulas, keys))\r\n}\r\n\r\nfunction addFormula(src, key) {\r\n  Formula.formulas[key] = src\r\n  crawlObject(src, [key], f => typeof f === \"function\", (formula, keys) => {\r\n    formula.keys = keys\r\n  })\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { SlotKey } from '../Types/consts'\r\n\r\nconst SlotIcon: StrictDict<SlotKey, IconDefinition> = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport { CompressMainStatKey, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactStarsData: Dict<Rarity, { subsBaselow: number, subBaseHigh: number, numUpgradesOrUnlocks: number }> = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData: StrictDict<Rarity, StrictDict<CompressMainStatKey, number[]>> = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubstatsData: StrictDict<SubstatKey, { [numStars: number]: number[] }> = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubstatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { SubstatKey } from \"../Types/artifact\"\r\n\r\nexport const ArtifactSubstatLookupTable: StrictDict<SubstatKey, { [numStar: number]: { [rounded: string]: number[][] } }> = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubstatsData, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { CompressMainStatKey, IArtifact, MainStatKey, StatDict, Substat, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, CharacterKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey) => slotKey ? ArtifactSlotsData[slotKey].name : \"\"\r\n  static slotIcon = (slotKey: SlotKey) => <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n  static slotNameWithIcon = (slotKey: SlotKey) => {\r\n    let name = Artifact.slotName(slotKey)\r\n    let slotIcon = Artifact.slotIcon(slotKey)\r\n    return <span>{slotIcon} {name}</span>\r\n  }\r\n\r\n  static slotMainStats = (slotKey: SlotKey): MainStatKey[] => ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): Dict<ArtifactSetKey, Dict<SetNum, StatDict>> => {\r\n    let result: Dict<ArtifactSetKey, Dict<SetNum, StatDict>> = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      let setEffect: Dict<SetNum, StatDict> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n        const setStats = evalIfFunc(setEffectObj.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        result[setKey][setNumKey][statKey] = (result[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: Dict<string, IArtifact>): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey, defVal = []) => {\r\n    if (statKey.endsWith(\"_dmg_\") && statKey !== \"physical_dmg_\")\r\n      return ArtifactMainStatsData[numStar][\"ele_dmg_\"]\r\n    return ArtifactMainStatsData[numStar][statKey as CompressMainStatKey] || defVal\r\n  }\r\n\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number | undefined =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } => {\r\n    const data = ArtifactStarsData[rarity]!\r\n    return { low: data.subsBaselow, high: data.subBaseHigh, numUpgrades: data.numUpgradesOrUnlocks }\r\n  }\r\n\r\n  static maxSubstatValues = (statKey: SubstatKey, numStars = maxStar): number => ArtifactSubstatsMinMax[statKey].max[numStars]\r\n  static getSubstatKeys = (): SubstatKey[] => Object.keys(ArtifactSubstatsData) as SubstatKey[]\r\n  static substatCloseEnough = (key: SubstatKey, value1: number, value2: number): boolean => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars: Rarity) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars]!.subBaseHigh + ArtifactStarsData[numStars]!.numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static getSubstatRollData = (substatKey: SubstatKey | \"\", numStars: Rarity) => ArtifactSubstatsData[substatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    if (!numStars || !substatKey || typeof substatValue !== \"number\" || !substatValue) return []\r\n    let rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    if (!rollData.length) return []\r\n\r\n    let table = ArtifactSubstatLookupTable[substatKey][numStars]\r\n    let lookupValue = substatValue.toFixed(1)\r\n\r\n    if (table[lookupValue])\r\n      return table[lookupValue].map(roll => roll.map(i => rollData[i]))\r\n    else return [] // Lookup fails\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state: IArtifact) {\r\n    const { numStars, level, substats } = state, errors: string[] = []\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = key ? Artifact.getSubstatRolls(key, value, numStars) : []\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls?.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            const key = substats[index].key\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    } else {\r\n      // Found valid build, filling missing data\r\n      for (const substat of substats)\r\n        substat.accurateValue = substat.rolls!.reduce((sum, cur) => sum + cur, 0)\r\n      const { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n      state.currentEfficiency = currentEfficiency\r\n      state.maximumEfficiency = maximumEfficiency\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(substats: Substat[], numStars: Rarity, level: number) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let current = substats.reduce((sum, { key, accurateValue }) => sum + (key ? (accurateValue! / ArtifactSubstatsMinMax[key].max[maxStar]) : 0), 0)\r\n    let maximum = current + rollsRemaining\r\n    let currentEfficiency = current * 100 / totalRolls\r\n    let maximumEfficiency = maximum * 100 / totalRolls\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    let setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId: string | undefined, characterKey: CharacterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId: string | undefined) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.unequipArtifactOnSlot(location, slotKey)\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial]: any, i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n          <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setConditional([0])}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n            <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n              {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n            </Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n        <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport Conditional from \"../../../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../../../Conditional/ConditionalSelector\"\r\nimport ICalculatedStats from \"../../../Types/ICalculatedStats\"\r\nimport IConditional from \"../../../Types/IConditional\"\r\nimport statsToFields from \"../../../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../../../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  characterDispatch: (any) => void,//TODO: characterDispatch type\r\n  editable: boolean,\r\n  fieldClassName?: string\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, equippedBuild, newBuild, characterDispatch, editable, fieldClassName }: ConditionalDisplayProps) {\r\n  const stats = newBuild ? newBuild : equippedBuild as ICalculatedStats\r\n  if (!stats) debugger\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats.conditionalValues, characterDispatch])\r\n\r\n  if (!canShow) return null\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector disabled={!editable}\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild, className: fieldClassName }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","const WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20/40\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40/50\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50/60\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60/70\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70/80\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80/90\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { LevelNameData, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData';\r\nimport WeaponSheet from './WeaponSheet';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey): number => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.main[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.sub?.[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatKey = (weaponSheet: WeaponSheet, defVal = \"\") => (weaponSheet.baseStats?.substatKey || defVal)\r\n\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = (): string[] => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubstatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n}","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [0,\r\n  17.2, 18.5, 19.9, 21.3, 22.6, 24.6, 26.6, 28.9, 31.4, 34.1,\r\n  37.2, 40.7, 44.4, 48.6, 53.7, 59.1, 64.4, 69.7, 75.1, 80.6,\r\n  86.1, 91.7, 97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n  142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n  215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n  336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n  509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n  742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n  968.6, 991.0, 1013.5, 1036.1, 1066.6, 1090.0, 1115.0, 1141.7, 1171.9, 1202.8,\r\n  1202.8, 1233.9, 1264.7, 1305.7, 1346.1, 1468.9, 1524.0, 1577.0, 1627.6, 1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [0,\r\n  91, 99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n  170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n  320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n  448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n  574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n  733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n  915, 936, 956, 982, 1003, 1017, 1036, 1057, 1075, 1096,\r\n  1114, 1135, 1149, 1170, 1191, 1205, 1224, 1243, 1260, 1277,\r\n  1293, 1308, 1317, 1327, 1336, 1349, 1366, 1384, 1403, 1424,\r\n  1450, 1478, 1507, 1543, 1570, 1580, 1589, 1673, 1682, 1691,\r\n]","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return <>{CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>\r\n    {characterSheet.name}\r\n  </Dropdown.Item>\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { ICharacter } from \"../Types/character\"\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\ntype StatDisplayProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined)\r\n\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey, invalid as any)\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (statKey === \"finalHP\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterHP\")\r\n        else if (statKey === \"finalDEF\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterDEF\")\r\n        else if (statKey === \"finalATK\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterATK\") + Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"weaponATK\")\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, characterSheet, weaponSheet, equippedBuild, newBuild, editable, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label: label as any }} />\r\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip id=\"reset-tooltip\">Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { IArtifact, Substat } from '../Types/artifact';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: IArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number }\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }: Data): JSX.Element | null {\r\n  const [, forceUpdateHook] = useForceUpdate()\r\n  useEffect(() => {\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () => { artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook) }\r\n  }, [artifactId, forceUpdateHook])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? ArtifactDatabase.get(artifactId) : undefined))?.setKey))\r\n  const equipOnChar = (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey)\r\n\r\n  const editable = !artifactObj //dont allow edit for flex artifacts\r\n  const art = artifactObj || ArtifactDatabase.get(artifactId);\r\n  const characterSheet = usePromise(CharacterSheet.get(art.location))\r\n  if (!art) return null\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n\r\n  const { slotKey, numStars, level, mainStatKey, substats, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.mainStatValue(mainStatKey, numStars, mainStatLevel) ?? \"\"}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = art.maximumEfficiency !== undefined\r\n  const locationName = characterSheet?.name ?? \"Inventory\"\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{sheet?.slotNames[slotKey] ?? \"Unknown Piece Name\"}</b></h6>\r\n          <div>{Artifact.slotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{sheet?.name ?? \"Artifact Set\"}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: Substat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueString(stat.value, Stat.getStatUnit(stat.key))}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{valueString(efficiency, \"eff\")}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} {...{ className: \"float-right\" }} /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"lock-artifact-tip\">Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.update(art);\r\n                  }}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","export function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1)\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0] as any] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","import { useCallback, useMemo } from 'react';\r\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { ICharacter } from '../../Types/character';\r\nimport { allSlotKeys } from '../../Types/consts';\r\nimport ICalculatedStats from '../../Types/ICalculatedStats';\r\nimport { usePromise } from '../../Util/ReactUtil';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\nconst artLayoutSize = { xs: 12, md: 6, lg: 4 }\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  artifacts?: any[]\r\n}\r\nfunction CharacterArtifactPane({ characterSheet, weaponSheet, character, character: { characterKey }, equippedBuild, newBuild, editable, characterDispatch, artifacts }: CharacterArtifactPaneProps) {\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => characterSheet.getDisplayStatKeys(stats), [stats, characterSheet])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    Character.equipArtifacts(characterKey, newBuild?.equippedArtifacts)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, newBuild?.equippedArtifacts, characterDispatch])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    Character.equipArtifacts(characterKey, Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])))\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, characterDispatch])\r\n  return <>\r\n    <Card className=\"h-100 mb-2\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Body>\r\n        <StatDisplayComponent {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys: statKeys, editable }} />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        {newBuild ? <Button onClick={equipArts}>Equip all artifacts to current character</Button> : (editable && <Button onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n        {Boolean(mainStatAssumptionLevel) && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert>}\r\n      </Card.Footer>\r\n    </Card>\r\n    <Row className=\"mb-n2\">\r\n      <Col {...artLayoutSize} className=\"d-flex flex-column\">\r\n        {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n          <Card key={setKey} className=\"mb-2 flex-grow-1\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n            <Card.Header>{artifactSheets?.[setKey].name ?? \"\"}</Card.Header>\r\n            <Card.Body className=\"p-2 mb-n2\">\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      {artifacts ?\r\n        allSlotKeys.map(slotKey => {//from flex\r\n          const art = artifacts.find(art => art.slotKey === slotKey)\r\n          return Boolean(art) && <Col {...artLayoutSize} key={slotKey} className=\"mb-2\">\r\n            <ArtifactCard artifactObj={art} />\r\n          </Col>\r\n        }) : allSlotKeys.map(slotKey =>\r\n          Boolean(stats.equippedArtifacts[slotKey]) && <Col {...artLayoutSize} key={stats.equippedArtifacts[slotKey]} className=\"mb-2\">\r\n            <ArtifactCard artifactId={stats.equippedArtifacts[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats.equippedArtifacts[slotKey])} />\r\n          </Col>\r\n        )}\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport Conditional from \"../../Conditional/Conditional\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport { allElements } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport { IConditionals } from \"../../Types/IConditional\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport Character from \"../Character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport StatInput from \"../StatInput\"\r\nimport ConditionalDisplay from \"./Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"./Components/FieldDisplay\"\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean;\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, weaponSheet, editable, character, character: { characterKey, constellation }, characterDispatch, equippedBuild, newBuild }: CharacterOverviewPaneProps) {\r\n  const [editLevel, setEditLevel] = useState(false)\r\n  const elementKey = characterSheet.elementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Card.Img src={characterSheet.cardImg} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{characterSheet.name} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={characterSheet.star} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl placeholder={undefined} onChange={val => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: clamp(val, 1, 90), characterSheet, weaponSheet })} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: Character.getLevel(character.levelKey), characterSheet, weaponSheet })} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip id=\"artifact-override-level\">Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"success\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{characterSheet.constellationName}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={characterSheet.getTalent(`constellation${i + 1}`)?.img} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n      <MainStatsCards {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n    </Col>\r\n  </Row >\r\n}\r\n\r\nfunction WeaponStatsCard({ title, statsVals = {}, stats = {} }) {\r\n  if ((Object.keys(statsVals ?? {}) as any).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay newBuild={undefined} key={i} index={i} {...{ field, equippedBuild: stats, className: \"px-3 py-2\" }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}\r\n\r\n\r\nfunction WeaponStatsEditorCardWeaponDropdown({ weaponSheet, weaponTypeKey, setStateWeapon }: { weaponSheet: WeaponSheet, weaponTypeKey: string, setStateWeapon: (key: any, value: any) => void }) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  if (!weaponSheets) return null\r\n\r\n  return <DropdownButton title={weaponSheet.name}>\r\n    {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n      <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n      {Object.entries(WeaponSheet.getWeaponsOfType(weaponSheets, weaponTypeKey)).filter(([, weaponObj]: any) => weaponObj.rarity === star).map(([key, weaponObj]: any) =>\r\n        <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n          {weaponObj.name}\r\n        </Dropdown.Item>\r\n      )}\r\n      {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n    </React.Fragment>)}\r\n  </DropdownButton>\r\n}\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction WeaponStatsEditorCard({ characterSheet, weaponSheet, editable, character, character: { weapon }, characterDispatch, equippedBuild, newBuild }: WeaponStatsEditorCardProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => {\r\n    if (key === \"key\") {\r\n      if (value === weapon.key) return\r\n      else {\r\n        //reset the conditionalNum when we switch weapons\r\n        const { conditionalValues } = character\r\n        delete conditionalValues.weapon\r\n        characterDispatch({ conditionalValues })\r\n      }\r\n    }\r\n    character.weapon[key] = value\r\n    characterDispatch({ weapon: character.weapon })\r\n  }\r\n  const substatKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)\r\n  const weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet.passiveName\r\n  const weaponBonusStats = weaponSheet.stats(build)\r\n  const conditionals = Conditional.conditionals.weapon[weapon.key] as IConditionals\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      <Row className=\"mb-n2\">\r\n        <Col xs={12} md={3} lg={4}>\r\n          <Image src={weaponSheet.img} className={`w-100 h-auto grad-${weaponSheet.rarity}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <WeaponStatsEditorCardWeaponDropdown weaponSheet={weaponSheet} weaponTypeKey={weaponTypeKey} setStateWeapon={setStateWeapon} />\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {substatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><span className=\"mr-2\">{StatIconEle(substatKey)}</span>{Stat.getStatName(substatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(substatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <h5 className=\"mb-0\">{weaponSheet.name} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n            <p><Stars stars={weaponSheet.rarity} /></p>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <p>{weaponPassiveName && weaponSheet.passiveDescription(build)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: weaponDisplaySubVal }} stats={build} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            {Boolean(conditionals) && Object.entries(conditionals).map(([stateKey, conditional]) =>\r\n              <ConditionalDisplay key={stateKey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} fieldClassName=\"py-2 px-3\" />)}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <small>{weaponSheet.description}</small>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  editable: boolean,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction MainStatsCards({ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys: any[] = [];\r\n\r\n  [\"physical\", ...allElements].forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: key, characterSheet, weaponSheet })} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")}\r\n                  onChange={value => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value, characterSheet, weaponSheet })} />\r\n                <InputGroup.Append>\r\n                  {isPercentSpecialStatSelect && <InputGroup.Text>%</InputGroup.Text>}\r\n                  <Button onClick={() => {\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatKey\"), characterSheet, weaponSheet })\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatVal\"), characterSheet, weaponSheet })\r\n                  }}\r\n                    disabled={!Character.hasOverride(character, \"specializedStatKey\") && !Character.hasOverride(character, \"specializedStatVal\")}\r\n                  >\r\n                    <FontAwesomeIcon icon={faUndo} />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined\r\n                  }\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from 'react';\r\nimport { Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport { evalIfFunc } from \"../../Util/Util\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport ConditionalDisplay from './Components/ConditionalDisplay';\r\nimport FieldDisplay from './Components/FieldDisplay';\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterTalentPane(props: CharacterTalentPaneProps) {\r\n  const { characterSheet, character: { levelKey, constellation }, editable, characterDispatch, newBuild, equippedBuild } = props\r\n  const ascension = Character.getAscension(levelKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col><ReactionDisplay {...{ characterSheet, newBuild, equippedBuild }} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {!!characterSheet.getTalent(\"sprint\") && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalent(tKey)) return null\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet, newBuild, equippedBuild }: { characterSheet: CharacterSheet, newBuild?: ICalculatedStats, equippedBuild?: ICalculatedStats }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = characterSheet.elementKey\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip id=\"shatter-tooltip\">Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  ascension: number,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { constellation, talentLevelKeys, }, characterDispatch, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, onClickTitle }: SkillDisplayCardProps) {\r\n  let build = newBuild ? newBuild : equippedBuild as ICalculatedStats //assumes at least one of them is not undefined\r\n  let header: Displayable | null = null\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n        talentLevelKeys[tKey] = newTalentLevelKey\r\n        characterDispatch({ talentLevelKeys })\r\n      }\r\n      header = <Card.Header>\r\n        <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>{`Talent Level: ${talentLvlKey + 1}`}</Card.Header>\r\n    }\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"h-100\">\r\n    {header}\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={characterSheet.getTalent(talentKey)?.img} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{characterSheet.getTalent(talentKey)?.name}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {/* Display document sections */}\r\n      {characterSheet.getTalent(talentKey)?.document?.map((section, i) => {\r\n        if (!section.canShow!(build)) return null\r\n        const talentText = evalIfFunc(section.text, build)\r\n        let fields = section.fields ?? []\r\n        return <div className=\"my-2\" key={\"section\" + i}>\r\n          <div {...{ xs: 12 }}>\r\n            <div className=\"mb-2\">{talentText}</div>\r\n            {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n              {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n            </ListGroup>}\r\n          </div>\r\n          {!!section.conditional && <ConditionalDisplay {...{ conditional: section.conditional, equippedBuild, newBuild, characterDispatch, editable }} />}\r\n        </div>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { createContext, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allCharacterKeys } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { usePromise } from '../Util/ReactUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport DamageOptionsAndCalculation from './CharacterDisplay/DamageOptionsAndCalculation';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nexport const compareAgainstEquippedContext = createContext(undefined)\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }: any, ref: any) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" } as any}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\nconst initialCharacter = (characterKey): ICharacter => ({\r\n  characterKey: characterKey ?? \"\",//the game character this is based off\r\n  levelKey: \"L1\",//combination of level and ascension\r\n  hitMode: \"avgHit\",\r\n  reactionMode: null,\r\n  equippedArtifacts: {},\r\n  conditionalValues: {},\r\n  baseStatOverrides: {},//overriding the baseStat\r\n  weapon: {\r\n    key: \"\",\r\n    levelKey: WeaponLevelKeys[0],\r\n    refineIndex: 0,\r\n    overrideMainVal: 0,\r\n    overrideSubVal: 0,\r\n  },\r\n  talentLevelKeys: {\r\n    auto: 0,\r\n    skill: 0,\r\n    burst: 0,\r\n  },\r\n  infusionAura: \"\",\r\n  constellation: 0,\r\n})\r\n\r\ntype characterReducerOverwrite = {\r\n  type: \"overwrite\",\r\n  character: ICharacter\r\n}\r\ntype characterReducerFromDB = {\r\n  type: \"fromDB\",\r\n}\r\ntype characterReducerStatOverride = {\r\n  type: \"statOverride\",\r\n  statKey: string\r\n  value: number | string\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n}\r\ntype characterReducerOverwriteAction = characterReducerOverwrite | characterReducerFromDB | characterReducerStatOverride | Partial<ICharacter>\r\n\r\nfunction characterReducer(state: ICharacter, action: characterReducerOverwriteAction) {\r\n  if (\"type\" in action) switch (action?.type) {\r\n    case \"overwrite\":\r\n      return { ...state, ...action.character }\r\n    case \"fromDB\"://for equipping artifacts, that makes the changes in DB instead of in state.\r\n      return { ...state, ...CharacterDatabase.get(state.characterKey, {} as any) }\r\n    case \"statOverride\": {\r\n      const { statKey, value, characterSheet, weaponSheet, } = action\r\n      const baseStatOverrides = state.baseStatOverrides\r\n      const baseStatVal = Character.getBaseStatValue(state, characterSheet, weaponSheet, statKey)\r\n      if (baseStatVal === value)\r\n        delete baseStatOverrides[statKey]\r\n      else\r\n        baseStatOverrides[statKey] = value\r\n      return { ...state, baseStatOverrides }\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\ntype CharacterDisplayCardProps = {\r\n  characterKey?: string,\r\n  character?: ICharacter,\r\n  setCharacterKey?: (any) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  editable?: boolean,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey: propCharacterKey, character: propCharacter, setCharacterKey: propSetCharacterKey, footer, newBuild: propNewBuild, editable = false, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const [character, characterDispatch] = useReducer(characterReducer, initialCharacter(propCharacterKey))\r\n  const [compareAgainstEquipped, setcompareAgainstEquipped] = useState(false)\r\n  const firstUpdate = useRef(true)\r\n  useEffect(() => {\r\n    if (!propCharacterKey) return\r\n    const char = { ...initialCharacter(propCharacterKey), ...CharacterDatabase.get(propCharacterKey, {} as any) }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacterKey])\r\n  useEffect(() => {\r\n    if (!propCharacter) return\r\n    const char = { ...initialCharacter(propCharacter.characterKey), ...propCharacter }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacter])\r\n\r\n  useEffect(() => {\r\n    //skip saving on the first update, since those updates are from loading from DB\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false\r\n      return\r\n    }\r\n    //save character to DB\r\n    editable && CharacterDatabase.update(character)\r\n  }, [character, editable])\r\n\r\n  const characterKey = propCharacter?.characterKey ?? character.characterKey\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  useEffect(() => {\r\n    if (weaponSheets && characterSheet && !character.weapon.key) {\r\n      character.weapon.key = Object.keys(WeaponSheet.getWeaponsOfType(weaponSheets, characterSheet.weaponTypeKey))[0] ?? \"\"\r\n      characterDispatch({ weapon: character.weapon })\r\n    }\r\n  }, [characterSheet, weaponSheets, character.weapon])\r\n\r\n  const weaponSheet = usePromise(WeaponSheet.get(character.weapon.key))\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const setCharacterKey = useCallback(\r\n    newCKey => {\r\n      let state = initialCharacter(newCKey)\r\n      const char = CharacterDatabase.get(newCKey)\r\n      if (char) state = { ...state, ...char }\r\n      characterDispatch({ type: \"overwrite\", character: state })\r\n      if (newCKey !== characterKey)\r\n        propSetCharacterKey?.(newCKey)\r\n    }, [characterKey, characterDispatch, propSetCharacterKey])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return\r\n    const newBuild = propNewBuild && deepClone(propNewBuild);\r\n    (newBuild as any).hitMode = character.hitMode;\r\n    (newBuild as any).reactionMode = character.reactionMode;\r\n    return newBuild\r\n  }, [propNewBuild, character.hitMode, character.reactionMode])\r\n\r\n  const { levelKey, artifacts: flexArts } = character\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel), [character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel])\r\n\r\n  const commonPaneProps = { character, newBuild, equippedBuild: (!newBuild || compareAgainstEquipped) ? equippedBuild : undefined, editable, characterDispatch, compareAgainstEquipped }\r\n  if (flexArts) (commonPaneProps as any).artifacts = flexArts//from flex\r\n  // main CharacterDisplayCard\r\n  const DamageOptionsAndCalculationEle = characterSheet?.hasTalentPage && weaponSheet && <DamageOptionsAndCalculation {...{ characterSheet, weaponSheet, character, characterDispatch, newBuild, equippedBuild }} className=\"mb-2\" />\r\n  return (<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs={\"auto\"} className=\"mr-auto\">\r\n          {/* character selecter/display */}\r\n          <CharSelectDropdown characterSheet={characterSheet} character={character} weaponSheet={weaponSheet} editable={editable} levelKey={levelKey} characterDispatch={characterDispatch} setCharacterKey={setCharacterKey} />\r\n        </Col>\r\n        {Boolean(mainStatAssumptionLevel) && <Col xs=\"auto\"><Alert className=\"mb-0 py-1 h-100\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert></Col>}\r\n        {/* Compare against new build toggle */}\r\n        {newBuild ? <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(false)}>\r\n              <small>Show New artifact Stats</small>\r\n            </Button>\r\n            <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(true)}>\r\n              <small>Compare against equipped artifact</small>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col> : null}\r\n        {Boolean(onClose) && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    {characterKey && characterSheet && weaponSheet && <Card.Body>\r\n      <compareAgainstEquippedContext.Provider value={compareAgainstEquipped as any}>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 mx-0\" fill>\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\"><h5 className=\"mb-0\">Character</h5></Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\"><h5 className=\"mb-0\">New Artifacts</h5></Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\"><h5 className=\"mb-0\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</h5></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {process.env.NODE_ENV !== \"development\" && !characterSheet.hasTalentPage ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled><h5 className=\"mb-0\">Talents</h5> <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\"><h5 className=\"mb-0\">Talents</h5></Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterOverviewPane characterSheet={characterSheet} weaponSheet={weaponSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterTalentPane characterSheet={characterSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </compareAgainstEquippedContext.Provider>\r\n    </Card.Body>}\r\n    {footer && <Card.Footer>\r\n      {footer}\r\n    </Card.Footer>}\r\n  </Card>)\r\n}\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  weaponSheet?: WeaponSheet,\r\n  character: ICharacter\r\n  editable: boolean\r\n  levelKey: string\r\n  characterDispatch: (any) => void\r\n  setCharacterKey: (any) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, weaponSheet, character, editable, levelKey, characterDispatch, setCharacterKey }: CharSelectDropdownProps) {\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <Image src={characterSheet.thumbImg} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {characterSheet.name} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  return <>{editable ? <ButtonGroup>\r\n    <Dropdown as={ButtonGroup}>\r\n      <Dropdown.Toggle as={Button}>\r\n        {HeaderIconDisplay}\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu as={CustomMenu}>\r\n        {[...allCharacterKeys].sort().map(charKey => <CharDropdownItem key={charKey} characterKey={charKey} setCharacterKey={setCharacterKey} />)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n    <DropdownButton as={ButtonGroup} disabled={!characterSheet} title={\r\n      <h6 className=\"d-inline\">Stats Template: {Character.getlevelTemplateName(levelKey)} </h6>\r\n    }>\r\n      <Dropdown.ItemText>\r\n        <span>Select Base Stat Template</span>\r\n      </Dropdown.ItemText>\r\n      {Character.getlevelKeys().map(lvlKey =>\r\n        <Dropdown.Item key={lvlKey} onClick={() => characterDispatch({ levelKey: lvlKey })}>\r\n          <h6 >{Character.getlevelTemplateName(lvlKey)} </h6>\r\n        </Dropdown.Item>)}\r\n    </DropdownButton>\r\n  </ButtonGroup> : <span>{HeaderIconDisplay} {characterSheet && weaponSheet && Character.getLevelString(character, characterSheet, weaponSheet)}</span>}</>\r\n}\r\nfunction CharDropdownItem({ characterKey, setCharacterKey }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => setCharacterKey(characterKey)}>\r\n    <span >\r\n      <Image src={characterSheet.thumbImg} className={`thumb-small p-0 m-n1 grad-${characterSheet.star}star`} thumbnail />\r\n      <h6 className=\"d-inline ml-2\">{characterSheet.name} </h6>\r\n    </span>\r\n  </Dropdown.Item>\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip id=\"wip\">Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","// import characters from\r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20/40\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40/50\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50/60\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60/70\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70/80\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80/90\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterSpecializedStatKey\r\n}","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport ConditionalDisplay from \"../../Character/CharacterDisplay/Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"../../Character/CharacterDisplay/Components/FieldDisplay\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, editable, characterDispatch }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey))\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectTexts(setNumKey, stats)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const conditionals = sheet.setEffectConditionals(setNumKey, stats)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {Boolean(conditionals) && Object.entries(conditionals!).map(([ckey, conditional]) => <ConditionalDisplay key={ckey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n  </>\r\n}\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  editable: boolean,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n  characterDispatch: (arg0: any) => void,\r\n}\r\n","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter\r\n  statsDisplayKeys: any,\r\n  editable: boolean,\r\n  cardbg?: string\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }: StatDisplayComponentProps) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, sectionValues]: any) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text={\"lightfont\" as any} className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Formula from \"../../Formula\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport { IFieldDisplay } from \"../../Types/IFieldDisplay\";\r\nimport { usePromise } from \"../../Util/ReactUtil\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No Infusion</span>,\r\n  \"pyro\": <span >Pyro Infusion</span>,\r\n  \"cryo\": <span >Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className?: string\r\n}\r\nexport function InfusionAuraDropdown({ characterSheet, character: { infusionAura = \"\", characterKey }, characterDispatch, className }: InfusionAuraDropdownProps) {\r\n  if (!characterSheet.isMelee()) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\ntype ReactionToggleProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className: string\r\n}\r\nexport function ReactionToggle({ characterSheet, character: { characterKey, reactionMode = \"none\", infusionAura }, characterDispatch, className }: ReactionToggleProps) {\r\n  if (reactionMode === null) reactionMode = \"none\"\r\n  const charEleKey = characterSheet.elementKey\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ characterSheet, build }: { characterSheet: CharacterSheet, build: ICalculatedStats }) {\r\n  const displayStatKeys = useMemo(() => characterSheet.getDisplayStatKeys(build), [build, characterSheet])\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n      return <Card bg=\"darkcontent\" text={\"lightfont\" as any} key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              if (Array.isArray(field))\r\n                return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} fieldIndex={fieldIndex} />\r\n              else if (typeof field === \"string\") {//simple statKey field\r\n                const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              return null\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\nfunction FormulaCalculationField({ fieldKeys, build, fieldIndex }: { fieldKeys: string[], build: ICalculatedStats, fieldIndex: number, }) {\r\n  const formula = usePromise(Formula.get(fieldKeys))\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.()\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n      <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n      <Card.Body className=\"p-2\">\r\n        <div className=\"mb-n2\">\r\n          <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n          {subFormulaKeys.map(subKey =>\r\n            <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\ntype DamageOptionsAndCalculationProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  className: string\r\n}\r\nexport default function DamageOptionsAndCalculation({ characterSheet, weaponSheet, character, character: { hitMode }, characterDispatch, newBuild, equippedBuild, className }: DamageOptionsAndCalculationProps) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle callback={undefined} {...{ as: Button }} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={undefined}\r\n                      disabled={undefined}\r\n                      percent={undefined}\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value, characterSheet, weaponSheet })}\r\n                    />\r\n                  </Col>\r\n                  {[\"physical\", ...allElements].map(eleKey => {\r\n                    let statKey = `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity, characterSheet, weaponSheet })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay characterSheet={characterSheet} build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport Stat from '../Stat';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterSheet from './CharacterSheet';\r\ntype CharacterCardProps = { characterKey: string, onEdit?: (any) => void, onDelete?: (any) => void, cardClassName: string, header?: JSX.Element, bg?: string, footer?: boolean }\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer = false }: CharacterCardProps) {\r\n  const [, forceUpdate] = useForceUpdate()\r\n  useEffect(() => {\r\n    characterKey && CharacterDatabase.registerCharListener(characterKey, forceUpdate)\r\n    return () => { characterKey && CharacterDatabase.unregisterCharListener(characterKey, forceUpdate) }\r\n  }, [characterKey, forceUpdate])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const character = CharacterDatabase.get(characterKey)\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheet = usePromise(WeaponSheet.get(character?.weapon?.key))\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets])\r\n  if (!character || !characterSheet || !weaponSheet || !stats) return null;\r\n\r\n  const { weapon = {}, constellation } = character\r\n  const name = characterSheet.name\r\n  const elementKey = characterSheet.elementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponName = weaponSheet?.name\r\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon, weaponSheet)\r\n  const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponSubVal = Weapon.getWeaponSubstatValWithOverride(weapon, weaponSheet)\r\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {header ? header : <h5><b>{name}</b></h5>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(characterKey)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete(characterKey)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onEdit?.(characterKey)} className={onEdit ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={characterSheet.thumbImg} className={`thumb-big grad-${characterSheet.star}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h3 className=\"mb-0\">{Character.getLevelString(character, characterSheet, weaponSheet)} {`C${constellation}`}</h3>\r\n          <h5 className=\"mb-0\"><Stars stars={characterSheet.star} colored /></h5>\r\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = artifactSheets?.[key].name ?? \"\"\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = stats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      } as any}>Generate Builds</Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { strPadLeft } from \"./Util\"\r\n\r\nexport function msToUnits(ms) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nexport function timeString(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nexport function timeStringMs(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BuildWorker.4e8fb21d.worker.js\");\n}\n","import { faCheckSquare, faSortAmountDownAlt, faSortAmountUp, faSquare, faTimes, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, Image, InputGroup, ListGroup, Modal, OverlayTrigger, ProgressBar, Row, Tooltip } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BuildWorker\";\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../Artifact/Component/SetEffectDisplay';\r\nimport Character from '../Character/Character';\r\nimport CharacterCard from '../Character/CharacterCard';\r\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../Character/CharacterDisplay/DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from '../Character/CharacterDisplay/StatDisplayComponent';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport Formula from '../Formula';\r\nimport Stat from '../Stat';\r\nimport { IArtifact } from '../Types/artifact';\r\nimport { ArtifactsBySlot, BuildSetting } from '../Types/Build';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IFieldDisplay } from '../Types/IFieldDisplay';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { timeStringMs } from '../Util/TimeUtil';\r\nimport { crawlObject, deepClone, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport { calculateTotalBuildNumber } from './Build';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCard = lazy(() => import('../Character/CharacterDisplayCard'))\r\n\r\nconst warningBuildNumber = 10000000\r\nconst maxBuildsToShowList = [50, 25, 10, 5]\r\nconst maxBuildsToShowDefault = 25\r\nconst autoBuildGenLimit = 100\r\nconst artifactsSlotsToSelectMainStats: SlotKey[] = [\"sands\", \"goblet\", \"circlet\"]\r\nconst initialBuildSettings = (): BuildSetting => ({\r\n  setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n  statFilters: {},\r\n  mainStatKeys: [\"\", \"\", \"\"],\r\n  optimizationTarget: \"finalATK\",//TODO need to validate\r\n  mainStatAssumptionLevel: 0,\r\n  useLockedArts: false,\r\n  useEquippedArts: false,\r\n  ascending: false,\r\n})\r\n\r\nfunction buildSettingsReducer(state: BuildSetting, action): BuildSetting {\r\n  switch (action.type) {\r\n    case 'mainStatKey': {\r\n      const { index, mainStatKey } = action\r\n      state.mainStatKeys[index] = mainStatKey\r\n      return { ...state, mainStatKeys: [...state.mainStatKeys] }//do this because this is a dependency, so needs to be a \"new\" array\r\n    }\r\n    case `setFilter`: {\r\n      const { index, key, num = 0 } = action\r\n      state.setFilters[index] = { key, num }\r\n      return { ...state, setFilters: [...state.setFilters] }//do this because this is a dependency, so needs to be a \"new\" array\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\n\r\nexport default function BuildDisplay({ location: { characterKey: propCharacterKey } }) {\r\n  const [characterKey, setcharacterKey] = useState(\"\")\r\n  const [buildSettings, buildSettingsDispatch] = useReducer(buildSettingsReducer, initialBuildSettings())\r\n  const { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending, } = buildSettings\r\n\r\n  const [builds, setbuilds] = useState([] as any[])\r\n  const [maxBuildsToShow, setmaxBuildsToShow] = useState(maxBuildsToShowDefault)\r\n\r\n  const [modalBuild, setmodalBuild] = useState(null)//the newBuild that is being displayed in the character modal\r\n  const [showArtCondModal, setshowArtCondModal] = useState(false)\r\n  const [showCharacterModal, setshowCharacterModal] = useState(false)\r\n\r\n  const [generatingBuilds, setgeneratingBuilds] = useState(false)\r\n  const [generationProgress, setgenerationProgress] = useState(0)\r\n  const [generationDuration, setgenerationDuration] = useState(0)//in ms\r\n  const [generationSkipped, setgenerationSkipped] = useState(0)\r\n\r\n  const [charDirty, setCharDirty] = useForceUpdate()\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const isMounted = useRef(false)\r\n\r\n  const worker = useRef(null as Worker | null)\r\n\r\n  useEffect(() => ReactGA.pageview('/build'), [])\r\n\r\n  useEffect(() => {\r\n    CharacterDatabase.registerCharListener(characterKey, setCharDirty)\r\n    return () => { characterKey && CharacterDatabase.unregisterCharListener(characterKey, setCharDirty) }\r\n  }, [characterKey, setCharDirty])\r\n\r\n  //terminate worker when component unmounts\r\n  useEffect(() => () => worker.current?.terminate(), [])\r\n\r\n  //select a new character Key\r\n  const selectCharacter = useCallback((cKey = \"\") => {\r\n    if (characterKey === cKey) return\r\n    setcharacterKey(cKey)\r\n    CharacterDatabase.registerCharListener(cKey, setCharDirty)\r\n    buildSettingsDispatch({ ...initialBuildSettings(), ...(CharacterDatabase.get(cKey)?.buildSettings ?? {}) })\r\n    setbuilds([])\r\n    return () => CharacterDatabase.unregisterCharListener(cKey, setCharDirty)\r\n  }, [setCharDirty, setcharacterKey, buildSettingsDispatch, characterKey])\r\n\r\n  //load saved stat from DB. will cause infinite loop if add 'selectCharacter' to dependency array\r\n  useEffect(() => {//startup load from localStorage\r\n    if (!(\"BuildsDisplay.state\" in localStorage)) return\r\n    const { characterKey = \"\", maxBuildsToShow = maxBuildsToShowDefault } = loadFromLocalStorage(\"BuildsDisplay.state\") ?? {}\r\n    if (characterKey && CharacterDatabase.get(characterKey)) selectCharacter(characterKey)\r\n    setmaxBuildsToShow(maxBuildsToShow)\r\n  }, [])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => propCharacterKey && selectCharacter(propCharacterKey), [propCharacterKey, selectCharacter])//update when props update\r\n  const character = useMemo(() => charDirty && CharacterDatabase.get(characterKey), [characterKey, charDirty])\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheet = usePromise(WeaponSheet.get(character?.weapon?.key))\r\n  const initialStats = useMemo(() => charDirty && characterSheet && weaponSheet && Character.createInitialStats(character, characterSheet, weaponSheet), [character, charDirty, characterSheet, weaponSheet])\r\n  const statsDisplayKeys = useMemo(() => charDirty && characterSheet && characterSheet.getDisplayStatKeys(initialStats), [initialStats, charDirty, characterSheet])\r\n\r\n  //save build settings to character when buildSettings change, will cause infinite loop if add 'character' to dependency array\r\n  useEffect(() => {\r\n    if (!character) return\r\n    character.buildSettings = buildSettings\r\n    CharacterDatabase.update(character)\r\n  }, [buildSettings]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //save to BuildsDisplay.state on change\r\n  useEffect(() => {\r\n    if (isMounted.current) saveToLocalStorage(\"BuildsDisplay.state\", { characterKey, maxBuildsToShow })\r\n    else isMounted.current = true\r\n  }, [characterKey, maxBuildsToShow])\r\n\r\n\r\n  const { split, totBuildNumber } = useMemo(() => {\r\n    if (!characterKey) // Make sure we have all slotKeys\r\n      return { split: Object.fromEntries(allSlotKeys.map(slotKey => [slotKey, []])) as ArtifactsBySlot, totBuildNumber: 0 }\r\n    const artifactDatabase: { [id: string]: IArtifact } = deepClone(ArtifactDatabase.getArtifactDatabase())\r\n    Object.entries(artifactDatabase).forEach(([key, art]) => {\r\n      //if its equipped on the selected character, bypass the check\r\n      if (art.location === characterKey) return\r\n\r\n      if (art.lock && !useLockedArts) delete artifactDatabase[key]\r\n      else if (art.location && !useEquippedArts) delete artifactDatabase[key]\r\n    })\r\n    const split = Artifact.splitArtifactsBySlot(artifactDatabase);\r\n    //filter the split slots on the mainstats selected.\r\n    artifactsSlotsToSelectMainStats.forEach((slotKey, index) =>\r\n      mainStatKeys[index] && (split[slotKey] = split[slotKey]?.filter((art) => art.mainStatKey === mainStatKeys[index])))\r\n    const totBuildNumber = calculateTotalBuildNumber(split, setFilters)\r\n    return { split, totBuildNumber }\r\n  }, [characterKey, useLockedArts, useEquippedArts, mainStatKeys, setFilters])\r\n\r\n  const generateBuilds = useCallback((turbo = false) => {\r\n    if (!initialStats || !artifactSheets) return\r\n    if (typeof turbo !== \"boolean\") turbo = false\r\n    setbuilds([])\r\n    setgeneratingBuilds(true)\r\n    setgenerationDuration(0)\r\n    setgenerationProgress(0)\r\n    setgenerationSkipped(0)\r\n    //get the formula for this target\r\n\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    const artifactSetEffects = Artifact.setEffectsObjs(artifactSheets, initialStats)\r\n    const splitArtifacts = deepClone(split) as ArtifactsBySlot\r\n    //add mainStatVal to each artifact\r\n    Object.values(splitArtifacts).forEach(artArr => {\r\n      artArr!.forEach(art => {\r\n        art.mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(mainStatAssumptionLevel, art.numStars * 4), art.level)) ?? 0;\r\n      })\r\n    })\r\n    //generate the key dependencies for the formula\r\n    const minFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { min }]) => [statKey, min]).filter(([, min]) => typeof min === \"number\"))\r\n    const maxFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { max }]) => [statKey, max]).filter(([, max]) => typeof max === \"number\"))\r\n    //create an obj with app the artifact set effects to pass to buildworker.\r\n    const data = {\r\n      splitArtifacts, initialStats, artifactSetEffects,\r\n      setFilters, minFilters, maxFilters, maxBuildsToShow, optimizationTarget, ascending, turbo\r\n    };\r\n    worker.current?.terminate()\r\n    worker.current = new Worker()\r\n    worker.current.onmessage = (e) => {\r\n      if (typeof e.data.progress === \"number\") {\r\n        const { progress, timing = 0, skipped = 0 } = e.data\r\n        setgenerationProgress(progress)\r\n        setgenerationDuration(timing)\r\n        setgenerationSkipped(skipped)\r\n        return\r\n      }\r\n      ReactGA.timing({\r\n        category: \"Build Generation\",\r\n        variable: \"timing\",\r\n        value: e.data.timing,\r\n        label: totBuildNumber.toString()\r\n      })\r\n      const builds = e.data.builds.map(obj =>\r\n        Character.calculateBuildwithArtifact(initialStats, obj.artifacts, artifactSheets))\r\n      setbuilds(builds)\r\n      setgeneratingBuilds(false)\r\n      worker.current?.terminate()\r\n      worker.current = null\r\n    };\r\n    worker.current.postMessage(data)\r\n  }, [artifactSheets, split, totBuildNumber, mainStatAssumptionLevel, ascending, initialStats, maxBuildsToShow, optimizationTarget, setFilters, statFilters])\r\n\r\n  //try to generate build when build numbers are low\r\n  useEffect(() => {\r\n    if (totBuildNumber <= autoBuildGenLimit) generateBuilds()\r\n    else setbuilds([])\r\n  }, [characterKey, split, totBuildNumber, buildSettings, generateBuilds])\r\n\r\n  const dropdownitemsForStar = useCallback((star, index) => artifactSheets && ArtifactSheet.setsWithMaxRarity(artifactSheets, star).map(([setKey, setobj]) => {\r\n    if (setFilters.some(filter => filter.key === setKey)) return false;\r\n    const setsNumArr = Object.keys(artifactSheets?.[setKey]?.setEffects ?? {})\r\n    const artsAccountedOther = setFilters.reduce((accu, cur, ind) => (cur.key && ind !== index) ? accu + cur.num : accu, 0)\r\n    if (setsNumArr.every((num: any) => parseInt(num) + artsAccountedOther > 5)) return false;\r\n    return (<Dropdown.Item key={setKey} onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: setKey, num: parseInt(setsNumArr[0] as any) ?? 0 })} >\r\n      {setobj.name}\r\n    </Dropdown.Item>)\r\n  }), [setFilters, buildSettingsDispatch, artifactSheets])\r\n\r\n  const characterName = characterSheet?.name ?? \"Character Name\"\r\n  const characterDropDown = useMemo(() => <DropdownButton title={characterName} disabled={generatingBuilds}>\r\n    <Dropdown.Item onClick={() => selectCharacter(\"\")}>Unselect Character</Dropdown.Item>\r\n    <Dropdown.Divider />\r\n    <CharacterSelectionDropdownList onSelect={cKey => selectCharacter(cKey)} />\r\n  </DropdownButton>, [characterName, generatingBuilds, selectCharacter])\r\n\r\n  const formula = usePromise(Array.isArray(optimizationTarget) ? Formula.get(optimizationTarget) : undefined)\r\n  const sortByText = useMemo(() => {\r\n    if (Array.isArray(optimizationTarget) && formula) {\r\n      const field = (formula as any).field as IFieldDisplay\r\n      const variant = Character.getTalentFieldValue(field, \"variant\", initialStats)\r\n      const text = Character.getTalentFieldValue(field, \"text\", initialStats)\r\n      let [, , talentKey] = (formula as any).keys as string[]\r\n      if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n      return <b>{characterSheet?.getTalent(talentKey)?.name}: <span className={`text-${variant}`}>{text}</span></b>\r\n\r\n    } else return <b>Basic Stat: <span className={`text-${Stat.getStatVariant(optimizationTarget)}`}>{Stat.getStatNamePretty(optimizationTarget)}</span></b>\r\n    // return <Badge variant=\"danger\">INVALID</Badge>\r\n  }, [optimizationTarget, formula, initialStats, characterSheet])\r\n\r\n\r\n  const artsAccounted = setFilters.reduce((accu, cur) => cur.key ? accu + cur.num : accu, 0)\r\n  const artifactCondCount = useMemo(() => {\r\n    let count = 0;\r\n    crawlObject(initialStats?.conditionalValues?.artifact, [], v => Array.isArray(v), () => count++)\r\n    return count\r\n  }, [initialStats?.conditionalValues])\r\n  //rudimentary dispatcher, definitely not the same API as the real characterDispatch.\r\n  const characterDispatch = useCallback(val => CharacterDatabase.update({ ...character, ...val }), [character])\r\n\r\n  const hasMinFilters = Object.entries(statFilters).some(([statKey, { min }]) => typeof min === \"number\")\r\n  const hasMaxFilters = Object.entries(statFilters).some(([statKey, { max }]) => typeof max === \"number\")\r\n  const disabledTurbo = ascending ? hasMinFilters : hasMaxFilters\r\n\r\n  return <Container>\r\n    <BuildModal {...{ build: modalBuild, showCharacterModal, characterKey, selectCharacter, setmodalBuild, setshowCharacterModal }} />\r\n    {!!initialStats && <ArtConditionalModal {...{ showArtCondModal, setshowArtCondModal, initialStats, characterDispatch, artifactCondCount }} />}\r\n    <Row className=\"mt-2 mb-2\">\r\n      <Col>\r\n        {/* Build Generator Editor */}\r\n        <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n          <Card.Header>Build Generator</Card.Header>\r\n          <Card.Body>\r\n            <Row >\r\n              <Col xs={12} lg={6}>\r\n                {/* character selection */}\r\n                {characterKey ?\r\n                  <CharacterCard header={characterDropDown} characterKey={characterKey} bg={\"lightcontent\"} cardClassName=\"mb-2\" onEdit={!generatingBuilds ? () => setshowCharacterModal(true) : undefined} /> :\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                    <Card.Header>\r\n                      {characterDropDown}\r\n                    </Card.Header>\r\n                  </Card>}\r\n                {/* Hit mode options */}\r\n                {!!characterSheet?.hasTalentPage && <HitModeCard characterSheet={characterSheet} className=\"mb-2\" character={character} />}\r\n                {/* Final Stat Filter */}\r\n                {Boolean(statsDisplayKeys) && <StatFilterCard className=\"mb-2\" statFilters={statFilters} statKeys={statsDisplayKeys?.basicKeys as any} setStatFilters={sFs => buildSettingsDispatch({ statFilters: sFs })} />}\r\n              </Col>\r\n              <Col xs={12} lg={6}><Row>\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any}><Card.Body>\r\n                    <Button className=\"w-100\" onClick={() => setshowArtCondModal(true)} disabled={generatingBuilds}>\r\n                      <span>Default Artifact Set Effects {Boolean(artifactCondCount) && <Badge variant=\"success\">{artifactCondCount} Selected</Badge>}</span>\r\n                    </Button>\r\n                  </Card.Body></Card>\r\n                </Col>\r\n                {/* Artifact set picker */}\r\n                {setFilters.map(({ key: setKey, num: setNum }: { key: ArtifactSetKey, num: number }, index) => <Col className=\"mb-2\" key={index} xs={12}>\r\n                  <Card className=\"h-100\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n                    <Card.Header>\r\n                      <ButtonGroup>\r\n                        {/* Artifact set */}\r\n                        <DropdownButton as={ButtonGroup} title={artifactSheets?.[setKey]?.name ?? \"Artifact Set Filter\"} disabled={generatingBuilds}>\r\n                          <Dropdown.Item onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: \"\" })}>Unselect Artifact</Dropdown.Item>\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(5, index)}\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(4, index)}\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(3, index)}\r\n                        </DropdownButton>\r\n                        {/* set number */}\r\n                        <DropdownButton as={ButtonGroup} title={`${setNum}-set`}\r\n                          disabled={generatingBuilds || !setKey || artsAccounted >= 5}\r\n                        >\r\n                          {!!initialStats && Object.keys(artifactSheets?.[setKey]?.setEffects ?? {}).map((num: any) => {\r\n                            let artsAccountedOther = setFilters.reduce((accu, cur) => (cur.key && cur.key !== setKey) ? accu + cur.num : accu, 0)\r\n                            return (parseInt(num) + artsAccountedOther <= 5) &&\r\n                              (<Dropdown.Item key={num} onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: setFilters[index].key, num: parseInt(num) })} >\r\n                                {`${num}-set`}\r\n                              </Dropdown.Item>)\r\n                          })}\r\n                        </DropdownButton>\r\n                      </ButtonGroup>\r\n                    </Card.Header>\r\n                    {setKey ? <Card.Body><Row className=\"mb-n2\">\r\n                      {!!initialStats && Object.keys(artifactSheets?.[setKey].setEffects ?? {}).map(setNKey => parseInt(setNKey) as SetNum).filter(setNkey => setNkey <= setNum).map(setNumKey =>\r\n                        <SetEffectDisplay newBuild={undefined} key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild: initialStats, characterDispatch, editable: true }} />)}\r\n                    </Row></Card.Body> : null}\r\n                  </Card>\r\n                </Col>)}\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any}><Card.Body className=\"mb-n2\">\r\n                    <Button className=\"w-100 mb-2\" onClick={() => buildSettingsDispatch({ useEquippedArts: !useEquippedArts })} disabled={generatingBuilds}>\r\n                      <span><FontAwesomeIcon icon={useEquippedArts ? faCheckSquare : faSquare} /> Use Equipped Artifacts</span>\r\n                    </Button>\r\n                    <Button className=\"w-100 mb-2\" onClick={() => buildSettingsDispatch({ useLockedArts: !useLockedArts })} disabled={generatingBuilds}>\r\n                      <span><FontAwesomeIcon icon={useLockedArts ? faCheckSquare : faSquare} /> Use Locked Artifacts</span>\r\n                    </Button>\r\n                  </Card.Body></Card>\r\n                </Col>\r\n                {/* main stat selector */}\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n                    <Card.Header>\r\n                      <Row>\r\n                        <Col>Artifact Main Stat</Col>\r\n                        <Col xs=\"auto\"><AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={v => buildSettingsDispatch({ mainStatAssumptionLevel: v })} /></Col>\r\n                      </Row>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"mb-n2\">\r\n                      {artifactsSlotsToSelectMainStats.map((slotKey, index) =>\r\n                      (<div className=\"text-inline mb-1 d-flex justify-content-between\" key={slotKey}>\r\n                        <h6 className=\"d-inline mb-0\">\r\n                          {Artifact.slotNameWithIcon(slotKey)}\r\n                        </h6>\r\n                        <DropdownButton disabled={generatingBuilds} size=\"sm\"\r\n                          title={mainStatKeys[index] ? Stat.getStatNameWithPercent(mainStatKeys[index]) : \"Select a mainstat\"}\r\n                          className=\"d-inline\">\r\n                          <Dropdown.Item onClick={() => buildSettingsDispatch({ type: \"mainStatKey\", index, mainStatKey: \"\" })} >No MainStat</Dropdown.Item>\r\n                          {Artifact.slotMainStats(slotKey).map(mainStatKey =>\r\n                            <Dropdown.Item onClick={() => buildSettingsDispatch({ type: \"mainStatKey\", index, mainStatKey })} key={mainStatKey}>\r\n                              {Stat.getStatNameWithPercent(mainStatKey)}\r\n                            </Dropdown.Item>)}\r\n                        </DropdownButton>\r\n                      </div>))}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row></Col>\r\n            </Row>\r\n            <Row className=\"mb-2\">\r\n              <Col>{!!characterKey && <BuildAlert {...{ totBuildNumber, generatingBuilds, generationSkipped, generationProgress, generationDuration, characterName, maxBuildsToShow }} />}</Col>\r\n            </Row>\r\n            <Row className=\"d-flex justify-content-between\">\r\n              <Col xs=\"auto\" >\r\n                <ButtonGroup>\r\n                  <Button\r\n                    className=\"h-100\"\r\n                    disabled={!characterKey || generatingBuilds}\r\n                    variant={(characterKey && totBuildNumber <= warningBuildNumber) ? \"success\" : \"warning\"}\r\n                    onClick={generateBuilds}\r\n                  ><span>Generate Builds</span></Button>\r\n                  {totBuildNumber > warningBuildNumber && <OverlayTrigger\r\n                    overlay={<Tooltip id=\"turbo-tooltip\">\r\n                      <div>Dramatically speeds up build time.</div>\r\n                      <div>Yields only 1 build.</div>\r\n                      {Boolean(disabledTurbo) && <div className=\"mt-2\">Does not work with <b>{Boolean(ascending) ? 'min' : 'max'}imum</b> stat filter when sorting by <b>{Boolean(ascending) ? 'as' : 'des'}cending</b></div>}\r\n                    </Tooltip>}\r\n                  ><span >\r\n                      <Button variant=\"success\" disabled={disabledTurbo} className={`rounded-0 ${disabledTurbo ? \"cursor-pointer\" : \"\"}`} onClick={() => generateBuilds(true)}><strong>TURBO</strong></Button>\r\n                    </span></OverlayTrigger>}\r\n                  <Button\r\n                    className=\"h-100\"\r\n                    disabled={!generatingBuilds}\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                      if (!worker.current) return;\r\n                      worker.current.terminate();\r\n                      worker.current = null\r\n                      setgeneratingBuilds(false)\r\n                      setbuilds([])\r\n                      setgenerationDuration(0)\r\n                      setgenerationProgress(0)\r\n                      setgenerationSkipped(0)\r\n                    }}\r\n                  ><span>Cancel</span></Button>\r\n                </ButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                {/* Dropdown to select sorting value */}\r\n                {<ButtonGroup>\r\n                  <Dropdown as={ButtonGroup} drop=\"up\">\r\n                    <Dropdown.Toggle disabled={generatingBuilds} variant=\"success\" >\r\n                      <span>Sort by {sortByText}</span>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu align=\"right\" style={{ minWidth: \"40rem\" }} >\r\n                      <Row>\r\n                        {!!statsDisplayKeys && Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n                          let header = \"\"\r\n                          if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n                          else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n                          else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n                          else header = (characterSheet?.getTalent(talentKey)?.name ?? talentKey as string)\r\n                          return <Col xs={12} md={6} key={talentKey}>\r\n                            <Dropdown.Header style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}><b>{header}</b></Dropdown.Header>\r\n                            {fields.map((target, i) => {\r\n                              if (Array.isArray(target))\r\n                                return <TargetSelectorDropdownItem key={i} {...{ target, buildSettingsDispatch, initialStats }} />\r\n                              else if (typeof target === \"string\")\r\n                                return <Dropdown.Item key={i} onClick={() => buildSettingsDispatch({ optimizationTarget: target })}>{Stat.getStatNamePretty(target)}</Dropdown.Item>\r\n                              return null\r\n                            })}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                  <Button onClick={() => buildSettingsDispatch({ ascending: !buildSettings.ascending })} disabled={generatingBuilds} variant={ascending ? \"danger\" : \"primary\"}>\r\n                    <FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />\r\n                    <span>{ascending ? \"Ascending\" : \"Descending\"}</span>\r\n                  </Button>\r\n                </ButtonGroup >}\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-2\">\r\n      <Col>\r\n        <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>{characterKey ? <span>Showing <b>{builds.length}</b> Builds generated for {characterName}</span> : <span>Select a character to generate builds.</span>}</Col>\r\n              <Col xs=\"auto\">\r\n                <DropdownButton title={<span>Max builds to show: <b>{maxBuildsToShow}</b></span>} size=\"sm\">\r\n                  {maxBuildsToShowList.map(v => <Dropdown.Item key={v} onClick={() => setmaxBuildsToShow(v)}>{v}</Dropdown.Item>)}\r\n                </DropdownButton>\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          {/* Build List */}\r\n          <ListGroup>\r\n            {builds.map((build, index) =>\r\n              index < maxBuildsToShow && characterSheet && weaponSheet && <ArtifactDisplayItem characterSheet={characterSheet} weaponSheet={weaponSheet} build={build} characterKey={characterKey} index={index} key={index} statsDisplayKeys={statsDisplayKeys} onClick={() => setmodalBuild(build as any)} />\r\n            )}\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container >\r\n}\r\n\r\nfunction TargetSelectorDropdownItem({ target, buildSettingsDispatch, initialStats }) {\r\n  const formula = usePromise(Formula.get(target))\r\n  if (!formula) return null\r\n  const talentField = (formula as any).field as IFieldDisplay\r\n  return <Dropdown.Item onClick={() => buildSettingsDispatch({ optimizationTarget: target })} style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}>\r\n    <span className={`text-${Character.getTalentFieldValue(talentField, \"variant\", initialStats)}`}>{Character.getTalentFieldValue(talentField, \"text\", initialStats)}</span>\r\n  </Dropdown.Item>\r\n}\r\n\r\nfunction BuildModal({ build, showCharacterModal, characterKey, selectCharacter, setmodalBuild, setshowCharacterModal }) {\r\n  const closeModal = useCallback(() => {\r\n    setmodalBuild(null)\r\n    setshowCharacterModal(false)\r\n  }, [setmodalBuild, setshowCharacterModal])\r\n  return <Modal show={Boolean(showCharacterModal || build)} onHide={closeModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n    <React.Suspense fallback={<span>Loading...</span>}>\r\n      <CharacterDisplayCard\r\n        character={undefined}\r\n        tabName={undefined}\r\n        characterKey={characterKey}\r\n        setCharacterKey={cKey => selectCharacter(cKey)}\r\n        newBuild={build}\r\n        onClose={closeModal}\r\n        editable={showCharacterModal}\r\n        footer={<Button variant=\"danger\" onClick={closeModal}>Close</Button>} />\r\n    </React.Suspense>\r\n  </Modal>\r\n}\r\n\r\nfunction ArtConditionalModal({ showArtCondModal, setshowArtCondModal, initialStats, characterDispatch, artifactCondCount }) {\r\n  const closeArtCondModal = useCallback(() => setshowArtCondModal(false), [setshowArtCondModal])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  if (!artifactSheets) return null\r\n  const artSetKeyList = ArtifactSheet.namesByMaxRarities(artifactSheets).flatMap(([, items]) => items.map(([key]) => [key, artifactSheets[key]] as const))\r\n  return <Modal show={showArtCondModal} onHide={closeArtCondModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <h5>Default Artifact Set Effects  {Boolean(artifactCondCount) && <Badge variant=\"success\">{artifactCondCount} Selected</Badge>}</h5>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button onClick={() => {\r\n              if (initialStats.conditionalValues.artifact) initialStats.conditionalValues.artifact = {}\r\n              characterDispatch({ conditionalValues: initialStats.conditionalValues })\r\n            }}><span><FontAwesomeIcon icon={faUndo} /> Reset All</span></Button>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={closeArtCondModal}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          {artSetKeyList.map(([setKey, sheet]) => {\r\n            let icon = Object.values(sheet.slotIcons)[0]\r\n            let numStars = [...sheet.rarity][0]\r\n            return <Col className=\"mb-2\" key={setKey} xs={12} lg={6} xl={4}>\r\n              <Card className=\"h-100\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n                <Card.Header >\r\n                  <Row>\r\n                    <Col xs=\"auto\" className=\"ml-n3 my-n2\">\r\n                      <Image src={icon} className={`thumb-mid grad-${numStars}star m-1`} thumbnail />\r\n                    </Col>\r\n                    <Col >\r\n                      <h6><b>{artifactSheets?.[setKey].name ?? \"\"}</b></h6>\r\n                      <span><Stars stars={numStars} /></span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Header>\r\n                <Card.Body><Row className=\"mb-n2\">\r\n                  {Boolean(setKey) && Object.keys(sheet.setEffects).map(key => parseInt(key) as SetNum).map(setNumKey =>\r\n                    <SetEffectDisplay newBuild={undefined} key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild: initialStats, editable: true, characterDispatch, }} />)}\r\n                </Row></Card.Body>\r\n              </Card>\r\n            </Col>\r\n          })}\r\n        </Row>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"danger\" onClick={closeArtCondModal}>\r\n          <FontAwesomeIcon icon={faTimes} /> CLOSE</Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nfunction StatFilterItem({ statKey, statKeys = [], min, max, close, setFilter }: {\r\n  statKey?, statKeys, min, max, close, setFilter\r\n}) {\r\n  const isFloat = Stat.getStatUnit(statKey) === \"%\"\r\n  const inputProps = {\r\n    disabled: !statKey,\r\n    allowEmpty: true,\r\n    float: isFloat,\r\n  }\r\n  const minInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MIN\",\r\n    value: min,\r\n    onChange: (s) => setFilter(statKey, s, max)\r\n  }\r\n  const maxInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MAX\",\r\n    value: max,\r\n    onChange: (s) => setFilter(statKey, min, s)\r\n  }\r\n  return <InputGroup className=\"mb-2\">\r\n    <DropdownButton\r\n      as={InputGroup.Prepend}\r\n      title={Stat.getStatNamePretty(statKey, \"New Stat\")}\r\n      id=\"input-group-dropdown-1\"\r\n    >\r\n      {statKeys.map(sKey => <Dropdown.Item key={sKey} onClick={() => { close?.(); setFilter(sKey, min, max) }}>{Stat.getStatNamePretty(sKey)}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <CustomFormControl {...minInputProps} />\r\n    <CustomFormControl {...maxInputProps} />\r\n    {Boolean(close) && <InputGroup.Append>\r\n      <Button variant=\"danger\" onClick={close}><FontAwesomeIcon icon={faTrash} /></Button>\r\n    </InputGroup.Append>}\r\n  </InputGroup>\r\n}\r\n\r\nfunction HitModeCard({ characterSheet, character, className }: { characterSheet: CharacterSheet, character: ICharacter, className: string }) {\r\n  const setHitmode = useCallback(({ hitMode }) => CharacterDatabase.update({ ...character, hitMode }), [character])\r\n  const setReactionMode = useCallback(({ reactionMode }) => CharacterDatabase.update({ ...character, reactionMode }), [character])\r\n  const setInfusionAura = useCallback(({ infusionAura }) => CharacterDatabase.update({ ...character, infusionAura }), [character])\r\n  if (!character) return null\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className={className}>\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>Hit Mode Options</Col>\r\n        <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character} characterDispatch={setInfusionAura} /></Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"mb-n2\">\r\n      <HitModeToggle hitMode={character.hitMode} characterDispatch={setHitmode} className=\"w-100 mb-2\" />\r\n      <ReactionToggle characterSheet={characterSheet} character={character} characterDispatch={setReactionMode} className=\"w-100 mb-2\" />\r\n    </Card.Body>\r\n  </Card >\r\n}\r\n\r\nfunction StatFilterCard({ statKeys = [], statFilters = {}, setStatFilters, className }) {\r\n  const remainingKeys = statKeys.filter(key => !(Object.keys(statFilters) as any).some(k => k === key))\r\n  const setFilter = (sKey, min, max) => setStatFilters({ ...statFilters, [sKey]: { min, max } })\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className={className}>\r\n    <Card.Header>Final Stat Filter</Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-n2\">\r\n        {(Object.entries(statFilters) as [string, { min, max }][]).map(([statKey, { min, max }]) => {\r\n          return <Col xs={12} key={statKey} ><StatFilterItem statKey={statKey} statKeys={remainingKeys} setFilter={setFilter} min={min} max={max} close={() => {\r\n            delete statFilters[statKey]\r\n            setStatFilters({ ...statFilters })\r\n          }} /></Col>\r\n        })}\r\n        <Col xs={12}>\r\n          <StatFilterItem min={undefined} max={undefined} close={undefined} statKeys={remainingKeys} setFilter={setFilter} />\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\ntype ArtifactDisplayItemProps = { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, index: number, characterKey: string, build: ICalculatedStats, statsDisplayKeys: any, onClick: () => void }\r\n//for displaying each artifact build\r\nfunction ArtifactDisplayItem({ characterSheet, weaponSheet, index, characterKey, build, statsDisplayKeys, onClick }: ArtifactDisplayItemProps) {\r\n  const sheets = usePromise(ArtifactSheet.getAll())\r\n  return (<div>\r\n    <ListGroup.Item\r\n      variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"text-white\" action\r\n      onClick={onClick}\r\n    >\r\n      <h5>{(Object.entries(build.setToSlots) as [ArtifactSetKey, SlotKey[]][]).sort(([key1, slotarr1], [key2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n        <Badge key={key} variant=\"primary\" className=\"mr-2\">\r\n          {slotarr.map(slotKey => Artifact.slotIcon(slotKey))} {sheets?.[key].name ?? \"\"}\r\n        </Badge>\r\n      )}</h5>\r\n      <StatDisplayComponent editable={false} {...{ characterSheet, weaponSheet, character: CharacterDatabase.get(characterKey), newBuild: build, statsDisplayKeys, cardbg: (index % 2 ? \"lightcontent\" : \"darkcontent\") }} />\r\n    </ListGroup.Item>\r\n  </div>)\r\n}\r\n\r\nfunction BuildAlert({ totBuildNumber, generatingBuilds, generationSkipped, generationProgress, generationDuration, characterName, maxBuildsToShow }) {\r\n  const totalBuildNumberString = totBuildNumber?.toLocaleString() ?? totBuildNumber\r\n  const totalUnskipped = totBuildNumber - generationSkipped\r\n  const generationProgressString = generationProgress?.toLocaleString() ?? generationProgress\r\n  const generationSkippedString = generationSkipped?.toLocaleString() ?? generationSkipped\r\n  const totalUnskippedString = totalUnskipped?.toLocaleString() ?? totalUnskipped\r\n  const generationSkippedText = Boolean(generationSkipped) && <span>(<b>{generationSkippedString}</b> skipped)</span>\r\n  if (generatingBuilds) {\r\n    let progPercent = generationProgress * 100 / (totalUnskipped)\r\n    return <Alert variant=\"success\">\r\n      <span>Generating and testing <b className=\"text-monospace\">{generationProgressString}/{totalUnskippedString}</b> build configurations against the criteria for <b>{characterName}</b>. {generationSkippedText}</span><br />\r\n      <h6>Time elapsed: <strong className=\"text-monospace\">{timeStringMs(generationDuration)}</strong></h6>\r\n      <ProgressBar now={progPercent} label={`${progPercent.toFixed(1)}%`} />\r\n    </Alert>\r\n  } else if (!generatingBuilds && generationProgress) {//done\r\n    return <Alert variant=\"success\">\r\n      <span>Generated and tested <b className=\"text-monospace\">{totalUnskippedString}</b> Build configurations against the criteria for <b>{characterName}</b>. {generationSkippedText}</span>\r\n      <h6>Total duration: <strong className=\"text-monospace\">{timeStringMs(generationDuration)}</strong></h6>\r\n      <ProgressBar now={100} variant=\"success\" label=\"100%\" />\r\n    </Alert>\r\n  } else {\r\n    return totBuildNumber === 0 ?\r\n      <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will not generate any builds for <b>{characterName}</b>. Please change your Artifact configurations, or add/unlock more Artifacts.</span></Alert>\r\n      : (totBuildNumber > warningBuildNumber ?\r\n        <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will generate <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>. This might take quite a while to generate...</span></Alert> :\r\n        <Alert variant=\"success\" className=\"mb-0\"><span>Current configuration {totBuildNumber <= maxBuildsToShow ? \"generated\" : \"will generate\"} <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>.</span></Alert>)\r\n  }\r\n}\r\n\r\nconst levels = {\r\n  0: <span>No level assumption</span>,\r\n  4: <span>Assume at least level 4</span>,\r\n  8: <span>Assume at least level 8</span>,\r\n  12: <span>Assume at least level 12</span>,\r\n  16: <span>Assume at least level 16</span>,\r\n  20: <span>Assume at least level 20</span>\r\n}\r\nfunction AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel }) {\r\n  return <OverlayTrigger overlay={<Tooltip id=\"assume-level-tooltip\">Change Main Stat value to be at least a specific level. Does not change substats.</Tooltip>}  >\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant={mainStatAssumptionLevel ? \"orange\" : \"primary\"}>{levels[mainStatAssumptionLevel]}</Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        {Object.entries(levels).map(([key, text]) => <Dropdown.Item key={key} onClick={() => setmainStatAssumptionLevel(parseInt(key))}>{text}</Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  </OverlayTrigger>\r\n}\r\n","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","import ElementalData from \"../Data/ElementalData\"\r\nimport { StatKey, StatDict, IArtifact, SubstatKey } from \"../Types/artifact\"\r\nimport { ArtifactSetEffects, PrunedArtifactSetEffects, ArtifactsBySlot, SetFilter } from \"../Types/Build\"\r\nimport { ArtifactSetKey } from \"../Types/consts\"\r\n\r\n/**\r\n * Remove artifacts that can never be used in optimized builds\r\n * @param {artifact[]} artifacts - List of artifacts of the same slot\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - The list of the set effects\r\n * @param {Set.<statKey>} significantStats - A set of stats that pruning needs to take into consideration\r\n * @param {bool} ascending - Whether the sorting is ascending or descending\r\n * @param {Set.<setKey>} alwaysAccepted - The list of artifact sets that are always included\r\n */\r\nexport function pruneArtifacts(artifacts: IArtifact[], artifactSetEffects: ArtifactSetEffects, significantStats: Set<StatKey>, ascending: boolean = false, alwaysAccepted: Set<ArtifactSetKey> = new Set()): IArtifact[] {\r\n  function shouldKeepFirst(first: StatDict, second: StatDict, preferFirst: boolean) {\r\n    let firstBetter = Object.entries(first).some(([k, v]) => v! > (second[k] ?? 0))\r\n    let secondBetter = Object.entries(second).some(([k, v]) => v! > (first[k] ?? 0))\r\n    if (ascending) [firstBetter, secondBetter] = [secondBetter, firstBetter]\r\n    // Keep if first is strictly better, uncomparable, or equal + prefer first\r\n    return firstBetter || (!secondBetter && preferFirst)\r\n  }\r\n\r\n  // Prune unused set effects. Sets with no relevant effects are regrouped to \"other\"\r\n  const prunedSetEffects: PrunedArtifactSetEffects = { \"other\": {} }\r\n  for (const set in artifactSetEffects)\r\n    for (const num in artifactSetEffects[set]) {\r\n      const effects = Object.entries(artifactSetEffects[set]![num]).filter(([key]) => significantStats.has(key as StatKey))\r\n      if (effects.length > 0) {\r\n        prunedSetEffects[set] = prunedSetEffects[set] ?? {}\r\n        prunedSetEffects[set]![num] = Object.fromEntries(effects)\r\n      }\r\n    }\r\n\r\n  // array of artifacts, artifact stats, and set (may be \"other\")\r\n  let tmp: { artifact: IArtifact, stats: Dict<StatKey, number>, set: ArtifactSetKey | \"other\" }[] = artifacts.map(artifact => {\r\n    let stats = {}, set: ArtifactSetKey | \"other\" = (artifact.setKey in prunedSetEffects) ? artifact.setKey : \"other\"\r\n    if (significantStats.has(artifact.mainStatKey as any))\r\n      stats[artifact.mainStatKey] = artifact.mainStatVal\r\n    for (const { key, value } of artifact.substats)\r\n      if (significantStats.has(key as SubstatKey))\r\n        stats[key] = (stats[key] ?? 0) + value\r\n    for (const key in stats)\r\n      if (key.endsWith(\"enemyRes_\"))\r\n        stats[key] = -stats[key]\r\n    return { artifact, stats, set }\r\n  })\r\n\r\n  // Compare artifacts' base stats from the same set\r\n  tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) =>\r\n    tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) =>\r\n      candidateSet !== otherSet || shouldKeepFirst(candidateStats, otherStats, candidate.id! <= other.id!)\r\n    ))\r\n\r\n  if (!ascending) {\r\n    // Cross-check with different sets\r\n    tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) => {\r\n      // Possible \"additional stats\" if a build equips `candidate` on an empty slot.\r\n      let possibleStats = [...Object.values(prunedSetEffects[candidateSet]!), {}].map(c => {\r\n        const current: Dict<string, number> = { ...candidateStats }\r\n        Object.entries(c).forEach(([key, value]: any) => current[key] = (current[key] ?? 0) + (value ?? 0))\r\n        return current\r\n      })\r\n      return tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) => {\r\n        if (candidateSet === otherSet) return true // Already checked same-set\r\n\r\n        // Remove possibilities that shouldn't be kept\r\n        possibleStats = possibleStats.filter(current =>\r\n          shouldKeepFirst(current, otherStats, candidate.id! <= other.id!))\r\n        return possibleStats.length !== 0\r\n      })\r\n    })\r\n  }\r\n  // Reinstate `alwaysAccepted`\r\n  return [\r\n    ...artifacts.filter(artifact => alwaysAccepted.has(artifact.setKey)),\r\n    ...tmp.map(tmp => tmp.artifact).filter(artifact => !alwaysAccepted.has(artifact.setKey)),\r\n  ]\r\n}\r\n\r\n/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet: { [setKey in ArtifactSetKey]?: IArtifact[] } = {}\r\n    for (const artifact of (artifactsBySlot[slotKey] as any)) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey]!.push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet['null']) artifactsBySet['null'].push(artifact)\r\n        else artifactsBySet['null'] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu: ArtifactsBySlot = {}, result: ArtifactsBySlot[] = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1]!.length, 1)\r\n    , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats, artifactsBySlot: ArtifactsBySlot, artifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\r\n  function slotPerm(index, stats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    let slotKey = slotKeys[index]\r\n    for (const artifact of (artifactsBySlot[slotKey] as any)) {\r\n      let newStats = { ...stats }\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey, art: IArtifact, setCount, accu, stats, artifactSetEffects) {\r\n  let setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n\r\n  // Add artifact stats\r\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal\r\n  art.substats.forEach((substat) => {\r\n    if (substat?.key in stats) stats[substat.key] += substat.value\r\n  })\r\n\r\n  // Add set effects\r\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\r\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]: any) => {\r\n    if (statKey in stats) stats[statKey] += val\r\n  })\r\n}\r\n\r\n/**\r\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\r\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\r\n  * @param {*} stats - The calcualted stats\r\n  * @param {*} useCharElement - Override the hit to be the character's elemental, that is not part of infusion.\r\n  */\r\nexport function getTalentStatKey(skillKey, stats, useCharElement = false) {\r\n  const { hitMode = \"\", infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if ((Object.keys(ElementalData) as any).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\r\n  if (!useCharElement) useCharElement = weaponType === \"catalyst\"\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || useCharElement) {\r\n    if (reactionMode && reactionMode.startsWith(characterEle)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n    return `${characterEle}_${skillKey}_${hitMode}`\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n\r\n  return `${eleKey}_${skillKey}_${hitMode}`\r\n}\r\n\r\nexport function getTalentStatKeyVariant(skillKey, stats, useCharElement = false) {\r\n  if ((Object.keys(ElementalData) as any).includes(skillKey)) return skillKey//elemental DMG\r\n  const { infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (!useCharElement) useCharElement = weaponType === \"catalyst\"\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || useCharElement) {\r\n    if (reactionMode && reactionMode.startsWith(characterEle)) {\r\n      if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n      else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n    }\r\n    return characterEle\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) {\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n  }\r\n  return eleKey\r\n}\r\n"],"sourceRoot":""}