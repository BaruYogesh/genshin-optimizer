{"version":3,"sources":["Character/Character.ts","Artifact/ArtifactSheet.tsx","Character/CharacterSheet.ts","Util/FieldUtil.tsx","Data/ElementalData.ts","StatData.ts","Character/CharacterDisplay/Components/FieldDisplay.tsx","Assets/Element_Anemo.png","Assets/Assets.ts","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.tsx","Conditional/Conditional.ts","Weapon/WeaponSheet.ts","Components/CustomFormControl.tsx","Components/StatIcon.tsx","Formula.ts","Components/SlotIcon.ts","Data/ArtifactData.ts","Data/ArtifactLookupTable.ts","Artifact/Artifact.tsx","Conditional/ConditionalSelector.tsx","Character/CharacterDisplay/Components/ConditionalDisplay.tsx","Data/WeaponData.ts","Weapon/Weapon.ts","StatConstants.ts","Components/CharacterSelection.tsx","Util/UIUtil.ts","Components/StatDisplay.tsx","Character/StatInput.tsx","Artifact/ArtifactCard.tsx","Artifact/PercentBadge.tsx","StatDependency.ts","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx","Components/WIPComponent.tsx","Data/CharacterData.ts","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Character/CharacterDisplay/DamageOptionsAndCalculation.tsx","Components/InfoComponent.tsx","Character/CharacterCard.tsx","Util/TimeUtil.ts","../node_modules/react-bootstrap/esm/ProgressBar.js","Build/BuildWorker.ts","Build/BuildDisplay.tsx","Stat.tsx","Build/Build.ts","Util/ReactUtil.ts"],"names":["Character","this","Error","characterKey","character","CharacterDatabase","get","Object","values","equippedArtifacts","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getElementalName","elementalKey","defVal","ElementalData","name","getlevelKeys","keys","LevelsData","getlevelTemplateName","levelKey","getLevelString","characterSheet","weaponSheet","levelOverride","getStatValueWithOverride","getLevel","getIndexFromlevelkey","indexOf","level","getAscension","asend","getTalentFieldValue","field","key","stats","evalIfFunc","hasOverride","statKey","baseStatOverrides","getBaseStatValue","characetSheet","specializeStat","value","Weapon","getWeaponMainStatValWithOverride","weapon","includes","characterStatBase","baseStat","equipArtifacts","artIds","artIdsOnCharacter","allSlotKeys","slotKey","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifactOnSlot","equipArtifactBuild","calculateBuild","artifactSheets","artifacts","mainStatAssumptionLevel","fromEntries","map","art","i","entries","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","mainStatKey","mainStatValue","numStars","Math","max","min","substats","substat","stat","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","length","condStats","resolve","val","dependencies","GetDependencies","modifiers","PreprocessFormulas","formula","mergeStats","modifier","mkey","multiplier","undefined","hitMode","infusionAura","reactionMode","talentLevelKeys","constellation","ascension","statKeys","characterEle","elementKey","weaponType","weaponTypeKey","tlvl","allElements","eleKey","overrides","hasOwnProperty","specializedStatVal","specialStatKey","getTalentStatsAll","s","weaponSubKey","getWeaponSubstatKey","getWeaponSubstatValWithOverride","weaponCond","otherCond","artifactImport","then","imp","default","set","promiseSheets","allArtifactSets","sheets","data","rarity","pieces","icons","setEffects","conditionals","num","setNum","text","effects","grouped","sheet","push","allRarities","filter","charStats","artifactSetEffect","slots","charImport","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","isAutoElemental","isMelee","getTalent","talentKey","talent","getTalentStats","split","constell","talents","statsArr","talentStats","getDisplayStatKeys","basicKeys","transReactions","ElementToReactionKeys","Formula","formulas","charFormulas","canShow","genericAvgHit","reactions","startsWith","replace","cardImg","thumbImg","star","constellationName","Boolean","getAll","modifiersToFields","mStatKey","Stat","getStatName","variant","getStatVariant","reduce","accu","formulaText","printStat","toFixed","fixed","fixedUnit","unit","getStatUnit","statsToFields","statVals","statVal","className","StatIconEle","flat","fieldProcessing","physical","anemo","geo","electro","hydro","pyro","cryo","StatData","characterHP","pretty","const","characterDEF","characterATK","characterLevel","weaponATK","baseATK","hp","hp_","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","ele","hitElements","dendro","dependencyKeys","debug","constData","formulaList","tmp","constModifier","k","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","func","console","log","error","assign","hitMoves","move","moveName","clamp","eleName","opt","res","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","FieldDisplay","index","equippedBuild","newBuild","compareAgainstEquipped","useContext","compareAgainstEquippedContext","useMemo","fixedVal","fieldVal","retVal","fieldEquippedVal","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","icon","faQuestionCircle","style","cursor","Item","Assets","elements","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","faStar","Stars","stars","colored","Array","_","processed","Promise","all","addConditional","weaponImport","setObj","setNumObj","source","findConditionals","obj","callback","condKey","states","state","maxStack","fields","layeredAssignment","objPathValue","stacks","stateKey","conditionalStats","objMultiplication","crawlObject","isArray","WeaponSheet","loadWeaponSheet","allWeaponKeys","build","img","passiveName","desc","passiveDescription","description","baseStats","weaponKey","getWeaponsOfType","CustomFormControl","onChange","disabled","float","placeholder","allowEmpty","useState","setstate","stateDirty","setstateDirty","sendChange","useCallback","parseFunc","parseFloat","useEffect","aria-label","e","target","onBlur","onKeyDown","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","formulaImport","src","f","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubstatsData","ArtifactSubstatsMinMax","getArrLastElement","ArtifactSlotsData","ArtifactSubstatLookupTable","errors","allSubstatRolls","total","substatRolls","getSubstatRolls","Set","roll","size","rolls","efficiency","getSubstatEfficiency","getStatNameWithPercent","find","some","minimum","rollInfo","low","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accurateValue","sum","cur","getArtifactEfficiency","currentEfficiency","maximumEfficiency","current","totalRolls","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","slotName","slotIcon","slotNameWithIcon","slotMainStats","setEffectsObjs","result","setEffect","setEffectObj","setStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","endsWith","high","numUpgrades","maxSubstatValues","getSubstatKeys","substatCloseEnough","value1","value2","closeEnoughFloat","closeEnoughInt","ceil","getSubstatRollData","substatKey","substatValue","rollData","table","lookupValue","a","b","clampPercent","ConditionalSelector","setConditional","conditionalNum","conditionalStateKey","badge","Badge","Dropdown","Toggle","whiteSpace","Menu","onClick","condial","Fragment","v","stack","Button","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","editable","fieldClassName","conditionalFields","displayFields","condV","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","WeaponLevelKeys","LevelNameData","WeaponTypeData","getLevelName","getLevelIndex","getWeaponMainStatVal","main","getWeaponSubstatVal","sub","getWeaponTypeName","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","DropDownItem","usePromise","valueString","round","DisplayStatDiff","label","oldVal","oldText","diffText","xs","StatDisplay","invalid","labelVariant","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Prepend","Text","Append","pointerEvents","faUndo","ArtifactCard","artifactObj","onEdit","onDelete","useForceUpdate","forceUpdateHook","registerArtListener","unregisterArtListener","equipOnChar","equipArtifactOnChar","substatsValidation","lock","mainStatLevel","mainStatVal","artifactValid","locationName","border","md","slotIcons","thumbnail","slotNames","Body","Title","numRolls","effOpacity","statName","opacity","valid","Footer","Divider","setLocked","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","badgeColor","GetFormulaDependency","dependency","Proxy","prop","receiver","add","formulaKeyDependency","freeze","InsertDependencies","has","artLayoutSize","lg","CharacterArtifactPane","history","useHistory","edit","pathname","artToEditId","equipArts","window","confirm","unequipArts","sKey","StatDisplayComponent","statsDisplayKeys","Alert","Row","Col","setNumKeyArr","SetEffectDisplay","CharacterOverviewPane","editLevel","setEditLevel","Img","Image","InputGroup","OverlayTrigger","Tooltip","faSave","roundedCircle","WeaponStatsEditorCard","MainStatsCards","WeaponStatsCard","title","statsVals","WeaponStatsEditorCardWeaponDropdown","setStateWeapon","weaponSheets","DropdownButton","reverse","arr","ItemText","editing","SetEditing","showDescription","setShowDescription","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","faQuoteLeft","refineIndex","faGavel","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","miscStatkeys","specializedStatKey","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","as","CharacterSpecializedStatKey","getStatNameRaw","xl","CharacterTalentPane","props","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","crystalizeEleToDisplay","charEleKey","eleInterArr","Ele","talentLimits","header","talentLvlKey","talentLvlKeyRaw","levelBoost","newTalentLevelKey","statsEle","Subtitle","document","section","talentText","createContext","CustomMenu","React","forwardRef","ref","children","labeledBy","minWidth","aria-labelledby","Children","toArray","child","initialCharacter","auto","buildSettings","characterReducer","action","CharacterDisplayCard","propCharacterKey","propCharacter","propSetCharacterKey","setCharacterKey","footer","propNewBuild","onClose","tabName","useReducer","setcompareAgainstEquipped","firstUpdate","useRef","char","update","newCKey","flexArts","commonPaneProps","DamageOptionsAndCalculationEle","hasTalentPage","DamageOptionsAndCalculation","CharSelectDropdown","ButtonGroup","faTimes","Provider","Tab","Container","defaultActiveKey","mountOnEnter","unmountOnExit","Nav","fill","Link","eventKey","WIPComponent","Content","Pane","HeaderIconDisplay","CharDropdownItem","lvlKey","setEffectText","setEffectTexts","setNumStats","setStatsFields","setEffectConditionals","ckey","cardbg","sectionValues","JSON","stringify","infusionVals","InfusionAuraDropdown","ReactionToggle","HitModeToggle","CalculationDisplay","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","Collapse","subKey","printFormula","formulaField","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","currentEventKey","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","href","rel","immunityStatKey","elementImmunity","InfoComponent","pageKey","modalTitle","loadFromLocalStorage","showInfoModal","setshowInfoModal","getRandomElementFromArray","displayText","closeModal","infoShown","saveToLocalStorage","show","onHide","contentClassName","fallback","animation","CharacterCard","cardClassName","forceUpdate","registerCharListener","unregisterCharListener","weaponName","weaponMainVal","weaponSubVal","weaponLevelName","artifactSetName","highestNum","to","msToUnits","ms","milliseconds","seconds","minutes","hours","timeString","timeText","strPadLeft","timeStringMs","getPercentage","now","percentage","renderProgressBar","_ref","_classNames","srOnly","striped","animated","bsPrefix","_objectWithoutPropertiesLoose","createElement","_extends","role","classNames","width","ProgressBar","_ref2","isChild","useBootstrapPrefix","wrapperProps","cloneElement","displayName","defaultProps","Worker_fn","Worker","InfoDisplay","lazy","warningBuildNumber","maxBuildsToShowList","artifactsSlotsToSelectMainStats","buildSettingsReducer","mainStatKeys","setFilters","BuildDisplay","setcharacterKey","statFilters","optimizationTarget","useLockedArts","useEquippedArts","ascending","buildSettingsDispatch","builds","setbuilds","maxBuildsToShow","setmaxBuildsToShow","modalBuild","setmodalBuild","showArtCondModal","setshowArtCondModal","showCharacterModal","setshowCharacterModal","generatingBuilds","setgeneratingBuilds","generationProgress","setgenerationProgress","generationDuration","setgenerationDuration","generationSkipped","setgenerationSkipped","charDirty","setCharDirty","artsDirty","setArtsDirty","isMounted","worker","ReactGA","pageview","registerListener","unregisterListener","terminate","selectCharacter","cKey","localStorage","totBuildNumber","artifactDatabase","getArtifactDatabase","calculateTotalBuildNumber","generateBuilds","turbo","artifactSetEffects","splitArtifacts","artArr","minFilters","maxFilters","onmessage","progress","timing","skipped","category","variable","toString","postMessage","dropdownitemsForStar","setsWithMaxRarity","setobj","setsNumArr","artsAccountedOther","ind","every","characterName","characterDropDown","CharacterSelection","sortByText","artsAccounted","artifactCondCount","count","hasMinFilters","hasMaxFilters","disabledTurbo","BuildModal","ArtConditionalModal","HitModeCard","StatFilterCard","setStatFilters","sFs","setNKey","setNkey","AssumeFullLevelToggle","setmainStatAssumptionLevel","BuildAlert","drop","align","overflow","textOverflow","TargetSelectorDropdownItem","faSortAmountDownAlt","faSortAmountUp","ArtifactDisplayItem","talentField","Modal","Suspense","closeArtCondModal","artSetKeyList","namesByMaxRarities","flatMap","StatFilterItem","close","setFilter","isFloat","inputProps","minInputProps","maxInputProps","faTrash","setHitmode","setReactionMode","setInfusionAura","remainingKeys","slotarr1","slotarr","totalBuildNumberString","toLocaleString","totalUnskipped","generationProgressString","generationSkippedString","totalUnskippedString","generationSkippedText","progPercent","levels","0","8","12","16","20","htmlStatsData","expand","statList","FormulaText","modifierText","options","statUnit","o","artifactsBySlot","setKeys","filteredArtifactsBySlot","slotKeys","artifactsBySet","setCount","slotPerm","artifactSetPermutations","getTalentStatKey","skillKey","useCharElement","getTalentStatKeyVariant","promise","setRes","pending"],"mappings":"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,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhDrN,IAAK,CACDgN,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDnN,IAAK,CACD8M,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDlN,KAAM,CACF6M,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,KAC/KI,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3sBC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAA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AQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EA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","file":"static/js/10.1e90a2dd.chunk.js","sourcesContent":["import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { ICharacter } from \"../Types/character\";\r\nimport { allElements, allSlotKeys, CharacterKey, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = (): string[] => Object.keys(LevelsData)\r\n  static getlevelTemplateName = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getLevelString = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet) => {\r\n    const levelOverride = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n    return Character.getLevel(character.levelKey) === levelOverride ? Character.getlevelTemplateName(character.levelKey) : `Lvl. ${levelOverride}`\r\n  }\r\n  static getIndexFromlevelkey = (levelKey) => Character.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return evalIfFunc(field?.[key], stats)\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getBaseStatValue = (character: ICharacter, characetSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    const { levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return characetSheet.specializeStat.key\r\n    if (statKey === \"specializedStatVal\") return characetSheet.specializeStat.value[Character.getIndexFromlevelkey(levelKey)]\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon, weaponSheet)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return Character.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    if (statKey in characetSheet.baseStat) return characetSheet.baseStat[statKey][Character.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n  static getStatValueWithOverride = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    if (Character.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey: CharacterKey | \"\", artIds: StrictDict<SlotKey, string>) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    const artIdsOnCharacter = character.equippedArtifacts;\r\n\r\n    //swap, by slot\r\n    allSlotKeys.forEach(slotKey => {\r\n      const artNotOnChar = ArtifactDatabase.get(artIds[slotKey])\r\n      if (artNotOnChar?.location === characterKey) return; //it is already equipped\r\n      const artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      const notCharLoc = (artNotOnChar?.location ?? \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifactOnSlot(notCharLoc, slotKey, artOnChar?.id ?? \"\")\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char\r\n    CharacterDatabase.equipArtifactBuild(characterKey, artIds);\r\n  }\r\n  static remove(characterKey) {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return\r\n    Object.values(character.equippedArtifacts).forEach(artid =>\r\n      ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets, mainStatAssumptionLevel = 0) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.createInitialStats(character, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats, artifacts, artifactSheets) => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, initialStats, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach((art: any) => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(stats.mainStatAssumptionLevel, art.numStars * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.value)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return stats\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of (Object.entries(val) as any)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of (Object.entries(modifier) as any))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n\r\n  static createInitialStats = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, infusionAura, reactionMode, talentLevelKeys, constellation, equippedArtifacts, conditionalValues = {}, weapon = { key: \"\" } } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, Character.getStatValueWithOverride(character, characterSheet, weaponSheet, key)]))\r\n    initialStats.characterEle = characterSheet.elementKey;\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = weapon\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n\r\n\r\n    //enemy stuff\r\n    [\"physical\", ...allElements].forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]: any) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n    Character.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats).forEach(s => Character.mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n    if (weaponSubKey) Character.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubstatValWithOverride(character?.weapon, weaponSheet) })\r\n    Character.mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      Character.mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n}","import { IArtifactSheet, SetEffectEntry, StatArr, StatDict } from \"../Types/artifact\";\r\nimport { allArtifactSets, allRarities, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  constructor(data: IArtifactSheet) { this.data = data }\r\n\r\n  get name(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slotNames(): Dict<SlotKey, string> { return this.data.pieces }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): StatDict {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectTexts(setNum: SetNum, stats: ICalculatedStats): Displayable {\r\n    let text = this.setEffects[setNum]?.text\r\n    return evalIfFunc(text ?? \"\", stats)\r\n  }\r\n  setEffectConditionals(setNum: SetNum, stats: ICalculatedStats) {\r\n    const effects = this.setEffects[setNum]\r\n    if (effects?.conditional || effects?.conditionals) {\r\n      return {\r\n        ...effects?.conditional && { default: effects?.conditional },\r\n        ...effects?.conditionals && effects?.conditionals\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static namesByMaxRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): [Rarity, [ArtifactSetKey, string][]][] {\r\n    const grouped: Dict<Rarity, [ArtifactSetKey, string][]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push([key, sheet.name])\r\n      else grouped[rarity] = [[key, sheet.name]]\r\n    })\r\n    return allRarities.map(rarity => [rarity, grouped[rarity] ?? []] as [Rarity, [ArtifactSetKey, string][]]).filter(([, group]) => group.length)\r\n  }\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): StatArr {\r\n    let artifactSetEffect: StatArr = []\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && Object.entries(evalIfFunc(value.stats, charStats) ?? {}).forEach(([key, value]) =>\r\n          artifactSetEffect.push({ key, value }))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import Formula from \"../Formula\";\r\nimport { ElementToReactionKeys } from \"../StatData\";\r\nimport { ICharacterSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const charImport = import('../Data/Characters').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>)\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | \"\"): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return this.sheet.elementKey }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get specializeStat() { return this.sheet.specializeStat }\r\n  get baseStat() { return this.sheet.baseStat }\r\n  get talent() { return this.sheet.talent }\r\n  get formula() { return this.sheet.formula }\r\n  get conditionals() { return this.sheet.conditionals }\r\n  isAutoElemental = () => this.sheet.weaponTypeKey === \"catalyst\"\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (talentKey: string) => this.talent[talentKey]\r\n  get hasTalentPage() { return Boolean(Object.keys(this.sheet.talent).length) } //TODO: remove when all chararacter sheets are complete\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalent(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats) => {\r\n    const talents = this.sheet.talent\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n\r\n  getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats || !Object.keys(stats).length) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = this.elementKey\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = this.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (Formula.formulas.character?.[characterKey]) {\r\n      const charFormulas = {}\r\n      Object.entries(Formula.formulas.character[characterKey]).forEach(([talentKey, formulas]: any) => {\r\n        Object.values(formulas as any).forEach((formula: any) => {\r\n          if (!formula.field.canShow(stats)) return\r\n          if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n          if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n          charFormulas[talentKey].push(formula.keys)\r\n        })\r\n      })\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {//TODO: doesnt have character sheet\r\n      //generic average hit parameters.\r\n      const genericAvgHit: string[] = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical\r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      else if (weaponTypeKey === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst\r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions: string[] = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n}\r\n","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier as any ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey as any] * (multiplier as any), 0),\r\n    formulaText: <span>{Object.entries(modifier as any ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}) {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n};\r\n\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].forEach(ele => {\r\n  StatData[`${ele}_crystalize_hit`] = { name: `Crystalize Shield ${hitElements[ele].name} Effective HP`, variant: ele }\r\n  Formulas[`${ele}_crystalize_hit`] = s => s.crystalize_hit * 2.5\r\n})\r\n\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"shattered_hit\", \"crystalize_hit\", \"electro_crystalize_hit\", \"pyro_crystalize_hit\", \"cryo_crystalize_hit\", \"hydro_crystalize_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]: any) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]: any) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]: any) => accu + c[k] * (m as any), 0)\r\n    const dynamicFunc = (s, c) => dynamicModifier.reduce((accu, [k, m]: any) => accu + s[k] * (m as any), 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Character from \"../../Character\";\r\nimport { compareAgainstEquippedContext } from \"../../CharacterDisplayCard\";\r\n\r\nexport default function FieldDisplay({ field, index, equippedBuild, newBuild, className = \"p-2\" }) {\r\n  const compareAgainstEquipped = useContext(compareAgainstEquippedContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => field.canShow(stats), [field, stats])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", stats)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", stats)?.[0]?.(stats)\r\n      //compareAgainstEquipped\r\n      if (compareAgainstEquipped && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareAgainstEquipped, fixedVal, equippedBuild, field, stats])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", stats), [field, stats])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", stats), [field, stats])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", stats)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip id=\"field-formula\">{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, stats])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", stats), [field, stats])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => {\r\n    addConditional(sheets, \"weapon\");\r\n  }),//attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => {\r\n    addConditional(sheets, \"artifact\")\r\n    //attach metadata prop setNumKey to the conditional\r\n    Object.values(sheets).forEach(setObj =>\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n        if (setNumObj.conditional) (setNumObj.conditional as any).setNumKey = setNumKey // TODO, typechecker says there's no `setNumKey`\r\n        if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach((c: any) => c.setNumKey = setNumKey)\r\n      }))\r\n  })\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","import { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new WeaponSheet(value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>)\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  constructor(weaponSheet: IWeaponSheet) { this.sheet = weaponSheet }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string) => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  get name() { return this.sheet.name }\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  get passiveName() { return this.sheet.passiveName }\r\n  passiveDescription(stats: ICalculatedStats) {\r\n    const desc = this.sheet.passiveDescription\r\n    return evalIfFunc(desc, stats)\r\n  }\r\n  get description() { return this.sheet.description }\r\n  get baseStats() { return this.sheet.baseStats }\r\n  stats = (build: ICalculatedStats): object | false | undefined => evalIfFunc(this.sheet.stats, build)\r\n  get conditionals() { return this.sheet.conditionals }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled = false, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import ICalculatedStats from './Types/ICalculatedStats';\r\nimport { crawlObject, objPathValue } from './Util/Util';\r\n\r\n//Currently only import character formulas, but formulas from other sources should be able to be imported as well.\r\nexport const formulaImport = import('./Data/Characters/formula').then(imp => addFormula(imp.default, \"character\"))\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | undefined> => formulaImport.then(() => objPathValue(Formula.formulas, keys))\r\n}\r\n\r\nfunction addFormula(src, key) {\r\n  Formula.formulas[key] = src\r\n  crawlObject(src, [key], f => typeof f === \"function\", (formula, keys) => {\r\n    formula.keys = keys\r\n  })\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { SlotKey } from '../Types/consts'\r\n\r\nconst SlotIcon: StrictDict<SlotKey, IconDefinition> = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport { CompressMainStatKey, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactStarsData: Dict<Rarity, { subsBaselow: number, subBaseHigh: number, numUpgradesOrUnlocks: number }> = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData: StrictDict<Rarity, StrictDict<CompressMainStatKey, number[]>> = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 12.0, 14.6, 17.3, 19.9, 22.5, 25.2, 27.8, 30.5, 33.1, 35.7, 38.4, 41.0, 43.7, 46.3, 49.0, 51.6, 54.2, 56.9, 59.5, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.1, 23.7, 25.2, 26.7, 28.2, 29.8, 31.3, 32.8, 34.3, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubstatsData: StrictDict<SubstatKey, { [numStars: number]: number[] }> = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubstatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { SubstatKey } from \"../Types/artifact\"\r\n\r\nexport const ArtifactSubstatLookupTable: StrictDict<SubstatKey, { [numStar: number]: { [rounded: string]: number[][] } }> = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubstatsData, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { CompressMainStatKey, IArtifact, MainStatKey, StatDict, Substat, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, CharacterKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey) => slotKey ? ArtifactSlotsData[slotKey].name : \"\"\r\n  static slotIcon = (slotKey: SlotKey) => <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n  static slotNameWithIcon = (slotKey: SlotKey) => {\r\n    let name = Artifact.slotName(slotKey)\r\n    let slotIcon = Artifact.slotIcon(slotKey)\r\n    return <span>{slotIcon} {name}</span>\r\n  }\r\n\r\n  static slotMainStats = (slotKey: SlotKey): MainStatKey[] => ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): Dict<ArtifactSetKey, Dict<SetNum, StatDict>> => {\r\n    let result: Dict<ArtifactSetKey, Dict<SetNum, StatDict>> = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      let setEffect: Dict<SetNum, StatDict> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n        const setStats = evalIfFunc(setEffectObj.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        result[setKey][setNumKey][statKey] = (result[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: Dict<string, IArtifact>): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey, defVal = []) => {\r\n    if (statKey.endsWith(\"_dmg_\") && statKey !== \"physical_dmg_\")\r\n      return ArtifactMainStatsData[numStar][\"ele_dmg_\"]\r\n    return ArtifactMainStatsData[numStar][statKey as CompressMainStatKey] || defVal\r\n  }\r\n\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number | undefined =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } => {\r\n    const data = ArtifactStarsData[rarity]!\r\n    return { low: data.subsBaselow, high: data.subBaseHigh, numUpgrades: data.numUpgradesOrUnlocks }\r\n  }\r\n\r\n  static maxSubstatValues = (statKey: SubstatKey, numStars = maxStar): number => ArtifactSubstatsMinMax[statKey].max[numStars]\r\n  static getSubstatKeys = (): SubstatKey[] => Object.keys(ArtifactSubstatsData) as SubstatKey[]\r\n  static substatCloseEnough = (key: SubstatKey, value1: number, value2: number): boolean => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars: Rarity) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars]!.subBaseHigh + ArtifactStarsData[numStars]!.numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static getSubstatRollData = (substatKey: SubstatKey | \"\", numStars: Rarity) => ArtifactSubstatsData[substatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    if (!numStars || !substatKey || typeof substatValue !== \"number\" || !substatValue) return []\r\n    let rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    if (!rollData.length) return []\r\n\r\n    let table = ArtifactSubstatLookupTable[substatKey][numStars]\r\n    let lookupValue = substatValue.toFixed(1)\r\n\r\n    if (table[lookupValue])\r\n      return table[lookupValue].map(roll => roll.map(i => rollData[i]))\r\n    else return [] // Lookup fails\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state: IArtifact) {\r\n    const { numStars, level, substats } = state, errors: string[] = []\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = key ? Artifact.getSubstatRolls(key, value, numStars) : []\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls?.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            const key = substats[index].key\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    } else {\r\n      // Found valid build, filling missing data\r\n      for (const substat of substats)\r\n        substat.accurateValue = substat.rolls!.reduce((sum, cur) => sum + cur, 0)\r\n      const { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n      state.currentEfficiency = currentEfficiency\r\n      state.maximumEfficiency = maximumEfficiency\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(substats: Substat[], numStars: Rarity, level: number) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let current = substats.reduce((sum, { key, accurateValue }) => sum + (key ? (accurateValue! / ArtifactSubstatsMinMax[key].max[maxStar]) : 0), 0)\r\n    let maximum = current + rollsRemaining\r\n    let currentEfficiency = current * 100 / totalRolls\r\n    let maximumEfficiency = maximum * 100 / totalRolls\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    let setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId: string | undefined, characterKey: CharacterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifactOnSlot(intendedLocation, art.slotKey, art.id)\r\n\r\n    if (currentLocation) {\r\n      CharacterDatabase.equipArtifactOnSlot(currentLocation, slotKey, artifactToSwapWith?.id ?? \"\")\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId: string | undefined) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.equipArtifactOnSlot(location, slotKey, \"\")\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial]: any, i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n          <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setConditional([0])}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n            <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n              {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n            </Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n        <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport Conditional from \"../../../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../../../Conditional/ConditionalSelector\"\r\nimport ICalculatedStats from \"../../../Types/ICalculatedStats\"\r\nimport IConditional from \"../../../Types/IConditional\"\r\nimport statsToFields from \"../../../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../../../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  characterDispatch: (any) => void,//TODO: characterDispatch type\r\n  editable: boolean,\r\n  fieldClassName?: string\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, equippedBuild, newBuild, characterDispatch, editable, fieldClassName }: ConditionalDisplayProps) {\r\n  const stats = newBuild ? newBuild : equippedBuild as ICalculatedStats\r\n  if (!stats) debugger\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats.conditionalValues, characterDispatch])\r\n\r\n  if (!canShow) return null\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector disabled={!editable}\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild, className: fieldClassName }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","const WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20/40\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40/50\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50/60\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60/70\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70/80\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80/90\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { LevelNameData, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData';\r\nimport WeaponSheet from './WeaponSheet';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey): number => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.main[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.sub?.[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatKey = (weaponSheet: WeaponSheet, defVal = \"\") => (weaponSheet.baseStats?.substatKey || defVal)\r\n\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = (): string[] => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubstatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n}","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [0,\r\n  17.2, 18.5, 19.9, 21.3, 22.6, 24.6, 26.6, 28.9, 31.4, 34.1,\r\n  37.2, 40.7, 44.4, 48.6, 53.7, 59.1, 64.4, 69.7, 75.1, 80.6,\r\n  86.1, 91.7, 97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n  142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n  215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n  336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n  509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n  742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n  968.6, 991.0, 1013.5, 1036.1, 1066.6, 1090.0, 1115.0, 1141.7, 1171.9, 1202.8,\r\n  1202.8, 1233.9, 1264.7, 1305.7, 1346.1, 1468.9, 1524.0, 1577.0, 1627.6, 1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [0,\r\n  91, 99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n  170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n  320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n  448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n  574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n  733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n  915, 936, 956, 982, 1003, 1017, 1036, 1057, 1075, 1096,\r\n  1114, 1135, 1149, 1170, 1191, 1205, 1224, 1243, 1260, 1277,\r\n  1293, 1308, 1317, 1327, 1336, 1349, 1366, 1384, 1403, 1424,\r\n  1450, 1478, 1507, 1543, 1570, 1580, 1589, 1673, 1682, 1691,\r\n]","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return <>{CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>\r\n    {characterSheet.name}\r\n  </Dropdown.Item>\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","export function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1)\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { ICharacter } from \"../Types/character\"\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\ntype StatDisplayProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined)\r\n\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey, invalid as any)\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (statKey === \"finalHP\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterHP\")\r\n        else if (statKey === \"finalDEF\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterDEF\")\r\n        else if (statKey === \"finalATK\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterATK\") + Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"weaponATK\")\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, characterSheet, weaponSheet, equippedBuild, newBuild, editable, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label: label as any }} />\r\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip id=\"reset-tooltip\">Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { IArtifact, Substat } from '../Types/artifact';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: IArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number }\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }: Data): JSX.Element | null {\r\n  const [, forceUpdateHook] = useForceUpdate()\r\n  useEffect(() => {\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () => { artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook) }\r\n  }, [artifactId, forceUpdateHook])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? ArtifactDatabase.get(artifactId) : undefined))?.setKey))\r\n  const equipOnChar = (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey)\r\n\r\n  const editable = !artifactObj // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? ArtifactDatabase.get(artifactId);\r\n  const characterSheet = usePromise(CharacterSheet.get(art?.location ?? \"\"))\r\n  if (!art) return null\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n\r\n  const { id, slotKey, numStars, level, mainStatKey, substats, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.mainStatValue(mainStatKey, numStars, mainStatLevel) ?? \"\"}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = art.maximumEfficiency !== undefined\r\n  const locationName = characterSheet?.name ?? \"Inventory\"\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{sheet?.slotNames[slotKey] ?? \"Unknown Piece Name\"}</b></h6>\r\n          <div>{Artifact.slotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{sheet?.name ?? \"Artifact Set\"}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: Substat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueString(stat.value, Stat.getStatUnit(stat.key))}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{valueString(efficiency, \"eff\")}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} {...{ className: \"float-right\" }} /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"lock-artifact-tip\">Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\" onClick={() => ArtifactDatabase.setLocked(id, !lock)}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0] as any] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","import { useCallback, useMemo } from 'react';\r\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { ICharacter } from '../../Types/character';\r\nimport { allSlotKeys, SlotKey } from '../../Types/consts';\r\nimport ICalculatedStats from '../../Types/ICalculatedStats';\r\nimport { usePromise } from '../../Util/ReactUtil';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\nconst artLayoutSize = { xs: 12, md: 6, lg: 4 }\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  artifacts?: any[]\r\n}\r\nfunction CharacterArtifactPane({ characterSheet, weaponSheet, character, character: { characterKey }, equippedBuild, newBuild, editable, characterDispatch, artifacts }: CharacterArtifactPaneProps) {\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => characterSheet.getDisplayStatKeys(stats), [stats, characterSheet])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && Character.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, newBuild, characterDispatch])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    Character.equipArtifacts(characterKey, Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])) as StrictDict<SlotKey, string>)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, characterDispatch])\r\n  return <>\r\n    <Card className=\"h-100 mb-2\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Body>\r\n        <StatDisplayComponent {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys: statKeys, editable }} />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        {newBuild ? <Button onClick={equipArts}>Equip all artifacts to current character</Button> : (editable && <Button onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n        {Boolean(mainStatAssumptionLevel) && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert>}\r\n      </Card.Footer>\r\n    </Card>\r\n    <Row className=\"mb-n2\">\r\n      <Col {...artLayoutSize} className=\"d-flex flex-column\">\r\n        {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n          <Card key={setKey} className=\"mb-2 flex-grow-1\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n            <Card.Header>{artifactSheets?.[setKey].name ?? \"\"}</Card.Header>\r\n            <Card.Body className=\"p-2 mb-n2\">\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      {artifacts ?\r\n        allSlotKeys.map(slotKey => {//from flex\r\n          const art = artifacts.find(art => art.slotKey === slotKey)\r\n          return Boolean(art) && <Col {...artLayoutSize} key={slotKey} className=\"mb-2\">\r\n            <ArtifactCard artifactObj={art} />\r\n          </Col>\r\n        }) : allSlotKeys.map(slotKey =>\r\n          Boolean(stats?.equippedArtifacts?.[slotKey]) && <Col {...artLayoutSize} key={stats?.equippedArtifacts?.[slotKey]} className=\"mb-2\">\r\n            <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n          </Col>\r\n        )}\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport Conditional from \"../../Conditional/Conditional\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport { allElements } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport { IConditionals } from \"../../Types/IConditional\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport Character from \"../Character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport StatInput from \"../StatInput\"\r\nimport ConditionalDisplay from \"./Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"./Components/FieldDisplay\"\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean;\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, weaponSheet, editable, character, character: { characterKey, constellation }, characterDispatch, equippedBuild, newBuild }: CharacterOverviewPaneProps) {\r\n  const [editLevel, setEditLevel] = useState(false)\r\n  const elementKey = characterSheet.elementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Card.Img src={characterSheet.cardImg} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{characterSheet.name} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={characterSheet.star} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl placeholder={undefined} onChange={val => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: clamp(val, 1, 90), characterSheet, weaponSheet })} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: Character.getLevel(character.levelKey), characterSheet, weaponSheet })} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip id=\"artifact-override-level\">Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"success\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{characterSheet.constellationName}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={characterSheet.getTalent(`constellation${i + 1}`)?.img} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n      <MainStatsCards {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n    </Col>\r\n  </Row >\r\n}\r\n\r\nfunction WeaponStatsCard({ title, statsVals = {}, stats = {} }) {\r\n  if ((Object.keys(statsVals ?? {}) as any).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay newBuild={undefined} key={i} index={i} {...{ field, equippedBuild: stats, className: \"px-3 py-2\" }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}\r\n\r\n\r\nfunction WeaponStatsEditorCardWeaponDropdown({ weaponSheet, weaponTypeKey, setStateWeapon }: { weaponSheet: WeaponSheet, weaponTypeKey: string, setStateWeapon: (key: any, value: any) => void }) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  if (!weaponSheets) return null\r\n\r\n  return <DropdownButton title={weaponSheet.name}>\r\n    {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n      <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n      {Object.entries(WeaponSheet.getWeaponsOfType(weaponSheets, weaponTypeKey)).filter(([, weaponObj]: any) => weaponObj.rarity === star).map(([key, weaponObj]: any) =>\r\n        <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n          {weaponObj.name}\r\n        </Dropdown.Item>\r\n      )}\r\n      {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n    </React.Fragment>)}\r\n  </DropdownButton>\r\n}\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction WeaponStatsEditorCard({ characterSheet, weaponSheet, editable, character, character: { weapon }, characterDispatch, equippedBuild, newBuild }: WeaponStatsEditorCardProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => {\r\n    if (key === \"key\") {\r\n      if (value === weapon.key) return\r\n      else {\r\n        //reset the conditionalNum when we switch weapons\r\n        const { conditionalValues } = character\r\n        delete conditionalValues.weapon\r\n        characterDispatch({ conditionalValues })\r\n      }\r\n    }\r\n    character.weapon[key] = value\r\n    characterDispatch({ weapon: character.weapon })\r\n  }\r\n  const substatKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)\r\n  const weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet.passiveName\r\n  const weaponBonusStats = weaponSheet.stats(build)\r\n  const conditionals = Conditional.conditionals.weapon[weapon.key] as IConditionals\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      <Row className=\"mb-n2\">\r\n        <Col xs={12} md={3} lg={4}>\r\n          <Image src={weaponSheet.img} className={`w-100 h-auto grad-${weaponSheet.rarity}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <WeaponStatsEditorCardWeaponDropdown weaponSheet={weaponSheet} weaponTypeKey={weaponTypeKey} setStateWeapon={setStateWeapon} />\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {substatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><span className=\"mr-2\">{StatIconEle(substatKey)}</span>{Stat.getStatName(substatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(substatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <h5 className=\"mb-0\">{weaponSheet.name} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n            <p><Stars stars={weaponSheet.rarity} /></p>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <p>{weaponPassiveName && weaponSheet.passiveDescription(build)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: weaponDisplaySubVal }} stats={build} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            {Boolean(conditionals) && Object.entries(conditionals).map(([stateKey, conditional]) =>\r\n              <ConditionalDisplay key={stateKey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} fieldClassName=\"py-2 px-3\" />)}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <small>{weaponSheet.description}</small>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  editable: boolean,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction MainStatsCards({ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys: any[] = [];\r\n\r\n  [\"physical\", ...allElements].forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: key, characterSheet, weaponSheet })} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")}\r\n                  onChange={value => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value, characterSheet, weaponSheet })} />\r\n                <InputGroup.Append>\r\n                  {isPercentSpecialStatSelect && <InputGroup.Text>%</InputGroup.Text>}\r\n                  <Button onClick={() => {\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatKey\"), characterSheet, weaponSheet })\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatVal\"), characterSheet, weaponSheet })\r\n                  }}\r\n                    disabled={!Character.hasOverride(character, \"specializedStatKey\") && !Character.hasOverride(character, \"specializedStatVal\")}\r\n                  >\r\n                    <FontAwesomeIcon icon={faUndo} />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined\r\n                  }\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from 'react';\r\nimport { Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport { evalIfFunc } from \"../../Util/Util\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport ConditionalDisplay from './Components/ConditionalDisplay';\r\nimport FieldDisplay from './Components/FieldDisplay';\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterTalentPane(props: CharacterTalentPaneProps) {\r\n  const { characterSheet, character: { levelKey, constellation }, editable, characterDispatch, newBuild, equippedBuild } = props\r\n  const ascension = Character.getAscension(levelKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col><ReactionDisplay {...{ characterSheet, newBuild, equippedBuild }} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {!!characterSheet.getTalent(\"sprint\") && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalent(tKey)) return null\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet, newBuild, equippedBuild }: { characterSheet: CharacterSheet, newBuild?: ICalculatedStats, equippedBuild?: ICalculatedStats }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = characterSheet.elementKey\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n} as const\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip id=\"shatter-tooltip\">Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nconst crystalizeEleToDisplay = {\r\n  \"default\": <span className=\"text-crystalize\">{Stat.getStatName(\"crystalize_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /></span>,\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_crystalize_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_crystalize_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_crystalize_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_crystalize_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /></span>\r\n} as const\r\nfunction CrystalizeCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(crystalizeEleToDisplay)[0])\r\n  const sKey = ele === \"default\" ? \"crystalize_hit\" : `${ele}_crystalize_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={crystalizeEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(crystalizeEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  ascension: number,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { constellation, talentLevelKeys, }, characterDispatch, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, onClickTitle }: SkillDisplayCardProps) {\r\n  let build = newBuild ? newBuild : equippedBuild as ICalculatedStats //assumes at least one of them is not undefined\r\n  let header: Displayable | null = null\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n        talentLevelKeys[tKey] = newTalentLevelKey\r\n        characterDispatch({ talentLevelKeys })\r\n      }\r\n      header = <Card.Header>\r\n        <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>{`Talent Level: ${talentLvlKey + 1}`}</Card.Header>\r\n    }\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"h-100\">\r\n    {header}\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={characterSheet.getTalent(talentKey)?.img} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{characterSheet.getTalent(talentKey)?.name}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {/* Display document sections */}\r\n      {characterSheet.getTalent(talentKey)?.document?.map((section, i) => {\r\n        if (!section.canShow!(build)) return null\r\n        const talentText = evalIfFunc(section.text, build)\r\n        let fields = section.fields ?? []\r\n        return <div className=\"my-2\" key={\"section\" + i}>\r\n          <div {...{ xs: 12 }}>\r\n            <div className=\"mb-2\">{talentText}</div>\r\n            {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n              {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n            </ListGroup>}\r\n          </div>\r\n          {!!section.conditional && <ConditionalDisplay {...{ conditional: section.conditional, equippedBuild, newBuild, characterDispatch, editable }} />}\r\n        </div>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { createContext, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allCharacterKeys, allSlotKeys } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { usePromise } from '../Util/ReactUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport DamageOptionsAndCalculation from './CharacterDisplay/DamageOptionsAndCalculation';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nexport const compareAgainstEquippedContext = createContext(undefined)\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }: any, ref: any) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" } as any}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\nconst initialCharacter = (characterKey): ICharacter => ({\r\n  characterKey: characterKey ?? \"\",//the game character this is based off\r\n  levelKey: \"L1\",//combination of level and ascension\r\n  hitMode: \"avgHit\",\r\n  reactionMode: null,\r\n  equippedArtifacts: Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])),\r\n  conditionalValues: {},\r\n  baseStatOverrides: {},//overriding the baseStat\r\n  weapon: {\r\n    key: \"\",\r\n    levelKey: WeaponLevelKeys[0],\r\n    refineIndex: 0,\r\n    overrideMainVal: 0,\r\n    overrideSubVal: 0,\r\n  },\r\n  talentLevelKeys: {\r\n    auto: 0,\r\n    skill: 0,\r\n    burst: 0,\r\n  },\r\n  infusionAura: \"\",\r\n  constellation: 0,\r\n  buildSettings: {}//use to reset when changing to a new character, so it would not copy from old character.\r\n})\r\n\r\ntype characterReducerOverwrite = {\r\n  type: \"overwrite\",\r\n  character: ICharacter\r\n}\r\ntype characterReducerFromDB = {\r\n  type: \"fromDB\",\r\n}\r\ntype characterReducerStatOverride = {\r\n  type: \"statOverride\",\r\n  statKey: string\r\n  value: number | string\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n}\r\ntype characterReducerOverwriteAction = characterReducerOverwrite | characterReducerFromDB | characterReducerStatOverride | Partial<ICharacter>\r\n\r\nfunction characterReducer(state: ICharacter, action: characterReducerOverwriteAction) {\r\n  if (\"type\" in action) switch (action?.type) {\r\n    case \"overwrite\":\r\n      return { ...state, ...action.character }\r\n    case \"fromDB\"://for equipping artifacts, that makes the changes in DB instead of in state.\r\n      return { ...state, ...CharacterDatabase.get(state.characterKey) ?? {} }\r\n    case \"statOverride\": {\r\n      const { statKey, value, characterSheet, weaponSheet, } = action\r\n      const baseStatOverrides = state.baseStatOverrides\r\n      const baseStatVal = Character.getBaseStatValue(state, characterSheet, weaponSheet, statKey)\r\n      if (baseStatVal === value)\r\n        delete baseStatOverrides[statKey]\r\n      else\r\n        baseStatOverrides[statKey] = value\r\n      return { ...state, baseStatOverrides }\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\ntype CharacterDisplayCardProps = {\r\n  characterKey?: string,\r\n  character?: ICharacter,\r\n  setCharacterKey?: (any) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  editable?: boolean,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey: propCharacterKey, character: propCharacter, setCharacterKey: propSetCharacterKey, footer, newBuild: propNewBuild, editable = false, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const [character, characterDispatch] = useReducer(characterReducer, initialCharacter(propCharacterKey))\r\n  const [compareAgainstEquipped, setcompareAgainstEquipped] = useState(false)\r\n  const firstUpdate = useRef(true)\r\n  useEffect(() => {\r\n    if (!propCharacterKey) return\r\n    const char = { ...initialCharacter(propCharacterKey), ...CharacterDatabase.get(propCharacterKey) ?? {} }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacterKey])\r\n  useEffect(() => {\r\n    if (!propCharacter) return\r\n    const char = { ...initialCharacter(propCharacter.characterKey), ...propCharacter }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacter])\r\n\r\n  useEffect(() => {\r\n    //skip saving on the first update, since those updates are from loading from DB\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false\r\n      return\r\n    }\r\n    //save character to DB\r\n    editable && CharacterDatabase.update(character)\r\n  }, [character, editable])\r\n\r\n  const characterKey = propCharacter?.characterKey ?? character.characterKey\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  useEffect(() => {\r\n    if (weaponSheets && characterSheet && !character.weapon.key) {\r\n      character.weapon.key = Object.keys(WeaponSheet.getWeaponsOfType(weaponSheets, characterSheet.weaponTypeKey))[0] ?? \"\"\r\n      characterDispatch({ weapon: character.weapon })\r\n    }\r\n  }, [characterSheet, weaponSheets, character.weapon])\r\n\r\n  const weaponSheet = usePromise(WeaponSheet.get(character.weapon.key))\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const setCharacterKey = useCallback(\r\n    newCKey => {\r\n      let state = initialCharacter(newCKey)\r\n      const char = CharacterDatabase.get(newCKey)\r\n      if (char) state = { ...state, ...char }\r\n      characterDispatch({ type: \"overwrite\", character: state })\r\n      if (newCKey !== characterKey)\r\n        propSetCharacterKey?.(newCKey)\r\n    }, [characterKey, characterDispatch, propSetCharacterKey])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return\r\n    const newBuild = propNewBuild && deepClone(propNewBuild);\r\n    (newBuild as any).hitMode = character.hitMode;\r\n    (newBuild as any).reactionMode = character.reactionMode;\r\n    return newBuild\r\n  }, [propNewBuild, character.hitMode, character.reactionMode])\r\n\r\n  const { levelKey, artifacts: flexArts } = character\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel), [character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel])\r\n\r\n  const commonPaneProps = { character, newBuild, equippedBuild: (!newBuild || compareAgainstEquipped) ? equippedBuild : undefined, editable, characterDispatch, compareAgainstEquipped }\r\n  if (flexArts) (commonPaneProps as any).artifacts = flexArts//from flex\r\n  // main CharacterDisplayCard\r\n  const DamageOptionsAndCalculationEle = characterSheet?.hasTalentPage && weaponSheet && <DamageOptionsAndCalculation {...{ characterSheet, weaponSheet, character, characterDispatch, newBuild, equippedBuild }} className=\"mb-2\" />\r\n  return (<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs={\"auto\"} className=\"mr-auto\">\r\n          {/* character selecter/display */}\r\n          <CharSelectDropdown characterSheet={characterSheet} character={character} weaponSheet={weaponSheet} editable={editable} levelKey={levelKey} characterDispatch={characterDispatch} setCharacterKey={setCharacterKey} />\r\n        </Col>\r\n        {Boolean(mainStatAssumptionLevel) && <Col xs=\"auto\"><Alert className=\"mb-0 py-1 h-100\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert></Col>}\r\n        {/* Compare against new build toggle */}\r\n        {newBuild ? <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(false)}>\r\n              <small>Show New artifact Stats</small>\r\n            </Button>\r\n            <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(true)}>\r\n              <small>Compare against equipped artifacts</small>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col> : null}\r\n        {Boolean(onClose) && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    {characterKey && characterSheet && weaponSheet && <Card.Body>\r\n      <compareAgainstEquippedContext.Provider value={compareAgainstEquipped as any}>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 mx-0\" fill>\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\"><h5 className=\"mb-0\">Character</h5></Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\"><h5 className=\"mb-0\">New Artifacts</h5></Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\"><h5 className=\"mb-0\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</h5></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {process.env.NODE_ENV !== \"development\" && !characterSheet.hasTalentPage ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled><h5 className=\"mb-0\">Talents</h5> <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\"><h5 className=\"mb-0\">Talents</h5></Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterOverviewPane characterSheet={characterSheet} weaponSheet={weaponSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterTalentPane characterSheet={characterSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </compareAgainstEquippedContext.Provider>\r\n    </Card.Body>}\r\n    {footer && <Card.Footer>\r\n      {footer}\r\n    </Card.Footer>}\r\n  </Card>)\r\n}\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  weaponSheet?: WeaponSheet,\r\n  character: ICharacter\r\n  editable: boolean\r\n  levelKey: string\r\n  characterDispatch: (any) => void\r\n  setCharacterKey: (any) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, weaponSheet, character, editable, levelKey, characterDispatch, setCharacterKey }: CharSelectDropdownProps) {\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <Image src={characterSheet.thumbImg} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {characterSheet.name} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  return <>{editable ? <ButtonGroup>\r\n    <Dropdown as={ButtonGroup}>\r\n      <Dropdown.Toggle as={Button}>\r\n        {HeaderIconDisplay}\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu as={CustomMenu}>\r\n        {[...allCharacterKeys].sort().map(charKey => <CharDropdownItem key={charKey} characterKey={charKey} setCharacterKey={setCharacterKey} />)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n    <DropdownButton as={ButtonGroup} disabled={!characterSheet} title={\r\n      <h6 className=\"d-inline\">Stats Template: {Character.getlevelTemplateName(levelKey)} </h6>\r\n    }>\r\n      <Dropdown.ItemText>\r\n        <span>Select Base Stat Template</span>\r\n      </Dropdown.ItemText>\r\n      {Character.getlevelKeys().map(lvlKey =>\r\n        <Dropdown.Item key={lvlKey} onClick={() => characterDispatch({ levelKey: lvlKey })}>\r\n          <h6 >{Character.getlevelTemplateName(lvlKey)} </h6>\r\n        </Dropdown.Item>)}\r\n    </DropdownButton>\r\n  </ButtonGroup> : <span>{HeaderIconDisplay} {characterSheet && weaponSheet && Character.getLevelString(character, characterSheet, weaponSheet)}</span>}</>\r\n}\r\nfunction CharDropdownItem({ characterKey, setCharacterKey }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => setCharacterKey(characterKey)}>\r\n    <span >\r\n      <Image src={characterSheet.thumbImg} className={`thumb-small p-0 m-n1 grad-${characterSheet.star}star`} thumbnail />\r\n      <h6 className=\"d-inline ml-2\">{characterSheet.name} </h6>\r\n    </span>\r\n  </Dropdown.Item>\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip id=\"wip\">Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","// import characters from\r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20/40\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40/50\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50/60\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60/70\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70/80\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80/90\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterSpecializedStatKey\r\n}","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport ConditionalDisplay from \"../../Character/CharacterDisplay/Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"../../Character/CharacterDisplay/Components/FieldDisplay\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, editable, characterDispatch }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey))\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectTexts(setNumKey, stats)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const conditionals = sheet.setEffectConditionals(setNumKey, stats)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {Boolean(conditionals) && Object.entries(conditionals!).map(([ckey, conditional]) => <ConditionalDisplay key={ckey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n  </>\r\n}\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  editable: boolean,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n  characterDispatch: (arg0: any) => void,\r\n}\r\n","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter\r\n  statsDisplayKeys: any,\r\n  editable: boolean,\r\n  cardbg?: string\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }: StatDisplayComponentProps) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, sectionValues]: any) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text={\"lightfont\" as any} className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Formula from \"../../Formula\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport { IFieldDisplay } from \"../../Types/IFieldDisplay\";\r\nimport { usePromise } from \"../../Util/ReactUtil\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No External Infusion</span>,\r\n  \"pyro\": <span >Pyro Infusion</span>,\r\n  \"cryo\": <span >Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className?: string\r\n}\r\nexport function InfusionAuraDropdown({ characterSheet, character: { infusionAura = \"\", characterKey }, characterDispatch, className }: InfusionAuraDropdownProps) {\r\n  if (!characterSheet.isMelee()) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\ntype ReactionToggleProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className: string\r\n}\r\nexport function ReactionToggle({ characterSheet, character: { characterKey, reactionMode = \"none\", infusionAura }, characterDispatch, className }: ReactionToggleProps) {\r\n  if (reactionMode === null) reactionMode = \"none\"\r\n  const charEleKey = characterSheet.elementKey\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ characterSheet, build }: { characterSheet: CharacterSheet, build: ICalculatedStats }) {\r\n  const displayStatKeys = useMemo(() => characterSheet.getDisplayStatKeys(build), [build, characterSheet])\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n      return <Card bg=\"darkcontent\" text={\"lightfont\" as any} key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              if (Array.isArray(field))\r\n                return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} fieldIndex={fieldIndex} />\r\n              else if (typeof field === \"string\") {//simple statKey field\r\n                const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              return null\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\nfunction FormulaCalculationField({ fieldKeys, build, fieldIndex }: { fieldKeys: string[], build: ICalculatedStats, fieldIndex: number, }) {\r\n  const formula = usePromise(Formula.get(fieldKeys))\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.()\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n      <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n      <Card.Body className=\"p-2\">\r\n        <div className=\"mb-n2\">\r\n          <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n          {subFormulaKeys.map(subKey =>\r\n            <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\ntype DamageOptionsAndCalculationProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  className: string\r\n}\r\nexport default function DamageOptionsAndCalculation({ characterSheet, weaponSheet, character, character: { hitMode }, characterDispatch, newBuild, equippedBuild, className }: DamageOptionsAndCalculationProps) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle callback={undefined} {...{ as: Button }} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={undefined}\r\n                      disabled={undefined}\r\n                      percent={undefined}\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value, characterSheet, weaponSheet })}\r\n                    />\r\n                  </Col>\r\n                  {[\"physical\", ...allElements].map(eleKey => {\r\n                    let statKey = `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity, characterSheet, weaponSheet })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay characterSheet={characterSheet} build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","import { faQuestionCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Suspense, useState } from \"react\"\r\nimport { Button, Card, Col, Modal, Row, Spinner } from \"react-bootstrap\"\r\nimport { getRandomElementFromArray, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\"\r\n\r\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }: { pageKey: string, text: Displayable | Displayable[], modalTitle: Displayable, children: JSX.Element }) {\r\n  const [showInfoModal, setshowInfoModal] = useState(loadFromLocalStorage(\"infoShown\")?.[pageKey] ?? true)\r\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\r\n  const closeModal = () => {\r\n    const infoShown = loadFromLocalStorage(\"infoShown\") ?? {}\r\n    infoShown[pageKey] = false\r\n    saveToLocalStorage(\"infoShown\", infoShown)\r\n    setshowInfoModal(false)\r\n  }\r\n  return <>\r\n    <Modal show={showInfoModal} onHide={() => closeModal()} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <Card.Title>{modalTitle}</Card.Title>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button variant=\"danger\" onClick={() => closeModal()} >\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Suspense fallback={<h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>}>\r\n            {children}\r\n          </Suspense>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={() => closeModal()}>\r\n            <span>Close</span>\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"pl-2 py-0 pr-0\">\r\n        <Row>\r\n          <Col><small>{displayText}</small></Col>\r\n          <Col xs=\"auto\">\r\n            <Button size=\"sm\" variant=\"info\" className=\"m-0 py-1\" onClick={() => setshowInfoModal(true)}><FontAwesomeIcon icon={faQuestionCircle} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport Stat from '../Stat';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterSheet from './CharacterSheet';\r\ntype CharacterCardProps = { characterKey: CharacterKey | \"\", onEdit?: (any) => void, onDelete?: (any) => void, cardClassName: string, header?: JSX.Element, bg?: string, footer?: boolean }\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer = false }: CharacterCardProps) {\r\n  const [, forceUpdate] = useForceUpdate()\r\n  useEffect(() => {\r\n    characterKey && CharacterDatabase.registerCharListener(characterKey, forceUpdate)\r\n    return () => { characterKey && CharacterDatabase.unregisterCharListener(characterKey, forceUpdate) }\r\n  }, [characterKey, forceUpdate])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const character = CharacterDatabase.get(characterKey)\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheet = usePromise(character && WeaponSheet.get(character.weapon.key))\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets])\r\n  if (!character || !characterSheet || !weaponSheet || !stats) return null;\r\n\r\n  const { weapon, constellation } = character\r\n  const name = characterSheet.name\r\n  const elementKey = characterSheet.elementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponName = weaponSheet?.name\r\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon, weaponSheet)\r\n  const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponSubVal = Weapon.getWeaponSubstatValWithOverride(weapon, weaponSheet)\r\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {header ? header : <h5><b>{name}</b></h5>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(characterKey)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete(characterKey)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onEdit?.(characterKey)} className={onEdit ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={characterSheet.thumbImg} className={`thumb-big grad-${characterSheet.star}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h3 className=\"mb-0\">{Character.getLevelString(character, characterSheet, weaponSheet)} {`C${constellation}`}</h3>\r\n          <h5 className=\"mb-0\"><Stars stars={characterSheet.star} colored /></h5>\r\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = artifactSheets?.[key].name ?? \"\"\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = stats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      } as any}>Generate Builds</Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { strPadLeft } from \"./Util\"\r\n\r\nexport function msToUnits(ms) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nexport function timeString(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nexport function timeStringMs(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BuildWorker.d31787cb.worker.js\");\n}\n","import { faCheckSquare, faSortAmountDownAlt, faSortAmountUp, faSquare, faTimes, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, Image, InputGroup, ListGroup, Modal, OverlayTrigger, ProgressBar, Row, Tooltip } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BuildWorker\";\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../Artifact/Component/SetEffectDisplay';\r\nimport Character from '../Character/Character';\r\nimport CharacterCard from '../Character/CharacterCard';\r\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../Character/CharacterDisplay/DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from '../Character/CharacterDisplay/StatDisplayComponent';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport Formula from '../Formula';\r\nimport InfoComponent from '../Components/InfoComponent';\r\nimport Stat from '../Stat';\r\nimport { ArtifactsBySlot, BuildSetting } from '../Types/Build';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allSlotKeys, ArtifactSetKey, CharacterKey, SetNum, SlotKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IFieldDisplay } from '../Types/IFieldDisplay';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { timeStringMs } from '../Util/TimeUtil';\r\nimport { crawlObject, deepClone, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport { calculateTotalBuildNumber } from './Build';\r\nconst InfoDisplay = React.lazy(() => import('./InfoDisplay'));\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCard = lazy(() => import('../Character/CharacterDisplayCard'))\r\n\r\nconst warningBuildNumber = 10000000\r\nconst maxBuildsToShowList = [50, 25, 10, 5]\r\nconst maxBuildsToShowDefault = 25\r\nconst autoBuildGenLimit = 100\r\nconst artifactsSlotsToSelectMainStats: SlotKey[] = [\"sands\", \"goblet\", \"circlet\"]\r\nconst initialBuildSettings = (): BuildSetting => ({\r\n  setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n  statFilters: {},\r\n  mainStatKeys: [\"\", \"\", \"\"],\r\n  optimizationTarget: \"finalATK\",//TODO need to validate\r\n  mainStatAssumptionLevel: 0,\r\n  useLockedArts: false,\r\n  useEquippedArts: false,\r\n  ascending: false,\r\n})\r\n\r\nfunction buildSettingsReducer(state: BuildSetting, action): BuildSetting {\r\n  switch (action.type) {\r\n    case 'mainStatKey': {\r\n      const { index, mainStatKey } = action\r\n      state.mainStatKeys[index] = mainStatKey\r\n      return { ...state, mainStatKeys: [...state.mainStatKeys] }//do this because this is a dependency, so needs to be a \"new\" array\r\n    }\r\n    case `setFilter`: {\r\n      const { index, key, num = 0 } = action\r\n      state.setFilters[index] = { key, num }\r\n      return { ...state, setFilters: [...state.setFilters] }//do this because this is a dependency, so needs to be a \"new\" array\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\n\r\nexport default function BuildDisplay({ location: { characterKey: propCharacterKey } }) {\r\n  const [characterKey, setcharacterKey] = useState(\"\" as CharacterKey | \"\")\r\n  const [buildSettings, buildSettingsDispatch] = useReducer(buildSettingsReducer, initialBuildSettings())\r\n  const { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending, } = buildSettings\r\n\r\n  const [builds, setbuilds] = useState([] as any[])\r\n  const [maxBuildsToShow, setmaxBuildsToShow] = useState(maxBuildsToShowDefault)\r\n\r\n  const [modalBuild, setmodalBuild] = useState(null)//the newBuild that is being displayed in the character modal\r\n  const [showArtCondModal, setshowArtCondModal] = useState(false)\r\n  const [showCharacterModal, setshowCharacterModal] = useState(false)\r\n\r\n  const [generatingBuilds, setgeneratingBuilds] = useState(false)\r\n  const [generationProgress, setgenerationProgress] = useState(0)\r\n  const [generationDuration, setgenerationDuration] = useState(0)//in ms\r\n  const [generationSkipped, setgenerationSkipped] = useState(0)\r\n\r\n  const [charDirty, setCharDirty] = useForceUpdate()\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const [artsDirty, setArtsDirty] = useForceUpdate()\r\n\r\n  const isMounted = useRef(false)\r\n\r\n  const worker = useRef(null as Worker | null)\r\n\r\n  useEffect(() => ReactGA.pageview('/build'), [])\r\n\r\n  useEffect(() => {\r\n    CharacterDatabase.registerCharListener(characterKey, setCharDirty)\r\n    return () => { characterKey && CharacterDatabase.unregisterCharListener(characterKey, setCharDirty) }\r\n  }, [characterKey, setCharDirty])\r\n\r\n  //register changes in artifact database\r\n  useEffect(() => {\r\n    ArtifactDatabase.registerListener(setArtsDirty)\r\n    return () => { ArtifactDatabase.unregisterListener(setArtsDirty) }\r\n  }, [setArtsDirty])\r\n\r\n  //terminate worker when component unmounts\r\n  useEffect(() => () => worker.current?.terminate(), [])\r\n\r\n  //select a new character Key\r\n  const selectCharacter = useCallback((cKey = \"\") => {\r\n    if (characterKey === cKey) return\r\n    setcharacterKey(cKey)\r\n    CharacterDatabase.registerCharListener(cKey, setCharDirty)\r\n    buildSettingsDispatch({ ...initialBuildSettings(), ...(CharacterDatabase.get(cKey)?.buildSettings ?? {}) })\r\n    setbuilds([])\r\n    return () => CharacterDatabase.unregisterCharListener(cKey, setCharDirty)\r\n  }, [setCharDirty, setcharacterKey, buildSettingsDispatch, characterKey])\r\n\r\n  //load saved stat from DB. will cause infinite loop if add 'selectCharacter' to dependency array\r\n  useEffect(() => {//startup load from localStorage\r\n    if (!(\"BuildsDisplay.state\" in localStorage)) return\r\n    const { characterKey = \"\", maxBuildsToShow = maxBuildsToShowDefault } = loadFromLocalStorage(\"BuildsDisplay.state\") ?? {}\r\n    if (characterKey && CharacterDatabase.get(characterKey)) selectCharacter(characterKey)\r\n    setmaxBuildsToShow(maxBuildsToShow)\r\n  }, [])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => propCharacterKey && selectCharacter(propCharacterKey), [propCharacterKey, selectCharacter])//update when props update\r\n  const character = useMemo(() => charDirty && CharacterDatabase.get(characterKey), [characterKey, charDirty])\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheet = usePromise(character && WeaponSheet.get(character.weapon.key))\r\n  const initialStats = useMemo(() => charDirty && character && characterSheet && weaponSheet && Character.createInitialStats(character, characterSheet, weaponSheet), [character, charDirty, characterSheet, weaponSheet])\r\n  const statsDisplayKeys = useMemo(() => charDirty && characterSheet && characterSheet.getDisplayStatKeys(initialStats), [initialStats, charDirty, characterSheet])\r\n\r\n  //save build settings to character when buildSettings change, will cause infinite loop if add 'character' to dependency array\r\n  useEffect(() => {\r\n    if (!character) return\r\n    character.buildSettings = buildSettings\r\n    CharacterDatabase.update(character)\r\n  }, [buildSettings]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //save to BuildsDisplay.state on change\r\n  useEffect(() => {\r\n    if (isMounted.current) saveToLocalStorage(\"BuildsDisplay.state\", { characterKey, maxBuildsToShow })\r\n    else isMounted.current = true\r\n  }, [characterKey, maxBuildsToShow])\r\n\r\n\r\n  const { split, totBuildNumber } = useMemo(() => {\r\n    if (!characterKey) // Make sure we have all slotKeys\r\n      return { split: Object.fromEntries(allSlotKeys.map(slotKey => [slotKey, []])) as ArtifactsBySlot, totBuildNumber: 0 }\r\n    const artifactDatabase = deepClone(ArtifactDatabase.getArtifactDatabase())\r\n    Object.entries(artifactDatabase).forEach(([key, art]) => {\r\n      //if its equipped on the selected character, bypass the check\r\n      if (art.location === characterKey) return\r\n\r\n      if (art.lock && !useLockedArts) delete artifactDatabase[key]\r\n      else if (art.location && !useEquippedArts) delete artifactDatabase[key]\r\n    })\r\n    const split = Artifact.splitArtifactsBySlot(artifactDatabase);\r\n    //filter the split slots on the mainstats selected.\r\n    artifactsSlotsToSelectMainStats.forEach((slotKey, index) =>\r\n      mainStatKeys[index] && (split[slotKey] = split[slotKey]?.filter((art) => art.mainStatKey === mainStatKeys[index])))\r\n    const totBuildNumber = calculateTotalBuildNumber(split, setFilters)\r\n    return artsDirty && { split, totBuildNumber }\r\n  }, [characterKey, useLockedArts, useEquippedArts, mainStatKeys, setFilters, artsDirty])\r\n\r\n  const generateBuilds = useCallback((turbo = false) => {\r\n    if (!initialStats || !artifactSheets) return\r\n    if (typeof turbo !== \"boolean\") turbo = false\r\n    setbuilds([])\r\n    setgeneratingBuilds(true)\r\n    setgenerationDuration(0)\r\n    setgenerationProgress(0)\r\n    setgenerationSkipped(0)\r\n    //get the formula for this target\r\n\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    const artifactSetEffects = Artifact.setEffectsObjs(artifactSheets, initialStats)\r\n    const splitArtifacts = deepClone(split) as ArtifactsBySlot\r\n    //add mainStatVal to each artifact\r\n    Object.values(splitArtifacts).forEach(artArr => {\r\n      artArr!.forEach(art => {\r\n        art.mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(mainStatAssumptionLevel, art.numStars * 4), art.level)) ?? 0;\r\n      })\r\n    })\r\n    //generate the key dependencies for the formula\r\n    const minFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { min }]) => [statKey, min]).filter(([, min]) => typeof min === \"number\"))\r\n    const maxFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { max }]) => [statKey, max]).filter(([, max]) => typeof max === \"number\"))\r\n    //create an obj with app the artifact set effects to pass to buildworker.\r\n    const data = {\r\n      splitArtifacts, initialStats, artifactSetEffects,\r\n      setFilters, minFilters, maxFilters, maxBuildsToShow, optimizationTarget, ascending, turbo\r\n    };\r\n    worker.current?.terminate()\r\n    worker.current = new Worker()\r\n    worker.current.onmessage = (e) => {\r\n      if (typeof e.data.progress === \"number\") {\r\n        const { progress, timing = 0, skipped = 0 } = e.data\r\n        setgenerationProgress(progress)\r\n        setgenerationDuration(timing)\r\n        setgenerationSkipped(skipped)\r\n        return\r\n      }\r\n      ReactGA.timing({\r\n        category: \"Build Generation\",\r\n        variable: \"timing\",\r\n        value: e.data.timing,\r\n        label: totBuildNumber.toString()\r\n      })\r\n      const builds = e.data.builds.map(obj =>\r\n        Character.calculateBuildwithArtifact(initialStats, obj.artifacts, artifactSheets))\r\n      setbuilds(builds)\r\n      setgeneratingBuilds(false)\r\n      worker.current?.terminate()\r\n      worker.current = null\r\n    };\r\n    worker.current.postMessage(data)\r\n  }, [artifactSheets, split, totBuildNumber, mainStatAssumptionLevel, ascending, initialStats, maxBuildsToShow, optimizationTarget, setFilters, statFilters])\r\n\r\n  //try to generate build when build numbers are low\r\n  useEffect(() => {\r\n    if (totBuildNumber && totBuildNumber <= autoBuildGenLimit) generateBuilds()\r\n    else setbuilds([])\r\n  }, [characterKey, split, totBuildNumber, buildSettings, generateBuilds])\r\n\r\n  const dropdownitemsForStar = useCallback((star, index) => artifactSheets && ArtifactSheet.setsWithMaxRarity(artifactSheets, star).map(([setKey, setobj]) => {\r\n    if (setFilters.some(filter => filter.key === setKey)) return false;\r\n    const setsNumArr = Object.keys(artifactSheets?.[setKey]?.setEffects ?? {})\r\n    const artsAccountedOther = setFilters.reduce((accu, cur, ind) => (cur.key && ind !== index) ? accu + cur.num : accu, 0)\r\n    if (setsNumArr.every((num: any) => parseInt(num) + artsAccountedOther > 5)) return false;\r\n    return (<Dropdown.Item key={setKey} onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: setKey, num: parseInt(setsNumArr[0] as any) ?? 0 })} >\r\n      {setobj.name}\r\n    </Dropdown.Item>)\r\n  }), [setFilters, buildSettingsDispatch, artifactSheets])\r\n\r\n  const characterName = characterSheet?.name ?? \"Character Name\"\r\n  const characterDropDown = useMemo(() => <DropdownButton title={characterName} disabled={generatingBuilds}>\r\n    <Dropdown.Item onClick={() => selectCharacter(\"\")}>Unselect Character</Dropdown.Item>\r\n    <Dropdown.Divider />\r\n    <CharacterSelectionDropdownList onSelect={cKey => selectCharacter(cKey)} />\r\n  </DropdownButton>, [characterName, generatingBuilds, selectCharacter])\r\n\r\n  const formula = usePromise(Array.isArray(optimizationTarget) ? Formula.get(optimizationTarget) : undefined)\r\n  const sortByText = useMemo(() => {\r\n    if (Array.isArray(optimizationTarget) && formula) {\r\n      const field = (formula as any).field as IFieldDisplay\r\n      const variant = Character.getTalentFieldValue(field, \"variant\", initialStats)\r\n      const text = Character.getTalentFieldValue(field, \"text\", initialStats)\r\n      let [, , talentKey] = (formula as any).keys as string[]\r\n      if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n      return <b>{characterSheet?.getTalent(talentKey)?.name}: <span className={`text-${variant}`}>{text}</span></b>\r\n\r\n    } else return <b>Basic Stat: <span className={`text-${Stat.getStatVariant(optimizationTarget)}`}>{Stat.getStatNamePretty(optimizationTarget)}</span></b>\r\n    // return <Badge variant=\"danger\">INVALID</Badge>\r\n  }, [optimizationTarget, formula, initialStats, characterSheet])\r\n\r\n\r\n  const artsAccounted = setFilters.reduce((accu, cur) => cur.key ? accu + cur.num : accu, 0)\r\n  const artifactCondCount = useMemo(() => {\r\n    let count = 0;\r\n    crawlObject(initialStats?.conditionalValues?.artifact, [], v => Array.isArray(v), () => count++)\r\n    return count\r\n  }, [initialStats?.conditionalValues])\r\n  //rudimentary dispatcher, definitely not the same API as the real characterDispatch.\r\n  const characterDispatch = useCallback(val => CharacterDatabase.update({ ...character, ...val }), [character])\r\n\r\n  const hasMinFilters = Object.entries(statFilters).some(([statKey, { min }]) => typeof min === \"number\")\r\n  const hasMaxFilters = Object.entries(statFilters).some(([statKey, { max }]) => typeof max === \"number\")\r\n  const disabledTurbo = ascending ? hasMinFilters : hasMaxFilters\r\n\r\n  return <Container className=\"mt-2\">\r\n    <InfoComponent\r\n      pageKey=\"buildPage\"\r\n      modalTitle=\"Character Management Page Guide\"\r\n      text={[\"For self-infused attacks, like Noelle's Sweeping Time, enable to skill in the talent page.\",\r\n        \"You can compare the difference between equipped artifacts and generated builds.\",\r\n        \"TURBO mode can process millions of builds in seconds.\",\r\n        \"The more complex the formula, the longer the generation time.\",]}\r\n    ><InfoDisplay /></InfoComponent>\r\n    <BuildModal {...{ build: modalBuild, showCharacterModal, characterKey, selectCharacter, setmodalBuild, setshowCharacterModal }} />\r\n    {!!initialStats && <ArtConditionalModal {...{ showArtCondModal, setshowArtCondModal, initialStats, characterDispatch, artifactCondCount }} />}\r\n    <Row className=\"mt-2 mb-2\">\r\n      <Col>\r\n        {/* Build Generator Editor */}\r\n        <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n          <Card.Header>Build Generator</Card.Header>\r\n          <Card.Body>\r\n            <Row >\r\n              <Col xs={12} lg={6}>\r\n                {/* character selection */}\r\n                {characterKey ?\r\n                  <CharacterCard header={characterDropDown} characterKey={characterKey} bg={\"lightcontent\"} cardClassName=\"mb-2\" onEdit={!generatingBuilds ? () => setshowCharacterModal(true) : undefined} /> :\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                    <Card.Header>\r\n                      {characterDropDown}\r\n                    </Card.Header>\r\n                  </Card>}\r\n                {/* Hit mode options */}\r\n                {!!characterSheet?.hasTalentPage && character && <HitModeCard characterSheet={characterSheet} className=\"mb-2\" character={character} />}\r\n                {/* Final Stat Filter */}\r\n                {Boolean(statsDisplayKeys) && <StatFilterCard className=\"mb-2\" statFilters={statFilters} statKeys={statsDisplayKeys?.basicKeys as any} setStatFilters={sFs => buildSettingsDispatch({ statFilters: sFs })} />}\r\n              </Col>\r\n              <Col xs={12} lg={6}><Row>\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any}><Card.Body>\r\n                    <Button className=\"w-100\" onClick={() => setshowArtCondModal(true)} disabled={generatingBuilds}>\r\n                      <span>Default Artifact Set Effects {Boolean(artifactCondCount) && <Badge variant=\"success\">{artifactCondCount} Selected</Badge>}</span>\r\n                    </Button>\r\n                  </Card.Body></Card>\r\n                </Col>\r\n                {/* Artifact set picker */}\r\n                {setFilters.map(({ key: setKey, num: setNum }: { key: ArtifactSetKey, num: number }, index) => <Col className=\"mb-2\" key={index} xs={12}>\r\n                  <Card className=\"h-100\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n                    <Card.Header>\r\n                      <ButtonGroup>\r\n                        {/* Artifact set */}\r\n                        <DropdownButton as={ButtonGroup} title={artifactSheets?.[setKey]?.name ?? \"Artifact Set Filter\"} disabled={generatingBuilds}>\r\n                          <Dropdown.Item onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: \"\" })}>Unselect Artifact</Dropdown.Item>\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(5, index)}\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(4, index)}\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n                          {dropdownitemsForStar(3, index)}\r\n                        </DropdownButton>\r\n                        {/* set number */}\r\n                        <DropdownButton as={ButtonGroup} title={`${setNum}-set`}\r\n                          disabled={generatingBuilds || !setKey || artsAccounted >= 5}\r\n                        >\r\n                          {!!initialStats && Object.keys(artifactSheets?.[setKey]?.setEffects ?? {}).map((num: any) => {\r\n                            let artsAccountedOther = setFilters.reduce((accu, cur) => (cur.key && cur.key !== setKey) ? accu + cur.num : accu, 0)\r\n                            return (parseInt(num) + artsAccountedOther <= 5) &&\r\n                              (<Dropdown.Item key={num} onClick={() => buildSettingsDispatch({ type: 'setFilter', index, key: setFilters[index].key, num: parseInt(num) })} >\r\n                                {`${num}-set`}\r\n                              </Dropdown.Item>)\r\n                          })}\r\n                        </DropdownButton>\r\n                      </ButtonGroup>\r\n                    </Card.Header>\r\n                    {setKey ? <Card.Body><Row className=\"mb-n2\">\r\n                      {!!initialStats && Object.keys(artifactSheets?.[setKey].setEffects ?? {}).map(setNKey => parseInt(setNKey) as SetNum).filter(setNkey => setNkey <= setNum).map(setNumKey =>\r\n                        <SetEffectDisplay newBuild={undefined} key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild: initialStats, characterDispatch, editable: true }} />)}\r\n                    </Row></Card.Body> : null}\r\n                  </Card>\r\n                </Col>)}\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any}><Card.Body className=\"mb-n2\">\r\n                    <Button className=\"w-100 mb-2\" onClick={() => buildSettingsDispatch({ useEquippedArts: !useEquippedArts })} disabled={generatingBuilds}>\r\n                      <span><FontAwesomeIcon icon={useEquippedArts ? faCheckSquare : faSquare} /> Use Equipped Artifacts</span>\r\n                    </Button>\r\n                    <Button className=\"w-100 mb-2\" onClick={() => buildSettingsDispatch({ useLockedArts: !useLockedArts })} disabled={generatingBuilds}>\r\n                      <span><FontAwesomeIcon icon={useLockedArts ? faCheckSquare : faSquare} /> Use Locked Artifacts</span>\r\n                    </Button>\r\n                  </Card.Body></Card>\r\n                </Col>\r\n                {/* main stat selector */}\r\n                <Col className=\"mb-2\" xs={12}>\r\n                  <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n                    <Card.Header>\r\n                      <Row>\r\n                        <Col>Artifact Main Stat</Col>\r\n                        <Col xs=\"auto\"><AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={v => buildSettingsDispatch({ mainStatAssumptionLevel: v })} /></Col>\r\n                      </Row>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"mb-n2\">\r\n                      {artifactsSlotsToSelectMainStats.map((slotKey, index) =>\r\n                      (<div className=\"text-inline mb-1 d-flex justify-content-between\" key={slotKey}>\r\n                        <h6 className=\"d-inline mb-0\">\r\n                          {Artifact.slotNameWithIcon(slotKey)}\r\n                        </h6>\r\n                        <DropdownButton disabled={generatingBuilds} size=\"sm\"\r\n                          title={mainStatKeys[index] ? Stat.getStatNameWithPercent(mainStatKeys[index]) : \"Select a mainstat\"}\r\n                          className=\"d-inline\">\r\n                          <Dropdown.Item onClick={() => buildSettingsDispatch({ type: \"mainStatKey\", index, mainStatKey: \"\" })} >No MainStat</Dropdown.Item>\r\n                          {Artifact.slotMainStats(slotKey).map(mainStatKey =>\r\n                            <Dropdown.Item onClick={() => buildSettingsDispatch({ type: \"mainStatKey\", index, mainStatKey })} key={mainStatKey}>\r\n                              {Stat.getStatNameWithPercent(mainStatKey)}\r\n                            </Dropdown.Item>)}\r\n                        </DropdownButton>\r\n                      </div>))}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row></Col>\r\n            </Row>\r\n            <Row className=\"mb-2\">\r\n              <Col>{!!characterKey && <BuildAlert {...{ totBuildNumber, generatingBuilds, generationSkipped, generationProgress, generationDuration, characterName, maxBuildsToShow }} />}</Col>\r\n            </Row>\r\n            <Row className=\"d-flex justify-content-between\">\r\n              <Col xs=\"auto\" >\r\n                <ButtonGroup>\r\n                  <Button\r\n                    className=\"h-100\"\r\n                    disabled={!characterKey || generatingBuilds}\r\n                    variant={(characterKey && totBuildNumber <= warningBuildNumber) ? \"success\" : \"warning\"}\r\n                    onClick={generateBuilds}\r\n                  ><span>Generate Builds</span></Button>\r\n                  {totBuildNumber > warningBuildNumber && <OverlayTrigger\r\n                    overlay={<Tooltip id=\"turbo-tooltip\">\r\n                      <div>Dramatically speeds up build time.</div>\r\n                      <div>Yields only 1 build.</div>\r\n                      {Boolean(disabledTurbo) && <div className=\"mt-2\">Does not work with <b>{Boolean(ascending) ? 'min' : 'max'}imum</b> stat filter when sorting by <b>{Boolean(ascending) ? 'as' : 'des'}cending</b></div>}\r\n                    </Tooltip>}\r\n                  ><span >\r\n                      <Button variant=\"success\" disabled={disabledTurbo} className={`rounded-0 ${disabledTurbo ? \"cursor-pointer\" : \"\"}`} onClick={() => generateBuilds(true)}><strong>TURBO</strong></Button>\r\n                    </span></OverlayTrigger>}\r\n                  <Button\r\n                    className=\"h-100\"\r\n                    disabled={!generatingBuilds}\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                      if (!worker.current) return;\r\n                      worker.current.terminate();\r\n                      worker.current = null\r\n                      setgeneratingBuilds(false)\r\n                      setbuilds([])\r\n                      setgenerationDuration(0)\r\n                      setgenerationProgress(0)\r\n                      setgenerationSkipped(0)\r\n                    }}\r\n                  ><span>Cancel</span></Button>\r\n                </ButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                {/* Dropdown to select sorting value */}\r\n                {<ButtonGroup>\r\n                  <Dropdown as={ButtonGroup} drop=\"up\">\r\n                    <Dropdown.Toggle disabled={generatingBuilds} variant=\"light\" >\r\n                      <span>Optimization Target: {sortByText}</span>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu align=\"right\" style={{ minWidth: \"40rem\" }} >\r\n                      <Row>\r\n                        {!!statsDisplayKeys && Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n                          let header = \"\"\r\n                          if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n                          else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n                          else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n                          else header = (characterSheet?.getTalent(talentKey)?.name ?? talentKey as string)\r\n                          return <Col xs={12} md={6} key={talentKey}>\r\n                            <Dropdown.Header style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}><b>{header}</b></Dropdown.Header>\r\n                            {fields.map((target, i) => {\r\n                              if (Array.isArray(target))\r\n                                return <TargetSelectorDropdownItem key={i} {...{ target, buildSettingsDispatch, initialStats }} />\r\n                              else if (typeof target === \"string\")\r\n                                return <Dropdown.Item key={i} onClick={() => buildSettingsDispatch({ optimizationTarget: target })}>{Stat.getStatNamePretty(target)}</Dropdown.Item>\r\n                              return null\r\n                            })}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                  <Button onClick={() => buildSettingsDispatch({ ascending: !buildSettings.ascending })} disabled={generatingBuilds} variant={ascending ? \"danger\" : \"primary\"}>\r\n                    <FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />\r\n                    <span>{ascending ? \"Ascending\" : \"Descending\"}</span>\r\n                  </Button>\r\n                </ButtonGroup >}\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-2\">\r\n      <Col>\r\n        <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>{characterKey ? <span>Showing <b>{builds.length}</b> Builds generated for {characterName}</span> : <span>Select a character to generate builds.</span>}</Col>\r\n              <Col xs=\"auto\">\r\n                <DropdownButton title={<span>Max builds to show: <b>{maxBuildsToShow}</b></span>} size=\"sm\">\r\n                  {maxBuildsToShowList.map(v => <Dropdown.Item key={v} onClick={() => setmaxBuildsToShow(v)}>{v}</Dropdown.Item>)}\r\n                </DropdownButton>\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          {/* Build List */}\r\n          <ListGroup>\r\n            {builds.map((build, index) =>\r\n              index < maxBuildsToShow && characterSheet && weaponSheet && <ArtifactDisplayItem characterSheet={characterSheet} weaponSheet={weaponSheet} build={build} characterKey={characterKey} index={index} key={index} statsDisplayKeys={statsDisplayKeys} onClick={() => setmodalBuild(build as any)} />\r\n            )}\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container >\r\n}\r\n\r\nfunction TargetSelectorDropdownItem({ target, buildSettingsDispatch, initialStats }) {\r\n  const formula = usePromise(Formula.get(target))\r\n  if (!formula) return null\r\n  const talentField = (formula as any).field as IFieldDisplay\r\n  return <Dropdown.Item onClick={() => buildSettingsDispatch({ optimizationTarget: target })} style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}>\r\n    <span className={`text-${Character.getTalentFieldValue(talentField, \"variant\", initialStats)}`}>{Character.getTalentFieldValue(talentField, \"text\", initialStats)}</span>\r\n  </Dropdown.Item>\r\n}\r\n\r\nfunction BuildModal({ build, showCharacterModal, characterKey, selectCharacter, setmodalBuild, setshowCharacterModal }) {\r\n  const closeModal = useCallback(() => {\r\n    setmodalBuild(null)\r\n    setshowCharacterModal(false)\r\n  }, [setmodalBuild, setshowCharacterModal])\r\n  return <Modal show={Boolean(showCharacterModal || build)} onHide={closeModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n    <React.Suspense fallback={<span>Loading...</span>}>\r\n      <CharacterDisplayCard\r\n        character={undefined}\r\n        tabName={undefined}\r\n        characterKey={characterKey}\r\n        setCharacterKey={cKey => selectCharacter(cKey)}\r\n        newBuild={build}\r\n        onClose={closeModal}\r\n        editable={showCharacterModal}\r\n        footer={<Button variant=\"danger\" onClick={closeModal}>Close</Button>} />\r\n    </React.Suspense>\r\n  </Modal>\r\n}\r\n\r\nfunction ArtConditionalModal({ showArtCondModal, setshowArtCondModal, initialStats, characterDispatch, artifactCondCount }) {\r\n  const closeArtCondModal = useCallback(() => setshowArtCondModal(false), [setshowArtCondModal])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  if (!artifactSheets) return null\r\n  const artSetKeyList = ArtifactSheet.namesByMaxRarities(artifactSheets).flatMap(([, items]) => items.map(([key]) => [key, artifactSheets[key]] as const))\r\n  return <Modal show={showArtCondModal} onHide={closeArtCondModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <h5>Default Artifact Set Effects  {Boolean(artifactCondCount) && <Badge variant=\"success\">{artifactCondCount} Selected</Badge>}</h5>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button onClick={() => {\r\n              if (initialStats.conditionalValues.artifact) initialStats.conditionalValues.artifact = {}\r\n              characterDispatch({ conditionalValues: initialStats.conditionalValues })\r\n            }}><span><FontAwesomeIcon icon={faUndo} /> Reset All</span></Button>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={closeArtCondModal}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          {artSetKeyList.map(([setKey, sheet]) => {\r\n            let icon = Object.values(sheet.slotIcons)[0]\r\n            let numStars = [...sheet.rarity][0]\r\n            return <Col className=\"mb-2\" key={setKey} xs={12} lg={6} xl={4}>\r\n              <Card className=\"h-100\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n                <Card.Header >\r\n                  <Row>\r\n                    <Col xs=\"auto\" className=\"ml-n3 my-n2\">\r\n                      <Image src={icon} className={`thumb-mid grad-${numStars}star m-1`} thumbnail />\r\n                    </Col>\r\n                    <Col >\r\n                      <h6><b>{artifactSheets?.[setKey].name ?? \"\"}</b></h6>\r\n                      <span><Stars stars={numStars} /></span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Header>\r\n                <Card.Body><Row className=\"mb-n2\">\r\n                  {Boolean(setKey) && Object.keys(sheet.setEffects).map(key => parseInt(key) as SetNum).map(setNumKey =>\r\n                    <SetEffectDisplay newBuild={undefined} key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild: initialStats, editable: true, characterDispatch, }} />)}\r\n                </Row></Card.Body>\r\n              </Card>\r\n            </Col>\r\n          })}\r\n        </Row>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"danger\" onClick={closeArtCondModal}>\r\n          <FontAwesomeIcon icon={faTimes} /> CLOSE</Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nfunction StatFilterItem({ statKey, statKeys = [], min, max, close, setFilter }: {\r\n  statKey?, statKeys, min, max, close, setFilter\r\n}) {\r\n  const isFloat = Stat.getStatUnit(statKey) === \"%\"\r\n  const inputProps = {\r\n    disabled: !statKey,\r\n    allowEmpty: true,\r\n    float: isFloat,\r\n  }\r\n  const minInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MIN\",\r\n    value: min,\r\n    onChange: (s) => setFilter(statKey, s, max)\r\n  }\r\n  const maxInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MAX\",\r\n    value: max,\r\n    onChange: (s) => setFilter(statKey, min, s)\r\n  }\r\n  return <InputGroup className=\"mb-2\">\r\n    <DropdownButton\r\n      as={InputGroup.Prepend}\r\n      title={Stat.getStatNamePretty(statKey, \"New Stat\")}\r\n      id=\"input-group-dropdown-1\"\r\n    >\r\n      {statKeys.map(sKey => <Dropdown.Item key={sKey} onClick={() => { close?.(); setFilter(sKey, min, max) }}>{Stat.getStatNamePretty(sKey)}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <CustomFormControl {...minInputProps} />\r\n    <CustomFormControl {...maxInputProps} />\r\n    {Boolean(close) && <InputGroup.Append>\r\n      <Button variant=\"danger\" onClick={close}><FontAwesomeIcon icon={faTrash} /></Button>\r\n    </InputGroup.Append>}\r\n  </InputGroup>\r\n}\r\n\r\nfunction HitModeCard({ characterSheet, character, className }: { characterSheet: CharacterSheet, character: ICharacter, className: string }) {\r\n  const setHitmode = useCallback(({ hitMode }) => CharacterDatabase.update({ ...character, hitMode }), [character])\r\n  const setReactionMode = useCallback(({ reactionMode }) => CharacterDatabase.update({ ...character, reactionMode }), [character])\r\n  const setInfusionAura = useCallback(({ infusionAura }) => CharacterDatabase.update({ ...character, infusionAura }), [character])\r\n  if (!character) return null\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className={className}>\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>Hit Mode Options</Col>\r\n        <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character} characterDispatch={setInfusionAura} /></Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"mb-n2\">\r\n      <HitModeToggle hitMode={character.hitMode} characterDispatch={setHitmode} className=\"w-100 mb-2\" />\r\n      <ReactionToggle characterSheet={characterSheet} character={character} characterDispatch={setReactionMode} className=\"w-100 mb-2\" />\r\n    </Card.Body>\r\n  </Card >\r\n}\r\n\r\nfunction StatFilterCard({ statKeys = [], statFilters = {}, setStatFilters, className }) {\r\n  const remainingKeys = statKeys.filter(key => !(Object.keys(statFilters) as any).some(k => k === key))\r\n  const setFilter = (sKey, min, max) => setStatFilters({ ...statFilters, [sKey]: { min, max } })\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className={className}>\r\n    <Card.Header>Final Stat Filter</Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-n2\">\r\n        {(Object.entries(statFilters) as [string, { min, max }][]).map(([statKey, { min, max }]) => {\r\n          return <Col xs={12} key={statKey} ><StatFilterItem statKey={statKey} statKeys={remainingKeys} setFilter={setFilter} min={min} max={max} close={() => {\r\n            delete statFilters[statKey]\r\n            setStatFilters({ ...statFilters })\r\n          }} /></Col>\r\n        })}\r\n        <Col xs={12}>\r\n          <StatFilterItem min={undefined} max={undefined} close={undefined} statKeys={remainingKeys} setFilter={setFilter} />\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\ntype ArtifactDisplayItemProps = { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, index: number, characterKey: string, build: ICalculatedStats, statsDisplayKeys: any, onClick: () => void }\r\n//for displaying each artifact build\r\nfunction ArtifactDisplayItem({ characterSheet, weaponSheet, index, characterKey, build, statsDisplayKeys, onClick }: ArtifactDisplayItemProps) {\r\n  const sheets = usePromise(ArtifactSheet.getAll())\r\n  const character = CharacterDatabase.get(characterKey)\r\n  if (!character) return null\r\n  return (<div>\r\n    <ListGroup.Item\r\n      variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"text-white\" action\r\n      onClick={onClick}\r\n    >\r\n      <h5>{(Object.entries(build.setToSlots) as [ArtifactSetKey, SlotKey[]][]).sort(([key1, slotarr1], [key2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n        <Badge key={key} variant=\"primary\" className=\"mr-2\">\r\n          {slotarr.map(slotKey => Artifact.slotIcon(slotKey))} {sheets?.[key].name ?? \"\"}\r\n        </Badge>\r\n      )}</h5>\r\n      <StatDisplayComponent editable={false} {...{ characterSheet, weaponSheet, character, newBuild: build, statsDisplayKeys, cardbg: (index % 2 ? \"lightcontent\" : \"darkcontent\") }} />\r\n    </ListGroup.Item>\r\n  </div>)\r\n}\r\n\r\nfunction BuildAlert({ totBuildNumber, generatingBuilds, generationSkipped, generationProgress, generationDuration, characterName, maxBuildsToShow }) {\r\n  const totalBuildNumberString = totBuildNumber?.toLocaleString() ?? totBuildNumber\r\n  const totalUnskipped = totBuildNumber - generationSkipped\r\n  const generationProgressString = generationProgress?.toLocaleString() ?? generationProgress\r\n  const generationSkippedString = generationSkipped?.toLocaleString() ?? generationSkipped\r\n  const totalUnskippedString = totalUnskipped?.toLocaleString() ?? totalUnskipped\r\n  const generationSkippedText = Boolean(generationSkipped) && <span>(<b>{generationSkippedString}</b> skipped)</span>\r\n  if (generatingBuilds) {\r\n    let progPercent = generationProgress * 100 / (totalUnskipped)\r\n    return <Alert variant=\"success\">\r\n      <span>Generating and testing <b className=\"text-monospace\">{generationProgressString}/{totalUnskippedString}</b> build configurations against the criteria for <b>{characterName}</b>. {generationSkippedText}</span><br />\r\n      <h6>Time elapsed: <strong className=\"text-monospace\">{timeStringMs(generationDuration)}</strong></h6>\r\n      <ProgressBar now={progPercent} label={`${progPercent.toFixed(1)}%`} />\r\n    </Alert>\r\n  } else if (!generatingBuilds && generationProgress) {//done\r\n    return <Alert variant=\"success\">\r\n      <span>Generated and tested <b className=\"text-monospace\">{totalUnskippedString}</b> Build configurations against the criteria for <b>{characterName}</b>. {generationSkippedText}</span>\r\n      <h6>Total duration: <strong className=\"text-monospace\">{timeStringMs(generationDuration)}</strong></h6>\r\n      <ProgressBar now={100} variant=\"success\" label=\"100%\" />\r\n    </Alert>\r\n  } else {\r\n    return totBuildNumber === 0 ?\r\n      <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will not generate any builds for <b>{characterName}</b>. Please change your Artifact configurations, or add/unlock more Artifacts.</span></Alert>\r\n      : (totBuildNumber > warningBuildNumber ?\r\n        <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will generate <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>. This might take quite a while to generate...</span></Alert> :\r\n        <Alert variant=\"success\" className=\"mb-0\"><span>Current configuration {totBuildNumber <= maxBuildsToShow ? \"generated\" : \"will generate\"} <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>.</span></Alert>)\r\n  }\r\n}\r\n\r\nconst levels = {\r\n  0: <span>No level assumption</span>,\r\n  4: <span>Assume at least level 4</span>,\r\n  8: <span>Assume at least level 8</span>,\r\n  12: <span>Assume at least level 12</span>,\r\n  16: <span>Assume at least level 16</span>,\r\n  20: <span>Assume at least level 20</span>\r\n}\r\nfunction AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel }) {\r\n  return <OverlayTrigger overlay={<Tooltip id=\"assume-level-tooltip\">Change Main Stat value to be at least a specific level. Does not change substats.</Tooltip>}  >\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant={mainStatAssumptionLevel ? \"orange\" : \"primary\"}>{levels[mainStatAssumptionLevel]}</Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        {Object.entries(levels).map(([key, text]) => <Dropdown.Item key={key} onClick={() => setmainStatAssumptionLevel(parseInt(key))}>{text}</Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  </OverlayTrigger>\r\n}\r\n","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n};\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].map(ele => FormulaText[`${ele}_crystalize_hit`] = o => <span>250% * {f(o, `crystalize_hit`)}</span>)\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","import ElementalData from \"../Data/ElementalData\"\r\nimport { StatKey, StatDict, IArtifact, SubstatKey } from \"../Types/artifact\"\r\nimport { ArtifactSetEffects, PrunedArtifactSetEffects, ArtifactsBySlot, SetFilter } from \"../Types/Build\"\r\nimport { ArtifactSetKey } from \"../Types/consts\"\r\n\r\n/**\r\n * Remove artifacts that can never be used in optimized builds\r\n * @param {artifact[]} artifacts - List of artifacts of the same slot\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - The list of the set effects\r\n * @param {Set.<statKey>} significantStats - A set of stats that pruning needs to take into consideration\r\n * @param {bool} ascending - Whether the sorting is ascending or descending\r\n * @param {Set.<setKey>} alwaysAccepted - The list of artifact sets that are always included\r\n */\r\nexport function pruneArtifacts(artifacts: IArtifact[], artifactSetEffects: ArtifactSetEffects, significantStats: Set<StatKey>, ascending: boolean = false, alwaysAccepted: Set<ArtifactSetKey> = new Set()): IArtifact[] {\r\n  function shouldKeepFirst(first: StatDict, second: StatDict, preferFirst: boolean) {\r\n    let firstBetter = Object.entries(first).some(([k, v]) => v! > (second[k] ?? 0))\r\n    let secondBetter = Object.entries(second).some(([k, v]) => v! > (first[k] ?? 0))\r\n    if (ascending) [firstBetter, secondBetter] = [secondBetter, firstBetter]\r\n    // Keep if first is strictly better, uncomparable, or equal + prefer first\r\n    return firstBetter || (!secondBetter && preferFirst)\r\n  }\r\n\r\n  // Prune unused set effects. Sets with no relevant effects are regrouped to \"other\"\r\n  const prunedSetEffects: PrunedArtifactSetEffects = { \"other\": {} }\r\n  for (const set in artifactSetEffects)\r\n    for (const num in artifactSetEffects[set]) {\r\n      const effects = Object.entries(artifactSetEffects[set]![num]).filter(([key]) => significantStats.has(key as StatKey))\r\n      if (effects.length > 0) {\r\n        prunedSetEffects[set] = prunedSetEffects[set] ?? {}\r\n        prunedSetEffects[set]![num] = Object.fromEntries(effects)\r\n      }\r\n    }\r\n\r\n  // array of artifacts, artifact stats, and set (may be \"other\")\r\n  let tmp: { artifact: IArtifact, stats: Dict<StatKey, number>, set: ArtifactSetKey | \"other\" }[] = artifacts.map(artifact => {\r\n    let stats = {}, set: ArtifactSetKey | \"other\" = (artifact.setKey in prunedSetEffects) ? artifact.setKey : \"other\"\r\n    if (significantStats.has(artifact.mainStatKey as any))\r\n      stats[artifact.mainStatKey] = artifact.mainStatVal\r\n    for (const { key, value } of artifact.substats)\r\n      if (significantStats.has(key as SubstatKey))\r\n        stats[key] = (stats[key] ?? 0) + value\r\n    for (const key in stats)\r\n      if (key.endsWith(\"enemyRes_\"))\r\n        stats[key] = -stats[key]\r\n    return { artifact, stats, set }\r\n  })\r\n\r\n  // Compare artifacts' base stats from the same set\r\n  tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) =>\r\n    tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) =>\r\n      candidateSet !== otherSet || shouldKeepFirst(candidateStats, otherStats, candidate.id! <= other.id!)\r\n    ))\r\n\r\n  if (!ascending) {\r\n    // Cross-check with different sets\r\n    tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) => {\r\n      // Possible \"additional stats\" if a build equips `candidate` on an empty slot.\r\n      let possibleStats = [...Object.values(prunedSetEffects[candidateSet]!), {}].map(c => {\r\n        const current: Dict<string, number> = { ...candidateStats }\r\n        Object.entries(c).forEach(([key, value]: any) => current[key] = (current[key] ?? 0) + (value ?? 0))\r\n        return current\r\n      })\r\n      return tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) => {\r\n        if (candidateSet === otherSet) return true // Already checked same-set\r\n\r\n        // Remove possibilities that shouldn't be kept\r\n        possibleStats = possibleStats.filter(current =>\r\n          shouldKeepFirst(current, otherStats, candidate.id! <= other.id!))\r\n        return possibleStats.length !== 0\r\n      })\r\n    })\r\n  }\r\n  // Reinstate `alwaysAccepted`\r\n  return [\r\n    ...artifacts.filter(artifact => alwaysAccepted.has(artifact.setKey)),\r\n    ...tmp.map(tmp => tmp.artifact).filter(artifact => !alwaysAccepted.has(artifact.setKey)),\r\n  ]\r\n}\r\n\r\n/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet: { [setKey in ArtifactSetKey]?: IArtifact[] } = {}\r\n    for (const artifact of (artifactsBySlot[slotKey] as any)) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey]!.push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet['null']) artifactsBySet['null'].push(artifact)\r\n        else artifactsBySet['null'] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu: ArtifactsBySlot = {}, result: ArtifactsBySlot[] = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1]!.length, 1)\r\n    , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats, artifactsBySlot: ArtifactsBySlot, artifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\r\n  function slotPerm(index, stats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    let slotKey = slotKeys[index]\r\n    for (const artifact of (artifactsBySlot[slotKey] as any)) {\r\n      let newStats = { ...stats }\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey, art: IArtifact, setCount, accu, stats, artifactSetEffects) {\r\n  let setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n\r\n  // Add artifact stats\r\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal\r\n  art.substats.forEach((substat) => {\r\n    if (substat?.key in stats) stats[substat.key] += substat.value\r\n  })\r\n\r\n  // Add set effects\r\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\r\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]: any) => {\r\n    if (statKey in stats) stats[statKey] += val\r\n  })\r\n}\r\n\r\n/**\r\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\r\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\r\n  * @param {*} stats - The calcualted stats\r\n  * @param {*} useCharElement - Override the hit to be the character's elemental, that is not part of infusion.\r\n  */\r\nexport function getTalentStatKey(skillKey, stats, useCharElement = false) {\r\n  const { hitMode = \"\", infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if ((Object.keys(ElementalData) as any).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\r\n  if (!useCharElement) useCharElement = weaponType === \"catalyst\"\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || useCharElement) {\r\n    if (reactionMode && reactionMode.startsWith(characterEle)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n    return `${characterEle}_${skillKey}_${hitMode}`\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n\r\n  return `${eleKey}_${skillKey}_${hitMode}`\r\n}\r\n\r\nexport function getTalentStatKeyVariant(skillKey, stats, useCharElement = false) {\r\n  if ((Object.keys(ElementalData) as any).includes(skillKey)) return skillKey//elemental DMG\r\n  const { infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (!useCharElement) useCharElement = weaponType === \"catalyst\"\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || useCharElement) {\r\n    if (reactionMode && reactionMode.startsWith(characterEle)) {\r\n      if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n      else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n    }\r\n    return characterEle\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) {\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n  }\r\n  return eleKey\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>();\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => { pending = false }\r\n  }, [promise])\r\n  return res\r\n}\r\n"],"sourceRoot":""}