{"version":3,"sources":["Data/Weapons/Claymore/Akuoumaru/Icon.png","Data/Weapons/Claymore/Akuoumaru/AwakenIcon.png","Data/Weapons/Claymore/Akuoumaru/index.tsx","Data/Weapons/Claymore/BlackcliffSlasher/Icon.png","Data/Weapons/Claymore/BlackcliffSlasher/AwakenIcon.png","Data/Weapons/Claymore/BlackcliffSlasher/index.tsx","Data/Weapons/Claymore/BloodtaintedGreatsword/Icon.png","Data/Weapons/Claymore/BloodtaintedGreatsword/AwakenIcon.png","Data/Weapons/Claymore/BloodtaintedGreatsword/index.tsx","Data/Weapons/Claymore/DebateClub/Icon.png","Data/Weapons/Claymore/DebateClub/AwakenIcon.png","Data/Weapons/Claymore/DebateClub/index.tsx","Data/Weapons/Claymore/FavoniusGreatsword/Icon.png","Data/Weapons/Claymore/FavoniusGreatsword/AwakenIcon.png","Data/Weapons/Claymore/FavoniusGreatsword/index.tsx","Data/Weapons/Claymore/FerrousShadow/Icon.png","Data/Weapons/Claymore/FerrousShadow/AwakenIcon.png","Data/Weapons/Claymore/FerrousShadow/index.tsx","Data/Weapons/Claymore/KatsuragikiriNagamasa/Icon.png","Data/Weapons/Claymore/KatsuragikiriNagamasa/AwakenIcon.png","Data/Weapons/Claymore/KatsuragikiriNagamasa/index.tsx","Data/Weapons/Claymore/LithicBlade/Icon.png","Data/Weapons/Claymore/LithicBlade/AwakenIcon.png","Data/Weapons/Claymore/LithicBlade/index.tsx","Data/Weapons/Claymore/LuxuriousSeaLord/Icon.png","Data/Weapons/Claymore/LuxuriousSeaLord/AwakenIcon.png","Data/Weapons/Claymore/LuxuriousSeaLord/index.tsx","Data/Weapons/Claymore/OldMercsPal/Icon.png","Data/Weapons/Claymore/OldMercsPal/AwakenIcon.png","Data/Weapons/Claymore/OldMercsPal/index.tsx","Data/Weapons/Claymore/PrototypeArchaic/Icon.png","Data/Weapons/Claymore/PrototypeArchaic/AwakenIcon.png","Data/Weapons/Claymore/PrototypeArchaic/index.tsx","Data/Weapons/Claymore/Rainslasher/Icon.png","Data/Weapons/Claymore/Rainslasher/AwakenIcon.png","Data/Weapons/Claymore/Rainslasher/index.tsx","Data/Weapons/Claymore/RoyalGreatsword/Icon.png","Data/Weapons/Claymore/RoyalGreatsword/AwakenIcon.png","Data/Weapons/Claymore/RoyalGreatsword/index.tsx","Data/Weapons/Claymore/SacrificialGreatsword/Icon.png","Data/Weapons/Claymore/SacrificialGreatsword/AwakenIcon.png","Data/Weapons/Claymore/SacrificialGreatsword/index.tsx","Data/Weapons/Claymore/SerpentSpine/Icon.png","Data/Weapons/Claymore/SerpentSpine/AwakenIcon.png","Data/Weapons/Claymore/SerpentSpine/index.tsx","Data/Weapons/Claymore/SkyriderGreatsword/Icon.png","Data/Weapons/Claymore/SkyriderGreatsword/AwakenIcon.png","Data/Weapons/Claymore/SkyriderGreatsword/index.tsx","Data/Weapons/Claymore/SkywardPride/Icon.png","Data/Weapons/Claymore/SkywardPride/AwakenIcon.png","Data/Weapons/Claymore/SkywardPride/index.tsx","Data/Weapons/Claymore/SnowTombedStarsilver/Icon.png","Data/Weapons/Claymore/SnowTombedStarsilver/AwakenIcon.png","Data/Weapons/Claymore/SnowTombedStarsilver/index.tsx","Data/Weapons/Claymore/SongOfBrokenPines/Icon.png","Data/Weapons/Claymore/SongOfBrokenPines/AwakenIcon.png","Data/Weapons/Claymore/SongOfBrokenPines/index.tsx","Data/Weapons/Claymore/TheBell/Icon.png","Data/Weapons/Claymore/TheBell/AwakenIcon.png","Data/Weapons/Claymore/TheBell/index.tsx","Data/Weapons/Claymore/TheUnforged/Icon.png","Data/Weapons/Claymore/TheUnforged/AwakenIcon.png","Data/Weapons/Claymore/TheUnforged/index.tsx","Data/Weapons/Claymore/WasterGreatsword/Icon.png","Data/Weapons/Claymore/WasterGreatsword/AwakenIcon.png","Data/Weapons/Claymore/WasterGreatsword/index.tsx","Data/Weapons/Claymore/Whiteblind/Icon.png","Data/Weapons/Claymore/Whiteblind/AwakenIcon.png","Data/Weapons/Claymore/Whiteblind/index.tsx","Data/Weapons/Claymore/WhiteIronGreatsword/Icon.png","Data/Weapons/Claymore/WhiteIronGreatsword/AwakenIcon.png","Data/Weapons/Claymore/WhiteIronGreatsword/index.tsx","Data/Weapons/Claymore/WolfsGravestone/Icon.png","Data/Weapons/Claymore/WolfsGravestone/AwakenIcon.png","Data/Weapons/Claymore/WolfsGravestone/index.tsx","Data/Weapons/Claymore/index.ts","Data/Weapons/Sword/AmenomaKageuchi/Icon.png","Data/Weapons/Sword/AmenomaKageuchi/AwakenIcon.png","Data/Weapons/Sword/AmenomaKageuchi/index.tsx","Data/Weapons/Sword/AquilaFavonia/Icon.png","Data/Weapons/Sword/AquilaFavonia/AwakenIcon.png","Data/Weapons/Sword/AquilaFavonia/index.tsx","Data/Weapons/Sword/BlackcliffLongsword/Icon.png","Data/Weapons/Sword/BlackcliffLongsword/AwakenIcon.png","Data/Weapons/Sword/BlackcliffLongsword/index.tsx","Data/Weapons/Sword/CoolSteel/Icon.png","Data/Weapons/Sword/CoolSteel/AwakenIcon.png","Data/Weapons/Sword/CoolSteel/index.tsx","Data/Weapons/Sword/DarkIronSword/Icon.png","Data/Weapons/Sword/DarkIronSword/AwakenIcon.png","Data/Weapons/Sword/DarkIronSword/index.tsx","Data/Weapons/Sword/DullBlade/Icon.png","Data/Weapons/Sword/DullBlade/AwakenIcon.png","Data/Weapons/Sword/DullBlade/index.tsx","Data/Weapons/Sword/FavoniusSword/Icon.png","Data/Weapons/Sword/FavoniusSword/AwakenIcon.png","Data/Weapons/Sword/FavoniusSword/index.tsx","Data/Weapons/Sword/FesteringDesire/Icon.png","Data/Weapons/Sword/FesteringDesire/AwakenIcon.png","Data/Weapons/Sword/FesteringDesire/index.tsx","Data/Weapons/Sword/FilletBlade/Icon.png","Data/Weapons/Sword/FilletBlade/AwakenIcon.png","Data/Weapons/Sword/FilletBlade/index.tsx","Data/Weapons/Sword/FreedomSworn/Icon.png","Data/Weapons/Sword/FreedomSworn/AwakenIcon.png","Data/Weapons/Sword/FreedomSworn/index.tsx","Data/Weapons/Sword/HarbingerOfDawn/Icon.png","Data/Weapons/Sword/HarbingerOfDawn/AwakenIcon.png","Data/Weapons/Sword/HarbingerOfDawn/index.tsx","Data/Weapons/Sword/IronSting/Icon.png","Data/Weapons/Sword/IronSting/AwakenIcon.png","Data/Weapons/Sword/IronSting/index.tsx","Data/Weapons/Sword/LionsRoar/Icon.png","Data/Weapons/Sword/LionsRoar/AwakenIcon.png","Data/Weapons/Sword/LionsRoar/index.tsx","Data/Weapons/Sword/MistsplitterReforged/Icon.png","Data/Weapons/Sword/MistsplitterReforged/AwakenIcon.png","Data/Weapons/Sword/MistsplitterReforged/index.tsx","Data/Weapons/Sword/PrimordialJadeCutter/Icon.png","Data/Weapons/Sword/PrimordialJadeCutter/AwakenIcon.png","Data/Weapons/Sword/PrimordialJadeCutter/index.tsx","Data/Weapons/Sword/PrototypeRancour/Icon.png","Data/Weapons/Sword/PrototypeRancour/AwakenIcon.png","Data/Weapons/Sword/PrototypeRancour/index.tsx","Data/Weapons/Sword/RoyalLongsword/Icon.png","Data/Weapons/Sword/RoyalLongsword/AwakenIcon.png","Data/Weapons/Sword/RoyalLongsword/index.tsx","Data/Weapons/Sword/SacrificialSword/Icon.png","Data/Weapons/Sword/SacrificialSword/AwakenIcon.png","Data/Weapons/Sword/SacrificialSword/index.tsx","Data/Weapons/Sword/SilverSword/Icon.png","Data/Weapons/Sword/SilverSword/AwakenIcon.png","Data/Weapons/Sword/SilverSword/index.tsx","Data/Weapons/Sword/SkyriderSword/Icon.png","Data/Weapons/Sword/SkyriderSword/AwakenIcon.png","Data/Weapons/Sword/SkyriderSword/index.tsx","Data/Weapons/Sword/SkywardBlade/Icon.png","Data/Weapons/Sword/SkywardBlade/AwakenIcon.png","Data/Weapons/Sword/SkywardBlade/index.tsx","Data/Weapons/Sword/SummitShaper/Icon.png","Data/Weapons/Sword/SummitShaper/AwakenIcon.png","Data/Weapons/Sword/SummitShaper/index.tsx","Data/Weapons/Sword/SwordOfDescension/Icon.png","Data/Weapons/Sword/SwordOfDescension/AwakenIcon.png","Data/Weapons/Sword/SwordOfDescension/index.tsx","Data/Weapons/Sword/TheAlleyFlash/Icon.png","Data/Weapons/Sword/TheAlleyFlash/AwakenIcon.png","Data/Weapons/Sword/TheAlleyFlash/index.tsx","Data/Weapons/Sword/TheBlackSword/Icon.png","Data/Weapons/Sword/TheBlackSword/AwakenIcon.png","Data/Weapons/Sword/TheBlackSword/index.tsx","Data/Weapons/Sword/TheFlute/Icon.png","Data/Weapons/Sword/TheFlute/AwakenIcon.png","Data/Weapons/Sword/TheFlute/index.tsx","Data/Weapons/Sword/TravelersHandySword/Icon.png","Data/Weapons/Sword/TravelersHandySword/AwakenIcon.png","Data/Weapons/Sword/TravelersHandySword/index.tsx","Data/Weapons/Sword/index.ts","Data/Weapons/Polearm/BeginnersProtector/Icon.png","Data/Weapons/Polearm/BeginnersProtector/AwakenIcon.png","Data/Weapons/Polearm/BeginnersProtector/index.tsx","Data/Weapons/Polearm/BlackcliffPole/Icon.png","Data/Weapons/Polearm/BlackcliffPole/AwakenIcon.png","Data/Weapons/Polearm/BlackcliffPole/index.tsx","Data/Weapons/Polearm/BlackTassel/Icon.png","Data/Weapons/Polearm/BlackTassel/AwakenIcon.png","Data/Weapons/Polearm/BlackTassel/index.tsx","Data/Weapons/Polearm/CrescentPike/Icon.png","Data/Weapons/Polearm/CrescentPike/AwakenIcon.png","Data/Weapons/Polearm/CrescentPike/index.tsx","Data/Weapons/Polearm/Deathmatch/Icon.png","Data/Weapons/Polearm/Deathmatch/AwakenIcon.png","Data/Weapons/Polearm/Deathmatch/index.tsx","Data/Weapons/Polearm/DragonsBane/Icon.png","Data/Weapons/Polearm/DragonsBane/AwakenIcon.png","Data/Weapons/Polearm/DragonsBane/index.tsx","Data/Weapons/Polearm/DragonspineSpear/Icon.png","Data/Weapons/Polearm/DragonspineSpear/AwakenIcon.png","Data/Weapons/Polearm/DragonspineSpear/index.tsx","Data/Weapons/Polearm/EngulfingLightning/Icon.png","Data/Weapons/Polearm/EngulfingLightning/AwakenIcon.png","Data/Weapons/Polearm/EngulfingLightning/index.tsx","Data/Weapons/Polearm/FavoniusLance/Icon.png","Data/Weapons/Polearm/FavoniusLance/AwakenIcon.png","Data/Weapons/Polearm/FavoniusLance/index.tsx","Data/Weapons/Polearm/Halberd/Icon.png","Data/Weapons/Polearm/Halberd/AwakenIcon.png","Data/Weapons/Polearm/Halberd/index.tsx","Data/Weapons/Polearm/IronPoint/Icon.png","Data/Weapons/Polearm/IronPoint/AwakenIcon.png","Data/Weapons/Polearm/IronPoint/index.tsx","Data/Weapons/Polearm/KitainCrossSpear/Icon.png","Data/Weapons/Polearm/KitainCrossSpear/AwakenIcon.png","Data/Weapons/Polearm/KitainCrossSpear/index.tsx","Data/Weapons/Polearm/LithicSpear/Icon.png","Data/Weapons/Polearm/LithicSpear/AwakenIcon.png","Data/Weapons/Polearm/LithicSpear/index.tsx","Data/Weapons/Polearm/PrimordialJadeWingedSpear/Icon.png","Data/Weapons/Polearm/PrimordialJadeWingedSpear/AwakenIcon.png","Data/Weapons/Polearm/PrimordialJadeWingedSpear/index.tsx","Data/Weapons/Polearm/PrototypeStarglitter/Icon.png","Data/Weapons/Polearm/PrototypeStarglitter/AwakenIcon.png","Data/Weapons/Polearm/PrototypeStarglitter/index.tsx","Data/Weapons/Polearm/RoyalSpear/Icon.png","Data/Weapons/Polearm/RoyalSpear/AwakenIcon.png","Data/Weapons/Polearm/RoyalSpear/index.tsx","Data/Weapons/Polearm/SkywardSpine/Icon.png","Data/Weapons/Polearm/SkywardSpine/AwakenIcon.png","Data/Weapons/Polearm/SkywardSpine/index.tsx","Data/Weapons/Polearm/StaffOfHoma/Icon.png","Data/Weapons/Polearm/StaffOfHoma/AwakenIcon.png","Data/Weapons/Polearm/StaffOfHoma/index.tsx","Data/Weapons/Polearm/TheCatch/Icon.png","Data/Weapons/Polearm/TheCatch/AwakenIcon.png","Data/Weapons/Polearm/TheCatch/index.tsx","Data/Weapons/Polearm/VortexVanquisher/Icon.png","Data/Weapons/Polearm/VortexVanquisher/AwakenIcon.png","Data/Weapons/Polearm/VortexVanquisher/index.tsx","Data/Weapons/Polearm/WhiteTassel/Icon.png","Data/Weapons/Polearm/WhiteTassel/AwakenIcon.png","Data/Weapons/Polearm/WhiteTassel/index.tsx","Data/Weapons/Polearm/index.ts","Data/Weapons/Bow/AlleyHunter/Icon.png","Data/Weapons/Bow/AlleyHunter/AwakenIcon.png","Data/Weapons/Bow/AlleyHunter/index.tsx","Data/Weapons/Bow/AmosBow/Icon.png","Data/Weapons/Bow/AmosBow/AwakenIcon.png","Data/Weapons/Bow/AmosBow/index.tsx","Data/Weapons/Bow/BlackcliffWarbow/Icon.png","Data/Weapons/Bow/BlackcliffWarbow/AwakenIcon.png","Data/Weapons/Bow/BlackcliffWarbow/index.tsx","Data/Weapons/Bow/CompoundBow/Icon.png","Data/Weapons/Bow/CompoundBow/AwakenIcon.png","Data/Weapons/Bow/CompoundBow/index.tsx","Data/Weapons/Bow/ElegyForTheEnd/Icon.png","Data/Weapons/Bow/ElegyForTheEnd/AwakenIcon.png","Data/Weapons/Bow/ElegyForTheEnd/index.tsx","Data/Weapons/Bow/FavoniusWarbow/Icon.png","Data/Weapons/Bow/FavoniusWarbow/AwakenIcon.png","Data/Weapons/Bow/FavoniusWarbow/index.tsx","Data/Weapons/Bow/Hamayumi/Icon.png","Data/Weapons/Bow/Hamayumi/AwakenIcon.png","Data/Weapons/Bow/Hamayumi/index.tsx","Data/Weapons/Bow/HuntersBow/Icon.png","Data/Weapons/Bow/HuntersBow/AwakenIcon.png","Data/Weapons/Bow/HuntersBow/index.tsx","Data/Weapons/Bow/Messenger/Icon.png","Data/Weapons/Bow/Messenger/AwakenIcon.png","Data/Weapons/Bow/Messenger/index.tsx","Data/Weapons/Bow/MitternachtsWaltz/Icon.png","Data/Weapons/Bow/MitternachtsWaltz/AwakenIcon.png","Data/Weapons/Bow/MitternachtsWaltz/index.tsx","Data/Weapons/Bow/PolarStar/Icon.png","Data/Weapons/Bow/PolarStar/AwakenIcon.png","Data/Weapons/Bow/PolarStar/index.tsx","Data/Weapons/Bow/Predator/Icon.png","Data/Weapons/Bow/Predator/AwakenIcon.png","Data/Weapons/Bow/Predator/index.tsx","Data/Weapons/Bow/PrototypeCrescent/Icon.png","Data/Weapons/Bow/PrototypeCrescent/AwakenIcon.png","Data/Weapons/Bow/PrototypeCrescent/index.tsx","Data/Weapons/Bow/RavenBow/Icon.png","Data/Weapons/Bow/RavenBow/AwakenIcon.png","Data/Weapons/Bow/RavenBow/index.tsx","Data/Weapons/Bow/RecurveBow/Icon.png","Data/Weapons/Bow/RecurveBow/AwakenIcon.png","Data/Weapons/Bow/RecurveBow/index.tsx","Data/Weapons/Bow/RoyalBow/Icon.png","Data/Weapons/Bow/RoyalBow/AwakenIcon.png","Data/Weapons/Bow/RoyalBow/index.tsx","Data/Weapons/Bow/Rust/Icon.png","Data/Weapons/Bow/Rust/AwakenIcon.png","Data/Weapons/Bow/Rust/index.tsx","Data/Weapons/Bow/SacrificialBow/Icon.png","Data/Weapons/Bow/SacrificialBow/AwakenIcon.png","Data/Weapons/Bow/SacrificialBow/index.tsx","Data/Weapons/Bow/SeasonedHuntersBow/Icon.png","Data/Weapons/Bow/SeasonedHuntersBow/AwakenIcon.png","Data/Weapons/Bow/SeasonedHuntersBow/index.tsx","Data/Weapons/Bow/SharpshootersOath/Icon.png","Data/Weapons/Bow/SharpshootersOath/AwakenIcon.png","Data/Weapons/Bow/SharpshootersOath/index.tsx","Data/Weapons/Bow/SkywardHarp/Icon.png","Data/Weapons/Bow/SkywardHarp/AwakenIcon.png","Data/Weapons/Bow/SkywardHarp/index.tsx","Data/Weapons/Bow/Slingshot/Icon.png","Data/Weapons/Bow/Slingshot/AwakenIcon.png","Data/Weapons/Bow/Slingshot/index.tsx","Data/Weapons/Bow/TheStringless/Icon.png","Data/Weapons/Bow/TheStringless/AwakenIcon.png","Data/Weapons/Bow/TheStringless/index.tsx","Data/Weapons/Bow/TheViridescentHunt/Icon.png","Data/Weapons/Bow/TheViridescentHunt/AwakenIcon.png","Data/Weapons/Bow/TheViridescentHunt/index.tsx","Data/Weapons/Bow/ThunderingPulse/Icon.png","Data/Weapons/Bow/ThunderingPulse/AwakenIcon.png","Data/Weapons/Bow/ThunderingPulse/index.tsx","Data/Weapons/Bow/WindblumeOde/Icon.png","Data/Weapons/Bow/WindblumeOde/AwakenIcon.png","Data/Weapons/Bow/WindblumeOde/index.tsx","Data/Weapons/Bow/index.ts","Data/Weapons/Catalyst/ApprenticesNotes/Icon.png","Data/Weapons/Catalyst/ApprenticesNotes/AwakenIcon.png","Data/Weapons/Catalyst/ApprenticesNotes/index.tsx","Data/Weapons/Catalyst/BlackcliffAgate/Icon.png","Data/Weapons/Catalyst/BlackcliffAgate/AwakenIcon.png","Data/Weapons/Catalyst/BlackcliffAgate/index.tsx","Data/Weapons/Catalyst/DodocoTales/Icon.png","Data/Weapons/Catalyst/DodocoTales/AwakenIcon.png","Data/Weapons/Catalyst/DodocoTales/index.tsx","Data/Weapons/Catalyst/EmeraldOrb/Icon.png","Data/Weapons/Catalyst/EmeraldOrb/AwakenIcon.png","Data/Weapons/Catalyst/EmeraldOrb/index.tsx","Data/Weapons/Catalyst/EverlastingMoonglow/Icon.png","Data/Weapons/Catalyst/EverlastingMoonglow/AwakenIcon.png","Data/Weapons/Catalyst/EverlastingMoonglow/index.tsx","Data/Weapons/Catalyst/EyeOfPerception/Icon.png","Data/Weapons/Catalyst/EyeOfPerception/AwakenIcon.png","Data/Weapons/Catalyst/EyeOfPerception/index.tsx","Data/Weapons/Catalyst/FavoniusCodex/Icon.png","Data/Weapons/Catalyst/FavoniusCodex/AwakenIcon.png","Data/Weapons/Catalyst/FavoniusCodex/index.tsx","Data/Weapons/Catalyst/Frostbearer/Icon.png","Data/Weapons/Catalyst/Frostbearer/AwakenIcon.png","Data/Weapons/Catalyst/Frostbearer/index.tsx","Data/Weapons/Catalyst/HakushinRing/Icon.png","Data/Weapons/Catalyst/HakushinRing/AwakenIcon.png","Data/Weapons/Catalyst/HakushinRing/index.tsx","Data/Weapons/Catalyst/LostPrayerToTheSacredWinds/Icon.png","Data/Weapons/Catalyst/LostPrayerToTheSacredWinds/AwakenIcon.png","Data/Weapons/Catalyst/LostPrayerToTheSacredWinds/index.tsx","Data/Weapons/Catalyst/MagicGuide/Icon.png","Data/Weapons/Catalyst/MagicGuide/AwakenIcon.png","Data/Weapons/Catalyst/MagicGuide/index.tsx","Data/Weapons/Catalyst/MappaMare/Icon.png","Data/Weapons/Catalyst/MappaMare/AwakenIcon.png","Data/Weapons/Catalyst/MappaMare/index.tsx","Data/Weapons/Catalyst/MemoryOfDust/Icon.png","Data/Weapons/Catalyst/MemoryOfDust/AwakenIcon.png","Data/Weapons/Catalyst/MemoryOfDust/index.tsx","Data/Weapons/Catalyst/OtherworldlyStory/Icon.png","Data/Weapons/Catalyst/OtherworldlyStory/AwakenIcon.png","Data/Weapons/Catalyst/OtherworldlyStory/index.tsx","Data/Weapons/Catalyst/PocketGrimoire/Icon.png","Data/Weapons/Catalyst/PocketGrimoire/AwakenIcon.png","Data/Weapons/Catalyst/PocketGrimoire/index.tsx","Data/Weapons/Catalyst/PrototypeAmber/Icon.png","Data/Weapons/Catalyst/PrototypeAmber/AwakenIcon.png","Data/Weapons/Catalyst/PrototypeAmber/index.tsx","Data/Weapons/Catalyst/RoyalGrimoire/Icon.png","Data/Weapons/Catalyst/RoyalGrimoire/AwakenIcon.png","Data/Weapons/Catalyst/RoyalGrimoire/index.tsx","Data/Weapons/Catalyst/SacrificialFragments/Icon.png","Data/Weapons/Catalyst/SacrificialFragments/AwakenIcon.png","Data/Weapons/Catalyst/SacrificialFragments/index.tsx","Data/Weapons/Catalyst/SkywardAtlas/Icon.png","Data/Weapons/Catalyst/SkywardAtlas/AwakenIcon.png","Data/Weapons/Catalyst/SkywardAtlas/index.tsx","Data/Weapons/Catalyst/SolarPearl/Icon.png","Data/Weapons/Catalyst/SolarPearl/AwakenIcon.png","Data/Weapons/Catalyst/SolarPearl/index.tsx","Data/Weapons/Catalyst/TheWidsith/Icon.png","Data/Weapons/Catalyst/TheWidsith/AwakenIcon.png","Data/Weapons/Catalyst/TheWidsith/index.tsx","Data/Weapons/Catalyst/ThrillingTalesOfDragonSlayers/Icon.png","Data/Weapons/Catalyst/ThrillingTalesOfDragonSlayers/AwakenIcon.png","Data/Weapons/Catalyst/ThrillingTalesOfDragonSlayers/index.tsx","Data/Weapons/Catalyst/TwinNephrite/Icon.png","Data/Weapons/Catalyst/TwinNephrite/AwakenIcon.png","Data/Weapons/Catalyst/TwinNephrite/index.tsx","Data/Weapons/Catalyst/WineAndSong/Icon.png","Data/Weapons/Catalyst/WineAndSong/AwakenIcon.png","Data/Weapons/Catalyst/WineAndSong/index.tsx","Data/Weapons/Catalyst/index.ts","Data/Weapons/index.ts","Util/FormulaUtil.ts","Data/Characters/SheetUtil.tsx","Util/DocumentUtil.ts","Data/Weapons/Sword/AquilaFavonia/data.ts","Data/Weapons/Sword/FilletBlade/data.ts","Data/Weapons/Sword/PrimordialJadeCutter/data.ts","Data/Weapons/Sword/SkywardBlade/data.ts","Data/Weapons/Sword/SwordOfDescension/data.ts","Data/Weapons/Sword/TheBlackSword/data.ts","Data/Weapons/Sword/TheFlute/data.ts","Data/Weapons/Sword/TravelersHandySword/data.ts","Data/Weapons/Polearm/CrescentPike/data.ts","Data/Weapons/Polearm/DragonspineSpear/data.ts","Data/Weapons/Polearm/EngulfingLightning/data.ts","Data/Weapons/Polearm/Halberd/data.ts","Data/Weapons/Polearm/SkywardSpine/data.ts","Data/Weapons/Polearm/StaffOfHoma/data.ts","Data/Weapons/Claymore/DebateClub/data.ts","Data/Weapons/Claymore/LuxuriousSeaLord/data.ts","Data/Weapons/Claymore/PrototypeArchaic/data.ts","Data/Weapons/Claymore/SkywardPride/data.ts","Data/Weapons/Claymore/SnowTombedStarsilver/data.ts","Data/Weapons/Claymore/TheBell/data.ts","Data/Weapons/Claymore/WhiteIronGreatsword/data.ts","Data/Weapons/Catalyst/EverlastingMoonglow/data.ts","Data/Weapons/Catalyst/EyeOfPerception/data.ts","Data/Weapons/Catalyst/Frostbearer/data.ts","Data/Weapons/Catalyst/OtherworldlyStory/data.ts","Data/Weapons/Catalyst/PrototypeAmber/data.ts","Data/Weapons/Catalyst/SkywardAtlas/data.ts","Data/Weapons/Bow/Messenger/data.ts","Data/Weapons/Bow/RecurveBow/data.ts","Data/Weapons/Bow/SkywardHarp/data.ts","Data/Weapons/Bow/TheViridescentHunt/data.ts"],"names":["energyRange","range","map","i","ratio","max","conditionals","pa","name","ns","key18","states","Object","fromEntries","c","stats","burst_dmg_","Math","min","weapon","refineIndex","data_gen","icon","iconAwaken","document","conditional","atk_s","maxStack","atk_","dmg_s","bft","dmg_","fields","text","formulaText","data","dmg","Stat","printStat","getTalentStatKey","formula","variant","getTalentStatKeyVariant","u","charged_dmg_","skill_dmg_s","skill_dmg_","crit_s","lau","critRate_","burst_","bst","f","cdRed_","takeDMG_s","w","value","conditionalValues","SerpentSpine","num","unit","dmgc","atkSPD_","condAtk_","r","rg","shield","shield_","gm","wo","atk_def_s","infusionBlade","def_","heal","atk_partys","wt","claymore","Akuoumaru","BlackcliffSlasher","BloodtaintedGreatsword","DebateClub","FavoniusGreatsword","FerrousShadow","KatsuragikiriNagamasa","LithicBlade","LuxuriousSeaLord","OldMercsPal","PrototypeArchaic","Rainslasher","RoyalGreatsword","SacrificialGreatsword","SkyriderGreatsword","SkywardPride","SnowTombedStarsilver","SongOfBrokenPines","TheBell","TheUnforged","WasterGreatsword","Whiteblind","WhiteIronGreatsword","WolfsGravestone","refinementVals","bwi","em","refinementVals2","skill_critRate_","cds","auto","normal_dmg_","plunging_dmg_","v","is","ele_dmg_s","ele_dmg_ss","ele","objectFromKeyMap","allElements","ElementalData","canShow","MistsplitterReforged","stacks","values","count","path","KeyPath","PrimordialJadeCutter","refinementVals_hp","hp_","modifiers","atk","bonus","st","hp_atk","smashedStone","d","moveSPD_","refinementMoveSpdVals","refinementatkSpdVals","spf","refinementAtkVals","characterKey","startsWith","ih","regen","vals","sword","AmenomaKageuchi","AquilaFavonia","BlackcliffLongsword","CoolSteel","DarkIronSword","DullBlade","FavoniusSword","FesteringDesire","FilletBlade","FreedomSworn","HarbingerOfDawn","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","SilverSword","SkyriderSword","SkywardBlade","SummitShaper","SwordOfDescension","TheAlleyFlash","TheBlackSword","TheFlute","TravelersHandySword","s","refinementSoloVals","g","o2","o1","bfw","enerRech","EngulfingLightning","e","enerRech_","conv","enerRechConv","enerRechMax","fixed","refinementCritVals","refinementDmgVals","l7","a7","ma","crit_","StaffOfHoma","hp","esjadd","hp_atk_add","esj","burstCR_","burst_critRate_","polearm","BeginnersProtector","BlackcliffPole","BlackTassel","CrescentPike","Deathmatch","DragonsBane","DragonspineSpear","FavoniusLance","Halberd","IronPoint","KitainCrossSpear","LithicSpear","PrimordialJadeWingedSpear","PrototypeStarglitter","RoyalSpear","SkywardSpine","TheCatch","VortexVanquisher","WhiteTassel","ug","sw","refinementSpdVals","ia","refinementEM","eleMass","pr","eleMas","normal_dmg_s","charged_dmg_s","skill_","normal_","a","Translate","ele_dmg","ashen","ss","sgt","weakspotDMG_","critd_s","critDMG_","ww","bow","AlleyHunter","AmosBow","BlackcliffWarbow","CompoundBow","ElegyForTheEnd","FavoniusWarbow","Hamayumi","HuntersBow","Messenger","MitternachtsWaltz","PolarStar","Predator","PrototypeCrescent","RavenBow","RecurveBow","RoyalBow","Rust","SacrificialBow","SeasonedHuntersBow","SharpshootersOath","SkywardHarp","Slingshot","TheStringless","TheViridescentHunt","ThunderingPulse","WindblumeOde","cdmg_","heal_","hp_conv","norm","characterEle","color","bb","anemo_dmg_","geo_dmg_","electro_dmg_","hydro_dmg_","pyro_dmg_","cryo_dmg_","n","b","refinementEleDmgVals","refinementEleMasVals","gt","ws","catalyst","ApprenticesNotes","BlackcliffAgate","DodocoTales","EmeraldOrb","EverlastingMoonglow","EyeOfPerception","FavoniusCodex","Frostbearer","HakushinRing","LostPrayerToTheSacredWinds","MagicGuide","MappaMare","MemoryOfDust","OtherworldlyStory","PocketGrimoire","PrototypeAmber","RoyalGrimoire","SacrificialFragments","SkywardAtlas","SolarPearl","TheWidsith","ThrillingTalesOfDragonSlayers","TwinNephrite","WineAndSong","WeaponData","forEach","documentSectionsProcessing","basicDMGFormula","percent","skillKey","elemental","val","statKey","basicHealingFormula","scaleStatKey","flat","heal_multi","strKey","normalDocSection","tr","normal","hitArr","percentArr","tlvl","chargedDocSection","stamina","charged","chargedHitsDocSection","test","plungeDocSection","plunging","low","high","claymoreChargedDocSection","spinning","final","stam","maxDuration","bowChargedDocSection","elementKey","hit","full","talentTemplate","talentKey","img","undefined","sections","section","fieldProcessing","finalATK","finalHP","hpMulti"],"mappings":"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","file":"static/js/11.0df831b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Icon.97fbee2c.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.8d9b4c73.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { range } from '../../../../Util/Util'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\n\r\nconst energyRange = range(4, 36).map(i => i * 10)\r\nconst ratio = [0.12, 0.15, 0.18, 0.21, 0.24]\r\nconst max = [40, 50, 60, 70, 80]\r\n\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: <TransWrapper ns=\"weapon_Akuoumaru\" key18=\"party\" />,\r\n    states: Object.fromEntries(energyRange.map(c => [c, {\r\n      name: `${c}`,\r\n      stats: stats => ({\r\n        burst_dmg_: Math.min(max[stats.weapon.refineIndex], ratio[stats.weapon.refineIndex] * c),\r\n      })\r\n    }]))\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.2eae1011.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.d2bf0faa.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst atk_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.be859688.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ba635fa7.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bft: {\r\n    name: \"Against Opponents affected by Pyro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bft\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c7551a9d.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.cafeeac8.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.9fc47ec8.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c11bce18.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.57efbd0b.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.9ee2a307.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementHpVals = [70, 75, 80, 85, 90]\r\nconst dmg_s = [30, 35, 40, 45, 50]\r\nconst conditionals: IConditionals = {\r\n  u: {\r\n    name: \"Low HP\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      charged_dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.u\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c62c05a7.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.aafd21b9.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst skill_dmg_s = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    skill_dmg_: skill_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a5f30174.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ad9c43a1.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst crit_s = [3, 4, 5, 6, 7]\r\nconst atk_s = [7, 8, 9, 10, 11]\r\nconst conditionals: IConditionals = {\r\n  lau: {\r\n    name: \"Liyue Members\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex],\r\n      critRate_: crit_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.lau\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.af547f6c.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.52b291cb.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst burst_ = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    burst_dmg_: burst_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.73904f57.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.2be51148.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.bc87bda4.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b7d13481.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.11fc9623.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.de92246b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_s = [20, 24, 28, 32, 36]\r\nconst conditionals: IConditionals = {\r\n  bst: {\r\n    name: \"Against Opponents Affected by Hydro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bst\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.77b8c51b.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a8c366f2.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst crit_s = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: crit_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.dfd8d70e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.08413ef8.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [40, 50, 60, 70, 80]\r\n// const refinementCdVals = [30, 26, 22, 19, 16]\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"After Elemental Skill\",\r\n    maxStack: 1,\r\n    stats: () => ({\r\n      cdRed_: 100\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a7d374db.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.23d1198d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals, IConditionalValue } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_s = [6, 7, 8, 9, 10]\r\nconst takeDMG_s = [3, 2.7, 2.4, 2.2, 2]\r\nconst conditionals: IConditionals = {\r\n  w: {\r\n    name: \"Duration on Field (4s / stack)\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    }),\r\n    fields: [{\r\n      text: \"Take more DMG\",\r\n      value: stats => {\r\n        const value = stats.conditionalValues?.weapon?.SerpentSpine?.w as IConditionalValue | undefined\r\n        const [num,] = value ?? [0]\r\n        return takeDMG_s[stats.weapon.refineIndex] * num\r\n      },\r\n      unit: \"%\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.w\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a48a5a1a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.450bdcc8.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst atk_s = [6, 7, 8, 9, 10]\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.2029419f.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.240f9b65.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    dmg_: dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6bb87a4e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.8abc624a.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.9ec9dab4.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.52328d20.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst atk_ = [16, 20, 24, 28, 32]\r\nconst atkSPD_ = [12, 15, 18, 21, 24]\r\nconst condAtk_ = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  r: {\r\n    name: <TransWrapper ns=\"weapon_SongOfBrokenPines\" key18=\"name\" />,\r\n    stats: stats => ({\r\n      atk_: condAtk_[stats.weapon.refineIndex],\r\n      atkSPD_: atkSPD_[stats.weapon.refineIndex],\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    atk_: atk_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.r\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6715f718.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.00db7552.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  rg: {\r\n    name: \"Taking DMG\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    fields: [{\r\n      text: \"Shield Absorption\",\r\n      formulaText: stats => <span>{data.shield[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n      formula: formula.shield,\r\n    }],\r\n    conditional: conditionals.rg\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a035f032.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ba09ef8b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst shield_ = [20, 25, 30, 35, 40]\r\nconst atk_s = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits\",\r\n    states: {\r\n      wo: {\r\n        name: \"Without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: atk_s[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"With shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * atk_s[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    shield_: shield_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.42b6e78e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.e81f7431.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8e0a6b6c.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0790bfc1.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst atk_def_s = [6, 7.5, 9, 10.5, 12]\r\nconst conditionals: IConditionals = {\r\n  infusionBlade: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: atk_def_s[stats.weapon.refineIndex],\r\n      def_: atk_def_s[stats.weapon.refineIndex]\r\n    }),\r\n    fields: [{\r\n      text: \"Duration\",\r\n      value: \"6s\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.infusionBlade\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.79712fd9.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.e5e033b8.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.960e22ed.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b4b90389.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst atk_partys = [40, 50, 60, 70, 80]\r\nconst conditionals: IConditionals = {\r\n  wt: {\r\n    name: \"Attacked Opponent with Low HP\",//TODO: party buff\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: atk_partys[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    atk_: atk_s[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.wt\r\n  }],\r\n}\r\nexport default weapon","import Akuoumaru from './Akuoumaru'\r\nimport BlackcliffSlasher from './BlackcliffSlasher'\r\nimport BloodtaintedGreatsword from './BloodtaintedGreatsword'\r\nimport DebateClub from './DebateClub'\r\nimport FavoniusGreatsword from './FavoniusGreatsword'\r\nimport FerrousShadow from './FerrousShadow'\r\nimport KatsuragikiriNagamasa from './KatsuragikiriNagamasa'\r\nimport LithicBlade from './LithicBlade'\r\nimport LuxuriousSeaLord from './LuxuriousSeaLord'\r\nimport OldMercsPal from './OldMercsPal'\r\nimport PrototypeArchaic from './PrototypeArchaic'\r\nimport Rainslasher from './Rainslasher'\r\nimport RoyalGreatsword from './RoyalGreatsword'\r\nimport SacrificialGreatsword from './SacrificialGreatsword'\r\nimport SerpentSpine from './SerpentSpine'\r\nimport SkyriderGreatsword from './SkyriderGreatsword'\r\nimport SkywardPride from './SkywardPride'\r\nimport SnowTombedStarsilver from './SnowTombedStarsilver'\r\nimport SongOfBrokenPines from './SongOfBrokenPines'\r\nimport TheBell from './TheBell'\r\nimport TheUnforged from './TheUnforged'\r\nimport WasterGreatsword from './WasterGreatsword'\r\nimport Whiteblind from './Whiteblind'\r\nimport WhiteIronGreatsword from './WhiteIronGreatsword'\r\nimport WolfsGravestone from './WolfsGravestone'\r\nconst claymore = {\r\n  Akuoumaru,\r\n  BlackcliffSlasher,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FavoniusGreatsword,\r\n  FerrousShadow,\r\n  KatsuragikiriNagamasa,\r\n  LithicBlade,\r\n  LuxuriousSeaLord,\r\n  OldMercsPal,\r\n  PrototypeArchaic,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SacrificialGreatsword,\r\n  SerpentSpine,\r\n  SkyriderGreatsword,\r\n  SkywardPride,\r\n  SnowTombedStarsilver,\r\n  SongOfBrokenPines,\r\n  TheBell,\r\n  TheUnforged,\r\n  WasterGreatsword,\r\n  Whiteblind,\r\n  WhiteIronGreatsword,\r\n  WolfsGravestone,\r\n} as const\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Icon.72a7346b.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0cc0c70d.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4c1af049.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.fa7227e1.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst atk_ = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    atk_: atk_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalATK\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }, {\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8701d759.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3252a460.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.ab4d1ab9.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ab59d094.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bwi: {\r\n    name: \"Against Opponents Affected by Hydro/Cryo\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bwi\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.89864001.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.adae6f69.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  em: {\r\n    name: \"After Electro-related reactions\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.em\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4be78b63.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b5dbc827.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.20c6dcc5.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.1270df37.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.bb6b5216.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.d99c41ea.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [16, 20, 24, 28, 32]\r\nconst refinementVals2 = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    skill_critRate_: refinementVals2[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c9c75b4d.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3488f8ce.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst cds = [15, 14, 13, 12, 11]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"CD\",\r\n      value: stats => `${cds[stats.weapon.refineIndex]}s`\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.973aa9e0.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3c590be9.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_ = [10, 12.5, 15, 17.5, 20]\r\nconst auto = [16, 20, 24, 28, 32]\r\nconst atk_ = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  r: {\r\n    name: <TransWrapper ns=\"weapon_FreedomSworn\" key18=\"name\" />,\r\n    stats: stats => ({\r\n      atk_: atk_[stats.weapon.refineIndex],\r\n      normal_dmg_: auto[stats.weapon.refineIndex],\r\n      charged_dmg_: auto[stats.weapon.refineIndex],\r\n      plunging_dmg_: auto[stats.weapon.refineIndex],\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    dmg_: dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.r\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a4877b31.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.48e283db.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [14, 17.5, 21, 24.5, 28]\r\nconst conditionals: IConditionals = {\r\n  v: {\r\n    name: \"HP > 90%\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      critRate_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.v\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.93725118.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.571984ea.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [6, 7.5, 9, 10.5, 12]\r\nconst conditionals: IConditionals = {\r\n  is: {\r\n    name: \"Elemental Hits\",\r\n    maxStack: 2,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.is\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.cd4b1a5f.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.bec3dd46.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [20, 24, 28, 32, 36]\r\nconst conditionals: IConditionals = {\r\n  bft: {\r\n    name: \"Against Opponents Affected by Pyro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bft\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.7453eac5.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.5bef1799.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { IConditionals, IConditionalValue } from '../../../../Types/IConditional'\r\nimport { allElements } from '../../../../Types/consts'\r\nimport ElementalData from '../../../ElementalData'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport { objectFromKeyMap } from '../../../../Util/Util'\r\nconst ele_dmg_s = [12, 15, 18, 21, 24]\r\nconst ele_dmg_ss = [\r\n  [8, 16, 28],\r\n  [10, 20, 35],\r\n  [12, 24, 42],\r\n  [14, 28, 49],\r\n  [16, 32, 56]\r\n]\r\nconst conditionals: IConditionals = {\r\n  ele: {\r\n    name: <TransWrapper ns=\"weapon_MistsplitterReforged\" key18=\"ele\" />,\r\n    states: objectFromKeyMap(allElements, ele => ({\r\n      name: ElementalData[ele].name\r\n    }))\r\n  },\r\n  em: {//Emblem\r\n    canShow: stats => {\r\n      const value = stats.conditionalValues?.weapon?.MistsplitterReforged?.ele as IConditionalValue | undefined\r\n      if (!value) return false\r\n      const [num,] = value\r\n      if (!num) return false\r\n      return true\r\n    },\r\n    name: <TransWrapper ns=\"weapon_MistsplitterReforged\" key18=\"emblem\" />,\r\n    states: Object.fromEntries([1, 2, 3].map(stacks => [stacks, {\r\n      name: <TransWrapper ns=\"sheet\" key18=\"stack\" values={{ count: stacks }} />,\r\n      stats: stats => {\r\n        const [num, ele] = stats.conditionalValues?.weapon?.MistsplitterReforged?.ele ?? [0, \"\"] as IConditionalValue | undefined\r\n        if (!num || !ele) return {}\r\n        return {\r\n          [`${ele}_dmg_`]: ele_dmg_ss[stats.weapon.refineIndex][stacks - 1]\r\n        }\r\n      }\r\n    }]))\r\n\r\n  }\r\n\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => Object.fromEntries(allElements.map(ele => [`${ele}_dmg_`, ele_dmg_s[stats.weapon.refineIndex]])),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ele,\r\n  }, {\r\n    conditional: conditionals.em,\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.7d3625bd.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.5c70f0b6.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst path = KeyPath<FormulaPathBase>().weapon.PrimordialJadeCutter\r\nconst refinementVals_hp = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    hp_: refinementVals_hp[stats.weapon.refineIndex],\r\n    modifiers: { atk: [path.bonus()] }\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>{data.hp_atk[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.bonus,\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.3f9b3d97.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c10914ba.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  smashedStone: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      def_: refinementVals[stats.weapon.refineIndex]\r\n    }),\r\n    fields: [{\r\n      text: \"Duration\",\r\n      value: \"6s\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.smashedStone\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d09f189d.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3cc66671.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.01d3c4f2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.8feb48fc.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"Elemental Skill Resets CD\",\r\n    maxStack: 1,\r\n    stats: () => ({\r\n      cdRed_: 100\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.077910f7.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.45eee363.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6aaee076.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0bfa1ddc.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  d: {\r\n    name: \"After Elemental Burst\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      moveSPD_: refinementVals[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.d\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a8e1bd9b.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.5b4222b0.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst refinementMoveSpdVals = [10, 10, 10, 10, 10]\r\nconst refinementatkSpdVals = [10, 10, 10, 10, 10]\r\nconst conditionals: IConditionals = {\r\n  spf: {\r\n    name: \"After Elemental Burst\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      moveSPD_: refinementMoveSpdVals[stats.weapon.refineIndex],\r\n      atkSPD_: refinementatkSpdVals[stats.weapon.refineIndex],\r\n    }),\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    critRate_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.spf\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6b8dbad2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.864e1189.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst refinementAtkVals = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits\",\r\n    states: {\r\n      wo: {\r\n        name: \"Without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: refinementAtkVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"With shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * refinementAtkVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    shield_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.2f78914a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.da4dfde6.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => stats.characterKey?.startsWith(\"Traveler\") ? {\r\n    atk: 66\r\n  } : {},\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>200% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.f439e133.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.039f435e.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  ih: {\r\n    name: \"Not Taking DMG\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ih\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.397ac0a2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.98edeb9a.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    normal_dmg_: data.dmg_[stats.weapon.refineIndex],\r\n    charged_dmg_: data.dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.regen,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b80515f1.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0c4ee0e0.png\";","import { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.vals[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.e7105cf0.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.35486f4f.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","import AmenomaKageuchi from './AmenomaKageuchi'\r\nimport AquilaFavonia from './AquilaFavonia'\r\nimport BlackcliffLongsword from './BlackcliffLongsword'\r\nimport CoolSteel from './CoolSteel'\r\nimport DarkIronSword from './DarkIronSword'\r\nimport DullBlade from './DullBlade'\r\nimport FavoniusSword from './FavoniusSword'\r\nimport FesteringDesire from './FesteringDesire'\r\nimport FilletBlade from './FilletBlade'\r\nimport FreedomSworn from './FreedomSworn'\r\nimport HarbingerOfDawn from './HarbingerOfDawn'\r\nimport IronSting from './IronSting'\r\nimport LionsRoar from './LionsRoar'\r\nimport MistsplitterReforged from './MistsplitterReforged'\r\nimport PrimordialJadeCutter from './PrimordialJadeCutter'\r\nimport PrototypeRancour from './PrototypeRancour'\r\nimport RoyalLongsword from './RoyalLongsword'\r\nimport SacrificialSword from './SacrificialSword'\r\nimport SilverSword from './SilverSword'\r\nimport SkyriderSword from './SkyriderSword'\r\nimport SkywardBlade from './SkywardBlade'\r\nimport SummitShaper from './SummitShaper'\r\nimport SwordOfDescension from './SwordOfDescension'\r\nimport TheAlleyFlash from './TheAlleyFlash'\r\nimport TheBlackSword from './TheBlackSword'\r\nimport TheFlute from './TheFlute'\r\nimport TravelersHandySword from './TravelersHandySword'\r\nconst sword = {\r\n  AmenomaKageuchi,\r\n  AquilaFavonia,\r\n  BlackcliffLongsword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  DullBlade,\r\n  FavoniusSword,\r\n  FesteringDesire,\r\n  FilletBlade,\r\n  FreedomSworn,\r\n  HarbingerOfDawn,\r\n  IronSting,\r\n  LionsRoar,\r\n  MistsplitterReforged,\r\n  PrimordialJadeCutter,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  SilverSword,\r\n  SkyriderSword,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n  SwordOfDescension,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  TravelersHandySword,\r\n} as const\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Icon.adde0953.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.bc280184.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.1764d2d9.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.12716f16.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4e27d7f2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.341b6273.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_s = [40, 50, 60, 70, 80]\r\nconst conditionals: IConditionals = {\r\n  s: {\r\n    name: \"Against Slimes\",\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex],\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.s\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.e17cff36.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.6c2539d3.png\";","import { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.73b06a2e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.1bbb5cd4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [16, 20, 24, 28, 32]\r\nconst refinementSoloVals = [24, 30, 36, 42, 48]\r\nconst conditionals: IConditionals = {\r\n  g: {\r\n    name: \"\",\r\n    states: {\r\n      o2: {\r\n        name: \"At least 2 opponents\",\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex],\r\n          def_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      o1: {\r\n        name: \"Less than 2 opponents\",\r\n        stats: stats => ({\r\n          atk_: refinementSoloVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.g\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.7df1dc17.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.154d5264.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_s = [20, 24, 28, 32, 36]\r\nconst conditionals: IConditionals = {\r\n  bfw: {\r\n    name: \"Against Opponents Affected by Hydro/Pyro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bfw\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.346873a8.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.78f30f5d.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.17edaabf.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.12ee7e85.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst enerRech = [30, 35, 40, 45, 50, 55]\r\nconst path = KeyPath<FormulaPathBase>().weapon.EngulfingLightning\r\nconst conditionals: IConditionals = {\r\n  e: {\r\n    name: st(\"afterUse.burst\"),\r\n    stats: stats => ({\r\n      enerRech_: enerRech[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: {\r\n    modifiers: { atk_: [path.conv()] }\r\n  },\r\n  conditionals,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>Min( {data.enerRechConv[stats.weapon.refineIndex]}% * ( {Stat.printStat(\"enerRech_\", stats, true)} - 100% ) , {data.enerRechMax[stats.weapon.refineIndex]}% )</span>,\r\n      formula: formula.conv,\r\n      fixed: 1,\r\n      unit: \"%\",\r\n    }],\r\n    conditional: conditionals.e\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.1f8f51ae.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.254b9f4c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.037ea580.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.382b20ce.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.755538bf.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.4e71ad30.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b8cfeb5c.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.474ccab8.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst skill_dmg_s = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    skill_dmg_: skill_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.7a3f2d56.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ed3bf0f6.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementCritVals = [3, 4, 5, 6, 7]\r\nconst refinementAtkVals = [7, 8, 9, 10, 11]\r\nconst conditionals: IConditionals = {\r\n  lau: {\r\n    name: \"Liyue Members\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: refinementAtkVals[stats.weapon.refineIndex],\r\n      critRate_: refinementCritVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.lau\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.58dcbe61.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.768617e5.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [3.2, 3.9, 4.6, 5.3, 6]\r\nconst refinementDmgVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  e: {\r\n    name: \"On Hit\",\r\n    states: {\r\n      l7: {\r\n        name: \"On Hit\",\r\n        maxStack: 6,\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      a7: {\r\n        name: \"At 7 stacks\",\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex] * 7,\r\n          dmg_: refinementDmgVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.e\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.f15bd638.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a8e1b228.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_ = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  ma: {\r\n    name: st(\"afterUse.skill\"),\r\n    maxStack: 2,\r\n    stats: stats => ({\r\n      normal_dmg_: dmg_[stats.weapon.refineIndex],\r\n      charged_dmg_: dmg_[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ma\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6a41ce68.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c47469f7.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst crit_ = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: crit_[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d69b116a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0a18593a.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst crit_ = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    critRate_: crit_[stats.weapon.refineIndex],\r\n    atkSPD_: 12\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.e5d01dca.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.4164c6d2.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst path = KeyPath<FormulaPathBase>().weapon.StaffOfHoma\r\nconst refinementVals_hp = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  hp: {\r\n    name: \"HP < 50%\",\r\n    maxStack: 1,\r\n    stats: {\r\n      modifiers: { atk: [path.esjadd()] }\r\n    },\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>{data.hp_atk_add[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.esjadd,\r\n    }],\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    hp_: refinementVals_hp[stats.weapon.refineIndex],\r\n    modifiers: { atk: [path.esj()] }\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>{data.hp_atk[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.esj,\r\n    }],\r\n    conditional: conditionals.hp\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.540bf184.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3001e90d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst burst_ = [16, 20, 24, 28, 32]\r\nconst burstCR_ = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    burst_dmg_: burst_[stats.weapon.refineIndex],\r\n    burst_critRate_: burstCR_[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.dea77a58.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c6228ac7.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst shield_ = [20, 25, 30, 35, 40]\r\nconst atk_ = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits\",\r\n    states: {\r\n      wo: {\r\n        name: \"Without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: atk_[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"With shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * atk_[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    shield_: shield_[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d57f1c6f.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.1c3202e3.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_ = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    normal_dmg_: dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","import BeginnersProtector from './BeginnersProtector'\r\nimport BlackcliffPole from './BlackcliffPole'\r\nimport BlackTassel from './BlackTassel'\r\nimport CrescentPike from './CrescentPike'\r\nimport Deathmatch from './Deathmatch'\r\nimport DragonsBane from './DragonsBane'\r\nimport DragonspineSpear from './DragonspineSpear'\r\nimport EngulfingLightning from './EngulfingLightning'\r\nimport FavoniusLance from './FavoniusLance'\r\nimport Halberd from './Halberd'\r\nimport IronPoint from './IronPoint'\r\nimport KitainCrossSpear from './KitainCrossSpear'\r\nimport LithicSpear from './LithicSpear'\r\nimport PrimordialJadeWingedSpear from './PrimordialJadeWingedSpear'\r\nimport PrototypeStarglitter from './PrototypeStarglitter'\r\nimport RoyalSpear from './RoyalSpear'\r\nimport SkywardSpine from './SkywardSpine'\r\nimport StaffOfHoma from './StaffOfHoma'\r\nimport TheCatch from './TheCatch'\r\nimport VortexVanquisher from './VortexVanquisher'\r\nimport WhiteTassel from './WhiteTassel'\r\nconst polearm = {\r\n  BeginnersProtector,\r\n  BlackcliffPole,\r\n  BlackTassel,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  DragonspineSpear,\r\n  EngulfingLightning,\r\n  FavoniusLance,\r\n  Halberd,\r\n  IronPoint,\r\n  KitainCrossSpear,\r\n  LithicSpear,\r\n  PrimordialJadeWingedSpear,\r\n  PrototypeStarglitter,\r\n  RoyalSpear,\r\n  SkywardSpine,\r\n  StaffOfHoma,\r\n  TheCatch,\r\n  VortexVanquisher,\r\n  WhiteTassel,\r\n} as const\r\nexport default polearm","export default __webpack_public_path__ + \"static/media/Icon.db8438c8.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c38ec4af.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [2, 2.5, 3, 3.5, 4]\r\nconst conditionals: IConditionals = {\r\n  ug: {\r\n    name: \"Duration not on Field (1s / stack)\",\r\n    maxStack: 10,\r\n    stats: stats => ({\r\n      dmg_: refinementVals[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ug\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c9ca6e66.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.bf9187e6.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst refinementDmgVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  sw: {\r\n    name: \"Arrow Flight Duration (0.1s / stack)\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      normal_dmg_: refinementDmgVals[stats.weapon.refineIndex],\r\n      charged_dmg_: refinementDmgVals[stats.weapon.refineIndex]\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    normal_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    charged_dmg_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.sw\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c01f5814.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.957e341e.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst atk_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4b204065.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.59a83128.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst refinementSpdVals = [1.2, 1.5, 1.8, 2.1, 2.4]\r\nconst conditionals: IConditionals = {\r\n  ia: {\r\n    name: \"Normal/Charged Attack Hits\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      atkSPD_: refinementSpdVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ia\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.188f638c.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.599c5c1a.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementEM = [60, 75, 90, 105, 120]\r\nconst eleMass = [100, 125, 150, 175, 200]\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  pr: {\r\n    name: \"Millennial Movement: Farewell Song\",\r\n    stats: stats => ({\r\n      eleMas: eleMass[stats.weapon.refineIndex],\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    eleMas: refinementEM[stats.weapon.refineIndex],\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pr\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d1549663.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.cf9ffb01.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c05b8cfe.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.d622f03a.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nconst normal_dmg_s = [16, 20, 24, 28, 32]\r\nconst charged_dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  e: {//100% energy\r\n    name: <TransWrapper ns=\"weapon_Hamayumi\" key18=\"ener\" />,\r\n    stats: stats => ({\r\n      normal_dmg_: normal_dmg_s[stats.weapon.refineIndex],\r\n      charged_dmg_: charged_dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    normal_dmg_: normal_dmg_s[stats.weapon.refineIndex],\r\n    charged_dmg_: charged_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.e\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.56066668.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.abd5b73b.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4ba15b38.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.2f02d002.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.f5e13118.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c4d22e15.png\";","import { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst skill_ = [20, 25, 30, 35, 40]\r\nconst normal_ = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  a: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.normal\" />,\r\n    stats: stats => ({\r\n      skill_dmg_: skill_[stats.weapon.refineIndex],\r\n    })\r\n  },\r\n  s: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.skill\" />,\r\n    stats: stats => ({\r\n      normal_dmg_: normal_[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.a\r\n  }, {\r\n    conditional: conditionals.s\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.21e410ca.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.fc15be6c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\n\r\nconst ele_dmg = [12, 15, 18, 21, 24]\r\nconst ashen = [[10, 20, 30, 48], [12.5, 25, 37.5, 60], [15, 30, 45, 72], [17.5, 35, 52.8, 84], [20, 40, 60, 96]]\r\nconst conditionals: IConditionals = {\r\n  a: {\r\n    name: <TransWrapper ns=\"weapon_PolarStar\" key18=\"ashen\" />,\r\n    states: Object.fromEntries([1, 2, 3, 4].map(stacks => [stacks, {\r\n      name: <TransWrapper ns=\"sheet\" key18=\"stack\" values={{ count: stacks }} />,\r\n      stats: stats => ({\r\n        atk_: ashen[stats.weapon.refineIndex][stacks - 1]\r\n      })\r\n    }]))\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    skill_dmg_: ele_dmg[stats.weapon.refineIndex],\r\n    burst_dmg_: ele_dmg[stats.weapon.refineIndex]\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.a\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.47c1d129.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b78a7d81.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { sgt, st } from '../../../Characters/SheetUtil'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst conditionals: IConditionals = {\r\n  ss: {\r\n    name: st(\"hitOp.cryo\"),\r\n    maxStack: 2,\r\n    stats: {\r\n      normal_dmg_: 10,\r\n      charged_dmg_: 10,\r\n    },\r\n    fields: [{\r\n      text: sgt(\"duration\"),\r\n      value: 6,\r\n      unit: \"s\"\r\n    }]\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => {\r\n    if (stats.characterKey === \"Aloy\") return {\r\n      atk: 66\r\n    }\r\n    return undefined\r\n  },\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ss\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6332b0c0.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.7e1bbf9d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst atk_s = [36, 45, 54, 63, 72]\r\nconst conditionals: IConditionals = {\r\n  u: {\r\n    name: \"Against Weak Points\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      moveSPD_: 10,\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    }),\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.u\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.3d9072b2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.6af8a4ce.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bfw: {\r\n    name: \"Against Opponents Affected by Hydro/Pyro\",\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bfw\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4709b60f.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.d57c2aa7.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b33b7c45.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.22ad2064.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.2f42b057.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c187a607.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [40, 50, 60, 70, 80]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    normal_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    charged_dmg_: -10\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.fc4eaa2a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.9500f18e.png\";","import { WeaponData } from 'pipeline'\r\n// import { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [40, 50, 60, 70, 80]\r\n// const refinementCdVals = [30, 26, 22, 19, 16]\r\n// const conditionals: IConditionals = {\r\n//   c: {\r\n//     name: \"Elemental Skill Ends CD\",\r\n//     stats: { cdRed_: 100 }),\r\n//   }\r\n// }\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  // conditionals,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a1c854c2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.df2528c3.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8b79b664.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.4d2d3eec.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    weakspotDMG_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.157059d9.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.cfc45d67.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst critd_s = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    critDMG_: critd_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>125% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b314d244.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.f46141b4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [36, 42, 48, 54, 60]\r\nconst conditionals: IConditionals = {\r\n  s: {\r\n    name: \"Normal/Charged Attack Hits within 0.3s\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      // TODO: Shouldn't we exclude elemental skill/burst?\r\n      dmg_: refinementVals[stats.weapon.refineIndex] + 10//+10 to neutralize the -10\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: () => ({\r\n    dmg_: -10\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.s\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6e96ed39.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.26540c44.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    burst_dmg_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.7668ec5d.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.86b92f01.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <Translate ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.vals[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.52b7588e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.bb54fb70.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst ele_dmg_ss = [\r\n  [12, 24, 40],\r\n  [15, 30, 50],\r\n  [18, 36, 60],\r\n  [21, 42, 70],\r\n  [24, 48, 80]\r\n]\r\nconst conditionals: IConditionals = {\r\n  em: {\r\n    name: <TransWrapper ns=\"weapon_ThunderingPulse\" key18=\"emblem\" />,\r\n    states: Object.fromEntries([1, 2, 3].map(stacks => [stacks, {\r\n      name: <TransWrapper ns=\"sheet\" key18=\"stack\" values={{ count: stacks }} />,\r\n      stats: stats => {\r\n        return {\r\n          normal_dmg_: ele_dmg_ss[stats.weapon.refineIndex][stacks - 1]\r\n        }\r\n      }\r\n    }]))\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({ atk_: atk_s[stats.weapon.refineIndex] }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.em,\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.dd15c13a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b1c71452.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst atk_s = [16, 20, 24, 28, 32]\r\nconst conditionals: IConditionals = {\r\n  ww: {\r\n    name: \"After Elemental Skill\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ww\r\n  }],\r\n}\r\nexport default weapon","import AlleyHunter from './AlleyHunter'\r\nimport AmosBow from './AmosBow'\r\nimport BlackcliffWarbow from './BlackcliffWarbow'\r\nimport CompoundBow from './CompoundBow'\r\nimport ElegyForTheEnd from './ElegyForTheEnd'\r\nimport FavoniusWarbow from './FavoniusWarbow'\r\nimport Hamayumi from './Hamayumi'\r\nimport HuntersBow from './HuntersBow'\r\nimport Messenger from './Messenger'\r\nimport MitternachtsWaltz from './MitternachtsWaltz'\r\nimport PolarStar from './PolarStar'\r\nimport Predator from './Predator'\r\nimport PrototypeCrescent from './PrototypeCrescent'\r\nimport RavenBow from './RavenBow'\r\nimport RecurveBow from './RecurveBow'\r\nimport RoyalBow from './RoyalBow'\r\nimport Rust from './Rust'\r\nimport SacrificialBow from './SacrificialBow'\r\nimport SeasonedHuntersBow from './SeasonedHuntersBow'\r\nimport SharpshootersOath from './SharpshootersOath'\r\nimport SkywardHarp from './SkywardHarp'\r\nimport Slingshot from './Slingshot'\r\nimport TheStringless from './TheStringless'\r\nimport TheViridescentHunt from './TheViridescentHunt'\r\nimport ThunderingPulse from './ThunderingPulse'\r\nimport WindblumeOde from './WindblumeOde'\r\nconst bow = {\r\n  AlleyHunter,\r\n  AmosBow,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  ElegyForTheEnd,\r\n  FavoniusWarbow,\r\n  Hamayumi,\r\n  HuntersBow,\r\n  Messenger,\r\n  MitternachtsWaltz,\r\n  PolarStar,\r\n  Predator,\r\n  PrototypeCrescent,\r\n  RavenBow,\r\n  RecurveBow,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  SeasonedHuntersBow,\r\n  SharpshootersOath,\r\n  SkywardHarp,\r\n  Slingshot,\r\n  TheStringless,\r\n  TheViridescentHunt,\r\n  ThunderingPulse,\r\n  WindblumeOde,\r\n} as const\r\nexport default bow","export default __webpack_public_path__ + \"static/media/Icon.4a7b44b1.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.78c7da7c.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d3993174.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.9db81f0a.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  pa: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 3,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.pa\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.e2efd4d4.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0f2ccd32.png\";","import { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst cdmg_ = [16, 20, 24, 28, 32]\r\nconst atk_ = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  a: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.normal\" />,\r\n    stats: stats => ({\r\n      charged_dmg_: cdmg_[stats.weapon.refineIndex],\r\n    })\r\n  },\r\n  c: {\r\n    name: <Translate ns=\"sheet\" key18=\"hitOp.charged\" />,\r\n    stats: stats => ({\r\n      atk_: atk_[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.a\r\n  }, {\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.201aa93a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.26047efd.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  r: {\r\n    name: \"After Hydro-Related Reactions\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.r\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.97165cb5.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.f05aaa35.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey } from '../../../../Build/Build'\r\nimport ColorText from '../../../../Components/ColoredText'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst heal_ = [10, 12.5, 15, 17.5, 20]\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    heal_: heal_[stats.weapon.refineIndex],\r\n  }),\r\n  document: [{\r\n    fields: [\r\n      {\r\n        text: <TransWrapper ns=\"weapon_EverlastingMoonglow\" key18=\"name\" />,\r\n        formulaText: stats => <span>{data.hp_conv[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)} * {Stat.printStat(getTalentStatKey(\"elemental\", stats) + \"_multi\", stats)}</span>,\r\n        formula: formula.norm,\r\n        variant: stats => stats.characterEle\r\n      },\r\n      {\r\n        text: <ColorText color=\"warning\">The normal damage increase is not currently being added to the character's normal damage as a singular damage number.</ColorText>\r\n      }\r\n    ],\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8bd0d67d.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.9f80e122.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.3f8b7b86.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.5b0db871.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8aeff565.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.535c9aee.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6f2b4b5e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b62d393c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [10, 12.5, 15, 17.5, 20]\r\nconst conditionals: IConditionals = {\r\n  r: {\r\n    name: \"After Electro Elemental Reaction\",\r\n    stats: stats => ({\r\n      [`${stats.characterEle}_dmg_`]: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}//TODO: party elemental bonus\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.r\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.71f8db02.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a2a89083.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  bb: {\r\n    name: \"Duration on Field (4s / stack)\",\r\n    maxStack: 4,\r\n    stats: stats => ({\r\n      anemo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      geo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      electro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      hydro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      pyro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      cryo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: () => ({\r\n    moveSPD_: 10\r\n  }),\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bb\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.bb63c33a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.38dd49cb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst conditionals: IConditionals = {\r\n  bst: {\r\n    name: \"Against Opponents Accefted by Hydro/Electro\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.bst\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d8c394ce.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0230429b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_s = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  is: {\r\n    name: \"Elemental Reactions\",\r\n    maxStack: 2,\r\n    stats: stats => ({\r\n      dmg_: dmg_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.is\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.eb71b8b1.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a21e161d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst conditionals: IConditionals = {\r\n  gm: {\r\n    name: \"Hits on opponents\",\r\n    states: {\r\n      wo: {\r\n        name: \"Hits without shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      w: {\r\n        name: \"Hits with shield\",\r\n        maxStack: 5,\r\n        stats: stats => ({\r\n          atk_: 2 * refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gm\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8e9e94e6.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.dbd90041.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.62fa4f02.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.19ca5f83.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a1ed0530.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a8349991.png\";","import { WeaponData } from 'pipeline'\r\nimport { TransWrapper } from \"../../../../Components/Translate\"\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{//TODO: party heal\r\n      text: <TransWrapper ns=\"sheet_gen\" key18=\"healing\" />,\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.2f199d8e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.40e0f349.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst crit_s = [8, 10, 12, 14, 16]\r\nconst conditionals: IConditionals = {\r\n  f: {\r\n    name: \"Opponents Damaged\",\r\n    maxStack: 5,\r\n    stats: stats => ({\r\n      critRate_: crit_s[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.f\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.fda708cd.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3f46bb7c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [40, 50, 60, 70, 80]\r\n// const refinementCdVals = [30, 26, 22, 19, 16]\r\nconst conditionals: IConditionals = {\r\n  c: {\r\n    name: \"After Elemental Skill\",\r\n    maxStack: 1,\r\n    stats: () => ({\r\n      cdRed_: 100\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.c\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a12abe14.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a88a8e62.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { TransWrapper } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    anemo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    geo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    electro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    hydro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    pyro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    cryo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <TransWrapper ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d9be0994.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.179ae998.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst conditionals: IConditionals = {\r\n  ss: {\r\n    name: \"Hits\",\r\n    states: {\r\n      n: {\r\n        name: \"Normal attack\",\r\n        stats: stats => ({\r\n          skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n          burst_dmg_: refinementVals[stats.weapon.refineIndex],\r\n        })\r\n      },\r\n      s: {\r\n        name: \"Skill or Burst\",\r\n        stats: stats => ({\r\n          normal_dmg_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      b: {\r\n        name: \"Both Normal & Skill/Burst\",\r\n        stats: stats => ({\r\n          skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n          burst_dmg_: refinementVals[stats.weapon.refineIndex],\r\n          normal_dmg_: refinementVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ss\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c57a93cc.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.6c163fd5.png\";","import { WeaponData } from 'pipeline'\r\nimport { allElements } from '../../../../Types/consts'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementAtkVals = [60, 75, 90, 105, 120]\r\nconst refinementEleDmgVals = [48, 60, 72, 84, 96]\r\nconst refinementEleMasVals = [240, 300, 360, 420, 480]\r\nconst conditionals: IConditionals = {\r\n  d: {\r\n    name: \"\",\r\n    states: {\r\n      r: {\r\n        name: \"Recitative\",\r\n        stats: stats => ({\r\n          atk_: refinementAtkVals[stats.weapon.refineIndex]\r\n        })\r\n      },\r\n      a: {\r\n        name: \"Aria\",\r\n        maxStack: 1,\r\n        stats: stats => Object.fromEntries(allElements.map(ele => [`${ele}_dmg_`, refinementEleDmgVals[stats.weapon.refineIndex]]))\r\n      },\r\n      i: {\r\n        name: \"Interlude\",\r\n        stats: stats => ({\r\n          eleMas: refinementEleMasVals[stats.weapon.refineIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.d\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b52fd6f6.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.bfd9efa9.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,  //TODO: show this up as a conditional when in the party\r\n  document: []\r\n  // conditional: {\r\n  //   type: \"weapon\",\r\n  //   sourceKey: \"ThrillingTalesOfDragonSlayers\",\r\n  //   maxStack: 1,\r\n  //   stats: stats => ({\r\n  //     atk_: refinementVals[stats.weapon.refineIndex]\r\n  //   })\r\n  // }\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d694bdd1.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b5def615.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [12, 14, 16, 18, 20]\r\nconst conditionals: IConditionals = {\r\n  gt: {\r\n    name: \"Opponents Defeated\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: refinementVals[stats.weapon.refineIndex],\r\n      moveSPD_: refinementVals[stats.weapon.refineIndex]\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.gt\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.5ebcb547.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.fe8ed6f2.png\";","import { WeaponData } from 'pipeline'\r\nimport { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementSprintVals = [14, 16, 18, 20, 22]\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst conditionals: IConditionals = {\r\n  ws: {\r\n    name: \"After Sprint\",\r\n    maxStack: 1,\r\n    stats: stats => ({\r\n      atk_: atk_s[stats.weapon.refineIndex],//TODO: stamine decrease for sprint\r\n    })\r\n  }\r\n}\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  conditionals,\r\n  document: [{\r\n    conditional: conditionals.ws\r\n  }],\r\n}\r\nexport default weapon","import ApprenticesNotes from './ApprenticesNotes'\r\nimport BlackcliffAgate from './BlackcliffAgate'\r\nimport DodocoTales from './DodocoTales'\r\nimport EmeraldOrb from './EmeraldOrb'\r\nimport EverlastingMoonglow from './EverlastingMoonglow'\r\nimport EyeOfPerception from './EyeOfPerception'\r\nimport FavoniusCodex from './FavoniusCodex'\r\nimport Frostbearer from './Frostbearer'\r\nimport HakushinRing from './HakushinRing'\r\nimport LostPrayerToTheSacredWinds from './LostPrayerToTheSacredWinds'\r\nimport MagicGuide from './MagicGuide'\r\nimport MappaMare from './MappaMare'\r\nimport MemoryOfDust from './MemoryOfDust'\r\nimport OtherworldlyStory from './OtherworldlyStory'\r\nimport PocketGrimoire from './PocketGrimoire'\r\nimport PrototypeAmber from './PrototypeAmber'\r\nimport RoyalGrimoire from './RoyalGrimoire'\r\nimport SacrificialFragments from './SacrificialFragments'\r\nimport SkywardAtlas from './SkywardAtlas'\r\nimport SolarPearl from './SolarPearl'\r\nimport TheWidsith from './TheWidsith'\r\nimport ThrillingTalesOfDragonSlayers from './ThrillingTalesOfDragonSlayers'\r\nimport TwinNephrite from './TwinNephrite'\r\nimport WineAndSong from './WineAndSong'\r\nconst catalyst = {\r\n  ApprenticesNotes,\r\n  BlackcliffAgate,\r\n  DodocoTales,\r\n  EmeraldOrb,\r\n  EverlastingMoonglow,\r\n  EyeOfPerception,\r\n  FavoniusCodex,\r\n  Frostbearer,\r\n  HakushinRing,\r\n  LostPrayerToTheSacredWinds,\r\n  MagicGuide,\r\n  MappaMare,\r\n  MemoryOfDust,\r\n  OtherworldlyStory,\r\n  PocketGrimoire,\r\n  PrototypeAmber,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SkywardAtlas,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  WineAndSong,\r\n} as const\r\nexport default catalyst","import claymore from './Claymore'\r\nimport sword from './Sword'\r\nimport polearm from './Polearm'\r\nimport bow from './Bow'\r\nimport catalyst from './Catalyst'\r\nimport { IWeaponSheets } from '../../Types/weapon'\r\nimport { documentSectionsProcessing } from '../../Util/DocumentUtil'\r\n\r\nconst WeaponData: IWeaponSheets = {\r\n  ...sword,\r\n  ...claymore,\r\n  ...polearm,\r\n  ...bow,\r\n  ...catalyst\r\n} as const\r\nObject.values(WeaponData).forEach(weapon => weapon.document && documentSectionsProcessing(weapon.document))\r\nexport default WeaponData","import { getTalentStatKey } from \"../Build/Build\"\r\nimport { StatKey } from \"../Types/artifact\"\r\nimport { FormulaItem } from \"../Types/character\"\r\nimport { ElementKey } from \"../Types/consts\"\r\nimport { BasicStats } from \"../Types/stats\"\r\n\r\n//for basic formula in the format of \"percent/100 * s[statKey]\"\r\nexport function basicDMGFormula(percent: number, stats: BasicStats, skillKey: string, elemental?: \"physical\" | ElementKey): FormulaItem {\r\n  const val = percent / 100\r\n  const statKey = getTalentStatKey(skillKey, stats, elemental)\r\n  return [s => val * s[statKey], [statKey]]\r\n}\r\nexport function basicHealingFormula(percent: number, scaleStatKey: StatKey, flat: number = 0): FormulaItem {\r\n  const ratio = percent / 100\r\n  return [s => ((ratio * s[scaleStatKey]) + flat) * s.heal_multi, [scaleStatKey, \"heal_multi\"]]\r\n}","import { getTalentStatKey, getTalentStatKeyVariant } from \"../../Build/Build\";\r\nimport { TransWrapper } from \"../../Components/Translate\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementKey } from \"../../Types/consts\";\r\nexport const st = (strKey: string) => <TransWrapper ns=\"sheet\" key18={strKey} />\r\nexport const sgt = (strKey: string) => <TransWrapper ns=\"sheet_gen\" key18={strKey} />\r\n\r\n//this template only works if there is no variation in normal attacks.(no multi hits)\r\nexport const normalDocSection = (tr, formula, data) => ({\r\n  text: tr(`auto.fields.normal`),\r\n  fields: data.normal.hitArr.map((percentArr, i) =>\r\n  ({\r\n    text: sgt(`normal.hit${i + 1}`),\r\n    formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n    formula: formula.normal[i],\r\n    variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n  }))\r\n})\r\nexport const chargedDocSection = (tr, formula, data, stamina = 25) => ({\r\n  text: tr(`auto.fields.charged`),\r\n  fields: [{\r\n    text: sgt(`charged.dmg`),\r\n    formulaText: stats => <span>{data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.dmg,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.stamina\"),\r\n    value: stamina,\r\n  }]\r\n})\r\nexport const chargedHitsDocSection = (tr, formula, data, stamina = 20) => ({\r\n  text: tr(`auto.fields.charged`),\r\n  fields: [...data.charged.hitArr.map((percentArr, i) =>\r\n  ({\r\n    text: sgt(`normal.hit${i + 1}`),\r\n    formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged[i],\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  })), {\r\n    test: sgt(\"charged.stamina\"),\r\n    value: stamina\r\n  }]\r\n})\r\nexport const plungeDocSection = (tr, formula, data) => ({\r\n  text: tr`auto.fields.plunging`,\r\n  fields: [{\r\n    text: sgt(`plunging.dmg`),\r\n    formulaText: stats => <span>{data.plunging.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.dmg,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }, {\r\n    text: sgt(\"plunging.low\"),\r\n    formulaText: stats => <span>{data.plunging.low[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.low,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }, {\r\n    text: sgt(\"plunging.high\"),\r\n    formulaText: stats => <span>{data.plunging.high[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.high,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }]\r\n})\r\n\r\nexport const claymoreChargedDocSection = (tr, formula, data) => ({\r\n  text: tr(\"auto.fields.charged\"),\r\n  fields: [{\r\n    text: sgt(\"charged.spinning\"),\r\n    formulaText: stats => <span>{data.charged.spinning[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.spinning,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.final\"),\r\n    formulaText: stats => <span>{data.charged.final[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.final,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.stamina\"),\r\n    value: data.charged.stam ?? `40/s`,\r\n  }, {\r\n    text: sgt(\"maxDuration\"),\r\n    value: data.charged.maxDuration ?? `5s`,\r\n  }]\r\n})\r\n\r\nexport const bowChargedDocSection = (tr, formula, data, elementKey: ElementKey) => ({\r\n  text: tr(\"auto.fields.charged\"),\r\n  fields: [{\r\n    text: sgt(\"charged.aimed\"),\r\n    formulaText: stats => <span>{data.charged.hit[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.hit,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.fullyAimed\"),\r\n    formulaText: stats => <span>{data.charged.full[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, elementKey), stats)}</span>,\r\n    formula: formula.charged.full,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats, elementKey),\r\n  }]\r\n})\r\nexport const talentTemplate = (talentKey, tr, img, stats: undefined | object = undefined) => ({\r\n  name: tr(`${talentKey}.name`),\r\n  img,\r\n  sections: [{ text: tr(`${talentKey}.description`), }],\r\n  ...stats ? { stats } : {}\r\n})","import { DocumentSection } from \"../Types/character\";\r\nimport { fieldProcessing } from \"./FieldUtil\";\r\n\r\nexport function documentSectionsProcessing(sections: DocumentSection[]) {\r\n  sections.forEach(section => {\r\n    if (typeof section.canShow !== \"function\") section.canShow = () => true\r\n    section.fields?.forEach?.(fieldProcessing)\r\n  })\r\n}","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  heal: [100, 115, 130, 145, 160],\r\n  dmg: [200, 230, 260, 290, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalATK) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 280, 320, 360, 400]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_atk: [1.2, 1.5, 1.8, 2.1, 2.4]\r\n}\r\n\r\nconst formula: ISubFormula = {\r\n  bonus: stats => [s => s.finalHP * data.hp_atk[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n}\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [20, 25, 30, 35, 40]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(200, stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  dmg_: [20, 25, 30, 35, 40],\r\n  heal: [60, 70, 80, 90, 100]\r\n}\r\nconst formula: ISubFormula = {\r\n  regen: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalATK) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  vals: [100, 125, 150, 175, 200]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.vals[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [1, 1.25, 1.5, 1.75, 2]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [20, 25, 30, 35, 40]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  enerRechConv: [28, 35, 42, 49, 56],\r\n  enerRechMax: [80, 90, 100, 110, 120]\r\n} as const\r\n\r\nconst formula: ISubFormula = {\r\n  conv: stats => [s => Math.min((s.enerRech_ - 100) * data.enerRechConv[stats.weapon.refineIndex] / 100, data.enerRechMax[stats.weapon.refineIndex]), ['enerRech_']],\r\n} as const\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [160, 200, 240, 280, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg:  [40, 55, 70, 85, 100]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_atk: [0.8, 1, 1.2, 1.4, 1.6],\r\n  hp_atk_add: [1, 1.2, 1.4, 1.6, 1.8]\r\n}\r\n\r\nconst formula: ISubFormula = {\r\n  esj: stats => [s => s.finalHP * data.hp_atk[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n  esjadd: stats => [s => s.finalHP * data.hp_atk_add[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n}\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [60, 75, 90, 105, 120]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [100, 125, 150, 175, 200],\r\n} as const\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n} as const\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 300, 360, 420, 480]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 100, 120, 140, 160]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  shield: [20, 23, 26, 29, 32]\r\n}\r\nconst formula: ISubFormula = {\r\n  shield: stats => {\r\n    const hpMulti = data.shield[stats.weapon.refineIndex] / 100\r\n    return [s => hpMulti * s.finalHP * (1 + s.shield_ / 100) * 1.5, [\"finalHP\", \"shield_\"]]\r\n  }\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [8, 10, 12, 14, 16]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { getTalentStatKey } from \"../../../../Build/Build\";\r\nimport { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_conv: [1, 1.5, 2, 2.5, 3]\r\n} as const\r\n\r\nconst formula: ISubFormula = {\r\n  norm: stats => {\r\n    const val = data.hp_conv[stats.weapon.refineIndex] / 100\r\n    const statKey = getTalentStatKey(\"elemental\", stats) + \"_multi\"\r\n    return [s => val * s.finalHP * s[statKey], ['finalHP', statKey]]\r\n  },\r\n} as const\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 270, 300, 330, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [1, 1.25, 1.5, 1.75, 2]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [4, 4.5, 5, 5.5, 6]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [160, 200, 240, 280, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [100, 125, 150, 175, 200]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [8, 10, 12, 14, 16]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(125, stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  vals: [40, 50, 60, 70, 80]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.vals[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula"],"sourceRoot":""}