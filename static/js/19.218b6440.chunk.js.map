{"version":3,"sources":["Components/CustomFormControl.js","Components/ConditionalSelector.js","Components/CharacterSelection.js","Character/StatInput.js","Components/StatDisplay.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Character/CharacterDisplay/StatDisplayComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js"],"names":["CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","className","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","map","condial","i","Fragment","keys","v","stack","tempcount","icon","faCheckSquare","faSquare","CharacterSelectionDropdownList","onSelect","CharacterDatabase","getCharacterKeyList","sort","a","b","characterKey","Character","getName","StatInput","name","prependEle","defaultValue","percent","restProps","Prepend","Text","Append","undefined","placement","overlay","style","pointerEvents","faUndo","DisplayStatDiff","label","val","oldVal","fixed","unit","diff","oldText","diffText","toFixed","xs","StatDisplay","character","equippedBuild","newBuild","editable","statKey","finalStats","build","invalid","getStatValueWithOverride","Stat","getStatUnit","fixedUnit","StatIconEle","getStatName","talentKey","sectionIndex","fieldIndex","field","getTalentField","labelVariant","getTalentFieldValue","hasOverride","ReactionToggle","reactionMode","setReactionMode","charEleKey","getElementalKey","includes","src","Assets","elements","hydro","pyro","cryo","HitModeToggle","hitMode","setHitMode","CalculationDisplay","Object","entries","getDisplayStatKeys","fields","header","getTalentName","bg","Header","Body","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","reverse","Boolean","length","as","Card","eventKey","printStat","Collapse","subKey","printFormula","talentField","fieldText","fieldVariant","fieldFormulaText","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","DamageOptionsAndCalculation","setState","setOverride","r","Button","href","rel","xl","getStatNameRaw","getBaseStatValue","getElementalKeys","eleKey","immunityStatKey","elementImmunity","m","StatDisplayComponent","statsDisplayKeys","cardbg","md","JSON","stringify","TabContainer","_useUncontrolled","useUncontrolled","activeKey","id","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","children","useMemo","key","tabContext","getControlledId","getControllerId","React","createElement","TabContext","Provider","SelectableContext","TabContent","forwardRef","_ref","ref","bsPrefix","_ref$as","Component","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","TabPane","_useTabContext","context","rest","shouldTransition","makeEventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane"],"mappings":"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","file":"static/js/19.218b6440.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  let displayValue = value\r\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\r\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\r\n  const props = {\r\n    type: \"number\",\r\n    className: \"hide-appearance\",\r\n    placeholder,\r\n    value: displayValue,\r\n    disabled,\r\n    onChange: (e) => {\r\n      let value = e.target.value;\r\n      if (float) {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\r\n        else value = parseFloat(value) || 0\r\n      } else {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\r\n        else value = parseInt(value) || 0\r\n      }\r\n      onValueChange?.(value);\r\n    },\r\n    onFocus: () => setFocus(true),\r\n    onBlur: () => setFocus(false),\r\n  }\r\n  return <FormControl {...props} aria-label=\"custom-input\" />\r\n}\r\nexport default CustomFormControl;","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\r\n  let val, oldVal, fixed, unit, variant;\r\n  let label = \"\"\r\n  if (typeof statKey === \"string\") {//basic statKey\r\n    if (newBuild && equippedBuild) {//comparable\r\n      //newbuild -> val\r\n      //equippedbuild ->old\r\n      val = newBuild?.finalStats?.[statKey] ?? 0\r\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\r\n    } else {\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      //build ->val\r\n      val = build?.finalStats?.[statKey] ?? 0\r\n      //statvaluewith override -> old\r\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n      oldVal === invalid && (oldVal = undefined)\r\n      if (statKey === \"finalHP\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n      else if (statKey === \"finalDEF\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n      else if (statKey === \"finalATK\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n    }\r\n    unit = Stat.getStatUnit(statKey)\r\n    fixed = Stat.fixedUnit(statKey)\r\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n  } else {//from character sheet\r\n    const build = newBuild ? newBuild : equippedBuild\r\n    const { talentKey, sectionIndex, fieldIndex } = statKey\r\n    const field = Character.getTalentField(build.finalStats, talentKey, sectionIndex, fieldIndex)\r\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", build.finalStats)\r\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build.finalStats)}</span>\r\n    fixed = Character.getTalentFieldValue(field, \"fixed\", build.finalStats, 0)\r\n    val = Character.getTalentFieldValue(field, \"formula\", build.finalStats)?.[0]?.(build.finalStats)\r\n    if (newBuild && equippedBuild) {//comparable\r\n      oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n    }\r\n  }\r\n\r\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\r\n  reactionMode === null && (reactionMode = \"none\")\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\r\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ character, character: { characterKey }, build }) {\r\n  return <div>\r\n    {Object.entries(Character.getDisplayStatKeys(build.finalStats)).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n      return <Card bg=\"darkcontent\" text=\"lightfont\" key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              //simple statKey field\r\n              if (typeof field === \"string\") {\r\n                const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, [field]), build?.finalStats?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build.finalStats)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              //fields\r\n              const talentField = Character.getTalentField(build.finalStats, field.talentKey, field.sectionIndex, field.fieldIndex)\r\n              const fieldText = Character.getTalentFieldValue(talentField, \"text\", build.finalStats)\r\n              const fieldVariant = Character.getTalentFieldValue(talentField, \"variant\", build.finalStats)\r\n              const fieldFormulaText = Character.getTalentFieldValue(talentField, \"formulaText\", build.finalStats)\r\n              const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(talentField, \"formula\", build.finalStats, [])\r\n              if (!fieldFormula || !fieldFormulaDependency) return null\r\n              const fieldValue = fieldFormula?.(build.finalStats)?.toFixed?.()\r\n              const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, fieldFormulaDependency), build?.finalStats?.modifiers).reverse()\r\n              return <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                  <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                  <Card.Body className=\"p-2\">\r\n                    <div className=\"mb-n2\">\r\n                      <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n                      {subFormulaKeys.map(subKey =>\r\n                        <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} >\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { hitMode }, setState, setOverride, newBuild, equippedBuild }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Accordion>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Options</span>\r\n            <small>Expand below to edit enemy details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* TODO reaction interaction UI */}\r\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"1\">\r\n        <Card.Body>\r\n          <Row className=\"mb-2\"><Col>\r\n            <Button variant=\"warning\" >\r\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                To get the specific resistance values of enemies, please visit the wiki.\r\n          </a>\r\n            </Button >\r\n          </Col></Row>\r\n          <Row>\r\n            <Col xs={12} xl={6} className=\"mb-2\">\r\n              <StatInput\r\n                name={<b>Enemy Level</b>}\r\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\r\n              />\r\n            </Col>\r\n            {Character.getElementalKeys().map(eleKey => {\r\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                <StatInput\r\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  placeholder={Stat.getStatNameRaw(statKey)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                  onValueChange={(val) => setOverride?.(statKey, val)}\r\n                  disabled={elementImmunity}\r\n                />\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n\r\n    <Card bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Formulas</span>\r\n            <small>Expand below to see calculation details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"2\">\r\n        <Card.Body className=\"p-2\">\r\n          <CalculationDisplay character={character} build={build} />\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n}\r\nexport {\r\n  HitModeToggle,\r\n  ReactionToggle,\r\n};\r\n\r\n","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;"],"sourceRoot":""}