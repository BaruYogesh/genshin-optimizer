{"version":3,"sources":["Components/Translate.tsx","Util/ReactUtil.ts","Artifact/ArtifactSheet.tsx","Character/CharacterSheet.ts","Weapon/WeaponSheet.tsx","Components/StatIcon.tsx","Types/consts.ts","StatConstants.ts","Stat.tsx","Settings/SettingsDisplay.tsx","Components/LoadingCard.tsx","App.tsx","reportWebVitals.ts","index.tsx","Data/CharacterData.ts","StatData.ts","Database/utils.ts","Database/DataManager.ts","Database/migration.ts","Database/Database.ts","Data/ArtifactData.ts","Data/ArtifactLookupTable.ts","Artifact/Artifact.ts","Database/validation.ts","Types/artifact.ts","Data/ElementalData.ts","Util/Util.ts","Util/FieldUtil.tsx","Conditional/Conditional.ts","i18n.ts"],"names":["components","anemo","className","geo","cryo","hydro","pyro","electro","Translate","ns","key18","values","children","t","useTranslation","textKey","textObj","returnObjects","i18nKey","T","obj","TransWrapper","Para","li","parent","Array","isArray","Object","entries","map","key","val","trans","useForceUpdate","useState","stateDirty","update","useCallback","usePromise","promise","dependencies","undefined","res","setRes","useEffect","pending","then","console","error","artifactImport","imp","fromEntries","default","set","value","ArtifactSheet","promiseSheets","allArtifactSets","sheets","data","this","name","rarity","pieces","icons","setEffects","conditionals","num","stats","deepClone","evalIfFunc","setNum","text","effects","conditional","grouped","forEach","sheet","Math","max","push","allRarities","filter","length","charStats","setToSlots","artifactSetEffect","slots","parseInt","keys","expCurve","expCurveJSON","charImport","a","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","getBase","statKey","level","ascensionLvl","baseStat","baseStatCurve","ascensions","props","getSpecializedStat","find","k","getSpecializedStatVal","Stat","getStatUnit","isMelee","weaponTypeKey","getTalent","eleKey","talent","talents","getTalentOfKey","talentKey","getTalentStats","split","constell","constellation","getTalentStatsAll","statsArr","talentStats","cardImg","thumbImg","star","elementKey","constellationName","get","getAll","weaponImport","weaponKey","WeaponSheet","loadWeaponSheet","allWeaponKeys","weaponSheet","tr","strKey","passiveDescription","getSubStatKey","weapon","refineIndex","build","getMainStatValue","ascension","mainStat","type","base","curve","addStats","getSubStatValue","subStat","weaponType","img","document","getWeaponsOfType","getLevelString","ascensionMaxLevel","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","critRate_","faDice","critDMG_","faDiceD20","enerRech_","faSync","heal_","faFirstAid","StatIconEle","icon","allHitModes","allReactionModes","allArtifactRarities","allSlotKeys","allElements","allWeaponTypeKeys","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","elemental","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","multi","variants","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","Error","getStatName","defVal","htmlStatsData","StatData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","variant","unit","fixedUnit","printStat","f","expand","getPrintableFormulaStatKeyList","statList","modifiers","Set","FormulaText","has","printFormula","modifierText","mkey","multiplier","toFixed","options","statName","statUnit","o","enemyLevel_multi","heal_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_hit","ele","move","reaction","baseMulti","SettingsDisplay","forceUpdate","ReactGA","pageview","bg","Header","Body","LanguageCard","DownloadCard","UploadCard","LanguageDropdown","nativeLanguages","i18n","onSetLanguage","lang","changeLanguage","currentLang","languages","Toggle","language","Menu","languageCodeList","Item","onClick","copyToClipboard","navigator","clipboard","writeText","JSON","stringify","database","exportStorage","alert","numChar","_getCharKeys","numArt","_getArts","downloadValid","Boolean","xs","md","count","Footer","disabled","JSONstr","filename","contentType","window","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","confirm","clear","deleteDatabase","file","cb","reader","FileReader","onload","result","readAsText","dataObj","setdata","setfilename","parse","characterDatabase","artifactDatabase","e","dataValid","File","label","onChange","files","readFile","custom","accept","style","minHeight","importStorage","replaceDatabase","LoadingCard","useSuspense","ready","Card","Trans","Spinner","animation","Home","lazy","ArtifactDisplay","CharacterDisplay","BuildDisplay","Planner","FlexDisplay","AppInner","id","Navbar","Brand","as","Link","to","aria-controls","Collapse","Nav","process","rel","outboundLink","faPaypal","faPatreon","faDiscord","faCog","fallback","Container","path","component","Row","Col","version","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","getElementById","milestoneLevels","characterStatBase","stamina","flat","const","characterEle","characterLevel","weaponATK","dmg_","critHit_base_multi","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaSprintDec_","staminaGlidingDec_","staminaChargedDec_","transformative_level_multi","crystalize_multi","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","s","c","ElementToReactionKeys","physical","dendro","PreprocessFormulas","dependencyKeys","debug","initialStats","constData","formulaList","tmp","modifier","constModifier","dynamicModifier","constFunc","reduce","accu","m","dynamicFunc","funcIndicator","func","log","x","formula","assign","moveName","clamp","eleName","opt","typeName","getDBVersion","storage","getItem","setDBVersion","setItem","toString","load","string","removeItem","save","remove","DataManager","listeners","anyListeners","callback","listener","allKeys","migrate","report","migrated","state","elementalFilter","weaponFilter","startsWith","buildSetting","artifactsAssumeFull","ascending","setFilters","useLockedArts","buildSettings","mainStatAssumptionLevel","mainStatKeys","migrateV2ToV3","traveler","characterKey","requireUpdate","location","migrateV3ToV4","levelKey","lvla","findIndex","maxLevel","addAsc","includes","baseStatOverrides","migrateV4ToV5","character","migrateV5ToV6","Database","arts","chars","flex","validateDBCharacter","validateFlexCharacter","equippedArtifacts","slot","validateDBArtifact","slotKey","artifact","validateFlexArtifact","art","extractFlexArtifact","char","follow","followAny","newChar","oldChar","saveChar","newArt","candidate","getRandomInt","size","generateRandomArtID","oldArt","lock","saveArt","artKey","newCharKey","oldCharKey","oldArtKey","newArts","oldArts","setLocation","artifactDisplay","characterDisplay","buildsDisplay","newDatabase","removeAll","shared","localStorage","ArtifactSubstatRollData","1","low","high","numUpgrades","2","3","4","5","ArtifactMainStatsData","physical_dmg_","ele_dmg_","ArtifactSubstatsData","ArtifactSubstatMaxRolls","rolls","getArrLastElement","ArtifactSubstatMaxRollEfficiency","acc","ArtifactSlotsData","flower","plume","sands","goblet","circlet","ArtifactSubstatLookupTable","Artifact","numStars","substats","errors","allSubstatRolls","total","substat","index","substatRolls","getSubstatRolls","roll","efficiency","getSubstatEfficiency","some","minimum","rollInfo","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","current","totalRolls","sum","emptySlotCount","matchedSlotCount","unusedFilterCount","currentEfficiency","maxEfficiency","maxSubstatRollEfficiency","slotName","slotMainStats","setEffectsObjs","artifactSheets","setKey","setObj","setEffect","setNumKey","setEffectObj","setStats","Conditional","parseConditionalValues","conditionalValues","conditionalValue","condStats","resolve","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","endsWith","mainStatValue","ArtifactStarsData","maxSubstatValues","getSubstatKeys","allSubstats","ceil","getSubstatRollData","substatKey","substatValue","rollData","i","b","clampPercent","artifacts","mainStatKey","round","min","mainStatVal","weightedEfficiency","NaN","validated","allMainStatKeys","_","validateSubstats","hitMode","reactionMode","talentLevelKeys","infusionAura","maxLvl","auto","statFilters","optimizationTarget","useEquippedArts","getRandomElementFromArray","array","random","getRandomIntInclusive","loadFromLocalStorage","saveToLocalStorage","arr","strPadLeft","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","prop","layeredAssignment","objPathValue","deletePropPath","tempPath","lastKey","objClearEmpties","crawlObject","validate","arg","modifiersToFields","mStatKey","canShow","formulaText","fixed","statsToFields","statVals","statVal","fieldProcessing","field","processed","Promise","all","addConditional","setNumObj","source","findConditionals","condKey","states","maxStack","fields","stacks","stateKey","conditionalStats","use","Backend","initReactI18next","LanguageDetector","init","fallbackLng","defaultNS","returnEmptyString","backend","loadPath","interpolation","escapeValue"],"mappings":"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QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,KACrMC,EAAG,CAAE,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,KACrsBC,EAAG,CAAE,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAE5kDtY,OAAQ,CACJoY,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KAC1LC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhD5Y,IAAK,CACD0Y,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDvY,IAAK,CACDqY,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDxY,KAAM,CACFsY,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,KAC/KC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3sBC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,E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KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,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","file":"static/js/main.0a9b1ed7.chunk.js","sourcesContent":["import { Trans, useTranslation } from \"react-i18next\"\r\nconst components = {\r\n  anemo: <span className=\"text-anemo\" />,\r\n  geo: <span className=\"text-geo\" />,\r\n  cryo: <span className=\"text-cryo\" />,\r\n  hydro: <span className=\"text-hydro\" />,\r\n  pyro: <span className=\"text-pyro\" />,\r\n  electro: <span className=\"text-electro\" />,\r\n}\r\n\r\nexport function Translate({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  const textObj = values ? t(textKey, values, { returnObjects: true }) as any : t(textKey, { returnObjects: true }) as any\r\n  if (typeof textObj === \"string\") return children ? <Trans i18nKey={textKey} t={t} components={components} values={values} >{children}</Trans> : <Trans i18nKey={textKey} t={t} components={components} values={values} />\r\n  return <T key18={textKey} obj={textObj} t={t} values={values} />\r\n}\r\n/**this is used cause the `components` prop mess with tag interpolation. */\r\nexport function TransWrapper({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  return <Trans i18nKey={textKey} t={t} values={values} >{children}</Trans>\r\n}\r\nfunction Para({ children }: { children?: JSX.Element }) {\r\n  return <p className=\"mb-0\">{children}</p>\r\n}\r\n\r\nfunction T({ key18, obj, li, t, values }: { key18: string, obj: any, li?: boolean, t, values?: any }) {\r\n  if (typeof obj === \"string\") return <Trans i18nKey={key18} components={components} parent={Para} t={t} values={values} />\r\n  if (Array.isArray(obj))\r\n    return <ul className=\"mb-2\">\r\n      <T key18={key18} obj={{ ...obj }} li t={t} values={values} />\r\n    </ul>\r\n  return Object.entries(obj).map(([key, val]) => {\r\n    if (val === \"<br/>\") return <div key={key as any} className=\"mb-2\" />\r\n\r\n    if (typeof val === \"object\") return <T key={key as any} key18={`${key18}.${key as any}`} obj={val} t={t} values={values} />\r\n    if (typeof val === \"string\") {\r\n      const trans = <Trans key={key as any} i18nKey={`${key18}.${key}`} components={components} parent={Para} t={t} values={values} />\r\n      return li ? <li key={key as any}>{trans}</li> : trans\r\n    }\r\n    return null\r\n  }) as any\r\n}","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined, dependencies: any[]): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>(undefined);\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => {\r\n      pending = false\r\n      setRes(undefined)\r\n    }\r\n  }, dependencies)// eslint-disable-line react-hooks/exhaustive-deps\r\n  return res\r\n}\r\n","import { IArtifactSheet, SetEffectEntry, StatArr, StatDict } from \"../Types/artifact\";\r\nimport { allArtifactSets, allRarities, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  constructor(data: IArtifactSheet) { this.data = data }\r\n\r\n  get name(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slotNames(): Dict<SlotKey, string> { return this.data.pieces }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): StatDict {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectTexts(setNum: SetNum, stats: ICalculatedStats): Displayable {\r\n    let text = this.setEffects[setNum]?.text\r\n    return evalIfFunc(text ?? \"\", stats)\r\n  }\r\n  setEffectConditionals(setNum: SetNum, stats: ICalculatedStats) {\r\n    const effects = this.setEffects[setNum]\r\n    if (effects?.conditional || effects?.conditionals) {\r\n      return {\r\n        ...effects?.conditional && { default: effects?.conditional },\r\n        ...effects?.conditionals && effects?.conditionals\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static namesByMaxRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): [Rarity, [ArtifactSetKey, string][]][] {\r\n    const grouped: Dict<Rarity, [ArtifactSetKey, string][]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push([key, sheet.name])\r\n      else grouped[rarity] = [[key, sheet.name]]\r\n    })\r\n    return allRarities.map(rarity => [rarity, grouped[rarity] ?? []] as [Rarity, [ArtifactSetKey, string][]]).filter(([, group]) => group.length)\r\n  }\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): StatArr {\r\n    let artifactSetEffect: StatArr = []\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && Object.entries(evalIfFunc(value.stats, charStats) ?? {}).forEach(([key, value]) =>\r\n          artifactSetEffect.push({ key, value }))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import { ICharacterSheet, TalentSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport { CharacterExpCurveData } from \"pipeline\";\r\nimport expCurveJSON from './expCurve_gen.json'\r\nimport Stat from '../Stat'\r\n\r\nconst expCurve = expCurveJSON as CharacterExpCurveData\r\n\r\nexport const charImport = import('../Data/Characters').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>\r\n})\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | \"\"): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return \"elementKey\" in this.sheet ? this.sheet.elementKey : undefined }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get isAutoElemental() { return this.sheet.weaponTypeKey === \"catalyst\" }\r\n  getBase = (statKey: \"hp\" | \"def\" | \"atk\", level = 1, ascensionLvl = 0) =>\r\n    this.sheet.baseStat[statKey] * (expCurve[this.sheet.baseStatCurve[statKey] as any])[level] + this.sheet.ascensions[ascensionLvl].props[statKey]\r\n  getSpecializedStat = (ascensionLvl = 0): string | undefined => Object.keys(this.sheet.ascensions[ascensionLvl].props).find(k => k !== \"hp\" && k !== \"def\" && k !== \"atk\")\r\n  getSpecializedStatVal = (ascensionLvl = 0): number => {\r\n    const statKey = this.getSpecializedStat(ascensionLvl)\r\n    if (!statKey) return 0\r\n    const value = this.sheet.ascensions[ascensionLvl].props[statKey] ?? 0\r\n    if (Stat.getStatUnit(statKey) === \"%\") return value * 100\r\n    return value\r\n  }\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (eleKey: ElementKey = \"anemo\"): TalentSheet | undefined => {\r\n    if (\"talent\" in this.sheet) return this.sheet.talent\r\n    else return this.sheet.talents[eleKey]\r\n  }\r\n  getTalentOfKey = (talentKey: string, eleKey: ElementKey = \"anemo\") => this.getTalent(eleKey)?.sheets[talentKey]\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalentOfKey(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats, eleKey: ElementKey = \"anemo\") => {\r\n    const talents = this.getTalent(eleKey)?.sheets\r\n    if (!talents) return []\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n}\r\n","import { WeaponExpCurveData } from 'pipeline';\r\nimport { Translate } from '../Components/Translate'\r\nimport { ascensionMaxLevel } from '../Data/CharacterData';\r\nimport Stat from '../Stat';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\nimport expCurveJSON from './expCurve_gen.json'\r\nconst expCurve = expCurveJSON as WeaponExpCurveData\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return Object.fromEntries(Object.entries(imp.default).map(([weaponKey, value]) =>\r\n    [weaponKey, new WeaponSheet(weaponKey, value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>\r\n})\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  key: WeaponKey;\r\n  constructor(key: string, weaponSheet: IWeaponSheet) {\r\n    this.key = key as WeaponKey\r\n    this.sheet = weaponSheet\r\n  }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICharacter[\"weapon\"]): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  //when there is no substat, assume there is no passive. \r\n  get passiveName() { return this.getSubStatKey() ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (stats: ICalculatedStats) => this.getSubStatKey() ? this.tr(`passiveDescription.${stats.weapon.refineIndex}`) : \"\"\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  stats = (build: ICalculatedStats): object | undefined => evalIfFunc(this.sheet.stats, build) || {}\r\n  get conditionals() { return this.sheet.conditionals }\r\n  get document() { return this.sheet.document }\r\n  getMainStatValue = (level = 1, ascension = 0) => {\r\n    const { type, base, curve } = this.sheet.mainStat\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatValue = (level = 1, ascension = 0) => {\r\n    if (!this.sheet.subStat) return 0\r\n    let { type, base, curve } = this.sheet.subStat\r\n    if (Stat.getStatUnit(type) === \"%\") base = base * 100\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatKey = () => this.sheet.subStat?.type ?? \"\"\r\n}\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nexport const allHitModes = [\"hit\", \"avgHit\", \"critHit\"] as const\r\nexport const allReactionModes = [\"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",] as const\r\nexport const allArtifactSetCount = [1, 2, 3, 4, 5] as const\r\nexport const allRarities = [5, 4, 3, 2, 1] as const\r\nexport const allArtifactRarities = [5, 4, 3] as const\r\nexport const allSlotKeys = [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"] as const\r\nexport const allElements = ['anemo', 'geo', 'electro', 'hydro', 'pyro', 'cryo'] as const\r\nexport const allWeaponTypeKeys = ['sword', 'claymore', 'polearm', 'bow', 'catalyst'] as const\r\nexport const allArtifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\",\r\n  \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\",\r\n  \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\",\r\n  \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\",\r\n  \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\",\r\n  \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\",\r\n  \"WanderersTroupe\", \"TenacityOfTheMillelith\", \"PaleFlame\", \"EmblemOfSeveredFate\", \"ShimenawasReminiscence\",\r\n] as const\r\nexport const allCharacterKeys = [\r\n  \"albedo\", \"amber\", \"barbara\", \"beidou\", \"bennett\", \"chongyun\", \"diluc\", \"diona\", \"fischl\", \"ganyu\",\r\n  \"hutao\", \"jean\", \"kaeya\", \"keqing\", \"klee\", \"lisa\", \"mona\", \"ningguang\", \"noelle\", \"qiqi\",\r\n  \"razor\", \"sucrose\", \"tartaglia\", \"traveler\", \"traveler\", \"venti\", \"xiao\", \"xiangling\", \"xingqiu\", \"xinyan\",\r\n  \"zhongli\", \"rosaria\", \"yanfei\", \"eula\", \"kaedeharakazuha\", \"kamisatoayaka\"\r\n] as const\r\nexport const allWeaponKeys = [\r\n  \"DullBlade\", \"SilverSword\", \"CoolSteel\", \"DarkIronSword\", \"FilletBlade\", \"HarbingerOfDawn\", \"SkyriderSword\",\r\n  \"TravelersHandySword\", \"BlackcliffLongsword\", \"FavoniusSword\", \"IronSting\", \"LionsRoar\", \"PrimordialJadeCutter\",\r\n  \"PrototypeRancour\", \"RoyalLongsword\", \"SacrificialSword\", \"TheAlleyFlash\", \"TheBlackSword\", \"TheFlute\",\r\n  \"SwordOfDescension\", \"FesteringDesire\", \"AquilaFavonia\", \"SkywardBlade\", \"SummitShaper\", \"WasterGreatsword\",\r\n  \"OldMercsPal\", \"BloodtaintedGreatsword\", \"DebateClub\", \"FerrousShadow\", \"Quartz\", \"SkyriderGreatsword\",\r\n  \"WhiteIronGreatsword\", \"BlackcliffSlasher\", \"FavoniusGreatsword\", \"LithicBlade\", \"PrototypeAminus\", \"Rainslasher\",\r\n  \"RoyalGreatsword\", \"SerpentSpine\", \"TheBell\", \"Whiteblind\", \"SacrificialGreatsword\", \"SnowTombedStarsilver\",\r\n  \"SkywardPride\", \"WolfsGravestone\", \"TheUnforged\", \"BeginnersProtector\", \"IronPoint\", \"BlackTassel\", \"Halberd\",\r\n  \"WhiteTassel\", \"BlackcliffPole\", \"CrescentPike\", \"Deathmatch\", \"DragonsBane\", \"LithicSpear\", \"PrototypeGrudge\",\r\n  \"FavoniusLance\", \"RoyalSpear\", \"DragonspineSpear\", \"VortexVanquisher\", \"PrimordialJadeWingedSpear\", \"StaffOfHoma\",\r\n  \"SkywardSpine\", \"HuntersBow\", \"SeasonedHuntersBow\", \"EbonyBow\", \"Messenger\", \"RavenBow\", \"RecurveBow\",\r\n  \"SharpshootersOath\", \"Slingshot\", \"TheStringless\", \"AlleyHunter\", \"BlackcliffWarbow\", \"CompoundBow\",\r\n  \"FavoniusWarbow\", \"PrototypeCrescent\", \"RoyalBow\", \"Rust\", \"SacrificialBow\", \"TheViridescentHunt\", \"SkywardHarp\",\r\n  \"AmosBow\", \"ElegyForTheEnd\", \"WindblumeOde\", \"ApprenticesNotes\", \"PocketGrimoire\", \"AmberCatalyst\", \"EmeraldOrb\", //NOTE: AmberCatalyst is not a valid weapon.\r\n  \"MagicGuide\", \"OtherworldlyStory\", \"ThrillingTalesOfDragonSlayers\", \"TwinNephrite\", \"BlackcliffAgate\",\r\n  \"FavoniusCodex\", \"MappaMare\", \"PrototypeMalice\", \"RoyalGrimoire\", \"SacrificialFragments\", \"SolarPearl\", \"TheWidsith\",\r\n  \"WineAndSong\", \"EyeOfPerception\", \"Frostbearer\", \"LostPrayerToTheSacredWinds\", \"SkywardAtlas\", \"MemoryOfDust\",\r\n  \"SongOfBrokenPines\", \"DodocoTales\", \"MitternachtsWaltz\", \"FreedomSworn\", \"AmenomaKageuchi\", \"MistsplitterReforged\",\r\n  \"KatsuragikiriNagamasa\", \"KitainCrossSpear\", \"ThunderingPulse\", \"Hamayumi\", \"HakushinRing\",\r\n] as const\r\nexport const characterSpecializedStatKeys = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"] as const\r\n\r\nexport type HitModeKey = typeof allHitModes[number]\r\nexport type ReactionModeKey = typeof allReactionModes[number]\r\nexport type SetNum = typeof allArtifactSetCount[number]\r\nexport type Rarity = typeof allRarities[number]\r\nexport type SlotKey = typeof allSlotKeys[number]\r\nexport type ElementKey = typeof allElements[number]\r\nexport type ArtifactSetKey = typeof allArtifactSets[number]\r\nexport type CharacterKey = typeof allCharacterKeys[number]\r\nexport type WeaponKey = typeof allWeaponKeys[number]\r\nexport type WeaponTypeKey = typeof allWeaponTypeKeys[number]\r\nexport type CharacterSpecializedStatKey = typeof characterSpecializedStatKeys[number]","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\n\r\n// https://github.com/Dimbreath/GenshinData/blob/72c9112a7c5e8e5014f61009a1a2764e266aeab7/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//   or if the permalink is dead,\r\n// https://github.com/Dimbreath/GenshinData/blob/master/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//\r\n// PlayerElementLevelCo\r\nexport const transformativeReactionLevelMultipliers = [-1.0, // lvl 0\r\n  17.165606, 18.535048, 19.904854, 21.274902, 22.6454, 24.649612, 26.640642, 28.868587, 31.36768, 34.143345, 37.201, 40.66, 44.446667, 48.56352, 53.74848, 59.081898, 64.420044, 69.72446, 75.12314, 80.58478, 86.11203, 91.70374, 97.24463, 102.812645, 108.40956, 113.20169, 118.102905, 122.97932, 129.72733, 136.29291, 142.67085, 149.02902, 155.41699, 161.8255, 169.10631, 176.51808, 184.07274, 191.70952, 199.55692, 207.38205, 215.3989, 224.16566, 233.50217, 243.35057, 256.06308, 268.5435, 281.52606, 295.01364, 309.0672, 323.6016, 336.75754, 350.5303, 364.4827, 378.61917, 398.6004, 416.39825, 434.387, 452.95105, 472.60623, 492.8849, 513.56854, 539.1032, 565.51056, 592.53876, 624.4434, 651.47015, 679.4968, 707.79407, 736.67145, 765.64026, 794.7734, 824.67737, 851.1578, 877.74207, 914.2291, 946.74677, 979.4114, 1011.223, 1044.7917, 1077.4437, 1109.9976, 1142.9766, 1176.3695, 1210.1844, 1253.8357, 1288.9528, 1325.4841, 1363.4569, 1405.0974, 1446.8535]\r\n// PlayerShieldLevelCo\r\nexport const crystalizeLevelMultipliers = [-1.0, // lvl 0\r\n  91.1791, 98.707664, 106.23622, 113.76477, 121.29332, 128.82188, 136.35042, 143.87898, 151.40752, 158.93608, 169.99149, 181.07625, 192.19037, 204.0482, 215.939, 227.86275, 247.68594, 267.5421, 287.4312, 303.82642, 320.22522, 336.62762, 352.31927, 368.01093, 383.70255, 394.43237, 405.18146, 415.94992, 426.73764, 437.5447, 450.6, 463.7003, 476.84558, 491.1275, 502.55457, 514.0121, 531.4096, 549.9796, 568.5849, 584.9965, 605.67035, 626.3862, 646.0523, 665.7556, 685.4961, 700.8394, 723.3331, 745.8653, 768.4357, 786.79193, 809.5388, 832.32904, 855.16266, 878.0396, 899.4848, 919.362, 946.0396, 974.7642, 1003.5786, 1030.077, 1056.635, 1085.2463, 1113.9244, 1149.2587, 1178.0648, 1200.2238, 1227.6603, 1257.243, 1284.9174, 1314.7529, 1342.6652, 1372.7524, 1396.321, 1427.3124, 1458.3745, 1482.3358, 1511.9109, 1541.5493, 1569.1537, 1596.8143, 1622.4197, 1648.074, 1666.3761, 1684.6782, 1702.9803, 1726.1047, 1754.6715, 1785.8666, 1817.1375, 1851.0603]\r\n","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  const debug = process.env.NODE_ENV === \"development\" ? <code className=\"text-warning\"> {statKey}</code> : null\r\n  return <span className=\"text-nowrap\"><b>{statName}</b>{debug} <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>16 * {f(o, \"eleMas\")} / ( 2000 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n};\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].map(ele => FormulaText[`${ele}_crystalize_hit`] = o => <span>250% * {f(o, `crystalize_hit`)}</span>)\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","import { useState } from \"react\"\r\nimport { Alert, Badge, Button, Card, Col, Container, Dropdown, Form, Row } from \"react-bootstrap\"\r\nimport ReactGA from 'react-ga'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport { database } from \"../Database/Database\"\r\nimport { languageCodeList } from \"../i18n\"\r\nimport { useForceUpdate } from \"../Util/ReactUtil\"\r\n\r\nexport default function SettingsDisplay() {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const [, forceUpdate] = useForceUpdate()\r\n  ReactGA.pageview('/setting')\r\n\r\n  return <Container>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n      <Card.Header><Trans t={t} i18nKey=\"title\" /></Card.Header>\r\n      <Card.Body>\r\n        <LanguageCard />\r\n        <DownloadCard forceUpdate={forceUpdate} />\r\n        <UploadCard forceUpdate={forceUpdate} />\r\n      </Card.Body>\r\n    </Card>\r\n  </Container >\r\n}\r\n\r\nfunction LanguageCard() {\r\n  const { t } = useTranslation();\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header>{t(\"settings:languageCard.selectLanguage\")} <Badge variant=\"warning\">{t(\"ui:underConstruction\")}</Badge></Card.Header>\r\n    <Card.Body>\r\n      <LanguageDropdown />\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nconst nativeLanguages = {\r\n  \"chs\": \"中文 正体字\",\r\n  \"cht\": \"中文 繁體字\",\r\n  \"de\": \"Deutsch\",\r\n  \"en\": \"English\",\r\n  \"es\": \"español\",\r\n  \"fr\": \"français\",\r\n  \"id\": \"Bahasa Indonesia\",\r\n  \"ja\": \"日本語\",\r\n  \"ko\": \"한국어\",\r\n  \"pt\": \"Português\",\r\n  \"ru\": \"Русский язык\",\r\n  \"th\": \"ภาษาไทย\",\r\n  \"vi\": \"Tiếng Việt\"\r\n}\r\nexport function LanguageDropdown() {\r\n  const { t, i18n } = useTranslation([\"ui\", \"settings\"]);\r\n  const onSetLanguage = (lang) => () => i18n.changeLanguage(lang);\r\n  const currentLang = i18n.languages[0];\r\n  return <Dropdown className=\"flex-grow-1 mb-2\">\r\n    <Dropdown.Toggle className=\"w-100\" variant=\"primary\">\r\n      {t('settings:languageCard.languageFormat', { language: t(`languages:${currentLang}`) })}\r\n    </Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {languageCodeList.map((lang) => <Dropdown.Item key={lang} onClick={onSetLanguage(lang)}><Trans i18nKey={`languages:${lang}`} />{lang !== currentLang ? ` (${nativeLanguages[lang]})` : \"\"}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\nfunction download(JSONstr, filename = \"data.json\") {\r\n  const contentType = \"application/json;charset=utf-8\"\r\n  if (window?.navigator?.msSaveOrOpenBlob as any) { // TODO: Function is always defined, do we want to call it instead?\r\n    const blob = new Blob([decodeURIComponent(encodeURI(JSONstr))], { type: contentType })\r\n    navigator.msSaveOrOpenBlob(blob, filename)\r\n  } else {\r\n    const a = document.createElement('a');\r\n    a.download = filename\r\n    a.href = `data:${contentType},${encodeURIComponent(JSONstr)}`\r\n    a.target = \"_blank\"\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n  }\r\n}\r\n\r\nfunction deleteDatabase(t) {\r\n  if (!window.confirm(t(\"settings:dialog.delete-database\"))) return\r\n  database.clear()\r\n}\r\nfunction copyToClipboard() {\r\n  navigator.clipboard.writeText(JSON.stringify(database.exportStorage()))\r\n  alert(\"Copied database to clipboard.\")\r\n}\r\nfunction DownloadCard({ forceUpdate }) {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const numChar = database._getCharKeys().length\r\n  const numArt = database._getArts().length\r\n  const downloadValid = Boolean(numChar || numArt)\r\n  const deleteDB = () => {\r\n    deleteDatabase(t);\r\n    forceUpdate()\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header><Trans t={t} i18nKey=\"downloadCard.databaseDownload\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"downloadCard.charsStored\" count={numChar}><b>{{ count: numChar }}</b> Characters Stored</Trans></h6></Col>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"downloadCard.artisStored\" count={numArt}><b>{{ count: numArt }}</b> Artifacts Stored</Trans></h6></Col>\r\n      </Row>\r\n      <small><Trans t={t} i18nKey=\"downloadCard.databaseDisclaimer\" /></small>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Row>\r\n        <Col xs=\"auto\"><Button disabled={!downloadValid} onClick={() => download(JSON.stringify(database.exportStorage()))}><Trans t={t} i18nKey=\"downloadCard.button.download\" /></Button></Col>\r\n        <Col ><Button disabled={!downloadValid} variant=\"info\" onClick={copyToClipboard}><Trans t={t} i18nKey=\"downloadCard.button.copy\" /></Button></Col>\r\n        <Col xs=\"auto\"><Button disabled={!downloadValid} variant=\"danger\" onClick={deleteDB} ><Trans t={t} i18nKey=\"downloadCard.button.delete\" /></Button></Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>\r\n}\r\nasync function readFile(file, cb) {\r\n  if (!file) return\r\n  const reader = new FileReader()\r\n  reader.onload = () => {\r\n    cb(reader.result)\r\n  }\r\n  reader.readAsText(file)\r\n}\r\nfunction replaceDatabase(obj, cb = () => { }) {\r\n  if (!window.confirm(\"Are you sure you want to replace your database? All existing characters and artifacts will be deleted before replacement.\")) return\r\n  database.importStorage(obj)\r\n  cb()\r\n}\r\nfunction UploadCard({ forceUpdate }) {\r\n  const { t } = useTranslation([\"ui\", \"settings\"]);\r\n  const [data, setdata] = useState(\"\")\r\n  const [filename, setfilename] = useState(\"\")\r\n  let error = \"\"\r\n  let numChar, numArt, dataObj\r\n  if (data) {\r\n    try {\r\n      dataObj = JSON.parse(data)\r\n      const { characterDatabase, artifactDatabase } = dataObj\r\n      numChar = Object.keys(characterDatabase).length\r\n      numArt = Object.keys(artifactDatabase).length\r\n    } catch (e) {\r\n      error = `Invalid JSON: ${e}`\r\n    }\r\n  }\r\n  const dataValid = Boolean(numChar || numArt)\r\n  const replaceDB = () => {\r\n    replaceDatabase(dataObj)\r\n    setdata(\"\")\r\n    setfilename(\"\")\r\n    forceUpdate()\r\n  }\r\n  const onUpload = e => {\r\n    const file = e.target.files[0]\r\n    e.target.value = null//reset the value so the same file can be uploaded again...\r\n    if (file) setfilename(file.name)\r\n    readFile(file, setdata)\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header><Trans t={t} i18nKey=\"settings:uploadCard.title\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Form.File\r\n          className=\"mb-2\"\r\n          label={filename ? filename : <Trans t={t} i18nKey=\"settings:uploadCard.hint\" />}\r\n          onChange={onUpload}\r\n          custom\r\n          accept=\".json\"\r\n        />\r\n        <h6><Trans t={t} i18nKey=\"settings:uploadCard.hintPaste\" /></h6>\r\n        <textarea className=\"w-100 text-monospace\" value={data} onChange={e => setdata(e.target.value)} style={{ minHeight: \"10em\" }} />\r\n      </Row>\r\n      {dataValid && <Row>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"settings:uploadCard.numChar\" /> <b>{numChar}</b></h6></Col>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"settings:uploadCard.numArt\" /> <b>{numArt}</b></h6></Col>\r\n      </Row>}\r\n      {Boolean(data && (error || !dataValid)) && <Alert variant=\"danger\">{error ? error : \"Unable to parse character & artifact data from file.\"}</Alert>}\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Button variant={dataValid ? \"success\" : \"danger\"} disabled={!dataValid} onClick={replaceDB}><Trans t={t} i18nKey=\"settings:uploadCard.replaceDatabase\" /></Button>\r\n    </Card.Footer>\r\n  </Card>\r\n}","import { Card, Spinner } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nexport default function LoadingCard() {\r\n  const { t, ready } = useTranslation(\"ui\", { useSuspense: false });\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n    <Card.Body>\r\n      <h3 className=\"text-center\">{ready ? <Trans t={t} i18nKey=\"ui:loading\" /> : \"Loading...\"}<Spinner animation=\"border\" variant=\"primary\" /></h3>\r\n    </Card.Body>\r\n  </Card>\r\n}","import { faDiscord, faPatreon, faPaypal } from '@fortawesome/free-brands-svg-icons';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ReactGA from 'react-ga';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { HashRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { version } from \"../package.json\";\r\nimport './App.scss';\r\nimport './Assets/Image.scss';\r\nimport LoadingCard from './Components/LoadingCard';\r\nimport './Database/Database';\r\nimport './i18n';\r\nimport { LanguageDropdown } from './Settings/SettingsDisplay';\r\n\r\nconst Home = lazy(() => import('./Home/HomeDisplay'))\r\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\r\nconst CharacterDisplay = lazy(() => import('./Character/CharacterDisplay'))\r\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\r\nconst Planner = lazy(() => import('./Planner/PlannerDisplay'))\r\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\r\nconst FlexDisplay = lazy(() => import('./FlexPage/FlexDisplay'))\r\nconst SettingsDisplay = lazy(() => import('./Settings/SettingsDisplay'))\r\n\r\nfunction App() {\r\n  return <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n    <AppInner />\r\n  </Suspense>\r\n}\r\nfunction AppInner() {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <HashRouter>\r\n    <div className=\"h-100 d-flex flex-column\" id=\"mainContainer\">\r\n      <div id=\"content\" className=\"flex-grow-1\">\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand as={Link} to=\"/\"><Trans t={t} i18nKey=\"pageTitle\">Genshin Optimizer</Trans></Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link as={Link} to=\"/artifact\"><Trans t={t} i18nKey=\"ui:tabs.artifacts\">Artifacts</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/character\"><Trans t={t} i18nKey=\"ui:tabs.characters\">Character</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/build\"><Trans t={t} i18nKey=\"ui:tabs.builds\">Builds</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/tools\"><Trans t={t} i18nKey=\"ui:tabs.tools\">Tools</Trans></Nav.Link>\r\n              {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/test\">TEST</Nav.Link>}\r\n            </Nav>\r\n            <Nav>\r\n              {process.env.NODE_ENV === \"development\" && <LanguageDropdown />}\r\n              <Nav.Link href={process.env.REACT_APP_PAYPAL_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPaypal} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.paypal\">PayPal</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_PATREON_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPatreon} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.patreon\">Patreon</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"discord\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faDiscord} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.discord\">Discord</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/setting\"><FontAwesomeIcon icon={faCog} /></Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n          <Switch>\r\n            <Route path=\"/artifact\" component={ArtifactDisplay} />\r\n            <Route path=\"/character\" component={CharacterDisplay} />\r\n            <Route path=\"/build\" component={BuildDisplay} />\r\n            <Route path=\"/tools\" component={Planner} />\r\n            {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\r\n            <Route path=\"/setting\" component={SettingsDisplay} />\r\n            <Route path=\"/flex\" component={FlexDisplay} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n      <Nav id=\"footer\" className=\"bg-dark\">\r\n        <Row className=\"w-100 ml-0 mr-0 mb-2 text-light d-flex justify-content-between\">\r\n          <Col xs={\"auto\"}>\r\n            <span><small><Trans t={t} i18nKey=\"ui:rightsDisclaimer\">Genshin Optimizer is not affiliated with or endorsed by miHoYo.</Trans></small></span>\r\n          </Col>\r\n          <Col xs={\"auto\"}>\r\n            <span><small ><Trans t={t} i18nKey=\"ui:appVersion\" values={{ version: version }}>Genshin Optimizer Version: {{ version }}</Trans></small></span>\r\n          </Col>\r\n        </Row>\r\n      </Nav>\r\n    </div>\r\n  </HashRouter>\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID as any, {\r\n  // debug: process.env.NODE_ENV === \"development\"\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(undefined);\r\n","// import characters from\r\n\r\nconst ascensionMaxLevel = [20, 40, 50, 60, 70, 80, 90] as const\r\n\r\nconst milestoneLevels = [\r\n  [90, 6],\r\n  [80, 6],\r\n  [80, 5],\r\n  [70, 5],\r\n  [70, 4],\r\n  [60, 4],\r\n  [60, 3],\r\n  [50, 3],\r\n  [50, 2],\r\n  [40, 2],\r\n  [40, 1],\r\n  [20, 1],\r\n  [20, 0],\r\n  [1, 0]\r\n] as const\r\n\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n} as const\r\n\r\nexport {\r\n  ascensionMaxLevel,\r\n  characterStatBase,\r\n  milestoneLevels\r\n}","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\nimport ICalculatedStats from \"./Types/ICalculatedStats\";\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaSprintDec_: { name: \"Sprinting Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas: Dict<string, (s, c) => number> = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 1600 * s.eleMas / (2000 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n};\r\n\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].forEach(ele => {\r\n  StatData[`${ele}_crystalize_hit`] = { name: `Crystalize Shield ${hitElements[ele].name} Effective HP`, variant: ele }\r\n  Formulas[`${ele}_crystalize_hit`] = s => s.crystalize_hit * 2.5\r\n})\r\n\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"shattered_hit\", \"crystalize_hit\", \"electro_crystalize_hit\", \"pyro_crystalize_hit\", \"cryo_crystalize_hit\", \"hydro_crystalize_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys: string[], stats: ICalculatedStats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\r\n    const dynamicFunc = (s, c) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp: (s, c) => number\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]!; break\r\n      case 1: tmp = (s, c) => Formulas[key]!(s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key]!(s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key]!(s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return undefined\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter(x => x) as [string, (s, c) => number][]\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","export function getDBVersion(storage: Storage) {\r\n  return parseInt(storage.getItem('db_ver') ?? '0')\r\n}\r\nexport function setDBVersion(storage: Storage, version: number) {\r\n  storage.setItem('db_ver', version.toString())\r\n}\r\n\r\nexport function load(storage: Storage, key: string): any | undefined {\r\n  const string = storage.getItem(key)\r\n  if (!string) return undefined\r\n  try {\r\n    return JSON.parse(string)\r\n  } catch {\r\n    storage.removeItem(key)\r\n    return undefined\r\n  }\r\n}\r\nexport function save(storage: Storage, key: string, value: any) {\r\n  storage.setItem(key, JSON.stringify(value))\r\n}\r\nexport function remove(storage: Storage, key: string) {\r\n  storage.removeItem(key)\r\n}\r\n","export class DataManager<Key extends string | number, Value> {\r\n    static readonly allKeys = {} as const\r\n\r\n    data: Dict<Key, Value> = {}\r\n    listeners: Dict<Key, Callback<Value | undefined>[]> = {}\r\n    anyListeners: Callback<Key | typeof DataManager.allKeys>[] = []\r\n\r\n    followAny(callback: Callback<Key | typeof DataManager.allKeys>): () => void {\r\n        this.anyListeners.push(callback)\r\n        return () => {\r\n            this.anyListeners = this.anyListeners.filter(cb => cb !== callback)\r\n        }\r\n    }\r\n    follow(key: Key, callback: Callback<Value | undefined>) {\r\n        const value = this.get(key)\r\n        callback(value)\r\n        if (this.listeners[key]) this.listeners[key]!.push(callback)\r\n        else this.listeners[key] = [callback]\r\n        return () => {\r\n            this.listeners[key] = this.listeners[key]?.filter(cb => cb !== callback)\r\n            if (!this.listeners[key]?.length) delete this.listeners[key]\r\n        }\r\n    }\r\n\r\n    get keys() { return Object.keys(this.data) }\r\n    get values() { return Object.values(this.data) }\r\n    get(key: Key): Value | undefined { return this.data[key] }\r\n    set(key: Key, value: Value) {\r\n        this.data[key] = value\r\n\r\n        this.listeners[key]?.forEach(cb => cb(value))\r\n        this.anyListeners.forEach(cb => cb(key))\r\n    }\r\n    remove(key: Key) {\r\n        delete this.data[key]\r\n\r\n        this.listeners[key]?.forEach(cb => cb(undefined))\r\n        this.anyListeners.forEach(cb => cb(key))\r\n        delete this.listeners[key]\r\n    }\r\n    removeAll() {\r\n        this.data = {}\r\n\r\n        Object.values(this.listeners).forEach(listeners => listeners.forEach(listener => listener(undefined)))\r\n        this.anyListeners.forEach(listener => listener(DataManager.allKeys))\r\n        this.listeners = {}\r\n        this.anyListeners = []\r\n    }\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg) => void\r\n","import { ascensionMaxLevel } from \"../Data/CharacterData\"\r\nimport { getDBVersion, load, save, setDBVersion } from \"./utils\"\r\n\r\nconst currentDBVersion = 6\r\n\r\nexport function migrate(storage: Storage): { migrated: boolean } {\r\n  const version = getDBVersion(storage)\r\n  const report = { migrated: false }\r\n\r\n  if (version > currentDBVersion)\r\n    throw new Error(\"Database is not supported\")\r\n\r\n  if (version < 3) migrateV2ToV3(storage)\r\n  if (version < 4) migrateV3ToV4(storage)\r\n  if (version < 5) migrateV4ToV5(storage)\r\n  if (version < 6) migrateV5ToV6(storage)\r\n\r\n  if (version < currentDBVersion) {\r\n    report.migrated = true\r\n  }\r\n\r\n  setDBVersion(storage, currentDBVersion)\r\n\r\n  return report\r\n}\r\n/// v4.0.0 - v4.23.2\r\nfunction migrateV2ToV3(storage: Storage) {\r\n  const state = load(storage, \"CharacterDisplay.state\")\r\n  if (state) {\r\n    if (Array.isArray(state.elementalFilter)) state.elementalFilter = \"\"\r\n    if (Array.isArray(state.weaponFilter)) state.weaponFilter = \"\"\r\n    save(storage, \"CharacterDisplay.state\", state)\r\n  }\r\n\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = load(storage, key)\r\n      if (!value) continue\r\n      if (value.buildSetting) {\r\n        const { artifactsAssumeFull = false, ascending = false, mainStat = [\"\", \"\", \"\"], setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }], useLockedArts = false } = value.buildSetting ?? {}\r\n        value.buildSettings = { mainStatAssumptionLevel: artifactsAssumeFull ? 20 : 0, ascending, mainStatKeys: mainStat, setFilters, useLockedArts }\r\n      }\r\n\r\n      save(storage, key, value)\r\n    }\r\n  }\r\n}\r\n/// v5.0.0 - v5.7.15\r\nfunction migrateV3ToV4(storage: Storage) { // \r\n  // Convert anemo traveler to traveler, and remove geo traveler\r\n  const traveler = load(storage, \"char_traveler_anemo\")\r\n  // Deletion of old travelers are handled during validation\r\n\r\n  if (traveler) {\r\n    traveler.elementKey = \"anemo\"\r\n    traveler.characterKey = \"traveler\"\r\n    save(storage, \"char_traveler\", traveler)\r\n  }\r\n\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"artifact_\")) {\r\n      const value = load(storage, key)\r\n      let requireUpdate = false\r\n      if (value.location === \"traveler_anemo\") {\r\n        value.location = \"traveler\"\r\n        requireUpdate = true\r\n      } else if (value.location === \"traveler_geo\") {\r\n        value.location = \"\"\r\n        requireUpdate = true\r\n      }\r\n\r\n      if (requireUpdate)\r\n        save(storage, key, value)\r\n    }\r\n  }\r\n}\r\n/// v5.8.0 - v5.11.5\r\nfunction migrateV4ToV5(storage: Storage) {\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = load(storage, key)\r\n\r\n      const levelKey = value.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        value.level = 1\r\n        value.ascension = 0\r\n      } else {\r\n        value.level = level\r\n        value.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n\r\n      // TODO: Remove this once we validate baseStatOverrides\r\n      delete value.baseStatOverrides?.characterLevel\r\n      delete value.baseStatOverrides?.characterHP\r\n      delete value.baseStatOverrides?.characterATK\r\n      delete value.baseStatOverrides?.characterDEF\r\n\r\n      save(storage, key, value)\r\n    }\r\n  }\r\n}\r\n\r\n// v5.12.0 - Present\r\nfunction migrateV5ToV6(storage: Storage) {\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = load(storage, key)\r\n\r\n      //migrate character weapon levels\r\n      const levelKey = character.weapon.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        character.weapon.level = 1\r\n        character.weapon.ascension = 0\r\n      } else {\r\n        character.weapon.level = level\r\n        character.weapon.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n      save(storage, key, character)\r\n    }\r\n  }\r\n}\r\n","import { IArtifact } from \"../Types/artifact\";\r\nimport { ICharacter } from \"../Types/character\";\r\nimport { allSlotKeys, CharacterKey, SlotKey } from \"../Types/consts\";\r\nimport { deepClone, getRandomInt } from \"../Util/Util\";\r\nimport { load, save, remove, getDBVersion, setDBVersion } from \"./utils\";\r\nimport { DataManager } from \"./DataManager\";\r\nimport { migrate } from \"./migration\";\r\nimport { validateFlexArtifact, validateDBCharacter, validateDBArtifact, extractFlexArtifact, validateFlexCharacter } from \"./validation\";\r\n\r\nexport class Database {\r\n  storage: Storage\r\n  arts = new DataManager<string, IArtifact>()\r\n  chars = new DataManager<CharacterKey, ICharacter>()\r\n\r\n  private constructor(storage: Storage) {\r\n    this.storage = storage\r\n\r\n    const { migrated } = migrate(storage)\r\n\r\n    // Load into memory and verify database integrity\r\n    for (const key in storage) {\r\n      if (key.startsWith(\"char_\")) {\r\n        const flex = validateDBCharacter(load(storage, key), key)\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          remove(storage, key)\r\n          continue\r\n        }\r\n        const character = validateFlexCharacter(flex)\r\n        // Use relations from artifact\r\n        character.equippedArtifacts = Object.fromEntries(allSlotKeys.map(slot => [slot, \"\"])) as any\r\n\r\n        this.chars.set(flex.characterKey, character)\r\n        // Save migrated version back to db\r\n        if (migrated) save(this.storage, `char_${flex.characterKey}`, flex)\r\n      }\r\n    }\r\n\r\n    for (const key in storage) {\r\n      if (key.startsWith(\"artifact_\")) {\r\n        const flex = validateDBArtifact(load(storage, key), key)\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          remove(storage, key)\r\n          continue\r\n        }\r\n\r\n        // Update relations\r\n        const { location, slotKey } = flex\r\n        if (location && this.chars.data[location]?.equippedArtifacts[slotKey] === \"\") {\r\n          this.chars.data[location]!.equippedArtifacts[slotKey] = key // equiped on `location`\r\n        } else flex.location = \"\"\r\n\r\n        const { artifact } = validateFlexArtifact(flex)\r\n\r\n        this.arts.set(artifact.id, artifact)\r\n        // Save migrated version back to db\r\n        if (migrated) save(this.storage, key, flex)\r\n      }\r\n    }\r\n  }\r\n\r\n  private saveArt(key: string, art: IArtifact) {\r\n    save(this.storage, key, extractFlexArtifact(art))\r\n    this.arts.set(key, art)\r\n  }\r\n  private saveChar(key: CharacterKey, char: ICharacter) {\r\n    save(this.storage, `char_${key}`, char)\r\n    this.chars.set(key, char)\r\n  }\r\n  // TODO: Make theses `_` functions private once we migrate to use `followXXX`,\r\n  // or de-underscored it if we decide that these are to stay\r\n  _getArt(key: string) { return this.arts.get(key) }\r\n  _getChar(key: CharacterKey | \"\") { return key ? this.chars.get(key) : undefined }\r\n  _getArts() { return this.arts.values }\r\n  _getCharKeys(): CharacterKey[] { return this.chars.keys }\r\n\r\n  followChar(key: CharacterKey, cb: Callback<ICharacter>): (() => void) | undefined { return this.chars.follow(key, cb) }\r\n  followArt(key: string, cb: Callback<IArtifact>): (() => void) | undefined {\r\n    if (this.arts.get(key) !== undefined)\r\n      return this.arts.follow(key, cb)\r\n    cb(undefined)\r\n  }\r\n  followAnyChar(cb: (key: string | {}) => void): (() => void) | undefined { return this.chars.followAny(cb) }\r\n  followAnyArt(cb: (key: CharacterKey | {}) => void): (() => void) | undefined { return this.arts.followAny(cb) }\r\n\r\n  /**\r\n   * **Caution**: This does not update `equippedArtifacts`, use `equipArtifacts` instead\r\n   */\r\n  updateChar(value: ICharacter): void {\r\n    const newChar = deepClone(value), key = newChar.characterKey, oldChar = this.chars.get(key)\r\n\r\n    if (oldChar) {\r\n      newChar.equippedArtifacts = oldChar.equippedArtifacts\r\n    } else {\r\n      newChar.equippedArtifacts = Object.fromEntries(allSlotKeys.map(slot => ([slot, \"\"]))) as any\r\n    }\r\n\r\n    this.saveChar(key, newChar)\r\n  }\r\n  /**\r\n   * **Caution** This does not update `location` and `lock`, use `setLocation` or `lockArtifact` instead\r\n   */\r\n  updateArt(value: IArtifact): string {\r\n    const newArt = deepClone(value)\r\n    const key = newArt.id || generateRandomArtID(new Set(Object.keys(this.arts.data)))\r\n    const oldArt = this.arts.get(key)\r\n\r\n    if (!newArt.id)\r\n      newArt.id = key\r\n\r\n    if (oldArt) {\r\n      newArt.location = oldArt.location\r\n      newArt.lock = oldArt.lock\r\n    } else {\r\n      newArt.location = \"\"\r\n      newArt.lock = false\r\n    }\r\n\r\n    this.saveArt(key, newArt)\r\n    if (newArt.location)\r\n      this.chars.set(newArt.location, deepClone(this.chars.get(newArt.location)!))\r\n    return key\r\n  }\r\n  removeChar(key: CharacterKey) {\r\n    const char = this.chars.get(key)\r\n    if (!char) return\r\n\r\n    for (const artKey of Object.values(char.equippedArtifacts)) {\r\n      if (!artKey) continue\r\n      const art = this.arts.get(artKey)!\r\n      art.location = \"\"\r\n      this.saveArt(artKey, art)\r\n    }\r\n    remove(this.storage, `char_${key}`)\r\n    this.chars.remove(key)\r\n  }\r\n  removeArt(key: string) {\r\n    const art = this.arts.get(key)\r\n    if (!art) return\r\n\r\n    const charKey = art.location\r\n    if (charKey) {\r\n      const char = this.chars.get(charKey)!\r\n      char.equippedArtifacts[art.slotKey] = \"\"\r\n      this.saveChar(charKey, char)\r\n    }\r\n    remove(this.storage, key)\r\n    this.arts.remove(key)\r\n  }\r\n  setLocation(artKey: string, newCharKey: CharacterKey | \"\") {\r\n    const newArt = deepClone(this.arts.get(artKey))\r\n    if (!newArt) return\r\n\r\n    const slot = newArt.slotKey, oldCharKey = newArt.location\r\n    const newChar = newCharKey ? deepClone(this.chars.get(newCharKey))! : undefined\r\n    const oldChar = oldCharKey ? deepClone(this.chars.get(oldCharKey))! : undefined\r\n    newArt.location = newCharKey\r\n    if (oldChar) oldChar.equippedArtifacts[slot] = \"\"\r\n\r\n    if (newChar) {\r\n      const oldArtKey = newChar?.equippedArtifacts[slot] ?? \"\"\r\n      const oldArt = oldArtKey ? deepClone(this.arts.get(oldArtKey))! : undefined\r\n      newChar.equippedArtifacts[slot] = newArt.id!\r\n\r\n      if (oldChar && oldArt) {\r\n        oldChar.equippedArtifacts[slot] = oldArt.id!\r\n        oldArt.location = oldChar.characterKey\r\n      } else if (oldArt) oldArt.location = \"\"\r\n\r\n      if (oldArt) this.saveArt(oldArtKey, oldArt)\r\n    }\r\n\r\n    this.saveArt(artKey, newArt)\r\n    if (newCharKey) this.saveChar(newCharKey, newChar!)\r\n    if (oldCharKey) this.saveChar(oldCharKey, oldChar!)\r\n  }\r\n  equipArtifacts(charKey: CharacterKey, newArts: StrictDict<SlotKey, string>) {\r\n    const char = this.chars.get(charKey)\r\n    if (!char) return\r\n\r\n    const oldArts = char.equippedArtifacts\r\n    for (const [slot, newArt] of Object.entries(newArts)) {\r\n      if (newArt) this.setLocation(newArt, charKey)\r\n      else if (oldArts[slot]) this.setLocation(oldArts[slot], \"\")\r\n    }\r\n  }\r\n  lockArtifact(key: string, lock = true) {\r\n    const art = this.arts.get(key)\r\n    if (!art || art.lock === lock) return\r\n\r\n    art.lock = lock\r\n    this.saveArt(key, art)\r\n  }\r\n\r\n  exportStorage() {\r\n    const characterDatabase = this.chars.data, artifactDatabase = this.arts.data\r\n    const version = getDBVersion(this.storage)\r\n    const artifactDisplay = load(this.storage, \"ArtifactDisplay.state\") ?? {}\r\n    const characterDisplay = load(this.storage, \"CharacterDisplay.state\") ?? {}\r\n    const buildsDisplay = load(this.storage, \"BuildsDisplay.state\") ?? {}\r\n\r\n    return {\r\n      version,\r\n      characterDatabase,\r\n      artifactDatabase,\r\n      artifactDisplay,\r\n      characterDisplay,\r\n      buildsDisplay,\r\n    }\r\n  }\r\n\r\n  importStorage({ version, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay }: DatabaseObj) {\r\n    this.clear()\r\n    const storage = this.storage\r\n\r\n    Object.entries(characterDatabase).forEach(([charKey, char]) => save(storage, `char_${charKey}`, char))\r\n    Object.entries(artifactDatabase).forEach(([id, art]) => save(storage, id, art))\r\n    //override version\r\n    setDBVersion(storage, version)\r\n    save(storage, \"ArtifactDisplay.state\", artifactDisplay)\r\n    save(storage, \"CharacterDisplay.state\", characterDisplay)\r\n    save(storage, \"BuildsDisplay.state\", buildsDisplay)\r\n\r\n    const newDatabase = new Database(storage)\r\n    this.arts = newDatabase.arts\r\n    this.chars = newDatabase.chars\r\n  }\r\n\r\n  clear() {\r\n    const storage = this.storage\r\n    Object.keys(storage)\r\n      .filter(key => key.startsWith(\"char_\") || key.startsWith(\"artifact_\"))\r\n      .forEach(id => remove(storage, id))\r\n    remove(storage, \"db_ver\")\r\n    remove(storage, \"ArtifactDisplay.state\")\r\n    remove(storage, \"CharacterDisplay.state\")\r\n    remove(storage, \"BuildsDisplay.state\")\r\n\r\n    this.arts.removeAll()\r\n    this.chars.removeAll()\r\n  }\r\n\r\n  static shared = new Database(localStorage)\r\n}\r\n\r\ntype DatabaseObj = {\r\n  version: number,\r\n  characterDatabase: Dict<CharacterKey, ICharacter>\r\n  artifactDatabase: Dict<string, IArtifact>\r\n  artifactDisplay: any\r\n  characterDisplay: any\r\n  buildsDisplay: any\r\n}\r\n\r\n/// Get a random integer (converted to string) that is not in `keys`\r\nfunction generateRandomArtID(keys: Set<string>): string {\r\n  let candidate = \"\"\r\n  do {\r\n    candidate = `artifact_${getRandomInt(1, 2 * (keys.size + 1))}`\r\n  } while (keys.has(candidate))\r\n  return candidate\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg | undefined) => void\r\n\r\nexport const database = Database.shared\r\n","import { getArrLastElement } from '../Util/Util';\r\nimport { CompressMainStatKey, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactSubstatRollData: StrictDict<Rarity, { low: number, high: number, numUpgrades: number }> = {\r\n  1: { low: 0, high: 0, numUpgrades: 1 },\r\n  2: { low: 0, high: 1, numUpgrades: 2 },\r\n  3: { low: 1, high: 2, numUpgrades: 3 },\r\n  4: { low: 2, high: 3, numUpgrades: 4 },\r\n  5: { low: 3, high: 4, numUpgrades: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData: StrictDict<Rarity, StrictDict<CompressMainStatKey, readonly number[]>> = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 12.0, 14.6, 17.3, 19.9, 22.5, 25.2, 27.8, 30.5, 33.1, 35.7, 38.4, 41.0, 43.7, 46.3, 49.0, 51.6, 54.2, 56.9, 59.5, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.1, 23.7, 25.2, 26.7, 28.2, 29.8, 31.3, 32.8, 34.3, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubstatsData: StrictDict<SubstatKey, Dict<Rarity, readonly number[]>> = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatMaxRolls = Object.fromEntries([3, 4, 5].map(rarity =>\r\n  [rarity, Object.fromEntries(Object.entries(ArtifactSubstatsData).map(([key, rolls]) => [key, getArrLastElement(rolls[rarity])])) as StrictDict<SubstatKey, number>]))\r\nconst ArtifactSubstatMaxRollEfficiency = Object.fromEntries(Object.entries(ArtifactSubstatMaxRolls).map(([rarity, obj]) =>\r\n  [rarity, 100 * (Object.keys(obj) as SubstatKey[]).reduce((acc, key) => Math.max(acc, obj[key] / ArtifactSubstatMaxRolls[5][key]!), 0)]\r\n))\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: readonly MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatsData,\r\n  ArtifactSubstatMaxRolls,\r\n  ArtifactSubstatMaxRollEfficiency,\r\n  ArtifactSubstatRollData as ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { SubstatKey } from \"../Types/artifact\"\r\n\r\nexport const ArtifactSubstatLookupTable: StrictDict<SubstatKey, { [numStar: number]: { [rounded: string]: number[][] } }> = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubstatMaxRollEfficiency, ArtifactSubstatMaxRolls, ArtifactSubstatsData } from '../Data/ArtifactData';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { allSubstats, CompressMainStatKey, IArtifact, MainStatKey, StatDict, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey): string =>\r\n    ArtifactSlotsData[slotKey].name\r\n  static slotMainStats = (slotKey: SlotKey): readonly MainStatKey[] =>\r\n    ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): Dict<ArtifactSetKey, Dict<SetNum, StatDict>> => {\r\n    const result: Dict<ArtifactSetKey, Dict<SetNum, StatDict>> = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      const setEffect: Dict<SetNum, StatDict> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n        const setStats = evalIfFunc(setEffectObj.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        result[setKey][setNumKey][statKey] = (result[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: IArtifact[]): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, databaseObj.filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey): readonly number[] => {\r\n    if (statKey.endsWith(\"_dmg_\") && statKey !== \"physical_dmg_\")\r\n      return ArtifactMainStatsData[numStar][\"ele_dmg_\"]\r\n    return ArtifactMainStatsData[numStar][statKey as CompressMainStatKey]\r\n  }\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } =>\r\n    ArtifactStarsData[rarity]\r\n\r\n  static maxSubstatValues = (statKey: SubstatKey, numStars = maxStar): number =>\r\n    ArtifactSubstatMaxRolls[numStars][statKey]\r\n  static maxSubstatRollEfficiency = (numStar: Rarity): number =>\r\n    ArtifactSubstatMaxRollEfficiency[numStar]\r\n  static getSubstatKeys = (): readonly SubstatKey[] =>\r\n    allSubstats\r\n  static totalPossibleRolls = (numStars: Rarity): number =>\r\n    ArtifactStarsData[numStars].high + ArtifactStarsData[numStars].numUpgrades\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4)\r\n  static getSubstatRollData = (substatKey: SubstatKey, numStars: Rarity) =>\r\n    ArtifactSubstatsData[substatKey][numStars]!\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    const rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    const table = ArtifactSubstatLookupTable[substatKey][numStars]\r\n    const lookupValue = substatValue.toFixed(1)\r\n    return table[lookupValue]?.map(roll => roll.map(i => rollData[i])) ?? []\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state: IArtifact): string[] {\r\n    const { numStars, level, substats } = state, errors: string[] = []\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = key ? Artifact.getSubstatRolls(key, value, numStars) : []\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls?.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            const key = substats[index].key\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(artifact: IArtifact, filter: Set<SubstatKey>): { currentEfficiency: number, maxEfficiency: number } {\r\n    const { substats, numStars, level } = artifact\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    const totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    const current = substats.filter(({ key }) => key && filter.has(key)).reduce((sum, { rolls, efficiency }) => sum + ((efficiency ?? 0) * (rolls?.length ?? 0)), 0)\r\n\r\n    const rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    const emptySlotCount = substats.filter(s => !s.key).length\r\n    const matchedSlotCount = substats.filter(s => s.key && filter.has(s.key)).length\r\n    const unusedFilterCount = filter.size - matchedSlotCount\r\n    let maximum\r\n    if (emptySlotCount && unusedFilterCount) maximum = current + Artifact.maxSubstatRollEfficiency(numStars) * rollsRemaining // Rolls into good empty slot\r\n    else if (matchedSlotCount) maximum = current + Artifact.maxSubstatRollEfficiency(numStars) * (rollsRemaining - emptySlotCount) // Rolls into existing matched slot\r\n    else maximum = current // No possible roll\r\n\r\n    const currentEfficiency = current / totalRolls\r\n    const maxEfficiency = maximum / totalRolls\r\n    return { currentEfficiency, maxEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    const setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport { ascensionMaxLevel } from \"../Data/CharacterData\";\r\nimport Stat from \"../Stat\";\r\nimport { allMainStatKeys, allSubstats, IArtifact, IFlexArtifact, IFlexSubstat, Substat } from \"../Types/artifact\";\r\nimport { ICharacter, IFlexCharacter } from \"../Types/character\";\r\nimport { allArtifactSets, allCharacterKeys, allElements, allHitModes, allRarities, allReactionModes, allSlotKeys, allWeaponKeys } from \"../Types/consts\";\r\n\r\n/// Returns the closest (not necessarily valid) artifact, including errors as necessary\r\nexport function validateFlexArtifact(flex: IFlexArtifact): { artifact: IArtifact, errors: string[] } {\r\n    const { id, location, lock, setKey, slotKey, numStars, mainStatKey } = flex\r\n    const level = Math.round(Math.min(Math.max(0, flex.level), numStars >= 3 ? numStars * 4 : 4))\r\n    const mainStatVal = Artifact.mainStatValue(mainStatKey, numStars, level)!\r\n\r\n    const errors: string[] = []\r\n    const substats: Substat[] = flex.substats.map(substat => ({ ...substat, rolls: [], weightedEfficiency: NaN }))\r\n    const validated: IArtifact = { id, setKey, location, slotKey, lock, mainStatKey, numStars, level, substats, mainStatVal }\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n        const { key, value } = substat\r\n        if (!key) return\r\n\r\n        const substatRolls = Artifact.getSubstatRolls(key, value, numStars)\r\n\r\n        if (substatRolls.length) {\r\n            const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n            if (possibleLengths.size !== 1)\r\n                allSubstatRolls.push({ index, substatRolls })\r\n            else {\r\n                total += substatRolls[0].length\r\n                substat.rolls = substatRolls[0]\r\n                substat.efficiency = substat.rolls.reduce((a, b) => a + b) / Artifact.maxSubstatValues(key) * 100 / substatRolls[0].length\r\n            }\r\n        } else if (substat.key) {\r\n            substat.rolls = []\r\n            substat.efficiency = NaN\r\n            errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n        }\r\n    })\r\n\r\n    if (substats.some((substat) => !substat.key)) {\r\n        let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n        if (substat)\r\n            errors.push(`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`)\r\n    }\r\n\r\n    if (errors.length) return { artifact: validated, errors }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n        if (rolls.length === allSubstatRolls.length) {\r\n            if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n                minimumMaxRolls = maxRolls\r\n                for (const { index, roll } of rolls) {\r\n                    const key = substats[index].key\r\n                    if (!key) continue\r\n                    substats[index].rolls = roll\r\n                    substats[index].efficiency = roll.reduce((a, b) => a + b) / Artifact.maxSubstatValues(key) * 100 / roll.length\r\n                }\r\n            }\r\n\r\n            return\r\n        }\r\n\r\n        const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n        for (const roll of substatRolls) {\r\n            rolls.push({ index, roll })\r\n            tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n            rolls.pop()\r\n        }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n        // No build found\r\n        const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n        if (total < minimum)\r\n            errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n        else {\r\n            errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n        }\r\n    }\r\n\r\n    return { artifact: validated, errors }\r\n}\r\n/// Returns the closest flex artifact, or undefined if it's not recoverable\r\nexport function validateDBArtifact(obj: any, key: string): IFlexArtifact | undefined {\r\n    if (typeof obj !== \"object\") return\r\n\r\n    let {\r\n        setKey, numStars, level, slotKey, mainStatKey, substats, location, lock,\r\n    } = obj ?? {}\r\n\r\n    if (!allArtifactSets.includes(setKey) ||\r\n        !allSlotKeys.includes(slotKey) ||\r\n        !allMainStatKeys.includes(mainStatKey) ||\r\n        !allRarities.includes(numStars) ||\r\n        typeof level !== \"number\" || level < 0 || level > 20)\r\n        return // non-recoverable\r\n\r\n    substats = validateSubstats(substats)\r\n    lock = !!lock\r\n    level = Math.round(level)\r\n    if (!allCharacterKeys.includes(location)) location = \"\"\r\n    return { id: key, setKey, numStars, level, slotKey, mainStatKey, substats, location, lock }\r\n}\r\n/// Return a new flex artifact from given artifact. All extra keys are removed\r\nexport function extractFlexArtifact(artifact: IArtifact): IFlexArtifact {\r\n    const { id, setKey, numStars, level, slotKey, mainStatKey, substats, location, lock } = artifact\r\n    return { id, setKey, numStars, level, slotKey, mainStatKey, substats: substats.map(substat => ({ key: substat.key, value: substat.value })), location, lock }\r\n}\r\nfunction validateSubstats(obj: any): IFlexSubstat[] {\r\n    if (!Array.isArray(obj))\r\n        return new Array(4).map(_ => ({ key: \"\", value: NaN }))\r\n    const substats = obj.map(({ key = undefined, value = undefined }) => {\r\n        if (!allSubstats.includes(key))\r\n            return { key: \"\", value: NaN }\r\n        return { key, value: typeof value === \"number\" && isFinite(value) ? value : NaN }\r\n    })\r\n    while (substats.length !== 4)\r\n        substats.push({ key: \"\", value: NaN })\r\n\r\n    return substats\r\n}\r\n/// Returns the closest character\r\nexport function validateFlexCharacter(flex: IFlexCharacter): ICharacter {\r\n    // TODO: Add more validations to make sure the returned value is a \"valid\" character\r\n    return {\r\n        ...flex,\r\n        equippedArtifacts: Object.fromEntries(allSlotKeys.map(slot => [slot, \"\"])) as any\r\n    }\r\n}\r\n/// Returns the closest flex character, or undefined if it's not recoverable\r\nexport function validateDBCharacter(obj: any, key: string): IFlexCharacter | undefined {\r\n    if (typeof obj !== \"object\") return\r\n\r\n    let {\r\n        characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n        baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n    } = obj\r\n\r\n    if (key !== `char_${characterKey}` ||\r\n        !allCharacterKeys.includes(characterKey) ||\r\n        typeof level !== \"number\" || level < 0 || level > 90 ||\r\n        typeof weapon !== \"object\" || !allWeaponKeys.includes(weapon.key))\r\n        return // non-recoverable\r\n\r\n    if (!allHitModes.includes(hitMode)) hitMode = \"avgHit\"\r\n    if (characterKey !== \"traveler\") elementKey = undefined\r\n    else if (!allElements.includes(elementKey)) elementKey = \"anemo\"\r\n    if (!allReactionModes.includes(reactionMode)) reactionMode = null\r\n    if (!allElements.includes(infusionAura)) infusionAura = \"\"\r\n    if (typeof constellation !== \"number\" && constellation < 0 && constellation > 6) constellation = 0\r\n    if (typeof ascension !== \"number\" ||\r\n        !(ascension in ascensionMaxLevel) ||\r\n        level > ascensionMaxLevel[ascension] ||\r\n        level < (ascensionMaxLevel[ascension - 1] ?? 0))\r\n        ascension = ascensionMaxLevel.findIndex(maxLvl => level <= maxLvl)\r\n    if (typeof talentLevelKeys !== \"object\") talentLevelKeys = { auto: 0, skill: 0, burst: 0 }\r\n    else {\r\n        let { auto = 0, skill = 0, burst = 0 } = talentLevelKeys\r\n        if (typeof auto !== \"number\" || auto < 0 || auto > 15) auto = 0\r\n        if (typeof skill !== \"number\" || skill < 0 || skill > 15) skill = 0\r\n        if (typeof burst !== \"number\" || burst < 0 || burst > 15) burst = 0\r\n        talentLevelKeys = { auto, skill, burst }\r\n    }\r\n    {\r\n        let { key, level, ascension, refineIndex } = weapon\r\n        if (typeof level !== \"number\" || level < 1 || level > 90) level = 1\r\n        if (typeof ascension !== \"number\" || ascension < 0 || ascension > 6) ascension = 0\r\n        if (typeof refineIndex !== \"number\" || refineIndex < 0 || refineIndex > 5) refineIndex = 0\r\n        weapon = { key, level, ascension, refineIndex }\r\n    }\r\n    {\r\n        if (typeof buildSettings !== \"object\") buildSettings = {}\r\n        let { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending } = buildSettings ?? {}\r\n        if (!Array.isArray(setFilters)) setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }]\r\n        if (typeof statFilters !== \"object\") statFilters = {}\r\n        if (!Array.isArray(mainStatKeys)) mainStatKeys = [\"\", \"\", \"\"]\r\n        if (!optimizationTarget) optimizationTarget = \"finalAtk\"\r\n        if (typeof mainStatAssumptionLevel !== \"number\" || mainStatAssumptionLevel < 0 || mainStatAssumptionLevel > 20)\r\n            mainStatAssumptionLevel = 0\r\n        useLockedArts = !!useLockedArts\r\n        useEquippedArts = !!useEquippedArts\r\n        ascending = !!ascending\r\n        buildSettings = { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending }\r\n    }\r\n\r\n    // TODO: validate baseStatOverrides, conditionalValues\r\n    return {\r\n        characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n        baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n    }\r\n}\r\n/// Return a new flex character from given character. All extra keys are removed\r\nexport function extractFlexCharacter(char: ICharacter): IFlexCharacter {\r\n    const {\r\n        characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n        baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n    } = char\r\n    return {\r\n        characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n        baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n    }\r\n}","import { ArtifactSetKey, CharacterKey, Rarity, SetNum, SlotKey } from \"./consts\";\r\nimport ICalculatedStats from \"./ICalculatedStats\";\r\nimport IConditional, { IConditionalComplex, IConditionals } from \"./IConditional\";\r\n\r\nexport type IArtifactSheets = StrictDict<ArtifactSetKey, IArtifactSheet>\r\n\r\nexport interface IArtifactSheet {\r\n  name: string,\r\n  rarity: readonly Rarity[],\r\n  pieces: Dict<SlotKey, string>,\r\n  icons: Dict<SlotKey, string>,\r\n  conditionals?: IConditionals,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  text: (Displayable | ((stats: ICalculatedStats) => Displayable)),\r\n  stats?: object | ((stats: ICalculatedStats) => object);//TODO: too strict StatDict | ((arg0: ICalculatedStats) => (StatDict | false))\r\n  conditional?: (IConditional | IConditionalComplex),\r\n  conditionals?: IConditionals,\r\n}\r\n\r\nexport type StatArr = { key: StatKey, value: number }[]\r\nexport type StatDict = Dict<StatKey, number>\r\n\r\nexport interface IFlexArtifact {\r\n  id: string\r\n  setKey: ArtifactSetKey\r\n  numStars: Rarity\r\n  level: number,\r\n  slotKey: SlotKey,\r\n  mainStatKey: MainStatKey,\r\n  substats: IFlexSubstat[],\r\n\r\n  location: CharacterKey | \"\",\r\n  lock: boolean,\r\n}\r\nexport interface IArtifact extends IFlexArtifact {\r\n  mainStatVal?: number,\r\n  substats: Substat[],\r\n\r\n  location: CharacterKey | \"\",\r\n  lock: boolean,\r\n}\r\n\r\nexport interface IFlexSubstat {\r\n  key: SubstatKey | \"\"\r\n  value: number\r\n}\r\nexport interface Substat extends IFlexSubstat {\r\n  rolls?: number[],\r\n  efficiency?: number,\r\n}\r\nexport type StatKey = MainStatKey | SubstatKey | ReactionDMGStatKey | MoveDMGStatKey | ElementalRESStatKey | SpecializedStatKey\r\n\r\ntype ElementalRESStatKey = \"physical_res_\" | \"anemo_res_\" | \"geo_res_\" | \"electro_res_\" | \"hydro_res_\" | \"pyro_res_\" | \"cryo_res_\"\r\ntype ReactionDMGStatKey = \"overloaded_dmg_\" | \"shattered_dmg_\" | \"electrocharged_dmg_\" | \"superconduct_dmg_\" | \"swirl_dmg_\" | \"vaporize_dmg_\" | \"melt_dmg_\" | \"burning_dmg_\" | \"crystalize_dmg_\"\r\ntype MoveDMGStatKey = \"normal_dmg_\" | \"charged_dmg_\" | \"skill_dmg_\" | \"burst_dmg_\"\r\n\r\nexport const allMainStatKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"heal_\"] as const\r\nexport const allSubstats = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"def\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\",] as const\r\n\r\n// TODO: Check if these actually applies\r\ntype SpecializedStatKey = \"charged_critRate_\" | \"powShield_\" | \"incHeal_\"\r\n\r\nexport type MainStatKey = typeof allMainStatKeys[number]\r\nexport type CompressMainStatKey = \"hp\" | \"hp_\" | \"atk\" | \"atk_\" | \"def_\" | \"eleMas\" | \"enerRech_\" | \"critRate_\" | \"critDMG_\" | \"physical_dmg_\" | \"ele_dmg_\" | \"heal_\"\r\nexport type SubstatKey = typeof allSubstats[number]\r\n","import { ElementKey } from \"../Types/consts\"\r\n\r\nconst ElementalData: StrictDict<ElementKey | \"physical\", { name: string }> = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","export const getRandomElementFromArray = <T>(array: readonly T[]): T => array[Math.floor(Math.random() * array.length)];\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nexport function getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n}\r\nexport function getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport const loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nexport const saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nexport const deepClone = <T>(obj: T): T =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nexport const clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nexport const getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nexport const clamp01 = (val) => clamp(val, 0, 1)\r\nexport const clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nexport function strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nexport function hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nexport function objMultiplication(obj, multi) {\r\n  if (multi === 1) return obj\r\n  Object.keys(obj).forEach((prop: any) => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n  return obj\r\n}\r\n\r\n//assign obj.[keys...] = value\r\nexport function layeredAssignment(obj, keys: string[], value) {\r\n  keys.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, obj)\r\n  return obj\r\n}\r\n//get the value in a nested object, giving array of path\r\nexport function objPathValue(obj: object, keys: string[]) {\r\n  return keys.reduce((a, k) => a?.[k], obj)\r\n}\r\n//delete the value denoted by the path. Will also delete empty objects as well.\r\nexport function deletePropPath(obj, path) {\r\n  const tempPath = [...path]\r\n  const lastKey = tempPath.pop()\r\n  const objPathed = objPathValue(obj, tempPath)\r\n  delete objPathed[lastKey];\r\n}\r\n\r\nexport function objClearEmpties(o) {\r\n  for (const k in o) {\r\n    if (typeof o[k] !== \"object\") continue\r\n    objClearEmpties(o[k])\r\n    if (!Object.keys(o[k]).length) delete o[k];\r\n  }\r\n}\r\nexport function crawlObject(obj, keys, validate, cb) {\r\n  if (validate(obj)) cb(obj, keys)\r\n  else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => crawlObject(val, [...keys, key], validate, cb))\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nexport const getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\n\r\nexport function evalIfFunc<T, X>(value: T | ((arg: X) => T), arg: X): T {\r\n  return typeof value === \"function\" ? (value as any)(arg) : value\r\n}","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}): IFieldDisplay[] {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier as any ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey as any] * (multiplier as any), 0),\r\n    formulaText: <span>{Object.entries(modifier as any ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}): IFieldDisplay[] {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal as number,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => {\r\n    addConditional(sheets, \"weapon\");\r\n  }),//attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => {\r\n    addConditional(sheets, \"artifact\")\r\n    //attach metadata prop setNumKey to the conditional\r\n    Object.values(sheets).forEach(setObj =>\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n        if (setNumObj.conditional) (setNumObj.conditional as any).setNumKey = setNumKey // TODO, typechecker says there's no `setNumKey`\r\n        if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach((c: any) => c.setNumKey = setNumKey)\r\n      }))\r\n  })\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow?.(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n// Probably a way to auto-populate this.\r\nexport const languageCodeList = [\r\n  \"chs\",\r\n  \"cht\",\r\n  \"de\",\r\n  \"en\",\r\n  \"es\",\r\n  \"fr\",\r\n  \"id\",\r\n  \"ja\",\r\n  \"ko\",\r\n  \"pt\",\r\n  \"ru\",\r\n  \"th\",\r\n  \"vi\"\r\n];\r\n\r\n/**\r\n * @see: https://www.i18next.com/translation-function/essentials\r\n * @see: https://react.i18next.com/latest/using-with-hooks\r\n */\r\ni18n\r\n  // load translation using http ->\r\n  // see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // Configure localization.\r\n  .init({\r\n    debug: process.env.NODE_ENV === \"development\",\r\n    // Use English strings by default, if the current language does not include\r\n    // the specified string.\r\n    fallbackLng: 'en',\r\n    // fallbackLng: 'dev', // Switch to this to force the fallback value on missing strings.\r\n\r\n    // List all translation namespaces.\r\n    ns: [\r\n      \"artifact\",\r\n      \"home\",\r\n      \"languages\",\r\n      \"settings\",\r\n      \"ui\",\r\n    ],\r\n    // Specify the default namespace.\r\n    defaultNS: \"ui\",\r\n\r\n    // Only use the language code, skipping the region code.\r\n    // For example, en-US becomes simply en.\r\n    load: 'languageOnly',\r\n\r\n    // allow an empty value to count as invalid (by default is true)\r\n    returnEmptyString: false,\r\n\r\n    backend: process.env.NODE_ENV === \"development\" ? {\r\n      // Path to load localization data from.\r\n      loadPath: 'genshin-optimizer/locales/{{lng}}/{{ns}}.json',\r\n    } : {\r\n      // Path to load localization data from.\r\n      loadPath: 'locales/{{lng}}/{{ns}}.json',\r\n    },\r\n    interpolation: {\r\n      escapeValue: false,//react does interlopation already\r\n    }\r\n  });\r\n\r\nexport default i18n;"],"sourceRoot":""}