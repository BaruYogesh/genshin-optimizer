{"version":3,"sources":["Util/ReactUtil.ts","Types/consts.ts","Artifact/ArtifactSheet.tsx","Character/CharacterSheet.ts","Util/FieldUtil.tsx","Data/ElementalData.ts","StatData.ts","Components/StarDisplay.tsx","Conditional/Conditional.ts","Weapon/WeaponSheet.ts","Components/CustomFormControl.tsx","Components/StatIcon.tsx","Formula.ts","Components/SlotIcon.ts","Data/ArtifactData.ts","Data/ArtifactLookupTable.ts","Artifact/Artifact.tsx","StatConstants.ts","Components/CharacterSelection.tsx","Artifact/ArtifactCard.tsx","Util/UIUtil.ts","Artifact/PercentBadge.tsx","InfoComponent.tsx","Types/artifact.ts","Artifact/imgs/scan_art_main.png","Artifact/imgs/snippet.png","Artifact/UploadDisplay.tsx","Artifact/ArtifactEditor.tsx","Artifact/ArtifactDisplay.tsx","Stat.tsx"],"names":["useForceUpdate","useState","stateDirty","update","useCallback","usePromise","promise","res","setRes","useEffect","pending","then","console","error","undefined","allHitModes","allReactionModes","allRarities","allArtifactRarities","allSlotKeys","allElements","allArtifactSets","allCharacterKeys","allWeaponKeys","artifactImport","imp","Object","fromEntries","entries","default","map","set","value","ArtifactSheet","promiseSheets","sheets","data","this","name","rarity","pieces","icons","setEffects","conditionals","num","stats","deepClone","evalIfFunc","setNum","text","effects","conditional","grouped","forEach","key","sheet","Math","max","push","filter","length","setToSlots","artifactSetEffect","slots","parseInt","keys","charImport","charKey","CharacterSheet","loadCharacterSheet","charSheet","isAutoElemental","weaponTypeKey","isMelee","getTalent","talentKey","talent","getTalentStats","split","constell","constellation","getTalentStatsAll","talents","statsArr","talentStats","getDisplayStatKeys","defVal","basicKeys","characterKey","eleKey","elementKey","transReactions","ElementToReactionKeys","includes","Formula","formulas","character","charFormulas","values","formula","field","canShow","genericAvgHit","reactions","startsWith","replace","cardImg","thumbImg","star","constellationName","specializeStat","baseStat","Boolean","get","getAll","modifiersToFields","modifiers","mStatKey","modifier","Stat","getStatName","variant","getStatVariant","reduce","accu","mkey","multiplier","formulaText","i","printStat","toFixed","fixed","fixedUnit","unit","getStatUnit","statsToFields","statVals","statKey","statVal","className","ElementalData","StatIconEle","flat","fieldProcessing","physical","anemo","geo","electro","hydro","pyro","cryo","StatData","characterHP","pretty","const","characterDEF","characterATK","characterEle","characterLevel","weaponATK","baseATK","hp","hp_","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","s","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","dendro","PreprocessFormulas","dependencyKeys","debug","initialStats","constData","formulaList","tmp","constModifier","k","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","func","log","assign","hitMoves","move","moveName","clamp","hitElements","ele","eleName","opt","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","StarIcon","icon","faStar","Stars","stars","colored","Array","_","processed","Promise","all","addConditional","weaponImport","setObj","setNumKey","setNumObj","Conditional","Error","source","findConditionals","obj","callback","condKey","states","state","maxStack","fields","layeredAssignment","artifact","weapon","resolve","conditionalValue","objPathValue","conditionalValues","stacks","stateKey","conditionalStats","objMultiplication","parseConditionalValues","crawlObject","isArray","WeaponSheet","loadWeaponSheet","weaponSheet","build","weaponType","img","passiveName","desc","passiveDescription","description","baseStats","weaponKey","getWeaponsOfType","CustomFormControl","onChange","disabled","float","placeholder","allowEmpty","setstate","setstateDirty","sendChange","parseFunc","parseFloat","aria-label","e","target","onBlur","onKeyDown","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","formulaImport","src","f","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubstatsData","ArtifactSubstatsMinMax","getArrLastElement","min","ArtifactSlotsData","ArtifactSubstatLookupTable","Artifact","numStars","level","substats","errors","allSubstatRolls","total","substat","index","substatRolls","getSubstatRolls","Set","roll","size","rolls","efficiency","getSubstatEfficiency","getStatNameWithPercent","find","some","minimum","rollInfo","low","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accurateValue","sum","cur","getArtifactEfficiency","currentEfficiency","maximumEfficiency","current","totalRolls","artifactId","art","ArtifactDatabase","currentLocation","location","intendedLocation","slotKey","artifactToSwapWithid","CharacterDatabase","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","moveToNewLocation","id","equipArtifact","unequipArtifactOnSlot","slotName","slotIcon","slotNameWithIcon","slotMainStats","setEffectsObjs","artifactSheets","result","setKey","setEffect","setEffectObj","setStats","condStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","endsWith","mainStatValue","high","numUpgrades","maxSubstatValues","getSubstatKeys","substatCloseEnough","value1","value2","closeEnoughFloat","closeEnoughInt","ceil","getSubstatRollData","substatKey","substatValue","rollData","table","lookupValue","a","b","clampPercent","artifacts","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","DropDownItem","characterSheet","Item","onClick","ArtifactCard","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","forceUpdateHook","registerArtListener","unregisterArtListener","equipOnChar","equipArtifactOnChar","editable","substatsValidation","mainStatKey","lock","mainStatLevel","mainStatVal","artifactValid","locationName","border","bg","Header","xs","md","slotIcons","thumbnail","slotNames","Body","Title","stat","numRolls","effOpacity","statName","valueString","style","opacity","valid","Footer","Toggle","Menu","Divider","placement","overlay","faLock","faLockOpen","faEdit","faTrashAlt","round","PercentBadge","badgeColor","InfoComponent","pageKey","modalTitle","children","loadFromLocalStorage","showInfoModal","setshowInfoModal","getRandomElementFromArray","displayText","closeModal","infoShown","saveToLocalStorage","show","onHide","contentClassName","faTimes","fallback","animation","faQuestionCircle","allMainStatKeys","allSubstats","starColor","r","g","zeroProgress","now","UploadDisplay","setState","setReset","artifactInEditor","fileList","setFileList","fileName","setFileName","image","setImage","scanning","setScanning","otherProgress","setOtherProgress","substatProgress","setSubstatProgress","artSetProgress","setArtSetProgress","texts","setTexts","modalShow","setModalShow","resetText","scanFile","file","rest","fileToURL","urlFile","artifactFromImage","resetState","uploadFiles","files","pasteFunc","clipboardData","window","addEventListener","removeEventListener","alt","Row","ExplainationModal","hide","Col","Button","ReactGA","modalview","Card","lg","ProgressBar","label","Form","File","accept","custom","multiple","Label","Modal","Snippet","href","rel","scan_art_main","uploadDisplayReset","reader","FileReader","onloadend","readAsDataURL","urlToImageData","Image","onload","tempCanvas","document","createElement","tempCtx","getContext","width","height","drawImage","getImageData","imageDataToURL","imageDataObj","canvas","ctx","idata","createImageData","putImageData","toDataURL","starScanning","pixels","d","lastRowNum","rowsWithNumber","y","onStar","x","colorCloseEnough","color1","color2","threshold","intCloseEnough","abs","parseSubstat","matches","getStatNameRaw","match","RegExp","exec","parseMainStatKey","toLowerCase","hammingDistance","parseSetKey","parseSlotKey","parseMainStatvalue","regex","NaN","awaits","linesFromImage","bandPass","region","mode","numStarsText","whiteTexts","substatTexts","artifactSetTexts","guessLevel","nStars","mainSKey","mainSVal","isFloat","testLevel","findIndex","val","isNaN","detectedlevel","nStar","testSlotKey","len","setProgress","tworker","createWorker","logger","progress","status","errorHandler","load","loadLanguage","initialize","imageURL","recognize","rec","terminate","lines","pixelData","options","Uint8ClampedArray","from","top","bot","bw","invert","halfInd","ImageData","ArtifactEditor","artifactIdToEdit","cancelEdit","useReducer","artifactReducer","artifactDispatch","useMemo","isInvalid","reset","newValue","newSheet","pick","available","prefer","setSubstat","editorArt","isDup","getArtifactDatabase","candidate","every","candidateSubstat","dupArtifacts","dupId","checkDuplicate","errMsgs","InputGroup","Dropdown","as","Prepend","namesByMaxRarities","sets","Fragment","ItemText","DropdownButton","Append","title","Text","l","sKey","FormControl","readOnly","mainStatK","OverlayTrigger","Popover","Content","cursor","SubstatInput","Alert","saveArtifact","canClearArtifact","process","rollNum","allowedRolls","rollLabel","rollOffset","rollBadge","Badge","rollArr","indexOf","other","ButtonGroup","v","action","artToSave","confirm","ArtifactDisplayInfo","React","lazy","sortMap","quality","mefficiency","initialFilter","filterArtSetKey","filterStars","filterLevelLow","filterLevelHigh","filterSlotKey","filterMainStatKey","filterSubstats","filterLocation","filterLocked","ascending","sortType","maxNumArtifactsToDisplay","filterReducer","filterInit","initial","ArtifactDisplay","props","filters","filterDispatch","artToEditId","setartToEditId","pageIdex","setpageIdex","scrollRef","useRef","invScrollRef","dbDirty","forceUpdate","deleteArtifact","removeArtifactById","editArtifact","scrollIntoView","behavior","cancelEditArtifact","pageview","registerListener","unregisterListener","locationDisplay","lockedDisplay","artifactDB","filterKey","sortNum","numUnequip","numUnlock","numLock","totalArtNum","numPages","currentPageIndex","artifactsToShow","slice","locationCharacterSheet","Container","ref","faUndo","ToggleButtonGroup","selected","ToggleButton","faCheckSquare","faSquare","faSortAmountDownAlt","faSortAmountUp","CharacterSelection","cid","unequipArtifact","faUserSlash","faTrash","setLocked","htmlStatsData","getStatNamePretty","expand","getPrintableFormulaStatKeyList","statList","FormulaText","has","printFormula","modifierText","statUnit","o"],"mappings":"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AAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhDrL,IAAK,CACDgL,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDnL,IAAK,CACD8K,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,I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CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,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,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG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","file":"static/js/13.fa7c3512.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>();\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => { pending = false }\r\n  }, [promise])\r\n  return res\r\n}\r\n","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nexport const allHitModes = [\"hit\", \"avgHit\", \"critHit\"] as const\r\nexport const allReactionModes = [\"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",] as const\r\nexport const allArtifactSetCount = [1, 2, 3, 4, 5] as const\r\nexport const allRarities = [5, 4, 3, 2, 1] as const\r\nexport const allArtifactRarities = [5, 4, 3] as const\r\nexport const allSlotKeys = [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"] as const\r\nexport const allElements = ['anemo', 'geo', 'electro', 'hydro', 'pyro', 'cryo'] as const\r\nexport const allWeaponTypeKeys = ['sword', 'claymore', 'polearm', 'bow', 'catalyst'] as const\r\nexport const allArtifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\",\r\n  \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\",\r\n  \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\",\r\n  \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\",\r\n  \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\",\r\n  \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\",\r\n  \"WanderersTroupe\", \"TenacityOfTheMillelith\", \"PaleFlame\",\r\n] as const\r\nexport const allCharacterKeys = [\r\n  \"albedo\", \"amber\", \"barbara\", \"beidou\", \"bennett\", \"chongyun\", \"diluc\", \"diona\", \"fischl\", \"ganyu\",\r\n  \"hutao\", \"jean\", \"kaeya\", \"keqing\", \"klee\", \"lisa\", \"mona\", \"ningguang\", \"noelle\", \"qiqi\",\r\n  \"razor\", \"sucrose\", \"tartaglia\", \"traveler_anemo\", \"traveler_geo\", \"venti\", \"xiao\", \"xiangling\", \"xingqiu\", \"xinyan\",\r\n  \"zhongli\", \"rosaria\", \"yanfei\",\r\n] as const\r\nexport const allWeaponKeys = [\r\n  \"DullBlade\", \"SilverSword\", \"CoolSteel\", \"DarkIronSword\", \"FilletBlade\", \"HarbingerOfDawn\", \"SkyriderSword\",\r\n  \"TravelersHandySword\", \"BlackcliffLongsword\", \"FavoniusSword\", \"IronSting\", \"LionsRoar\", \"PrimordialJadeCutter\",\r\n  \"PrototypeRancour\", \"RoyalLongsword\", \"SacrificialSword\", \"TheAlleyFlash\", \"TheBlackSword\", \"TheFlute\",\r\n  \"SwordOfDescension\", \"FesteringDesire\", \"AquilaFavonia\", \"SkywardBlade\", \"SummitShaper\", \"WasterGreatsword\",\r\n  \"OldMercsPal\", \"BloodtaintedGreatsword\", \"DebateClub\", \"FerrousShadow\", \"Quartz\", \"SkyriderGreatsword\",\r\n  \"WhiteIronGreatsword\", \"BlackcliffSlasher\", \"FavoniusGreatsword\", \"LithicBlade\", \"PrototypeAminus\", \"Rainslasher\",\r\n  \"RoyalGreatsword\", \"SerpentSpine\", \"TheBell\", \"Whiteblind\", \"SacrificialGreatsword\", \"SnowTombedStarsilver\",\r\n  \"SkywardPride\", \"WolfsGravestone\", \"TheUnforged\", \"BeginnersProtector\", \"IronPoint\", \"BlackTassel\", \"Halberd\",\r\n  \"WhiteTassel\", \"BlackcliffPole\", \"CrescentPike\", \"Deathmatch\", \"DragonsBane\", \"LithicSpear\", \"PrototypeGrudge\",\r\n  \"FavoniusLance\", \"RoyalSpear\", \"DragonspineSpear\", \"VortexVanquisher\", \"PrimordialJadeWingedSpear\", \"StaffOfHoma\",\r\n  \"SkywardSpine\", \"HuntersBow\", \"SeasonedHuntersBow\", \"EbonyBow\", \"Messenger\", \"RavenBow\", \"RecurveBow\",\r\n  \"SharpshootersOath\", \"Slingshot\", \"TheStringless\", \"AlleyHunter\", \"BlackcliffWarbow\", \"CompoundBow\",\r\n  \"FavoniusWarbow\", \"PrototypeCrescent\", \"RoyalBow\", \"Rust\", \"SacrificialBow\", \"TheViridescentHunt\", \"SkywardHarp\",\r\n  \"AmosBow\", \"ElegyForTheEnd\", \"WindblumeOde\", \"ApprenticesNotes\", \"PocketGrimoire\", \"AmberCatalyst\", \"EmeraldOrb\",\r\n  \"MagicGuide\", \"OtherworldlyStory\", \"ThrillingTalesOfDragonSlayers\", \"TwinNephrite\", \"BlackcliffAgate\",\r\n  \"FavoniusCodex\", \"MappaMare\", \"PrototypeMalice\", \"RoyalGrimoire\", \"SacrificialFragments\", \"SolarPearl\", \"TheWidsith\",\r\n  \"WineAndSong\", \"EyeOfPerception\", \"Frostbearer\", \"LostPrayerToTheSacredWinds\", \"SkywardAtlas\", \"MemoryOfDust\"\r\n] as const\r\nexport type HitModeKey = typeof allHitModes[number]\r\nexport type ReactionModeKey = typeof allReactionModes[number]\r\nexport type SetNum = typeof allArtifactSetCount[number]\r\nexport type Rarity = typeof allRarities[number]\r\nexport type SlotKey = typeof allSlotKeys[number]\r\nexport type ElementKey = typeof allElements[number]\r\nexport type ArtifactSetKey = typeof allArtifactSets[number]\r\nexport type CharacterKey = typeof allCharacterKeys[number]\r\nexport type WeaponKey = typeof allWeaponKeys[number]\r\nexport type WeaponTypeKey = typeof allWeaponTypeKeys[number]","import { IArtifactSheet, SetEffectEntry, StatArr, StatDict } from \"../Types/artifact\";\r\nimport { allArtifactSets, allRarities, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  constructor(data: IArtifactSheet) { this.data = data }\r\n\r\n  get name(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slotNames(): Dict<SlotKey, string> { return this.data.pieces }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): StatDict {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectTexts(setNum: SetNum, stats: ICalculatedStats): Displayable {\r\n    let text = this.setEffects[setNum]?.text\r\n    return evalIfFunc(text ?? \"\", stats)\r\n  }\r\n  setEffectConditionals(setNum: SetNum, stats: ICalculatedStats) {\r\n    const effects = this.setEffects[setNum]\r\n    if (effects?.conditional || effects?.conditionals) {\r\n      return {\r\n        ...effects?.conditional && { default: effects?.conditional },\r\n        ...effects?.conditionals && effects?.conditionals\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static namesByMaxRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): [Rarity, [ArtifactSetKey, string][]][] {\r\n    const grouped: Dict<Rarity, [ArtifactSetKey, string][]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push([key, sheet.name])\r\n      else grouped[rarity] = [[key, sheet.name]]\r\n    })\r\n    return allRarities.map(rarity => [rarity, grouped[rarity] ?? []] as [Rarity, [ArtifactSetKey, string][]]).filter(([, group]) => group.length)\r\n  }\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): StatArr {\r\n    let artifactSetEffect: StatArr = []\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && Object.keys(value.stats ?? {}).length &&\r\n        Object.entries(value.stats!).forEach(([key, value]) =>\r\n          artifactSetEffect.push({ key, value }))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import Formula from \"../Formula\";\r\nimport { ElementToReactionKeys } from \"../StatData\";\r\nimport { ICharacterSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const charImport = import('../Data/Characters').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>)\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | string): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return this.sheet.elementKey }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get specializeStat() { return this.sheet.specializeStat }\r\n  get baseStat() { return this.sheet.baseStat }\r\n  get talent() { return this.sheet.talent }\r\n  get formula() { return this.sheet.formula }\r\n  get conditionals() { return this.sheet.conditionals }\r\n  isAutoElemental = () => this.sheet.weaponTypeKey === \"catalyst\"\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (talentKey: string) => this.talent[talentKey]\r\n  get hasTalentPage() { return Boolean(Object.keys(this.sheet.talent).length) } //TODO: remove when all chararacter sheets are complete\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalent(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats) => {\r\n    const talents = this.sheet.talent\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n\r\n  getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats || !Object.keys(stats).length) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = this.elementKey\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = this.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (Formula.formulas.character?.[characterKey]) {\r\n      const charFormulas = {}\r\n      Object.entries(Formula.formulas.character[characterKey]).forEach(([talentKey, formulas]: any) => {\r\n        Object.values(formulas as any).forEach((formula: any) => {\r\n          if (!formula.field.canShow(stats)) return\r\n          if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n          if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n          charFormulas[talentKey].push(formula.keys)\r\n        })\r\n      })\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {//TODO: doesnt have character sheet\r\n      //generic average hit parameters.\r\n      const genericAvgHit: string[] = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical\r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      else if (weaponTypeKey === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst\r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions: string[] = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n}\r\n","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier as any ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey as any] * (multiplier as any), 0),\r\n    formulaText: <span>{Object.entries(modifier as any ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}) {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]: any) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]: any) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]: any) => accu + c[k] * (m as any), 0)\r\n    const dynamicFunc = (s, c) => dynamicModifier.reduce((accu, [k, m]: any) => accu + s[k] * (m as any), 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => {\r\n    addConditional(sheets, \"weapon\");\r\n  }),//attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => {\r\n    addConditional(sheets, \"artifact\")\r\n    //attach metadata prop setNumKey to the conditional\r\n    Object.values(sheets).forEach(setObj =>\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n        if (setNumObj.conditional) (setNumObj.conditional as any).setNumKey = setNumKey // TODO, typechecker says there's no `setNumKey`\r\n        if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach((c: any) => c.setNumKey = setNumKey)\r\n      }))\r\n  })\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","import { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new WeaponSheet(value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>)\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  constructor(weaponSheet: IWeaponSheet) { this.sheet = weaponSheet }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string) => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  get name() { return this.sheet.name }\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  get passiveName() { return this.sheet.passiveName }\r\n  passiveDescription(stats: ICalculatedStats) {\r\n    const desc = this.sheet.passiveDescription\r\n    return evalIfFunc(desc, stats)\r\n  }\r\n  get description() { return this.sheet.description }\r\n  get baseStats() { return this.sheet.baseStats }\r\n  stats = (build: ICalculatedStats): object | false | undefined => evalIfFunc(this.sheet.stats, build)\r\n  get conditionals() { return this.sheet.conditionals }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled = false, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import ICalculatedStats from './Types/ICalculatedStats';\r\nimport { crawlObject, objPathValue } from './Util/Util';\r\n\r\n//Currently only import character formulas, but formulas from other sources should be able to be imported as well.\r\nexport const formulaImport = import('./Data/Characters/formula').then(imp => addFormula(imp.default, \"character\"))\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | undefined> => formulaImport.then(() => objPathValue(Formula.formulas, keys))\r\n}\r\n\r\nfunction addFormula(src, key) {\r\n  Formula.formulas[key] = src\r\n  crawlObject(src, [key], f => typeof f === \"function\", (formula, keys) => {\r\n    formula.keys = keys\r\n  })\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { SlotKey } from '../Types/consts'\r\n\r\nconst SlotIcon: StrictDict<SlotKey, IconDefinition> = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport { CompressMainStatKey, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactStarsData: Dict<Rarity, { subsBaselow: number, subBaseHigh: number, numUpgradesOrUnlocks: number }> = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData: StrictDict<Rarity, StrictDict<CompressMainStatKey, number[]>> = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubstatsData: StrictDict<SubstatKey, { [numStars: number]: number[] }> = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubstatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { SubstatKey } from \"../Types/artifact\"\r\n\r\nexport const ArtifactSubstatLookupTable: StrictDict<SubstatKey, { [numStar: number]: { [rounded: string]: number[][] } }> = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubstatsData, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { CompressMainStatKey, IArtifact, MainStatKey, StatDict, Substat, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, CharacterKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey) => slotKey ? ArtifactSlotsData[slotKey].name : \"\"\r\n  static slotIcon = (slotKey: SlotKey) => <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n  static slotNameWithIcon = (slotKey: SlotKey) => {\r\n    let name = Artifact.slotName(slotKey)\r\n    let slotIcon = Artifact.slotIcon(slotKey)\r\n    return <span>{slotIcon} {name}</span>\r\n  }\r\n\r\n  static slotMainStats = (slotKey: SlotKey): MainStatKey[] => ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): Dict<ArtifactSetKey, Dict<SetNum, StatDict>> => {\r\n    let result: Dict<ArtifactSetKey, Dict<SetNum, StatDict>> = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      let setEffect: Dict<SetNum, StatDict> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n        const setStats = evalIfFunc(setEffectObj.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        result[setKey][setNumKey][statKey] = (result[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: Dict<string, IArtifact>): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey, defVal = []) => {\r\n    if (statKey.endsWith(\"_dmg_\") && statKey !== \"physical_dmg_\")\r\n      return ArtifactMainStatsData[numStar][\"ele_dmg_\"]\r\n    return ArtifactMainStatsData[numStar][statKey as CompressMainStatKey] || defVal\r\n  }\r\n\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number | undefined =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } => {\r\n    const data = ArtifactStarsData[rarity]!\r\n    return { low: data.subsBaselow, high: data.subBaseHigh, numUpgrades: data.numUpgradesOrUnlocks }\r\n  }\r\n\r\n  static maxSubstatValues = (statKey: SubstatKey, numStars = maxStar): number => ArtifactSubstatsMinMax[statKey].max[numStars]\r\n  static getSubstatKeys = (): SubstatKey[] => Object.keys(ArtifactSubstatsData) as SubstatKey[]\r\n  static substatCloseEnough = (key: SubstatKey, value1: number, value2: number): boolean => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars: Rarity) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars]!.subBaseHigh + ArtifactStarsData[numStars]!.numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static getSubstatRollData = (substatKey: SubstatKey | \"\", numStars: Rarity) => ArtifactSubstatsData[substatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    if (!numStars || !substatKey || typeof substatValue !== \"number\" || !substatValue) return []\r\n    let rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    if (!rollData.length) return []\r\n\r\n    let table = ArtifactSubstatLookupTable[substatKey][numStars]\r\n    let lookupValue = substatValue.toFixed(1)\r\n\r\n    if (table[lookupValue])\r\n      return table[lookupValue].map(roll => roll.map(i => rollData[i]))\r\n    else return [] // Lookup fails\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state: IArtifact) {\r\n    const { numStars, level, substats } = state, errors: string[] = []\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = key ? Artifact.getSubstatRolls(key, value, numStars) : []\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls?.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            const key = substats[index].key\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    } else {\r\n      // Found valid build, filling missing data\r\n      for (const substat of substats)\r\n        substat.accurateValue = substat.rolls!.reduce((sum, cur) => sum + cur, 0)\r\n      const { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n      state.currentEfficiency = currentEfficiency\r\n      state.maximumEfficiency = maximumEfficiency\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(substats: Substat[], numStars: Rarity, level: number) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let current = substats.reduce((sum, { key, accurateValue }) => sum + (key ? (accurateValue! / ArtifactSubstatsMinMax[key].max[maxStar]) : 0), 0)\r\n    let maximum = current + rollsRemaining\r\n    let currentEfficiency = current * 100 / totalRolls\r\n    let maximumEfficiency = maximum * 100 / totalRolls\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    let setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId: string | undefined, characterKey: CharacterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId: string | undefined) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.unequipArtifactOnSlot(location, slotKey)\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [0,\r\n  17.2, 18.5, 19.9, 21.3, 22.6, 24.6, 26.6, 28.9, 31.4, 34.1,\r\n  37.2, 40.7, 44.4, 48.6, 53.7, 59.1, 64.4, 69.7, 75.1, 80.6,\r\n  86.1, 91.7, 97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n  142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n  215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n  336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n  509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n  742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n  968.6, 991.0, 1013.5, 1036.1, 1066.6, 1090.0, 1115.0, 1141.7, 1171.9, 1202.8,\r\n  1202.8, 1233.9, 1264.7, 1305.7, 1346.1, 1468.9, 1524.0, 1577.0, 1627.6, 1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [0,\r\n  91, 99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n  170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n  320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n  448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n  574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n  733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n  915, 936, 956, 982, 1003, 1017, 1036, 1057, 1075, 1096,\r\n  1114, 1135, 1149, 1170, 1191, 1205, 1224, 1243, 1260, 1277,\r\n  1293, 1308, 1317, 1327, 1336, 1349, 1366, 1384, 1403, 1424,\r\n  1450, 1478, 1507, 1543, 1570, 1580, 1589, 1673, 1682, 1691,\r\n]","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return <>{CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>\r\n    {characterSheet.name}\r\n  </Dropdown.Item>\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { IArtifact, Substat } from '../Types/artifact';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: IArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number }\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }: Data): JSX.Element | null {\r\n  const [, forceUpdateHook] = useForceUpdate()\r\n  useEffect(() => {\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () => { artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook) }\r\n  }, [artifactId, forceUpdateHook])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? ArtifactDatabase.get(artifactId) : undefined))?.setKey))\r\n  const equipOnChar = (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey)\r\n\r\n  const editable = !artifactObj //dont allow edit for flex artifacts\r\n  const art = artifactObj || ArtifactDatabase.get(artifactId);\r\n  const characterSheet = usePromise(CharacterSheet.get(art.location))\r\n  if (!art) return null\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n\r\n  const { slotKey, numStars, level, mainStatKey, substats, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.mainStatValue(mainStatKey, numStars, mainStatLevel) ?? \"\"}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = art.maximumEfficiency !== undefined\r\n  const locationName = characterSheet?.name ?? \"Inventory\"\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{sheet?.slotNames[slotKey] ?? \"Unknown Piece Name\"}</b></h6>\r\n          <div>{Artifact.slotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{sheet?.name ?? \"Artifact Set\"}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: Substat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueString(stat.value, Stat.getStatUnit(stat.key))}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{valueString(efficiency, \"eff\")}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} {...{ className: \"float-right\" }} /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"lock-artifact-tip\">Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.update(art);\r\n                  }}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","export function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1)\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { faQuestionCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Suspense, useState } from \"react\"\r\nimport { Button, Card, Col, Modal, Row, Spinner } from \"react-bootstrap\"\r\nimport { getRandomElementFromArray, loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\"\r\n\r\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }) {\r\n  const [showInfoModal, setshowInfoModal] = useState(loadFromLocalStorage(\"infoShown\")?.[pageKey] ?? true)\r\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\r\n  const closeModal = () => {\r\n    const infoShown = loadFromLocalStorage(\"infoShown\") ?? {}\r\n    infoShown[pageKey] = false\r\n    saveToLocalStorage(\"infoShown\", infoShown)\r\n    setshowInfoModal(false)\r\n  }\r\n  return <>\r\n    <Modal show={showInfoModal} onHide={() => closeModal()} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <Card.Title>{modalTitle}</Card.Title>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button variant=\"danger\" onClick={() => closeModal()} >\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Suspense fallback={<h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>}>\r\n            {children}\r\n          </Suspense>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={() => closeModal()}>\r\n            <span>Close</span>\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"pl-2 py-0 pr-0\">\r\n        <Row>\r\n          <Col><small>{displayText}</small></Col>\r\n          <Col xs=\"auto\">\r\n            <Button size=\"sm\" variant=\"info\" className=\"m-0 py-1\" onClick={() => setshowInfoModal(true)}><FontAwesomeIcon icon={faQuestionCircle} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}","import { ArtifactSetKey, Rarity, SetNum, SlotKey } from \"./consts\";\r\nimport ICalculatedStats from \"./ICalculatedStats\";\r\nimport IConditional, { IConditionalComplex, IConditionals } from \"./IConditional\";\r\n\r\nexport type IArtifactSheets = StrictDict<ArtifactSetKey, IArtifactSheet>\r\n\r\nexport interface IArtifactSheet {\r\n  name: string,\r\n  rarity: readonly Rarity[],\r\n  pieces: Dict<SlotKey, string>,\r\n  icons: Dict<SlotKey, string>,\r\n  conditionals?: IConditionals,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  text: (Displayable | ((stats: ICalculatedStats) => Displayable)),\r\n  stats?: StatDict | ((arg0: ICalculatedStats) => (StatDict | false))\r\n  conditional?: (IConditional | IConditionalComplex),\r\n  conditionals?: IConditionals,\r\n}\r\n\r\nexport type StatArr = { key: StatKey, value: number }[]\r\nexport type StatDict = Dict<StatKey, number>\r\n\r\nexport interface IArtifact {\r\n  id?: string,\r\n  setKey: ArtifactSetKey,\r\n  numStars: Rarity,\r\n  level: number,\r\n  slotKey: SlotKey,\r\n  mainStatKey: MainStatKey,\r\n  mainStatVal: number,\r\n  substats: Substat[],\r\n  location: string,\r\n\r\n  currentEfficiency?: number,\r\n  maximumEfficiency?: number,\r\n  lock: boolean,\r\n}\r\n\r\nexport interface Substat {\r\n  key: SubstatKey | \"\",\r\n  value: number,\r\n\r\n  rolls?: number[],\r\n  efficiency?: number,\r\n  accurateValue?: number,\r\n}\r\nexport type StatKey = MainStatKey | SubstatKey | ReactionDMGStatKey | MoveDMGStatKey | ElementalRESStatKey | SpecializedStatKey\r\n\r\ntype ElementalRESStatKey = \"physical_res_\" | \"anemo_res_\" | \"geo_res_\" | \"electro_res_\" | \"hydro_res_\" | \"pyro_res_\" | \"cryo_res_\"\r\ntype ReactionDMGStatKey = \"overloaded_dmg_\" | \"shattered_dmg_\" | \"electrocharged_dmg_\" | \"superconduct_dmg_\" | \"swirl_dmg_\" | \"vaporize_dmg_\" | \"melt_dmg_\" | \"burning_dmg_\" | \"crystalize_dmg_\"\r\ntype MoveDMGStatKey = \"normal_dmg_\" | \"charged_dmg_\" | \"skill_dmg_\" | \"burst_dmg_\"\r\n\r\nexport const allMainStatKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"heal_\"] as const\r\nexport const allSubstats = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"def\"] as const\r\n\r\n// TODO: Check if these actually applies\r\ntype SpecializedStatKey = \"charged_critRate_\" | \"powShield_\" | \"incHeal_\"\r\n\r\nexport type MainStatKey = typeof allMainStatKeys[number]\r\nexport type CompressMainStatKey = \"hp\" | \"hp_\" | \"atk\" | \"atk_\" | \"def_\" | \"eleMas\" | \"enerRech_\" | \"critRate_\" | \"critDMG_\" | \"physical_dmg_\" | \"ele_dmg_\" | \"heal_\"\r\nexport type SubstatKey = typeof allSubstats[number]\r\n","export default __webpack_public_path__ + \"static/media/scan_art_main.ab1cfe61.png\";","export default __webpack_public_path__ + \"static/media/snippet.d223e797.png\";","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Form, Modal, ProgressBar, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport Tesseract, { createWorker } from 'tesseract.js';\r\nimport scan_art_main from \"./imgs/scan_art_main.png\";\r\nimport Snippet from \"./imgs/snippet.png\";\r\nimport Stat from '../Stat';\r\nimport { clamp, hammingDistance } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport { allMainStatKeys, IArtifact, MainStatKey, Substat, SubstatKey } from '../Types/artifact';\r\nimport { allArtifactSets, allRarities, allSlotKeys, SlotKey } from '../Types/consts';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\n\r\nconst starColor = { r: 255, g: 204, b: 50 } //#FFCC32\r\nconst zeroProgress = { now: 0, variant: \"\" }\r\n\r\nexport default function UploadDisplay({ setState, setReset, artifactInEditor }) {\r\n  const [fileList, setFileList] = useState([] as { name: string }[])\r\n  const [fileName, setFileName] = useState(\"Click here to Upload Artifact Screenshot File\");\r\n  const [image, setImage] = useState('');\r\n\r\n  const [scanning, setScanning] = useState(false)\r\n  const [otherProgress, setOtherProgress] = useState(zeroProgress);\r\n  const [substatProgress, setSubstatProgress] = useState(zeroProgress);\r\n  const [artSetProgress, setArtSetProgress] = useState(zeroProgress);\r\n  const [texts, setTexts] = useState({} as Dict<keyof IArtifact, Displayable>)\r\n\r\n  const [modalShow, setModalShow] = useState(false)\r\n  const resetText = () => setTexts({})\r\n  const scanFile = useCallback(\r\n    async () => {\r\n      if (!fileList.length) return\r\n      const [file, ...rest] = fileList\r\n      setFileList(rest)\r\n      if (!file) return\r\n      setScanning(true)\r\n      resetText()\r\n      setFileName(file.name)\r\n      const urlFile = await fileToURL(file)\r\n      setImage(urlFile)\r\n      const [artifact, texts] = await artifactFromImage(\r\n        urlFile,\r\n        setOtherProgress,\r\n        setSubstatProgress,\r\n        setArtSetProgress\r\n      )\r\n\r\n      setTexts(texts)\r\n      setState?.(artifact)\r\n    }, [fileList, setState])\r\n\r\n  const resetState = useCallback(\r\n    () => {\r\n      setFileName(\"Click here to Upload Artifact Screenshot File\")\r\n      setImage(\"\")\r\n      setModalShow(false)\r\n      setScanning(false)\r\n\r\n      setOtherProgress(zeroProgress)\r\n      setSubstatProgress(zeroProgress)\r\n      setArtSetProgress(zeroProgress)\r\n      resetText();\r\n      //scan the next file\r\n      scanFile();\r\n    }, [scanFile])\r\n\r\n  const uploadFiles = useCallback(\r\n    (files) => setFileList([...fileList, ...files]), [fileList])\r\n  useEffect(() => {\r\n    const pasteFunc = e =>\r\n      uploadFiles(e.clipboardData.files)\r\n    window.addEventListener('paste', pasteFunc);\r\n    setReset?.(resetState);\r\n    return () =>\r\n      window.removeEventListener('paste', pasteFunc)\r\n  }, [setReset, resetState, uploadFiles])\r\n\r\n  useEffect(() => {\r\n    if (!scanning && !artifactInEditor) scanFile()\r\n  }, [scanning, artifactInEditor, fileList, scanFile])\r\n\r\n  const img = Boolean(image) && <img src={image} className=\"w-100 h-auto\" alt=\"Screenshot to parse for artifact values\" />\r\n  return (<Row>\r\n    <ExplainationModal {...{ modalShow, hide: () => setModalShow(false) }} />\r\n    <Col xs={12} className=\"mb-2\">\r\n      <Row>\r\n        <Col>\r\n          <h6 className=\"mb-0\">Parse Artifact by Uploading Image</h6>\r\n        </Col>\r\n        <Col xs=\"auto\"><Button variant=\"info\" size=\"sm\" onClick={() => {\r\n          setModalShow(true)\r\n          ReactGA.modalview('/artifact/how-to-upload')\r\n        }}>Show Me How!</Button></Col>\r\n      </Row>\r\n    </Col>\r\n    {Boolean(fileList.length) && <Col xs={12}>\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Row>\r\n          <Col className=\"p-1 ml-2\">Screenshots in file-queue: <b>{fileList.length}</b></Col>\r\n          <Col xs=\"auto\"><Button size=\"sm\" variant=\"danger\" onClick={() => setFileList([])}>Clear file-queue</Button></Col>\r\n        </Row>\r\n      </Card>\r\n    </Col>}\r\n    <Col xs={8} lg={image ? 4 : 0}>{img}</Col>\r\n    <Col xs={12} lg={image ? 8 : 12}>\r\n      {scanning && <>\r\n        <div className=\"mb-2\">\r\n          <h6 className=\"mb-0\">{`Scan${artSetProgress.now < 100 ? \"ning\" : \"ned\"} Artifact Set`}</h6>\r\n          <ProgressBar {...artSetProgress} label={`${artSetProgress.now.toFixed(1)}%`} />\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <h6 className=\"mb-0\">{`Scan${substatProgress.now < 100 ? \"ning\" : \"ned\"} Artifact Substat`}</h6>\r\n          <ProgressBar {...substatProgress} label={`${substatProgress.now.toFixed(1)}%`} />\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <h6 className=\"mb-0\">{`Scan${otherProgress.now < 100 ? \"ning\" : \"ned\"} Other`}</h6>\r\n          <ProgressBar {...otherProgress} label={`${otherProgress.now.toFixed(1)}%`} />\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <div>{texts.numStars ?? \"\"}</div>\r\n          <div>{texts.setKey ?? \"\"}</div>\r\n          <div>{texts.slotKey ?? \"\"}</div>\r\n          <div>{texts.mainStatVal ?? \"\"}</div>\r\n          <div>{texts.mainStatKey ?? \"\"}</div>\r\n          <div>{texts.level ?? \"\"}</div>\r\n          <div>{texts.substats ?? \"\"}</div>\r\n        </div>\r\n      </>}\r\n      <Form.File\r\n        type=\"file\"\r\n        className=\"mb-0\"\r\n        label={fileName}\r\n        onChange={e => {\r\n          uploadFiles(e.target.files)\r\n          e.target.value = null//reset the value so the same file can be uploaded again...\r\n        }}\r\n        accept=\"image/*\"\r\n        custom\r\n        multiple\r\n      />\r\n      {Boolean(!image) && <Form.Label className=\"mb-0\">Please Select an Image, or paste a screenshot here (Ctrl+V)</Form.Label>}\r\n    </Col>\r\n  </Row >)\r\n}\r\nfunction ExplainationModal({ modalShow, hide }) {\r\n  return <Modal show={modalShow} onHide={hide} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col><Card.Title>How do Upload Screenshots for parsing</Card.Title></Col>\r\n          <Col xs=\"auto\">\r\n            <Button variant=\"danger\" onClick={hide} >\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col xs={8} md={4}>\r\n            <img alt=\"snippet of the screen to take\" src={Snippet} className=\"w-100 h-auto\" />\r\n          </Col>\r\n          <Col xs={12} md={8}>\r\n            <p>Using screenshots can dramatically decrease the amount of time you manually input in stats on the Genshin Optimizer.</p>\r\n            <h5>Where to snip the screenshot.</h5>\r\n            <p>In game, Open your bag, and navigate to the artifacts tab. Select the artifact you want to scan with Genshin Optimizer. <b>Only artifact from this screen can be scanned.</b></p>\r\n            <h6>Single artifact</h6>\r\n            <p>To take a screenshot, in Windows, the shortcut is <strong>Shift + WindowsKey + S</strong>. Once you selected the region, the image is automatically included in your clipboard.</p>\r\n            <h6>Multiple artifacts</h6>\r\n            <p>To take advantage of batch uploads, you can use a tool like <a href=\"https://picpick.app/\" target=\"_blank\" rel=\"noreferrer\">PicPick</a> to create a macro to easily to screenshot a region to screenshot multiple artifacts at once.</p>\r\n            <h5>What to include in the screenshot.</h5>\r\n            <p>As shown in the Image, starting from the top with the artifact name, all the way to the set name(the text in green). </p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5>Adding Screenshot to Genshin Optimizer</h5>\r\n            <p>At this point, you should have the artifact snippet either saved to your harddrive, or in your clipboard.</p>\r\n            <p className=\"mb-0\">You can click on the box next to \"Browse\" to browse the files in your harddrive for multiple screenshots.</p>\r\n            <p>For single screenshots from the snippets, just press <strong>Ctrl + V</strong> to paste from your clipboard.</p>\r\n            <p>You should be able to see a Preview of your artifact snippet, and after waiting a few seconds, the artifact set and the substats will be filled in in the <b>Artifact Editor</b>.\r\n        </p>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <h5>Finishing the Artifact</h5>\r\n            <p>Unfortunately, computer vision is not 100%. There will always be cases where something is not scanned properly. You should always double check the scanned artifact values! Once the artifact has been filled, Click on <strong>Add Artifact</strong> to finish editing the artifact.</p>\r\n            <img alt=\"main screen after importing stats\" src={scan_art_main} className=\"w-75 h-auto\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"danger\" onClick={hide}>\r\n          <span>Close</span>\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nlet reader = new FileReader()\r\nfunction fileToURL(file): Promise<string> {\r\n  return new Promise(resolve => {\r\n    // let reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      resolve(reader.result as string); // TODO: May not be string\r\n    }\r\n    reader.readAsDataURL(file)\r\n  })\r\n}\r\nfunction urlToImageData(urlFile: string): Promise<ImageData> {\r\n  return new Promise(resolve => {\r\n    let img = new Image();\r\n    img.onload = () =>\r\n      resolve(getImageData(img))\r\n    img.src = urlFile\r\n  })\r\n}\r\n\r\nfunction getImageData(image: HTMLImageElement): ImageData {\r\n  const tempCanvas = document.createElement('canvas'),\r\n    tempCtx = tempCanvas.getContext('2d');\r\n  tempCanvas.width = image.width;\r\n  tempCanvas.height = image.height;\r\n  tempCtx?.drawImage(image, 0, 0, image.width, image.height);\r\n  const imageDataObj = tempCtx?.getImageData(0, 0, image.width, image.height) as ImageData; // TODO: May be undefined\r\n  return imageDataObj\r\n}\r\n\r\nfunction imageDataToURL(imageDataObj: ImageData) {\r\n  // create off-screen canvas element\r\n  let canvas = document.createElement('canvas'),\r\n    ctx = canvas.getContext('2d');\r\n\r\n  canvas.width = imageDataObj.width;\r\n  canvas.height = imageDataObj.height;\r\n\r\n  // create imageData object\r\n  let idata = ctx?.createImageData(imageDataObj.width, imageDataObj.height) as ImageData; // TODO: May be null\r\n\r\n  // set our buffer as source\r\n  idata.data.set(imageDataObj.data);\r\n\r\n  // update canvas with new data\r\n  ctx?.putImageData(idata, 0, 0);\r\n\r\n  let dataUri = canvas.toDataURL(); // produces a PNG file\r\n\r\n  return dataUri\r\n}\r\n\r\nfunction starScanning(pixels: Uint8ClampedArray, width: number, height: number, defVal = 0) {\r\n  let d = pixels, lastRowNum = 0, rowsWithNumber = 0;\r\n  for (let y = 0; y < height; y++) {\r\n    let star = 0, onStar = false;\r\n    for (let x = 0; x < width; x++) {\r\n      let i = (y * width + x) * 4\r\n      let r = d[i], g = d[i + 1], b = d[i + 2];\r\n      if (colorCloseEnough({ r, g, b }, starColor)) {\r\n        if (!onStar) {\r\n          onStar = true\r\n          star++\r\n        }\r\n      } else {\r\n        onStar = false\r\n      }\r\n    }\r\n\r\n    if (lastRowNum !== star) {\r\n      lastRowNum = star\r\n      rowsWithNumber = 1;\r\n    } else if (lastRowNum) {\r\n      rowsWithNumber++\r\n      if (rowsWithNumber >= 10) return lastRowNum\r\n    }\r\n  }\r\n  return defVal\r\n}\r\n\r\nfunction colorCloseEnough(color1, color2, threshold = 5) {\r\n  const intCloseEnough = (a, b) => (Math.abs(a - b) <= threshold)\r\n  return intCloseEnough(color1.r, color2.r) &&\r\n    intCloseEnough(color1.g, color2.g) &&\r\n    intCloseEnough(color1.b, color2.b)\r\n}\r\n\r\nfunction parseSubstat(texts: string[]): Substat[] | null {\r\n  let matches: { value: string | number, unit: string, key: SubstatKey }[] = []\r\n  for (let text of texts) {\r\n    text = text.replace(/^[\\W]+/, \"\").replace(/\\n/, \"\")\r\n    //parse substats\r\n    Artifact.getSubstatKeys().forEach(key => {\r\n      let regex: RegExp\r\n      let unit = Stat.getStatUnit(key)\r\n      let name = Stat.getStatNameRaw(key)\r\n      if (unit === \"%\") regex = new RegExp(name + \"\\\\s*\\\\+\\\\s*(\\\\d+[\\\\.|,]+\\\\d)%\", \"im\");\r\n      else regex = new RegExp(name + \"\\\\s*\\\\+\\\\s*(\\\\d+,\\\\d+|\\\\d+)($|\\\\s)\", \"im\");\r\n      let match = regex.exec(text)\r\n      match && matches.push({ value: match[1].replace(/,/g, \".\").replace(/\\.{2,}/g, \".\"), unit, key })\r\n    })\r\n  }\r\n  matches.forEach((match, i) => {\r\n    if (i >= 4) return;//this shouldn't happen, just in case\r\n    match.value = match.unit === \"%\" ? parseFloat(match.value as string) : parseInt(match.value as string)\r\n  })\r\n  let substats: Substat[] = []\r\n  for (let i = 0; i < 4; i++) {\r\n    if (matches[i]) substats.push({ key: matches[i].key, value: matches[i].value as number })\r\n    else substats.push({ key: \"\", value: 0 })\r\n  }\r\n  return substats\r\n}\r\nfunction parseMainStatKey(texts: string[]): MainStatKey | \"def\" | \"\" {\r\n  for (const text of texts)\r\n    for (const key of allMainStatKeys) {\r\n      if (text.toLowerCase().includes(Stat.getStatNameRaw(key).toLowerCase()))\r\n        return key\r\n      //use fuzzy compare on the ... Bonus texts. heal_ is included.\r\n      if (key.includes(\"_bonu\") && hammingDistance(text.replace(/\\W/g, ''), Stat.getStatNameRaw(key).replace(/\\W/g, '')) <= 1)\r\n        return key\r\n    }\r\n  return \"\"\r\n}\r\nfunction parseSetKey(texts: string[], sheets, defVal = \"\") {\r\n  //parse for sets\r\n  for (const text of texts)\r\n    for (const key of allArtifactSets)\r\n      if (hammingDistance(text.replace(/\\W/g, ''), sheets[key].name.replace(/\\W/g, '')) <= 2)\r\n        return key\r\n}\r\nfunction parseSlotKey(texts: string[]): SlotKey | undefined {\r\n  //parse for slot\r\n  for (const text of texts)\r\n    for (const key of allSlotKeys)\r\n      if (hammingDistance(text.replace(/\\W/g, ''), Artifact.slotName(key).replace(/\\W/g, '')) <= 2)\r\n        return key;\r\n}\r\n// function parseLevel(text) {\r\n//   let regex = /\\+(\\d{1,2})/\r\n//   let match = regex.exec(text)\r\n//   if (match) return parseInt(match[1])\r\n//   return NaN\r\n// }\r\nfunction parseMainStatvalue(texts: string[]): { mainStatValue: number, unit?: string } {\r\n  for (const text of texts) {\r\n    let regex = /(\\d+[,|\\\\.]+\\d)%/\r\n    let match = regex.exec(text)\r\n    if (match) return { mainStatValue: parseFloat(match[1].replace(/,/g, \".\").replace(/\\.{2,}/g, \".\")), unit: \"%\" }\r\n    regex = /(\\d+[,|\\\\.]\\d{3}|\\d{2,3})/\r\n    match = regex.exec(text)\r\n    if (match) return { mainStatValue: parseInt(match[1].replace(/[,|\\\\.]+/g, \"\")) }\r\n  }\r\n  return { mainStatValue: NaN }\r\n}\r\n\r\nasync function artifactFromImage(urlFile: string, setOtherProgress, setSubstatProgress, setArtSetProgress): Promise<[IArtifact, Dict<keyof IArtifact, Displayable>]> {\r\n  const texts = {} as Dict<keyof IArtifact, Displayable>\r\n  const imageDataObj = await urlToImageData(urlFile)\r\n  const awaits = [\r\n    // slotkey, mainStatValue, level\r\n    linesFromImage(bandPass(imageDataObj, [140, 140, 140], [255, 255, 255], { region: \"top\", mode: \"bw\" }), setOtherProgress),\r\n    // substats\r\n    linesFromImage(bandPass(imageDataObj, [30, 50, 80], [160, 160, 160], { region: \"bot\" }), setSubstatProgress),\r\n    // artifact set, look for greenish texts\r\n    linesFromImage(bandPass(imageDataObj, [30, 160, 30], [200, 255, 200], { region: \"bot\", mode: \"bw\" }), setArtSetProgress),\r\n  ]\r\n  let numStars = clamp(starScanning(imageDataObj.data, imageDataObj.width, imageDataObj.height, 5), 3, 5)\r\n  let numStarsText = <span>Detected <span className=\"text-success\">{numStars}</span> Stars.</span>\r\n\r\n  const sheets = await ArtifactSheet.getAll()\r\n  let [whiteTexts, substatTexts, artifactSetTexts] = await Promise.all(awaits)\r\n\r\n  let setKey = parseSetKey(artifactSetTexts.map(x => x.text), sheets)\r\n  let slotKey = parseSlotKey(whiteTexts.map(x => x.text))\r\n  let substats = parseSubstat(substatTexts.map(x => x.text))\r\n  let level = NaN//looks like the level isnt consistently parsed.\r\n  let mainStatKey = parseMainStatKey(whiteTexts.map(x => x.text))\r\n  let { mainStatValue, unit = \"\" } = parseMainStatvalue(whiteTexts.map(x => x.text))\r\n\r\n  const sheet = setKey ? sheets[setKey] : undefined\r\n\r\n  if (mainStatValue)\r\n    texts.mainStatVal = <span>Detected Main Stat value to be <span className=\"text-success\">{mainStatValue}{unit}</span>.</span>\r\n  else\r\n    texts.mainStatVal = <span className=\"text-warning\">Could not detect main stat value.</span>\r\n  //the main stat value is used to distinguish main stats between % and flat\r\n  if (mainStatKey === \"hp\" || mainStatKey === \"def\" || mainStatKey === \"atk\")\r\n    if (unit === \"%\" || (slotKey && Artifact.slotMainStats(slotKey).includes(`${mainStatKey}_` as MainStatKey)))\r\n      mainStatKey = `${mainStatKey}_` as any\r\n  if (slotKey && !Artifact.slotMainStats(slotKey).includes(mainStatKey as any))\r\n    mainStatKey = \"\"\r\n\r\n  if (mainStatKey)\r\n    texts.mainStatKey = <span>Detected main stat: <span className=\"text-success\">{Stat.getStatNameRaw(mainStatKey)}</span></span>\r\n\r\n  if (setKey && numStars)\r\n    if (!sheet?.rarity.includes(numStars)) {\r\n      numStars = 0;\r\n      numStarsText = <span className=\"text-danger\">Could not detect artifact rarity.</span>\r\n    }\r\n\r\n  //if main stat isnt parsed, then we try to guess it\r\n  if (slotKey && !mainStatKey) {\r\n    let stats = Artifact.slotMainStats(slotKey)\r\n    if (stats.length === 1) {\r\n      mainStatKey = stats[0]\r\n      texts.mainStatKey = <span className=\"text-warning\">Main stat was not successfully detected. Since artifact is of \"{Artifact.slotName(slotKey)}\", main stat: <span className=\"text-danger\">{Stat.getStatName(mainStatKey)}</span>.</span>\r\n    } else {\r\n      stats = stats.filter(stat => {\r\n        if (mainStatValue && unit !== Stat.getStatUnit(stat)) return false\r\n        if (substats && substats.some(substat => substat.key === stat)) return false\r\n        if (mainStatValue && numStars && level && Artifact.mainStatValue(stat, numStars, level) !== mainStatValue) return false\r\n        return true\r\n      });\r\n      if (stats.length > 0) {\r\n        mainStatKey = stats[0]\r\n        texts.mainStatKey = <span className=\"text-warning\">Main stat was not successfully detected. Inferring main stat: <span className=\"text-danger\">{Stat.getStatName(mainStatKey)}</span>.</span>\r\n      }\r\n    }\r\n  }\r\n\r\n  let guessLevel = (nStars, mainSKey, mainSVal) => {\r\n    //if level isn't parsed, then we try to guess it\r\n    let mainStatValues = Artifact.mainStatValues(nStars, mainSKey.includes(\"ele_dmg_\") ? \"ele_dmg_\" : mainSKey)\r\n    if (mainStatValues.length > 0) {\r\n      let isFloat = Stat.getStatUnit(mainSKey) === \"%\"\r\n      let testLevel = mainStatValues.findIndex(val => isFloat ? (Math.abs(mainSVal - val) < 0.1) : (mainSVal === val))\r\n      if (testLevel !== -1) {\r\n        level = testLevel\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  //guess level when we have all the stats\r\n  if (isNaN(level) && numStars && mainStatKey && mainStatValue)\r\n    guessLevel(numStars, mainStatKey, mainStatValue)\r\n  let detectedlevel = !isNaN(level)\r\n  if (!isNaN(level)) texts.level = <span>Detected level: <span className=\"text-success\">{level}</span></span>\r\n\r\n  //try to guess the level when we only have mainStatKey and mainStatValue\r\n  if (isNaN(level) && mainStatKey && mainStatValue) {\r\n    let stars = sheet?.rarity ?? allRarities\r\n    for (const nStar of stars)\r\n      if (guessLevel(nStar, mainStatKey, mainStatValue)) {\r\n        if (sheet?.rarity.includes(nStar) ?? true) {\r\n          numStars = nStar\r\n          numStarsText = <span className=\"text-warning\">Inferred <span className=\"text-success\">{numStars}</span> Stars from Artifact Set.</span>\r\n          break;\r\n        }\r\n      }\r\n  }\r\n  if (!isNaN(level) && !detectedlevel) texts.level = <span className=\"text-warning\">Inferred level: <span className=\"text-danger\">{level}</span></span>\r\n\r\n  //check level validity against numStars\r\n  if (numStars && !isNaN(level))\r\n    if (level > numStars * 4)\r\n      level = NaN\r\n\r\n  //check if the final star values are valid\r\n  numStars = clamp(numStars, 3, 5)\r\n\r\n  //if the level is not parsed at all after all the prevous steps, default it to the highest level of the star value\r\n  if (isNaN(level)) {\r\n    level = numStars * 4\r\n    texts.level = <span className=\"text-warning\">Could not detect artifact level. Default to: <span className=\"text-danger\">{level}</span></span>\r\n  }\r\n\r\n\r\n  //try to infer slotKey if could not be detected.\r\n  if (slotKey) {\r\n    texts.slotKey = <span>Detected slot name <span className=\"text-success\">{Artifact.slotName(slotKey)}</span></span>\r\n  } else if (mainStatKey) {\r\n    //infer slot name from main stat\r\n    let pieces = setKey ? Object.keys(sheet!.slotNames) as SlotKey[] : allSlotKeys\r\n    for (const testSlotKey of pieces) {\r\n      if (Artifact.slotMainStats(testSlotKey).includes(mainStatKey as any)) {\r\n        slotKey = testSlotKey;\r\n        texts.slotKey = <span className=\"text-warning\">Slot name was not successfully detected. Inferring slot name: <span className=\"text-danger\">{Artifact.slotName(slotKey)}</span>.</span>\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  let state: Partial<IArtifact> = {}\r\n  if (!isNaN(level)) state.level = level\r\n\r\n  if (setKey) {\r\n    state.setKey = setKey as any\r\n    texts.setKey = <span>Detected set <span className=\"text-success\">{sheet?.name}</span></span>\r\n  } else\r\n    texts.setKey = <span className=\"text-danger\">Could not detect artifact set name.</span>\r\n\r\n  if (slotKey) {\r\n    state.slotKey = slotKey\r\n  } else {\r\n    texts.slotKey = <span className=\"text-danger\">Could not detect slot name.</span>\r\n  }\r\n\r\n  if (substats) {\r\n    state.substats = substats\r\n    let len = substats.reduce((accu, substat) => accu + (substat.key ? 1 : 0), 0)\r\n    let { low } = Artifact.rollInfo(numStars)\r\n    if (numStars && len < low)\r\n      texts.substats = <span className=\"text-warning\">Detected {len} substats, but there should be at least {low} substats.</span>\r\n    else\r\n      texts.substats = <span>Detected <span className=\"text-success\">{len}</span> substats.</span>\r\n  } else\r\n    texts.substats = <span className=\"text-danger\">Could not detect any substats.</span>\r\n\r\n  if (numStars) {\r\n    state.numStars = numStars\r\n    texts.numStars = numStarsText\r\n  }\r\n  if (mainStatKey) {\r\n    state.mainStatKey = mainStatKey as any\r\n  } else\r\n    texts.mainStatKey = <span className=\"text-danger\">Could not detect main stat.</span>\r\n\r\n  return [state as IArtifact, texts]\r\n}\r\n\r\nasync function linesFromImage(imageDataObj: ImageData, setProgress): Promise<Tesseract.Line[]> {\r\n  const tworker = createWorker({\r\n    logger: ({ progress, status }) => {\r\n      if (status === \"loading tesseract core\")\r\n        setProgress({ now: progress * 5 + 0, variant: \"danger\" })\r\n      else if (status.includes(\"loading language traineddata\"))\r\n        setProgress({ now: progress * 5 + 5, variant: \"warning\" })\r\n      else if (status.includes(\"initializing api\"))\r\n        setProgress({ now: progress * 5 + 10, variant: \"info\" })\r\n      else if (status === \"recognizing text\")\r\n        setProgress({ now: progress * 85 + 15, variant: \"success\" })\r\n    },\r\n    errorHandler: console.error\r\n  })\r\n  await tworker.load()\r\n  await tworker.loadLanguage('eng')\r\n  await tworker.initialize('eng')\r\n\r\n  const imageURL = imageDataToURL(imageDataObj)\r\n  const rec = await tworker.recognize(imageURL)\r\n  await tworker.terminate()\r\n  return rec.data.lines\r\n}\r\nfunction bandPass(pixelData: ImageData, color1: Color, color2: Color, options: { region?: \"top\" | \"bot\" | \"all\", mode?: \"bw\" | \"color\" | \"invert\" }) {\r\n  const { region = \"all\", mode = \"color\" } = options\r\n  const d = Uint8ClampedArray.from(pixelData.data)\r\n  const top = region === \"top\", bot = region === \"bot\", all = region === \"all\"\r\n  const bw = mode === \"bw\", invert = mode === \"invert\"\r\n  const halfInd = Math.floor(pixelData.width * (pixelData.height / 2) * 4)\r\n  for (let i = 0; i < d.length; i += 4) {\r\n    const r = d[i], g = d[i + 1], b = d[i + 2];\r\n    if ((all || (top && i < halfInd) || (bot && i > halfInd)) &&\r\n      r >= color1[0] && r <= color2[0] &&\r\n      g >= color1[1] && g <= color2[1] &&\r\n      b >= color1[2] && b <= color2[2]) {\r\n      if (bw) d[i] = d[i + 1] = d[i + 2] = 0\r\n      else if (invert) {\r\n        d[i] = 255 - r\r\n        d[i + 1] = 255 - g\r\n        d[i + 2] = 255 - b\r\n      } // else orignal color\r\n    } else {\r\n      d[i] = d[i + 1] = d[i + 2] = 255\r\n    }\r\n  }\r\n  return new ImageData(d, pixelData.width, pixelData.height)\r\n}\r\n\r\ntype Color = [number, number, number] // RGB\r\n","import { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useMemo, useReducer } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Dropdown, DropdownButton, FormControl, InputGroup, OverlayTrigger, Popover, Row } from 'react-bootstrap';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { allSubstats, IArtifact, Substat, SubstatKey } from '../Types/artifact';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport { clamp, deepClone, getRandomElementFromArray, getRandomIntInclusive } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport ArtifactCard from './ArtifactCard';\r\nimport PercentBadge from './PercentBadge';\r\nimport UploadDisplay from './UploadDisplay';\r\nimport { allArtifactSets, Rarity, SlotKey } from '../Types/consts';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport { usePromise } from '../Util/ReactUtil';\r\n\r\nlet uploadDisplayReset\r\nexport default function ArtifactEditor({ artifactIdToEdit, cancelEdit }) {\r\n  const [artifact, artifactDispatch] = useReducer(artifactReducer, undefined)\r\n  const artifactInEditor = useMemo(() => !ArtifactDatabase.isInvalid(artifact), [artifact])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const sheet = artifact ? artifactSheets?.[artifact.setKey] : undefined\r\n\r\n  useEffect(() => {\r\n    if (artifactIdToEdit && artifactIdToEdit !== artifact?.id)\r\n      artifactDispatch({ type: \"overwrite\", artifact: deepClone(ArtifactDatabase.get(artifactIdToEdit)) })\r\n  }, [artifactIdToEdit, artifact?.id])\r\n\r\n  const getUpdloadDisplayReset = reset => uploadDisplayReset = reset\r\n\r\n  const reset = () => {\r\n    cancelEdit?.();\r\n    uploadDisplayReset?.()\r\n    artifactDispatch({ type: \"reset\" })\r\n  }\r\n  const update = (newValue: Partial<IArtifact>) => {\r\n    const newSheet = newValue.setKey ? artifactSheets![newValue.setKey] : sheet!\r\n\r\n    function pick<T>(value: T | undefined, available: readonly T[], prefer?: T): T {\r\n      return (value && available.includes(value)) ? value : (prefer ?? available[0])\r\n    }\r\n\r\n    if (newValue.setKey) {\r\n      newValue.numStars = pick(artifact?.numStars, newSheet.rarity, Math.max(...newSheet.rarity) as Rarity)\r\n      newValue.slotKey = pick(artifact?.slotKey, Object.keys(newSheet.slotNames))\r\n    }\r\n    if (newValue.numStars)\r\n      newValue.level = artifact?.level ?? 0\r\n    if (newValue.level)\r\n      newValue.level = clamp(newValue.level, 0, 4 * (newValue.numStars ?? artifact!.numStars))\r\n    if (newValue.slotKey)\r\n      newValue.mainStatKey = pick(artifact?.mainStatKey, Artifact.slotMainStats(newValue.slotKey))\r\n\r\n    if (newValue.mainStatKey) {\r\n      newValue.substats = [0, 1, 2, 3].map(i =>\r\n        (artifact && artifact.substats[i].key !== newValue.mainStatKey) ? artifact!.substats[i] : { key: \"\", value: 0 })\r\n    }\r\n    artifactDispatch({ type: \"update\", artifact: newValue })\r\n  }\r\n  const setSubstat = (index: number, substat: Substat) => {\r\n    artifactDispatch({ type: \"substat\", index, substat })\r\n  }\r\n\r\n  const { dupId, isDup } = useMemo(() => checkDuplicate(artifact), [artifact])\r\n  const { numStars = 5, level = 0, slotKey = \"flower\" } = artifact ?? {}\r\n  const errMsgs = artifact ? Artifact.substatsValidation(artifact) : []\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header>Artifact Editor</Card.Header>\r\n    <Card.Body>\r\n      <Row>\r\n        {/* Left column */}\r\n        <Col xs={12} lg={6}>\r\n          {/* set & rarity */}\r\n          <InputGroup className=\"w-100 d-flex mb-2\">\r\n            {/* Artifact Set */}\r\n            <Dropdown as={InputGroup.Prepend} className=\"flex-grow-1\">\r\n              <Dropdown.Toggle className=\"w-100\" variant={artifact ? \"success\" : \"primary\"}>\r\n                {sheet?.name ?? \"Artifact Set\"}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                {artifactSheets && ArtifactSheet.namesByMaxRarities(artifactSheets).map(([rarity, sets], i) =>\r\n                  <React.Fragment key={rarity}>\r\n                    {i > 0 && <Dropdown.Divider />}\r\n                    <Dropdown.ItemText>Max Rarity <Stars stars={rarity} /></Dropdown.ItemText>\r\n                    {sets.map(([setKey, name]) =>\r\n                      <Dropdown.Item key={setKey} onClick={() => update({ setKey })}>\r\n                        {name}\r\n                      </Dropdown.Item >)}\r\n                  </React.Fragment>)}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            {/* rarity dropdown */}\r\n            <DropdownButton as={InputGroup.Append} title={artifact ? <Stars stars={numStars} /> : \"Rarity\"} disabled={!sheet} variant={artifact ? \"success\" : \"primary\"}>\r\n              {([5, 4, 3] as Rarity[]).map((numStars, index) => <Dropdown.Item key={index} disabled={!sheet?.rarity.includes(numStars)} onClick={() => update({ numStars })}>\r\n                {<Stars stars={numStars} />}\r\n              </Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </InputGroup>\r\n\r\n          {/* level */}\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Level</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <CustomFormControl value={level} disabled={!sheet} placeholder={`0~${numStars * 4}`} onChange={l => update({ level: l })} />\r\n            <InputGroup.Append>\r\n              <Button onClick={() => update({ level: 0 })} disabled={!sheet || level === 0}>0</Button>\r\n              <Button onClick={() => update({ level: level - 1 })} disabled={!sheet || level === 0}>-</Button>\r\n              <Button onClick={() => update({ level: level + 1 })} disabled={!sheet || level === (numStars * 4)}>+</Button>\r\n              <Button onClick={() => update({ level: numStars * 4 })} disabled={!sheet || level === (numStars * 4)}>{numStars * 4}</Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n\r\n          {/* slot */}\r\n          <InputGroup className=\"mb-2\">\r\n            <DropdownButton\r\n              title={Artifact.slotNameWithIcon(slotKey)}\r\n              disabled={!sheet}\r\n              variant={artifact ? \"success\" : \"primary\"}\r\n              as={InputGroup.Prepend}\r\n            >\r\n              {Object.keys(sheet?.slotNames ?? {}).map((sKey: SlotKey) =>\r\n                <Dropdown.Item key={sKey as any} onClick={() => update({ slotKey: sKey })} >\r\n                  {Artifact.slotNameWithIcon(sKey)}\r\n                </Dropdown.Item>)}\r\n            </DropdownButton>\r\n            <FormControl\r\n              value={sheet?.slotNames[artifact!.slotKey] ?? \"Unknown Piece Name\"}\r\n              disabled\r\n              readOnly\r\n            />\r\n          </InputGroup>\r\n\r\n          {/* main stat */}\r\n          <InputGroup className=\"mb-2\">\r\n            <DropdownButton\r\n              title={<b>{artifact ? Stat.getStatNameWithPercent(artifact.mainStatKey) : \"Main Stat\"}</b>}\r\n              disabled={!sheet}\r\n              variant={artifact ? \"success\" : \"primary\"}\r\n              as={InputGroup.Prepend}\r\n            >\r\n              <Dropdown.ItemText>Select a Main Artifact Stat </Dropdown.ItemText>\r\n              {Artifact.slotMainStats(slotKey).map(mainStatK =>\r\n                <Dropdown.Item key={mainStatK} onClick={() => update({ mainStatKey: mainStatK })} >\r\n                  {Stat.getStatNameWithPercent(mainStatK)}\r\n                </Dropdown.Item>)}\r\n            </DropdownButton>\r\n            <FormControl\r\n              value={artifact ? `${Artifact.mainStatValue(artifact.mainStatKey, numStars, level)}${Stat.getStatUnit(artifact.mainStatKey)}` : \"Main Stat\"}\r\n              disabled\r\n              readOnly\r\n            />\r\n          </InputGroup>\r\n\r\n          {/* Current Substat Efficiency */}\r\n          <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n            <Card.Body className=\"py-1 px-2\">\r\n              <Row>\r\n                <Col className=\"text-center\"><span >Current Substat Efficiency </span></Col>\r\n                <Col xs=\"auto\">\r\n                  <PercentBadge valid={!errMsgs.length} value={errMsgs.length ? \"ERR\" : (artifact?.currentEfficiency ?? 0)} />\r\n                  <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={<Popover id=\"current-efficiency\">\r\n                      <Popover.Title as=\"h5\">Current Substat Efficiency</Popover.Title>\r\n                      <Popover.Content>\r\n                        <span>Every 4 artifact upgrades, you get a substat roll. <strong>Substat Efficiency</strong> calculates how high the substat rolled as a percentage.</span>\r\n                      </Popover.Content>\r\n                    </Popover>}\r\n                  >\r\n                    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n                  </OverlayTrigger>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          {/* Maximum Substat Efficiency */}\r\n          <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n            <Card.Body className=\"py-1 px-2\">\r\n              <Row>\r\n                <Col className=\"text-center\"><span>Maximum Substat Efficiency </span></Col>\r\n                <Col xs=\"auto\">\r\n                  <PercentBadge valid={!errMsgs.length} value={errMsgs.length ? \"ERR\" : (artifact?.maximumEfficiency ?? 0)} />\r\n                  <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={<Popover id=\"max-efficiency\">\r\n                      <Popover.Title as=\"h5\">Maximum Substat Efficiency</Popover.Title>\r\n                      <Popover.Content>\r\n                        <span>The <strong>Maximum Substat Efficiency</strong> of an artifact calculates the efficiency if the remaining upgrades rolled their maximum values.</span>\r\n                      </Popover.Content>\r\n                    </Popover>}\r\n                  >\r\n                    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n                  </OverlayTrigger>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Right column */}\r\n        <Col xs={12} lg={6}>\r\n          {/* substat selections */}\r\n          {[0, 1, 2, 3].map((index) =>\r\n            <SubstatInput key={\"substat\" + index} className=\"mb-2\" {...{ index, artifact, setSubstat }} />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-n2\">\r\n        {/* Image OCR */}\r\n        <Col xs={12} className=\"mb-2\">\r\n          {/* TODO: artifactDispatch not overwrite */}\r\n          <UploadDisplay setState={state => artifactDispatch({ type: \"overwrite\", artifact: state })} setReset={getUpdloadDisplayReset} artifactInEditor={artifactInEditor} />\r\n        </Col>\r\n        {/* Duplicate/Updated/Edit UI */}\r\n        {(dupId || artifact?.id) && <Col xs={12} className=\"mb-2\">\r\n          <Row className=\"d-flex justify-content-around mb-n2\">\r\n            <Col lg={4} md={6} className=\"mb-2\">\r\n              <h6 className=\"text-center\">Artifact Editor Preview</h6>\r\n              <div><ArtifactCard artifactObj={artifact} /></div>\r\n            </Col>\r\n            <Col lg={4} md={6} className=\"mb-2\">\r\n              <h6 className=\"text-center\">{dupId ? `Detected ${isDup ? \"Duplicate\" : \"Upgraded\"} Artifact` : `Before Edit`}</h6>\r\n              <div><ArtifactCard artifactId={dupId || artifact?.id} /></div>\r\n            </Col>\r\n          </Row>\r\n        </Col>}\r\n        {/* Error alert */}\r\n        {Boolean(errMsgs.length) && <Col xs={12} className=\"mb-2\">\r\n          <Alert variant=\"danger\" className=\"py-2 px-3 mb-0 \">{errMsgs.map((e, i) => <div key={i}>{e}</div>)}</Alert>\r\n        </Col>}\r\n      </Row></Card.Body>\r\n    <Card.Footer>\r\n      <Button className=\"mr-2\" onClick={() => { saveArtifact(artifact!, artifact!.id); reset() }} disabled={ArtifactDatabase.isInvalid(artifact) || errMsgs.length} variant={dupId ? \"warning\" : \"primary\"}>\r\n        {artifact?.id ? \"Save Artifact\" : \"Add Artifact\"}\r\n      </Button>\r\n      <Button className=\"mr-2\" disabled={!artifactInEditor} onClick={() => { canClearArtifact() && reset() }} variant=\"success\">Clear</Button>\r\n      {process.env.NODE_ENV === \"development\" && <Button variant=\"info\" onClick={async () => artifactDispatch({ type: \"overwrite\", artifact: await randomizeArtifact() })}>Randomize</Button>}\r\n      {Boolean(dupId) && <Button className=\"float-right\" onClick={() => { saveArtifact(artifact!, dupId); reset() }} disabled={ArtifactDatabase.isInvalid(artifact) || errMsgs.length} variant=\"success\">Update Artifact</Button>}\r\n    </Card.Footer>\r\n  </Card >\r\n}\r\n\r\nfunction SubstatInput({ index, artifact, setSubstat, className }: { index: number, artifact: IArtifact | undefined, setSubstat: (index: number, substat: Substat) => void, className }) {\r\n  const { mainStatKey = \"\", substats = [] } = artifact ?? {}\r\n  const { key = \"\", value = 0, rolls = [], efficiency = 0 } = artifact?.substats[index] ?? {}\r\n\r\n  const accurateValue = rolls.reduce((a, b) => a + b, 0)\r\n  const unit = Stat.getStatUnit(key), rollNum = rolls.length\r\n\r\n  let error: string = \"\", rollData: number[] = [], allowedRolls = 0, rollLabel: Displayable | null = null\r\n\r\n  if (artifact) {\r\n    //account for the rolls it will to fill all 4 substates, +1 for its base roll\r\n    const numStars = artifact.numStars\r\n    const { numUpgrades, high } = Artifact.rollInfo(numStars)\r\n    const maxRollNum = numUpgrades + high - 3;\r\n    allowedRolls = maxRollNum - rollNum\r\n    rollData = Artifact.getSubstatRollData(key, numStars)\r\n  }\r\n  const rollOffset = 7 - rollData.length\r\n\r\n  if (!rollNum && key && value) error = error || `Cannot calculate stat rolls.`\r\n  if (allowedRolls < 0) error = error || `Substat cannot be rolled more than ${allowedRolls + rollNum} times.`\r\n\r\n  if (!error) {\r\n    const rollBadge = <Badge variant={rollNum === 0 ? \"secondary\" : `${rollNum}roll`} className=\"text-darkcontent\">\r\n      {rollNum ? rollNum : \"No\"} Roll{(rollNum > 1 || rollNum === 0) && \"s\"}\r\n    </Badge>\r\n    const rollArr = rolls.map((val, i) =>\r\n      <span key={i} className={`mr-2 text-${rollOffset + rollData.indexOf(val)}roll`}>{valueString(val, unit)}</span>)\r\n\r\n    rollLabel = <Row>\r\n      <Col>{rollBadge} {rollArr}</Col>\r\n      <Col xs=\"auto\">Efficiency: <PercentBadge valid={true} value={efficiency ? efficiency : \"No Stat\"} /></Col>\r\n    </Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className={className}>\r\n    <InputGroup>\r\n      <DropdownButton\r\n        title={Stat.getStatNameWithPercent(key, `Substat ${index + 1}`)}\r\n        disabled={!artifact}\r\n        variant={key ? \"success\" : \"primary\"}\r\n        as={InputGroup.Prepend}\r\n      >\r\n        {Boolean(key) && <Dropdown.Item key={key} onClick={() => setSubstat(index, { key: \"\", value: 0 })}>No Substat</Dropdown.Item>}\r\n        {allSubstats\r\n          .filter(key => mainStatKey !== key && substats.every(other => other.key !== key))\r\n          .map(key =>\r\n            <Dropdown.Item key={key} onClick={() => setSubstat(index, { key, value: 0 })} >\r\n              {Stat.getStatNameWithPercent(key)}\r\n            </Dropdown.Item>\r\n          )}\r\n      </DropdownButton>\r\n      <CustomFormControl\r\n        float={unit === \"%\"}\r\n        placeholder=\"Select a Substat.\"\r\n        value={key ? value : \"\"}\r\n        onChange={(value) => setSubstat(index, { key, value })}\r\n        disabled={!key}\r\n        allowEmpty\r\n      />\r\n      {<ButtonGroup size=\"sm\" as={InputGroup.Append}>\r\n        {rollData.map((v, i) => {\r\n          const newValue = valueString(accurateValue + v, unit)\r\n          return <Button key={i} variant={`${rollOffset + i}roll`} className=\"py-0 text-darkcontent\" disabled={(value && !rollNum) || allowedRolls <= 0} onClick={() => setSubstat(index, { key, value: parseFloat(newValue) })}>{newValue}</Button>\r\n        })}\r\n      </ButtonGroup>}\r\n    </InputGroup>\r\n    <div className=\"p-1\">{error && <Badge variant=\"danger\">ERR</Badge>}{error || rollLabel}</div>\r\n  </Card >\r\n}\r\n\r\ntype ResetMessage = { type: \"reset\" }\r\ntype SubstatMessage = { type: \"substat\", index: number, substat: Substat }\r\ntype OverwriteMessage = { type: \"overwrite\", artifact: IArtifact }\r\ntype UpdateMessage = { type: \"update\", artifact: Partial<IArtifact> }\r\ntype Message = ResetMessage | SubstatMessage | OverwriteMessage | UpdateMessage\r\nexport function artifactReducer(state: IArtifact | undefined, action: Message): IArtifact | undefined {\r\n  switch (action.type) {\r\n    case \"reset\": return\r\n    case \"substat\": {\r\n      const { index, substat } = action\r\n      state!.substats[index] = substat\r\n      return { ...state! }\r\n    }\r\n    case \"overwrite\": return action.artifact\r\n    case \"update\": return { ...state!, ...action.artifact }\r\n  }\r\n}\r\n\r\nfunction checkDuplicate(editorArt: IArtifact | undefined): { dupId?: string, isDup: boolean } {\r\n  if (!editorArt) return { isDup: false }\r\n  const { id, setKey, numStars, level, slotKey, mainStatKey, substats } = editorArt\r\n  if (id) return { isDup: false }\r\n\r\n  //check for a \"upgrade\" or duplicate\r\n  const artifacts = Object.values(ArtifactDatabase.getArtifactDatabase()).filter(candidate =>\r\n    setKey === candidate.setKey &&\r\n    numStars === candidate.numStars &&\r\n    slotKey === candidate.slotKey &&\r\n    mainStatKey === candidate.mainStatKey &&\r\n    level >= candidate.level &&\r\n    candidate.substats.every(candidateSubstat =>\r\n      !candidateSubstat.key || substats.some(substat =>\r\n        substat.key === candidateSubstat.key &&\r\n        substat.value >= candidateSubstat.value\r\n      )))\r\n  if (!artifacts.length) return { isDup: false }\r\n\r\n  const dupArtifacts = artifacts.filter(candidate =>\r\n    level === candidate.level &&\r\n    substats.every(substat =>\r\n      !substat.key || candidate.substats.some(candidateSubstat =>\r\n        substat.key === candidateSubstat.key &&\r\n        substat.value === candidateSubstat.value\r\n      )))\r\n\r\n  const dupId = dupArtifacts[0]?.id! ?? artifacts[0].id!\r\n  return { dupId, isDup: dupArtifacts.length > 0 }\r\n}\r\n\r\nasync function randomizeArtifact(): Promise<IArtifact> {\r\n  const set = getRandomElementFromArray(allArtifactSets)\r\n  const sheet = await ArtifactSheet.get(set)!\r\n  const rarity = getRandomElementFromArray(sheet.rarity)\r\n  const slot = getRandomElementFromArray(Object.keys(sheet.slotNames))\r\n  const mainStatKey = getRandomElementFromArray(Artifact.slotMainStats(slot))\r\n  const level = getRandomIntInclusive(0, rarity * 4)\r\n  const substats: Substat[] = [0, 1, 2, 3].map(i => ({ key: \"\", value: 0 }))\r\n\r\n  const { low, high } = Artifact.rollInfo(rarity)\r\n  const totRolls = Math.floor(level / 4) + getRandomIntInclusive(low, high)\r\n  const numOfInitialSubstats = Math.min(totRolls, 4)\r\n  const numUpgradesOrUnlocks = totRolls - numOfInitialSubstats\r\n\r\n  const RollStat = (substat: SubstatKey): number =>\r\n    getRandomElementFromArray(Artifact.getSubstatRollData(substat, rarity))\r\n\r\n  let remainingSubstats = allSubstats.filter(key => mainStatKey !== key)\r\n  for (const substat of substats.slice(0, numOfInitialSubstats)) {\r\n    substat.key = getRandomElementFromArray(remainingSubstats)\r\n    substat.value = RollStat(substat.key)\r\n    remainingSubstats = remainingSubstats.filter(key => key !== substat.key)\r\n  }\r\n  for (let i = 0; i < numUpgradesOrUnlocks; i++) {\r\n    let substat = getRandomElementFromArray(substats)\r\n    substat.value += RollStat(substat.key as any)\r\n  }\r\n  for (const substat of substats)\r\n    if (substat.key)\r\n      substat.value = parseFloat(valueString(substat.value, Stat.getStatUnit(substat.key)))\r\n\r\n  return {\r\n    setKey: set, numStars: rarity, slotKey: slot, mainStatKey, level, substats, mainStatVal: Artifact.mainStatValue(mainStatKey, rarity, level)!, location: \"\", lock: false\r\n  }\r\n}\r\n\r\nconst saveArtifact = (artifact: IArtifact, id: string | undefined) => {\r\n  const artToSave = deepClone(artifact)\r\n  if (id) {\r\n    const art = ArtifactDatabase.get(id)\r\n    if (art) {\r\n      artToSave.id = art.id\r\n      artToSave.location = art.location\r\n    }\r\n  }\r\n  ArtifactDatabase.update(artToSave)\r\n}\r\nconst canClearArtifact = (): boolean => window.confirm(\"There is an artifact in editor. Are you sure you want to clear the editor?\")\r\n","import { faCheckSquare, faLock, faLockOpen, faSortAmountDownAlt, faSortAmountUp, faSquare, faTrash, faUndo, faUserSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Dropdown, InputGroup, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ReactGA from 'react-ga';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport InfoComponent from '../InfoComponent';\r\nimport Stat from '../Stat';\r\nimport { allMainStatKeys } from '../Types/artifact';\r\nimport { allArtifactRarities, allSlotKeys } from '../Types/consts';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { clamp, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport ArtifactCard from './ArtifactCard';\r\nimport ArtifactEditor from './ArtifactEditor';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\n\r\nconst ArtifactDisplayInfo = React.lazy(() => import('./ArtifactDisplayInfo'));\r\nconst sortMap = {\r\n  quality: \"Quality\",\r\n  level: \"Level\",\r\n  efficiency: \"Current Substat Eff.\",\r\n  mefficiency: \"Maximum Substat Eff.\"\r\n}\r\n\r\nconst initialFilter = () => ({\r\n  filterArtSetKey: \"\",\r\n  filterStars: [3, 4, 5],\r\n  filterLevelLow: 0,\r\n  filterLevelHigh: 20,\r\n  filterSlotKey: \"\",\r\n  filterMainStatKey: \"\",\r\n  filterSubstats: [\"\", \"\", \"\", \"\"],\r\n  filterLocation: \"\",\r\n  filterLocked: \"\",\r\n  ascending: false,\r\n  sortType: Object.keys(sortMap)[0],\r\n  maxNumArtifactsToDisplay: 50\r\n})\r\nfunction filterReducer(state, action) {\r\n  if (action.type === \"reset\") return initialFilter()\r\n  return { ...state, ...action }\r\n}\r\nfunction filterInit(initial = initialFilter()) {\r\n  return { ...initial, ...(loadFromLocalStorage(\"ArtifactDisplay.state\") ?? {}) }\r\n}\r\nexport default function ArtifactDisplay(props) {\r\n  const [filters, filterDispatch] = useReducer(filterReducer, initialFilter(), filterInit)\r\n  const [artToEditId, setartToEditId] = useState(props?.location?.artToEditId)\r\n  const [pageIdex, setpageIdex] = useState(0)\r\n  const scrollRef = useRef(null)\r\n  const invScrollRef = useRef(null)\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const deleteArtifact = useCallback(\r\n    id => {\r\n      const art = ArtifactDatabase.get(id);\r\n      if (art && art.location)\r\n        CharacterDatabase.unequipArtifactOnSlot(art.location, art.slotKey);\r\n      ArtifactDatabase.removeArtifactById(id)\r\n    }, [])\r\n  const editArtifact = useCallback(\r\n    id => {\r\n      setartToEditId(id);\r\n      (scrollRef?.current as any)?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, [])\r\n  const cancelEditArtifact = useCallback(() => setartToEditId(null), [])\r\n\r\n  useEffect(() => {\r\n    ReactGA.pageview('/artifact')\r\n    ArtifactDatabase.registerListener(forceUpdate)\r\n    return () => ArtifactDatabase.unregisterListener(forceUpdate)\r\n  }, [forceUpdate])\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage(\"ArtifactDisplay.state\", filters)\r\n  }, [filters])\r\n\r\n  const { artifacts, totalArtNum, numUnequip, numUnlock, numLock } = useMemo(() => {\r\n    const { filterArtSetKey, filterSlotKey, filterMainStatKey, filterStars, filterLevelLow, filterLevelHigh, filterSubstats = initialFilter().filterSubstats, filterLocation = \"\", filterLocked = \"\", sortType = Object.keys(sortMap)[0], ascending = false } = filters\r\n    const artifactDB = ArtifactDatabase.getArtifactDatabase() || {}\r\n    const artifacts = Object.values(artifactDB).filter(art => {\r\n      if (filterLocked) {\r\n        if (filterLocked === \"locked\" && !art.lock) return false\r\n        if (filterLocked === \"unlocked\" && art.lock) return false\r\n      }\r\n      if (filterLocation === \"Inventory\") {\r\n        if (art.location) return false;\r\n      } else if (filterLocation === \"Equipped\") {\r\n        if (!art.location) return false;\r\n      } else if (filterLocation && filterLocation !== art.location) return false;\r\n\r\n      if (filterArtSetKey && filterArtSetKey !== art.setKey) return false;\r\n      if (filterSlotKey && filterSlotKey !== art.slotKey) return false\r\n      if (filterMainStatKey && filterMainStatKey !== art.mainStatKey) return false\r\n      if (art.level < filterLevelLow || art.level > filterLevelHigh) return false;\r\n      if (!filterStars.includes(art.numStars)) return false;\r\n      for (const filterKey of filterSubstats)\r\n        if (filterKey && !art.substats.some(substat => substat.key === filterKey)) return false;\r\n      return true\r\n    }).sort((a, b) => {\r\n      let sortNum = 0\r\n      switch (sortType) {\r\n        case \"quality\":\r\n          sortNum = a.numStars - b.numStars\r\n          if (sortNum === 0)\r\n            sortNum = a.level - b.level\r\n          break;\r\n        case \"level\":\r\n          sortNum = a.level - b.level\r\n          if (sortNum === 0)\r\n            sortNum = a.numStars - b.numStars\r\n          break;\r\n        case \"efficiency\":\r\n          sortNum = a.currentEfficiency! - b.currentEfficiency!\r\n          break;\r\n        case \"mefficiency\":\r\n          sortNum = a.maximumEfficiency! - b.maximumEfficiency!\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return sortNum * (ascending ? 1 : -1)\r\n    })\r\n    const numUnequip = artifacts.reduce((a, art) => a + (art.location ? 1 : 0), 0)\r\n    const numUnlock = artifacts.reduce((a, art) => a + (art.lock ? 1 : 0), 0)\r\n    const numLock = artifacts.length - numUnlock\r\n\r\n    return { artifacts, totalArtNum: Object.keys(artifactDB)?.length || 0, numUnequip, numUnlock, numLock, ...dbDirty }//use dbDirty to shoo away warnings!\r\n  }, [filters, dbDirty])\r\n\r\n  const { filterArtSetKey, filterSlotKey, filterMainStatKey, filterStars, filterLevelLow, filterLevelHigh, filterSubstats = initialFilter().filterSubstats, maxNumArtifactsToDisplay, filterLocation = \"\", filterLocked = \"\", sortType = Object.keys(sortMap)[0], ascending = false } = filters\r\n\r\n  const { artifactsToShow, numPages, currentPageIndex } = useMemo(() => {\r\n    const numPages = Math.ceil(artifacts.length / maxNumArtifactsToDisplay)\r\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\r\n    return { artifactsToShow: artifacts.slice(currentPageIndex * maxNumArtifactsToDisplay, (currentPageIndex + 1) * maxNumArtifactsToDisplay), numPages, currentPageIndex }\r\n  }, [artifacts, pageIdex, maxNumArtifactsToDisplay])\r\n\r\n  const locationCharacterSheet = usePromise(CharacterSheet.get(filterLocation))\r\n  let locationDisplay\r\n  if (!filterLocation) locationDisplay = <span>Location: Any</span>\r\n  else if (filterLocation === \"Inventory\") locationDisplay = <span>Location: Inventory</span>\r\n  else if (filterLocation === \"Equipped\") locationDisplay = <span>Location: Equipped</span>\r\n  else locationDisplay = <b>{locationCharacterSheet?.name}</b>\r\n\r\n  let lockedDisplay\r\n  if (filterLocked === \"locked\") lockedDisplay = <span><FontAwesomeIcon icon={faLock} /> Locked</span>\r\n  else if (filterLocked === \"unlocked\") lockedDisplay = <span><FontAwesomeIcon icon={faLockOpen} /> Unlocked</span>\r\n  else lockedDisplay = <span>Locked: Any</span>\r\n\r\n  const unequipArtifacts = () =>\r\n    window.confirm(`Are you sure you want to unequip ${numUnequip} artifacts currently equipped on characters?`) &&\r\n    artifacts.map(art => Artifact.unequipArtifact(art.id))\r\n\r\n  const deleteArtifacts = () =>\r\n    window.confirm(`Are you sure you want to delete ${artifacts.length} artifacts?`) &&\r\n    artifacts.map(art => ArtifactDatabase.removeArtifactById(art.id))\r\n\r\n  const lockArtifacts = () =>\r\n    window.confirm(`Are you sure you want to lock ${numLock} artifacts?`) &&\r\n    artifacts.map(art => ArtifactDatabase.setLocked(art.id, true))\r\n\r\n  const unlockArtifacts = () =>\r\n    window.confirm(`Are you sure you want to unlock ${numUnlock} artifacts?`) &&\r\n    artifacts.map(art => ArtifactDatabase.setLocked(art.id, false))\r\n\r\n\r\n  return <Container className=\"mt-2\" >\r\n    <InfoComponent\r\n      pageKey=\"artifactPage\"\r\n      modalTitle=\"Artifact Editing/Management Page Info\"\r\n      text={[\"The maximum efficiency of a 4 star artifact is around 60%.\",\r\n        \"The maximum efficiency of an artifact will usually decrease as you upgrade. It's perfectly normal!\",\r\n        \"Substats with \\\"1\\\"s are the hardest to scan in screenshots.\",\r\n        \"If all your rolls(6) went into a single substat, it will be purple!\",\r\n        \"Click on \\\"Details\\\" when you are upgrading your artifacts in game to scan as you upgrade.\",\r\n        \"You can now upload mutiple artifact screenshots to scan!\"] as any}\r\n    >\r\n      <ArtifactDisplayInfo />\r\n    </InfoComponent>\r\n    <div className=\"mb-2\" ref={scrollRef}>\r\n      <ArtifactEditor\r\n        artifactIdToEdit={artToEditId}\r\n        cancelEdit={cancelEditArtifact}\r\n      />\r\n    </div>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\" ref={invScrollRef}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col><span>Artifact Filter</span></Col>\r\n          <Col xs=\"auto\"><Button size=\"sm\" className=\"ml-2\" variant=\"danger\" onClick={() => filterDispatch({ type: \"reset\" })} ><FontAwesomeIcon icon={faUndo} className=\"fa-fw\" /> Reset Filters</Button></Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-n2\">\r\n          {/* Left half */}\r\n          <Col xs={12} lg={6}>\r\n            {/* Artifact set filter */}\r\n            <Dropdown as={InputGroup.Prepend} className=\"flex-grow-1 mb-2\">\r\n              <Dropdown.Toggle className=\"w-100\" variant={filterArtSetKey ? \"success\" : \"primary\"}>\r\n                {artifactSheets?.[filterArtSetKey]?.name ?? \"Artifact Set\"}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => filterDispatch({ filterArtSetKey: \"\" })}>Unselect</Dropdown.Item>\r\n                {artifactSheets && ArtifactSheet.namesByMaxRarities(artifactSheets).map(([star, sets]) =>\r\n                  <React.Fragment key={star}>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.ItemText>Max Rarity <Stars stars={star} /></Dropdown.ItemText>\r\n                    {sets.map(([key, name]) =>\r\n                      <Dropdown.Item key={key} onClick={() => filterDispatch({ filterArtSetKey: key })}>\r\n                        {name}\r\n                      </Dropdown.Item>)}\r\n                  </React.Fragment>\r\n                )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            {/* Artifact stars filter */}\r\n            <ToggleButtonGroup className=\"w-100 d-flex mb-2\" type=\"checkbox\" as={InputGroup.Append} onChange={(e) => filterDispatch({ filterStars: e })} value={filterStars}>\r\n              {allArtifactRarities.map(star => {\r\n                let selected = filterStars.includes(star)\r\n                return <ToggleButton key={star} value={star} variant={selected ? \"success\" : \"primary\"}><FontAwesomeIcon icon={selected ? faCheckSquare : faSquare} /> <Stars stars={star} /></ToggleButton>\r\n              })}\r\n            </ToggleButtonGroup>\r\n\r\n            {/* Artiface level filter */}\r\n            <InputGroup className=\"mb-2\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><span>Level <span className={`text-${filterLevelLow > 0 ? \"success\" : \"\"}`}>Low</span>/<span className={`text-${filterLevelHigh < 20 ? \"success\" : \"\"}`}>High</span> (Inclusive)</span></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <CustomFormControl\r\n                value={filterLevelLow}\r\n                placeholder={`Min Level`}\r\n                onChange={val => filterDispatch({ filterLevelLow: clamp(val, 0, filterLevelHigh) })}\r\n              />\r\n              <CustomFormControl\r\n                value={filterLevelHigh}\r\n                placeholder={`Max Level`}\r\n                onChange={val => filterDispatch({ filterLevelHigh: clamp(val, filterLevelLow, 20) })}\r\n              />\r\n            </InputGroup>\r\n\r\n            {/* Sort */}\r\n            <ButtonGroup className=\"w-100 d-flex flex-row mb-2\">\r\n              <Dropdown as={ButtonGroup} className=\"flex-grow-1\">\r\n                <Dropdown.Toggle >\r\n                  <span>Sort By: {sortMap[sortType]}</span>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {Object.entries(sortMap).map(([key, name]) =>\r\n                    <Dropdown.Item key={key} onClick={() => filterDispatch({ sortType: key })}>{name}</Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <Button onClick={() => filterDispatch({ ascending: !ascending })} className=\"flex-shrink-1\">\r\n                <FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" /><span> {ascending ? \"Ascending\" : \"Descending\"}</span>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n          {/* Right half */}\r\n          <Col xs={12} lg={6}>\r\n            <Row>\r\n              {/* Left */}\r\n              <Col>\r\n                {/* Artifact Slot */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\">\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterSlotKey ? \"success\" : \"primary\"}>\r\n                    {filterSlotKey ? Artifact.slotNameWithIcon(filterSlotKey) : \"Slot\"}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterSlotKey: \"\" })} >Unselect</Dropdown.Item>\r\n                    {allSlotKeys.map(key =>\r\n                      <Dropdown.Item key={key} onClick={() => filterDispatch({ filterSlotKey: key })} >\r\n                        {Artifact.slotNameWithIcon(key)}\r\n                      </Dropdown.Item>)}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n                {/* Main Stat filter */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\">\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterMainStatKey ? \"success\" : \"primary\"}>\r\n                    {Stat.getStatNameWithPercent(filterMainStatKey, \"Main Stat\")}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterMainStatKey: \"\" })}>Unselect</Dropdown.Item>\r\n                    {allMainStatKeys.map(statKey => <Dropdown.Item key={statKey} onClick={() => filterDispatch({ filterMainStatKey: statKey })} >\r\n                      {Stat.getStatNameWithPercent(statKey)}\r\n                    </Dropdown.Item>)}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                {/* location */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\" >\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterLocation ? \"success\" : \"primary\"} >\r\n                    {locationDisplay}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocation: \"\" })}>Unselect</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocation: \"Inventory\" })}>Inventory</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocation: \"Equipped\" })}>Currently Equipped</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <CharacterSelectionDropdownList onSelect={cid => filterDispatch({ filterLocation: cid })} />\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                {/* locked state */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\" >\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterLocked ? \"success\" : \"primary\"} >\r\n                    {lockedDisplay}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocked: \"\" })}>Any</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocked: \"locked\" })}><span><FontAwesomeIcon icon={faLock} /> Locked</span></Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocked: \"unlocked\" })}><span><FontAwesomeIcon icon={faLockOpen} /> Unlocked</span></Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Col>\r\n              {/* Right */}\r\n              <Col>\r\n                {/* substat filter */}\r\n                {filterSubstats.map((substatKey, index) =>\r\n                  <Dropdown className=\"mb-2\" key={index}>\r\n                    <Dropdown.Toggle id=\"dropdown-basic\" className=\"w-100\" variant={substatKey ? \"success\" : \"primary\"}>\r\n                      {Stat.getStatNameWithPercent(substatKey, `Substat ${index + 1}`)}\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          filterSubstats[index] = \"\"\r\n                          filterDispatch({ filterSubstats })\r\n                        }}\r\n                      >No Substat</Dropdown.Item>\r\n                      {Artifact.getSubstatKeys().filter(key => !filterSubstats.includes(key)).map(key =>\r\n                        <Dropdown.Item key={key}\r\n                          onClick={() => {\r\n                            filterSubstats[index] = key\r\n                            filterDispatch({ filterSubstats })\r\n                          }}\r\n                        >{Stat.getStatNameWithPercent(key)}</Dropdown.Item>\r\n                      )}\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!numUnequip} onClick={unequipArtifacts}><FontAwesomeIcon icon={faUserSlash} /> Unequip Artifacts</Button></Col>\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!artifacts.length} onClick={deleteArtifacts}><FontAwesomeIcon icon={faTrash} /> Delete Artifacts</Button></Col>\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!numLock} onClick={lockArtifacts}><FontAwesomeIcon icon={faLock} /> Lock Artifacts</Button></Col>\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!numUnlock} onClick={unlockArtifacts}><FontAwesomeIcon icon={faLockOpen} /> Unlock Artifacts </Button></Col>\r\n          <Col xs={12} className=\"mt-n2\"><small>Note: the above buttons only applies to <b>filtered artifacts</b></small></Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {numPages > 1 && <ButtonGroup size=\"sm\">\r\n              {[...Array(numPages).keys()].map(i => <Button key={i} className=\"px-3\" variant={currentPageIndex === i ? \"success\" : \"primary\"} onClick={() => setpageIdex(i)} >\r\n                {i === 0 ? \"Page \" : \"\"}{i + 1}\r\n              </Button>)}\r\n            </ButtonGroup>}\r\n          </Col>\r\n          <Col xs=\"auto\"><span className=\"float-right text-right\">Showing <b>{artifactsToShow.length}</b> out of {artifacts.length !== totalArtNum ? `${artifacts.length}/` : \"\"}{totalArtNum} Artifacts</span></Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Row>\r\n      {artifactsToShow.map((art, i) =>\r\n        <Col key={i} lg={4} md={6} className=\"mb-2\">\r\n          <ArtifactCard\r\n            artifactId={art.id}\r\n            onDelete={() => deleteArtifact(art.id)}\r\n            onEdit={() => editArtifact(art.id)}\r\n          />\r\n        </Col>\r\n      )}\r\n    </Row>\r\n    {numPages > 1 && <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body>\r\n        <Row>\r\n          <Col>\r\n            <ButtonGroup size=\"sm\">\r\n              {[...Array(numPages).keys()].map(i => <Button key={i} className=\"px-3\" variant={currentPageIndex === i ? \"success\" : \"primary\"} onClick={() => {\r\n                setpageIdex(i);\r\n                (invScrollRef.current as any)?.scrollIntoView({ behavior: \"smooth\" })\r\n              }} >\r\n                {i === 0 ? \"Page \" : \"\"}{i + 1}\r\n              </Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\"><span className=\"float-right text-right\">Showing <b>{artifactsToShow.length}</b> out of {artifacts.length !== totalArtNum ? `${artifacts.length}/` : \"\"}{totalArtNum} Artifacts</span></Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>}\r\n  </Container >\r\n}","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n"],"sourceRoot":""}