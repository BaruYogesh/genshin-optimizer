{"version":3,"sources":["Data/Characters/SheetUtil.tsx","Conditional/Conditional.ts","Util/FieldUtil.tsx","Util/Util.ts","GlobalSettings.tsx","ReactHooks/usePromise.tsx","Components/SqBadge.tsx","Components/StatIcon.tsx","Character/CharacterSheet.tsx","Artifact/ArtifactSheet.tsx","Weapon/WeaponSheet.tsx","Formula.ts","Util/KeyPathUtil.ts","Weapon/WeaponUtil.ts","Util/UIUtil.ts","Artifact/Component/SlotNameWIthIcon.tsx","Database/migration.ts","Types/consts.ts","Database/DataManager.ts","Database/Database.ts","faIcons/index.ts","i18n.ts","Build/Build.ts","Footer.tsx","Header.tsx","App.tsx","reportWebVitals.ts","Theme.tsx","index.tsx","Stat.tsx","Database/validation.tsx","StatConstants.ts","Components/ColoredText.tsx","Database/utils.ts","Data/LevelData.ts","StatData.ts","Util/StatUtil.ts","Data/ElementalData.ts","Components/Translate.tsx","Components/Image/ImgIcon.tsx","Types/artifact.ts","Build/BuildSetting.ts","Data/ArtifactData.ts","Artifact/Artifact.ts","Database/DBStorage.ts"],"names":["st","strKey","ns","key18","sgt","normalDocSection","tr","formula","data","text","fields","normal","hitArr","map","percentArr","i","formulaText","stats","tlvl","auto","Stat","printStat","getTalentStatKey","variant","getTalentStatKeyVariant","chargedDocSection","stamina","charged","dmg","value","chargedHitsDocSection","test","plungeDocSection","plunging","low","high","claymoreChargedDocSection","spinning","final","stam","maxDuration","bowChargedDocSection","elementKey","hit","full","talentTemplate","talentKey","img","boostKey","boostAmt","name","sections","conditional","key","canShow","constellation","parseInt","split","maxStack","talentStrMap","skill","burst","passive","passive1","passive2","passive3","sprint","constellation1","constellation2","constellation3","constellation4","constellation5","constellation6","conditionalHeader","title","icon","size","sx","m","src","action","color","processed","Promise","all","then","default","forEach","rs","conditionals","c","addConditional","charImport","sheets","Object","entries","sheet","addCharTalent","talent","keys","values","ele","sec","isTraveler","allElements","getTalent","weaponImport","document","artifactImport","setEffects","setNum","entry","Conditional","this","Error","states","state","fieldProcessing","layeredAssignment","partyBuff","partyConditionals","skipConditionalEquipmentCheck","weapon","setToSlots","setKey","length","resolve","conditionalValue","defVal","objPathValue","conditionalValues","stacks","stateKey","conditionalStats","objMultiplication","deepClone","get","parseConditionalValues","callback","crawlObject","Array","isArray","statsToFields","statVals","filter","statKey","statVal","StatIcon","getStatName","getStatVariant","fixed","fixedUnit","unit","getStatUnit","flat","field","getRandomElementFromArray","array","Math","floor","random","getRandomInt","min","max","ceil","getRandomIntInclusive","obj","JSON","parse","stringify","clamp","val","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","multi","prop","reduce","accu","arr","a","k","deletePropPath","path","tempPath","lastKey","pop","objPathed","objClearEmpties","o","validate","cb","evalIfFunc","arg","objectFromKeyMap","fromEntries","rangeGen","from","to","range","GlobalSettingsContext","createContext","globalSettings","tcMode","globalSettingsDispatch","globalSettingsReducer","initalGlobalSettingsWithStorage","dbStorage","useGlobalSettings","reducer","useReducer","undefined","useEffect","set","usePromise","promise","dependencies","useState","res","setRes","pending","console","error","SqBadge","styled","slot","theme","display","padding","fontSize","fontWeight","lineHeight","textAlign","whiteSpace","verticalAlign","borderRadius","backgroundColor","palette","main","contrastText","HPIcon","className","faHpPrimary","faHpSecondary","style","CdRedIcon","faCdReductionPrimary","faCdReductionSecondary","EnerRechIcon","faEnergyRechargePrimary","faEnergyRechargeSecondary","uncoloredEleIcons","anemo","faAnemo","geo","faGeo","electro","faElectro","hydro","faHydro","pyro","faPyro","cryo","faCryo","dendro","faDendro","physical","faPhysicalDmgBonus","coloredEleIcon","characterHP","finalHP","hp_","hp","baseATK","faAtk","characterATK","finalATK","atk_","atk","characterDEF","faDef","finalDEF","def_","def","eleMas","faElementalMastery","critRate_","faCritRate","critDMG_","faDiceD20","enerRech_","heal_","faHealingBonus","cdRed_","shield_","faShieldStrength","faMaxStamina","flatMap","expCurve","expCurveJSON","imp","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","getBase","level","ascensionLvl","baseStat","baseStatCurve","ascensions","props","getSpecializedStat","find","getSpecializedStatVal","isMelee","weaponTypeKey","eleKey","talents","getTalentOfKey","thumbImgSide","height","marginTop","marginLeft","cardImg","thumbImg","bannerImg","rarity","constellationName","getAll","ArtifactSheet","promiseSheets","allArtifactSets","getSlotName","slotKey","getSlotDesc","setEffectDesc","setEffectDocument","slots","slotIcons","allSlotKeys","icons","num","grouped","push","charStats","artifactSetEffect","mergeStats","weaponKey","WeaponSheet","loadWeaponSheet","allWeaponKeys","weaponSheet","passiveDescription","getSubStatKey","refineIndex","build","getMainStatValue","ascension","mainStat","type","base","curve","addStats","getSubStatValue","subStat","weaponType","iconAwaken","getWeaponsOfType","getLevelString","ascensionMaxLevel","formulaImport","Formula","formulas","stat","modifier","objs","getCurrent","s","KeyPath","prefix","Proxy","partial","symbol","toString","current","defaultInitialWeapon","initialWeapon","defaultInitialWeaponKey","id","refinement","location","lock","valueStringWithUnit","valueString","round","toFixed","SlotIconSVG","flower","faFlower","plume","faPlume","sands","faSands","goblet","faGoblet","circlet","faCirclet","artifactSlotIcon","SlotNameWithIcon","t","useTranslation","currentDBVersion","migrate","storage","version","getDBVersion","elementalFilter","weaponFilter","startsWith","buildSetting","artifactsAssumeFull","ascending","setFilters","useExcludedArts","buildSettings","mainStatAssumptionLevel","mainStatKeys","migrateV2ToV3","setDBVersion","traveler","characterKey","requireUpdate","migrateV3ToV4","levelKey","lvla","findIndex","maxLevel","addAsc","includes","baseStatOverrides","characterLevel","migrateV4ToV5","character","migrateV5ToV6","initialBuildSettings","migrateV6ToV7","weaponKeyChangeMap","keyInd","generateWeaponId","charMap","newCharacterKey","talentLevelKeys","useLockedArts","rest","refine","artifact","exclude","numStars","BuildsDisplayState","maxBuildsToShow","CharacterDisplayState","characterKeyToEdit","charIdToEdit","migrateV7ToV8","statFilters","migrateV8ToV9","migrateV9ToV10","bonusStats","migrateV10ToV11","remove","migrateV11ToV12","migrateV12ToV13","newCondValues","subkey","element","condKey","team","migrateV13ToV14","migrated","allHitModes","allReactionModes","allRarities","allArtifactRarities","allElementsWithPhy","allWeaponTypeKeys","DataManager","listeners","anyListeners","trigger","listener","allKeys","ArtCharDatabase","arts","chars","weapons","reloadStorage","removeAll","flex","parseCharacter","validateCharacter","equippedArtifacts","parseArtifact","validateArtifact","parseWeapon","equippedWeapon","validateWeapon","weaponIds","Set","char","weaponId","generateRandomWeaponID","add","removeWeaponCache","art","removeArtifactCache","removeCharacterCache","follow","followAny","oldChar","_getChar","parsedChar","newChar","saveChar","oldArt","parsedArt","newArt","saveArt","oldWeapon","parsedWeapon","newWeapon","saveWeapon","candidate","has","generateRandomArtID","artKey","newCharKey","art1","char1","art2","char2","weapon1","weapon2","newArts","oldArts","setArtLocation","editorArt","mainStatKey","substats","candidates","_getArts","every","substat","upgraded","some","duplicated","candidateSubstat","_getWeapons","database","DatabaseContext","iconName","languageCodeList","i18n","use","Backend","initReactI18next","LanguageDetector","init","fallbackLng","defaultNS","load","returnEmptyString","backend","loadPath","interpolation","escapeValue","buildContext","newBuild","equippedBuild","compareBuild","setCompareBuild","maxBuildsToShowList","maxBuildsToShowDefault","calculateTotalBuildNumber","artifactsBySlot","setKeys","filteredArtifactsBySlot","slotKeys","artifactsBySet","freeze","setCount","result","slotPerm","index","artifactSetPermutations","artifacts","skillKey","overwriteElement","hitMode","infusionAura","infusionSelf","reactionMode","characterEle","Footer","fallback","Skeleton","FooterContent","AppBar","position","bgcolor","elevation","Box","justifyContent","px","py","gap","Typography","grey","Trans","i18nKey","content","i18Key","svg","faGavel","faIdCard","faCalculator","faTools","faCog","faBook","links","href","process","faPaypal","label","faPatreon","faDiscord","Header","HeaderContent","anchor","useTheme","isLarge","useMediaQuery","breakpoints","up","isMobile","down","routeMatch","useRouteMatch","strict","sensitive","currentTab","params","slug","MobileHeader","flexWrap","Tabs","scrollButtons","flexDirection","minWidth","minHeight","transition","mb","mr","Tab","component","RouterLink","flexGrow","target","onClick","e","ReactGA","outboundLink","mobileOpen","setMobileOpen","handleDrawerToggle","Drawer","open","onClose","ModalProps","keepMounted","List","ListItemButton","selected","disabled","ListItemText","ListItemIcon","Divider","Toolbar","Button","noWrap","IconButton","aria-label","edge","Menu","Home","lazy","ArtifactDisplay","CharacterRouter","BuildDisplay","ToolsDisplay","FlexDisplay","SettingsDisplay","WeaponDisplay","DocumentationDisplay","ScannerDisplay","ScrollTop","children","useScrollTrigger","window","disableHysteresis","threshold","Zoom","in","event","ownerDocument","querySelector","scrollIntoView","behavior","block","role","bottom","right","App","basename","GlobalSettings","Provider","Grid","container","direction","item","Container","maxWidth","xs","sm","md","width","Fab","KeyboardArrowUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultTheme","createTheme","mode","primary","augmentColor","secondary","success","warning","background","paper","info","contentDark","contentDarker","contentLight","roll1","roll2","roll3","roll4","roll5","roll6","vaporize","melt","overloaded","superconduct","electrocharged","shattered","swirl","burning","crystalize","typography","button","textTransform","components","MuiCssBaseline","styleOverrides","body","darkScrollbar","MuiAppBar","defaultProps","enableColorOnDark","MuiPaper","MuiButton","MuiButtonGroup","MuiList","root","spacing","marginBottom","MuiTypography","margin","paddingLeft","MuiCardContent","paddingBottom","initialize","ReactDOM","render","StrictMode","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","getElementById","StatData","getStatNameRaw","getStatNameWithPercent","endsWith","premod","f","expand","getPrintableFormulaStatKeyList","statList","modifiers","FormulaText","ModFormula","FormulaDisplay","modifierText","options","statName","statUnit","printValue","enemyLevel_multi","heal_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_hit","hitMoves","move","elementalData","hitTypes","transformativeReactions","reaction","variants","amplifyingReactions","baseMulti","mainStatVal","Artifact","mainStatValue","errors","rolls","efficiency","validated","allPossibleRolls","totalUnambiguousRolls","b","maxSubstatValues","possibleRolls","getSubstatRolls","roll","substatRolls","best","rollInfo","lowerBound","upperBound","highestScore","Infinity","tryAllSubstats","currentScore","total","newScore","totalRolls","allMainStatKeys","_","allSubstats","isFinite","parseFloat","parseSubstats","maxLvl","optimizationTarget","useEquippedArts","builds","buildDate","plotBase","Number","isInteger","tempmainStatKeys","avgHit","critHit","elemental","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","ColorText","getString","setString","ambiguousLevel","milestoneLevels","const","weaponATK","dmg_","critHit_base_multi","weakspotDMG_","incHeal_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaSprintDec_","staminaGlidingDec_","staminaChargedDec_","transformative_level_multi","crystalize_multi","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","autoBoost","skillBoost","burstBoost","Formulas","ElementToReactionKeys","moveName","eleName","opt","typeName","characterStatKeys","enemyEditorKeys","overrideStatKeys","initialStats","mergeModifiers","dest","paths","mergePartyStats","mergeCalculatedStats","teamStats","active","activeCharacter","characterBaseStats","deepCloneStats","newStats","partyAllModifiers","partyOnlyModifiers","partyActiveModifiers","Translate","textKey","textObj","returnObjects","T","TransWrapper","Para","gutterBottom","li","parent","trans","ImgIcon","ArtifactSubstatRollData","1","numUpgrades","2","3","4","5","ArtifactSlotsData","totalPossibleRolls","sum","rollsRemaining","emptySlotCount","matchedSlotCount","unusedFilterCount","currentEfficiency","maxEfficiency","maxSubstatRollEfficiency","slotName","slotMainStats","setEffectsObjs","artifactSheets","setObj","setEffect","setNumKey","setStats","condStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","ArtifactMainStatsData","ArtifactStarsData","substatKey","ArtifactSubstatsData","getSubstatKeys","getSubstatRollData","v","substatValue","rollData","ArtifactSubstatLookupTable","getSubstatEfficiency","DBLocalStorage","getItem","removeItem","setItem","other","clear","shouldRemove","SandboxStorage","copyFrom","localStorage"],"mappings":"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","file":"static/js/main.b2539783.chunk.js","sourcesContent":["import { getTalentStatKey, getTalentStatKeyVariant } from \"../../Build/Build\";\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport SqBadge from \"../../Components/SqBadge\";\r\nimport { Translate } from \"../../Components/Translate\";\r\nimport Stat from \"../../Stat\";\r\nimport { TalentSheetElementKey } from \"../../Types/character\";\r\nimport { ElementKey } from \"../../Types/consts\";\r\nimport IConditional from \"../../Types/IConditional\";\r\nexport const st = (strKey: string) => <Translate ns=\"sheet\" key18={strKey} />\r\nexport const sgt = (strKey: string) => <Translate ns=\"sheet_gen\" key18={strKey} />\r\n\r\n//this template only works if there is no variation in normal attacks.(no multi hits)\r\nexport const normalDocSection = (tr, formula, data) => ({\r\n  text: tr(`auto.fields.normal`),\r\n  fields: data.normal.hitArr.map((percentArr, i) =>\r\n  ({\r\n    text: sgt(`normal.hit${i + 1}`),\r\n    formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n    formula: formula.normal[i],\r\n    variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n  }))\r\n})\r\nexport const chargedDocSection = (tr, formula, data, stamina = 25) => ({\r\n  text: tr(`auto.fields.charged`),\r\n  fields: [{\r\n    text: sgt(`charged.dmg`),\r\n    formulaText: stats => <span>{data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.dmg,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.stamina\"),\r\n    value: stamina,\r\n  }]\r\n})\r\nexport const chargedHitsDocSection = (tr, formula, data, stamina = 20) => ({\r\n  text: tr(`auto.fields.charged`),\r\n  fields: [...data.charged.hitArr.map((percentArr, i) =>\r\n  ({\r\n    text: sgt(`normal.hit${i + 1}`),\r\n    formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged[i],\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  })), {\r\n    test: sgt(\"charged.stamina\"),\r\n    value: stamina\r\n  }]\r\n})\r\nexport const plungeDocSection = (tr, formula, data) => ({\r\n  text: tr`auto.fields.plunging`,\r\n  fields: [{\r\n    text: sgt(`plunging.dmg`),\r\n    formulaText: stats => <span>{data.plunging.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.dmg,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }, {\r\n    text: sgt(\"plunging.low\"),\r\n    formulaText: stats => <span>{data.plunging.low[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.low,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }, {\r\n    text: sgt(\"plunging.high\"),\r\n    formulaText: stats => <span>{data.plunging.high[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.high,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }]\r\n})\r\n\r\nexport const claymoreChargedDocSection = (tr, formula, data) => ({\r\n  text: tr(\"auto.fields.charged\"),\r\n  fields: [{\r\n    text: sgt(\"charged.spinning\"),\r\n    formulaText: stats => <span>{data.charged.spinning[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.spinning,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.final\"),\r\n    formulaText: stats => <span>{data.charged.final[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.final,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.stamina\"),\r\n    value: data.charged.stam ?? `40/s`,\r\n  }, {\r\n    text: sgt(\"maxDuration\"),\r\n    value: data.charged.maxDuration ?? `5s`,\r\n  }]\r\n})\r\n\r\nexport const bowChargedDocSection = (tr, formula, data, elementKey: ElementKey) => ({\r\n  text: tr(\"auto.fields.charged\"),\r\n  fields: [{\r\n    text: sgt(\"charged.aimed\"),\r\n    formulaText: stats => <span>{data.charged.hit[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.hit,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.fullyAimed\"),\r\n    formulaText: stats => <span>{data.charged.full[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, elementKey), stats)}</span>,\r\n    formula: formula.charged.full,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats, elementKey),\r\n  }]\r\n})\r\ntype BoostKey = \"autoBoost\" | \"skillBoost\" | \"burstBoost\"\r\nexport const talentTemplate = (talentKey: TalentSheetElementKey, tr: (string) => Displayable, img: string, boostKey?: BoostKey, boostAmt: number = 3) => ({\r\n  name: tr(`${talentKey}.name`),\r\n  img,\r\n  sections: [{\r\n    text: tr(`${talentKey}.description`),\r\n    ...(boostKey ? {\r\n      conditional: {\r\n        key: boostKey,\r\n        canShow: stats => stats.constellation >= parseInt(talentKey.split(\"constellation\")[1] ?? 3),\r\n        maxStack: 0,\r\n        stats: {\r\n          [boostKey]: boostAmt\r\n        }\r\n      } as IConditional\r\n    } : {})\r\n  }],\r\n})\r\n\r\nconst talentStrMap: Record<TalentSheetElementKey, string> = {\r\n  auto: \"Auto\",\r\n  skill: \"Skill\",\r\n  burst: \"Burst\",\r\n  passive: \"Passive\",\r\n  passive1: \"Ascension 1\",\r\n  passive2: \"Ascension 4\",\r\n  passive3: \"Passive\",\r\n  sprint: \"Sprint\",\r\n  constellation1: \"C1\",\r\n  constellation2: \"C2\",\r\n  constellation3: \"C3\",\r\n  constellation4: \"C4\",\r\n  constellation5: \"C5\",\r\n  constellation6: \"C6\"\r\n}\r\nexport const conditionalHeader = (talentKey: TalentSheetElementKey, tr: (string) => Displayable, img: string): IConditional[\"header\"] => {\r\n  return {\r\n    title: tr(`${talentKey}.name`),\r\n    icon: <ImgIcon size={2} sx={{ m: -1 }} src={img} />,\r\n    action: <SqBadge color=\"success\">{talentStrMap[talentKey]}</SqBadge>,\r\n  }\r\n}","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { TalentSheet } from \"../Types/character\";\r\nimport { allElements } from \"../Types/consts\";\r\nimport IConditional, { IConditionalValue, IConditionalValues } from \"../Types/IConditional\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { BonusStats, ICalculatedStats } from \"../Types/stats\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  import('./Resonance').then(({ default: resonanceSheets }) => resonanceSheets.forEach(rs => rs.conditionals.forEach(c => addConditional(c, [\"resonance\"])))),\r\n  charImport.then(sheets => Object.entries(sheets).forEach(([key, sheet]) => {\r\n    function addCharTalent(talent: TalentSheet | undefined, keys: string[]) {\r\n      if (!talent) return\r\n      Object.values(talent.sheets).forEach(ele => ele.sections.forEach(sec =>\r\n        sec.conditional && addConditional(sec.conditional, keys)))\r\n    }\r\n    if (sheet.isTraveler) allElements.forEach(ele => addCharTalent(sheet.getTalent(ele), [\"character\", `${key}_${ele}`]))\r\n    else addCharTalent(sheet.getTalent(), [\"character\", key])\r\n  })),\r\n  weaponImport.then(sheets => Object.entries(sheets).forEach(([key, sheet]) => {\r\n    sheet.document.forEach(sec =>\r\n      sec.conditional && addConditional(sec.conditional, [\"weapon\", key]))\r\n  })),\r\n  artifactImport.then(sheets => Object.entries(sheets).forEach(([key, sheet]) => {\r\n    Object.entries(sheet.setEffects).forEach(([setNum, entry]) => entry?.document?.forEach(sec =>\r\n      sec.conditional && addConditional(sec.conditional, [\"artifact\", key, setNum])))\r\n  })),\r\n\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals: IConditionalValues<IConditional> = {} as const //where all the conditionals are stored\r\n  static partyConditionals: IConditionalValues<IConditional> = {} as const\r\n  static canShow = (conditional: IConditional, stats: ICalculatedStats, skipConditionalEquipmentCheck = false) => {\r\n    const keys = conditional.keys!\r\n    if (!skipConditionalEquipmentCheck) {\r\n      if (keys[0] === \"weapon\" && keys[1] !== stats.weapon.key) return false\r\n      if (keys[0] === \"artifact\") {\r\n        const setToSlots = stats.setToSlots\r\n        const setKey = keys[1]\r\n        const setNum = parseInt(keys[2])\r\n        if (setNum > (setToSlots?.[setKey]?.length ?? 0)) return false\r\n      }\r\n    }\r\n    return conditional?.canShow?.(stats) ?? false\r\n  }\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {} as BonusStats, fields: [] as IFieldDisplay[], conditionalValue: [0] as IConditionalValue }) => {\r\n    if (conditional.maxStack === 0) conditionalValue = [1]\r\n    else if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats && Object.keys(conditionalStats).length) {\r\n      const stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n      if (conditional.partyBuff) {\r\n        defVal.stats = { [conditional.partyBuff]: stats }\r\n      } else\r\n        defVal.stats = stats\r\n    }\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys) => objPathValue(Conditional.conditionals, keys) as IConditional | undefined\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues: object, callback: (conditional: IConditional, conditionalValue: IConditionalValue, keys: string[]) => void) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\nfunction addConditional(conditional: IConditional, keys: string[]) {\r\n  keys = [...keys, conditional.key]\r\n  conditional.keys = keys\r\n  if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n  if (\"states\" in conditional) {//complex format\r\n    Object.values(conditional.states).forEach((state: any) => {\r\n      state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n      state.fields?.forEach?.(fieldProcessing)\r\n    })\r\n  } else { //simple format\r\n    conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n    conditional.fields?.forEach?.(fieldProcessing)\r\n  }\r\n  layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  if (conditional.partyBuff)\r\n    layeredAssignment(Conditional.partyConditionals, keys, conditional)\r\n}\r\n\r\n","import ColorText from \"../Components/ColoredText\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { sgt } from \"../Data/Characters/SheetUtil\"\r\nimport Stat from \"../Stat\"\r\nimport { ElementKey } from \"../Types/consts\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\n\r\nexport default function statsToFields(statVals, stats = {}): IFieldDisplay[] {\r\n  return Object.entries(statVals).filter(([statKey]) => statKey !== \"modifiers\").map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"partyAll\":\r\n      case \"partyOnly\":\r\n      case \"partyActive\":\r\n        return statsToFields(statVal)\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <ColorText color={statVal as ElementKey}>{sgt(`element.${statVal}`)} Infusion</ColorText>,\r\n          canShow: () => true,\r\n        }\r\n      case \"infusionAura\":\r\n        return {\r\n          text: <ColorText color={statVal as ElementKey}>{sgt(`element.${statVal}`)} Infusion Aura</ColorText>,\r\n          canShow: () => true,\r\n        }\r\n      default:\r\n        return {\r\n          text: <span>{StatIcon[statKey as any]} {Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal as number,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","export const getRandomElementFromArray = <T>(array: readonly T[]): T => array[Math.floor(Math.random() * array.length)];\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nexport function getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n}\r\nexport function getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport const deepClone = <T>(obj: T): T =>\r\n  obj && JSON.parse(JSON.stringify(obj))\r\n\r\nexport const clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nexport const getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nexport const clamp01 = (val) => clamp(val, 0, 1)\r\nexport const clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nexport function strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nexport function hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nexport function objMultiplication(obj, multi) {\r\n  if (multi === 1) return obj\r\n  Object.keys(obj).forEach((prop: any) => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n  return obj\r\n}\r\n\r\n//assign obj.[keys...] = value\r\nexport function layeredAssignment(obj, keys: string[], value) {\r\n  keys.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, obj)\r\n  return obj\r\n}\r\n//get the value in a nested object, giving array of path\r\nexport function objPathValue(obj: object, keys: string[]) {\r\n  return keys.reduce((a, k) => a?.[k], obj)\r\n}\r\n//delete the value denoted by the path. Will also delete empty objects as well.\r\nexport function deletePropPath(obj, path) {\r\n  const tempPath = [...path]\r\n  const lastKey = tempPath.pop()\r\n  const objPathed = objPathValue(obj, tempPath)\r\n  delete objPathed?.[lastKey];\r\n}\r\n\r\nexport function objClearEmpties(o) {\r\n  for (const k in o) {\r\n    if (typeof o[k] !== \"object\") continue\r\n    objClearEmpties(o[k])\r\n    if (!Object.keys(o[k]).length) delete o[k];\r\n  }\r\n}\r\nexport function crawlObject(obj, keys, validate, cb) {\r\n  if (validate(obj)) cb(obj, keys)\r\n  else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => crawlObject(val, [...keys, key], validate, cb))\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nexport const getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\n\r\nexport function evalIfFunc<T, X>(value: T | ((arg: X) => T), arg: X): T {\r\n  return typeof value === \"function\" ? (value as any)(arg) : value\r\n}\r\n//fromEntries doesn't result in StrictDict, this is just a utility wrapper.\r\nexport function objectFromKeyMap<K extends string | number, V>(keys: readonly K[], map: (key: K) => V): StrictDict<K, V> {\r\n  return Object.fromEntries(keys.map(k => [k, map(k)])) as any\r\n}\r\n\r\nconst rangeGen = function* (from, to) {\r\n  for (let i = from; i <= to; i++) yield i;\r\n};\r\n\r\nexport function range(from, to) {\r\n  return [...rangeGen(from, to)]\r\n}","import { createContext, useEffect, useReducer } from \"react\"\r\nimport { dbStorage } from \"./Database/DBStorage\"\r\n\r\ntype GlobalSettings = {\r\n  tcMode: boolean\r\n}\r\ntype GlobalSettingsObject = {\r\n  globalSettings: GlobalSettings,\r\n  globalSettingsDispatch: (state: Partial<GlobalSettings>) => void\r\n}\r\nfunction initalGlobalSettings() {\r\n  return { tcMode: false }\r\n}\r\nexport const GlobalSettingsContext = createContext<GlobalSettingsObject>({\r\n  globalSettings: initalGlobalSettings(),\r\n  globalSettingsDispatch: () => { }\r\n})\r\n\r\nfunction globalSettingsReducer(state, action): GlobalSettings {\r\n  return { ...state, ...action }\r\n}\r\n\r\nfunction initalGlobalSettingsWithStorage() {\r\n  return dbStorage.get(\"GlobalSettings\") ?? initalGlobalSettings()\r\n}\r\n\r\nexport function useGlobalSettings() {\r\n  const reducer = useReducer(globalSettingsReducer, undefined, initalGlobalSettingsWithStorage)\r\n  const [globalSettings] = reducer\r\n  useEffect(() => {\r\n    dbStorage.set(\"GlobalSettings\", globalSettings)\r\n  }, [globalSettings])\r\n  return reducer\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nexport default function usePromise<T>(promise: Promise<T> | undefined, dependencies: any[]): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>(undefined);\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => {\r\n      pending = false\r\n      setRes(undefined)\r\n    }\r\n  }, dependencies)// eslint-disable-line react-hooks/exhaustive-deps\r\n  return res\r\n}","import { styled } from \"@mui/material\";\r\n\r\nconst SqBadge = styled(\"span\", {\r\n  name: 'SqBadge',\r\n  slot: 'Root',\r\n})(({ theme, color = \"primary\" }) => ({\r\n  display: \"inline-block\",\r\n  padding: \".25em .4em\",\r\n  fontSize: \"75%\",\r\n  fontWeight: 700,\r\n  lineHeight: 1,\r\n  textAlign: \"center\",\r\n  whiteSpace: \"nowrap\",\r\n  verticalAlign: \"baseline\",\r\n  borderRadius: \".25em\",\r\n  backgroundColor: theme.palette[color]?.main,\r\n  color: theme.palette[color]?.contrastText\r\n}))\r\nexport default SqBadge","import { faDiceD20 } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAnemo, faAtk, faCdReductionPrimary, faCdReductionSecondary, faCritRate, faCryo, faDef, faDendro, faElectro, faElementalMastery, faEnergyRechargePrimary, faEnergyRechargeSecondary, faGeo, faHealingBonus, faHpPrimary, faHpSecondary, faHydro, faMaxStamina, faPhysicalDmgBonus, faPyro, faShieldStrength } from '../faIcons'\r\nimport { objectFromKeyMap } from '../Util/Util'\r\nimport ColorText from './ColoredText'\r\n\r\nexport function HPIcon() {\r\n\treturn <span className=\"fa-layers \">\r\n\t\t<FontAwesomeIcon icon={faHpPrimary as any} />\r\n\t\t<FontAwesomeIcon icon={faHpSecondary as any} style={{ color: \"grey\" }} />\r\n\t</span>\r\n}\r\n\r\nexport function CdRedIcon() {\r\n\treturn <span className=\"fa-layers \">\r\n\t\t<FontAwesomeIcon icon={faCdReductionPrimary as any} />\r\n\t\t<FontAwesomeIcon icon={faCdReductionSecondary as any} style={{ color: \"grey\" }} />\r\n\t</span>\r\n}\r\n\r\nexport function EnerRechIcon() {\r\n\treturn <span className=\"fa-layers \">\r\n\t\t<FontAwesomeIcon icon={faEnergyRechargePrimary as any} />\r\n\t\t<FontAwesomeIcon icon={faEnergyRechargeSecondary as any} style={{ color: \"grey\" }} />\r\n\t</span>\r\n}\r\nexport const uncoloredEleIcons = {\r\n\tanemo: <FontAwesomeIcon icon={faAnemo as any} />,\r\n\tgeo: <FontAwesomeIcon icon={faGeo as any} />,\r\n\telectro: <FontAwesomeIcon icon={faElectro as any} />,\r\n\thydro: <FontAwesomeIcon icon={faHydro as any} />,\r\n\tpyro: <FontAwesomeIcon icon={faPyro as any} />,\r\n\tcryo: <FontAwesomeIcon icon={faCryo as any} />,\r\n\tdendro: <FontAwesomeIcon icon={faDendro as any} />,\r\n\tphysical: <FontAwesomeIcon icon={faPhysicalDmgBonus as any} />,\r\n} as const\r\nconst coloredEleIcon = objectFromKeyMap(Object.keys(uncoloredEleIcons), key => <ColorText color={key} >{uncoloredEleIcons[key]}</ColorText>)\r\n\r\nconst StatIcon = {\r\n\tcharacterHP: <HPIcon />,\r\n\tfinalHP: <HPIcon />,\r\n\thp_: <HPIcon />,\r\n\thp: <HPIcon />,\r\n\r\n\tbaseATK: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tcharacterATK: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tfinalATK: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tatk_: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tatk: <FontAwesomeIcon icon={faAtk as any} />,\r\n\r\n\tcharacterDEF: <FontAwesomeIcon icon={faDef as any} />,\r\n\tfinalDEF: <FontAwesomeIcon icon={faDef as any} />,\r\n\tdef_: <FontAwesomeIcon icon={faDef as any} />,\r\n\tdef: <FontAwesomeIcon icon={faDef as any} />,\r\n\r\n\teleMas: <FontAwesomeIcon icon={faElementalMastery as any} />,\r\n\tcritRate_: <FontAwesomeIcon icon={faCritRate as any} />,\r\n\tcritDMG_: <FontAwesomeIcon icon={faDiceD20 as any} />,\r\n\tenerRech_: <EnerRechIcon />,\r\n\theal_: <FontAwesomeIcon icon={faHealingBonus as any} />,\r\n\r\n\tcdRed_: <CdRedIcon />,\r\n\r\n\tshield_: <FontAwesomeIcon icon={faShieldStrength as any} />,\r\n\tstamina: <FontAwesomeIcon icon={faMaxStamina as any} />,\r\n\r\n\t...coloredEleIcon,\r\n\t...Object.fromEntries(Object.keys(coloredEleIcon).flatMap(ele => [[`${ele}_dmg_`, coloredEleIcon[ele]], [`${ele}_res_`, coloredEleIcon[ele]]]))\r\n}\r\n\r\nexport default StatIcon","import { CharacterExpCurveData } from \"pipeline\";\r\nimport ImgIcon from \"../Components/Image/ImgIcon\";\r\nimport Stat from '../Stat';\r\nimport { ICharacterSheet, TalentSheet, TalentSheetElementKey } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey } from \"../Types/consts\";\r\nimport { objectFromKeyMap } from \"../Util/Util\";\r\nimport expCurveJSON from './expCurve_gen.json';\r\n\r\nconst expCurve = expCurveJSON as CharacterExpCurveData\r\n\r\nexport const charImport = import('../Data/Characters').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return objectFromKeyMap(Object.keys(imp.default), charKey => new CharacterSheet(imp.default[charKey]))\r\n})\r\n\r\nconst loadCharacterSheet = objectFromKeyMap(allCharacterKeys, set => charImport.then(sheets => sheets[set]))\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | \"\"): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get nameWIthIcon() { return <span><ImgIcon src={this.thumbImgSide} sx={{ height: \"2em\", marginTop: \"-2em\", marginLeft: \"-0.5em\" }} /> {this.name}</span> }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get thumbImgSide() { return this.sheet.thumbImgSide }\r\n  get bannerImg() { return this.sheet.bannerImg }\r\n  get rarity() { return this.sheet.rarity }\r\n  get elementKey() { return \"elementKey\" in this.sheet ? this.sheet.elementKey : undefined }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get isAutoElemental() { return this.sheet.weaponTypeKey === \"catalyst\" }\r\n  getBase = (statKey: \"characterHP\" | \"characterDEF\" | \"characterATK\", level = 1, ascensionLvl = 0) => {\r\n    const key = statKey === \"characterHP\" ? \"hp\" : statKey === \"characterDEF\" ? \"def\" : \"atk\"\r\n    return this.sheet.baseStat[key] * (expCurve[this.sheet.baseStatCurve[key] as any])[level] + this.sheet.ascensions[ascensionLvl].props[key]\r\n  }\r\n\r\n  getSpecializedStat = (ascensionLvl = 0): string | undefined => Object.keys(this.sheet.ascensions[ascensionLvl].props).find(k => k !== \"hp\" && k !== \"def\" && k !== \"atk\")\r\n  getSpecializedStatVal = (ascensionLvl = 0): number => {\r\n    const statKey = this.getSpecializedStat(ascensionLvl)\r\n    if (!statKey) return 0\r\n    const value = this.sheet.ascensions[ascensionLvl].props[statKey] ?? 0\r\n    if (Stat.getStatUnit(statKey) === \"%\") return value * 100\r\n    return value\r\n  }\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n  get isTraveler() {\r\n    return \"talents\" in this.sheet\r\n  }\r\n  getTalent = (eleKey: ElementKey = \"anemo\"): TalentSheet | undefined => {\r\n    if (\"talent\" in this.sheet) return this.sheet.talent\r\n    else return this.sheet.talents[eleKey]\r\n  }\r\n  getTalentOfKey = (talentKey: TalentSheetElementKey, eleKey: ElementKey = \"anemo\") => this.getTalent(eleKey)?.sheets[talentKey]\r\n}\r\n","import ImgIcon from \"../Components/Image/ImgIcon\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { IArtifactSheet, SetEffectEntry } from \"../Types/artifact\";\r\nimport { allArtifactSets, allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey } from \"../Types/consts\";\r\nimport { BonusStats, ICalculatedStats } from \"../Types/stats\";\r\nimport { mergeStats } from \"../Util/StatUtil\";\r\nimport { deepClone, evalIfFunc, objectFromKeyMap } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value, set)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = objectFromKeyMap(allArtifactSets, set => artifactImport.then(sheets => sheets[set]))\r\n\r\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  readonly key: ArtifactSetKey\r\n  constructor(data: IArtifactSheet, setKey: ArtifactSetKey) {\r\n    this.data = data\r\n    this.key = setKey\r\n  }\r\n\r\n  get name() { return tr(this.key, \"setName\") }\r\n  get defIconSrc() {\r\n    const slotKey = this.slots[0]\r\n    if (!this.slotIcons[slotKey]) return undefined\r\n    return this.slotIcons[slotKey]\r\n  }\r\n  /**\r\n   * @deprecated use src directly\r\n   */\r\n  get nameWithIcon() {\r\n    const slotKey = this.slots[0]\r\n    return <span><ImgIcon src={this.slotIcons[slotKey]} /> {tr(this.key, \"setName\")}</span>\r\n  }\r\n\r\n  //This is only for OCR, because we only scan in english right now.\r\n  get nameRaw(): string { return this.data.name }\r\n  get rarity(): readonly ArtifactRarity[] { return this.data.rarity }\r\n  get slots(): SlotKey[] {\r\n    switch (this.key) {\r\n      case \"PrayersForDestiny\":\r\n      case \"PrayersForIllumination\":\r\n      case \"PrayersForWisdom\":\r\n      case \"PrayersToSpringtime\": return [\"circlet\"]\r\n      default: return deepClone(allSlotKeys) as any\r\n    }\r\n  }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\r\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): BonusStats {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\r\n  setEffectDocument = (setNum: SetNum) => this.data.setEffects[setNum]?.document\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<ArtifactRarity, ArtifactSetKey[]> {\r\n    const grouped: Dict<ArtifactRarity, ArtifactSetKey[]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as ArtifactRarity\r\n      if (grouped[rarity]) grouped[rarity]!.push(key)\r\n      else grouped[rarity] = [key]\r\n    })\r\n    return grouped\r\n  }\r\n\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): BonusStats {\r\n    const artifactSetEffect: BonusStats = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && mergeStats(artifactSetEffect, evalIfFunc(value.stats, charStats))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import { WeaponExpCurveData } from 'pipeline';\r\nimport { Translate } from '../Components/Translate';\r\nimport { ascensionMaxLevel } from '../Data/LevelData';\r\nimport Stat from '../Stat';\r\nimport { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { ICachedWeapon, IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc, objectFromKeyMap } from '../Util/Util';\r\nimport expCurveJSON from './expCurve_gen.json';\r\nconst expCurve = expCurveJSON as WeaponExpCurveData\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return Object.fromEntries(Object.entries(imp.default).map(([weaponKey, value]) =>\r\n    [weaponKey, new WeaponSheet(weaponKey, value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>\r\n})\r\n\r\nconst loadWeaponSheet = objectFromKeyMap(allWeaponKeys, set => weaponImport.then(sheets => sheets[set]))\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  key: WeaponKey;\r\n  constructor(key: string, weaponSheet: IWeaponSheet) {\r\n    this.key = key as WeaponKey\r\n    this.sheet = weaponSheet\r\n  }\r\n  static get = (weaponKey: WeaponKey | \"\"): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICachedWeapon): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  //when there is no substat, assume there is no passive. \r\n  get passiveName() { return this.getSubStatKey() ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (stats: ICalculatedStats) => this.getSubStatKey() ? this.tr(`passiveDescription.${stats.weapon.refineIndex}`) : \"\"\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.icon }\r\n  get imgAwaken() { return this.sheet.iconAwaken }\r\n  get rarity() { return this.sheet.rarity }\r\n  stats = (build: ICalculatedStats): object | undefined => evalIfFunc(this.sheet.stats, build) || {}\r\n  get document() { return this.sheet.document }\r\n  getMainStatValue = (level = 1, ascension = 0) => {\r\n    const { type, base, curve } = this.sheet.mainStat\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatValue = (level = 1, ascension = 0) => {\r\n    if (!this.sheet.subStat) return 0\r\n    let { type, base, curve } = this.sheet.subStat\r\n    if (Stat.getStatUnit(type) === \"%\") base = base * 100\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatKey = () => this.sheet.subStat?.type ?? \"\"\r\n}\r\n","import { FormulaItem, IBaseStat } from './Types/character';\r\nimport { BonusStats, ICalculatedStats, Modifier } from './Types/stats';\r\nimport { resolve } from './Util/KeyPathUtil';\r\nimport { objPathValue } from './Util/Util';\r\n\r\nexport const formulaImport = import('./Data/formula').then(imp => {\r\n  Formula.formulas = imp.default\r\n  return imp.default\r\n})\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | object | undefined> => formulaImport.then(formulas => objPathValue(formulas, keys))\r\n  static computeModifier(stat: IBaseStat, modifier: Modifier | undefined): (s: ICalculatedStats) => BonusStats {\r\n    if (!modifier || !Object.keys(modifier).length) return () => ({})\r\n\r\n    // Keep objs separate here, so that it won't need to be recomputed when the modifier is triggered\r\n    const objs = Object.entries(modifier).map(([key, formulas]) =>\r\n      [key, formulas.map(path => Formula.getCurrent(path, stat)[0])] as [string, ((s: ICalculatedStats) => number)[]])\r\n\r\n    return s => Object.fromEntries(objs.map(([key, formulas]) =>\r\n      [key, formulas.reduce((a, formula) => a + formula(s), 0)]))\r\n  }\r\n  static getCurrent(path: string[], stat: IBaseStat): FormulaItem {\r\n    return resolve<any, (stat: IBaseStat) => FormulaItem>(Formula.formulas, path)(stat)\r\n  }\r\n}\r\n","export function KeyPath<Base, Value = Base>(prefix: string[] = []): PartialPath<Base, Value> {\r\n  const path = () => path.keys\r\n  path.keys = prefix\r\n\r\n  return new Proxy(path, {\r\n    get: (partial, symbol) => KeyPath([...partial.keys, symbol.toString()])\r\n  }) as any\r\n}\r\nexport function resolve<Base, Value>(base: Base, path: Path<Base, Value>): Value {\r\n  return path.reduce((current, key) => current?.[key], base as any)\r\n}\r\nexport function assign<Base, Value>(base: Base, path: Path<Base, Value>, value: Value) {\r\n  path.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, base as any)\r\n}\r\n\r\ntype PartialPath<Base, Value> = {\r\n  [key in keyof Value]: PartialPath<Base, Value[key]> & (() => Path<Base, Value>)\r\n}\r\n// eslint-disable-next-line\r\nexport type Path<Base, Value> = string[]","import { WeaponKey, WeaponTypeKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\n\r\nfunction defaultInitialWeaponKey(type: WeaponTypeKey): WeaponKey {\r\n  switch (type) {\r\n    case \"sword\": return \"DullBlade\"\r\n    case \"bow\": return \"HuntersBow\"\r\n    case \"claymore\": return \"WasterGreatsword\"\r\n    case \"polearm\": return \"BeginnersProtector\"\r\n    case \"catalyst\": return \"ApprenticesNotes\"\r\n    default: return \"DullBlade\"\r\n  }\r\n}\r\nexport const defaultInitialWeapon = (type: WeaponTypeKey): ICachedWeapon =>\r\n  initialWeapon(defaultInitialWeaponKey(type))\r\n\r\nexport const initialWeapon = (key: WeaponKey): ICachedWeapon => ({\r\n  id: \"\",\r\n  key,\r\n  level: 1,\r\n  ascension: 0,\r\n  refinement: 1,\r\n  location: \"\",\r\n  lock: false,\r\n})","export function valueStringWithUnit(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return valueString(value, unit) + \"%\"\r\n    case \"eff\": return valueString(value, unit) + \"%\"\r\n    default: return valueString(value, unit)\r\n  }\r\n}\r\n\r\nexport function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1) // TODO: % conversion\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { faCirclet, faFlower, faGoblet, faPlume, faSands } from '../../faIcons'\r\nimport { SlotKey } from \"../../Types/consts\"\r\n\r\nexport const SlotIconSVG: StrictDict<SlotKey, any> = {\r\n  flower: faFlower,\r\n  plume: faPlume,\r\n  sands: faSands,\r\n  goblet: faGoblet,\r\n  circlet: faCirclet\r\n}\r\n\r\nexport function artifactSlotIcon(slotKey: SlotKey) {\r\n  return <FontAwesomeIcon icon={SlotIconSVG[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n}\r\n\r\nexport default function SlotNameWithIcon({ slotKey }: { slotKey: SlotKey }) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  const icon = artifactSlotIcon(slotKey)\r\n  return <span>{icon} {t(`slotName.${slotKey}`)}</span>\r\n}","import { initialBuildSettings } from \"../Build/BuildSetting\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport { allCharacterKeys } from \"../Types/consts\"\r\nimport { crawlObject, layeredAssignment } from \"../Util/Util\"\r\nimport { DBStorage } from \"./DBStorage\"\r\nimport { getDBVersion, setDBVersion } from \"./utils\"\r\n\r\n// MIGRATION STEP\r\n// 0. DO NOT change old `migrateV<x>ToV<x+1>` code\r\n// 1. Add new `migrateV<x>ToV<x+1>`\r\n// 2. Call the added `migrateV<x>ToV<x+1>` from `migrate`\r\n// 3. Update `currentDBVersion`\r\n\r\nexport const currentDBVersion = 14\r\n\r\nexport function migrate(storage: DBStorage): { migrated: boolean } {\r\n  const version = getDBVersion(storage)\r\n\r\n  // Update version upon each successful migration, so we don't\r\n  // need to migrate that part again if later parts fail.\r\n  if (version < 3) { migrateV2ToV3(storage); setDBVersion(storage, 3) }\r\n  if (version < 4) { migrateV3ToV4(storage); setDBVersion(storage, 4) }\r\n  if (version < 5) { migrateV4ToV5(storage); setDBVersion(storage, 5) }\r\n  if (version < 6) { migrateV5ToV6(storage); setDBVersion(storage, 6) }\r\n  if (version < 7) { migrateV6ToV7(storage); setDBVersion(storage, 7) }\r\n  if (version < 8) { migrateV7ToV8(storage); setDBVersion(storage, 8) }\r\n  if (version < 9) { migrateV8ToV9(storage); setDBVersion(storage, 9) }\r\n  if (version < 10) { migrateV9ToV10(storage); setDBVersion(storage, 10) }\r\n  if (version < 11) { migrateV10ToV11(storage); setDBVersion(storage, 11) }\r\n  if (version < 12) { migrateV11ToV12(storage); setDBVersion(storage, 12) }\r\n  if (version < 13) { migrateV12ToV13(storage); setDBVersion(storage, 13) }\r\n  if (version < 14) { migrateV13ToV14(storage); setDBVersion(storage, 14) }\r\n\r\n  if (version > currentDBVersion) throw new Error(`Database version ${version} is not supported`)\r\n\r\n  return { migrated: version < getDBVersion(storage) }\r\n}\r\n\r\n/// v4.0.0 - v4.23.2\r\nfunction migrateV2ToV3(storage: DBStorage) {\r\n  const state = storage.get(\"CharacterDisplay.state\")\r\n  if (state) {\r\n    if (Array.isArray(state.elementalFilter)) state.elementalFilter = \"\"\r\n    if (Array.isArray(state.weaponFilter)) state.weaponFilter = \"\"\r\n    storage.set(\"CharacterDisplay.state\", state)\r\n  }\r\n\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = storage.get(key)\r\n      if (!value) continue\r\n      if (value.buildSetting) {\r\n        const { artifactsAssumeFull = false, ascending = false, mainStat = [\"\", \"\", \"\"], setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }], useExcludedArts = false } = value.buildSetting ?? {}\r\n        value.buildSettings = { mainStatAssumptionLevel: artifactsAssumeFull ? 20 : 0, ascending, mainStatKeys: mainStat, setFilters, useExcludedArts }\r\n      }\r\n\r\n      storage.set(key, value)\r\n    }\r\n  }\r\n}\r\n\r\n/// v5.0.0 - v5.7.15\r\nfunction migrateV3ToV4(storage: DBStorage) { // \r\n  // Convert anemo traveler to traveler, and remove geo traveler\r\n  const traveler = storage.get(\"char_traveler_anemo\")\r\n  // Deletion of old travelers are handled during validation\r\n\r\n  if (traveler) {\r\n    traveler.elementKey = \"anemo\"\r\n    traveler.characterKey = \"traveler\"\r\n    storage.set(\"char_traveler\", traveler)\r\n  }\r\n\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"artifact_\")) {\r\n      const value = storage.get(key)\r\n      let requireUpdate = false\r\n      if (value.location === \"traveler_anemo\") {\r\n        value.location = \"traveler\"\r\n        requireUpdate = true\r\n      } else if (value.location === \"traveler_geo\") {\r\n        value.location = \"\"\r\n        requireUpdate = true\r\n      }\r\n\r\n      if (requireUpdate)\r\n        storage.set(key, value)\r\n    }\r\n  }\r\n}\r\n\r\n/// v5.8.0 - v5.11.5\r\nfunction migrateV4ToV5(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = storage.get(key)\r\n\r\n      const levelKey = value.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        value.level = 1\r\n        value.ascension = 0\r\n      } else {\r\n        value.level = level\r\n        value.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n\r\n      // TODO: Remove this once we validate baseStatOverrides\r\n      delete value.baseStatOverrides?.characterLevel\r\n      delete value.baseStatOverrides?.characterHP\r\n      delete value.baseStatOverrides?.characterATK\r\n      delete value.baseStatOverrides?.characterDEF\r\n\r\n      storage.set(key, value)\r\n    }\r\n  }\r\n}\r\n\r\n// v5.12.0 - 5.19.14\r\nfunction migrateV5ToV6(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n\r\n      // Migrate character weapon levels\r\n      if (!character.weapon) continue\r\n      const levelKey = character.weapon.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        character.weapon.level = 1\r\n        character.weapon.ascension = 0\r\n      } else {\r\n        character.weapon.level = level\r\n        character.weapon.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n      storage.set(key, character)\r\n    }\r\n  }\r\n}\r\n\r\n// 5.20.0 - 6.0.0\r\nfunction migrateV6ToV7(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n      if (!character.buildSettings) character.buildSettings = initialBuildSettings()\r\n      else {\r\n        const [sands, goblet, circlet] = (Array.isArray(character.buildSettings?.mainStatKeys) && character.buildSettings?.mainStatKeys) || []\r\n        character.buildSettings.mainStatKeys = initialBuildSettings().mainStatKeys\r\n        if (sands) character.buildSettings.mainStatKeys.sands = [sands]\r\n        if (goblet) character.buildSettings.mainStatKeys.goblet = [goblet]\r\n        if (circlet) character.buildSettings.mainStatKeys.circlet = [circlet]\r\n      }\r\n      storage.set(key, character)\r\n    }\r\n  }\r\n}\r\n\r\n// 6.0.0 - 6.0.17\r\nfunction migrateV7ToV8(storage: DBStorage) {\r\n  const weaponKeyChangeMap = {\r\n    \"PrototypeAminus\": \"PrototypeArchaic\",\r\n    \"PrototypeGrudge\": \"PrototypeStarglitter\",\r\n    \"PrototypeMalice\": \"PrototypeAmber\"\r\n  } as const\r\n  let keyInd = 1;\r\n  function generateWeaponId(storage: DBStorage) {\r\n    let key = `weapon_${keyInd++}`\r\n    while (storage.keys.includes(key))\r\n      key = `weapon_${keyInd++}`\r\n    return key\r\n  }\r\n\r\n  const charMap = Object.fromEntries(allCharacterKeys.map(k => [k.toLowerCase(), k]))\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key), characterKey = character.characterKey\r\n      // We delete old key upon validation\r\n\r\n      const newCharacterKey = charMap[characterKey]\r\n\r\n      // Rename characterKey\r\n      character.key = newCharacterKey\r\n      // Rename conditionalValues with characterKey\r\n      if (character.conditionalValues?.character?.[characterKey]) {\r\n        character.conditionalValues.character[newCharacterKey] = character.conditionalValues?.character?.[characterKey]\r\n        delete character.conditionalValues?.character?.[characterKey]\r\n      }\r\n\r\n      // Convert base-0 `talentLevelKeys` to base-1 `talent`\r\n      if (typeof character.talentLevelKeys === \"object\") {\r\n        character.talent = Object.fromEntries(\r\n          Object.entries(character.talentLevelKeys)\r\n            .map(([key, value]: [any, any]) => [key, value + 1]))\r\n      }\r\n\r\n      //rename buildSettings.useLockedArts to buildSettings.useExcludedArts\r\n      if (character.buildSettings?.useLockedArts !== undefined) {\r\n        character.buildSettings.useExcludedArts = character.buildSettings.useLockedArts\r\n        delete character.buildSettings.useLockedArts\r\n      }\r\n\r\n      const { weapon, ...rest } = character\r\n      if (!weapon) continue\r\n      if (weaponKeyChangeMap[weapon.key])\r\n        weapon.key = weaponKeyChangeMap[weapon.key]\r\n      weapon.location = newCharacterKey\r\n      weapon.refine = weapon.refineIndex + 1\r\n      storage.set(generateWeaponId(storage), weapon)\r\n      storage.set(`char_${newCharacterKey}`, rest)\r\n    } else if (key.startsWith(\"artifact_\")) {\r\n      const artifact = storage.get(key)\r\n      artifact.location = charMap[artifact.location]\r\n      artifact.exclude = artifact.lock\r\n      artifact.rarity = artifact.numStars\r\n      storage.set(key, artifact)\r\n    }\r\n  }\r\n  const BuildsDisplayState = storage.get(\"BuildsDisplay.state\")\r\n  if (BuildsDisplayState) {\r\n    BuildsDisplayState.characterKey = charMap[BuildsDisplayState.characterKey] ?? \"\"\r\n    // Limit maxBuildsToShow\r\n    BuildsDisplayState.maxBuildsToShow = BuildsDisplayState.maxBuildsToShow > 10 ? 5 : BuildsDisplayState.maxBuildsToShow\r\n    storage.set(\"BuildsDisplay.state\", BuildsDisplayState)\r\n  }\r\n  const CharacterDisplayState = storage.get(\"CharacterDisplay.state\")\r\n  if (CharacterDisplayState) {\r\n    CharacterDisplayState.characterKeyToEdit = charMap[CharacterDisplayState.charIdToEdit] ?? \"\"\r\n    delete CharacterDisplayState.charIdToEdit\r\n    storage.set(\"CharacterDisplay.state\", CharacterDisplayState)\r\n  }\r\n}\r\n// 6.1.0 - 6.1.5\r\nfunction migrateV8ToV9(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n      const { buildSettings = {} } = character\r\n      delete buildSettings.ascending\r\n      const { statFilters = {} } = buildSettings\r\n      for (const key in statFilters) {\r\n        if (statFilters[key]?.min)\r\n          statFilters[key] = statFilters[key].min\r\n        else\r\n          delete statFilters[key]\r\n      }\r\n      storage.set(key, character)\r\n    }\r\n  }\r\n}\r\n\r\n// 6.1.6 - 6.1.8\r\nfunction migrateV9ToV10(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"weapon_\")) {\r\n      const weapon = storage.get(key)\r\n      if (weapon.refine) {\r\n        weapon.refinement = weapon.refine\r\n        storage.set(key, weapon)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 6.1.9 - 6.2.3\r\nfunction migrateV10ToV11(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n      const { baseStatOverrides = {} } = character\r\n      if (baseStatOverrides.critRate_) baseStatOverrides.critRate_ -= 5\r\n      if (baseStatOverrides.critDMG_) baseStatOverrides.critDMG_ -= 50\r\n      if (baseStatOverrides.enerRech_) baseStatOverrides.enerRech_ -= 100\r\n\r\n      character.bonusStats = baseStatOverrides\r\n      delete character.baseStatOverrides\r\n      storage.set(key, character)\r\n    }\r\n  }\r\n}\r\n\r\n// 7.0.0 - 7.2.11\r\nfunction migrateV11ToV12(storage: DBStorage) {\r\n  //UI was changed quite a lot, deleting state should be easiest for migration.\r\n  storage.remove(\"CharacterDisplay.state\")\r\n  storage.remove(\"WeaponDisplay.state\")\r\n\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"weapon_\")) {\r\n      const weapon = storage.get(key)\r\n      if (weapon.lock === undefined) weapon.lock = false\r\n      storage.set(key, weapon)\r\n    }\r\n  }\r\n}\r\n\r\n// 7.3.0 - 7.4.2\r\nfunction migrateV12ToV13(storage: DBStorage) {\r\n  // UI was changed quite a lot, deleting state should be easiest for migration.\r\n  storage.remove(\"ArtifactDisplay.state\")\r\n}\r\n\r\n// 7.5.0 - Present\r\nfunction migrateV13ToV14(storage: DBStorage) {\r\n  // Migrate conditionalValues due to keys changes\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n      const newCondValues = {}\r\n      crawlObject(character.conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n        const [type, subkey] = keys\r\n        if (type === \"character\") {\r\n          if (subkey === \"Traveler\") {\r\n            // character, traveler, sheet, talents, element, condKey\r\n            let [character, traveler, , , element, condKey] = keys\r\n            if (!condKey || !element) return\r\n            if (element === \"electro\" && condKey === \"sk\") condKey = \"e\"\r\n            layeredAssignment(newCondValues, [character, `${traveler}_${element}`, condKey], conditionalValue)\r\n          } else {\r\n            // character, charKey, sheet, talent, condKey\r\n            let [character, charKey, , , condKey] = keys\r\n            if (!condKey) return\r\n            switch (charKey) {\r\n              case \"Diona\":\r\n                if (condKey === \"c4\") condKey = \"a1\"\r\n                break;\r\n              case \"Diluc\":\r\n                if (condKey === \"b\") condKey = \"q\"\r\n                break;\r\n              case \"KamisatoAyaka\":\r\n                if (condKey === \"p1\") condKey = \"a1\"\r\n                if (condKey === \"p2\") condKey = \"a4\"\r\n                break;\r\n              case \"RaidenShogun\":\r\n                if (condKey === \"sk\") condKey = \"e\"\r\n                if (condKey === \"skp\") condKey = \"ep\"\r\n                if (condKey === \"res\") condKey = \"q\"\r\n                break;\r\n              case \"SangonomiyaKokomi\":\r\n                if (condKey === \"b\") condKey = \"q\"\r\n                break;\r\n              case \"Xiao\":\r\n                if (condKey === \"a1\") condKey = \"a4\"\r\n                break;\r\n              case \"Xinyan\":\r\n                if (condKey === \"a1\") condKey = \"c1\"\r\n                break;\r\n              case \"Yanfei\":\r\n                if (condKey === \"p1\") condKey = \"a1\"\r\n                break;\r\n              case \"Zhongli\":\r\n                if (condKey === \"sk\") condKey = \"e\"\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            layeredAssignment(newCondValues, [character, charKey, condKey], conditionalValue)\r\n          }\r\n        } else if (type === \"weapon\") {\r\n          let [weapon, weaponKey, condKey] = keys\r\n          if (!condKey) return\r\n          if (weaponKey === \"Whiteblind\" && condKey === \"infusionBlade\") condKey = \"ib\"\r\n          if (weaponKey === \"PrototypeRancour\" && condKey === \"smashedStone\") condKey = \"ss\"\r\n          layeredAssignment(newCondValues, [weapon, weaponKey, condKey], conditionalValue)\r\n        } else if (type === \"artifact\") {\r\n          let [artifact, setKey, condKey] = keys\r\n          if (!condKey) return\r\n          layeredAssignment(newCondValues, [artifact, setKey, condKey, condKey], conditionalValue)\r\n        }\r\n      })\r\n      character.conditionalValues = newCondValues\r\n      character.team = [\"\", \"\", \"\"]\r\n      storage.set(key, character)\r\n    }\r\n  }\r\n}","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nexport const allHitModes = [\"hit\", \"avgHit\", \"critHit\"] as const\r\nexport const allReactionModes = [\"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",] as const\r\nexport const allArtifactSetCount = [1, 2, 3, 4, 5] as const\r\nexport const allRarities = [5, 4, 3, 2, 1] as const\r\nexport const allArtifactRarities = [5, 4, 3] as const\r\nexport const allSlotKeys = [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"] as const\r\nexport const allElements = ['anemo', 'geo', 'electro', 'hydro', 'pyro', 'cryo'] as const\r\nexport const allElementsWithPhy = [\"physical\", ...allElements] as const\r\nexport const allWeaponTypeKeys = ['sword', 'claymore', 'polearm', 'bow', 'catalyst'] as const\r\nexport const allArtifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\",\r\n  \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\",\r\n  \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\",\r\n  \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\",\r\n  \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\",\r\n  \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\",\r\n  \"WanderersTroupe\", \"TenacityOfTheMillelith\", \"PaleFlame\", \"EmblemOfSeveredFate\", \"ShimenawasReminiscence\",\r\n  \"HuskOfOpulentDreams\", \"OceanHuedClam\"\r\n] as const\r\nexport const allCharacterKeys = [\r\n  \"Albedo\", \"Amber\", \"Barbara\", \"Beidou\", \"Bennett\", \"Chongyun\", \"Diluc\", \"Diona\", \"Fischl\", \"Ganyu\",\r\n  \"HuTao\", \"Jean\", \"Kaeya\", \"Keqing\", \"Klee\", \"Lisa\", \"Mona\", \"Ningguang\", \"Noelle\", \"Qiqi\",\r\n  \"Razor\", \"Sucrose\", \"Tartaglia\", \"Traveler\", \"RaidenShogun\", \"Venti\", \"Xiao\", \"Xiangling\", \"Xingqiu\", \"Xinyan\",\r\n  \"Zhongli\", \"Rosaria\", \"Yanfei\", \"Eula\", \"KaedeharaKazuha\", \"KamisatoAyaka\", \"Sayu\", \"Yoimiya\", \"KujouSara\", \"Aloy\",\r\n  \"SangonomiyaKokomi\", \"Thoma\"\r\n] as const\r\nexport const allWeaponKeys = [\r\n  \"DullBlade\", \"SilverSword\", \"CoolSteel\", \"DarkIronSword\", \"FilletBlade\", \"HarbingerOfDawn\", \"SkyriderSword\",\r\n  \"TravelersHandySword\", \"BlackcliffLongsword\", \"FavoniusSword\", \"IronSting\", \"LionsRoar\", \"PrimordialJadeCutter\",\r\n  \"PrototypeRancour\", \"RoyalLongsword\", \"SacrificialSword\", \"TheAlleyFlash\", \"TheBlackSword\", \"TheFlute\",\r\n  \"SwordOfDescension\", \"FesteringDesire\", \"AquilaFavonia\", \"SkywardBlade\", \"SummitShaper\", \"WasterGreatsword\",\r\n  \"OldMercsPal\", \"BloodtaintedGreatsword\", \"DebateClub\", \"FerrousShadow\", \"Akuoumaru\", \"SkyriderGreatsword\",\r\n  \"WhiteIronGreatsword\", \"BlackcliffSlasher\", \"FavoniusGreatsword\", \"LithicBlade\", \"PrototypeArchaic\", \"Rainslasher\",\r\n  \"RoyalGreatsword\", \"SerpentSpine\", \"TheBell\", \"Whiteblind\", \"SacrificialGreatsword\", \"SnowTombedStarsilver\",\r\n  \"SkywardPride\", \"WolfsGravestone\", \"TheUnforged\", \"BeginnersProtector\", \"IronPoint\", \"BlackTassel\", \"Halberd\",\r\n  \"WhiteTassel\", \"BlackcliffPole\", \"CrescentPike\", \"Deathmatch\", \"DragonsBane\", \"LithicSpear\", \"PrototypeStarglitter\",\r\n  \"FavoniusLance\", \"RoyalSpear\", \"DragonspineSpear\", \"VortexVanquisher\", \"PrimordialJadeWingedSpear\", \"StaffOfHoma\",\r\n  \"SkywardSpine\", \"HuntersBow\", \"SeasonedHuntersBow\", \"PolarStar\", \"Messenger\", \"RavenBow\", \"RecurveBow\",\r\n  \"SharpshootersOath\", \"Slingshot\", \"TheStringless\", \"AlleyHunter\", \"BlackcliffWarbow\", \"CompoundBow\",\r\n  \"FavoniusWarbow\", \"PrototypeCrescent\", \"RoyalBow\", \"Rust\", \"SacrificialBow\", \"TheViridescentHunt\", \"SkywardHarp\",\r\n  \"AmosBow\", \"ElegyForTheEnd\", \"WindblumeOde\", \"ApprenticesNotes\", \"PocketGrimoire\", \"EngulfingLightning\", \"EmeraldOrb\",\r\n  \"MagicGuide\", \"OtherworldlyStory\", \"ThrillingTalesOfDragonSlayers\", \"TwinNephrite\", \"BlackcliffAgate\",\r\n  \"FavoniusCodex\", \"MappaMare\", \"PrototypeAmber\", \"RoyalGrimoire\", \"SacrificialFragments\", \"SolarPearl\", \"TheWidsith\",\r\n  \"WineAndSong\", \"EyeOfPerception\", \"Frostbearer\", \"LostPrayerToTheSacredWinds\", \"SkywardAtlas\", \"MemoryOfDust\",\r\n  \"SongOfBrokenPines\", \"DodocoTales\", \"MitternachtsWaltz\", \"FreedomSworn\", \"AmenomaKageuchi\", \"MistsplitterReforged\",\r\n  \"KatsuragikiriNagamasa\", \"KitainCrossSpear\", \"ThunderingPulse\", \"Hamayumi\", \"HakushinRing\", \"TheCatch\",\r\n  \"EverlastingMoonglow\", \"LuxuriousSeaLord\", \"Predator\", \"MouunsMoon\", \"WavebreakersFin\", \"CinnabarSpindle\",\r\n] as const\r\nexport const characterSpecializedStatKeys = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"] as const\r\n\r\nexport type HitModeKey = typeof allHitModes[number]\r\nexport type ReactionModeKey = typeof allReactionModes[number]\r\nexport type SetNum = typeof allArtifactSetCount[number]\r\nexport type Rarity = typeof allRarities[number]\r\nexport type ArtifactRarity = typeof allArtifactRarities[number]\r\nexport type SlotKey = typeof allSlotKeys[number]\r\nexport type ElementKey = typeof allElements[number]\r\nexport type ElementKeyWithPhy = typeof allElementsWithPhy[number]\r\nexport type ArtifactSetKey = typeof allArtifactSets[number]\r\nexport type CharacterKey = typeof allCharacterKeys[number]\r\nexport type WeaponKey = typeof allWeaponKeys[number]\r\nexport type WeaponTypeKey = typeof allWeaponTypeKeys[number]\r\nexport type CharacterSpecializedStatKey = typeof characterSpecializedStatKeys[number]","export class DataManager<Key extends string | number, Value> {\r\n  static readonly allKeys = {} as const\r\n\r\n  data: Dict<Key, Value> = {}\r\n  listeners: Dict<Key, Callback<Value | undefined>[]> = {}\r\n  anyListeners: Callback<Key | typeof DataManager.allKeys>[] = []\r\n\r\n  followAny(callback: Callback<Key | typeof DataManager.allKeys>): () => void {\r\n    this.anyListeners.push(callback)\r\n    return () => {\r\n      this.anyListeners = this.anyListeners.filter(cb => cb !== callback)\r\n    }\r\n  }\r\n  follow(key: Key, callback: Callback<Value | undefined>) {\r\n    if (this.listeners[key]) this.listeners[key]!.push(callback)\r\n    else this.listeners[key] = [callback]\r\n    return () => {\r\n      this.listeners[key] = this.listeners[key]?.filter(cb => cb !== callback)\r\n      if (!this.listeners[key]?.length) delete this.listeners[key]\r\n    }\r\n  }\r\n\r\n  get keys() { return Object.keys(this.data) }\r\n  get values() { return Object.values(this.data) }\r\n  get(key: Key | \"\" | undefined): Value | undefined { return key ? this.data[key] : undefined }\r\n  set(key: Key, value: Value) {\r\n    this.data[key] = value\r\n\r\n    this.trigger(key)\r\n  }\r\n  /** Trigger update event */\r\n  trigger(key: Key) {\r\n    const value = this.data[key]\r\n    this.listeners[key]?.forEach(cb => cb(value))\r\n    this.anyListeners.forEach(cb => cb(key))\r\n  }\r\n  remove(key: Key) {\r\n    delete this.data[key]\r\n    this.trigger(key)\r\n    delete this.listeners[key]\r\n  }\r\n  removeAll() {\r\n    this.data = {}\r\n\r\n    Object.values(this.listeners).forEach(listeners => listeners.forEach(listener => listener(undefined)))\r\n    this.anyListeners.forEach(listener => listener(DataManager.allKeys))\r\n    this.listeners = {}\r\n    this.anyListeners = []\r\n  }\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg) => void\r\n","import { ICachedArtifact, IArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter, ICharacter } from \"../Types/character\";\r\nimport { allSlotKeys, CharacterKey, SlotKey } from \"../Types/consts\";\r\nimport { getRandomInt, objectFromKeyMap } from \"../Util/Util\";\r\nimport { DataManager } from \"./DataManager\";\r\nimport { migrate } from \"./migration\";\r\nimport { validateArtifact, parseCharacter, parseArtifact, removeArtifactCache, validateCharacter, removeCharacterCache, parseWeapon, validateWeapon, removeWeaponCache } from \"./validation\";\r\nimport { DBStorage, dbStorage } from \"./DBStorage\";\r\nimport { ICachedWeapon, IWeapon } from \"../Types/weapon\";\r\nimport { createContext } from \"react\";\r\nimport { defaultInitialWeapon } from \"../Weapon/WeaponUtil\";\r\n\r\nexport class ArtCharDatabase {\r\n  storage: DBStorage\r\n  arts = new DataManager<string, ICachedArtifact>()\r\n  chars = new DataManager<CharacterKey, ICachedCharacter>()\r\n  weapons = new DataManager<string, ICachedWeapon>()\r\n\r\n  constructor(storage: DBStorage) {\r\n    this.storage = storage\r\n    this.reloadStorage()\r\n  }\r\n\r\n  /// Call this function when the underlying data changes without this instance's knowledge\r\n  reloadStorage() {\r\n    this.arts.removeAll()\r\n    this.chars.removeAll()\r\n    this.weapons.removeAll()\r\n    const storage = this.storage\r\n    const { migrated } = migrate(storage)\r\n\r\n    // Load into memory and verify database integrity\r\n    for (const key of storage.keys) {\r\n      if (key.startsWith(\"char_\")) {\r\n        const flex = parseCharacter(storage.get(key))\r\n        if (!flex || key !== `char_${flex.key}`) {\r\n          // Non-recoverable\r\n          storage.remove(key)\r\n          continue\r\n        }\r\n        const character = validateCharacter(flex)\r\n        // Use relations from artifact\r\n        character.equippedArtifacts = objectFromKeyMap(allSlotKeys, () => \"\")\r\n\r\n        this.chars.set(flex.key, character)\r\n        // Save migrated version back to db\r\n        if (migrated) this.storage.set(`char_${flex.key}`, flex)\r\n      }\r\n    }\r\n\r\n    for (const key of storage.keys) {\r\n      if (key.startsWith(\"artifact_\")) {\r\n        const flex = parseArtifact(storage.get(key))\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          storage.remove(key)\r\n          continue\r\n        }\r\n\r\n        // Update relations\r\n        const { location, slotKey } = flex\r\n        if (this.chars.data[location] && this.chars.data[location]?.equippedArtifacts[slotKey] === \"\") {\r\n          this.chars.data[location]!.equippedArtifacts[slotKey] = key // equiped on `location`\r\n        } else flex.location = \"\"\r\n\r\n        const { artifact } = validateArtifact(flex, key)\r\n\r\n        this.arts.set(artifact.id, artifact)\r\n        // Save migrated version back to db\r\n        if (migrated) this.storage.set(key, flex)\r\n      }\r\n    }\r\n    for (const key of storage.keys) {\r\n      if (key.startsWith(\"weapon_\")) {\r\n        const flex = parseWeapon(storage.get(key))\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          storage.remove(key)\r\n          continue\r\n        }\r\n\r\n        // Update relations\r\n        const { location } = flex\r\n        if (this.chars.data[location] && this.chars.data[location]?.equippedWeapon === \"\") {\r\n          this.chars.data[location]!.equippedWeapon = key // equiped on `location`\r\n        } else flex.location = \"\"\r\n\r\n        const weapon = validateWeapon(flex, key)\r\n\r\n        this.weapons.set(key, weapon)\r\n        // Save migrated version back to db\r\n        if (migrated) this.storage.set(key, flex)\r\n      }\r\n    }\r\n    const weaponIds = new Set(this.weapons.keys)\r\n    for (const [charKey, char] of Object.entries(this.chars.data)) {\r\n      if (!char.equippedWeapon) {\r\n        // A default \"sword\" should work well enough for this case.\r\n        // We'd have to pull the hefty character sheet otherwise.\r\n        const weapon = defaultInitialWeapon(\"sword\")\r\n        const weaponId = generateRandomWeaponID(weaponIds)\r\n        weapon.location = charKey\r\n        char.equippedWeapon = weaponId\r\n\r\n        weaponIds.add(weaponId)\r\n        this.weapons.set(weaponId, weapon)\r\n        this.storage.set(weaponId, removeWeaponCache(weapon))\r\n        // No need to set anything on character side.\r\n      }\r\n    }\r\n  }\r\n\r\n  private saveArt(key: string, art: ICachedArtifact) {\r\n    this.storage.set(key, removeArtifactCache(art))\r\n    this.arts.set(key, art)\r\n  }\r\n  private saveChar(key: CharacterKey, char: ICachedCharacter) {\r\n    this.storage.set(`char_${key}`, removeCharacterCache(char))\r\n    this.chars.set(key, char)\r\n  }\r\n  private saveWeapon(key: string, weapon: ICachedWeapon) {\r\n    this.storage.set(key, removeWeaponCache(weapon))\r\n    this.weapons.set(key, weapon)\r\n  }\r\n  // TODO: Make theses `_` functions private once we migrate to use `followXXX`,\r\n  // or de-underscore it if we decide that these are to stay\r\n  _getArt(key: string) { return this.arts.get(key) }\r\n  _getChar(key: CharacterKey | \"\") { return key ? this.chars.get(key) : undefined }\r\n  _getArts() { return this.arts.values }\r\n  _getCharKeys(): CharacterKey[] { return this.chars.keys }\r\n  _getWeapon(key: string) { return this.weapons.get(key) }\r\n  _getWeapons() { return this.weapons.values }\r\n\r\n  followChar(key: CharacterKey, cb: Callback<ICachedCharacter>): (() => void) | undefined { return this.chars.follow(key, cb) }\r\n  followArt(key: string, cb: Callback<ICachedArtifact>): (() => void) | undefined {\r\n    if (this.arts.get(key) !== undefined)\r\n      return this.arts.follow(key, cb)\r\n    // cb(undefined)\r\n  }\r\n  followWeapon(key: string, cb: Callback<ICachedWeapon>): (() => void) | undefined {\r\n    if (this.weapons.get(key) !== undefined)\r\n      return this.weapons.follow(key, cb)\r\n    // cb(undefined)\r\n  }\r\n\r\n  followAnyChar(cb: (key: CharacterKey | {}) => void): (() => void) | undefined { return this.chars.followAny(cb) }\r\n  followAnyArt(cb: (key: string | {}) => void): (() => void) | undefined { return this.arts.followAny(cb) }\r\n  followAnyWeapon(cb: (key: string | {}) => void): (() => void) | undefined { return this.weapons.followAny(cb) }\r\n\r\n  /**\r\n   * **Caution**: This does not update `equippedArtifacts`, use `equipArtifacts` instead\r\n   * **Caution**: This does not update `equipedWeapon`, use `setWeaponLocation` instead\r\n   */\r\n  updateChar(value: Partial<ICharacter>): void {\r\n    const key = value.key!\r\n    const oldChar = this._getChar(key)\r\n    const parsedChar = parseCharacter({ ...oldChar, ...value })\r\n    if (!parsedChar) return\r\n\r\n    const newChar = validateCharacter({ ...oldChar, ...parsedChar })\r\n    if (oldChar) {\r\n      newChar.equippedArtifacts = oldChar.equippedArtifacts\r\n      newChar.equippedWeapon = oldChar.equippedWeapon\r\n    }\r\n    this.saveChar(key, newChar)\r\n  }\r\n\r\n  /**\r\n   * **Caution** This does not update `location`, use `setLocation` instead\r\n   */\r\n  updateArt(value: Partial<IArtifact>, id: string) {\r\n    const oldArt = this.arts.get(id)\r\n    const parsedArt = parseArtifact({ ...oldArt, ...value })\r\n    if (!parsedArt) return\r\n\r\n    const newArt = validateArtifact({ ...oldArt, ...parsedArt }, id).artifact\r\n    if (oldArt) {\r\n      newArt.location = oldArt.location\r\n    }\r\n    this.saveArt(id, newArt)\r\n    if (newArt.location)\r\n      this.arts.trigger(newArt.location)\r\n  }\r\n  /**\r\n   * **Caution** This does not update `location` use `setWeaponLocation` instead\r\n   */\r\n  updateWeapon(value: Partial<IWeapon>, id: string) {\r\n    const oldWeapon = this.weapons.get(id)\r\n    const parsedWeapon = parseWeapon({ ...oldWeapon, ...value })\r\n    if (!parsedWeapon) return\r\n\r\n    const newWeapon = validateWeapon({ ...oldWeapon, ...parsedWeapon }, id)\r\n    this.saveWeapon(id, newWeapon)\r\n    if (newWeapon.location)\r\n      this.chars.trigger(newWeapon.location)\r\n  }\r\n\r\n  createArt(value: IArtifact): string {\r\n    const id = generateRandomArtID(new Set(this.arts.keys))\r\n    const newArt = validateArtifact(parseArtifact({ ...value, location: \"\" })!, id).artifact\r\n    this.saveArt(id, newArt)\r\n    return id\r\n  }\r\n  createWeapon(value: IWeapon): string {\r\n    const id = generateRandomWeaponID(new Set(this.weapons.keys))\r\n    const newWeapon = validateWeapon(parseWeapon({ ...value, location: \"\" })!, id)\r\n    this.saveWeapon(id, newWeapon)\r\n    return id\r\n  }\r\n\r\n  removeChar(key: CharacterKey) {\r\n    const char = this.chars.get(key)\r\n    if (!char) return\r\n\r\n    for (const artKey of Object.values(char.equippedArtifacts)) {\r\n      const art = this.arts.get(artKey)\r\n      if (art && art.location === key) {\r\n        art.location = \"\"\r\n        this.saveArt(artKey, art)\r\n      }\r\n    }\r\n    const weapon = this.weapons.get(char.equippedWeapon)\r\n    if (weapon && weapon.location === key) {\r\n      weapon.location = \"\"\r\n      this.saveWeapon(char.equippedWeapon, weapon)\r\n    }\r\n\r\n    this.storage.remove(`char_${key}`)\r\n    this.chars.remove(key)\r\n  }\r\n  removeArt(key: string) {\r\n    const art = this.arts.get(key)\r\n    if (!art) return\r\n\r\n    const char = art.location && this.chars.get(art.location)\r\n    if (char && char.equippedArtifacts[art.slotKey] === key) {\r\n      char.equippedArtifacts[art.slotKey] = \"\"\r\n      this.saveChar(char.key, char)\r\n    }\r\n    this.storage.remove(key)\r\n    this.arts.remove(key)\r\n  }\r\n  removeWeapon(key: string) {\r\n    const weapon = this.weapons.get(key)\r\n    if (!weapon || weapon.location)\r\n      return // Can't delete equipped weapon here\r\n\r\n    this.storage.remove(key)\r\n    this.weapons.remove(key)\r\n  }\r\n  setArtLocation(artKey: string, newCharKey: CharacterKey | \"\") {\r\n    const art1 = this.arts.get(artKey)\r\n    if (!art1 || art1.location === newCharKey) return\r\n\r\n    const slotKey = art1.slotKey\r\n    const char1 = this.chars.get(newCharKey)\r\n    const art2 = this.arts.get(char1?.equippedArtifacts[slotKey])\r\n    const char2 = this.chars.get(art1.location)\r\n\r\n    // Currently art1 <-> char2 & art2 <-> char1\r\n    // Swap to art1 <-> char1 & art2 <-> char2\r\n\r\n    this.saveArt(art1.id, { ...art1, location: char1?.key ?? \"\" })\r\n    if (art2)\r\n      this.saveArt(art2.id, { ...art2, location: char2?.key ?? \"\" })\r\n    if (char1)\r\n      this.saveChar(char1.key, { ...char1, equippedArtifacts: { ...char1.equippedArtifacts, [slotKey]: art1.id } })\r\n    if (char2)\r\n      this.saveChar(char2.key, { ...char2, equippedArtifacts: { ...char2.equippedArtifacts, [slotKey]: art2?.id ?? \"\" } })\r\n  }\r\n  setWeaponLocation(weaponId: string, newCharKey: CharacterKey | \"\") {\r\n    const weapon1 = this.weapons.get(weaponId)\r\n    const char1 = this.chars.get(newCharKey)\r\n    if (!weapon1 || !char1 || weapon1.location === newCharKey) return\r\n\r\n    const weapon2 = this.weapons.get(char1.equippedWeapon)!\r\n    const char2 = this.chars.get(weapon1.location)\r\n\r\n    // Currently weapon1 <-> char2 & weapon2 <-> char1\r\n    // Swap to weapon1 <-> char1 & weapon2 <-> char2\r\n\r\n    this.saveWeapon(weapon1.id, { ...weapon1, location: char1.key })\r\n    this.saveChar(char1.key, { ...char1, equippedWeapon: weapon1.id })\r\n\r\n    if (weapon2)\r\n      this.saveWeapon(weapon2.id, { ...weapon2, location: char2?.key ?? \"\" })\r\n    if (char2)\r\n      this.saveChar(char2.key, { ...char2, equippedWeapon: weapon2.id })\r\n  }\r\n  equipArtifacts(charKey: CharacterKey, newArts: StrictDict<SlotKey, string>) {\r\n    const char = this.chars.get(charKey)\r\n    if (!char) return\r\n\r\n    const oldArts = char.equippedArtifacts\r\n    for (const [slot, newArt] of Object.entries(newArts)) {\r\n      if (newArt) this.setArtLocation(newArt, charKey)\r\n      else if (oldArts[slot]) this.setArtLocation(oldArts[slot], \"\")\r\n    }\r\n  }\r\n\r\n  findDuplicates(editorArt: IArtifact): { duplicated: ICachedArtifact[], upgraded: ICachedArtifact[] } {\r\n    const { setKey, rarity, level, slotKey, mainStatKey, substats } = editorArt\r\n\r\n    const candidates = this._getArts().filter(candidate =>\r\n      setKey === candidate.setKey &&\r\n      rarity === candidate.rarity &&\r\n      slotKey === candidate.slotKey &&\r\n      mainStatKey === candidate.mainStatKey &&\r\n      level >= candidate.level &&\r\n      substats.every((substat, i) =>\r\n        !candidate.substats[i].key || // Candidate doesn't have anything on this slot\r\n        (substat.key === candidate.substats[i].key && // Or editor simply has better substat\r\n          substat.value >= candidate.substats[i].value)\r\n      )\r\n    )\r\n\r\n    // Strictly upgraded artifact\r\n    const upgraded = candidates.filter(candidate =>\r\n      level > candidate.level &&\r\n      (Math.floor(level / 4) === Math.floor(candidate.level / 4) ? // Check for extra rolls\r\n        substats.every((substat, i) => // Has no extra roll\r\n          substat.key === candidate.substats[i].key && substat.value === candidate.substats[i].value) :\r\n        substats.some((substat, i) => // Has extra rolls\r\n          candidate.substats[i].key ?\r\n            substat.value > candidate.substats[i].value : // Extra roll to existing substat\r\n            substat.key // Extra roll to new substat\r\n        )\r\n      )\r\n    )\r\n    // Strictly duplicated artifact\r\n    const duplicated = candidates.filter(candidate =>\r\n      level === candidate.level &&\r\n      substats.every(substat =>\r\n        !substat.key ||  // Empty slot\r\n        candidate.substats.some(candidateSubstat =>\r\n          substat.key === candidateSubstat.key && // Or same slot\r\n          substat.value === candidateSubstat.value\r\n        )))\r\n    return { duplicated, upgraded }\r\n  }\r\n\r\n  findDuplicateWeapons(weapon: IWeapon): { duplicated: ICachedWeapon[], upgraded: ICachedWeapon[] } {\r\n    const { key, level, ascension, refinement } = weapon\r\n\r\n    const candidates = this._getWeapons().filter(candidate =>\r\n      key === candidate.key &&\r\n      level >= candidate.level &&\r\n      ascension >= candidate.ascension &&\r\n      refinement >= candidate.refinement\r\n    )\r\n\r\n    // Strictly upgraded weapons\r\n    const upgraded = candidates.filter(candidate =>\r\n      level > candidate.level ||\r\n      ascension > candidate.ascension ||\r\n      refinement > candidate.refinement\r\n    )\r\n    // Strictly duplicated weapons\r\n    const duplicated = candidates.filter(candidate =>\r\n      level === candidate.level &&\r\n      ascension === candidate.ascension &&\r\n      refinement === candidate.refinement\r\n    )\r\n    return { duplicated, upgraded }\r\n  }\r\n}\r\n\r\n/// Get a random integer (converted to string) that is not in `keys`\r\nfunction generateRandomArtID(keys: Set<string>): string {\r\n  let candidate = \"\"\r\n  do {\r\n    candidate = `artifact_${getRandomInt(1, 2 * (keys.size + 1))}`\r\n  } while (keys.has(candidate))\r\n  return candidate\r\n}\r\n\r\n/// Get a random integer (converted to string) that is not in `keys`\r\nfunction generateRandomWeaponID(keys: Set<string>): string {\r\n  let candidate = \"\"\r\n  do {\r\n    candidate = `weapon_${getRandomInt(1, 2 * (keys.size + 1))}`\r\n  } while (keys.has(candidate))\r\n  return candidate\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg | undefined) => void\r\n\r\nexport const database = new ArtCharDatabase(dbStorage)\r\nexport const DatabaseContext = createContext(database)\r\n","// Elements\r\nexport const faAnemo = {\r\n\tprefix: 'faga',\r\n\ticonName: \"anemo\",\r\n\ticon: [\r\n\t\t14, 13.857,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M.2,4.834c.764,1.2,1.813,2.475,3.362,2.434,1.025-.067,2.374.224,2.679,1.359.313.865-.825,1.982-1.513,1.124-.108-.187-.039-.3.173-.326,1,.021,1.348-1.12.4-1.513-.813-.1-1.548.527-2.329.707C.791,9.247-.524,6.656.2,4.834Zm9.912,2.429c-1.056-.074-2.449.563-2.375,1.786a.973.973,0,0,0,1.1.984c.316.013.724-.546.294-.612-1.621,0-1.022-2.1.346-1.4a5.222,5.222,0,0,0,2.343.687c1.8-.177,2.572-2.3,1.989-3.859C12.938,6.152,11.852,7.446,10.112,7.263Zm-2.42-.772A7.516,7.516,0,0,0,9.918,5.63,3.067,3.067,0,0,0,9.286.018,5.143,5.143,0,0,1,7.692,6.491ZM6.349,6.477A5.071,5.071,0,0,1,4.734,0,3.075,3.075,0,0,0,3.612,5.287a7.944,7.944,0,0,0,2.7,1.235Zm5.342-.089c-1.143.656-2.594.363-3.651,1.217a1.557,1.557,0,0,0,.07,2.768c.234.1.462.206.689.014.223-.167.4-.162.721-.012a9.094,9.094,0,0,0-2.513,3.482,9.217,9.217,0,0,0-2.523-3.478.605.605,0,0,1,.726,0c.6.347,1.443-.4,1.555-1C7.012,8.2,5.829,7.273,4.783,7.049c-.512-.121-1.038-.182-1.55-.3C.866,6.266.51,3.868,1.669,2.034c.668,4.9,4,3.555,5.332,6.26,1.321-2.671,4.678-1.382,5.345-6.261C13.157,3.449,13.4,5.556,11.691,6.388Zm-4.12,5.191L7,11.2l-.572.385.58.972ZM7,10.066a1.592,1.592,0,0,1-1,.911.925.925,0,0,0,.991-.272c.426.327.794.417,1.046.255A1.561,1.561,0,0,1,7,10.066Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faCryo = {\r\n\tprefix: 'faga',\r\n\ticonName: \"cryo\",\r\n\ticon: [\r\n\t\t12.086, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M0,3.52A19.776,19.776,0,0,1,1.911,6.8a6.152,6.152,0,0,0,.128-.624A6.476,6.476,0,0,1,5.5,6.7,6.479,6.479,0,0,1,3.316,3.96a6.308,6.308,0,0,0,.477-.423A19.8,19.8,0,0,1,0,3.52ZM4.411,6.067a7.469,7.469,0,0,0-2.4-.573,3.548,3.548,0,0,0-.2-.933h0a3.559,3.559,0,0,0,.909-.289A7.478,7.478,0,0,0,4.411,6.067ZM0,10.48A19.776,19.776,0,0,0,1.911,7.2a6.152,6.152,0,0,1,.128.624A6.476,6.476,0,0,0,5.5,7.3,6.479,6.479,0,0,0,3.316,10.04a6.308,6.308,0,0,1,.477.423A19.8,19.8,0,0,0,0,10.48ZM4.411,7.933a7.469,7.469,0,0,1-2.4.573,3.548,3.548,0,0,1-.2.933h0a3.559,3.559,0,0,1,.909.289A7.478,7.478,0,0,1,4.411,7.933ZM6.043,14a19.768,19.768,0,0,0-1.882-3.293,6.161,6.161,0,0,1,.605.2A6.467,6.467,0,0,0,6.043,7.649,6.478,6.478,0,0,0,7.32,10.908a6.251,6.251,0,0,1,.6-.2A19.768,19.768,0,0,0,6.043,14Zm0-5.094a7.461,7.461,0,0,1-.7,2.368,3.577,3.577,0,0,1,.705.643h0a3.561,3.561,0,0,1,.706-.643A7.48,7.48,0,0,1,6.043,8.906Zm6.043,1.574A19.85,19.85,0,0,1,10.175,7.2a6.215,6.215,0,0,0-.127.624A6.479,6.479,0,0,1,6.586,7.3,6.486,6.486,0,0,1,8.771,10.04a6.112,6.112,0,0,0-.477.423A19.783,19.783,0,0,1,12.086,10.48ZM7.675,7.933a7.473,7.473,0,0,0,2.4.573,3.548,3.548,0,0,0,.2.933h0a3.562,3.562,0,0,0-.91.289A7.478,7.478,0,0,0,7.675,7.933ZM12.086,3.52A19.85,19.85,0,0,0,10.175,6.8a6.215,6.215,0,0,1-.127-.624A6.479,6.479,0,0,0,6.586,6.7,6.486,6.486,0,0,0,8.771,3.96a6.112,6.112,0,0,1-.477-.423A19.783,19.783,0,0,0,12.086,3.52ZM7.675,6.067a7.473,7.473,0,0,1,2.4-.573,3.548,3.548,0,0,1,.2-.933h0a3.562,3.562,0,0,1-.91-.289A7.478,7.478,0,0,1,7.675,6.067ZM6.043,0A19.768,19.768,0,0,1,4.161,3.293a6.161,6.161,0,0,0,.605-.2A6.467,6.467,0,0,1,6.043,6.351,6.478,6.478,0,0,1,7.32,3.092a6.251,6.251,0,0,0,.6.2A19.768,19.768,0,0,1,6.043,0Zm0,5.094a7.461,7.461,0,0,0-.7-2.368,3.577,3.577,0,0,0,.705-.643h0a3.561,3.561,0,0,0,.706.643A7.48,7.48,0,0,0,6.043,5.094Zm.1,2.038,1.044.92-.071.817-.744-.347L6.1,7.157a.163.163,0,0,1-.115,0L5.711,8.522l-.743.347L4.9,8.052l1.044-.92a.165.165,0,0,1-.062-.1l-1.314.443-.672-.471.672-.47,1.312.442a.17.17,0,0,1,.056-.1L4.9,5.961l.071-.817.743.347.272,1.352a.166.166,0,0,1,.12,0l.272-1.352.744-.347.071.817-1.037.913a.165.165,0,0,1,.056.1l1.313-.442.672.47-.672.471L6.208,7.034A.165.165,0,0,1,6.146,7.132Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faDendro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"dengro\",\r\n\ticon: [\r\n\t\t14, 13.314,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M10.956,7.949c-1.242-.339-2.145.509-3.174,1.065.5-.835,1.613-1.371,1.588-2.466A1.122,1.122,0,0,0,8.041,5.379c.741-1.764,3.98.034,2.174,1.958C10.518,7.478,10.839,7.589,10.956,7.949Zm-7.919,0c1.242-.339,2.144.509,3.173,1.065-.5-.835-1.613-1.371-1.587-2.466A1.121,1.121,0,0,1,5.952,5.379c-.742-1.764-3.98.034-2.174,1.958C3.474,7.478,3.153,7.589,3.037,7.949ZM7,11.38C6.11,9.815,4.008,9.887,2.989,8.436.769,5.889,4.028,2.245,6.5,4.573c.88-1.994-3.2-1.85-4.069-.59-.1-.709-.187-1.217-.962-1.305C1.3,2.692.355,2.473.452,2.737c.37,1.113.5,1.67,1.824,1.4a4.167,4.167,0,0,0-.731,3.139C.825,6.681.636,6.927,0,7.46c1.239,1.223,1.412-.3,1.632.133C2.207,10.851,5.976,10.376,7,13.314c1.023-2.936,4.794-2.465,5.368-5.721.22-.429.393,1.09,1.632-.133-.636-.533-.825-.779-1.545-.186a4.167,4.167,0,0,0-.731-3.139c1.328.272,1.454-.285,1.824-1.4.1-.264-.852-.045-1.015-.059-.775.088-.859.6-.962,1.3-.864-1.26-4.95-1.4-4.07.591C9.969,2.245,13.235,5.89,11.01,8.437,9.992,9.887,7.89,9.815,7,11.38M7.007,0C5.986,1.347,5.175,2.309,6.993,3.6,8.792,2.311,8.083,1.485,7.007,0Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faElectro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"electro\",\r\n\ticon: [\r\n\t\t14, 13.996,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M4.533,13.505a6.911,6.911,0,0,0,3.024-.468c-.237-.073-.459-.134-.675-.209s-.432-.159-.643-.252A3.907,3.907,0,0,1,4,10.333a3.449,3.449,0,0,1-.128-1.82c.117.139.222.277.341.4a1.044,1.044,0,0,0,1.01.32A1.571,1.571,0,0,0,6.5,7.879a2.422,2.422,0,0,0-2.083-2.8A2.993,2.993,0,0,0,1.2,7.231,7.083,7.083,0,0,0,.874,9.417c-.005.309,0,.618,0,.9A7.089,7.089,0,0,1,.012,6.581,6.949,6.949,0,0,1,2.691,1.5c-.26.472-.519.917-.752,1.374a3.664,3.664,0,0,0-.412,1.521c.207-.193.385-.361.566-.524A4.657,4.657,0,0,1,4.248,2.71,3.573,3.573,0,0,1,7.323,3.5l-.442.09A1.213,1.213,0,0,0,6,5.283,2.008,2.008,0,0,0,7.719,6.624a2.575,2.575,0,0,0,2.873-2.561,3.33,3.33,0,0,0-1.1-2.508A7.781,7.781,0,0,0,7.289.09C7.237.066,7.185.039,7.108,0A7,7,0,0,1,14,5.915c-.282-.45-.544-.9-.836-1.328A3.743,3.743,0,0,0,12.055,3.5c.079.371.171.721.226,1.077a4.086,4.086,0,0,1-.792,3.364A3.554,3.554,0,0,1,9.98,8.958a.115.115,0,0,1-.049,0c.062-.2.134-.389.184-.587A1.091,1.091,0,0,0,9.59,7.135a1.68,1.68,0,0,0-1.765-.046A2.357,2.357,0,0,0,6.657,10.05a2.745,2.745,0,0,0,2.377,1.878,4.373,4.373,0,0,0,2.462-.5c.465-.215.9-.5,1.344-.759.056-.032.108-.071.18-.119A6.922,6.922,0,0,1,4.533,13.505Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faGeo = {\r\n\tprefix: 'faga',\r\n\ticonName: \"geo\",\r\n\ticon: [\r\n\t\t13.029, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M6.633,6.009c-.5.538-.953,1.041-1.42,1.537a.23.23,0,0,0-.061.286A4.5,4.5,0,0,0,6.507,9.551a.181.181,0,0,0,.164-.009c.388-.257.785-.5,1.151-.788A16.081,16.081,0,0,0,9.963,6.761c.181.366.382.7.518,1.063.2.535.356,1.088.535,1.632a.293.293,0,0,1-.061.286,12.277,12.277,0,0,1-1.768,1.985c-.839.755-1.714,1.47-2.574,2.2A1.2,1.2,0,0,1,6.505,14c-.5-.411-1.02-.817-1.519-1.243A29.249,29.249,0,0,1,2.138,9.983,16.778,16.778,0,0,1,.043,7.137a.245.245,0,0,1,0-.279A10.138,10.138,0,0,1,1.389,5.1a25.247,25.247,0,0,0,5.158,8.241,12.37,12.37,0,0,0,2.98-4.617l-.036-.03L6.558,11.157c-.04-.032-.081-.061-.117-.1A13.544,13.544,0,0,1,3.879,7.693a.249.249,0,0,1,.051-.356c.5-.442,1-.89,1.5-1.325.226-.194.473-.365.736-.566Zm.228,2.545c.263-.2.51-.372.736-.566.506-.435,1-.883,1.5-1.325a.251.251,0,0,0,.051-.356A13.523,13.523,0,0,0,6.588,2.938c-.036-.034-.077-.063-.116-.1L3.539,5.306,3.5,5.276A12.345,12.345,0,0,1,6.483.659,25.245,25.245,0,0,1,11.64,8.9a10.138,10.138,0,0,0,1.345-1.758.244.244,0,0,0,0-.279,16.724,16.724,0,0,0-2.1-2.846A29.136,29.136,0,0,0,8.043,1.243C7.545.817,7.028.411,6.524,0c-.05.033-.082.049-.108.071-.86.732-1.734,1.447-2.573,2.2A12.23,12.23,0,0,0,2.075,4.258a.293.293,0,0,0-.062.286c.179.544.334,1.1.536,1.632.136.361.336.7.517,1.063A16.2,16.2,0,0,1,5.207,5.246c.366-.285.764-.531,1.151-.788a.181.181,0,0,1,.164-.009A4.5,4.5,0,0,1,7.877,6.168a.231.231,0,0,1-.06.286c-.468.5-.926,1-1.421,1.537Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faHydro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"hydro\",\r\n\ticon: [\r\n\t\t14, 13.95,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M2.922,12.219c.108.055.181.092.253.13a7.943,7.943,0,0,0,3.891.963,3.753,3.753,0,0,0,.486-7.464,3.6,3.6,0,0,0-1.691.132.938.938,0,0,1-.716-1.732,4.3,4.3,0,0,1,1.481-.366,4.912,4.912,0,0,1,5.048,3.446,4.933,4.933,0,0,1-2.517,5.764c4.218-1.543,4.723-7.809.812-10.017a5.342,5.342,0,0,0-3.437-.829A5.506,5.506,0,0,0,2.883,4.021a6.606,6.606,0,0,0-.417.524.873.873,0,0,1-.927.337.929.929,0,0,1-.781-.638.881.881,0,0,1,.1-.684A6.158,6.158,0,0,1,2.221,1.839,7.091,7.091,0,0,1,6.135.055a6.933,6.933,0,0,1,6.848,3.359c2.683,4.1-.263,9.987-5.094,10.472a6.838,6.838,0,0,1-3.241-.343A3.994,3.994,0,0,1,2.922,12.219ZM8.438,12.1a2.044,2.044,0,0,1-2.35.064,1.5,1.5,0,0,1-.007-2.613.949.949,0,0,1,1.433.505c.77,2.06,2.637.147,1.424-1.246a2.385,2.385,0,0,0-2.17-.95,2.486,2.486,0,1,0,.784,4.891A2.393,2.393,0,0,0,9.073,11.6C8.862,11.766,8.663,11.951,8.438,12.1ZM2.21,9.495a.663.663,0,1,0,.663.663A.663.663,0,0,0,2.21,9.495ZM.958,6.107a.958.958,0,1,0,.957.957A.958.958,0,0,0,.958,6.107Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faPyro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"pyro\",\r\n\ticon: [\r\n\t\t11.479, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M5.853,14C4.311,12.53,2.374,11.75.692,10.523c-1.471-1.1-.268-3.047.586-4.163A17.969,17.969,0,0,0,3.031,3.838c-.007,1.6,1.56,2.152,2.781,2.709C3.509,6.412,1.548,9.1,3.385,10.92c-1.873-.773-2.7-2.455-1.3-4.17a2.113,2.113,0,0,0-.535,3.662c1.332.9,2.865,1.483,4.153,2.461a.2.2,0,0,0,.187.019C7.13,12,8.5,11.315,9.811,10.543c1.654-.887,1.47-2.773-.154-3.583,1.455,2.82-1.213,4.942-3.9,4.745C2.832,11.491,2.676,8.531,5.131,9a1.39,1.39,0,0,0-.682,1.5c.526,1.495,2.954.974,3.81.031,1.095-1.027.327-3.031-.979-3.6-1.492-.7-4.443-1.527-3.3-3.737C4.676,2.109,5.49,1.385,5.617,0,6.05.581,7.06,1.719,6.857,2.452c-.24.72-1.085.982-1.348,1.71a1.334,1.334,0,0,0,.578,1.824c-1.018-1.09.09-2.409,1.15-2.981A3.3,3.3,0,0,0,8.373,7.061c-.725-1.6-1.347-1.64-.128-3.408a4.575,4.575,0,0,0,1.806,2.766c2.057,1.807,1.9,3.731-.521,5.067A16.689,16.689,0,0,0,5.853,14Zm.541-3.5C10.185,9.076,5.44,5.335,4.03,8.493,5.446,7.684,7.387,8.92,6.394,10.5Z\"\r\n\t]\r\n} as const\r\n// Elements End\r\n\r\n// DMG Bonus\r\nexport const faPhysicalDmgBonus = {\r\n\tprefix: 'faga',\r\n\ticonName: \"physicalDmgBonus\",\r\n\ticon: [\r\n\t\t14, 13.962,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M11.511,7.88,9.022,9.54v1.77l2.489-1.66L14,11.31V9.54Zm0,2.434-2.489,1.66v1.771l2.489-1.66L14,13.745V11.974ZM7.45,1.619l-.731.731a.228.228,0,0,0,0,.322l.837.837L.412,10.652a.458.458,0,0,0-.133.318A21.292,21.292,0,0,0,.04,13.922a21.435,21.435,0,0,0,2.952-.239.458.458,0,0,0,.318-.133l7.143-7.144c1.116,1.012.725,1.313,1.89.106a.228.228,0,0,0,0-.322L10.7,4.549l1.926-1.926c1.89.06,1.215.263,1.335-2.395A.228.228,0,0,0,13.734,0H11.542a.228.228,0,0,0-.228.219l.025,1.116L9.413,3.261,7.772,1.619A.228.228,0,0,0,7.45,1.619Z\"\r\n\t]\r\n} as const\r\n// DMG Bonus End\r\n\r\n// Base Stats\r\nexport const faAtk = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Atk\",\r\n\ticon: [\r\n\t\t14, 13.977,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M7.78,1.621,9.423,3.264l1.928-1.927L11.326.219A.228.228,0,0,1,11.554,0h2.2a.228.228,0,0,1,.228.228c-.121,2.661.556,2.457-1.337,2.4L10.712,4.553,12.356,6.2a.228.228,0,0,1,0,.322c-1.167,1.208-.775.907-1.892-.106L3.313,13.564A.457.457,0,0,1,3,13.7a21.32,21.32,0,0,1-2.954.239,21.172,21.172,0,0,1,.238-2.954.451.451,0,0,1,.134-.318L7.564,3.513l-.838-.838a.229.229,0,0,1,0-.323l.732-.731A.228.228,0,0,1,7.78,1.621Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faDef = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Def\",\r\n\ticon: [\r\n\t\t12.883, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M12.883.726a.291.291,0,0,0-.175-.268C12.3.286,10.944,0,6.442,0S.584.286.176.458A.291.291,0,0,0,0,.727v7.44a.868.868,0,0,0,.125.453c1.579,2.6,5.347,4.855,6.161,5.339a.292.292,0,0,0,.3,0c.789-.482,4.559-2.688,6.168-5.335a.868.868,0,0,0,.127-.455ZM6.441,11.968C6.5,11.981,2.882,9.951,1.617,7.6V1.565s0-.452,4.824-.452Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faElementalMastery = {\r\n\tprefix: 'faga',\r\n\ticonName: \"ele_mas\",\r\n\ticon: [\r\n\t\t14, 13.113,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M8.076,7.71l-.017-.049A4.335,4.335,0,0,0,7.3,6.353a4.431,4.431,0,0,0-.325-.346A2.113,2.113,0,1,0,7,1.781a2.144,2.144,0,0,0-1.838,3.18,4.374,4.374,0,0,0-1.2-.168,4.42,4.42,0,0,0-.755.066l-.038.007C1.836-.682,10.7-2.114,10.962,3.9A3.985,3.985,0,0,1,8.076,7.71Zm3.662-2.137a3.949,3.949,0,0,0-.626-.235,4.473,4.473,0,0,1-1.105,1.7h.031A2.113,2.113,0,1,1,7.925,9.151,4.09,4.09,0,0,0,7.9,8.706,3.968,3.968,0,0,0,6.037,5.775l-.19-.11A3.963,3.963,0,1,0,6.492,12.2c.082-.068.16-.14.236-.214L6.7,11.949a4.367,4.367,0,0,1-.891-1.765A2.112,2.112,0,1,1,4.926,7.27q.1.051.189.111a2.111,2.111,0,0,1,.942,1.49,2.159,2.159,0,0,1,.018.28,3.963,3.963,0,1,0,5.663-3.578Z\"\r\n\t]\r\n} as const\r\n\r\n// Max-HP stacked SVG (primary = base shape, secondary = flair)\r\nexport const faHpPrimary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"hp_primary\",\r\n\ticon: [\r\n\t\t11.104, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M2.052,7.654A.978.978,0,0,1,2.5,7.083c1.511-.85,3.586,2.117,6.544.548C10.971,13.714.151,13.878,2.052,7.654ZM5.552,14C2.177,14-1.2,11.579.416,6.74A18.543,18.543,0,0,1,5.121.213.748.748,0,0,1,5.552,0a.751.751,0,0,1,.431.212A18.543,18.543,0,0,1,10.688,6.74C12.3,11.579,8.927,14,5.552,14Zm.22-12.19a.639.639,0,0,0-.22-.075h0a.649.649,0,0,0-.221.075c-1.71,1.324-4.08,5.282-3.941,7.4a4.019,4.019,0,0,0,4.162,3.543h0A4.019,4.019,0,0,0,9.714,9.215C9.853,7.092,7.483,3.134,5.772,1.81Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faHpSecondary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"hp_secondary\",\r\n\ticon: [\r\n\t\t11.104, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M6.534,8.03A12.566,12.566,0,0,1,8.107,6.521c.569-.413.94,1.11.94,1.11A3.731,3.731,0,0,1,6.534,8.03Z\"\r\n\t]\r\n} as const\r\n// Max-HP stacked End\r\n\r\nexport const faMaxStamina = {\r\n\tprefix: 'faga',\r\n\ticonName: \"MaxStamina\",\r\n\ticon: [\r\n\t\t14, 10.365,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M13.924,6.541c-.152.207-1.292.3-1.292.3L9.77,6.948V8.564c0,.981-1.387,1.8-2.77,1.8s-2.77-.82-2.77-1.8V6.948L1.368,6.843s-1.14-.095-1.292-.3c-.239-.323.145-1.524.331-2.154.326-.865,1.284-3.21,1.885-3.119,1.115.17-.673,3.894.1,3.814A21.17,21.17,0,0,1,7,5a21.17,21.17,0,0,1,4.6.079c.777.08-1.011-3.644.1-3.814.6-.091,1.559,2.254,1.885,3.119C13.779,5.017,14.163,6.218,13.924,6.541ZM4.553,2.421a2.456,2.456,0,0,0,4.911,0A2.456,2.456,0,0,0,4.553,2.421Z\"\r\n\t]\r\n} as const\r\n\r\n// Base Stats End\r\n\r\n// Advanced Stats\r\n\r\n// CD Reducation stacked SVG (primary = base shape, secondary = flair)\r\nexport const faCdReductionPrimary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"CdReduction_primary\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M14,7A7,7,0,0,1,2.986,12.733L5.333,9.381A2.907,2.907,0,1,0,7,4.092V0a7,7,0,0,1,7,7\"\r\n\t]\r\n} as const\r\n\r\nexport const faCdReductionSecondary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"CdReduction_secondary\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M5.333,9.381,2.986,12.733A7,7,0,0,1,.356,4.8l4.054.881a2.905,2.905,0,0,0,.923,3.7Z\"\r\n\t]\r\n} as const\r\n// CD Reduction stacked end\r\n\r\nexport const faCritRate = {\r\n\tprefix: 'faga',\r\n\ticonName: \"CritRate\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M0,14,3.5,6.236,1.973,1.464,7.255,3.5,14,0,10.5,7.255l1.527,4.772L7.255,10.5,0,14\"\r\n\t]\r\n} as const\r\n\r\n// Energy Recharge stacked SVG (primary = base shape, secondary = flair) \r\nexport const faEnergyRechargePrimary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"EnergyRecharge_primary\",\r\n\ticon: [\r\n\t\t14, 13.282,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M14,6.641A6.642,6.642,0,0,1,.928,8.3h0L0,8.737.961,4.8l.012.012L2.392,6.3l1.37,1.433-1.23.143A4.981,4.981,0,1,0,7.359,1.66V0A6.641,6.641,0,0,1,14,6.641Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faEnergyRechargeSecondary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"EnergyRecharge_secondary\",\r\n\ticon: [\r\n\t\t14, 13.282,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M2.392,6.3.973,4.813A6.643,6.643,0,0,1,7.359,0V1.66A4.98,4.98,0,0,0,2.392,6.3Z\"\r\n\t]\r\n} as const\r\n// Energy Recharge stacked end\r\n\r\nexport const faHealingBonus = {\r\n\tprefix: 'faga',\r\n\ticonName: \"HealingBonus\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M14,4.765v4.47a.589.589,0,0,1-.588.589H9.824v3.588A.589.589,0,0,1,9.235,14H4.765a.589.589,0,0,1-.589-.588V9.824H.588A.589.589,0,0,1,0,9.235V4.765a.589.589,0,0,1,.588-.589H4.176V.588A.589.589,0,0,1,4.765,0h4.47a.589.589,0,0,1,.589.588V4.176h3.588A.589.589,0,0,1,14,4.765Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faShieldStrength = {\r\n\tprefix: 'faga',\r\n\ticonName: \"ShieldStrength\",\r\n\ticon: [\r\n\t\t12.883, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M12.883.726a.291.291,0,0,0-.175-.268C12.3.286,10.944,0,6.442,0S.584.286.176.458A.291.291,0,0,0,0,.727v7.44a.868.868,0,0,0,.125.453c1.579,2.6,5.347,4.855,6.161,5.339a.292.292,0,0,0,.3,0c.789-.482,4.559-2.688,6.168-5.335a.868.868,0,0,0,.127-.455ZM5.136,10.773,6.182,7l-4-1,5.61-4.762L6.747,5.01l4,1Z\"\r\n\t]\r\n} as const\r\n// Advanced Stats End\r\n\r\n// Artifacts\r\nexport const faCirclet = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Circlet\",\r\n\ticon: [\r\n\t\t14, 11.588,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M12.793,3.842l.269.269L10.5,5.93,7.269,2.158l.809-.809L7,0,5.922,1.349l.809.809L3.5,5.93.938,4.111l.269-.269L0,2.965,2.958,9.972,7,11.588l4.042-1.616L14,2.965ZM8.732,7.864l-.892.149a.673.673,0,0,0-.543.5l-.25,1a.048.048,0,0,1-.094,0l-.25-1a.673.673,0,0,0-.543-.5l-.892-.149a.049.049,0,0,1,0-.1l.892-.149a.673.673,0,0,0,.543-.5l.25-1a.048.048,0,0,1,.094,0l.25,1a.673.673,0,0,0,.543.5l.892.149A.049.049,0,0,1,8.732,7.864Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faFlower = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Flower\",\r\n\ticon: [\r\n\t\t14, 13.326,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M11.279,4.705a2.554,2.554,0,0,0-1.6.9C11.215,3.854,12.708.454,9.711.3c-.015-.115-.2-.387-.4-.276A5.942,5.942,0,0,0,7.2,4.742C6.705,2.18,4.078.459,3.016.769c-.207.324-.056.607-.261.793-.18.163-.58-.016-.619.249-.324,1.729.945,3.632,2.758,4.532C3.113,6.057.165,6.349,0,8.491,0,9.43,1.269,9.868,3.191,9.868A3.541,3.541,0,0,0,6.319,8.4c-2.541,2.727-.544,3.278,2.192,1.78,1.073-.621.8-1.4.027-2.295,1.395.853,3.755-.174,3.877-1.72C12.414,5.533,12.142,4.718,11.279,4.705ZM7.521,6.213a.5.5,0,0,1-.441.5l-.1.637L6.9,6.694A.5.5,0,0,1,6.538,6.1l-.467-.567.557.377a.5.5,0,0,1,.706-.086l.459-.381-.356.492A.5.5,0,0,1,7.521,6.213ZM14,8.089c-.519.249-.77,1.7-1.586,2.337a3.966,3.966,0,0,1-2.678.5,3.463,3.463,0,0,1-1.881,2.393.041.041,0,0,1-.05-.064,4.294,4.294,0,0,0,1-3.174A1.125,1.125,0,0,0,8.956,8.3c.344.065.828,1.348.876,2.125,0,0,1.857-1.178,2.355-1.37A6.666,6.666,0,0,0,9.877,10.3a5.933,5.933,0,0,1,1.269-1.5C11.757,8.271,13.548,8.252,14,8.089Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faGoblet = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Goblet\",\r\n\ticon: [\r\n\t\t14, 13.864,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M9.546,8.637c4.121-2.3,4.121-3.555,4.12-6.894H.428c0,3.339,0,4.59,4.12,6.894,0,1.75,1.739,1.28,1.739,2.187.076.765-.192,1.207-.567,1.275-1.21.167-3.368.939-3.383,1.765h9.42c-.015-.826-2.173-1.6-3.383-1.765-.374-.068-.644-.509-.567-1.275C7.807,9.917,9.546,10.387,9.546,8.637ZM7.461,5.723,7.113,7.116a.066.066,0,0,1-.066.052.066.066,0,0,1-.066-.052L6.633,5.723a.941.941,0,0,0-.757-.7L4.631,4.817a.068.068,0,0,1,0-.135l1.245-.207a.939.939,0,0,0,.757-.7l.348-1.393a.066.066,0,0,1,.066-.051.067.067,0,0,1,.066.051l.348,1.393a.939.939,0,0,0,.757.7l1.245.207a.068.068,0,0,1,0,.135l-1.245.207A.941.941,0,0,0,7.461,5.723Zm5.881-4.408H.658A.657.657,0,0,1,0,.658H0A.657.657,0,0,1,.658,0H13.342A.657.657,0,0,1,14,.658h0A.657.657,0,0,1,13.342,1.315Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faPlume = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Plume\",\r\n\ticon: [\r\n\t\t12.933, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M11.809,0a4.52,4.52,0,0,0-1,.186,4.469,4.469,0,0,0-1.479.6c-.236.14-.241.324-.312.274a.717.717,0,0,0-.467-.033C5.117,3.737,5.04,3.893,3.285,6.494,3.171,6.54,3,6.384,3,6.384c-.059.546-.215.546-.526,1.168A2.75,2.75,0,0,0,2.1,9.588a2.49,2.49,0,0,1-.723-.245l.467.39a2.681,2.681,0,0,1-.934.078l.623.467s-.39.389-.546.389l.519.074A18.034,18.034,0,0,0,0,13.948.04.04,0,0,0,.045,14l.593-.3a.038.038,0,0,0,.02-.025,5.139,5.139,0,0,1,1.722-2.7l.479.549a1.881,1.881,0,0,1-.155-.779l.856.156c-.389-.39-.35-.56-.35-.56a4.067,4.067,0,0,0,1.6-.034,8.175,8.175,0,0,0,1.705-.865c.084-.04-.146-.082-.066-.124s.329-.095.413-.145A20.31,20.31,0,0,0,9.415,7.147a11.77,11.77,0,0,0,2.367-2.7c.043-.074-.36-.2-.526-.231.177.021.616.121.654.048a6.256,6.256,0,0,0,.86-2.34C12.826,1.245,13.449-.079,11.809,0ZM2.548,9.577C4.5,5.372,10.1,1.946,10.1,1.946,11.87.561,6.141,4.384,2.548,9.655Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faSands = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Sands\",\r\n\ticon: [\r\n\t\t9.822, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M9.606,12.708H8.788v-.944c0-3.536-3.274-3.709-3.274-4.915V6.778a.855.855,0,0,1,.392-.72c.868-.56,2.773-1.311,2.877-3.895a.216.216,0,0,0-.215-.225H1.254a.217.217,0,0,0-.216.225c.1,2.584,2.009,3.335,2.877,3.9a.856.856,0,0,1,.393.72v.071c0,1.206-3.274,1.379-3.274,4.915v.944H.215A.215.215,0,0,0,0,12.923v.862A.215.215,0,0,0,.215,14H9.606a.216.216,0,0,0,.216-.215v-.862A.216.216,0,0,0,9.606,12.708Zm-4.695,0h-3.1c0-2.757,2.757-2.154,2.757-3.274V5.988S2.929,5.04,2.929,4.351H6.892c0,.689-1.637,1.637-1.637,1.637V9.434c0,1.12,2.757.517,2.757,3.274ZM9.822.215v.862a.216.216,0,0,1-.216.215H.215A.215.215,0,0,1,0,1.077V.215A.215.215,0,0,1,.215,0H9.606A.216.216,0,0,1,9.822.215Z\"\r\n\t]\r\n} as const\r\n// Artifacts End","import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n// Probably a way to auto-populate this.\r\nexport const languageCodeList = [\r\n  \"chs\",\r\n  \"cht\",\r\n  \"de\",\r\n  \"en\",\r\n  \"es\",\r\n  \"fr\",\r\n  \"id\",\r\n  \"ja\",\r\n  \"ko\",\r\n  \"pt\",\r\n  \"ru\",\r\n  \"th\",\r\n  \"vi\"\r\n];\r\n\r\n/**\r\n * @see: https://www.i18next.com/translation-function/essentials\r\n * @see: https://react.i18next.com/latest/using-with-hooks\r\n */\r\ni18n\r\n  // load translation using http ->\r\n  // see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // Configure localization.\r\n  .init({\r\n    // debug: process.env.NODE_ENV === \"development\",\r\n    // Use English strings by default, if the current language does not include\r\n    // the specified string.\r\n    fallbackLng: 'en',\r\n    // fallbackLng: 'dev', // Switch to this to force the fallback value on missing strings.\r\n\r\n    // List all translation namespaces.\r\n    ns: [\r\n      \"languages\",\r\n      \"ui\",\r\n    ],\r\n    // Specify the default namespace.\r\n    defaultNS: \"ui\",\r\n\r\n    // Only use the language code, skipping the region code.\r\n    // For example, en-US becomes simply en.\r\n    load: 'languageOnly',\r\n\r\n    // allow an empty value to count as invalid (by default is true)\r\n    returnEmptyString: false,\r\n\r\n    backend: process.env.NODE_ENV === \"development\" ? {\r\n      // Path to load localization data from.\r\n      loadPath: 'genshin-optimizer/locales/{{lng}}/{{ns}}.json',\r\n    } : {\r\n      // Path to load localization data from.\r\n      loadPath: 'locales/{{lng}}/{{ns}}.json',\r\n    },\r\n    interpolation: {\r\n      escapeValue: false,//react does interlopation already\r\n    }\r\n  });\r\n\r\nexport default i18n;","import { createContext } from \"react\"\r\nimport { ICachedArtifact, StatKey, SubstatKey } from \"../Types/artifact\"\r\nimport { ArtifactsBySlot, ArtifactSetEffects, SetFilter } from \"../Types/Build\"\r\nimport { allElementsWithPhy, ArtifactSetKey, ElementKey, SetNum, SlotKey } from \"../Types/consts\"\r\nimport { BasicStats, BonusStats, ICalculatedStats } from \"../Types/stats\"\r\nimport { deepCloneStats, mergeCalculatedStats, mergeStats } from \"../Util/StatUtil\"\r\n\r\ntype buildContextObj = {\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats,\r\n  compareBuild?: boolean,\r\n  setCompareBuild?: ((boolean) => void),\r\n}\r\nexport const buildContext = createContext({\r\n  newBuild: undefined,\r\n  equippedBuild: undefined,\r\n  compareBuild: false,\r\n  setCompareBuild: undefined,\r\n} as buildContextObj)\r\n\r\nexport const maxBuildsToShowList = [1, 2, 3, 4, 5, 8, 10] as const\r\nexport const maxBuildsToShowDefault = 5\r\n\r\n/**\r\n * Remove artifacts that can never be used in optimized builds when trying to optimize for top `maxBuildsToShow` builds\r\n * @param {artifact[]} artifacts - List of artifacts of the same slot\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - The list of the set effects\r\n * @param {Set.<statKey>} significantStats - A set of stats that pruning needs to take into consideration\r\n * @param {bool} ascending - Whether the sorting is ascending or descending\r\n * @param {Set.<setKey>} alwaysAccepted - The list of artifact sets that are always included\r\n */\r\nexport function pruneArtifacts(artifacts: ICachedArtifact[], artifactSetEffects: ArtifactSetEffects, significantStats: Set<StatKey>, maxBuildsToShow: number = 1, alwaysAccepted: Set<ArtifactSetKey> = new Set()): ICachedArtifact[] {\r\n  function shouldKeepFirst(first: Dict<StatKey, number>, second: Dict<StatKey, number>, preferFirst: boolean) {\r\n    let firstBetter = Object.entries(first).some(([k, v]) => !isFinite(v) || v > (second[k] ?? 0))\r\n    let secondBetter = Object.entries(second).some(([k, v]) => !isFinite(v) || v > (first[k] ?? 0))\r\n    // Keep if first is strictly better, uncomparable, or equal + prefer first.\r\n    // That is, return false if second is strictly better, or equal + NOT prefer first\r\n    return firstBetter || (!secondBetter && preferFirst)\r\n  }\r\n\r\n  // Prune unused set effects. Sets with no relevant effects are regrouped to \"other\"\r\n  const prunedSetEffects: PrunedArtifactSetEffects = { \"other\": {} }\r\n  Object.entries(artifactSetEffects).forEach(([set, effect]) => {\r\n    Object.entries(effect).forEach(([num, item]) => {\r\n      const effects = Object.entries(item).filter(([key]) => significantStats.has(key as StatKey))\r\n      if (effects.length > 0) {\r\n        prunedSetEffects[set] = prunedSetEffects[set] ?? {}\r\n        prunedSetEffects[set]![num] = Object.fromEntries(effects)\r\n      }\r\n      const modifiers = item.modifiers\r\n      if (modifiers) {\r\n        // Modifiers are treated as infinite stats\r\n        prunedSetEffects[set] = prunedSetEffects[set] ?? {}\r\n        prunedSetEffects[set]![num] = prunedSetEffects[set]![num] ?? {}\r\n\r\n        Object.keys(modifiers)\r\n          .filter(key => significantStats.has(key as StatKey))\r\n          .forEach(key =>\r\n            prunedSetEffects[set]![num]![key] = Infinity\r\n          )\r\n      }\r\n    })\r\n  })\r\n\r\n  // array of artifacts, artifact stats, and set (may be \"other\")\r\n  let tmp: { artifact: ICachedArtifact, numberOfBetterSameSetArtifacts: number, stats: Dict<StatKey, number>, set: ArtifactSetKey | \"other\" }[] = artifacts.map(artifact => {\r\n    const stats: Dict<StatKey, number> = {}, set: ArtifactSetKey | \"other\" = (artifact.setKey in prunedSetEffects || alwaysAccepted.has(artifact.setKey)) ? artifact.setKey : \"other\"\r\n    if (significantStats.has(artifact.mainStatKey as any))\r\n      stats[artifact.mainStatKey] = artifact.mainStatVal!\r\n    for (const { key, value } of artifact.substats)\r\n      if (key && significantStats.has(key as SubstatKey))\r\n        stats[key] = (stats[key] ?? 0) + value\r\n    for (const key in stats)\r\n      if (key.endsWith(\"enemyRes_\"))\r\n        stats[key as StatKey] = -stats[key as StatKey]!\r\n    return { artifact, numberOfBetterSameSetArtifacts: 0, stats, set }\r\n  })\r\n\r\n  // Compare artifacts' base stats from the same set\r\n  tmp = tmp.filter((first) => {\r\n    const { artifact: candidate, stats: candidateStats, set: candidateSet } = first\r\n    return tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) => {\r\n      if (candidateSet !== otherSet || shouldKeepFirst(candidateStats, otherStats, candidate.id! <= other.id!)) {\r\n        return true\r\n      } else {\r\n        first.numberOfBetterSameSetArtifacts += 1\r\n        return first.numberOfBetterSameSetArtifacts < maxBuildsToShow\r\n      }\r\n    })\r\n  })\r\n\r\n  // Cross-check with different sets\r\n  tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) => {\r\n    if (alwaysAccepted.has(candidate.setKey))\r\n      return true\r\n    // Possible \"additional stats\" if a build equips `candidate` on an empty slot.\r\n    let possibleStats = [...Object.values(prunedSetEffects[candidateSet]!), {}].map(c => {\r\n      const current: BonusStats = { ...candidateStats }\r\n      mergeStats(current, c)\r\n      return { stat: current, numberOfBetterArtifacts: 0 }\r\n    })\r\n    return tmp.every(({ artifact: other, stats: otherStats, set: otherSet, numberOfBetterSameSetArtifacts }) => {\r\n      if (candidateSet === otherSet) return true // Already checked same-set\r\n\r\n      // Remove possibilities that shouldn't be kept\r\n      possibleStats = possibleStats.filter(current => {\r\n        if (shouldKeepFirst(current.stat, otherStats, candidate.id! <= other.id!)) {\r\n          return true\r\n        } else {\r\n          current.numberOfBetterArtifacts += 1\r\n          return current.numberOfBetterArtifacts + numberOfBetterSameSetArtifacts < maxBuildsToShow\r\n        }\r\n      })\r\n      return possibleStats.length !== 0\r\n    })\r\n  })\r\n\r\n  return tmp.map(tmp => tmp.artifact)\r\n}\r\n\r\n/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet: Dict<ArtifactSetKey, ICachedArtifact[]> = {}\r\n    for (const artifact of (artifactsBySlot[slotKey] ?? [])) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey]!.push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet['null']) artifactsBySet['null'].push(artifact)\r\n        else artifactsBySet['null'] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu: ArtifactsBySlot = {}, result: ArtifactsBySlot[] = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1]!.length, 1)\r\n    , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats: ICalculatedStats, artifactsBySlot: ArtifactsBySlot, artifactSetEffects: ArtifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount: Dict<ArtifactSetKey, SetNum> = {}, accu = {}\r\n  function slotPerm(index: number, stats: ICalculatedStats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    for (const artifact of artifactsBySlot[slotKey] ?? []) {\r\n      const newStats = deepCloneStats(stats)\r\n\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey]! -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey: SlotKey, art: ICachedArtifact, setCount: Dict<ArtifactSetKey, SetNum>, accu: Dict<SlotKey, ICachedArtifact>, stats: ICalculatedStats, artifactSetEffects: ArtifactSetEffects) {\r\n  const setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1 as SetNum\r\n\r\n  // Add artifact stats\r\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal!\r\n  art.substats.forEach((substat) => {\r\n    if (substat?.key in stats) stats[substat.key] += substat.value\r\n  })\r\n\r\n  // Add set effects\r\n  const setEffect = artifactSetEffects[setKey]?.[setCount[setKey]!]\r\n  setEffect && mergeCalculatedStats(stats, setEffect) // TODO: This may slow down the computation\r\n}\r\n\r\n/**\r\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\r\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\r\n  * @param {*} stats - The calculated stats\r\n  * @param {*} overwriteElement - Override the hit to be the character's elemental, that is not part of infusion.\r\n  */\r\nexport function getTalentStatKey(skillKey: string, stats: BasicStats, overwriteElement?: ElementKey | \"physical\") {\r\n  const { hitMode = \"\", infusionAura = \"\", infusionSelf = \"\", reactionMode = \"\", characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (allElementsWithPhy.includes(skillKey as any)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\r\n  if (!overwriteElement && weaponType === \"catalyst\") overwriteElement = characterEle\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || overwriteElement) {\r\n    if (reactionMode && reactionMode.startsWith(overwriteElement || characterEle)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n    return `${overwriteElement || characterEle}_${skillKey}_${hitMode}`\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n\r\n  return `${eleKey}_${skillKey}_${hitMode}`\r\n}\r\n\r\nexport function getTalentStatKeyVariant(skillKey: string, stats: BasicStats, overwriteElement: ElementKey | \"physical\" | undefined | \"\" = \"\") {\r\n  if (allElementsWithPhy.includes(skillKey as any)) return skillKey//elemental DMG\r\n  const { infusionAura = \"\", infusionSelf = \"\", reactionMode = \"\", characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (!overwriteElement && weaponType === \"catalyst\") overwriteElement = characterEle\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || overwriteElement) {\r\n    if (reactionMode && reactionMode.startsWith(overwriteElement || characterEle)) {\r\n      if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n      else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n    }\r\n    return overwriteElement || characterEle\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) {\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n  }\r\n  return eleKey\r\n}\r\n\r\nexport type PrunedArtifactSetEffects = Dict<ArtifactSetKey | \"other\", Dict<SetNum, Dict<StatKey, number>>>\r\n","import { AppBar, Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { grey } from \"@mui/material/colors\";\r\nimport { Suspense } from \"react\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { version } from '../package.json';\r\n\r\nexport default function Footer() {\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" height={64} />}>\r\n    <FooterContent />\r\n  </Suspense>\r\n}\r\nfunction FooterContent() {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <AppBar position=\"static\" sx={{ bgcolor: \"#343a40\" }} elevation={0}>\r\n    <Box display=\"flex\" justifyContent=\"space-between\" sx={{ px: 2, py: 1 }} gap={2}>\r\n      <Typography variant=\"caption\" sx={{ color: grey[200] }}>\r\n        <Trans t={t} i18nKey=\"ui:rightsDisclaimer\">Genshin Optimizer is not affiliated with or endorsed by miHoYo.</Trans>\r\n      </Typography>\r\n      <Typography variant=\"caption\" sx={{ color: grey[200], textAlign: \"right\" }} >\r\n        <Trans t={t} i18nKey=\"ui:appVersion\" values={{ version: version }}>Genshin Optimizer Version: <code>{{ version }}</code></Trans>\r\n      </Typography>\r\n    </Box>\r\n  </AppBar >\r\n}","import { faDiscord, faPatreon, faPaypal } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faBook, faCalculator, faCog, faGavel, faIdCard, faTools } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Menu as MenuIcon } from \"@mui/icons-material\";\r\nimport { AppBar, Box, Button, Divider, Drawer, IconButton, List, ListItemButton, ListItemIcon, ListItemText, Skeleton, Tab, Tabs, Toolbar, Typography, useMediaQuery, useTheme } from \"@mui/material\";\r\nimport { Suspense, useState } from \"react\";\r\nimport ReactGA from 'react-ga';\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { Link as RouterLink, useRouteMatch } from \"react-router-dom\";\r\nimport { SlotIconSVG } from \"./Artifact/Component/SlotNameWIthIcon\";\r\n\r\nconst content = [{\r\n  i18Key: \"tabs.artifacts\",\r\n  svg: SlotIconSVG.flower,\r\n  to: \"/artifact\",\r\n  value: \"artifact\",\r\n}, {\r\n  i18Key: \"tabs.weapons\",\r\n  svg: faGavel,\r\n  to: \"/weapon\",\r\n  value: \"weapon\",\r\n}, {\r\n  i18Key: \"tabs.characters\",\r\n  svg: faIdCard,\r\n  to: \"/character\",\r\n  value: \"character\",\r\n}, {\r\n  i18Key: \"tabs.builds\",\r\n  svg: faCalculator,\r\n  to: \"/build\",\r\n  value: \"build\",\r\n}, {\r\n  i18Key: \"tabs.tools\",\r\n  svg: faTools,\r\n  to: \"/tools\",\r\n  value: \"tools\",\r\n}, {\r\n  i18Key: \"tabs.database\",\r\n  svg: faCog,\r\n  to: \"/database\",\r\n  value: \"database\",\r\n}, {\r\n  i18Key: \"tabs.doc\",\r\n  svg: faBook,\r\n  to: \"/doc\",\r\n  value: \"doc\",\r\n},] as const\r\n\r\nconst links = [{\r\n  i18Key: \"social.paypal\",\r\n  href: process.env.REACT_APP_PAYPAL_LINK,\r\n  svg: faPaypal,\r\n  label: \"paypal\",\r\n}, {\r\n  i18Key: \"social.patreon\",\r\n  href: process.env.REACT_APP_PATREON_LINK,\r\n  svg: faPatreon,\r\n  label: \"patreon\",\r\n}, {\r\n  i18Key: \"social.discord\",\r\n  href: process.env.REACT_APP_DISCORD_LINK,\r\n  svg: faDiscord,\r\n  label: \"discord\",\r\n},] as const\r\n\r\nexport default function Header(props) {\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" height={56} />}>\r\n    <HeaderContent {...props} />\r\n  </Suspense>\r\n}\r\nfunction HeaderContent({ anchor }) {\r\n  const theme = useTheme();\r\n  const isLarge = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  const { t } = useTranslation(\"ui\")\r\n\r\n  const routeMatch = useRouteMatch({\r\n    path: \"/:slug\",\r\n    strict: true,\r\n    sensitive: true\r\n  });\r\n\r\n\r\n  const currentTab = (routeMatch?.params as any)?.slug ?? false\r\n  if (isMobile) return <MobileHeader anchor={anchor} currentTab={currentTab} />\r\n  return <AppBar position=\"static\" sx={{ bgcolor: \"#343a40\", display: \"flex\", flexWrap: \"nowrap\" }} elevation={0} id={anchor} >\r\n    <Tabs\r\n      value={currentTab}\r\n      variant=\"scrollable\"\r\n      scrollButtons=\"auto\"\r\n\r\n      sx={{\r\n        \"& .MuiTab-root\": {\r\n          px: 1,\r\n          flexDirection: \"row\",\r\n          minWidth: 40,\r\n          minHeight: \"auto\",\r\n        },\r\n        \"& .MuiTab-root:hover\": {\r\n          transition: \"background-color 0.5s ease\",\r\n          backgroundColor: \"rgba(255,255,255,0.1)\"\r\n        },\r\n        \"& .MuiTab-root > .MuiTab-iconWrapper\": {\r\n          mb: 0,\r\n          mr: 0.5\r\n        },\r\n      }}\r\n    >\r\n      <Tab value=\"\" component={RouterLink} to=\"/\" label={<Typography variant=\"h6\" sx={{ px: 1 }}>\r\n        <Trans t={t} i18nKey=\"pageTitle\">Genshin Optimizer</Trans>\r\n      </Typography>} />\r\n      {content.map(({ i18Key, value, to, svg }) => <Tab key={value} value={value} component={RouterLink} to={to} icon={<FontAwesomeIcon icon={svg} />} label={t(i18Key)} />)}\r\n      <Box flexGrow={1} />\r\n      {links.map(({ i18Key, href, label, svg }) => <Tab key={label} component=\"a\" href={href} target=\"_blank\" icon={<FontAwesomeIcon icon={svg} />} onClick={e => ReactGA.outboundLink({ label }, () => { })} label={isLarge && t(i18Key)} />)}\r\n    </Tabs>\r\n  </AppBar>\r\n}\r\nfunction MobileHeader({ anchor, currentTab }) {\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n\r\n  const { t } = useTranslation(\"ui\")\r\n  return <>\r\n    <AppBar position=\"fixed\" sx={{ bgcolor: \"#343a40\" }} elevation={0}  >\r\n      <Drawer\r\n        anchor=\"right\"\r\n        variant=\"temporary\"\r\n        open={mobileOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true, // Better open performance on mobile.\r\n        }}\r\n      >\r\n        <List>\r\n          <ListItemButton key=\"home\" component={RouterLink} to={'/'} selected={currentTab === \"\"} disabled={currentTab === \"\"} onClick={handleDrawerToggle} >\r\n            <ListItemText>{t(\"pageTitle\")}</ListItemText>\r\n          </ListItemButton >\r\n          {content.map(({ i18Key, value, to, svg }) =>\r\n            <ListItemButton key={value} component={RouterLink} to={to} selected={currentTab === value} disabled={currentTab === value} onClick={handleDrawerToggle} >\r\n              <ListItemIcon><FontAwesomeIcon icon={svg} /></ListItemIcon>\r\n              <ListItemText>{t(i18Key)}</ListItemText>\r\n            </ListItemButton >)}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {links.map(({ i18Key, href, svg, label }) =>\r\n            <ListItemButton key={label} component=\"a\" href={href} target=\"_blank\" onClick={e => ReactGA.outboundLink({ label }, () => { })} >\r\n              <ListItemIcon><FontAwesomeIcon icon={svg} /></ListItemIcon>\r\n              <ListItemText>{t(i18Key)}</ListItemText>\r\n            </ListItemButton >)}\r\n        </List>\r\n      </Drawer>\r\n      <Toolbar>\r\n        <Button variant=\"text\" sx={{ color: \"white\" }} component={RouterLink} to=\"/\">\r\n          <Typography variant=\"h6\" noWrap component=\"div\">\r\n            <Trans t={t} i18nKey=\"pageTitle\">Genshin Optimizer</Trans>\r\n          </Typography>\r\n        </Button>\r\n        <Box flexGrow={1} />\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          edge=\"end\"\r\n          onClick={handleDrawerToggle}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n    {/* add a blank toolbar to keep space and provide a scroll anchor */}\r\n    <Toolbar id={anchor} />\r\n  </>\r\n}","import { KeyboardArrowUp } from '@mui/icons-material';\r\nimport { Box, Container, Fab, Grid, Skeleton, useScrollTrigger, Zoom } from '@mui/material';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport './App.scss';\r\nimport './Database/Database';\r\nimport Footer from './Footer';\r\nimport { GlobalSettingsContext, useGlobalSettings } from './GlobalSettings';\r\nimport Header from './Header';\r\nimport './i18n';\r\n\r\nconst Home = lazy(() => import('./PageHome/HomeDisplay'))\r\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\r\nconst CharacterRouter = lazy(() => import('./Character/CharacterRouter'))\r\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\r\nconst ToolsDisplay = lazy(() => import('./Tools/ToolsDisplay'))\r\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\r\nconst FlexDisplay = lazy(() => import('./FlexPage/FlexDisplay'))\r\nconst SettingsDisplay = lazy(() => import('./Settings/SettingsDisplay'))\r\nconst WeaponDisplay = lazy(() => import('./Weapon/WeaponDisplay'))\r\nconst DocumentationDisplay = lazy(() => import('./DocumentationPage/DocumentationDisplay'))\r\nconst ScannerDisplay = lazy(() => import('./ScannerPage/ScannerDisplay'))\r\n\r\nfunction ScrollTop({ children }: { children: React.ReactElement }) {\r\n  const trigger = useScrollTrigger({\r\n    target: window,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const anchor = (\r\n      (event.target as HTMLDivElement).ownerDocument || document\r\n    ).querySelector('#back-to-top-anchor');\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'center',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <Box\r\n        onClick={handleClick}\r\n        role=\"presentation\"\r\n        sx={{ position: 'fixed', bottom: 85, right: 16 }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [globalSettings, globalSettingsDispatch] = useGlobalSettings()\r\n  return <HashRouter basename=\"/\">\r\n    <GlobalSettingsContext.Provider value={{ globalSettings, globalSettingsDispatch }}>\r\n      <Grid container direction=\"column\" minHeight=\"100vh\">\r\n        <Grid item >\r\n          <Header anchor=\"back-to-top-anchor\" />\r\n        </Grid>\r\n        <Container maxWidth=\"xl\" sx={{ px: { xs: 0.5, sm: 1, md: 2 } }}>\r\n          <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} />}>\r\n            <Switch>\r\n              <Route path=\"/artifact\" component={ArtifactDisplay} />\r\n              <Route path=\"/weapon\" component={WeaponDisplay} />\r\n              <Route path=\"/character\" component={CharacterRouter} />\r\n              <Route path=\"/build\" component={BuildDisplay} />\r\n              <Route path=\"/tools\" component={ToolsDisplay} />\r\n              {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\r\n              <Route path=\"/database\" component={SettingsDisplay} />\r\n              <Route path=\"/doc\" component={DocumentationDisplay} />\r\n              <Route path=\"/flex\" component={FlexDisplay} />\r\n              <Route path=\"/scanner\" component={ScannerDisplay} />\r\n              <Route path=\"/\" component={Home} />\r\n            </Switch>\r\n          </Suspense>\r\n        </Container>\r\n        {/* make sure footer is always at bottom */}\r\n        <Grid item flexGrow={1} />\r\n        <Grid item >\r\n          <Footer />\r\n        </Grid>\r\n      </Grid>\r\n      <ScrollTop >\r\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUp />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </GlobalSettingsContext.Provider>\r\n  </HashRouter>\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createTheme, darkScrollbar } from \"@mui/material\";\r\n\r\ndeclare module '@mui/material/styles' {\r\n\r\n  interface Palette {\r\n    warning: Palette['primary'];\r\n    contentDark: Palette['primary'];\r\n    contentDarker: Palette['primary'];\r\n    contentLight: Palette['primary'];\r\n    roll1: Palette['primary'];\r\n    roll2: Palette['primary'];\r\n    roll3: Palette['primary'];\r\n    roll4: Palette['primary'];\r\n    roll5: Palette['primary'];\r\n    roll6: Palette['primary'];\r\n    geo: Palette['primary'];\r\n    dendro: Palette['primary'];\r\n    pyro: Palette['primary'];\r\n    hydro: Palette['primary'];\r\n    cryo: Palette['primary'];\r\n    electro: Palette['primary'];\r\n    anemo: Palette['primary'];\r\n    physical: Palette['primary'];\r\n    vaporize: Palette['primary'];\r\n    melt: Palette['primary'];\r\n    overloaded: Palette['primary'];\r\n    superconduct: Palette['primary'];\r\n    electrocharged: Palette['primary'];\r\n    shattered: Palette['primary'];\r\n    swirl: Palette['primary'];\r\n    burning: Palette['primary'];\r\n    crystalize: Palette['primary'];\r\n  }\r\n  interface PaletteOptions {\r\n    warning?: PaletteOptions['primary'];\r\n    contentDark?: PaletteOptions['primary'];\r\n    contentDarker?: PaletteOptions['primary'];\r\n    contentLight?: PaletteOptions['primary'];\r\n    roll1?: PaletteOptions['primary'];\r\n    roll2?: PaletteOptions['primary'];\r\n    roll3?: PaletteOptions['primary'];\r\n    roll4?: PaletteOptions['primary'];\r\n    roll5?: PaletteOptions['primary'];\r\n    roll6?: PaletteOptions['primary'];\r\n    geo?: PaletteOptions['primary'];\r\n    dendro?: PaletteOptions['primary'];\r\n    pyro?: PaletteOptions['primary'];\r\n    hydro?: PaletteOptions['primary'];\r\n    cryo?: PaletteOptions['primary'];\r\n    electro?: PaletteOptions['primary'];\r\n    anemo?: PaletteOptions['primary'];\r\n    physical?: PaletteOptions['primary'];\r\n    vaporize?: PaletteOptions['primary'];\r\n    melt?: PaletteOptions['primary'];\r\n    overloaded?: PaletteOptions['primary'];\r\n    superconduct?: PaletteOptions['primary'];\r\n    electrocharged?: PaletteOptions['primary'];\r\n    shattered?: PaletteOptions['primary'];\r\n    swirl?: PaletteOptions['primary'];\r\n    burning?: PaletteOptions['primary'];\r\n    crystalize?: PaletteOptions['primary'];\r\n  }\r\n}\r\n\r\ndeclare module \"@mui/material/Button\" {\r\n  interface ButtonPropsColorOverrides {\r\n    warning: true;\r\n    roll1: true;\r\n    roll2: true;\r\n    roll3: true;\r\n    roll4: true;\r\n    roll5: true;\r\n    roll6: true;\r\n    geo: true;\r\n    dendro: true;\r\n    pyro: true;\r\n    hydro: true;\r\n    cryo: true;\r\n    electro: true;\r\n    anemo: true;\r\n    physical: true;\r\n  }\r\n}\r\n\r\ndeclare module \"@mui/material/Chip\" {\r\n  interface ChipPropsColorOverrides {\r\n    warning: true;\r\n    roll1: true;\r\n    roll2: true;\r\n    roll3: true;\r\n    roll4: true;\r\n    roll5: true;\r\n    roll6: true;\r\n    geo: true;\r\n    dendro: true;\r\n    pyro: true;\r\n    hydro: true;\r\n    cryo: true;\r\n    electro: true;\r\n    anemo: true;\r\n    physical: true;\r\n  }\r\n}\r\n\r\nconst defaultTheme = createTheme({\r\n  palette: {\r\n    mode: `dark`,\r\n  }\r\n});\r\nexport const theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: defaultTheme.palette.augmentColor({\r\n      color: { main: '#1e78c8' },\r\n      name: \"primary\"\r\n    }),\r\n    secondary: defaultTheme.palette.augmentColor({\r\n      color: { main: '#6c757d' },\r\n      name: \"secondary\"\r\n    }),\r\n    success: defaultTheme.palette.augmentColor({\r\n      color: { main: '#46a046' },\r\n      name: \"success\"\r\n    }),\r\n    warning: defaultTheme.palette.augmentColor({\r\n      color: { main: `#ffc107` },\r\n      name: \"warning\"\r\n    }),\r\n    error: defaultTheme.palette.augmentColor({\r\n      color: { main: `#c83c3c` },\r\n      name: \"error\"\r\n    }),\r\n    background: {\r\n      default: '#0C1020',\r\n      paper: '#0C1020',\r\n    },\r\n    info: defaultTheme.palette.augmentColor({\r\n      color: { main: '#17a2b8' },\r\n      name: \"info\"\r\n    }),\r\n    text: {\r\n      primary: 'rgba(255,255,255,0.9)',\r\n\r\n    },\r\n    contentDark: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#1b263b\" },\r\n      name: \"contentDark\"\r\n    }),\r\n    contentDarker: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#172032\" },\r\n      name: \"contentDarker\"\r\n    }),\r\n    contentLight: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#2a364d\" },\r\n      name: \"contentLight\"\r\n    }),\r\n    roll1: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#a3a7a9\" },\r\n      name: \"roll1\"\r\n    }),\r\n    roll2: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#6fa376\", },\r\n      name: \"roll2\"\r\n    }),\r\n    roll3: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#8eea83\", },\r\n      name: \"roll3\"\r\n    }),\r\n    roll4: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#31e09d\", },\r\n      name: \"roll4\"\r\n    }),\r\n    roll5: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#27bbe4\", },\r\n      name: \"roll5\"\r\n    }),\r\n    roll6: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#de79f0\", },\r\n      name: \"roll6\"\r\n    }),\r\n    geo: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#f8ba4e\", contrastText: \"#fff\" },\r\n      name: \"geo\"\r\n    }),\r\n    dendro: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#b1ea29\", },\r\n      name: \"dendro\"\r\n    }),\r\n    pyro: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#bf2818\", },\r\n      name: \"pyro\"\r\n    }),\r\n    hydro: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#2f63d4\", },\r\n      name: \"hydro\"\r\n    }),\r\n    cryo: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#77a2e6\", contrastText: \"#fff\" },\r\n      name: \"cryo\"\r\n    }),\r\n    electro: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#b25dcd\", },\r\n      name: \"electro\"\r\n    }),\r\n    anemo: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#61dbbb\", contrastText: \"#fff\" },\r\n      name: \"anemo\"\r\n    }),\r\n    physical: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#aaaaaa\", },\r\n      name: \"physical\"\r\n    }),\r\n    vaporize: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#ffcb65\", },\r\n      name: \"vaporize\"\r\n    }),\r\n    melt: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#ffcb65\", },\r\n      name: \"melt\"\r\n    }),\r\n    overloaded: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#ff7e9a\", },\r\n      name: \"overloaded\"\r\n    }),\r\n    superconduct: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#b7b1ff\", },\r\n      name: \"superconduct\"\r\n    }),\r\n    electrocharged: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#e299fd\", },\r\n      name: \"electrocharged\"\r\n    }),\r\n    shattered: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#98fffd\", },\r\n      name: \"shattered\"\r\n    }),\r\n    swirl: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#66ffcb\", },\r\n      name: \"swirl\"\r\n    }),\r\n    burning: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#bf2818\", },\r\n      name: \"burning\"\r\n    }),\r\n    crystalize: defaultTheme.palette.augmentColor({\r\n      color: { main: \"#f8ba4e\", },\r\n      name: \"crystalize\"\r\n    }),\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: 'none'\r\n    }\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: {\r\n        body: defaultTheme.palette.mode === 'dark' ? darkScrollbar() : null,\r\n      },\r\n    },\r\n    MuiAppBar: {\r\n      defaultProps: {\r\n        enableColorOnDark: true,\r\n      },\r\n    },\r\n    MuiPaper: {\r\n      defaultProps: {\r\n        elevation: 0\r\n      }\r\n    },\r\n    MuiButton: {\r\n      defaultProps: {\r\n        variant: \"contained\"\r\n      }\r\n    },\r\n    MuiButtonGroup: {\r\n      defaultProps: {\r\n        variant: \"contained\"\r\n      }\r\n    },\r\n    MuiList: {\r\n      styleOverrides: {\r\n        root: {\r\n          padding: 0,\r\n          marginTop: defaultTheme.spacing(1),\r\n          marginBottom: defaultTheme.spacing(1),\r\n        }\r\n      }\r\n    },\r\n    MuiTypography: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"& ul\": {\r\n            margin: 0,\r\n            paddingLeft: defaultTheme.spacing(3)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    MuiCardContent: {\r\n      styleOverrides: {\r\n        root: {\r\n          [defaultTheme.breakpoints.down('sm')]: {\r\n            padding: defaultTheme.spacing(1),\r\n            \"&:last-child\": {\r\n              paddingBottom: defaultTheme.spacing(1),\r\n            }\r\n          },\r\n          [defaultTheme.breakpoints.up('sm')]: {\r\n            \"&:last-child\": {\r\n              paddingBottom: defaultTheme.spacing(2),\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\nimport { CssBaseline, StyledEngineProvider, ThemeProvider } from '@mui/material';\r\nimport { theme } from './Theme';\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID as any, {\r\n  // debug: process.env.NODE_ENV === \"development\"\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* https://mui.com/guides/interoperability/#css-injection-order-2 */}\r\n    <StyledEngineProvider injectFirst>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </StyledEngineProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(undefined);\r\n","import { Box } from \"@mui/material\";\r\nimport ColorText from \"./Components/ColoredText\";\r\nimport elementalData from \"./Data/ElementalData\";\r\nimport Formula from \"./Formula\";\r\nimport usePromise from \"./ReactHooks/usePromise\";\r\nimport { amplifyingReactions, hitMoves, hitTypes, transformativeReactions } from \"./StatConstants\";\r\nimport { StatData } from \"./StatData\";\r\nimport { evalIfFunc } from \"./Util/Util\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") => <ColorText color={StatData[key]?.variant} >{StatData[key]?.name ?? defVal}</ColorText>\r\n\r\n  static getStatNameRaw = (key, defVal = \"\") => StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\", variant = true) =>\r\n    <ColorText color={variant ? StatData[key]?.variant : undefined}  >{StatData[key]?.name ?? defVal}{key?.endsWith('_') && \"%\"}</ColorText>\r\n\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats, premod = false) =>\r\n    f({ stats, expand: false, premod }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n}\r\n\r\nconst ModFormula = ({ path, stats }) => {\r\n  const formula = usePromise(Formula.get(path), [path]) as any\r\n  if (!formula?.field?.formulaText) return null\r\n  const ret = evalIfFunc(formula.field.formulaText, stats) as JSX.Element\r\n  return ret\r\n}\r\nexport function FormulaDisplay({ statKey, stats, modifiers = {}, expand = true }) {\r\n  if (modifiers[statKey]) {\r\n    const modifierText = (modifiers?.[statKey] ?? []).map(path =>\r\n      <span key={path.join()}> + <ModFormula path={path} stats={stats} /></span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand, premod: true })}{modifierText} </span>\r\n    else\r\n      return <span>{f({ stats, premod: true }, statKey)}{modifierText} </span>\r\n  }\r\n\r\n  if (typeof FormulaText?.[statKey] === \"function\")\r\n    return FormulaText[statKey]({ stats, expand })\r\n  else return null\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true, premod = false } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatName(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  const value = (premod ? stats?.premod?.[statKey] : undefined) ?? stats?.[statKey]\r\n  const printValue = value?.toFixed?.(fixedUnit) || value\r\n  const debug = process.env.NODE_ENV === \"development\" ? <Box component=\"code\" color=\"warning.main\"> {statKey}</Box> : null\r\n  return <Box component=\"span\" sx={{ whiteSpace: \"nowrap\" }}><b>{statName}</b>{debug} <ColorText color=\"info\">{printValue}{statUnit}</ColorText></Box>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - Min( {f(o, \"enemyDEFRed_\")} , 90% ) ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>16 * {f(o, \"eleMas\")} / ( 2000 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n};\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].map(ele => FormulaText[`${ele}_crystalize_hit`] = o => <span>250% * {f(o, `crystalize_hit`)}</span>)\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>clamp( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)}, 0%, 100% )</span>\r\n})\r\n\r\nObject.entries(elementalData).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(elementalData).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport { maxBuildsToShowDefault, maxBuildsToShowList } from \"../Build/Build\";\r\nimport { initialBuildSettings } from \"../Build/BuildSetting\";\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\";\r\nimport Stat from \"../Stat\";\r\nimport { allMainStatKeys, allSubstats, ICachedArtifact, IArtifact, ICachedSubstat, ISubstat, SubstatKey } from \"../Types/artifact\";\r\nimport { ICachedCharacter, ICharacter } from \"../Types/character\";\r\nimport { allArtifactRarities, allArtifactSets, allCharacterKeys, allElements, allHitModes, allReactionModes, allSlotKeys, allWeaponKeys } from \"../Types/consts\";\r\nimport { IWeapon, ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectFromKeyMap } from \"../Util/Util\";\r\n\r\n// MIGRATION STEP: Always keep validate/parse in sync with the latest format\r\n\r\n/// Returns the closest (not necessarily valid) artifact, including errors as necessary\r\nexport function validateArtifact(flex: IArtifact, id: string): { artifact: ICachedArtifact, errors: Displayable[] } {\r\n  const { location, exclude, lock, setKey, slotKey, rarity, mainStatKey } = flex\r\n  const level = Math.round(Math.min(Math.max(0, flex.level), rarity >= 3 ? rarity * 4 : 4))\r\n  const mainStatVal = Artifact.mainStatValue(mainStatKey, rarity, level)!\r\n\r\n  const errors: Displayable[] = []\r\n  const substats: ICachedSubstat[] = flex.substats.map(substat => ({ ...substat, rolls: [], efficiency: 0 }))\r\n  const validated: ICachedArtifact = { id, setKey, location, slotKey, exclude, lock, mainStatKey, rarity, level, substats, mainStatVal }\r\n\r\n  const allPossibleRolls: { index: number, substatRolls: number[][] }[] = []\r\n  let totalUnambiguousRolls = 0\r\n\r\n  function efficiency(rolls: number[], key: SubstatKey): number {\r\n    return rolls.reduce((a, b) => a + b, 0) / Artifact.maxSubstatValues(key) * 100 / rolls.length\r\n  }\r\n\r\n  substats.forEach((substat, index) => {\r\n    const { key, value } = substat\r\n    if (!key) return substat.value = 0\r\n\r\n    const possibleRolls = Artifact.getSubstatRolls(key, value, rarity)\r\n\r\n    if (possibleRolls.length) { // Valid Substat\r\n      const possibleLengths = new Set(possibleRolls.map(roll => roll.length))\r\n\r\n      if (possibleLengths.size !== 1) { // Ambiguous Rolls\r\n        allPossibleRolls.push({ index, substatRolls: possibleRolls })\r\n      } else { // Unambiguous Rolls\r\n        totalUnambiguousRolls += possibleRolls[0].length\r\n      }\r\n\r\n      substat.rolls = possibleRolls.reduce((best, current) => best.length < current.length ? best : current)\r\n      substat.efficiency = efficiency(substat.rolls, key)\r\n    } else { // Invalid Substat\r\n      substat.rolls = []\r\n      substat.efficiency = 0\r\n      errors.push(<>Invalid substat {Stat.getStatNameWithPercent(substat.key)}</>)\r\n    }\r\n  })\r\n\r\n  if (errors.length) return { artifact: validated, errors }\r\n\r\n  const { low, high } = Artifact.rollInfo(rarity), lowerBound = low + Math.floor(level / 4), upperBound = high + Math.floor(level / 4)\r\n\r\n  let highestScore = -Infinity // -Max(substats.rolls[i].length) over ambiguous rolls\r\n  const tryAllSubstats = (rolls: { index: number, roll: number[] }[], currentScore: number, total: number) => {\r\n    if (rolls.length === allPossibleRolls.length) {\r\n      if (total <= upperBound && total >= lowerBound && highestScore < currentScore) {\r\n        highestScore = currentScore\r\n        for (const { index, roll } of rolls) {\r\n          const key = substats[index].key as SubstatKey\r\n          substats[index].rolls = roll\r\n          substats[index].efficiency = efficiency(roll, key)\r\n        }\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    const { index, substatRolls } = allPossibleRolls[rolls.length]\r\n    for (const roll of substatRolls) {\r\n      rolls.push({ index, roll })\r\n      let newScore = Math.min(currentScore, -roll.length)\r\n      if (newScore >= highestScore) // Scores won't get better, so we can skip.\r\n        tryAllSubstats(rolls, newScore, total + roll.length)\r\n      rolls.pop()\r\n    }\r\n  }\r\n\r\n  tryAllSubstats([], Infinity, totalUnambiguousRolls)\r\n\r\n  const totalRolls = substats.reduce((accu, { rolls }) => accu + rolls.length, 0)\r\n\r\n  if (totalRolls > upperBound)\r\n    errors.push(`${rarity}-star artifact (level ${level}) should have no more than ${upperBound} rolls. It currently has ${totalRolls} rolls.`)\r\n  else if (totalRolls < lowerBound)\r\n    errors.push(`${rarity}-star artifact (level ${level}) should have at least ${lowerBound} rolls. It currently has ${totalRolls} rolls.`)\r\n\r\n  if (substats.some((substat) => !substat.key)) {\r\n    let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n    if (substat)\r\n      errors.push(<>Substat {Stat.getStatNameWithPercent(substat.key)} has {'>'} 1 roll, but not all substats are unlocked.</>)\r\n  }\r\n\r\n  return { artifact: validated, errors }\r\n}\r\n/// Returns the closest flex artifact, or undefined if it's not recoverable\r\nexport function parseArtifact(obj: any): IArtifact | undefined {\r\n  if (typeof obj !== \"object\") return\r\n\r\n  let {\r\n    setKey, rarity, level, slotKey, mainStatKey, substats, location, exclude, lock,\r\n  } = obj ?? {}\r\n\r\n  if (!allArtifactSets.includes(setKey) ||\r\n    !allSlotKeys.includes(slotKey) ||\r\n    !allMainStatKeys.includes(mainStatKey) ||\r\n    !allArtifactRarities.includes(rarity) ||\r\n    typeof level !== \"number\" || level < 0 || level > 20)\r\n    return // non-recoverable\r\n\r\n  substats = parseSubstats(substats)\r\n  lock = !!lock\r\n  exclude = !!exclude\r\n  level = Math.round(level)\r\n  if (!allCharacterKeys.includes(location)) location = \"\"\r\n  return { setKey, rarity, level, slotKey, mainStatKey, substats, location, exclude, lock }\r\n}\r\n/// Return a new flex artifact from given artifact. All extra keys are removed\r\nexport function removeArtifactCache(artifact: ICachedArtifact): IArtifact {\r\n  const { setKey, rarity, level, slotKey, mainStatKey, substats, location, exclude, lock } = artifact\r\n  return { setKey, rarity, level, slotKey, mainStatKey, substats: substats.map(substat => ({ key: substat.key, value: substat.value })), location, exclude, lock }\r\n}\r\nfunction parseSubstats(obj: any): ISubstat[] {\r\n  if (!Array.isArray(obj))\r\n    return new Array(4).map(_ => ({ key: \"\", value: 0 }))\r\n  const substats = obj.slice(0, 4).map(({ key = undefined, value = undefined }) => {\r\n    if (!allSubstats.includes(key) || typeof value !== \"number\" || !isFinite(value))\r\n      return { key: \"\", value: 0 }\r\n    value = key.endsWith(\"_\") ? parseFloat(value.toFixed(1)) : parseInt(value.toFixed())\r\n    return { key, value }\r\n  })\r\n  while (substats.length < 4)\r\n    substats.push({ key: \"\", value: 0 })\r\n\r\n  return substats\r\n}\r\n/// Returns the closest character\r\nexport function validateCharacter(flex: ICharacter): ICachedCharacter {\r\n  // TODO: Add more validations to make sure the returned value is a \"valid\" character\r\n  return {\r\n    equippedArtifacts: objectFromKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    ...flex,\r\n  }\r\n}\r\n/// Returns the closest flex character, or undefined if it's not recoverable\r\nexport function parseCharacter(obj: any): ICharacter | undefined {\r\n  if (typeof obj !== \"object\") return\r\n\r\n  let {\r\n    key: characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    bonusStats, talent, infusionAura, constellation, buildSettings, team\r\n  } = obj\r\n\r\n  if (!allCharacterKeys.includes(characterKey) ||\r\n    typeof level !== \"number\" || level < 0 || level > 90)\r\n    return // non-recoverable\r\n\r\n  if (!allHitModes.includes(hitMode)) hitMode = \"avgHit\"\r\n  if (characterKey !== \"Traveler\") elementKey = undefined\r\n  else if (!allElements.includes(elementKey)) elementKey = \"anemo\"\r\n  if (!allReactionModes.includes(reactionMode)) reactionMode = \"\"\r\n  if (!allElements.includes(infusionAura)) infusionAura = \"\"\r\n  if (typeof constellation !== \"number\" && constellation < 0 && constellation > 6) constellation = 0\r\n  if (typeof ascension !== \"number\" ||\r\n    !(ascension in ascensionMaxLevel) ||\r\n    level > ascensionMaxLevel[ascension] ||\r\n    level < (ascensionMaxLevel[ascension - 1] ?? 0))\r\n    ascension = ascensionMaxLevel.findIndex(maxLvl => level <= maxLvl)\r\n  if (typeof talent !== \"object\") talent = { auto: 1, skill: 1, burst: 1 }\r\n  else {\r\n    let { auto, skill, burst } = talent\r\n    if (typeof auto !== \"number\" || auto < 1 || auto > 15) auto = 1\r\n    if (typeof skill !== \"number\" || skill < 1 || skill > 15) skill = 1\r\n    if (typeof burst !== \"number\" || burst < 1 || burst > 15) burst = 1\r\n    talent = { auto, skill, burst }\r\n  }\r\n  if (buildSettings && typeof buildSettings === \"object\") {//buildSettings\r\n    let { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, builds, buildDate, maxBuildsToShow, plotBase } = buildSettings ?? {}\r\n    if (!Array.isArray(setFilters)) setFilters = initialBuildSettings().setFilters\r\n\r\n    //make sure set effects are all numbers\r\n    setFilters = setFilters.map(({ key, num }) => {\r\n      if (Number.isInteger(num)) return { key, num }\r\n      return { key: \"\", num: 0 }\r\n    })\r\n    //move all the empty entries to the back\r\n    setFilters = [...setFilters.filter(s => s.key), ...setFilters.filter(s => !s.key)]\r\n\r\n    if (typeof statFilters !== \"object\") statFilters = {}\r\n\r\n    if (!mainStatKeys || !mainStatKeys.sands || !mainStatKeys.goblet || !mainStatKeys.circlet) {\r\n      const tempmainStatKeys = initialBuildSettings().mainStatKeys\r\n      if (Array.isArray(mainStatKeys)) {\r\n        const [sands, goblet, circlet] = mainStatKeys\r\n        if (sands) tempmainStatKeys.sands = [sands]\r\n        if (goblet) tempmainStatKeys.goblet = [goblet]\r\n        if (circlet) tempmainStatKeys.circlet = [circlet]\r\n      }\r\n      mainStatKeys = tempmainStatKeys\r\n    }\r\n\r\n    if (!optimizationTarget) optimizationTarget = \"finalAtk\"\r\n    if (typeof mainStatAssumptionLevel !== \"number\" || mainStatAssumptionLevel < 0 || mainStatAssumptionLevel > 20)\r\n      mainStatAssumptionLevel = 0\r\n    useExcludedArts = !!useExcludedArts\r\n    useEquippedArts = !!useEquippedArts\r\n    if (!Array.isArray(builds) || !builds.every(b => Array.isArray(b) && b.every(s => typeof s === \"string\"))) {\r\n      builds = []\r\n      buildDate = 0\r\n    }\r\n    if (!Number.isInteger(buildDate)) buildDate = 0\r\n    if (!maxBuildsToShowList.includes(maxBuildsToShow)) maxBuildsToShow = maxBuildsToShowDefault\r\n    if (typeof plotBase !== \"string\") plotBase = \"\"\r\n    buildSettings = { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, builds, buildDate, maxBuildsToShow, plotBase }\r\n  }\r\n\r\n  if (!conditionalValues)\r\n    conditionalValues = {}\r\n  if (!team)\r\n    team = [\"\", \"\", \"\"]\r\n  // TODO: validate bonusStats\r\n  const result: ICharacter = {\r\n    key: characterKey, level, ascension, hitMode, reactionMode, conditionalValues,\r\n    bonusStats, talent, infusionAura, constellation, team,\r\n  }\r\n  if (buildSettings) result.buildSettings = buildSettings\r\n  if (elementKey) result.elementKey = elementKey\r\n  return result\r\n}\r\n/// Return a new flex character from given character. All extra keys are removed\r\nexport function removeCharacterCache(char: ICachedCharacter): ICharacter {\r\n  const {\r\n    key: characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    bonusStats, talent, infusionAura, constellation, buildSettings, team\r\n  } = char\r\n  const result: ICharacter = {\r\n    key: characterKey, level, ascension, hitMode, reactionMode, conditionalValues,\r\n    bonusStats, talent, infusionAura, constellation, buildSettings, team\r\n  }\r\n  if (elementKey) result.elementKey = elementKey\r\n  return result\r\n}\r\n\r\nexport function validateWeapon(flex: IWeapon, id: string): ICachedWeapon {\r\n  //TODO: weapon validation\r\n  return { ...flex, id }\r\n}\r\nexport function parseWeapon(obj: any): IWeapon | undefined {\r\n  if (typeof obj !== \"object\") return\r\n\r\n  let { key, level, ascension, refinement, location, lock } = obj\r\n  if (!allWeaponKeys.includes(key)) return\r\n  if (typeof level !== \"number\" || level < 1 || level > 90) level = 1\r\n  if (typeof ascension !== \"number\" || ascension < 0 || ascension > 6) ascension = 0\r\n  // TODO: Check if level-ascension matches\r\n  if (typeof refinement !== \"number\" || refinement < 1 || refinement > 5) refinement = 1\r\n  if (!allCharacterKeys.includes(location)) location = \"\"\r\n\r\n  return { key, level, ascension, refinement, location, lock }\r\n}\r\n/// Return a new flex character from given character. All extra keys are removed\r\nexport function removeWeaponCache(weapon: ICachedWeapon): IWeapon {\r\n  const { key, level, ascension, refinement, location, lock } = weapon\r\n  return { key, level, ascension, refinement, location, lock }\r\n}","export const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\n\r\n// https://github.com/Dimbreath/GenshinData/blob/72c9112a7c5e8e5014f61009a1a2764e266aeab7/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//   or if the permalink is dead,\r\n// https://github.com/Dimbreath/GenshinData/blob/master/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//\r\n// PlayerElementLevelCo\r\nexport const transformativeReactionLevelMultipliers = [-1.0, // lvl 0\r\n  17.165606, 18.535048, 19.904854, 21.274902, 22.6454, 24.649612, 26.640642, 28.868587, 31.36768, 34.143345, 37.201, 40.66, 44.446667, 48.56352, 53.74848, 59.081898, 64.420044, 69.72446, 75.12314, 80.58478, 86.11203, 91.70374, 97.24463, 102.812645, 108.40956, 113.20169, 118.102905, 122.97932, 129.72733, 136.29291, 142.67085, 149.02902, 155.41699, 161.8255, 169.10631, 176.51808, 184.07274, 191.70952, 199.55692, 207.38205, 215.3989, 224.16566, 233.50217, 243.35057, 256.06308, 268.5435, 281.52606, 295.01364, 309.0672, 323.6016, 336.75754, 350.5303, 364.4827, 378.61917, 398.6004, 416.39825, 434.387, 452.95105, 472.60623, 492.8849, 513.56854, 539.1032, 565.51056, 592.53876, 624.4434, 651.47015, 679.4968, 707.79407, 736.67145, 765.64026, 794.7734, 824.67737, 851.1578, 877.74207, 914.2291, 946.74677, 979.4114, 1011.223, 1044.7917, 1077.4437, 1109.9976, 1142.9766, 1176.3695, 1210.1844, 1253.8357, 1288.9528, 1325.4841, 1363.4569, 1405.0974, 1446.8535]\r\n// PlayerShieldLevelCo\r\nexport const crystalizeLevelMultipliers = [-1.0, // lvl 0\r\n  91.1791, 98.707664, 106.23622, 113.76477, 121.29332, 128.82188, 136.35042, 143.87898, 151.40752, 158.93608, 169.99149, 181.07625, 192.19037, 204.0482, 215.939, 227.86275, 247.68594, 267.5421, 287.4312, 303.82642, 320.22522, 336.62762, 352.31927, 368.01093, 383.70255, 394.43237, 405.18146, 415.94992, 426.73764, 437.5447, 450.6, 463.7003, 476.84558, 491.1275, 502.55457, 514.0121, 531.4096, 549.9796, 568.5849, 584.9965, 605.67035, 626.3862, 646.0523, 665.7556, 685.4961, 700.8394, 723.3331, 745.8653, 768.4357, 786.79193, 809.5388, 832.32904, 855.16266, 878.0396, 899.4848, 919.362, 946.0396, 974.7642, 1003.5786, 1030.077, 1056.635, 1085.2463, 1113.9244, 1149.2587, 1178.0648, 1200.2238, 1227.6603, 1257.243, 1284.9174, 1314.7529, 1342.6652, 1372.7524, 1396.321, 1427.3124, 1458.3745, 1482.3358, 1511.9109, 1541.5493, 1569.1537, 1596.8143, 1622.4197, 1648.074, 1666.3761, 1684.6782, 1702.9803, 1726.1047, 1754.6715, 1785.8666, 1817.1375, 1851.0603]\r\n","import { styled } from \"@mui/material\";\r\n\r\n\r\nconst ColorText = styled(\"span\")(({ theme, color }) => {\r\n  if (color && theme.palette[color])\r\n    return { color: theme.palette[color].main }\r\n  return {}\r\n})\r\n\r\nexport default ColorText","import { DBStorage } from \"./DBStorage\"\r\n\r\nexport function getDBVersion(storage: DBStorage) {\r\n  return parseInt(storage.getString('db_ver') ?? '0')\r\n}\r\nexport function setDBVersion(storage: DBStorage, version: number) {\r\n  storage.setString('db_ver', version.toString())\r\n}\r\n","\r\nexport const ascensionMaxLevel = [20, 40, 50, 60, 70, 80, 90] as const\r\nexport const ambiguousLevel = (level) => level !== 90 && ascensionMaxLevel.includes(level)\r\nexport const milestoneLevels = [\r\n  [90, 6],\r\n  [80, 6],\r\n  [80, 5],\r\n  [70, 5],\r\n  [70, 4],\r\n  [60, 4],\r\n  [60, 3],\r\n  [50, 3],\r\n  [50, 2],\r\n  [40, 2],\r\n  [40, 1],\r\n  [20, 1],\r\n  [20, 0],\r\n  [1, 0]\r\n] as const","import elementalData from \"./Data/ElementalData\";\r\nimport { amplifyingReactions, crystalizeLevelMultipliers, hitMoves, hitTypes, transformativeReactionLevelMultipliers, transformativeReactions } from \"./StatConstants\";\r\nimport { ICalculatedStats } from \"./Types/stats\";\r\nimport { clamp } from \"./Util/Util\";\r\n\r\nexport interface StatItem {\r\n  name: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\" },\r\n  atk: { name: \"ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\" },\r\n  def: { name: \"DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"Total HP\" },\r\n  finalATK: { name: \"Total ATK\" },\r\n  finalDEF: { name: \"Total DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  shield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Reduction\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaSprintDec_: { name: \"Sprinting Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n  infusionAura: { name: \"Elemental Infusion Aura\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas: Dict<string, (s: ICalculatedStats) => number> = {\r\n  // Basic Stats\r\n  baseATK: (s) => s.characterATK + s.weaponATK,\r\n  finalATK: (s) => s.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s) => s.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s) => s.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s) => (100 + s.characterLevel) / ((100 + s.characterLevel) + (100 + s.enemyLevel) * (1 - Math.min(s.enemyDEFRed_, 90) / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s) => transformativeReactionLevelMultipliers[s.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 1600 * s.eleMas / (2000 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s) => crystalizeLevelMultipliers[s.characterLevel],\r\n  crystalize_hit: (s) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * s.crystalize_multi,\r\n};\r\n\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].forEach(ele => {\r\n  StatData[`${ele}_crystalize_hit`] = { name: `Crystalize Shield ${elementalData[ele].name} Effective HP`, variant: ele }\r\n  Formulas[`${ele}_crystalize_hit`] = s => s.crystalize_hit * 2.5\r\n})\r\n\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"shattered_hit\", \"crystalize_hit\", \"electro_crystalize_hit\", \"pyro_crystalize_hit\", \"cryo_crystalize_hit\", \"hydro_crystalize_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(elementalData).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s) => s[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(elementalData).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s) => s[`${ele}_${move}_hit_base_multi`] * s.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s) => multi * s.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * s[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${elementalData[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * s[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\n// if (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n};\r\n\r\n","import { ICachedCharacter } from \"../Types/character\";\r\nimport { allElementsWithPhy } from \"../Types/consts\";\r\nimport { BonusStats, ICalculatedStats, Modifier } from \"../Types/stats\";\r\nimport { deepClone } from \"./Util\";\r\nexport const characterStatKeys = [\"characterATK\", \"characterHP\", \"characterDEF\",] as const\r\nexport const enemyEditorKeys = [\"enemyLevel\", ...allElementsWithPhy.map(eleKey => `${eleKey}_enemyImmunity`), ...allElementsWithPhy.map(eleKey => `${eleKey}_enemyRes_`), \"enemyDEFRed_\"]\r\nexport const overrideStatKeys = [...enemyEditorKeys, ...characterStatKeys]\r\nexport function mergeStats(initialStats: BonusStats, stats: BonusStats | undefined) {\r\n  if (!stats) return\r\n  return Object.entries(stats).forEach(([key, val]: any) => {\r\n    switch (key) {\r\n      case \"partyAll\":\r\n      case \"partyOnly\":\r\n      case \"partyActive\":\r\n        if (!initialStats[key]) initialStats[key] = {}\r\n        mergeStats(initialStats[key], val)\r\n        break;\r\n      case \"modifiers\":\r\n        initialStats.modifiers = initialStats.modifiers ?? {}\r\n        mergeModifiers(initialStats.modifiers, val as Modifier)\r\n        break;\r\n      case \"infusionSelf\":\r\n        // TODO: handle multiple aura priority\r\n        if (!initialStats.infusionAura)\r\n          initialStats.infusionAura = val\r\n        break;\r\n      default:\r\n        if (initialStats[key] === undefined) initialStats[key] = val\r\n        else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n}\r\nfunction mergeModifiers(dest: Modifier, partial: Modifier) {\r\n  for (const [key, paths] of Object.entries(partial)) {\r\n    dest[key] = dest[key] ?? []\r\n    dest[key].push(...paths)\r\n  }\r\n}\r\nfunction mergePartyStats(initialStats: ICalculatedStats, stats: BonusStats | undefined) {\r\n  mergeStats(initialStats, stats)\r\n  mergeStats(initialStats.partyBuff, stats)\r\n}\r\n/**\r\n * Merge stats, being aware of wher the stats are suppose to go.(partyAll, partyOnly, partyActive)\r\n */\r\nexport function mergeCalculatedStats(initialStats: ICalculatedStats, stats: BonusStats | undefined) {\r\n  if (!stats) return\r\n  return Object.entries(stats).forEach(([key, val]: any) => {\r\n    switch (key) {\r\n      case \"partyAll\": {\r\n        const { modifiers, ...rest } = val\r\n        mergePartyStats(initialStats, rest)\r\n        initialStats.teamStats.forEach(t => t && mergePartyStats(t, rest))\r\n        modifiers && mergeModifiers(initialStats[`${key}Modifiers`], modifiers)\r\n        break;\r\n      }\r\n      case \"partyOnly\": {\r\n        const { modifiers, ...rest } = val\r\n        initialStats.teamStats.forEach(t => t && mergePartyStats(t, rest))\r\n        modifiers && mergeModifiers(initialStats[`${key}Modifiers`], modifiers)\r\n        break;\r\n      }\r\n      case \"partyActive\": {\r\n        const { modifiers, ...rest } = val;\r\n        const active = [initialStats, ...initialStats.teamStats].find(t => t?.activeCharacter)\r\n        active && mergePartyStats(active, rest)\r\n        modifiers && mergeModifiers(initialStats[`${key}Modifiers`], modifiers)\r\n        break;\r\n      }\r\n      default:\r\n        mergeStats(initialStats, { [key]: val })\r\n    }\r\n  })\r\n}\r\n\r\nexport function characterBaseStats(character: ICachedCharacter) {\r\n  const { level, } = character\r\n  return {\r\n    enemyLevel: level ?? 1,\r\n    ...Object.fromEntries(allElementsWithPhy.map(eleKey => [`${eleKey}_enemyRes_`, 10])),\r\n    ...Object.fromEntries(allElementsWithPhy.map(eleKey => [`${eleKey}_enemyImmunity`, false])),\r\n    critRate_: 5,\r\n    critDMG_: 50,\r\n    enerRech_: 100,\r\n    stamina: 100\r\n  } as any as ICalculatedStats\r\n}\r\n\r\nexport function deepCloneStats(stats: ICalculatedStats): ICalculatedStats {\r\n  const newStats = { ...stats }\r\n\r\n  // Hand-pick costly copying\r\n  if (newStats.modifiers) newStats.modifiers = deepClone(newStats.modifiers)\r\n  if (stats.teamStats) {\r\n    const teamStats = stats.teamStats.map(t => {\r\n      if (!t) return t\r\n      const { teamStats, ...rest } = t\r\n      return deepClone(rest)\r\n    })\r\n    const team = [newStats, ...teamStats]\r\n    teamStats.forEach((t, i) => t && (t.teamStats = team.filter((_, index) => index !== i + 1)))\r\n    newStats.teamStats = teamStats as ICalculatedStats['teamStats']\r\n  }\r\n  newStats.partyAllModifiers = deepClone(newStats.partyAllModifiers)\r\n  newStats.partyOnlyModifiers = deepClone(newStats.partyOnlyModifiers)\r\n  newStats.partyActiveModifiers = deepClone(newStats.partyActiveModifiers)\r\n  newStats.partyBuff = deepClone(newStats.partyBuff)\r\n  newStats.tlvl = deepClone(newStats.tlvl)\r\n  return newStats\r\n}","import { ElementKey } from \"../Types/consts\"\r\n\r\n/**\r\n * @deprecated use the translated element keys\r\n */\r\nconst elementalData: StrictDict<ElementKey | \"physical\", { name: string }> = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default elementalData","import { Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense } from \"react\"\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport ColorText from \"./ColoredText\"\r\nconst components = {\r\n  anemo: <ColorText color=\"anemo\" />,\r\n  geo: <ColorText color=\"geo\" />,\r\n  cryo: <ColorText color=\"cryo\" />,\r\n  hydro: <ColorText color=\"hydro\" />,\r\n  pyro: <ColorText color=\"pyro\" />,\r\n  electro: <ColorText color=\"electro\" />,\r\n}\r\n\r\nexport function Translate({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  const textObj = values ? t(textKey, values, { returnObjects: true }) as any : t(textKey, { returnObjects: true }) as any\r\n  if (typeof textObj === \"string\") return <span>{children ? <Trans i18nKey={textKey} t={t} components={components} values={values} >{children}</Trans> : <Trans i18nKey={textKey} t={t} components={components} values={values} />}</span>\r\n  return <Suspense fallback={<Skeleton >{children}</Skeleton>}>\r\n    <T key18={textKey} obj={textObj} t={t} values={values} />\r\n  </Suspense>\r\n}\r\n/**this is used cause the `components` prop mess with tag interpolation. */\r\nexport function TransWrapper({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  return <Suspense fallback={<Skeleton >{children}</Skeleton>}>\r\n    <Trans i18nKey={textKey} t={t} values={values} >{children}</Trans>\r\n  </Suspense>\r\n\r\n}\r\nfunction Para({ children }: { children?: JSX.Element }) {\r\n  return <Typography gutterBottom>{children}</Typography>\r\n}\r\n\r\nfunction T({ key18, obj, li, t, values }: { key18: string, obj: any, li?: boolean, t, values?: any }) {\r\n  if (typeof obj === \"string\") return <Trans i18nKey={key18} components={components} parent={Para} t={t} values={values} />\r\n  if (Array.isArray(obj))\r\n    return <Typography component=\"div\"><ul >\r\n      <T key18={key18} obj={{ ...obj }} li t={t} values={values} />\r\n    </ul></Typography>\r\n  return Object.entries(obj).map(([key, val]) => {\r\n    if (val === \"<br/>\") return null\r\n\r\n    if (typeof val === \"object\") return <T key={key as any} key18={`${key18}.${key as any}`} obj={val} t={t} values={values} />\r\n    if (typeof val === \"string\") {\r\n      const trans = <Trans key={key as any} i18nKey={`${key18}.${key}`} components={components} parent={Para} t={t} values={values} />\r\n      return li ? <li key={key as any}>{trans}</li> : trans\r\n    }\r\n    return null\r\n  }) as any\r\n}","import { styled } from \"@mui/material\"\r\ninterface ImgIconProps {\r\n  size?: number;\r\n}\r\nconst ImgIcon = styled(\"img\", {\r\n  name: 'ImgIcon',\r\n  slot: 'Root',\r\n})<ImgIconProps>(({ size = 1 }) => ({\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  height: `${size * 1.2}em`,\r\n  verticalAlign: \"text-bottom\"\r\n}))\r\n\r\nexport default ImgIcon","import { ArtifactRarity, ArtifactSetKey, CharacterKey, ElementKey, SetNum, SlotKey } from \"./consts\";\r\nimport { BonusStats, BasicStats } from \"./stats\";\r\nimport { DocumentSection } from \"./character\";\r\n\r\nexport type IArtifactSheets = StrictDict<ArtifactSetKey, IArtifactSheet>\r\n\r\nexport interface IArtifactSheet {\r\n  name: string, // only to stored the English name for OCR, otherwise, should come from localization pipeline\r\n  rarity: readonly ArtifactRarity[],\r\n  icons: Dict<SlotKey, string>,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  stats?: BonusStats | ((stats: BasicStats) => BonusStats)\r\n  document?: DocumentSection[],\r\n}\r\n\r\nexport interface IArtifact {\r\n  setKey: ArtifactSetKey,\r\n  slotKey: SlotKey,\r\n  level: number,\r\n  rarity: ArtifactRarity,\r\n  mainStatKey: MainStatKey,\r\n  location: CharacterKey | \"\",\r\n  lock: boolean,\r\n  substats: ISubstat[],\r\n\r\n  // GO-specific\r\n  exclude: boolean,\r\n}\r\nexport interface ICachedArtifact extends IArtifact {\r\n  id: string,\r\n  mainStatVal: number,\r\n  substats: ICachedSubstat[],\r\n}\r\n\r\nexport interface ISubstat {\r\n  key: SubstatKey | \"\"\r\n  value: number\r\n}\r\nexport interface ICachedSubstat extends ISubstat {\r\n  rolls: number[],\r\n  efficiency: number,\r\n}\r\nexport type StatKey = MainStatKey | SubstatKey | ReactionDMGStatKey | MoveDMGStatKey | ElementalRESStatKey | ElementalEnemyRESStatKey | SpecializedStatKey\r\n\r\ntype ElementalRESStatKey = `${ElementKey | \"physical\"}_res_`\r\ntype ElementalEnemyRESStatKey = `${ElementKey | \"physical\"}_enemyRes_`\r\ntype ReactionDMGStatKey = \"overloaded_dmg_\" | \"shattered_dmg_\" | \"electrocharged_dmg_\" | \"superconduct_dmg_\" | \"swirl_dmg_\" | \"vaporize_dmg_\" | \"melt_dmg_\" | \"burning_dmg_\" | \"crystalize_dmg_\"\r\ntype MoveDMGStatKey = \"normal_dmg_\" | \"charged_dmg_\" | \"skill_dmg_\" | \"burst_dmg_\"\r\n\r\nexport const allMainStatKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"heal_\"] as const\r\nexport const allSubstats = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"def\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\",] as const\r\n\r\n// TODO: Check if these actually applies\r\n// TODO: do these belong here? \r\ntype SpecializedStatKey = \"normal_critRate_\" | \"charged_critRate_\" | \"skill_critRate_\" | \"burst_critRate_\" | \"plunging_dmg_\" | \"shield_\" | \"enemyDEFRed_\" | \"skillCDRed_\" | \"incHeal_\" | \"weakspotDMG_\" | \"dmg_\" | \"moveSPD_\" | \"staminaDec_\" | \"atkSPD_\" | \"cdRed_\" | \"finalHP\" | \"finalATK\" | \"finalDEF\" | \"staminaGlidingDec_\" | \"staminaSprintDec_\" | \"staminaChargedDec_\" | \"autoBoost\" | \"skillBoost\" | \"burstBoost\"\r\n\r\nexport type MainStatKey = typeof allMainStatKeys[number]\r\nexport type SubstatKey = typeof allSubstats[number]\r\n","import { BuildSetting } from \"../Types/Build\";\r\n\r\nexport const initialBuildSettings = (): BuildSetting => ({\r\n  setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n  statFilters: {},\r\n  mainStatKeys: { sands: [], goblet: [], circlet: [] },\r\n  optimizationTarget: \"finalATK\",\r\n  mainStatAssumptionLevel: 0,\r\n  useExcludedArts: false,\r\n  useEquippedArts: false,\r\n  builds: [],\r\n  buildDate: 0,\r\n  maxBuildsToShow: 5,\r\n  plotBase: \"\"\r\n})","import { MainStatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactSubstatRollData: StrictDict<Rarity, { low: number, high: number, numUpgrades: number }> = {\r\n  1: { low: 0, high: 0, numUpgrades: 1 },\r\n  2: { low: 0, high: 1, numUpgrades: 2 },\r\n  3: { low: 1, high: 2, numUpgrades: 3 },\r\n  4: { low: 2, high: 3, numUpgrades: 4 },\r\n  5: { low: 3, high: 4, numUpgrades: 5 }\r\n};\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: readonly MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatRollData as ArtifactStarsData,\r\n};\r\n","import { ArtifactSlotsData, ArtifactStarsData } from '../Data/ArtifactData';\r\nimport { clampPercent, deepClone, evalIfFunc, objectFromKeyMap } from '../Util/Util';\r\nimport { allSubstats, ICachedArtifact, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, allRarities, ArtifactRarity } from '../Types/consts';\r\nimport { BonusStats, ICalculatedStats } from '../Types/stats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\nimport { ArtifactSetEffects } from '../Types/Build';\r\nimport { mergeStats } from '../Util/StatUtil';\r\nimport ArtifactMainStatsData from './artifact_main_gen.json'\r\nimport ArtifactSubstatsData from './artifact_sub_gen.json'\r\nimport ArtifactSubstatLookupTable from './artifact_sub_rolls_gen.json'\r\nimport { valueString } from '../Util/UIUtil';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey): string =>\r\n    ArtifactSlotsData[slotKey].name\r\n  static slotMainStats = (slotKey: SlotKey): readonly MainStatKey[] =>\r\n    ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): ArtifactSetEffects => {\r\n    const result: ArtifactSetEffects = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      const setEffect: Dict<SetNum, BonusStats> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, entry]) => {\r\n        const setStats = evalIfFunc(entry.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      mergeStats(result[setKey][setNumKey], condStats)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: ICachedArtifact[]) =>\r\n    objectFromKeyMap(allSlotKeys, slotKey => databaseObj.filter(art => art.slotKey === slotKey))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey): readonly number[] => {\r\n    if (statKey.endsWith('_')) // TODO: % CONVERSION\r\n      return ArtifactMainStatsData[numStar][statKey].map(k => k * 100)\r\n    return ArtifactMainStatsData[numStar][statKey]\r\n  }\r\n  static mainStatValue = (key: MainStatKey, rarity: Rarity, level: number): number =>\r\n    Artifact.mainStatValues(rarity, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } =>\r\n    ArtifactStarsData[rarity]\r\n\r\n  static maxSubstatValues = (substatKey: SubstatKey, rarity = maxStar): number => {\r\n    if (substatKey.endsWith(\"_\")) // TODO: % CONVERSION\r\n      return Math.max(...ArtifactSubstatsData[rarity][substatKey]) * 100\r\n    return Math.max(...ArtifactSubstatsData[rarity][substatKey])\r\n  }\r\n\r\n  static maxSubstatRollEfficiency = objectFromKeyMap(allRarities,\r\n    rarity => 100 * Math.max(...allSubstats.map(substat =>\r\n      Artifact.maxSubstatValues(substat, rarity) /\r\n      Artifact.maxSubstatValues(substat, maxStar))))\r\n  /**\r\n   * @deprecated just use the global\r\n   * @returns \r\n   */\r\n  static getSubstatKeys = (): readonly SubstatKey[] =>\r\n    allSubstats\r\n  static totalPossibleRolls = (rarity: Rarity): number =>\r\n    ArtifactStarsData[rarity].high + ArtifactStarsData[rarity].numUpgrades\r\n  static rollsRemaining = (level: number, rarity: Rarity) =>\r\n    Math.ceil((rarity * 4 - level) / 4)\r\n  static getSubstatRollData = (substatKey: SubstatKey, rarity: Rarity) => {\r\n    if (substatKey.endsWith(\"_\")) // TODO: % CONVERSION\r\n      return ArtifactSubstatsData[rarity][substatKey].map(v => v * 100)\r\n    return ArtifactSubstatsData[rarity][substatKey]\r\n  }\r\n\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, rarity: ArtifactRarity): number[][] => {\r\n    const rollData = Artifact.getSubstatRollData(substatKey, rarity)\r\n    const table = ArtifactSubstatLookupTable[rarity][substatKey]\r\n    const lookupValue = valueString(substatValue, substatKey.endsWith(\"_\") ? \"%\" : \"\")\r\n    return table[lookupValue]?.map(roll => roll.map(i => rollData[i])) ?? []\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static getArtifactEfficiency(artifact: ICachedArtifact, filter: Set<SubstatKey>): { currentEfficiency: number, maxEfficiency: number } {\r\n    const { substats, rarity, level } = artifact\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    const totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    const current = substats.filter(({ key }) => key && filter.has(key)).reduce((sum, { rolls, efficiency }) => sum + ((efficiency ?? 0) * (rolls?.length ?? 0)), 0)\r\n\r\n    const rollsRemaining = Artifact.rollsRemaining(level, rarity);\r\n    const emptySlotCount = substats.filter(s => !s.key).length\r\n    const matchedSlotCount = substats.filter(s => s.key && filter.has(s.key)).length\r\n    const unusedFilterCount = filter.size - matchedSlotCount\r\n    let maximum\r\n    if (emptySlotCount && unusedFilterCount) maximum = current + Artifact.maxSubstatRollEfficiency[rarity] * rollsRemaining // Rolls into good empty slot\r\n    else if (matchedSlotCount) maximum = current + Artifact.maxSubstatRollEfficiency[rarity] * (rollsRemaining - emptySlotCount) // Rolls into existing matched slot\r\n    else maximum = current // No possible roll\r\n\r\n    const currentEfficiency = current / totalRolls\r\n    const maxEfficiency = maximum / totalRolls\r\n    return { currentEfficiency, maxEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, ICachedArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    const setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}\r\n","export interface DBStorage {\r\n  keys: string[]\r\n  entries: [key: string, value: string][]\r\n\r\n  get(key: string): any | undefined\r\n  set(key: string, value: any): void\r\n\r\n  getString(key: string): string | undefined\r\n  setString(key: string, value: string): void\r\n  remove(key: string): void\r\n  removeForKeys(shouldRemove: (key: string) => boolean): void\r\n\r\n  copyFrom(other: DBStorage): void\r\n  clear(): void\r\n}\r\n\r\nexport class DBLocalStorage implements DBStorage {\r\n  private storage: Storage\r\n\r\n  constructor(storage: Storage) {\r\n    this.storage = storage\r\n  }\r\n\r\n  get keys(): string[] {\r\n    return Object.keys(this.storage)\r\n  }\r\n  get entries(): [key: string, value: string][] {\r\n    return Object.entries(this.storage)\r\n  }\r\n\r\n  get(key: string) {\r\n    const string = this.storage.getItem(key)\r\n    if (!string) return undefined\r\n    try {\r\n      return JSON.parse(string)\r\n    } catch {\r\n      this.storage.removeItem(key)\r\n      return undefined\r\n    }\r\n  }\r\n  set(key: string, value: any): void {\r\n    this.storage.setItem(key, JSON.stringify(value))\r\n  }\r\n\r\n  getString(key: string): string | undefined {\r\n    return this.storage.getItem(key) ?? undefined\r\n  }\r\n  setString(key: string, value: string) {\r\n    this.storage.setItem(key, value)\r\n  }\r\n  remove(key: string) {\r\n    this.storage.removeItem(key)\r\n  }\r\n\r\n  copyFrom(other: DBStorage) {\r\n    for (const [key, value] of other.entries) {\r\n      this.setString(key, value)\r\n    }\r\n  }\r\n  clear() {\r\n    this.storage.clear()\r\n  }\r\n  removeForKeys(shouldRemove: (key: string) => boolean) {\r\n    for (const key in this.storage) {\r\n      if (shouldRemove(key))\r\n        this.storage.removeItem(key)\r\n    }\r\n  }\r\n}\r\n\r\nexport class SandboxStorage implements DBStorage {\r\n  private storage: Dict<string, string> = {}\r\n\r\n  constructor(other: DBStorage | undefined = undefined) {\r\n    other && this.copyFrom(other)\r\n  }\r\n\r\n  get keys(): string[] {\r\n    return Object.keys(this.storage)\r\n  }\r\n  get entries(): [key: string, value: string][] {\r\n    return Object.entries(this.storage)\r\n  }\r\n\r\n  get(key: string) {\r\n    const string = this.storage[key]\r\n    if (!string) return undefined\r\n    try {\r\n      return JSON.parse(string)\r\n    } catch {\r\n      delete this.storage[key]\r\n      return undefined\r\n    }\r\n  }\r\n  set(key: string, value: any): void {\r\n    this.storage[key] = JSON.stringify(value)\r\n  }\r\n\r\n  getString(key: string): string | undefined {\r\n    return this.storage[key]\r\n  }\r\n  setString(key: string, value: string): void {\r\n    this.storage[key] = value\r\n  }\r\n  remove(key: string): void {\r\n    delete this.storage[key]\r\n  }\r\n\r\n  copyFrom(other: DBStorage) {\r\n    for (const [key, value] of other.entries) {\r\n      this.setString(key, value)\r\n    }\r\n  }\r\n  clear() {\r\n    this.storage = {}\r\n  }\r\n  removeForKeys(shouldRemove: (key: string) => boolean) {\r\n    this.storage = Object.fromEntries(Object.entries(this.storage).filter(([key]) => !shouldRemove(key)))\r\n  }\r\n}\r\n\r\nexport const dbStorage = new DBLocalStorage(localStorage)\r\n"],"sourceRoot":""}