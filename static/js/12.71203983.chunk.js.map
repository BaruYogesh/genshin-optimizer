{"version":3,"sources":["../node_modules/react-bootstrap/esm/Button.js","Character/CharacterDisplay/Components/FieldDisplay.tsx","Components/CustomFormControl.tsx","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Conditional/ConditionalSelector.tsx","Character/CharacterDisplay/Components/ConditionalDisplay.tsx","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-bootstrap/esm/Badge.js","Components/CharacterSelection.tsx","Util/UIUtil.ts","../node_modules/react-bootstrap/esm/ButtonGroup.js","Components/StatDisplay.tsx","Character/StatInput.tsx","../node_modules/react-bootstrap/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-bootstrap/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Artifact/ArtifactCard.tsx","Artifact/PercentBadge.tsx","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx","Components/WIPComponent.tsx","../node_modules/react-bootstrap/esm/Image.js","../node_modules/react-bootstrap/esm/CloseButton.js","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Character/CharacterDisplay/DamageOptionsAndCalculation.tsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","TestPage/TestDisplay.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["Button","React","forwardRef","_ref","ref","bsPrefix","variant","size","active","className","block","type","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","href","createElement","SafeAnchor","_extends","disabled","Component","displayName","defaultProps","FieldDisplay","field","index","equippedBuild","newBuild","compareAgainstEquipped","useContext","compareAgainstEquippedContext","stats","canShow","useMemo","fixedVal","fixed","fieldVal","value","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","parseInt","toFixed","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","id","icon","faQuestionCircle","style","cursor","unit","Item","CustomFormControl","onChange","float","placeholder","allowEmpty","useState","state","setstate","stateDirty","setstateDirty","sendChange","useCallback","parseFunc","parseFloat","useEffect","aria-label","e","target","onBlur","onKeyDown","key","_fadeStyles","fadeStyles","ENTERING","ENTERED","Fade","children","handleEnter","node","triggerBrowserReflow","onEnter","Transition","addEndListener","transitionEndListener","status","innerProps","cloneElement","in","timeout","mountOnEnter","unmountOnExit","appear","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ConditionalSelector","conditional","conditionalValue","setConditional","name","conditionalNum","conditionalStateKey","states","values","text","evalIfFunc","maxStack","badge","Badge","Dropdown","Toggle","whiteSpace","Menu","onClick","entries","map","stateKey","condial","Fragment","keys","v","stack","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","editable","fieldClassName","Conditional","resolve","undefined","conditionalStats","fields","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","conditionalValues","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","contains","context","compareDocumentPosition","useMounted","mounted","useRef","isMounted","current","useCallbackRef","pill","_ref$as","CharacterSelectionDropdownList","onSelect","CharacterDatabase","getCharacterKeyList","sort","a","b","characterKey","DropDownItem","characterSheet","usePromise","CharacterSheet","get","valueString","Math","round","ButtonGroup","toggle","vertical","rest","baseClass","role","DisplayStatDiff","label","val","oldVal","oldText","diffText","xs","StatDisplay","weaponSheet","character","statKey","Formula","build","invalid","getStatValueWithOverride","Stat","getStatUnit","fixedUnit","StatIconEle","getStatName","labelVariant","hasOverride","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Prepend","Text","Append","Boolean","pointerEvents","faUndo","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","create","constructor","useWillUnmount","fn","onUnmount","valueRef","useUpdatedRef","resolveContainerRef","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","useForceUpdate","forceUpdateHook","ArtifactDatabase","registerArtListener","unregisterArtListener","sheet","ArtifactSheet","setKey","equipOnChar","charKey","Artifact","equipArtifactOnChar","art","location","maximumEfficiency","substatsValidation","slotKey","numStars","level","mainStatKey","substats","lock","currentEfficiency","mainStatLevel","max","min","mainStatVal","mainStatValue","artifactValid","locationName","border","md","src","slotIcons","thumbnail","slotNames","slotNameWithIcon","Body","Title","stars","stat","numRolls","rolls","efficiency","effOpacity","statName","opacity","valid","Footer","Divider","setLocked","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","floor","badgeColor","artLayoutSize","lg","CharacterArtifactPane","artifacts","history","useHistory","statKeys","getDisplayStatKeys","edit","artid","push","pathname","artToEditId","artifactSheets","getAll","equipArts","window","confirm","equippedArtifacts","equipArtifacts","unequipArts","fromEntries","allSlotKeys","sKey","StatDisplayComponent","statsDisplayKeys","Alert","Row","Col","setEffects","setToSlots","setNumKeyArr","setNumKey","SetEffectDisplay","find","CharacterOverviewPane","constellation","editLevel","setEditLevel","elementKey","weaponTypeKey","Img","cardImg","Image","Assets","elements","weaponTypes","star","colored","InputGroup","clamp","getLevel","levelKey","OverlayTrigger","Tooltip","faSave","constellationName","getTalent","img","roundedCircle","WeaponStatsEditorCard","MainStatsCards","WeaponStatsCard","title","statsVals","WeaponStatsEditorCardWeaponDropdown","setStateWeapon","weaponSheets","WeaponSheet","DropdownButton","reverse","arr","ItemText","getWeaponsOfType","filter","rarity","weaponObj","weapon","editing","SetEditing","showDescription","setShowDescription","substatKey","Weapon","getWeaponSubstatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubstatVal","weaponPassiveName","passiveName","weaponBonusStats","conditionals","faQuoteLeft","getLevelName","LevelNameData","refineIndex","faGavel","passiveDescription","atk","description","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","allElements","forEach","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","CharacterSpecializedStatKey","getStatNameRaw","xl","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electro","cryo","electrocharged_hit","hydro","overloaded_hit","pyro","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","crystalize_hit","crystalizeEleToDisplay","charEleKey","eleInterArr","ElementToReactionKeys","includes","Ele","anemo","geo","talentLimits","talentLevelKeys","header","talentLvlKey","talentLvlKeyRaw","levelBoost","newTalentLevelKey","talentStats","getTalentStats","statsEle","Subtitle","section","talentText","createContext","CustomMenu","labeledBy","minWidth","aria-labelledby","Children","toArray","child","initialCharacter","hitMode","reactionMode","baseStatOverrides","WeaponLevelKeys","auto","skill","burst","infusionAura","buildSettings","characterReducer","action","CharacterDisplayCard","propCharacterKey","propCharacter","propSetCharacterKey","setCharacterKey","footer","propNewBuild","onClose","tabName","useReducer","setcompareAgainstEquipped","firstUpdate","char","update","newCKey","deepClone","flexArts","calculateBuild","commonPaneProps","DamageOptionsAndCalculationEle","hasTalentPage","DamageOptionsAndCalculation","CharSelectDropdown","faTimes","Provider","Tab","Container","defaultActiveKey","Nav","fill","Link","eventKey","WIPComponent","Content","Pane","HeaderIconDisplay","thumbImg","allCharacterKeys","CharDropdownItem","getlevelTemplateName","getlevelKeys","lvlKey","getLevelString","PropTypes","string","bool","fluid","rounded","propTypes","isRequired","func","CloseButton","setEffectText","setEffectTexts","setStats","setNumStats","setStatsFields","setEffectConditionals","ckey","cardbg","sectionValues","JSON","stringify","infusionVals","InfusionAuraDropdown","isMelee","ReactionToggle","HitModeToggle","m","CalculationDisplay","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","printStat","Collapse","subKey","printFormula","formulaField","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","callback","currentEventKey","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","rel","eleKey","immunityStatKey","elementImmunity","isValidElement","hasClass","classList","baseVal","indexOf","usePrevious","noop","ToggleButton","checked","inputRef","focused","setFocused","handleFocus","tagName","handleBlur","autoComplete","onFocus","ToggleButtonGroup","_useUncontrolled","useUncontrolled","controlledProps","getValues","concat","invariant","_child$props","childVal","childOnChange","chainFunction","inputVal","event","isActive","handleToggle","TestDisplay","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/12.71203983.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Character from \"../../Character\";\r\nimport { compareAgainstEquippedContext } from \"../../CharacterDisplayCard\";\r\n\r\nexport default function FieldDisplay({ field, index, equippedBuild, newBuild, className = \"p-2\" }) {\r\n  const compareAgainstEquipped = useContext(compareAgainstEquippedContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => field.canShow(stats), [field, stats])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", stats)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", stats)?.[0]?.(stats)\r\n      //compareAgainstEquipped\r\n      if (compareAgainstEquipped && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareAgainstEquipped, fixedVal, equippedBuild, field, stats])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", stats), [field, stats])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", stats), [field, stats])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", stats)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip id=\"field-formula\">{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, stats])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", stats), [field, stats])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled = false, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _fadeStyles;\n\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport Transition, { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nvar fadeStyles = (_fadeStyles = {}, _fadeStyles[ENTERING] = 'show', _fadeStyles[ENTERED] = 'show', _fadeStyles);\nvar Fade = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\"]);\n\n  var handleEnter = useCallback(function (node) {\n    triggerBrowserReflow(node);\n    if (props.onEnter) props.onEnter(node);\n  }, [props]);\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    ref: ref,\n    addEndListener: transitionEndListener\n  }, props, {\n    onEnter: handleEnter\n  }), function (status, innerProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames('fade', className, children.props.className, fadeStyles[status])\n    }));\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial]: any, i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n          <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setConditional([0])}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n            <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n              {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n            </Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n        <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport Conditional from \"../../../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../../../Conditional/ConditionalSelector\"\r\nimport ICalculatedStats from \"../../../Types/ICalculatedStats\"\r\nimport IConditional from \"../../../Types/IConditional\"\r\nimport statsToFields from \"../../../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../../../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  characterDispatch: (any) => void,//TODO: characterDispatch type\r\n  editable: boolean,\r\n  fieldClassName?: string\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, equippedBuild, newBuild, characterDispatch, editable, fieldClassName }: ConditionalDisplayProps) {\r\n  const stats = newBuild ? newBuild : equippedBuild as ICalculatedStats\r\n  if (!stats) debugger\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats.conditionalValues, characterDispatch])\r\n\r\n  if (!canShow) return null\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector disabled={!editable}\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild, className: fieldClassName }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","/* eslint-disable no-bitwise, no-cond-assign */\n// HTML DOM and SVG DOM may have different support levels,\n// so we need to check on context instead of a document root element.\nexport default function contains(context, node) {\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return <>{CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>\r\n    {characterSheet.name}\r\n  </Dropdown.Item>\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","export function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1)\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { ICharacter } from \"../Types/character\"\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\ntype StatDisplayProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined)\r\n\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey, invalid as any)\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (statKey === \"finalHP\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterHP\")\r\n        else if (statKey === \"finalDEF\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterDEF\")\r\n        else if (statKey === \"finalATK\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterATK\") + Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"weaponATK\")\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, characterSheet, weaponSheet, equippedBuild, newBuild, editable, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label: label as any }} />\r\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip id=\"reset-tooltip\">Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { IArtifact, Substat } from '../Types/artifact';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: IArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number }\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }: Data): JSX.Element | null {\r\n  const [, forceUpdateHook] = useForceUpdate()\r\n  useEffect(() => {\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () => { artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook) }\r\n  }, [artifactId, forceUpdateHook])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? ArtifactDatabase.get(artifactId) : undefined))?.setKey))\r\n  const equipOnChar = (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey)\r\n\r\n  const editable = !artifactObj // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? ArtifactDatabase.get(artifactId);\r\n  const characterSheet = usePromise(CharacterSheet.get(art?.location ?? \"\"))\r\n  if (!art) return null\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n\r\n  const { id, slotKey, numStars, level, mainStatKey, substats, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.mainStatValue(mainStatKey, numStars, mainStatLevel) ?? \"\"}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = art.maximumEfficiency !== undefined\r\n  const locationName = characterSheet?.name ?? \"Inventory\"\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{sheet?.slotNames[slotKey] ?? \"Unknown Piece Name\"}</b></h6>\r\n          <div>{Artifact.slotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{sheet?.name ?? \"Artifact Set\"}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: Substat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueString(stat.value, Stat.getStatUnit(stat.key))}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{valueString(efficiency, \"eff\")}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} {...{ className: \"float-right\" }} /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"lock-artifact-tip\">Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\" onClick={() => ArtifactDatabase.setLocked(id, !lock)}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { useCallback, useMemo } from 'react';\r\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { ICharacter } from '../../Types/character';\r\nimport { allSlotKeys, SlotKey } from '../../Types/consts';\r\nimport ICalculatedStats from '../../Types/ICalculatedStats';\r\nimport { usePromise } from '../../Util/ReactUtil';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\nconst artLayoutSize = { xs: 12, md: 6, lg: 4 }\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  artifacts?: any[]\r\n}\r\nfunction CharacterArtifactPane({ characterSheet, weaponSheet, character, character: { characterKey }, equippedBuild, newBuild, editable, characterDispatch, artifacts }: CharacterArtifactPaneProps) {\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => characterSheet.getDisplayStatKeys(stats), [stats, characterSheet])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && Character.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, newBuild, characterDispatch])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    Character.equipArtifacts(characterKey, Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])) as StrictDict<SlotKey, string>)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, characterDispatch])\r\n  return <>\r\n    <Card className=\"h-100 mb-2\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Body>\r\n        <StatDisplayComponent {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys: statKeys, editable }} />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        {newBuild ? <Button onClick={equipArts}>Equip all artifacts to current character</Button> : (editable && <Button onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n        {Boolean(mainStatAssumptionLevel) && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert>}\r\n      </Card.Footer>\r\n    </Card>\r\n    <Row className=\"mb-n2\">\r\n      <Col {...artLayoutSize} className=\"d-flex flex-column\">\r\n        {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n          <Card key={setKey} className=\"mb-2 flex-grow-1\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n            <Card.Header>{artifactSheets?.[setKey].name ?? \"\"}</Card.Header>\r\n            <Card.Body className=\"p-2 mb-n2\">\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      {artifacts ?\r\n        allSlotKeys.map(slotKey => {//from flex\r\n          const art = artifacts.find(art => art.slotKey === slotKey)\r\n          return Boolean(art) && <Col {...artLayoutSize} key={slotKey} className=\"mb-2\">\r\n            <ArtifactCard artifactObj={art} />\r\n          </Col>\r\n        }) : allSlotKeys.map(slotKey =>\r\n          Boolean(stats?.equippedArtifacts?.[slotKey]) && <Col {...artLayoutSize} key={stats?.equippedArtifacts?.[slotKey]} className=\"mb-2\">\r\n            <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n          </Col>\r\n        )}\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport Conditional from \"../../Conditional/Conditional\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport { allElements } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport { IConditionals } from \"../../Types/IConditional\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport Character from \"../Character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport StatInput from \"../StatInput\"\r\nimport ConditionalDisplay from \"./Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"./Components/FieldDisplay\"\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean;\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, weaponSheet, editable, character, character: { characterKey, constellation }, characterDispatch, equippedBuild, newBuild }: CharacterOverviewPaneProps) {\r\n  const [editLevel, setEditLevel] = useState(false)\r\n  const elementKey = characterSheet.elementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Card.Img src={characterSheet.cardImg} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{characterSheet.name} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={characterSheet.star} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl placeholder={undefined} onChange={val => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: clamp(val, 1, 90), characterSheet, weaponSheet })} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: Character.getLevel(character.levelKey), characterSheet, weaponSheet })} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip id=\"artifact-override-level\">Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"success\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{characterSheet.constellationName}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={characterSheet.getTalent(`constellation${i + 1}`)?.img} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n      <MainStatsCards {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n    </Col>\r\n  </Row >\r\n}\r\n\r\nfunction WeaponStatsCard({ title, statsVals = {}, stats = {} }) {\r\n  if ((Object.keys(statsVals ?? {}) as any).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay newBuild={undefined} key={i} index={i} {...{ field, equippedBuild: stats, className: \"px-3 py-2\" }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}\r\n\r\n\r\nfunction WeaponStatsEditorCardWeaponDropdown({ weaponSheet, weaponTypeKey, setStateWeapon }: { weaponSheet: WeaponSheet, weaponTypeKey: string, setStateWeapon: (key: any, value: any) => void }) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  if (!weaponSheets) return null\r\n\r\n  return <DropdownButton title={weaponSheet.name}>\r\n    {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n      <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n      {Object.entries(WeaponSheet.getWeaponsOfType(weaponSheets, weaponTypeKey)).filter(([, weaponObj]: any) => weaponObj.rarity === star).map(([key, weaponObj]: any) =>\r\n        <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n          {weaponObj.name}\r\n        </Dropdown.Item>\r\n      )}\r\n      {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n    </React.Fragment>)}\r\n  </DropdownButton>\r\n}\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction WeaponStatsEditorCard({ characterSheet, weaponSheet, editable, character, character: { weapon }, characterDispatch, equippedBuild, newBuild }: WeaponStatsEditorCardProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => {\r\n    if (key === \"key\") {\r\n      if (value === weapon.key) return\r\n      else {\r\n        //reset the conditionalNum when we switch weapons\r\n        const { conditionalValues } = character\r\n        delete conditionalValues.weapon\r\n        characterDispatch({ conditionalValues })\r\n      }\r\n    }\r\n    character.weapon[key] = value\r\n    characterDispatch({ weapon: character.weapon })\r\n  }\r\n  const substatKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)\r\n  const weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet.passiveName\r\n  const weaponBonusStats = weaponSheet.stats(build)\r\n  const conditionals = Conditional.conditionals.weapon[weapon.key] as IConditionals\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      <Row className=\"mb-n2\">\r\n        <Col xs={12} md={3} lg={4}>\r\n          <Image src={weaponSheet.img} className={`w-100 h-auto grad-${weaponSheet.rarity}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <WeaponStatsEditorCardWeaponDropdown weaponSheet={weaponSheet} weaponTypeKey={weaponTypeKey} setStateWeapon={setStateWeapon} />\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {substatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><span className=\"mr-2\">{StatIconEle(substatKey)}</span>{Stat.getStatName(substatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(substatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <h5 className=\"mb-0\">{weaponSheet.name} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n            <p><Stars stars={weaponSheet.rarity} /></p>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <p>{weaponPassiveName && weaponSheet.passiveDescription(build)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: weaponDisplaySubVal }} stats={build} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            {Boolean(conditionals) && Object.entries(conditionals).map(([stateKey, conditional]) =>\r\n              <ConditionalDisplay key={stateKey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} fieldClassName=\"py-2 px-3\" />)}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <small>{weaponSheet.description}</small>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  editable: boolean,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction MainStatsCards({ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys: any[] = [];\r\n\r\n  [\"physical\", ...allElements].forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: key, characterSheet, weaponSheet })} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")}\r\n                  onChange={value => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value, characterSheet, weaponSheet })} />\r\n                <InputGroup.Append>\r\n                  {isPercentSpecialStatSelect && <InputGroup.Text>%</InputGroup.Text>}\r\n                  <Button onClick={() => {\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatKey\"), characterSheet, weaponSheet })\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatVal\"), characterSheet, weaponSheet })\r\n                  }}\r\n                    disabled={!Character.hasOverride(character, \"specializedStatKey\") && !Character.hasOverride(character, \"specializedStatVal\")}\r\n                  >\r\n                    <FontAwesomeIcon icon={faUndo} />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined\r\n                  }\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from 'react';\r\nimport { Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport { evalIfFunc } from \"../../Util/Util\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport ConditionalDisplay from './Components/ConditionalDisplay';\r\nimport FieldDisplay from './Components/FieldDisplay';\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterTalentPane(props: CharacterTalentPaneProps) {\r\n  const { characterSheet, character: { levelKey, constellation }, editable, characterDispatch, newBuild, equippedBuild } = props\r\n  const ascension = Character.getAscension(levelKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col><ReactionDisplay {...{ characterSheet, newBuild, equippedBuild }} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {!!characterSheet.getTalent(\"sprint\") && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalent(tKey)) return null\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet, newBuild, equippedBuild }: { characterSheet: CharacterSheet, newBuild?: ICalculatedStats, equippedBuild?: ICalculatedStats }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = characterSheet.elementKey\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n} as const\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip id=\"shatter-tooltip\">Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nconst crystalizeEleToDisplay = {\r\n  \"default\": <span className=\"text-crystalize\">{Stat.getStatName(\"crystalize_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /></span>,\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_crystalize_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_crystalize_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_crystalize_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_crystalize_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /></span>\r\n} as const\r\nfunction CrystalizeCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(crystalizeEleToDisplay)[0])\r\n  const sKey = ele === \"default\" ? \"crystalize_hit\" : `${ele}_crystalize_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={crystalizeEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(crystalizeEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  ascension: number,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { constellation, talentLevelKeys, }, characterDispatch, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, onClickTitle }: SkillDisplayCardProps) {\r\n  let build = newBuild ? newBuild : equippedBuild as ICalculatedStats //assumes at least one of them is not undefined\r\n  let header: Displayable | null = null\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n        talentLevelKeys[tKey] = newTalentLevelKey\r\n        characterDispatch({ talentLevelKeys })\r\n      }\r\n      header = <Card.Header>\r\n        <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>{`Talent Level: ${talentLvlKey + 1}`}</Card.Header>\r\n    }\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"h-100\">\r\n    {header}\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={characterSheet.getTalent(talentKey)?.img} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{characterSheet.getTalent(talentKey)?.name}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {/* Display document sections */}\r\n      {characterSheet.getTalent(talentKey)?.document?.map((section, i) => {\r\n        if (!section.canShow!(build)) return null\r\n        const talentText = evalIfFunc(section.text, build)\r\n        let fields = section.fields ?? []\r\n        return <div className=\"my-2\" key={\"section\" + i}>\r\n          <div {...{ xs: 12 }}>\r\n            <div className=\"mb-2\">{talentText}</div>\r\n            {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n              {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n            </ListGroup>}\r\n          </div>\r\n          {!!section.conditional && <ConditionalDisplay {...{ conditional: section.conditional, equippedBuild, newBuild, characterDispatch, editable }} />}\r\n        </div>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { createContext, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allCharacterKeys, allSlotKeys } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { usePromise } from '../Util/ReactUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport DamageOptionsAndCalculation from './CharacterDisplay/DamageOptionsAndCalculation';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nexport const compareAgainstEquippedContext = createContext(undefined)\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }: any, ref: any) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" } as any}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\nconst initialCharacter = (characterKey): ICharacter => ({\r\n  characterKey: characterKey ?? \"\",//the game character this is based off\r\n  levelKey: \"L1\",//combination of level and ascension\r\n  hitMode: \"avgHit\",\r\n  reactionMode: null,\r\n  equippedArtifacts: Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])),\r\n  conditionalValues: {},\r\n  baseStatOverrides: {},//overriding the baseStat\r\n  weapon: {\r\n    key: \"\",\r\n    levelKey: WeaponLevelKeys[0],\r\n    refineIndex: 0,\r\n    overrideMainVal: 0,\r\n    overrideSubVal: 0,\r\n  },\r\n  talentLevelKeys: {\r\n    auto: 0,\r\n    skill: 0,\r\n    burst: 0,\r\n  },\r\n  infusionAura: \"\",\r\n  constellation: 0,\r\n  buildSettings: {}//use to reset when changing to a new character, so it would not copy from old character.\r\n})\r\n\r\ntype characterReducerOverwrite = {\r\n  type: \"overwrite\",\r\n  character: ICharacter\r\n}\r\ntype characterReducerFromDB = {\r\n  type: \"fromDB\",\r\n}\r\ntype characterReducerStatOverride = {\r\n  type: \"statOverride\",\r\n  statKey: string\r\n  value: number | string\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n}\r\ntype characterReducerOverwriteAction = characterReducerOverwrite | characterReducerFromDB | characterReducerStatOverride | Partial<ICharacter>\r\n\r\nfunction characterReducer(state: ICharacter, action: characterReducerOverwriteAction) {\r\n  if (\"type\" in action) switch (action?.type) {\r\n    case \"overwrite\":\r\n      return { ...state, ...action.character }\r\n    case \"fromDB\"://for equipping artifacts, that makes the changes in DB instead of in state.\r\n      return { ...state, ...CharacterDatabase.get(state.characterKey) ?? {} }\r\n    case \"statOverride\": {\r\n      const { statKey, value, characterSheet, weaponSheet, } = action\r\n      const baseStatOverrides = state.baseStatOverrides\r\n      const baseStatVal = Character.getBaseStatValue(state, characterSheet, weaponSheet, statKey)\r\n      if (baseStatVal === value)\r\n        delete baseStatOverrides[statKey]\r\n      else\r\n        baseStatOverrides[statKey] = value\r\n      return { ...state, baseStatOverrides }\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\ntype CharacterDisplayCardProps = {\r\n  characterKey?: string,\r\n  character?: ICharacter,\r\n  setCharacterKey?: (any) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  editable?: boolean,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey: propCharacterKey, character: propCharacter, setCharacterKey: propSetCharacterKey, footer, newBuild: propNewBuild, editable = false, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const [character, characterDispatch] = useReducer(characterReducer, initialCharacter(propCharacterKey))\r\n  const [compareAgainstEquipped, setcompareAgainstEquipped] = useState(false)\r\n  const firstUpdate = useRef(true)\r\n  useEffect(() => {\r\n    if (!propCharacterKey) return\r\n    const char = { ...initialCharacter(propCharacterKey), ...CharacterDatabase.get(propCharacterKey) ?? {} }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacterKey])\r\n  useEffect(() => {\r\n    if (!propCharacter) return\r\n    const char = { ...initialCharacter(propCharacter.characterKey), ...propCharacter }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacter])\r\n\r\n  useEffect(() => {\r\n    //skip saving on the first update, since those updates are from loading from DB\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false\r\n      return\r\n    }\r\n    //save character to DB\r\n    editable && CharacterDatabase.update(character)\r\n  }, [character, editable])\r\n\r\n  const characterKey = propCharacter?.characterKey ?? character.characterKey\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  useEffect(() => {\r\n    if (weaponSheets && characterSheet && !character.weapon.key) {\r\n      character.weapon.key = Object.keys(WeaponSheet.getWeaponsOfType(weaponSheets, characterSheet.weaponTypeKey))[0] ?? \"\"\r\n      characterDispatch({ weapon: character.weapon })\r\n    }\r\n  }, [characterSheet, weaponSheets, character.weapon])\r\n\r\n  const weaponSheet = usePromise(WeaponSheet.get(character.weapon.key))\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const setCharacterKey = useCallback(\r\n    newCKey => {\r\n      let state = initialCharacter(newCKey)\r\n      const char = CharacterDatabase.get(newCKey)\r\n      if (char) state = { ...state, ...char }\r\n      characterDispatch({ type: \"overwrite\", character: state })\r\n      if (newCKey !== characterKey)\r\n        propSetCharacterKey?.(newCKey)\r\n    }, [characterKey, characterDispatch, propSetCharacterKey])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return\r\n    const newBuild = propNewBuild && deepClone(propNewBuild);\r\n    (newBuild as any).hitMode = character.hitMode;\r\n    (newBuild as any).reactionMode = character.reactionMode;\r\n    return newBuild\r\n  }, [propNewBuild, character.hitMode, character.reactionMode])\r\n\r\n  const { levelKey, artifacts: flexArts } = character\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel), [character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel])\r\n\r\n  const commonPaneProps = { character, newBuild, equippedBuild: (!newBuild || compareAgainstEquipped) ? equippedBuild : undefined, editable, characterDispatch, compareAgainstEquipped }\r\n  if (flexArts) (commonPaneProps as any).artifacts = flexArts//from flex\r\n  // main CharacterDisplayCard\r\n  const DamageOptionsAndCalculationEle = characterSheet?.hasTalentPage && weaponSheet && <DamageOptionsAndCalculation {...{ characterSheet, weaponSheet, character, characterDispatch, newBuild, equippedBuild }} className=\"mb-2\" />\r\n  return (<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs={\"auto\"} className=\"mr-auto\">\r\n          {/* character selecter/display */}\r\n          <CharSelectDropdown characterSheet={characterSheet} character={character} weaponSheet={weaponSheet} editable={editable} levelKey={levelKey} characterDispatch={characterDispatch} setCharacterKey={setCharacterKey} />\r\n        </Col>\r\n        {Boolean(mainStatAssumptionLevel) && <Col xs=\"auto\"><Alert className=\"mb-0 py-1 h-100\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert></Col>}\r\n        {/* Compare against new build toggle */}\r\n        {newBuild ? <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(false)}>\r\n              <small>Show New artifact Stats</small>\r\n            </Button>\r\n            <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(true)}>\r\n              <small>Compare against equipped artifacts</small>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col> : null}\r\n        {Boolean(onClose) && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    {characterKey && characterSheet && weaponSheet && <Card.Body>\r\n      <compareAgainstEquippedContext.Provider value={compareAgainstEquipped as any}>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 mx-0\" fill>\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\"><h5 className=\"mb-0\">Character</h5></Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\"><h5 className=\"mb-0\">New Artifacts</h5></Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\"><h5 className=\"mb-0\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</h5></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {process.env.NODE_ENV !== \"development\" && !characterSheet.hasTalentPage ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled><h5 className=\"mb-0\">Talents</h5> <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\"><h5 className=\"mb-0\">Talents</h5></Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterOverviewPane characterSheet={characterSheet} weaponSheet={weaponSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterTalentPane characterSheet={characterSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </compareAgainstEquippedContext.Provider>\r\n    </Card.Body>}\r\n    {footer && <Card.Footer>\r\n      {footer}\r\n    </Card.Footer>}\r\n  </Card>)\r\n}\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  weaponSheet?: WeaponSheet,\r\n  character: ICharacter\r\n  editable: boolean\r\n  levelKey: string\r\n  characterDispatch: (any) => void\r\n  setCharacterKey: (any) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, weaponSheet, character, editable, levelKey, characterDispatch, setCharacterKey }: CharSelectDropdownProps) {\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <Image src={characterSheet.thumbImg} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {characterSheet.name} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  return <>{editable ? <ButtonGroup>\r\n    <Dropdown as={ButtonGroup}>\r\n      <Dropdown.Toggle as={Button}>\r\n        {HeaderIconDisplay}\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu as={CustomMenu}>\r\n        {[...allCharacterKeys].sort().map(charKey => <CharDropdownItem key={charKey} characterKey={charKey} setCharacterKey={setCharacterKey} />)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n    <DropdownButton as={ButtonGroup} disabled={!characterSheet} title={\r\n      <h6 className=\"d-inline\">Stats Template: {Character.getlevelTemplateName(levelKey)} </h6>\r\n    }>\r\n      <Dropdown.ItemText>\r\n        <span>Select Base Stat Template</span>\r\n      </Dropdown.ItemText>\r\n      {Character.getlevelKeys().map(lvlKey =>\r\n        <Dropdown.Item key={lvlKey} onClick={() => characterDispatch({ levelKey: lvlKey })}>\r\n          <h6 >{Character.getlevelTemplateName(lvlKey)} </h6>\r\n        </Dropdown.Item>)}\r\n    </DropdownButton>\r\n  </ButtonGroup> : <span>{HeaderIconDisplay} {characterSheet && weaponSheet && Character.getLevelString(character, characterSheet, weaponSheet)}</span>}</>\r\n}\r\nfunction CharDropdownItem({ characterKey, setCharacterKey }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => setCharacterKey(characterKey)}>\r\n    <span >\r\n      <Image src={characterSheet.thumbImg} className={`thumb-small p-0 m-n1 grad-${characterSheet.star}star`} thumbnail />\r\n      <h6 className=\"d-inline ml-2\">{characterSheet.name} </h6>\r\n    </span>\r\n  </Dropdown.Item>\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip id=\"wip\">Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nexport var propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nvar propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n};\nvar defaultProps = {\n  label: 'Close'\n};\nvar CloseButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var label = _ref.label,\n      onClick = _ref.onClick,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"label\", \"onClick\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    ref: ref,\n    type: \"button\",\n    className: classNames('close', className),\n    onClick: onClick\n  }, props), /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label));\n});\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport ConditionalDisplay from \"../../Character/CharacterDisplay/Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"../../Character/CharacterDisplay/Components/FieldDisplay\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, editable, characterDispatch }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey))\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectTexts(setNumKey, stats)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const conditionals = sheet.setEffectConditionals(setNumKey, stats)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {Boolean(conditionals) && Object.entries(conditionals!).map(([ckey, conditional]) => <ConditionalDisplay key={ckey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n  </>\r\n}\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  editable: boolean,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n  characterDispatch: (arg0: any) => void,\r\n}\r\n","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter\r\n  statsDisplayKeys: any,\r\n  editable: boolean,\r\n  cardbg?: string\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }: StatDisplayComponentProps) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, sectionValues]: any) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text={\"lightfont\" as any} className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Formula from \"../../Formula\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport { IFieldDisplay } from \"../../Types/IFieldDisplay\";\r\nimport { usePromise } from \"../../Util/ReactUtil\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No External Infusion</span>,\r\n  \"pyro\": <span >Pyro Infusion</span>,\r\n  \"cryo\": <span >Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className?: string\r\n}\r\nexport function InfusionAuraDropdown({ characterSheet, character: { infusionAura = \"\", characterKey }, characterDispatch, className }: InfusionAuraDropdownProps) {\r\n  if (!characterSheet.isMelee()) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\ntype ReactionToggleProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className: string\r\n}\r\nexport function ReactionToggle({ characterSheet, character: { characterKey, reactionMode = \"none\", infusionAura }, characterDispatch, className }: ReactionToggleProps) {\r\n  if (reactionMode === null) reactionMode = \"none\"\r\n  const charEleKey = characterSheet.elementKey\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ characterSheet, build }: { characterSheet: CharacterSheet, build: ICalculatedStats }) {\r\n  const displayStatKeys = useMemo(() => characterSheet.getDisplayStatKeys(build), [build, characterSheet])\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n      return <Card bg=\"darkcontent\" text={\"lightfont\" as any} key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              if (Array.isArray(field))\r\n                return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} fieldIndex={fieldIndex} />\r\n              else if (typeof field === \"string\") {//simple statKey field\r\n                const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              return null\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\nfunction FormulaCalculationField({ fieldKeys, build, fieldIndex }: { fieldKeys: string[], build: ICalculatedStats, fieldIndex: number, }) {\r\n  const formula = usePromise(Formula.get(fieldKeys))\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.()\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n      <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n      <Card.Body className=\"p-2\">\r\n        <div className=\"mb-n2\">\r\n          <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n          {subFormulaKeys.map(subKey =>\r\n            <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\ntype DamageOptionsAndCalculationProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  className: string\r\n}\r\nexport default function DamageOptionsAndCalculation({ characterSheet, weaponSheet, character, character: { hitMode }, characterDispatch, newBuild, equippedBuild, className }: DamageOptionsAndCalculationProps) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle callback={undefined} {...{ as: Button }} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={undefined}\r\n                      disabled={undefined}\r\n                      percent={undefined}\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value, characterSheet, weaponSheet })}\r\n                    />\r\n                  </Col>\r\n                  {[\"physical\", ...allElements].map(eleKey => {\r\n                    let statKey = `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity, characterSheet, weaponSheet })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay characterSheet={characterSheet} build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","export default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nexport default function TestDisplay() {\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterKey=\"noelle\" tabName=\"talent\" />\r\n  </Container>\r\n}\r\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}