{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","Components/EquipmentDropdown.tsx","Artifact/ArtifactCard.tsx","Artifact/PercentBadge.tsx","Weapon/WeaponCard.tsx","Weapon/WeaponSelection.tsx","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx","Weapon/WeaponStatsCard.tsx","Weapon/WeaponDisplayCard.tsx","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","EquipmentDropdown","location","onEquip","weaponTypeKey","disableUnequip","disabled","t","useTranslation","characterSheet","usePromise","CharacterSheet","get","locationName","name","nameWIthIcon","icon","faBriefcase","Toggle","className","Menu","Item","onClick","Divider","onSelect","allSubstatFilter","Set","allSubstats","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","effFilter","database","useContext","DatabaseContext","useState","undefined","databaseArtifact","updateDatabaseArtifact","useEffect","followArt","sheet","ArtifactSheet","_getArt","setKey","equipOnChar","charKey","setArtLocation","editable","localDatabase","art","id","lock","slotKey","rarity","level","mainStatKey","substats","exclude","mainStatLevel","Math","max","min","levelVariant","floor","mainStatVal","valueStringWithUnit","Artifact","mainStatValue","Stat","getStatUnit","getArtifactEfficiency","currentEfficiency","maxEfficiency","artifactValid","slotName","getSlotName","slotDesc","getSlotDesc","slotDescEle","placement","overlay","faInfoCircle","setEffects","setDesc","keys","map","setNumKey","variant","setNum","setEffectDesc","setDescEle","border","bg","text","Header","xs","md","src","slotIcons","thumbnail","size","updateArt","faLock","faLockOpen","stars","Body","Title","getStatName","stat","i","numRolls","rolls","length","efficiency","effOpacity","statName","key","style","opacity","has","valid","process","Footer","faEdit","faBan","faChartLine","faTrashAlt","PercentBadge","toFixed","badgeColor","WeaponCard","weaponId","cardClassName","footer","databaseWeapon","updateDatabaseWeapon","followWeapon","weapon","weaponSheet","WeaponSheet","ascension","refinement","weaponType","weaponMainVal","getMainStatValue","fixedUnit","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","weaponLevelName","getLevelString","statMap","passiveName","push","Assets","weaponTypes","img","colored","statKey","statVal","unit","StatIcon","setWeaponLocation","filterReducer","oldFilter","newFilter","WeaponSelectionModal","show","onHide","filter","weaponSheets","getAll","useReducer","weaponFilter","weaponFilterDispatch","weaponIdList","allWeaponKeys","wKey","sort","a","b","contentClassName","allWeaponTypeKeys","faTimes","weaponKey","lg","WeaponSelectionButton","setshow","as","ButtonGroup","artLayoutSize","CharacterArtifactPane","sheets","character","characterKey","characterDispatch","buildContext","newBuild","equippedBuild","compareBuild","setCompareBuild","history","useHistory","stats","statKeys","useMemo","Character","getDisplayStatKeys","edit","useCallback","artid","pathname","artToEditId","artifactSheets","useForceUpdate","followAnyArt","equipArts","window","confirm","equippedArtifacts","equipArtifacts","unequipArts","objectFromKeyMap","allSlotKeys","Card","StatDisplayComponent","statsDisplayKeys","Row","Col","Button","Alert","entries","setToSlots","setNumKeyArr","SetEffectDisplay","Boolean","CharacterOverviewPane","constellation","build","tlvl","elementKey","characterEle","Img","cardImg","Image","star","tKey","getTalentOfKey","roundedCircle","Badge","position","bottom","right","constellationName","Array","WeaponDisplayCard","charData","equippedWeapon","MainStatsCards","EDIT","EXIT","editing","SetEditing","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","allElements","forEach","ele","miscStatkeys","specializedStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","specializedStatUnit","displayNewBuildProps","faSave","StatInput","prependEle","getStatNameWithPercent","placeholder","getStatValueWithOverride","percent","onValueChange","type","defaultValue","getBaseStatValue","StatDisplay","getStatNameRaw","xl","CharacterTalentPane","ReactionDisplay","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","sKey","electro","cryo","electrocharged_hit","hydro","overloaded_hit","pyro","pyro_swirl_hit","swirlEleToDisplay","setele","DropdownButton","title","element","Dropdown","shattered_hit","information","OverlayTrigger","Tooltip","faQuestionCircle","cursor","crystalize_hit","crystalizeEleToDisplay","charEleKey","eleInterArr","ElementToReactionKeys","includes","Ele","anemo","geo","talentLimits","talent","header","levelBoost","talentLvlKey","newTalentLevelKey","talentStats","getTalentStats","talentStatsFields","statsToFields","statsEle","ListGroup","field","FieldDisplay","index","talentSheet","sections","Subtitle","DocumentDisplay","CharacterDisplayCard","setCharacterKey","propNewBuild","onClose","tabName","databaseToken","onDatabaseUpdate","characterSheets","_getChar","initialCharacter","_getWeapon","action","baseStatOverrides","baseStatVal","updateChar","followChar","deepClone","calculateBuild","DamageOptionsAndCalculationEle","DamageOptionsAndCalculation","CharSelectDropdown","Provider","Tab","Container","defaultActiveKey","mountOnEnter","unmountOnExit","Nav","fill","Link","eventKey","Content","Pane","HeaderIconDisplay","thumbImg","setLevel","clamp","ascensionMaxLevel","findIndex","ascenML","setAscension","lowerAscension","InputGroup","Prepend","ElementalData","talents","eleKey","Text","Append","CustomFormControl","onChange","ambiguousLevel","milestoneLevels","lv","lvlstr","DropdownItem","WeaponStatsCard","statsVals","fields","propWeaponId","buildContextObj","weaponDispatch","newWeapon","updateWeapon","refineIndex","ws","WeaponSelection","k","ItemText","SwapBtn","onChangeId","substatKey","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","document","description","passiveDescription","atk","cKey","setShow","close","clickHandler","weapons","dbWeapon","faExchangeAlt","Modal","TabContainer","props","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","children","tabContext","getControlledId","getControllerId","React","createElement","TabContext","SelectableContext","_excluded","TabContent","forwardRef","_ref","ref","bsPrefix","_ref$as","Component","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","_excluded2","TabPane","_useTabContext","context","rest","shouldTransition","makeEventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error"],"mappings":"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","file":"static/js/3.929c193c.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport { CharacterKey, WeaponTypeKey } from \"../Types/consts\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\nimport { CharacterSelectionDropdownList } from \"../Character/CharacterSelection\";\r\n\r\nexport default function EquipmentDropdown({ location, onEquip, weaponTypeKey, disableUnequip = false, disabled }: { location: CharacterKey | \"\", onEquip: (charKey: CharacterKey) => void, weaponTypeKey?: WeaponTypeKey, disableUnequip?: boolean, disabled?: boolean }) {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const characterSheet = usePromise(CharacterSheet.get(location), [location])\r\n  const locationName = characterSheet?.name ? characterSheet.nameWIthIcon : <span><FontAwesomeIcon icon={faBriefcase} /> {t`filterLocation.inventory`}</span>\r\n\r\n  return !disabled ? <Dropdown>\r\n    <Dropdown.Toggle className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {!disableUnequip && <><Dropdown.Item onClick={() => { /* TODO */ }}><FontAwesomeIcon icon={faBriefcase} /> Inventory</Dropdown.Item>\r\n        <Dropdown.Divider /></>}\r\n      <CharacterSelectionDropdownList onSelect={onEquip} weaponTypeKey={weaponTypeKey} />\r\n    </Dropdown.Menu>\r\n  </Dropdown> : locationName\r\n}","import { faBan, faBriefcase, faChartLine, faEdit, faInfoCircle, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Character/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { DatabaseContext, database as localDatabase } from '../Database/Database';\r\nimport Stat from '../Stat';\r\nimport { allSubstats, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { usePromise } from '../Util/ReactUtil';\r\nimport { valueStringWithUnit } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport SlotNameWithIcon from './Component/SlotNameWIthIcon';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: ICachedArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number, effFilter?: Set<SubstatKey> }\r\nconst allSubstatFilter = new Set(allSubstats)\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter }: Data): JSX.Element | null {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseArtifact, updateDatabaseArtifact] = useState(undefined as ICachedArtifact | undefined)\r\n  useEffect(() =>\r\n    artifactId ? database.followArt(artifactId, updateDatabaseArtifact) : undefined,\r\n    [artifactId, updateDatabaseArtifact, database])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? database._getArt(artifactId) : undefined))?.setKey), [artifactObj, artifactId])\r\n  const equipOnChar = (charKey: CharacterKey | \"\") => database.setArtLocation(artifactId!, charKey)\r\n\r\n  const editable = !artifactObj && database === localDatabase // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? databaseArtifact\r\n  const characterSheet = usePromise(CharacterSheet.get(art?.location ?? \"\"), [art?.location])\r\n  if (!art) return null\r\n\r\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const levelVariant = (Math.floor(Math.max(level - 1, 0) / 4) + 1) + \"roll\"\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{valueStringWithUnit(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, Stat.getStatUnit(mainStatKey))}</span>\r\n  const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\r\n  const artifactValid = maxEfficiency !== 0\r\n  const locationName = characterSheet?.name ? characterSheet.nameWIthIcon : <span><FontAwesomeIcon icon={faBriefcase} /> {t`filterLocation.inventory`}</span>\r\n  const slotName = sheet?.getSlotName(slotKey) || \"Unknown Piece Name\"\r\n  const slotDesc = sheet?.getSlotDesc(slotKey)\r\n  const slotDescEle = slotDesc ? <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip id=\"slotdesc-tooltip\">{slotDesc}</Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faInfoCircle} />\r\n  </OverlayTrigger> : null\r\n  const setEffects = sheet?.setEffects\r\n  const setDesc = sheet && setEffects && <Tooltip id=\"setdesc-tooltop\">\r\n    {Object.keys(setEffects).map(setNumKey => <span key={setNumKey} className=\"text-left\">\r\n      <h6 className=\"mb-0\"><Badge variant=\"success\">{t(`setEffectNum`, { setNum: setNumKey })}</Badge></h6>\r\n      <p>{sheet.setEffectDesc(setNumKey as any)}</p>\r\n    </span>)}\r\n  </Tooltip>\r\n  const setDescEle = setDesc ? <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={setDesc}\r\n  >\r\n    <FontAwesomeIcon icon={faInfoCircle} />\r\n  </OverlayTrigger> : null\r\n\r\n  return (<Card className=\"h-100\" border={`${rarity}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${rarity}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-2\">\r\n          <h6><strong>{slotName} {slotDescEle}</strong></h6>\r\n          <div><SlotNameWithIcon slotKey={slotKey} /> <span className=\"float-right mr-4\"> <Button size=\"sm\" disabled={!editable} onClick={() => database.updateArt({ lock: !lock }, id)}><FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" /></Button></span></div>\r\n          <div><small><Stars stars={rarity} /></small></div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <Badge variant={levelVariant} ><strong className=\"text-dark\">{` +${level}`}</strong></Badge> {sheet?.name ?? \"Artifact Set\"} {setDescEle}\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: ICachedSubstat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueStringWithUnit(stat.value, Stat.getStatUnit(stat.key))}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{stat.key && effFilter.has(stat.key) ? valueStringWithUnit(efficiency, \"eff\") : \"-\"}</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <Row>\r\n          <Col ><small>{t`editor.curSubEff`}</small></Col>\r\n          <Col xs=\"auto\"><PercentBadge value={currentEfficiency} valid={artifactValid} /></Col>\r\n        </Row>\r\n        {currentEfficiency !== maxEfficiency && <Row>\r\n          <Col ><small>{t`editor.maxSubEff`}</small></Col>\r\n          <Col xs=\"auto\"><PercentBadge value={maxEfficiency} valid={artifactValid} /></Col>\r\n        </Row>}\r\n      </div>\r\n      {process.env.NODE_ENV === \"development\" && <span className=\"text-warning\">{id || `\"\"`} </span>}\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}><FontAwesomeIcon icon={faBriefcase} /> Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        {editable && <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\" onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"exclude-artifact-tip\">{t`excludeArtifactTip`}</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\" onClick={() => database.updateArt({ exclude: !exclude }, id)} className=\"rounded-0\" variant={exclude ? \"danger\" : \"success\"}>\r\n                  <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger>\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card >)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { Button, Card, Col, Image, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport EquipmentDropdown from \"../Components/EquipmentDropdown\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onEdit?: (weaponId: string) => void, onClick?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, cardClassName: string, bg?: string, footer?: boolean }\r\nexport default function WeaponCard({ weaponId, onEdit, onDelete, onClick, cardClassName = \"\", bg = \"\", footer = false }: WeaponCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseWeapon, updateDatabaseWeapon] = useState(undefined as ICachedWeapon | undefined)\r\n  useEffect(() =>\r\n    weaponId ? database.followWeapon(weaponId, updateDatabaseWeapon) : undefined,\r\n    [weaponId, updateDatabaseWeapon, database])\r\n\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refinement, id } = weapon\r\n  const equipOnChar = (charKey: CharacterKey) => database.setWeaponLocation(weaponId, charKey)\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponLevelName = WeaponSheet.getLevelString(weapon)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header>\r\n      <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /> <h5 className=\"d-inline\">{weaponSheet.name}</h5>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onClick?.(weaponId)} className={onClick ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={weaponSheet.img} className={`thumb-big grad-${weaponSheet.rarity}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h5 className=\"mb-0\">Level {weaponLevelName} </h5>\r\n          <h5 >Refinement {refinement}</h5>\r\n          <h6 className=\"mb-0\"><Stars stars={weaponSheet.rarity} colored /></h6>\r\n          {/* <h3 className=\"mb-0\"></h3> */}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statMap.map(([statKey, statVal]) => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIcon[statKey]} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n      {process.env.NODE_ENV === \"development\" && <span className=\"text-warning\">{id || `\"\"`} </span>}\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Row>\r\n        <Col >\r\n          <EquipmentDropdown location={weapon?.location} onEquip={equipOnChar} weaponTypeKey={weaponTypeKey} disableUnequip={!!weapon.location} />\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(weaponId)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              disabled={!!weapon.location}\r\n              onClick={() => onDelete(weaponId)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useReducer, useState } from \"react\"\r\nimport { Button, ButtonGroup, Card, Col, Image, Modal, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey } from \"../Types/consts\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean\r\n}\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\nexport function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n  return <Modal show={show} size=\"xl\" contentClassName=\"bg-transparent\" onHide={onHide}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {allWeaponTypeKeys.map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"secondary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}>\r\n                  <h3 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h3></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <Button onClick={onHide} variant=\"danger\"><FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          {weaponIdList.map(weaponKey => {\r\n            const weaponSheet = weaponSheets[weaponKey]\r\n            return <Col key={weaponKey} lg={3} md={4} className=\"mb-2\">\r\n              <Button className=\"w-100 h-100 align-top\" variant=\"darkcontent\" onClick={() => { onHide(); onSelect(weaponKey) }}>\r\n                <Row className=\"h-100\">\r\n                  <Col xs=\"auto\" className=\"pr-0\">\r\n                    <Image src={weaponSheet.img} className={`thumb-big grad-${weaponSheet.rarity}star p-0`} thumbnail />\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponSheet.weaponType]} className=\"inline-icon\" /> {weaponSheet.name}</h5>\r\n                    <h6 className=\"mb-0\"><Stars stars={weaponSheet.rarity} colored /></h6>\r\n                  </Col>\r\n                </Row>\r\n              </Button>\r\n            </Col>\r\n          })}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nexport function WeaponSelectionButton({ weaponSheet, onSelect, filter }: { weaponSheet?: WeaponSheet, onSelect: (wKey: WeaponKey) => void, filter?: (sheet: WeaponSheet) => boolean }) {\r\n  const [show, setshow] = useState(false)\r\n  return <>\r\n    <Button as={ButtonGroup} onClick={() => setshow(true)} className=\"text-nowrap\">{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n    <WeaponSelectionModal show={show} onHide={() => setshow(false)} onSelect={onSelect} filter={filter} />\r\n  </>\r\n}","import { useCallback, useContext, useEffect, useMemo } from 'react';\r\nimport { Alert, Button, ButtonGroup, Card, Col, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { buildContext } from '../../Build/Build';\r\nimport { database as localDatabase, DatabaseContext } from '../../Database/Database';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport { allSlotKeys, ArtifactSetKey } from '../../Types/consts';\r\nimport { useForceUpdate, usePromise } from '../../Util/ReactUtil';\r\nimport { objectFromKeyMap } from '../../Util/Util';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport { characterReducerAction } from '../CharacterDisplayCard';\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\nconst artLayoutSize = { xs: 12, md: 6, lg: 4 }\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n}\r\nfunction CharacterArtifactPane({ sheets, character, character: { key: characterKey }, characterDispatch }: CharacterArtifactPaneProps) {\r\n  const { newBuild, equippedBuild, compareBuild, setCompareBuild } = useContext(buildContext)\r\n  const database = useContext(DatabaseContext)\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = (newBuild ? newBuild : equippedBuild)\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => stats && Character.getDisplayStatKeys(stats, sheets), [stats, sheets])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  // TODO: We can also listen only to equipped artifacts\r\n  const [, updateArt] = useForceUpdate()\r\n  useEffect(() => database.followAnyArt(updateArt))\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && database.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n  }, [characterKey, newBuild, database])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    database.equipArtifacts(characterKey, objectFromKeyMap(allSlotKeys, () => \"\"))\r\n  }, [characterKey, database])\r\n  if (!stats) return null\r\n  return <>\r\n    <Card className=\"h-100 mb-2\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Body>\r\n        <StatDisplayComponent {...{ sheets, character, equippedBuild: (newBuild && !compareBuild) ? undefined : equippedBuild, newBuild, statsDisplayKeys: statKeys }} />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Row>\r\n          <Col>\r\n            {newBuild ? <Button onClick={equipArts} className=\"mr-2\">Equip artifacts</Button> : (database === localDatabase && <Button onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n            {/* Compare against new build toggle */}\r\n            {!!newBuild && <ButtonGroup>\r\n              <Button variant={compareBuild ? \"primary\" : \"success\"} disabled={!compareBuild} onClick={() => setCompareBuild?.(false)}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareBuild ? \"primary\" : \"success\"} disabled={compareBuild} onClick={() => setCompareBuild?.(true)}>\r\n                <small>Compare against equipped artifacts</small>\r\n              </Button>\r\n            </ButtonGroup>}\r\n          </Col>\r\n          <Col xs=\"auto\">{!!mainStatAssumptionLevel && <Alert className=\"mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert>}</Col>\r\n        </Row>\r\n      </Card.Footer>\r\n    </Card>\r\n    <Row className=\"mb-n2\">\r\n      <Col {...artLayoutSize} className=\"d-flex flex-column\">\r\n        {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n          <Card key={setKey} className=\"mb-2 flex-grow-1\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n            <Card.Header>{artifactSheets?.[setKey].name ?? \"\"}</Card.Header>\r\n            <Card.Body className=\"p-2 mb-n2\">\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterDispatch }} />)}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      {allSlotKeys.map(slotKey =>\r\n        Boolean(stats?.equippedArtifacts?.[slotKey]) && <Col {...artLayoutSize} key={stats?.equippedArtifacts?.[slotKey]} className=\"mb-2\">\r\n          <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Badge, Button, Card, Col, Image, Row } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport { Stars } from \"../../Components/StarDisplay\";\r\nimport StatDisplay from \"../../Components/StatDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport Stat from \"../../Stat\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport WeaponDisplayCard from \"../../Weapon/WeaponDisplayCard\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport type { characterReducerAction } from \"../CharacterDisplayCard\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  weaponSheet: WeaponSheet\r\n  character: ICachedCharacter\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, weaponSheet, character, character: { constellation }, characterDispatch }: CharacterOverviewPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const { tlvl } = build\r\n  const elementKey = build.characterEle\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Card.Img src={characterSheet.cardImg} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <h3>{characterSheet.name} {StatIcon[elementKey]} <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n          <h6><Stars stars={characterSheet.star} colored /></h6>\r\n          <h5>Level: {Character.getLevelString(character)}</h5>\r\n          <Row className=\"px-2 mb-2\">\r\n            {[\"auto\", \"skill\", \"burst\"].map(tKey =>\r\n              <Col xs={4} className=\"p-1\" key={tKey}>\r\n                <Image src={characterSheet.getTalentOfKey(tKey, build.characterEle)?.img} className=\"w-100 h-auto\" roundedCircle />\r\n                <h5 className=\"mb-0\"><Badge variant=\"info\" style={{ position: \"absolute\", bottom: \"0\", right: \"0\" }}><strong>{tlvl[tKey] + 1}</strong></Badge></h5>\r\n              </Col>)}\r\n          </Row>\r\n          <div className=\"text-center\"><h6>{characterSheet.constellationName}</h6></div>\r\n          <Row className=\"px-2\">\r\n            {[...Array(6).keys()].map(i =>\r\n              <Col xs={4} className=\"p-1\" key={i}>\r\n                <Image src={characterSheet.getTalentOfKey(`constellation${i + 1}`, build.characterEle)?.img} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                  roundedCircle onClick={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponDisplayCard {...{ charData: { character, characterSheet, equippedBuild, newBuild, characterDispatch }, weaponId: character.equippedWeapon }} />\r\n      <MainStatsCards {...{ characterSheet, weaponSheet, character, characterDispatch, equippedBuild, newBuild }} />\r\n    </Col>\r\n  </Row >\r\n}\r\nconst EDIT = \"Edit Stats\"\r\nconst EXIT = \"EXIT\"\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction MainStatsCards({ characterSheet, weaponSheet, character, characterDispatch, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp\", \"hp_\", \"def\", \"def_\", \"atk\", \"atk_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys: any[] = [];\r\n\r\n  [\"physical\", ...allElements].forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"plunging_dmg_\", \"plunging_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"electrocharged_dmg_\",\r\n    \"vaporize_dmg_\", \"swirl_dmg_\",\r\n    \"enemyDEFRed_\", \"weakspotDMG_\",\r\n    \"moveSPD_\", \"atkSPD_\",\r\n  ]\r\n\r\n  const specializedStatKey = characterSheet.getSpecializedStat(character.ascension)\r\n  const specializedStatVal = characterSheet.getSpecializedStatVal(character.ascension)\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col><span>Main Base Stats</span></Col>\r\n          <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? EXIT : EDIT}</span>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ? <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {editStatKeys.map(statKey =>\r\n            <Col lg={6} xs={12} key={statKey}>\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                className=\"mb-2\"\r\n                name={<span>{StatIcon[statKey]} {Stat.getStatNameWithPercent(statKey)}</span>}\r\n                placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n              />\r\n            </Col>)}\r\n        </Row>\r\n      </Card.Body> : <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n          <Col lg={6} xs={12}>\r\n            <span><b>Specialized:</b> <span>{specializedStatKey && StatIcon[specializedStatKey]} {Stat.getStatName(specializedStatKey)}</span></span>\r\n            <span className={`float-right`}>{`${specializedStatVal.toFixed(Stat.fixedUnit(specializedStatKey))}${specializedStatUnit}`}</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>}\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? EXIT : EDIT}</span>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ? <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {otherStatKeys.map(statKey =>\r\n            <Col lg={6} xs={12} key={statKey}>\r\n              <StatInput\r\n                className=\"mb-2\"\r\n                name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n                placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n              />\r\n            </Col>)}\r\n        </Row>\r\n      </Card.Body> : <Card.Body>\r\n        <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n      </Card.Body>}\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? EXIT : EDIT}</span>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ? <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {miscStatkeys.map(statKey =>\r\n            <Col xl={6} xs={12} key={statKey}>\r\n              <StatInput\r\n                className=\"mb-2\"\r\n                name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n                placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n              />\r\n            </Col>)}\r\n        </Row>\r\n      </Card.Body> : <Card.Body>\r\n        <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n      </Card.Body>}\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useState } from 'react';\r\nimport { Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\";\r\nimport FieldDisplay from \"../../Components/FieldDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport type { characterReducerAction } from \"../CharacterDisplayCard\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n}\r\nexport default function CharacterTalentPane({ characterSheet, character, character: { ascension, constellation }, characterDispatch }: CharacterTalentPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <>\r\n    <Row><Col><ReactionDisplay characterSheet={characterSheet} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {!!characterSheet.getTalentOfKey(\"sprint\", build?.characterEle) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalentOfKey(tKey, build?.characterEle)) return null\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet }: { characterSheet: CharacterSheet }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.cryo} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.hydro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.pyro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} {StatIcon.pyro}+{StatIcon.anemo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} {StatIcon.electro}+{StatIcon.anemo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} {StatIcon.cryo}+{StatIcon.anemo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} {StatIcon.hydro}+{StatIcon.anemo}</span>\r\n} as const\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip id=\"shatter-tooltip\">Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} {StatIcon.hydro}+{StatIcon.cryo}+ <small className=\"text-physical\">Heavy Attack{information} </small> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\nconst crystalizeEleToDisplay = {\r\n  \"default\": <span className=\"text-crystalize\">{Stat.getStatName(\"crystalize_hit\")} {StatIcon.electro}/{StatIcon.hydro}/{StatIcon.pyro}/{StatIcon.cryo}+{StatIcon.geo}</span>,\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_crystalize_hit\")} {StatIcon.pyro}+{StatIcon.geo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_crystalize_hit\")} {StatIcon.electro}+{StatIcon.geo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_crystalize_hit\")} {StatIcon.cryo}+{StatIcon.geo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_crystalize_hit\")} {StatIcon.hydro}+{StatIcon.geo}</span>\r\n} as const\r\nfunction CrystalizeCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(crystalizeEleToDisplay)[0])\r\n  const sKey = ele === \"default\" ? \"crystalize_hit\" : `${ele}_crystalize_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={crystalizeEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(crystalizeEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { talent, ascension }, characterDispatch, talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    const talentLvlKey = talent[talentKey] + levelBoost\r\n    const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n      talent[tKey] = newTalentLevelKey\r\n      characterDispatch({ talent })\r\n    }\r\n    header = <Card.Header>\r\n      <DropdownButton title={`Talent Lv. ${talentLvlKey}`}>\r\n        {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n          <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i + 1)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n      </DropdownButton>\r\n    </Card.Header>\r\n\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const talentStatsFields = talentStats && statsToFields(talentStats, build)\r\n  const statsEle = talentStatsFields && !!talentStatsFields.length && <Row><Col>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {talentStatsFields.map((field, i) =>\r\n          <FieldDisplay key={i} index={i} field={field} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, build.characterEle)\r\n  const sections = talentSheet?.sections\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"h-100\">\r\n    {header}\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row className={`d-flex flex-row mb-2 ${onClickTitle ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={talentSheet?.img} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{talentSheet?.name}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {/* Display document sections */}\r\n      {sections ? <DocumentDisplay {...{ sections, characterDispatch, equippedBuild, newBuild }} /> : null}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { Alert, ButtonGroup, Dropdown, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownItem from 'react-bootstrap/esm/DropdownItem';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport { buildContext } from '../Build/Build';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from '../Data/CharacterData';\r\nimport ElementalData from '../Data/ElementalData';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport { ICachedCharacter } from '../Types/character';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { clamp, deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport DamageOptionsAndCalculation from './CharacterDisplay/DamageOptionsAndCalculation';\r\nimport { CharSelectionButton } from './CharacterSelection';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { initialCharacter } from './CharacterUtil';\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerStatOverride = {\r\n  type: \"statOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerStatOverride | Partial<ICachedCharacter>\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey, setCharacterKey, footer, newBuild: propNewBuild, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [compareBuild, setCompareBuild] = useState(false)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  // TODO: We probably don't need to fetch all sheets,\r\n  // though this wouldn't affect the performance currently.\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  const character = useMemo(() =>\r\n    databaseToken && (database._getChar(characterKey) ?? initialCharacter(characterKey)),\r\n    [characterKey, databaseToken, database])\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(character.equippedWeapon),\r\n    [character.equippedWeapon, databaseToken, database])\r\n\r\n  const characterSheet = characterSheets?.[characterKey]\r\n  const weaponSheet = weapon ? weaponSheets?.[weapon.key] : undefined\r\n  const sheets = characterSheet && weaponSheet && artifactSheets && { characterSheet, weaponSheet, artifactSheets }\r\n\r\n  const characterDispatch = useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"statOverride\": {\r\n        const character = database._getChar(characterKey)!\r\n        if (!characterSheet || !weaponSheet) break\r\n        const { statKey, value } = action\r\n        const baseStatOverrides = character.baseStatOverrides\r\n        const baseStatVal = Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)\r\n        if (baseStatVal === value || baseStatVal === undefined) delete baseStatOverrides[statKey]\r\n        else baseStatOverrides[statKey] = value\r\n        database.updateChar({ ...character, baseStatOverrides }) // TODO: Validate this\r\n        break\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action }) // TODO: Validate this\r\n  }, [characterKey, characterSheet, weaponSheet, database])\r\n\r\n  useEffect(() => {\r\n    return database.followChar(characterKey, onDatabaseUpdate)\r\n  }, [characterKey, onDatabaseUpdate, database])\r\n\r\n  useEffect(() => database.followWeapon(character.equippedWeapon, onDatabaseUpdate),\r\n    [character.equippedWeapon, onDatabaseUpdate, database])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return undefined\r\n    return deepClone(propNewBuild)\r\n  }, [propNewBuild])\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel), [character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel, database])\r\n  // main CharacterDisplayCard\r\n  const DamageOptionsAndCalculationEle = sheets && <DamageOptionsAndCalculation sheets={sheets} character={character} characterDispatch={characterDispatch} className=\"mb-2\" />\r\n  return (<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs={\"auto\"} className=\"mr-auto\">\r\n          {/* character selecter/display */}\r\n          <CharSelectDropdown characterSheet={characterSheet} character={character} weaponSheet={weaponSheet} characterDispatch={characterDispatch} setCharacterKey={setCharacterKey} />\r\n        </Col>\r\n        {Boolean(mainStatAssumptionLevel) && <Col xs=\"auto\"><Alert className=\"mb-0 py-1 h-100\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert></Col>}\r\n        {Boolean(onClose) && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    {characterKey && sheets && characterSheet && weaponSheet && <Card.Body>\r\n      <buildContext.Provider value={{ newBuild, equippedBuild, compareBuild, setCompareBuild }}>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter unmountOnExit>\r\n          <Nav variant=\"pills\" className=\"mb-2 mx-0\" fill>\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\"><h5 className=\"mb-0\">Character</h5></Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\"><h5 className=\"mb-0\">New Artifacts</h5></Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\"><h5 className=\"mb-0\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</h5></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\"><h5 className=\"mb-0\">Talents</h5></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterOverviewPane characterSheet={characterSheet} weaponSheet={weaponSheet} character={character} characterDispatch={characterDispatch} />\r\n            </Tab.Pane>\r\n            <buildContext.Provider value={{ newBuild: undefined, equippedBuild, compareBuild, setCompareBuild }}>\r\n              <Tab.Pane eventKey=\"artifacts\" >\r\n                {DamageOptionsAndCalculationEle}\r\n                <CharacterArtifactPane sheets={sheets} character={character} characterDispatch={characterDispatch} />\r\n              </Tab.Pane>\r\n            </buildContext.Provider>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane sheets={sheets} character={character} characterDispatch={characterDispatch} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterTalentPane characterSheet={characterSheet} character={character} characterDispatch={characterDispatch} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </buildContext.Provider>\r\n    </Card.Body>}\r\n    {footer && <Card.Footer>\r\n      {footer}\r\n    </Card.Footer>}\r\n  </Card>)\r\n}\r\n\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  weaponSheet?: WeaponSheet,\r\n  character: ICachedCharacter\r\n  disabled?: boolean\r\n  characterDispatch: (any: characterReducerAction) => void\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, weaponSheet, character, character: { elementKey = \"anemo\", level = 1, ascension = 0 }, disabled, characterDispatch, setCharacterKey }: CharSelectDropdownProps) {\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <Image src={characterSheet.thumbImg} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {characterSheet.name} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  const setLevel = useCallback((level) => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    characterDispatch({ level, ascension })\r\n  }, [characterDispatch])\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\r\n    else characterDispatch({ ascension: lowerAscension })\r\n  }, [characterDispatch, ascension, level])\r\n  return <>{!disabled ? <InputGroup >\r\n    <ButtonGroup as={InputGroup.Prepend}>\r\n      <CharSelectionButton characterSheet={characterSheet} onSelect={setCharacterKey} />\r\n      {characterSheet?.sheet && \"talents\" in characterSheet?.sheet && <Dropdown as={ButtonGroup}>\r\n        <Dropdown.Toggle as={Button} className={`text-${elementKey}`}>\r\n          <strong>{ElementalData[elementKey].name}</strong>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu >\r\n          {Object.keys(characterSheet.sheet.talents).map(eleKey =>\r\n            <Dropdown.Item key={eleKey} className={`text-${eleKey}`} onClick={() => characterDispatch({ elementKey: eleKey })}><strong>{ElementalData[eleKey].name}</strong></Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>}\r\n    </ButtonGroup>\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text><strong>Lvl. </strong></InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n\r\n    <InputGroup.Append>\r\n      <CustomFormControl placeholder={undefined} className=\"h-100\" onChange={setLevel} value={level} min={1} max={90} disabled={!characterSheet} />\r\n    </InputGroup.Append>\r\n    <ButtonGroup as={InputGroup.Append}>\r\n      <Button disabled={!ambiguousLevel(level) || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n      <Dropdown as={ButtonGroup} >\r\n        <Dropdown.Toggle as={Button} disabled={!characterSheet}>Select Level</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {milestoneLevels.map(([lv, as]) => {\r\n            const sameLevel = lv === ascensionMaxLevel[as]\r\n            const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n            return <DropdownItem key={`${lv}/${as}`} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</DropdownItem>\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </ButtonGroup>\r\n  </InputGroup> : <span>{HeaderIconDisplay} {characterSheet && weaponSheet && Character.getLevelString(character)}</span>}</>\r\n}","import React from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport FieldDisplay from \"../Components/FieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nexport default function WeaponStatsCard({ title, statsVals = {}, stats }: { title: Displayable, statsVals?: object, stats: ICalculatedStats }) {\r\n  if ((Object.keys(statsVals ?? {}) as any).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay key={i} index={i} field={field} className=\"px-3 py-2\" />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","import { faExchangeAlt, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport { Badge, Button, ButtonGroup, Card, Col, Dropdown, Image, InputGroup, Modal, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport EquipmentDropdown from \"../Components/EquipmentDropdown\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/CharacterData\"\r\nimport { DatabaseContext, database as localDatabase } from \"../Database/Database\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { useForceUpdate, usePromise } from \"../Util/ReactUtil\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport { WeaponSelectionButton } from \"./WeaponSelection\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\nimport WeaponStatsCard from \"./WeaponStatsCard\"\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  charData?: {\r\n    character: ICachedCharacter,\r\n    characterSheet: CharacterSheet,\r\n    equippedBuild?: ICalculatedStats\r\n    newBuild?: ICalculatedStats\r\n    characterDispatch: (any) => void\r\n  }\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  charData,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  const buildContextObj = useContext(buildContext)\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(propWeaponId!)!,\r\n    [propWeaponId, databaseToken, database])\r\n  const { key, level, refinement, ascension } = weapon\r\n  const { location = \"\", id } = weapon as Partial<ICachedWeapon>\r\n  const weaponSheet: WeaponSheet | undefined = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  useEffect(() =>\r\n    propWeaponId ? database.followWeapon(propWeaponId, onDatabaseUpdate) : undefined,\r\n    [propWeaponId, onDatabaseUpdate, database])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const build = { ...(charData ? (charData.newBuild ?? charData.equippedBuild) : { weapon: { refineIndex: refinement - 1, level, ascension } }) } as any\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"mb-n2\">\r\n            <Col className=\"mb-2\">\r\n              <InputGroup >\r\n                <ButtonGroup as={InputGroup.Prepend}>\r\n                  <WeaponSelectionButton weaponSheet={weaponSheet} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} />\r\n                  <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle as={Button}>Refinement {refinement}</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.ItemText>\r\n                        <span>Select Weapon Refinement</span>\r\n                      </Dropdown.ItemText>\r\n                      <Dropdown.Divider />\r\n                      {[...Array(5).keys()].map(key =>\r\n                        <Dropdown.Item key={key} onClick={() => weaponDispatch({ refinement: key + 1 })}>\r\n                          {`Refinement ${key + 1}`}\r\n                        </Dropdown.Item>)}\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </ButtonGroup>\r\n              </InputGroup>\r\n            </Col>\r\n            <Col className=\"mb-2\" xs=\"auto\">\r\n              <InputGroup >\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text><strong>Lvl. </strong></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <InputGroup.Append>\r\n                  <CustomFormControl placeholder={undefined} onChange={setLevel} value={level} min={1} max={90} />\r\n                </InputGroup.Append>\r\n                <ButtonGroup as={InputGroup.Append}>\r\n                  <Button disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n                  <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle as={Button}>Select Level</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                      {milestoneLevels.map(([lv, as]) => {\r\n                        const sameLevel = lv === ascensionMaxLevel[as]\r\n                        const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                        return <Dropdown.Item key={`${lv}/${as}`} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</Dropdown.Item>\r\n                      })}\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </ButtonGroup>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {!!onClose && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n        {!!charData && database === localDatabase && <Col xs=\"auto\">\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, charData.character.key)} />\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      {(() => {\r\n        if (!weaponSheet) return null\r\n        const substatKey = weaponSheet.getSubStatKey()\r\n        const weaponDisplayMainVal = weaponSheet.getMainStatValue(level, ascension)\r\n        const weaponDisplaySubVal = weaponSheet.getSubStatValue(level, ascension)\r\n        const weaponPassiveName = weaponSheet.passiveName\r\n        const weaponBonusStats = weaponSheet.stats(build)\r\n        const sections = weaponSheet.document\r\n\r\n        return <Row className=\"mb-n2\">\r\n          <Col xs={12} md={3} lg={4}>\r\n            <Image src={weaponSheet.img} className={`w-100 h-auto grad-${weaponSheet.rarity}star`} thumbnail />\r\n            <small>{weaponSheet.description}</small>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"mb-0\">{process.env.NODE_ENV === \"development\" && <span className=\"text-warning\">{id || `\"\"`} </span>}{weaponSheet.name} Lv. {WeaponSheet.getLevelString(weapon)} {weaponPassiveName && <Badge variant=\"info\">Refinement {refinement}</Badge>}</h5>\r\n            <div className=\"mb-2\"><Stars stars={weaponSheet.rarity} /></div>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <div className=\"mb-2\">{weaponPassiveName && weaponSheet.passiveDescription(build)}</div>\r\n            {build && <buildContext.Provider value={charData ? buildContextObj : { equippedBuild: build, newBuild: undefined, compareBuild: false, setCompareBuild: undefined }}>\r\n              <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: substatKey ? weaponDisplaySubVal : undefined }} stats={build} />\r\n              <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            </buildContext.Provider>}\r\n            {charData && sections ? (() => {\r\n              const { equippedBuild, newBuild, characterDispatch } = charData\r\n              return < DocumentDisplay  {...{ sections, equippedBuild, newBuild, characterDispatch }} />\r\n            })() : null}\r\n          </Col>\r\n        </Row>\r\n      })()}\r\n    </Card.Body>\r\n    {footer && id && <Card.Footer><Row>\r\n      <Col><EquipmentDropdown location={location} onEquip={cKey => database.setWeaponLocation(id, cKey)} weaponTypeKey={weaponSheet?.weaponType} disableUnequip={!!weapon.location} disabled={database === localDatabase} /></Col>\r\n      {!!onClose && <Col xs=\"auto\"><Button variant=\"danger\" onClick={onClose}>Close</Button></Col>}\r\n    </Row></Card.Footer>}\r\n  </Card>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button variant=\"info\" onClick={open} ><FontAwesomeIcon icon={faExchangeAlt} /> SWAP WEAPON</Button>\r\n    <Modal show={show} size=\"xl\" contentClassName=\"bg-transparent\" onHide={close}>\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>{weaponTypeKey ? <Image src={Assets.weaponTypes[weaponTypeKey]} className=\"inline-icon\" /> : null} <h5 className=\"mb-0 d-inline\">Swap Weapon</h5></Col>\r\n            <Col xs=\"auto\">\r\n              <Button onClick={close} variant=\"danger\"><FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            {weaponIdList.map(weaponId =>\r\n              <Col key={weaponId} lg={4} md={6} className=\"mb-2\">\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  // header={undefined}\r\n                  cardClassName=\"h-100\"\r\n                  // characterKey={charKey}\r\n                  onClick={clickHandler}\r\n                  footer\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Modal></>\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;"],"sourceRoot":""}