{"version":3,"sources":["Character/Character.js","Weapon/Weapon.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/CustomFormControl.js","Components/StarDisplay.js","StatDependency.js","Data/WeaponData.js","Data/CharacterData.js","Components/StatIcon.js","Components/ConditionalSelector.js","Components/CharacterSelection.js","Character/StatInput.js","Components/StatDisplay.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Util/ReactUtil.js","Artifact/ArtifactCard.jsx","Artifact/PercentBadge.jsx","Character/CharacterDisplay/StatDisplayComponent.js","Components/WIPComponent.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","Util/CodingUtil.js","Util/Schemas.js","Util/FlexUtil.js","FlexPage/FlexDisplay.js"],"names":["Character","this","Error","characterKey","talentKey","formula","formulaDB","getCDataObj","formulaKey","tk","Object","entries","find","character","CharacterDatabase","get","equippedArtifacts","values","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getCharacterDataImport","CharacterDataImport","getBaseStatValue","statKey","defVal","levelKey","getSpecializedStatKey","getSpeicalizedStatVal","Weapon","getWeaponMainStatValWithOverride","weapon","getLevel","includes","characterStatBase","characterObj","baseStat","getIndexFromlevelkey","charKey","CharacterData","getElementalName","elementalKey","ElementalData","name","getAllCharacterKeys","keys","getName","getStar","star","getElementalKey","elementKey","getElementalKeys","getElementalKeysWithoutPhysical","filter","e","getWeaponTypeKey","weaponTypeKey","getConstellationName","constellationName","getTitles","titles","getlevelKeys","LevelsData","getlevelNames","indexOf","level","getAscension","asend","getSpecializedStat","specializeStat","key","value","getThumb","thumbImg","getCard","cardImg","getTalentImg","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","constellation","talents","i","talentBoost","boostEntry","getTalentDocument","document","getTalentDocumentSections","stats","map","section","getTalentField","sectionIndex","fieldIndex","field","fields","getTalentFieldValue","getTalentStats","talentStats","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","sections","cond","tempCond","conditional","getTalentConditionalStats","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","fromEntries","val","getTalentConditionalFields","isAutoElemental","isAutoInfusable","auto","infusable","hasTalentPage","Boolean","getDisplayStatKeys","basicKeys","eleKey","transReactions","deepClone","ElementToReactionKeys","charFormulas","genericAvgHit","reactions","startsWith","replace","hasOverride","baseStatOverrides","getStatValueWithOverride","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","Artifact","getSlotKeys","slotKey","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifact","update","calculateBuild","artifacts","art","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactConditionals","setToSlots","artifactSetEffectsStats","getArtifactSetEffectsStats","mainStatKey","getMainStatValue","numStars","artifactsAssumeFull","substats","substat","stat","statVal","setKey","srcKey","setNumKey","srcKey2","length","parseInt","getConditionalStats","dependencies","GetDependencies","modifiers","PreprocessFormulas","finalStats","mergeStats","modifier","mkey","multiplier","hitMode","autoInfused","reactionMode","talentLevelKeys","talentConditionals","ascension","statKeys","characterEle","weaponType","tlvl","overrides","hasOwnProperty","specializedStatVal","specialStatKey","s","weaponSubKey","getWeaponSubStatKey","getWeaponSubStatValWithOverride","getWeaponBonusStat","refineIndex","getWeaponConditionalStat","getWeaponDataImport","WeaponDataImport","getLevelName","LevelNameData","getLevelIndex","WeaponLevelKeys","getWeaponName","weaponKey","WeaponData","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","charFinalStats","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","subStatKey","getWeaponsOfType","getWeaponTypeName","WeaponTypeData","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","objMultiplication","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","CustomFormControl","float","placeholder","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","className","toString","onChange","target","parseFloat","onFocus","onBlur","aria-label","StarIcon","icon","faStar","Stars","stars","colored","Array","_","GetFormulaDependency","dependency","Set","Proxy","prop","receiver","add","formulaKeyDependency","freeze","Formulas","StatData","InsertDependencies","has","k","then","imp","default","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","ConditionalSelector","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","a","b","StatInput","prependEle","defaultValue","percent","restProps","Prepend","Text","Append","undefined","placement","overlay","style","pointerEvents","faUndo","DisplayStatDiff","label","oldVal","fixed","unit","diff","oldText","diffText","toFixed","xs","StatDisplay","equippedBuild","newBuild","editable","build","invalid","Stat","getStatUnit","fixedUnit","getStatName","labelVariant","ReactionToggle","setReactionMode","charEleKey","src","HitModeToggle","setHitMode","CalculationDisplay","header","bg","Header","Body","subFormulaKeys","getPrintableFormulaStatKeyList","reverse","as","Card","eventKey","printStat","Collapse","subKey","printFormula","talentField","fieldText","fieldVariant","fieldFormulaText","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","DamageOptionsAndCalculation","setState","setOverride","r","Button","href","rel","xl","getStatNameRaw","immunityStatKey","elementImmunity","m","useForceUpdate","useCallback","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","assumeFull","forceUpdateHook","useEffect","getDataImport","registerArtListener","unregisterArtListener","equipOnChar","equipArtifactOnChar","maximumEfficiency","substatsValidation","lock","currentEfficiency","mainStatLevel","assFullColor","mainStatVal","artifactValid","every","sstat","rolls","border","md","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Title","getSetName","numRolls","efficiency","effOpacity","statName","opacity","valid","Footer","Divider","ckey","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","StatDisplayComponent","statsDisplayKeys","cardbg","JSON","stringify","WIPComponent","CharacterArtifactPane","forceUpdate","Row","Col","Alert","sm","lg","getSetEffects","setNumKeyArr","setStats","getArtifactSetNumStats","getSetEffectConditional","getConditionalNum","conditionalElement","cnum","state","setStateArtifactConditional","Badge","getSetEffectText","CharacterOverviewPane","setConstellation","editLevel","setEditLevel","Img","Image","InputGroup","clamp","OverlayTrigger","Tooltip","faSave","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","reduce","accu","editing","SetEditing","showDescription","setShowDescription","setStateWeapon","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","conditionalStats","conditionalEle","faQuoteLeft","DropdownButton","arr","Dropdown","ItemText","faGavel","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","ele","miscStatkeys","specializedStatKey","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getStatNameWithPercent","CharacterTalentPane","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","sKey","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","faQuestionCircle","cursor","crystalize_hit","eleInterArr","Ele","modifiersToFields","mStatKey","formulaText","statsToFields","flat","talentLimits","otherProps","infuseBtn","talentLvlKey","talentLvlKeyRaw","levelBoost","newTalentLevelKey","stateTalentLevelKeys","statsEle","ListGroup","FieldDisplay","index","Subtitle","talentText","conditionalFields","condField","compareAgainstEquipped","formulaTextOverlay","fieldVal","fixedVal","fieldEquippedVal","CustomMenu","React","forwardRef","ref","labeledBy","minWidth","aria-labelledby","Children","toArray","child","CharacterDisplayCard","forceUpdateComponent","setCharacterKey","getInitialState","char","getIntialWeapon","updateCharacter","setLevelKey","Promise","all","prevProps","footer","onClose","tabName","flexArts","HeaderIconDisplay","commonPaneProps","u","ButtonGroup","DropdownToggle","lvlKey","faTimes","Tab","Container","defaultActiveKey","mountOnEnter","unmountOnExit","Nav","Link","Content","Pane","Component","initialState","skill","burst","encodeLength","numberToString","decodeLength","string","offset","stringToNumber","result","encodeItem","data","schema","pathItem","encode","encodeUInt","match","encodeString","list","encodeFixed","schemas","defaultSchema","item","join","encodeArray","encodeObject","keySchema","valueSchema","items","encodeSparse","error","path","decodeItem","decodeUInt","slice","decodeString","decodeFixed","unused","decodeArray","decodeObject","decodeSparse","decode","uint","number","remainder","String","fromCharCode","padEnd","code","charCodeAt","slots","hitModes","reactionModes","artifactSets","characters","conditionalSchema","flexSchema","factor","endsWith","overrideLevel","bool","int","object","parseFlexObj","parameters","split","artifact","databaseVersion","CurrentDatabaseVersion","parseFlexObj1","d","dbv","characterkey","parseFlexObj0","urlon","parse","_createFlexObj","TestDisplay","useLocation","searchStr","search","substring","Display","to","DatabaseInitAndVerify","flexObj","createFlexObj","window","scrollTo","toast","settoast","url","isUpToDate","Toast","show","delay","autohide","position","top","right","navigator","clipboard","writeText","faLink","Form","Control","readOnly","select"],"mappings":"gTAWqBA,E,WAEnB,aAAgB,GAAD,oBAAKC,gBAAgBD,EAAW,MAAME,MAAM,0C,gEAyHrCC,EAAcC,EAAWC,GAAU,IAAD,EAChDC,EAAS,UAAGL,KAAKM,YAAYJ,UAApB,aAAG,EAAgCE,QAClD,GAAKC,EAAL,CACA,IAAIE,EACJ,GAAkB,SAAdJ,EACF,cAAiB,CAAC,SAAU,UAAW,YAAvC,eAAoD,CAAC,IAAD,IAAzCK,EAAE,KAAuC,YACjCC,OAAOC,QAAP,iBAAeL,QAAf,IAAeA,OAAf,EAAeA,EAAYG,UAA3B,QAAkC,IAAIG,MAAK,yCAAyBP,YADnC,QAC+C,GACjG,GADEG,EADgD,oBAElC,CACdJ,EAAYK,EACZ,WALN,qBAQwBC,OAAOC,QAAP,iBAAeL,QAAf,IAAeA,OAAf,EAAeA,EAAYF,UAA3B,QAAyC,IAAIQ,MAAK,yCAAyBP,YARnG,QAQ+G,GAAtGG,EART,oBASA,GAAKA,EACL,MAAO,CAAEL,eAAcC,YAAWI,iB,6BAuGtBL,GACZ,IAAIU,EAAYC,IAAkBC,IAAIZ,GAClCU,EAAUG,mBACZN,OAAOO,OAAOJ,EAAUG,mBAAmBE,SAAQ,SAAAC,GAAK,OACtDC,IAAiBC,kBAAkBF,EAAO,OAC9CL,IAAkBQ,OAAOnB,O,KArPRH,EAGZuB,uBAAyB,kBAAMC,KAHnBxB,EAIZyB,iBAAmB,SAACZ,EAAWa,GAAyB,IAAhBC,EAAe,uDAAN,EAChDxB,EAA2BU,EAA3BV,aAAcyB,EAAaf,EAAbe,SACpB,GAAgB,uBAAZF,EAAkC,OANrB1B,EAMiC6B,sBAAsB1B,GACxE,GAAgB,uBAAZuB,EAAkC,OAPrB1B,EAOiC8B,sBAAsB3B,EAAcyB,GACtF,GAAgB,cAAZF,EAAyB,OAAOK,IAAOC,iCAAP,OAAwCnB,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAWoB,QACvF,GAAgB,mBAAZP,GAA4C,eAAZA,EAA0B,OAT7C1B,EASyDkC,SAASN,GACnF,GAAIF,EAAQS,SAAS,aAAc,OAAO,GAC1C,GAAIT,KAAWU,IAAmB,OAAOA,IAAkBV,GAC3D,IAAIW,EAZarC,EAYOO,YAAYJ,GACpC,OAAIkC,GAAgBX,KAAWW,EAAaC,SAAiBD,EAAaC,SAASZ,GAblE1B,EAagFuC,qBAAqBX,IAC/GD,GAdU3B,EAiBZO,YAAc,SAACiC,GAAD,OAAaC,IAAcD,IAjB7BxC,EAkBZ0C,iBAAmB,SAACC,GAAD,MAAehB,EAAf,uDAAwB,GAAxB,OAA6C,OAAbiB,UAAa,IAAbA,KAAA,UAAAA,IAAgBD,UAAhB,eAA+BE,OAAQlB,GAlB9E3B,EAmBZ8C,oBAAsB,kBAAMpC,OAAOqC,KAAKN,MAnB5BzC,EAqBZgD,QAAU,SAACR,GAAD,MAAUb,EAAV,uDAAmB,GAAnB,OAA2B,UArBzB3B,EAqB8BO,YAAYiC,UAAjB,eAA2BK,OAAQlB,GArB5D3B,EAsBZiD,QAAU,SAACT,GAAD,MAAUb,EAAV,uDAAmB,EAAnB,OAA0B,UAtBxB3B,EAsB6BO,YAAYiC,UAAjB,eAA2BU,OAAQvB,GAtB3D3B,EAuBZmD,gBAAkB,SAACX,GAAD,MAAUb,EAAV,uDAAmB,GAAnB,OAA2B,UAvBjC3B,EAuBsCO,YAAYiC,UAAjB,eAA2BY,aAAczB,GAvB1E3B,EAwBZqD,iBAAmB,kBAAM3C,OAAOqC,KAAKH,MAxBzB5C,EAyBZsD,gCAAkC,kBAzBtBtD,EAyBiCqD,mBAAmBE,QAAO,SAAAC,GAAC,MAAU,aAANA,MAzBhExD,EA0BZyD,iBAAmB,SAACjB,GAAD,MAAUb,EAAV,uDAAmB,GAAnB,OAA2B,UA1BlC3B,EA0BuCO,YAAYiC,UAAjB,eAA2BkB,gBAAiB/B,GA1B9E3B,EA2BZ2D,qBAAuB,SAACnB,GAAD,MAAUb,EAAV,uDAAmB,GAAnB,OAA2B,UA3BtC3B,EA2B2CO,YAAYiC,UAAjB,eAA2BoB,oBAAqBjC,GA3BtF3B,EA4BZ6D,UAAY,SAACrB,GAAD,MAAUb,EAAV,uDAAmB,GAAnB,OAA2B,UA5B3B3B,EA4BgCO,YAAYiC,UAAjB,eAA2BsB,SAAUnC,GA5BhE3B,EA+BZ+D,aAAe,kBAAMrD,OAAOqC,KAAKiB,MA/BrBhE,EAgCZiE,cAAgB,SAACrC,GAAD,MAAWD,EAAX,uDAAoB,GAApB,OAAsC,OAAVqC,UAAU,IAAVA,KAAA,UAAAA,IAAapC,UAAb,eAAwBiB,OAAQlB,GAhChE3B,EAiCZuC,qBAAuB,SAACX,GAAD,OAjCX5B,EAiC8B+D,eAAeG,QAAQtC,IAjCrD5B,EAkCZkC,SAAW,SAACN,GAAD,MAAWD,EAAX,uDAAoB,EAApB,OAAqC,OAAVqC,UAAU,IAAVA,KAAA,UAAAA,IAAapC,UAAb,eAAwBuC,QAASxC,GAlC3D3B,EAmCZoE,aAAe,SAACxC,GAAD,MAAWD,EAAX,uDAAoB,EAApB,OAAqC,OAAVqC,UAAU,IAAVA,KAAA,UAAAA,IAAapC,UAAb,eAAwByC,QAAS1C,GAnC/D3B,EAsCZsE,mBAAqB,SAAC9B,GAAD,uBAtCTxC,EAsC2BO,YAAYiC,UAA9B,aAAa,EAA2B+B,gBAtCjDvE,EAuCZ6B,sBAAwB,SAACW,GAAD,uBAvCZxC,EAuC8BsE,mBAAmB9B,UAArC,aAAa,EAAkCgC,KAvC3DxE,EAwCZ8B,sBAAwB,SAACU,EAASZ,GAAV,yBAxCZ5B,EAwCwCsE,mBAAmB9B,UAA/C,iBAAuB,EAAkCiC,aAAzD,aAAuB,EAxCnCzE,EAwCkFuC,qBAAqBX,KAxCvG5B,EA0CZ0E,SAAW,SAAClC,GAAD,MAAUb,EAAV,uDAAmB,KAAnB,OAA4B,UA1C3B3B,EA0CgCO,YAAYiC,UAAjB,eAA2BmC,WAAYhD,GA1ClE3B,EA2CZ4E,QAAU,SAACpC,GAAD,MAAUb,EAAV,uDAAmB,KAAnB,OAA4B,UA3C1B3B,EA2C+BO,YAAYiC,UAAjB,eAA2BqC,UAAWlD,GA3ChE3B,EA4CZ8E,aAAe,SAACtC,EAASpC,GAAV,MAAqBuB,EAArB,uDAA8B,KAA9B,OAAuC,UA5C1C3B,EA4C+C+E,UAAUvC,EAASpC,UAAxB,eAAoC4E,MAAOrD,GA5CrF3B,EA6CZiF,oBAAsB,SAACzC,EAAS0C,GAAV,UAAsBvD,EAAtB,uDAA+B,KAA/B,OAAwC,UA7ClD3B,EA6CuDO,YAAYiC,UAAjB,mBAA2B2C,cAA3B,0CAAoDD,EAAa,WAAjE,eAAuEF,MAAOrD,GA7ChI3B,EAgDZ+E,UAAY,SAACvC,EAASpC,GAAV,QAAqBuB,EAArB,uDAA8B,GAA9B,OAAqC,UAhDrC3B,EAgD0CO,YAAYiC,UAAjB,mBAA2B2C,cAA3B,eAAoC/E,KAAcuB,GAhDvF3B,EAiDZoF,cAAgB,SAAC5C,EAASpC,GAAV,MAAqBuB,EAArB,uDAA8B,GAA9B,OAAqC,UAjDzC3B,EAiD8C+E,UAAUvC,EAASpC,UAAxB,eAAoCyC,OAAQlB,GAjDrF3B,EAmDZqF,oBAAsB,SAAClF,EAAcC,EAAWkF,GAA+B,IAAD,EAAf3D,EAAe,uDAAN,EAE7E,GAAkB,UAAdvB,GAAuC,UAAdA,EAAuB,OAAOuB,EAE3D,IADA,IAAI4D,GAAU,UAtDGvF,EAsDEO,YAAYJ,UAAjB,eAAgCgF,SAAU,GAC/CK,EAAI,EAAGA,GAAKF,EAAeE,IAAK,CAAC,IAAD,EACnCC,GAAc,UAAAF,EAAQ,gBAAD,OAAiBC,WAAxB,eAA8BC,cAAe,GAC3DC,EAAahF,OAAOC,QAAQ8E,GAAa7E,MAAK,mCAAE4D,EAAF,iBAAgBA,IAAQpE,KAC1E,GAAIsF,EAAY,OAAOA,EAAW,GAEpC,OAAO/D,GA5DU3B,EA+DZ2F,kBAAoB,SAACnD,EAASpC,GAAV,MAAqBuB,EAArB,uDAA8B,GAA9B,OAAqC,UA/D7C3B,EA+DkD+E,UAAUvC,EAASpC,UAAxB,eAAoCwF,WAAYjE,GA/D7F3B,EAgEZ6F,0BAA4B,SAACC,EAAO1F,GAAR,OAhEhBJ,EAiEZ2F,kBAAkBG,EAAM3F,aAAcC,GAAW2F,KAAI,SAAAC,GAAO,MAAuB,oBAAZA,EAAyBA,EAAQF,GAASE,MAjErGhG,EAmEZiG,eAAiB,SAACH,EAAO1F,EAAW8F,EAAcC,GAA6B,IAAD,MAAhBxE,EAAgB,uDAAP,GAC5E,IAAKmE,EAAO,OAAOnE,EACnB,IAAMyE,EAAK,UArEMpG,EAqEE6F,0BAA0BC,EAAO1F,UAAzC,iBAAG,EAAmD8F,UAAtD,iBAAG,EAAkEG,cAArE,aAAG,EAA2EF,GACzF,OAAKC,EACmB,oBAAVA,EAAuBA,EAAMN,GAASM,EADjCzE,GAtEF3B,EAyEZsG,oBAAsB,SAACF,EAAO5B,GAAkC,IAA7BsB,EAA4B,uDAApB,GAAInE,EAAgB,uDAAP,GAC7D,OAAI,OAACyE,QAAD,IAACA,OAAD,EAACA,EAAQ5B,IACkB,oBAAxB,OAAO4B,QAAP,IAAOA,OAAP,EAAOA,EAAQ5B,IAAsB4B,EAAM5B,GAAKsB,GAASM,EAAM5B,GAD5C7C,GA1ET3B,EA8EZuG,eAAiB,SAAC/D,EAASpC,EAAW0F,GAA0B,IAAD,EAAlBnE,EAAkB,uDAAT,KACrD6E,EAAW,UA/EAxG,EA+EQ+E,UAAUvC,EAASpC,UAA3B,aAAG,EAAoC0F,MACxD,MAA2B,oBAAhBU,EACFA,EAAYV,GACdU,GAAe7E,GAlFL3B,EAoFZyG,kBAAoB,SAACjE,EAASsD,GAAW,IAAD,EACvCP,GAAU,UArFCvF,EAqFIO,YAAYiC,UAAjB,eAA2B2C,SAAU,GAC/CuB,EAAW,GAKjB,OAJAhG,OAAOqC,KAAKwC,GAASrE,SAAQ,SAAAd,GAC3B,IAAMoG,EAxFSxG,EAwFUuG,eAAe/D,EAASpC,EAAW0F,GACxDU,GAAaE,EAASC,KAAKH,MAE1BE,GA3FU1G,EA6FZ4G,qBAAuB,SAACd,EAAO1F,EAAWyG,GAAmC,IAAD,EAAlBlF,EAAkB,uDAAT,KAClEmF,EA9FW9G,EA8FK6F,0BAA0BC,EAAO1F,GACnD2G,EAAO,KAFsE,cAG3DD,GAH2D,IAGjF,2BAAgC,CAAC,IAAD,EAArBd,EAAqB,QAC1BgB,EAAWhB,EAAQiB,YAGvB,GAFwB,oBAAbD,IACTA,EAAWA,EAASlB,KACV,QAAR,EAAAkB,SAAA,eAAUH,kBAAmBA,EAAgB,CAC/CE,EAAOC,EACP,QAT6E,8BAYjF,OAAOD,GAAQpF,GAzGE3B,EA2GZkH,0BAA4B,SAACD,EAAaE,GAAmC,IAAnBxF,EAAkB,uDAAT,KACxE,IAAKwF,IAAmBF,EAAa,OAAOtF,EADqC,MAEtDyF,IAAiBC,mBAAmBJ,EAAa,QAASE,GAFJ,0BAE5ErB,OAF4E,MAEpE,GAFoE,EAEhEwB,EAFgE,KAGjF,OAAKA,EACE5G,OAAO6G,YAAY7G,OAAOC,QAAQmF,GAAOC,KAAI,mCAAEvB,EAAF,KAAOgD,EAAP,WAAwB,cAARhD,EAAsB,CAACA,EAAKgD,GAAO,CAAChD,EAAKgD,EAAMF,OAD/F3F,GA9GH3B,EAiHZyH,2BAA6B,SAACR,EAAaE,GAAiC,IAAjBxF,EAAgB,uDAAP,GACzE,IAAKwF,IAAmBF,EAAa,OAAOtF,EAC5C,IAAI0E,EAASe,IAAiBC,mBAAmBJ,EAAa,SAAUE,GAAgB,GACxF,OAAOd,GAAU1E,GApHA3B,EAuHZ0H,gBAAkB,SAAClF,GAAD,IAAUb,EAAV,8DAAgE,aAvHtE3B,EAuHwCyD,iBAAiBjB,IAA2Bb,GAvHpF3B,EAwHZ2H,gBAAkB,SAACnF,GAAD,UAAUb,EAAV,+DAA6B,UAxHnC3B,EAwHwCO,YAAYiC,UAAjB,mBAA2B2C,cAA3B,mBAAmCyC,YAAnC,eAAyCC,YAAalG,GAxHzF3B,EA6IZ8H,cAAgB,SAAC3H,GAAD,aAAkB4H,QAAO,UAAC/H,EAAUO,YAAYJ,UAAvB,aAAC,EAAqCgF,SA7InEnF,EA+IZgI,mBAAqB,SAAClC,GAAuC,IAAhCnE,EAA+B,uDAAtB,CAAEsG,UAAW,IACxD,IAAKnC,EAAO,OAAOnE,EAD8C,IAEzDxB,EAAiB2F,EAAjB3F,aACJ+H,EAASlI,EAAUmD,gBAAgBhD,GACvC,IAAK+H,EAAQ,OAAOvG,EACpB,IAAMsG,EAAY,CAAC,UAAW,WAAY,WAAY,SAAU,YAAa,WAAY,QAAS,YAAhF,UAAgGC,EAAhG,UAEZR,EAAkB1H,EAAU0H,gBAAgBvH,GAC5CwH,EAAkB3H,EAAU2H,gBAAgBxH,GAC7CuH,GACHO,EAAUtB,KAAK,iBAGjB,IAAMwB,EAAiBC,YAAUC,IAAsBH,IACjDxE,EA7JW1D,EA6JUyD,iBAAiBtD,GAE5C,GADKgI,EAAehG,SAAS,kBAAsC,aAAlBuB,GAA8ByE,EAAexB,KAAK,iBA9JlF3G,EA+JR8H,cAAc3H,GAAe,CAAC,IAAD,IAC9BmI,EAAe,GASrB,OARA5H,OAAOqC,KAAP,oBAAY/C,EAAUO,YAAYJ,UAAlC,aAAY,EAAqCgF,cAAjD,QAA2D,IAAIjE,SAAQ,SAAAd,GAAS,uBAC9EJ,EAAU6F,0BAA0BC,EAAO1F,UADmC,aAC9E,EAAuDc,SAAQ,SAAC8E,EAASE,GAAV,oBAC7DF,QAD6D,IAC7DA,GAD6D,UAC7DA,EAASK,cADoD,aAC7D,EAAiBnF,SAAQ,SAACkF,EAAOD,GAAgB,IAAD,IACtB,OAALC,QAAK,IAALA,OAAA,EAAAA,EAAO/F,WAAP,UApKVL,EAoKiCiG,eAAeH,EAAO1F,EAAW8F,EAAcC,UAAtE,aAAkB,EAAiE9F,YAEjGiI,EAAalI,KAAYkI,EAAalI,GAAa,IACxDkI,EAAalI,GAAWuG,KAAK,CAAEvG,YAAW8F,eAAcC,yBAEvD,yBAAE8B,aAAcK,GAAvB,IAAqCH,mBAGrC,IAAMI,EAAgB,GAatB,GAZKb,GACHa,EAAc5B,KAAK,yBAA0B,2BAE3Ce,GAAmBC,EACrBY,EAAc5B,KAAd,UAAsBuB,EAAtB,4BAAiDA,EAAjD,oBACoD,QAA7ClI,EAAUyD,iBAAiBtD,IAClCoI,EAAc5B,KAAd,UAAsBuB,EAAtB,oBAGFK,EAAc5B,KAAd,UAAsBuB,EAAtB,2BAAgDA,EAAhD,kBAGe,SAAXA,EAAmB,CACrB,IAAMM,EAAY,GAClBA,EAAU7B,KAAV,MAAA6B,EAAS,YAASD,EAAchF,QAAO,SAAAiB,GAAG,OAAIA,EAAIiE,WAAJ,UAAkBP,EAAlB,SAA8BnC,KAAI,SAAAvB,GAAG,OAAIA,EAAIkE,QAAJ,UAAeR,EAAf,eAA6BA,EAA7B,oBACvFM,EAAU7B,KAAV,MAAA6B,EAAS,YAASD,EAAchF,QAAO,SAAAiB,GAAG,OAAIA,EAAIiE,WAAJ,UAAkBP,EAAlB,SAA8BnC,KAAI,SAAAvB,GAAG,OAAIA,EAAIkE,QAAJ,UAAeR,EAAf,eAA6BA,EAA7B,gBACvFK,EAAc5B,KAAd,MAAA4B,EAAsBC,OACF,SAAXN,EACTK,EAAc5B,KAAd,MAAA4B,EAAa,YAASA,EAAchF,QAAO,SAAAiB,GAAG,OAAIA,EAAIiE,WAAJ,UAAkBP,EAAlB,SAA8BnC,KAAI,SAAAvB,GAAG,OAAIA,EAAIkE,QAAJ,UAAeR,EAAf,eAA6BA,EAA7B,gBACzE,UAAXA,GACPK,EAAc5B,KAAd,MAAA4B,EAAa,YAASA,EAAchF,QAAO,SAAAiB,GAAG,OAAIA,EAAIiE,WAAJ,UAAkBP,EAAlB,SAA8BnC,KAAI,SAAAvB,GAAG,OAAIA,EAAIkE,QAAJ,UAAeR,EAAf,eAA6BA,EAA7B,oBAE7F,MAAO,CAAED,YAAWM,gBAAeJ,mBAnMpBnI,EAuMZ2I,YAAc,SAAC9H,EAAWa,GAC/B,MAAgB,YAAZA,EACK1B,EAAU2I,YAAY9H,EAAW,OAASb,EAAU2I,YAAY9H,EAAW,QAAUb,EAAU2I,YAAY9H,EAAW,iBAAkB,EAC5H,aAAZa,EACA1B,EAAU2I,YAAY9H,EAAW,QAAUb,EAAU2I,YAAY9H,EAAW,SAAWb,EAAU2I,YAAY9H,EAAW,kBAAmB,EAC/H,aAAZa,EACA1B,EAAU2I,YAAY9H,EAAW,QAAUb,EAAU2I,YAAY9H,EAAW,SAAWb,EAAU2I,YAAY9H,EAAW,kBAAmB,KACpI,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAW+H,oBAAqBlH,KAAWb,EAAU+H,mBA9M3C5I,EAiNZ6I,yBAA2B,SAAChI,EAAWa,GAAyB,IAAD,IAAfC,EAAe,uDAAN,EAC9D,OAlNiB3B,EAkNR2I,YAAY9H,EAAWa,GAAU,iBAAOb,QAAP,IAAOA,GAAP,UAAOA,EAAW+H,yBAAlB,aAAO,EAA+BlH,UAAtC,QAAkDC,EAlN3E3B,EAmNAyB,iBAAiBZ,EAAWa,EAASC,IAnNrC3B,EAuNZ8I,eAAiB,SAAC3I,EAAc4I,GACrC,IAAIlI,EAAYC,IAAkBC,IAAIZ,GACtC,GAAKU,EAAL,CACA,IAAImI,EAAoBnI,EAAUG,kBAC9BiI,EAAuBF,EAG3BG,IAASC,cAAcjI,SAAQ,SAAAkI,GAC7B,IAAIC,EAAejI,IAAiBL,IAAjB,OAAqBkI,QAArB,IAAqBA,OAArB,EAAqBA,EAAuBG,IAC/D,GAAIC,EAAaC,WAAanJ,EAA9B,CACA,IAAIoJ,EAAYnI,IAAiBL,IAAjB,OAAqBiI,QAArB,IAAqBA,OAArB,EAAqBA,EAAoBI,IACrDI,GAA0B,OAAZH,QAAY,IAAZA,OAAA,EAAAA,EAAcC,WAAY,GAExCC,GAAWnI,IAAiBC,kBAAkBkI,EAAUE,GAAID,GAE5DA,GAAY1I,IAAkB4I,cAAcF,EAAYD,GAExDF,GAAcjI,IAAiBC,kBAAkBgI,EAAaI,GAAItJ,OAGxEU,EAAUG,kBAAoB,GAC9BN,OAAOC,QAAQoI,GAAa7H,SAAQ,mCAAEsD,EAAF,KAAOrD,EAAP,YAClCN,EAAUG,kBAAkBwD,GAAOrD,KACrCL,IAAkB6I,OAAO9I,KA9ORb,EAwPZ4J,eAAiB,SAAC/I,GACvB,IAAIgJ,EACJ,GAAIhJ,EAAUgJ,UACZA,EAAYnJ,OAAO6G,YAAY1G,EAAUgJ,UAAU9D,KAAI,SAAC+D,EAAKtE,GAAN,MAAY,CAACA,EAAGsE,WACpE,KAAIjJ,EAAUG,kBAEd,MAAO,GADV6I,EAAYnJ,OAAO6G,YAAY7G,OAAOC,QAAQE,EAAUG,mBAAmB+E,KAAI,mCAAEvB,EAAF,KAAOrD,EAAP,WAAkB,CAACqD,EAAKpD,IAAiBL,IAAII,QAE9H,IAAM4I,EAAe/J,EAAUgK,kCAAkCnJ,GACjE,OAhQiBb,EAgQLiK,uBAAuBpJ,EAAUqJ,qBAAsBH,EAAcF,IAhQhE7J,EAmQZiK,uBAAyB,WAAyD,IAAxDC,EAAuD,uDAAhC,GAAIH,EAA4B,uCAAdF,EAAc,uCAClFM,EAAajB,IAASiB,WAAWN,GACjCO,EAA0BlB,IAASmB,2BAA2BF,GAE9DrE,EAAQsC,YAAU2B,GAEtBrJ,OAAOO,OAAO4I,GAAW3I,SAAQ,SAAA4I,GAC1BA,IAELhE,EAAMgE,EAAIQ,cAAgBxE,EAAMgE,EAAIQ,cAAgB,GAAKpB,IAASqB,iBAAiBT,EAAIQ,YAAaR,EAAIU,SAAU1E,EAAM2E,oBAAqC,EAAfX,EAAIU,SAAeV,EAAI3F,OAErK2F,EAAIY,SAASxJ,SAAQ,SAACyJ,GAAD,OACnBA,GAAWA,EAAQnG,MAAQsB,EAAM6E,EAAQnG,MAAQsB,EAAM6E,EAAQnG,MAAQ,GAAKmG,EAAQlG,cAGxF2F,EAAwBlJ,SAAQ,SAAA0J,GAAI,OAAI9E,EAAM8E,EAAKpG,MAAQsB,EAAM8E,EAAKpG,MAAQ,GAAKoG,EAAKC,WAExFX,EAAqBhJ,SAAQ,YAA6D,IAAlD4J,EAAiD,EAAzDC,OAAyBC,EAAgC,EAAzCC,QAAoB9D,EAAqB,EAArBA,gBAC7DgD,EAAWW,IAAWX,EAAWW,GAAQI,OAASC,SAASH,IAChEtK,OAAOC,QAAQuI,IAASkC,oBAAoBN,EAAQE,EAAW7D,IAC5DjG,SAAQ,mCAAEQ,EAAF,KAAW8F,EAAX,YAAoB1B,EAAMpE,IAAYoE,EAAMpE,IAAY,GAAK8F,QAG1E,IAAI6D,EAAeC,YAAe,OAACxF,QAAD,IAACA,OAAD,EAACA,EAAOyF,WAE1C,OADAC,YAAmBH,EAAcvF,GAAOzF,QAAQyF,GACzC,CACLiD,YAAarI,OAAO6G,YAAY7G,OAAOC,QAAQkJ,GAAW9D,KAAI,mCAAEvB,EAAF,KAAOgD,EAAP,WAAgB,CAAChD,EAAD,OAAMgD,QAAN,IAAMA,OAAN,EAAMA,EAAKiC,QACzFU,aACAsB,WAAY3F,EACZoE,yBAhSelK,EAmSZ0L,WAAa,SAAC3B,EAAcjE,GAAf,OAAyBA,GAASpF,OAAOC,QAAQmF,GAAO5E,SAAQ,YAAiB,IAAD,qBAAdsD,EAAc,KAATgD,EAAS,KAClG,GAAY,cAARhD,EAAqB,CAAC,IAAD,EACvBuF,EAAawB,UAAb,UAAyBxB,EAAawB,iBAAtC,QAAmD,GACnD,cAAkC7K,OAAOC,QAAQ6G,GAAjD,eAAuD,CAAC,IAAD,wBAA3C9F,EAA2C,KAAlCiK,EAAkC,KACrD5B,EAAawB,UAAU7J,GAAvB,UAAkCqI,EAAawB,UAAU7J,UAAzD,QAAqE,GACrE,cAAiChB,OAAOC,QAAQgL,GAAhD,4CAAYC,EAAZ,KAAkBC,EAAlB,KACE9B,EAAawB,UAAU7J,GAASkK,IAAQ,UAAC7B,EAAawB,UAAU7J,GAASkK,UAAjC,QAA0C,GAAKC,SAEtF9B,EAAavF,IAAO,UAACuF,EAAavF,UAAd,QAAsB,GAAKgD,MA3SrCxH,EA8SZgK,kCAAoC,SAACnJ,GAAe,IAAD,kCACxD,IAAKA,EAAW,MAAO,GADiC,MAExDA,EAAYuH,YAAUvH,GACdV,EAHgD,EAGhDA,aAAcyB,EAHkC,EAGlCA,SAAUkK,EAHwB,EAGxBA,QAASC,EAHe,EAGfA,YAAaC,EAHE,EAGFA,aAAcC,EAHZ,EAGYA,gBAAiB3G,EAH7B,EAG6BA,cAH7B,IAG4C4G,0BAH5C,MAGiE,GAHjE,EAIlDC,EAAYnM,EAAUoE,aAAaxC,GAGnCwK,EAAQ,CAAI,cAAe,eAAgB,eAAgB,YAAa,iBAAkB,aAAc,qBAAsB,0BAAtH,mBAAmJ1L,OAAOqC,KAAKX,OACvK2H,EAAerJ,OAAO6G,YAAY6E,EAASrG,KAAI,SAAAvB,GAAG,MAAI,CAACA,EAtT5CxE,EAsTsD6I,yBAAyBhI,EAAW2D,QAW3G,IAAK,IAAMA,KAVXuF,EAAasC,aAvTIrM,EAuTgBmD,gBAAgBhD,GACjD4J,EAAa5J,aAAeA,EAC5B4J,EAAa+B,QAAUA,EACvB/B,EAAagC,YAAcA,IAAW,UAAI/L,EAAUO,YAAYJ,UAA1B,iBAAI,EAAqCgF,cAAzC,iBAAI,EAA6CyC,YAAjD,aAAI,EAAmDC,WAC7FkC,EAAaiC,aAAeA,EAC5BjC,EAAamC,mBAAqBA,EAClCnC,EAAauC,WA7TItM,EA6TcyD,iBAAiBtD,GAChD4J,EAAawC,KAAON,EACpBlC,EAAazE,cAAgBA,EAC7ByE,EAAaoC,UAAYA,EACPpC,EAAawC,KAC7BxC,EAAawC,KAAK/H,IAlUHxE,EAkUgBqF,oBAAoBxE,EAAUV,aAAcqE,EAAKc,GAGlFtF,EAAUqD,mBAAmBnC,SAAQ,SAAAgH,GACnC,IAAIxG,EAAO,UAAMwG,EAAN,cACX6B,EAAarI,GAvUE1B,EAuUc6I,yBAAyBhI,EAAWa,GACjEA,EAAO,UAAMwG,EAAN,kBACP6B,EAAarI,GAzUE1B,EAyUc6I,yBAAyBhI,EAAWa,MAInE,IAAI8K,GAAqB,QAAT,EAAA3L,SAAA,eAAW+H,oBAAqB,GAChDlI,OAAOC,QAAQ6L,GAAWtL,SAAQ,YAAqB,IAAD,mBAAlBQ,EAAkB,KAAT8F,EAAS,KACpC,uBAAZ9F,GAAgD,uBAAZA,IACnCqI,EAAa0C,eAAe/K,KAAUqI,EAAarI,GAAW8F,OAIrE,IAAIkF,EAAqB1M,EAAU6I,yBAAyBhI,EAAW,sBACnE8L,EAAiB3M,EAAU6I,yBAAyBhI,EAAW,sBArVlDb,EAsVZ0L,WAAW3B,EAAhB,eAAiC4C,EAAiBD,IAGlD1M,EAAUyG,kBAAkBtG,EAAc4J,GAAc7I,SAAQ,SAAA0L,GAAC,OAzVhD5M,EAyVyD0L,WAAW3B,EAAc6C,MAGnG,IAAMC,EAAe9K,IAAO+K,oBAAP,UAA2BjM,SAA3B,iBAA2B,EAAWoB,cAAtC,aAA2B,EAAmBuC,KAYnE,OAXIqI,GA7Va7M,EA6VM0L,WAAW3B,EAAhB,eAAiC8C,EAAe9K,IAAOgL,gCAAP,UAAuClM,SAAvC,aAAuC,EAAWoB,UA7VnGjC,EA8VZ0L,WAAW3B,EAAchI,IAAOiL,mBAAP,UAA0BnM,SAA1B,iBAA0B,EAAWoB,cAArC,aAA0B,EAAmBuC,IAA7C,UAAkD3D,SAAlD,iBAAkD,EAAWoB,cAA7D,aAAkD,EAAmBgL,cA9VlFjN,EA+VZ0L,WAAW3B,EAAchI,IAAOmL,yBAAP,UAAgCrM,SAAhC,iBAAgC,EAAWoB,cAA3C,aAAgC,EAAmBuC,IAAnD,UAAwD3D,SAAxD,iBAAwD,EAAWoB,cAAnE,aAAwD,EAAmBgL,YAA3E,UAAwFpM,SAAxF,iBAAwF,EAAWoB,cAAnG,aAAwF,EAAmBkF,eAAgB,KAGzJ+E,EAAmBhL,SAAQ,SAAA6F,GAAS,IAClB3G,EAAuD2G,EAA/DgE,OAA4BlE,EAAmCE,EAA5CkE,QAAyB9D,EAAmBJ,EAAnBI,eAC9CF,EAAcjH,EAAU4G,qBAAqBmD,EAAc3J,EAAWyG,GApW7D7G,EAqWV0L,WAAW3B,EAAc/J,EAAUkH,0BAA0BD,EAAaE,EAAgB,QAG1F4C,I,8GChXUhI,EAEnB,aAAgB,GAAD,oBAAK9B,gBAAgB8B,EAAQ,MAAM7B,MAAM,2CAFrC6B,EAIZoL,oBAAsB,kBAAMC,KAJhBrL,EAKZsL,aAAe,SAACzL,GAAD,IAAWD,EAAX,uDAAoB,GAApB,OAA4B2L,IAAc1L,IAAaD,GAL1DI,EAMZwL,cAAgB,SAAC3L,GAAD,OAAc4L,IAAgBtJ,QAAQtC,IAN1CG,EAQZ0L,cAAgB,SAACC,GAAD,MAAY/L,EAAZ,uDAAqB,GAArB,OAA6B,UAAAgM,IAAWD,UAAX,eAAuB7K,OAAQlB,GARhEI,EASZ6L,gBAAkB,SAACF,GAAD,MAAY/L,EAAZ,uDAAqB,EAArB,OAA4B,UAAAgM,IAAWD,UAAX,eAAuBG,SAAUlM,GATnEI,EAUZ+L,qBAAuB,SAACJ,GAAD,MAAY/L,EAAZ,uDAAqB,GAArB,OAA6B,UAAAgM,IAAWD,UAAX,eAAuBK,cAAepM,GAV9EI,EAWZiM,4BAA8B,SAACN,EAAWT,EAAagB,EAAgBpN,GAAzC,QAAoDc,EAApD,uDAA6D,GAA7D,OAAqE,UAAAgM,IAAWD,UAAX,mBAAuBQ,0BAAvB,sBAA4CjB,EAAagB,EAAgBpN,KAAcc,GAX9KI,EAYZoM,qBAAuB,SAACT,GAAD,MAAY/L,EAAZ,uDAAqB,GAArB,OAA6B,UAAAgM,IAAWD,UAAX,eAAuBU,cAAezM,GAZ9EI,EAaZsM,qBAAuB,SAACX,GAAD,MAAY/L,EAAZ,uDAAqB,KAArB,OAA+B,UAAAgM,IAAWD,UAAX,eAAuBzG,cAAetF,GAbhFI,EAcZuM,aAAe,SAACZ,GAAD,MAAY/L,EAAZ,uDAAqB,KAArB,OAA8B,UAAAgM,IAAWD,UAAX,eAAuB1I,MAAOrD,GAd/DI,EAiBZwM,qBAAuB,SAACb,EAAW9L,GAAZ,UAAsBD,EAAtB,uDAA+B,EAA/B,OAAsC,UAAAgM,IAAWD,UAAX,mBAAuBc,iBAAvB,mBAAkCC,YAAlC,eAjBjD1M,EAiB+FwL,cAAc3L,MAAcD,GAjB3HI,EAkBZ2M,oBAAsB,SAAChB,EAAW9L,GAAZ,UAAsBD,EAAtB,uDAA+B,EAA/B,OAAsC,UAAAgM,IAAWD,UAAX,mBAAuBc,iBAAvB,mBAAkCG,WAAlC,eAlBhD5M,EAkB6FwL,cAAc3L,MAAcD,GAlBzHI,EAmBZ+K,oBAAsB,SAACY,GAAD,QAAY/L,EAAZ,uDAAqB,GAArB,OAA6B,UAAAgM,IAAWD,UAAX,mBAAuBc,iBAAvB,eAAkCI,aAAcjN,GAnBvFI,EAoBZiL,mBAAqB,SAACU,EAAWT,GAAZ,UAAyBtL,EAAzB,uDAAkC,GAAlC,2BAAyCgM,IAAWD,UAApD,iBAAyC,EAAuB5H,aAAhE,aAAyC,SAA+BmH,UAAxE,QAAwFtL,GApBjGI,EAsBZ8M,iBAAmB,SAACvC,GAAD,OAAgB5L,OAAO6G,YAAY7G,OAAOC,QAAQgN,KAAYpK,QAAO,oDAAgC+I,aAAeA,OAtB3HvK,EAuBZ+M,kBAAoB,SAACxC,GAAD,IAAa3K,EAAb,uDAAsB,GAAtB,OAA8BoN,IAAezC,IAAe3K,GAvBpEI,EAwBZiN,kBAAoB,kBAAMtO,OAAOqC,KAAKgM,MAxB1BhN,EA0BZC,iCAAmC,SAACiN,GAAD,IAAYtN,EAAZ,uDAAqB,EAArB,OAC/B,OAATsN,QAAS,IAATA,OAAA,EAAAA,EAAWC,kBA3BMnN,EA2BkBwM,qBAAL,OAA0BU,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAWzK,IAArC,OAA0CyK,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAWrN,SAAUD,IA3B5EI,EA4BZgL,gCAAkC,SAACkC,GAAD,IAAYtN,EAAZ,uDAAqB,EAArB,OAC9B,OAATsN,QAAS,IAATA,OAAA,EAAAA,EAAWE,iBA7BMpN,EA6BiB2M,oBAAL,OAAyBO,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWzK,IAApC,OAAyCyK,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAWrN,SAAUD,IA7B1EI,EA+BZmL,yBAA2B,SAACQ,EAAWT,EAAa9F,GAAmC,IAAnBxF,EAAkB,uDAAT,KAC9EsF,EAhCalF,EAgCMsM,qBAAqBX,GAC5C,IAAKzG,IAAgBE,EAAgB,OAAOxF,EAF+C,MAGrEyF,IAAiBC,mBAAmBJ,EAAa,QAASE,GAHW,mBAGtFrB,EAHsF,KAG/EwB,EAH+E,KAI3F,OAAKA,GACLxB,EAAQA,EAAMmH,GACC,IAAX3F,GAAc8H,YAAkBtJ,EAAOwB,GACpCxB,GAHanE,I,iCCtCT,ICsBX0N,EAAS,CACXC,SAAU,CAAEC,MDvBC,IAA0B,0CCuBpBC,KCvBN,IAA0B,yCDuBdC,OEvBZ,IAA0B,2CFuBNC,QGvBpB,IAA0B,4CHuBGC,IIvB7B,IAA0B,wCJuBQC,MKvBlC,IAA0B,0CLuBeC,KMvBzC,IAA0B,0CNwBvCC,YAAa,CAAEC,IOxBF,IAA0B,kDPwBnBC,SQxBP,IAA0B,uDRwBTC,SSxBjB,IAA0B,uDTwBCC,QUxB3B,IAA0B,sDVwBUC,MWxBpC,IAA0B,qDXyBvCC,MAAO,CACLC,QY1BW,IAA0B,+CZ2BrCC,Ua3BW,IAA0B,kDb6BvCC,UAAW,CACTC,Oc9BW,IAA0B,mDd+BrCC,Ie/BW,IAA0B,4CfgCrCC,WgBhCW,IAA0B,2DhBmC1BrB,O,2EiBLAsB,IA3BW,SAAC,GAAwF,IAAD,MAArFC,aAAqF,SAAtEC,EAAsE,EAAtEA,YAAapM,EAAyD,EAAzDA,MAAOqM,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,SAAmC,IAAzBC,kBAAyB,WACxFC,oBAAS,GAD+E,mBAC3GC,EAD2G,KACpGC,EADoG,KAK1GC,EAAQ,CACZC,KAAM,SACNC,UAAW,kBACXT,cACApM,MANEuM,EAA4C,kBAAVvM,EAAqBA,EAAQ,IAC9CA,GAASyM,EAAQ,IAAW,OAALzM,QAAK,IAALA,GAAA,UAAAA,EAAO8M,gBAAP,oBAAA9M,KAAuBA,EAMjEsM,WACAS,SAAU,SAAChO,GACT,IAAIiB,EAAQjB,EAAEiO,OAAOhN,MAEHA,EADdmM,EACEI,GAA8B,KAAVvM,EAAe,KAC1BiN,WAAWjN,IAAU,EAE9BuM,GAA8B,KAAVvM,EAAe,KAC1B0G,SAAS1G,IAAU,EAErB,OAAbqM,QAAa,IAAbA,KAAgBrM,IAElBkN,QAAS,kBAAMR,GAAS,IACxBS,OAAQ,kBAAMT,GAAS,KAEzB,OAAO,cAAC,IAAD,2BAAiBC,GAAjB,IAAwBS,aAAW,oB,sGCzBtCC,EAAW,kBAAM,cAAC,IAAD,CAAiBC,KAAMC,OACxCC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,IAAUC,eAAV,gBAAgC,sBAAMb,UAAWa,EAAU,aAAe,GAA1C,SAC3CD,EAAQ,YAAIE,MAAMF,GAAOnP,QAAQgD,KAAI,SAACsM,EAAG7M,GAAJ,OAAU,cAACsM,EAAD,GAAetM,MAAS,S,4FCF1E,SAAS8M,EAAqBjS,GAC5B,IAAMkS,EAAa,IAAIC,IAIvB,OAHAnS,EACE,IAAIoS,MAAM,GAAI,CAAE1R,IAAK,SAAC0Q,EAAQiB,EAAMC,GAAeJ,EAAWK,IAAIF,MAClE,IAAID,MAAM,GAAI,CAAE1R,IAAK,SAAC0Q,EAAQiB,EAAMC,GAAeJ,EAAWK,IAAIF,OAC7D,YAAIH,GAEb,IAAMM,EAAuBnS,OAAOoS,OAAOpS,OAAO6G,YAChD7G,OAAOqC,KAAKgQ,KAAUhN,KAAI,SAAAvB,GAAG,MAAI,CAACA,EAAK8N,EAAqBS,IAASvO,UAkBvE,SAAS8G,IAA+D,IAA/CC,EAA8C,uDAAlC,GAAIxI,EAA8B,uDAAvBrC,OAAOqC,KAAKiQ,KACtD3H,EAAe,IAAImH,IAEvB,OADAzP,EAAK7B,SAAQ,SAAAsD,GAAG,OAAIyO,EAAmBzO,EAAK+G,EAAWF,MAChD,YAAIA,GAEb,SAAS4H,EAAmBzO,EAAK+G,EAAWF,GAAe,IAAD,IACpDA,EAAa6H,IAAI1O,KACrB,UAAAqO,EAAqBrO,UAArB,SAA2BtD,SAAQ,SAAAiS,GAAC,OAAIF,EAAmBE,EAAG5H,EAAWF,MACzE3K,OAAOqC,KAAP,UAAYwI,EAAU/G,UAAtB,QAA8B,IAAItD,SAAQ,SAAAiS,GAAC,OAAIF,EAAmBE,EAAG5H,EAAWF,MAChFA,EAAauH,IAAIpO,M,iCCtCnB,8KAAImJ,EAAa,GACbP,EAAmB,qDACvBA,EAAiBgG,MAAK,SAAAC,GACpB1F,EAAa0F,EAAIC,QACjBlG,EAAmB,QAGrB,IAAMI,EAAkB,CAAC,KAAM,KAAM,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAC/LF,EAAgB,CAAE,GAAM,SAAU,GAAM,SAAU,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,WACjdyB,EAAiB,CACrBoB,MAAO,QACPF,SAAU,WACVD,SAAU,WACVD,IAAK,MACLG,QAAS,Y,iCCdX,8KAAIzN,EAAgB,GAChBjB,EAAsB,qDAC1BA,EAAoB4R,MAAK,SAAAC,GACvB5Q,EAAgB4Q,EAAIC,QACpB9R,EAAsB,QAGxB,IAAMwC,EAAa,CACjB,GAAM,CACJnB,KAAM,QACNsB,MAAO,EACPE,MAAO,GAET,IAAO,CACLxB,KAAM,SACNsB,MAAO,GACPE,MAAO,GAET,KAAQ,CACNxB,KAAM,cACNsB,MAAO,GACPE,MAAO,GAGT,IAAO,CACLxB,KAAM,SACNsB,MAAO,GACPE,MAAO,GAET,KAAQ,CACNxB,KAAM,cACNsB,MAAO,GACPE,MAAO,GAGT,IAAO,CACLxB,KAAM,SACNsB,MAAO,GACPE,MAAO,GAET,KAAQ,CACNxB,KAAM,cACNsB,MAAO,GACPE,MAAO,GAET,IAAO,CACLxB,KAAM,SACNsB,MAAO,GACPE,MAAO,GAET,KAAQ,CACNxB,KAAM,cACNsB,MAAO,GACPE,MAAO,GAET,IAAO,CACLxB,KAAM,SACNsB,MAAO,GACPE,MAAO,GAET,KAAQ,CACNxB,KAAM,cACNsB,MAAO,GACPE,MAAO,GAGT,IAAO,CACLxB,KAAM,SACNsB,MAAO,GACPE,MAAO,GAET,KAAQ,CACNxB,KAAM,cACNsB,MAAO,GACPE,MAAO,GAET,IAAO,CACLxB,KAAM,SACNsB,MAAO,GACPE,MAAO,IAILjC,EAAoB,CACxBmR,UAAW,EACXC,SAAU,GACVC,UAAW,IACXC,QAAS,KAELC,EAA8B,CAAC,MAAO,OAAQ,OAAQ,SAAU,YAAa,QAAS,YAAa,WAAY,gBAAiB,aAAc,WAAY,eAAgB,aAAc,YAAa,c,8FCtFrMC,EAAW,CACfC,YAAaC,IACbC,QAASD,IACTE,IAAKF,IACLG,GAAIH,IAEJI,QAASC,IACTC,aAAcD,IACdE,SAAUF,IACVG,KAAMH,IACNI,IAAKJ,IAELK,aAAcC,IACdC,SAAUD,IACVE,KAAMF,IACNG,IAAKH,IAELI,OAAQC,IACRvB,UAAWwB,IACXvB,SAAUwB,IACVvB,UAAWwB,IACXC,MAAOC,KAGHC,EAAc,SAAC1T,GAAD,OAClBkS,EAASlS,GAAW,cAAC,IAAD,CAAiBqQ,KAAM6B,EAASlS,GAAU4P,UAAU,UAAa,O,yJCrBxE,SAAS+D,EAAoBjE,GAAQ,IAC5CnK,EAAkEmK,EAAlEnK,YAAaE,EAAqDiK,EAArDjK,eAAgBmO,EAAqClE,EAArCkE,eAAgBC,EAAqBnE,EAArBmE,OAAQxE,EAAaK,EAAbL,SAC3D,IAAK9J,EAAa,OAAOsO,EACzB,GAAInD,MAAMoD,QAAQvO,GAAc,CAC9B,IAD8B,EAC1BwO,EAAyBtO,EACzBuO,EAAsB,KAFI,cAGDzO,GAHC,IAG9B,2BAA0C,CAAC,IAAhC0O,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UAJnE,8BAUzBF,IACHD,EAAyB,EACzBC,EAAsBzO,EAAY,IAIpC,IAAI4O,EAAkC,IAA3BJ,EAA+B,aACvC,iCAAOC,EAAoBI,UAA3B,IAAwCJ,EAAoBE,SAAW,EAA/B,YAAyCH,EAAzC,iBAAwEA,EAAyB,EAAI,IAAM,IAAQ,MAC1JM,EAAQ,cAAC,IAAD,CAAOC,QAAoC,IAA3BP,EAA+B,YAAc,UAA7D,SAAyEI,IACjFI,EAAQ,EACZ,OAAO,eAAC,IAAD,WACL,cAAC,IAASC,OAAV,CAAiBC,KAAK,KAAKpF,SAAUA,EAArC,SACE,qBAAIO,UAAU,gBAAd,UAA+BiE,EAA/B,IAAwCQ,OAE1C,eAAC,IAASK,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMhB,EAAe,IAA7C,SACE,gDAEDrO,EAAYlB,KAAI,SAACwQ,EAAS/Q,GAAV,OACf,cAAC,IAAMgR,SAAP,UAAyB,YAAIpE,MAAMmE,EAAQX,UAAU7S,QAAQgD,KAAI,SAAA0Q,GAAC,OAAIA,EAAI,KAAG1Q,KAAI,SAAA2Q,GAC/E,IAAIC,IAAcV,EAClB,OAAO,eAAC,IAASI,KAAV,CAA+BC,QAAS,kBAAMhB,EAAeqB,IAA7D,UACJJ,EAAQT,UAAWJ,EAAoBE,SAAW,EAA/B,YAAwCc,EAAxC,iBAAsDA,EAAQ,EAAI,IAAM,IAAO,KAD1EC,OAFRnR,YAStB,GAAIyB,EAAY2O,SAAW,EAAG,CAEnC,IAAIG,EAAQ,cAAC,IAAD,CAAOC,QAA4B,IAAnB7O,EAAuB,YAAc,UAArD,SAAiEA,EAAiB,EAAjB,UAAwBA,EAAxB,iBAA+CA,EAAiB,EAAI,IAAM,IAAO,eAC9J,OAAO,eAAC,IAAD,WACL,cAAC,IAAS+O,OAAV,CAAiBC,KAAK,KAAKpF,SAAUA,EAArC,SACE,qBAAIO,UAAU,gBAAd,UAA+BiE,EAA/B,IAAwCQ,OAE1C,eAAC,IAASK,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMhB,EAAe,IAA7C,SACE,gDAED,YAAIlD,MAAMnL,EAAY2O,UAAU7S,QAAQgD,KAAI,SAAA0Q,GAAC,OAAIA,EAAI,KAAG1Q,KAAI,SAAA2Q,GAAK,OAChE,cAAC,IAASL,KAAV,CAA2BC,QAAS,kBAAMhB,EAAeoB,IAAzD,mBACMA,EADN,iBACoBA,EAAQ,EAAI,IAAM,KADlBA,YAKrB,OAA6B,IAAzBzP,EAAY2O,SAEd,cAAC,IAAD,CAAQO,KAAK,KAAKG,QAAS,kBAAMhB,EAAenO,EAAiB,EAAI,IAAI4J,SAAUA,EAAnF,SACL,qBAAIO,UAAU,OAAd,UAAqB,cAAC,IAAD,CAAiBS,KAAM5K,EAAiByP,IAAgBC,MAA7E,IAA2FtB,YAHxF,I,wGC7DT,SAASuB,EAAT,GAAuD,IAAbC,EAAY,EAAZA,SACxC,OAAOjW,IAAkBkW,sBAAsBC,MAAM,SAACC,EAAGC,GACvD,OAAID,EAAIC,GAAW,EACfD,EAAIC,EAAU,EAEX,KACLpR,KAAI,SAAA5F,GAAY,OAClB,cAAC,IAASkW,KAAV,CAAkCC,QAAS,kBAAMS,EAAS5W,IAA1D,SACGH,IAAUgD,QAAQ7C,IADDA,Q,yHCwBTiX,IA3BG,SAAC,GAAD,IAAGvU,EAAH,EAAGA,KAAMwU,EAAT,EAASA,WAAY5S,EAArB,EAAqBA,MAAOoM,EAA5B,EAA4BA,YAAayG,EAAzC,EAAyCA,aAAcxG,EAAvD,EAAuDA,cAAeyG,EAAtE,EAAsEA,QAASxG,EAA/E,EAA+EA,SAAayG,EAA5F,sHAChB,eAAC,IAAD,2BAAgBA,GAAhB,cACGH,EAAa,cAAC,IAAWI,QAAZ,UAAqBJ,IAAmC,KACtE,cAAC,IAAWI,QAAZ,UACE,cAAC,IAAWC,KAAZ,UAAkB7U,MAEpB,cAAC,IAAD,CACE+N,MAAO2G,EACP1G,YAAaA,EACbpM,MAAOA,EACPqM,cAAeA,EACfC,SAAUA,IAEXwG,EAAW,cAAC,IAAWI,OAAZ,UACV,cAAC,IAAWD,KAAZ,kBACsB,UACNE,IAAjBN,EAA6B,cAAC,IAAWK,OAAZ,UAC5B,cAAC,IAAD,CAAgBE,UAAU,MACxBC,QAAS,cAAC,IAAD,wDADX,SAEE,sBAAMxG,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAQgF,QAAS,kBAAMxF,EAAcwG,IAAevG,SAAUA,GAAYtM,IAAU6S,EAAcS,MAAOtT,IAAU6S,EAAe,CAAEU,cAAe,QAAW,GAA9J,SACE,cAAC,IAAD,CAAiBjG,KAAMkG,cAIR,W,gIC5B3B,SAASC,EAAT,GAA2F,IAAD,QAA/DC,aAA+D,MAAvD,GAAuD,EAAnD3Q,EAAmD,EAAnDA,IAAK4Q,EAA8C,EAA9CA,OAA8C,IAAtCC,aAAsC,MAA9B,EAA8B,MAA3BC,YAA2B,MAApB,GAAoB,MAAhBtC,eAAgB,MAAN,GAAM,EAClE,qBAAXoC,GAAyC,kBAAR5Q,IAC1C4Q,EAAS5Q,EACTA,OAAMoQ,GAER,IAAMW,OAAeX,IAARpQ,EAAoBA,EAAM4Q,EAAS,EAC5CI,EAAU,GAAIC,EAAW,GAM7B,OALIL,GAAmB,IAATG,EAAYC,EAAO,UAAGJ,SAAH,aAAG,EAAQM,QAAQL,QAChCT,IAAXQ,IAAsBI,EAAO,UAAGhR,SAAH,aAAG,EAAKkR,QAAQL,IAClDG,IAASA,EAAU,uBAAMlH,UAAS,eAAU0E,GAAzB,UAAqCwC,EAASF,MACxD,IAATC,IAAYE,EAAW,uBAAMnH,UAAS,eAAUiH,EAAO,EAAI,UAAY,UAAhD,UAA6DA,EAAO,EAAI,IAAM,GAA9E,OAAkFA,QAAlF,IAAkFA,OAAlF,EAAkFA,EAAMG,QAAQL,GAAQC,MAE5H,cAAC,IAAD,CAAKK,GAAG,KAAR,SAAa,eAAC,IAAD,WAClB,cAAC,IAAD,UAAK,4BAAIR,MACT,eAAC,IAAD,CAAKQ,GAAG,OAAR,UAAgBH,EAASD,EAAO,IAAM,GAAIE,UAG/B,SAASG,EAAT,GAA8G,IACvHpR,EAAK4Q,EAAQC,EAAOC,EAAMtC,EADMnV,EAAsF,EAAtFA,UAAwCgY,GAA8C,EAA3EhY,UAAaV,aAA8D,EAA9C0Y,eAAeC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,SAAUrX,EAAW,EAAXA,QAE3GyW,EAAQ,GACZ,GAAuB,kBAAZzW,EAAsB,CAC/B,GAAIoX,GAAYD,EAAe,CAAC,IAAD,QAG7BrR,EAAG,iBAAGsR,QAAH,IAAGA,GAAH,UAAGA,EAAUrN,kBAAb,aAAG,EAAuB/J,UAA1B,QAAsC,EACzC0W,EAAM,iBAAGS,QAAH,IAAGA,GAAH,UAAGA,EAAepN,kBAAlB,aAAG,EAA4B/J,UAA/B,QAA2C,MAC5C,CAAC,IAAD,IACCsX,EAAQF,GAAsBD,EAEpCrR,EAAG,iBAAGwR,QAAH,IAAGA,GAAH,UAAGA,EAAOvN,kBAAV,aAAG,EAAoB/J,UAAvB,QAAmC,EAEtC,IAAMuX,EAAU,WAChBb,EAASpY,IAAU6I,yBAAyBhI,EAAWa,EAASuX,MACrDA,IAAYb,OAASR,GAChB,YAAZlW,EACF0W,EAASpY,IAAU6I,yBAAyBhI,EAAW,eACpC,aAAZa,EACP0W,EAASpY,IAAU6I,yBAAyBhI,EAAW,gBACpC,aAAZa,IACP0W,EAASpY,IAAU6I,yBAAyBhI,EAAW,gBAAkBb,IAAU6I,yBAAyBhI,EAAW,cAE3HyX,EAAOY,IAAKC,YAAYzX,GACxB2W,EAAQa,IAAKE,UAAU1X,GACvByW,EAAQ,iCAAO/C,YAAY1T,GAAnB,IAA8BwX,IAAKG,YAAY3X,UAClD,CAAC,IAAD,IAQ0B,IAPzBsX,EAAQF,GAAsBD,EAC5BzY,EAAwCsB,EAAxCtB,UAAW8F,EAA6BxE,EAA7BwE,aAAcC,EAAezE,EAAfyE,WAC3BC,EAAQpG,IAAUiG,eAAe+S,EAAMvN,WAAYrL,EAAW8F,EAAcC,GAC5EmT,EAAetZ,IAAUsG,oBAAoBF,EAAO,UAAW4S,EAAMvN,YAI3E,GAHA0M,EAAQ,sBAAM7G,UAAS,eAAUgI,GAAzB,SAA0CtZ,IAAUsG,oBAAoBF,EAAO,OAAQ4S,EAAMvN,cACrG4M,EAAQrY,IAAUsG,oBAAoBF,EAAO,QAAS4S,EAAMvN,WAAY,GACxEjE,EAAG,UAAGxH,IAAUsG,oBAAoBF,EAAO,UAAW4S,EAAMvN,mBAAzD,iBAAG,EAAoE,UAAvE,aAAG,SAAyEuN,EAAMvN,YACjFqN,GAAYD,EACdT,EAAM,UAAGpY,IAAUsG,oBAAoBF,EAAO,UAAWyS,EAAcpN,mBAAjE,iBAAG,EAA4E,UAA/E,aAAG,SAAiFoN,EAAcpN,YAK5G,OADIsN,GAAY/Y,IAAU2I,YAAY9H,EAAWa,KAAUsU,EAAU,WAC9D,cAACkC,EAAD,eAAqB,CAAE1Q,MAAK4Q,SAAQC,QAAOC,OAAMtC,UAASmC,a,2TCpDnE,SAASoB,EAAT,GAA6G,IAAD,IAAlF1Y,UAAaV,EAAqE,EAArEA,aAAqE,IAAvD6L,oBAAuD,MAAxC,OAAwC,EAA9BwN,EAA8B,EAA9BA,gBAAiBlI,EAAa,EAAbA,UAC5E,OAAjBtF,IAA0BA,EAAe,QACzC,IAAMyN,EAAazZ,IAAUmD,gBAAgBhD,GAC7C,MAAO,CAAC,OAAQ,QAAS,QAAQgC,SAASsX,IAAe,eAAC,IAAD,CAAmBnI,UAAWA,EACrFD,KAAK,QAAQxO,KAAK,eAAeyU,aAActL,EAAcwF,SAAU,SAAChK,GAAD,OAASgS,EAAwB,SAARhS,EAAiB,KAAOA,IADjE,UAEvD,cAAC,IAAD,CAAc/C,MAAO,OAAQuR,QAA0B,SAAjBhK,EAA0B,UAAY,UAA5E,0BACgB,SAAfyN,GAAyB,cAAC,IAAD,CAAchV,MAAO,gBAAiBuR,QAA0B,kBAAjBhK,EAAmC,UAAY,UAA9F,SACxB,uBAAMsF,UAAU,gBAAhB,4BAA+C,cAAC,IAAD,CAAOoI,IAAKrK,IAAOC,SAASM,MAAO0B,UAAU,gBAA5F,IAA6G,cAAC,IAAD,CAAOoI,IAAKrK,IAAOC,SAASO,KAAMyB,UAAU,qBAE3I,SAAfmI,GAAyB,cAAC,IAAD,CAAchV,MAAO,YAAauR,QAA0B,cAAjBhK,EAA+B,UAAY,UAAtF,SACxB,uBAAMsF,UAAU,YAAhB,wBAAuC,cAAC,IAAD,CAAOoI,IAAKrK,IAAOC,SAASE,KAAM8B,UAAU,gBAAnF,IAAoG,cAAC,IAAD,CAAOoI,IAAKrK,IAAOC,SAASO,KAAMyB,UAAU,qBAElI,UAAfmI,GAA0B,cAAC,IAAD,CAAchV,MAAO,iBAAkBuR,QAA0B,mBAAjBhK,EAAoC,UAAY,UAAhG,SACzB,uBAAMsF,UAAU,gBAAhB,6BAAgD,cAAC,IAAD,CAAOoI,IAAKrK,IAAOC,SAASO,KAAMyB,UAAU,gBAA5F,IAA6G,cAAC,IAAD,CAAOoI,IAAKrK,IAAOC,SAASM,MAAO0B,UAAU,qBAE5I,SAAfmI,GAAyB,cAAC,IAAD,CAAchV,MAAO,YAAauR,QAA0B,cAAjBhK,EAA+B,UAAY,UAAtF,SACxB,uBAAMsF,UAAU,YAAhB,wBAAuC,cAAC,IAAD,CAAOoI,IAAKrK,IAAOC,SAASO,KAAMyB,UAAU,gBAAnF,IAAoG,cAAC,IAAD,CAAOoI,IAAKrK,IAAOC,SAASE,KAAM8B,UAAU,wBAItJ,SAASqI,EAAT,GAA4D,IAAnC7N,EAAkC,EAAlCA,QAAS8N,EAAyB,EAAzBA,WAAYtI,EAAa,EAAbA,UAC5C,OAAO,eAAC,IAAD,CAAmBD,KAAK,QAAQ5M,MAAOqH,EAASjJ,KAAK,aAAa2O,SAAUoI,EAAYtI,UAAWA,EAAnG,UACL,cAAC,IAAD,CAAc7M,MAAM,SAASuR,QAAqB,WAAZlK,EAAuB,UAAY,UAAzE,sBACA,cAAC,IAAD,CAAcrH,MAAM,MAAMuR,QAAqB,QAAZlK,EAAoB,UAAY,UAAnE,iCACA,cAAC,IAAD,CAAcrH,MAAM,UAAUuR,QAAqB,YAAZlK,EAAwB,UAAY,UAA3E,6BAIJ,SAAS+N,EAAT,GAA+E,EAAjDhZ,UAAkD,IAA1BV,EAAyB,EAAtCU,UAAaV,aAAgB6Y,EAAS,EAATA,MACpE,OAAO,8BACJtY,OAAOC,QAAQX,IAAUgI,mBAAmBgR,EAAMvN,aAAa1F,KAAI,YAA0B,IAAD,mBAAvB3F,EAAuB,KAAZiG,EAAY,KACvFyT,EAAS,GAKb,OAJ+BA,EAAb,cAAd1Z,EAAoC,cACjB,kBAAdA,EAAwC,8BAC1B,mBAAdA,EAAyC,0BACpCJ,IAAUoF,cAAcjF,EAAcC,EAAWA,GACxD,eAAC,IAAD,CAAM2Z,GAAG,cAAclE,KAAK,YAA4BvE,UAAU,aAAlE,UACL,cAAC,IAAK0I,OAAN,UAAcF,IACd,cAAC,IAAKG,KAAN,CAAW3I,UAAU,MAArB,SACE,cAAC,IAAD,CAAWA,UAAU,QAArB,SACGjL,EAAON,KAAI,SAACK,EAAOD,GAAgB,IAAD,QAEjC,GAAqB,kBAAVC,EAAoB,CAAC,IAAD,IACvB8T,EAAiBhB,IAAKiB,+BAA+B7O,YAAe,OAAC0N,QAAD,IAACA,GAAD,UAACA,EAAOvN,kBAAR,aAAC,EAAmBF,UAAW,CAACnF,IAAnF,OAA4F4S,QAA5F,IAA4FA,GAA5F,UAA4FA,EAAOvN,kBAAnG,aAA4F,EAAmBF,WAAW6O,UACjJ,OAAOrS,QAAQmS,EAAehP,SAAW,eAAC,IAAD,CAAuB6O,GAAG,eAAelE,KAAK,YAAYvE,UAAU,OAApE,UACvC,cAAC,IAAU4E,OAAX,CAAkBmE,GAAIC,IAAKN,OAAQ1I,UAAU,qBAAqB0E,QAAQ,OAAOuE,SAAQ,eAAUpU,GAAnG,SACG+S,IAAKsB,UAAUpU,EAAO4S,EAAMvN,cAE/B,cAAC,IAAUgP,SAAX,CAAoBF,SAAQ,eAAUpU,GAAtC,SACE,cAAC,IAAK8T,KAAN,CAAW3I,UAAU,MAArB,SACE,qBAAKA,UAAU,QAAf,SACG4I,EAAenU,KAAI,SAAA2U,GAAM,OACxB,oBAAGpJ,UAAU,OAAb,UAAkC4H,IAAKsB,UAAUE,EAAQ1B,EAAMvN,YAA/D,MAA8E,gCAAQyN,IAAKyB,aAAaD,EAAQ1B,EAAMvN,WAAYuN,EAAMvN,WAAWF,WAAW,OAArImP,cARiBvU,GAgBtD,IAAMyU,EAAc5a,IAAUiG,eAAe+S,EAAMvN,WAAYrF,EAAMhG,UAAWgG,EAAMF,aAAcE,EAAMD,YACpG0U,EAAY7a,IAAUsG,oBAAoBsU,EAAa,OAAQ5B,EAAMvN,YACrEqP,EAAe9a,IAAUsG,oBAAoBsU,EAAa,UAAW5B,EAAMvN,YAC3EsP,EAAmB/a,IAAUsG,oBAAoBsU,EAAa,cAAe5B,EAAMvN,YAvBxD,EAwBczL,IAAUsG,oBAAoBsU,EAAa,UAAW5B,EAAMvN,WAAY,IAxBtF,mBAwB1BuP,EAxB0B,KAwBZC,EAxBY,KAyBjC,IAAKD,IAAiBC,EAAwB,OAAO,KACrD,IAAMC,EAAU,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAehC,EAAMvN,mBAAxB,iBAAG,EAAkCiN,eAArC,aAAG,UACbwB,EAAiBhB,IAAKiB,+BAA+B7O,YAAe,OAAC0N,QAAD,IAACA,GAAD,UAACA,EAAOvN,kBAAR,aAAC,EAAmBF,UAAW0P,GAAlF,OAA2GjC,QAA3G,IAA2GA,GAA3G,UAA2GA,EAAOvN,kBAAlH,aAA2G,EAAmBF,WAAW6O,UAChK,OAAO,eAAC,IAAD,CAAuBL,GAAG,eAAelE,KAAK,YAAYvE,UAAU,OAApE,UACL,eAAC,IAAU4E,OAAX,CAAkBmE,GAAIC,IAAKN,OAAQ1I,UAAU,qBAAqB0E,QAAQ,OAAOuE,SAAQ,eAAUpU,GAAnG,UACE,mBAAGmL,UAAS,eAAUwJ,GAAtB,SAAuCD,IADzC,IACwD,sBAAMvJ,UAAU,YAAhB,SAA6B4J,OAErF,cAAC,IAAUT,SAAX,CAAoBF,SAAQ,eAAUpU,GAAtC,SACE,cAAC,IAAK8T,KAAN,CAAW3I,UAAU,MAArB,SACE,sBAAKA,UAAU,QAAf,UACE,oBAAGA,UAAU,OAAb,UAAoB,mBAAGA,UAAS,eAAUwJ,GAAtB,SAAuCD,IAA3D,IAA0E,sBAAMvJ,UAAU,YAAhB,SAA6B4J,IAAvG,MAA4H,gCAAQH,OACnIb,EAAenU,KAAI,SAAA2U,GAAM,OACxB,oBAAGpJ,UAAU,OAAb,UAAkC4H,IAAKsB,UAAUE,EAAQ1B,EAAMvN,YAA/D,MAA8E,gCAAQyN,IAAKyB,aAAaD,EAAQ1B,EAAMvN,WAAYuN,EAAMvN,WAAWF,WAAW,OAArImP,eATjBvU,YAhC0B/F,QAuD1D,IAAM+a,EAAqB,SAAC,GAA4B,IAA1BZ,EAAyB,EAAzBA,SAAUa,EAAe,EAAfA,SAChCC,EAAkBC,qBAAWC,KAC7BC,EAAmBC,YACvBlB,GACA,kBAAMa,GAAYA,EAASb,MAEvBmB,EAAWL,IAAoBd,EACrC,OACE,eAAC,IAAD,CAAQjE,QAASkF,EAAjB,UACE,cAAC,IAAD,CAAiBzJ,KAAM2J,EAAWC,IAAmBC,IAAkBtK,UAAS,gBAAWoK,EAAW,gBAAkB,MACxH,qCAAeA,EAAW,UAAY,aAK7B,SAASG,EAAT,GAA6H,IAAtFhb,EAAqF,EAArFA,UAAwBiL,EAA6D,EAA1EjL,UAAaiL,QAAWgQ,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,YAAajD,EAA2B,EAA3BA,SAAUD,EAAiB,EAAjBA,cAElHG,EAAQF,GAAsBD,EACpC,OAAO,eAAC,IAAD,WACL,eAAC,IAAD,CAAMkB,GAAG,eAAelE,KAAK,YAAYvE,UAAU,OAAnD,UACE,cAAC,IAAK0I,OAAN,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,sBAAM1I,UAAU,UAAhB,wCACA,2EAEF,cAAC,IAAD,CAAKqH,GAAG,OAAR,SAEE,cAACY,EAAD,eAAoB,CAAE1Y,YAAW2Y,gBAAiB,SAAAwC,GAAC,OAAIF,EAAS,CAAE9P,aAAcgQ,UAElF,cAAC,IAAD,CAAKrD,GAAG,OAAR,SACE,cAACwC,EAAD,CAAoBd,GAAI4B,IAAQ1B,SAAS,aAI/C,cAAC,IAAUE,SAAX,CAAoBF,SAAS,IAA7B,SACE,eAAC,IAAKN,KAAN,WACE,cAAC,IAAD,CAAK3I,UAAU,OAAf,SAAsB,cAAC,IAAD,UACpB,cAAC,IAAD,CAAQ0E,QAAQ,UAAhB,SACE,mBAAGkG,KAAK,uEAAuEzK,OAAO,SAAS0K,IAAI,aAAnG,4FAKJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAKxD,GAAI,GAAIyD,GAAI,EAAG9K,UAAU,OAA9B,SACE,cAAC,IAAD,CACEzO,KAAM,4CACN4B,MAAOzE,IAAU6I,yBAAyBhI,EAAW,cACrDgQ,YAAaqI,IAAKmD,eAAe,cACjC/E,aAActX,IAAUyB,iBAAiBZ,EAAW,cACpDiQ,cAAe,SAACtJ,GAAD,cAASuU,QAAT,IAASA,OAAT,EAASA,EAAc,aAAcvU,QAGvDxH,IAAUqD,mBAAmB0C,KAAI,SAAAmC,GAChC,IAAIxG,EAAqB,aAAXwG,EAAwB,qBAAxB,UAAkDA,EAAlD,cACVoU,EAA6B,aAAXpU,EAAwB,yBAAxB,UAAsDA,EAAtD,kBAClBqU,EAAkBvc,IAAU6I,yBAAyBhI,EAAWyb,GACpE,OAAO,cAAC,IAAD,CAAK3D,GAAI,GAAIyD,GAAI,EAAgB9K,UAAU,OAA3C,SACL,cAAC,IAAD,CACE+F,WAAY,eAAC,IAAD,CAAQrB,QAAS9N,EAAQoO,QAAS,kBAAMyF,EAAYO,GAAkBC,IAAkBjL,UAAU,mBAAlG,UACV,cAAC,IAAD,CAAiBS,KAAMwK,EAAkB3F,IAAgBC,IAAUvF,UAAU,UADnE,eAGZzO,KAAM,4BAAIqW,IAAKmD,eAAe3a,KAC9B+C,MAAOzE,IAAU6I,yBAAyBhI,EAAWa,GACrDmP,YAAaqI,IAAKmD,eAAe3a,GACjC4V,aAActX,IAAUyB,iBAAiBZ,EAAWa,GACpDoP,cAAe,SAACtJ,GAAD,cAASuU,QAAT,IAASA,OAAT,EAASA,EAAcra,EAAS8F,IAC/CuJ,SAAUwL,KAVkBrU,iBAmB1C,eAAC,IAAD,CAAM6R,GAAG,eAAelE,KAAK,YAA7B,UACE,cAAC,IAAKmE,OAAN,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,sBAAM1I,UAAU,UAAhB,yCACA,gFAEF,cAAC,IAAD,CAAKqH,GAAG,OAAR,SACE,cAACgB,EAAD,eAAmB,CAAE7N,UAAS8N,WAAY,SAAA4C,GAAC,OAAIV,EAAS,CAAEhQ,QAAS0Q,UAErE,cAAC,IAAD,CAAK7D,GAAG,OAAR,SACE,cAACwC,EAAD,CAAoBd,GAAI4B,IAAQ1B,SAAS,aAI/C,cAAC,IAAUE,SAAX,CAAoBF,SAAS,IAA7B,SACE,cAAC,IAAKN,KAAN,CAAW3I,UAAU,MAArB,SACE,cAACuI,EAAD,CAAoBhZ,UAAWA,EAAWmY,MAAOA,gB,qFClMpD,SAASyD,IAAkB,IAAD,EACZxL,qBAAVtH,EADsB,oBAG/B,OADwB+S,uBAAY,kBAAM/S,EAAO,MAAK,M,iQCiBzC,SAASgT,EAAT,GAAoG,IAAD,IAA3EC,EAA2E,EAA3EA,WAAYC,EAA+D,EAA/DA,YAAa9D,EAAkD,EAAlDA,SAAU+D,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,SAAgC,IAAtBC,kBAAsB,SAC1GC,EAAkBR,cACxBS,qBAAU,WAAO,IAAD,EAGd,OAFA,UAAAhU,IAASiU,uBAAT,SAA0B/J,KAAK6J,GAC3BL,GAAYxb,IAAiBgc,oBAAoBR,EAAYK,GAC1D,WACDL,GAAYxb,IAAiBic,sBAAsBT,EAAYK,MAEpE,CAACL,EAAYK,IAChB,IAAMK,EAAcZ,uBAClB,SAACla,GAAD,OAAa0G,IAASqU,oBAAoBX,EAAYpa,KACtD,CAACoa,IAEH,IAAKA,IAAeC,EAAa,OAAO,KACxC,IAAM/S,EAAM+S,GAA4Bzb,IAAiBL,IAAI6b,GAC7D,IAAK9S,EAAK,OAAO,KACZA,EAAI0T,mBAAmBtU,IAASuU,mBAAmB3T,GAhBwD,IAiBxGgB,EAA4IhB,EAA5IgB,OAAQ1B,EAAoIU,EAApIV,QAjBgG,EAiBoCU,EAA3HU,gBAjBuF,MAiB5E,EAjB4E,IAiBoCV,EAA7G3F,aAjByE,MAiBjE,EAjBiE,EAiB9DmG,EAAkGR,EAAlGQ,YAjB8D,EAiBoCR,EAArFY,gBAjBiD,MAiBtC,GAjBsC,IAiBoCZ,EAAtER,gBAjBkC,MAiBvB,GAjBuB,EAiBnBoU,EAAuD5T,EAAvD4T,KAjBmB,EAiBoC5T,EAAjD6T,yBAjBa,MAiBO,EAjBP,IAiBoC7T,EAA1B0T,yBAjBV,MAiB8B,EAjB9B,EAkB5GI,EAAgBZ,EAAwB,EAAXxS,EAAerG,EAC5C0Z,EAAeb,GAAc7Y,IAAqB,EAAXqG,EACvCsT,EAAc,uBAAMxM,UAAWuM,EAAe,cAAgB,GAAhD,UAAqD3U,IAASqB,iBAAiBD,EAAaE,EAAUoT,EAAe,IAAK1E,IAAKC,YAAY7O,MACzJyT,GAAgBrT,EAASsT,OAAM,SAAAC,GAAK,aAAMA,EAAMzZ,KAAQyZ,EAAMzZ,KAAOyZ,EAAMxZ,QAAnB,OAA4BwZ,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAOC,aAAnC,aAA4B,EAAchT,WAEtG,OAAQ,eAAC,IAAD,CAAMoG,UAAU,QAAQ6M,OAAM,UAAK3T,EAAL,QAAqBuP,GAAG,eAAelE,KAAK,YAA1E,UACN,cAAC,IAAKmE,OAAN,CAAa1I,UAAU,MAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKqH,GAAI,EAAGyF,GAAI,EAAhB,SACE,cAAC,IAAD,CAAO1E,IAAKxQ,IAASmV,aAAavT,EAAQ1B,GAAUkI,UAAS,4BAAuB9G,EAAvB,YAA2C8T,WAAS,MAEnH,eAAC,IAAD,CAAKhN,UAAU,OAAf,UACE,6BAAI,4BAAIpI,IAASqV,aAAazT,EAAQ1B,EAAS,0BAC/C,gCAAMF,IAASsV,oBAAoBpV,GAAnC,YAAkDjF,cAIxD,eAAC,IAAK8V,KAAN,CAAW3I,UAAU,0BAArB,UACE,eAAC,IAAKmN,MAAN,WACE,8BAAMvV,IAASwV,WAAW5T,EAAQ,kBAClC,uBAAOwG,UAAU,gBAAjB,SAAiC,cAAC,IAAD,CAAOY,MAAO1H,SAEjD,oBAAI8G,UAAU,OAAd,SACE,8BAAI4H,IAAKG,YAAY/O,GAArB,IAAoCwT,OAEtC,cAAC,IAAD,CAAKxM,UAAU,OAAf,SACG5G,EAAS3E,KAAI,SAAC6E,EAAMpF,GAAO,IAAD,EACzB,IAAKoF,IAASA,EAAKnG,MAAO,OAAO,KACjC,IAAIka,GAAe,OAAJ/T,QAAI,IAAJA,GAAA,UAAAA,EAAMsT,aAAN,eAAahT,SAAU,EAClC0T,GAAiB,OAAJhU,QAAI,IAAJA,OAAA,EAAAA,EAAMgU,aAAc,EACjCC,EAAa,GAAmB,GAAbD,EACnBE,EAAW5F,IAAKG,YAAYzO,EAAKpG,KACrC,OAAQ,eAAC,IAAD,CAAamU,GAAI,GAAjB,UACN,cAAC,IAAD,CAAO3C,QAAS2I,EAAQ,UAAMA,EAAN,QAAuB,SAAUrN,UAAU,mBAAnE,SAAsF,4BAAIqN,GAAsB,QAAiB,IACjI,uBAAMrN,UAAS,eAAUqN,EAAV,QAAf,UAA0CG,EAA1C,WAAwD5F,IAAKC,YAAYvO,EAAKpG,KAAOoG,EAAKnG,MAAMiU,QAAQ,GAAK9N,EAAKnG,OAAlH,OAA0HyU,IAAKC,YAAYvO,EAAKpG,SAChJ,uBAAM8M,UAAU,cAAcyG,MAAO,CAAEgH,QAASF,GAAhD,UAA+DD,EAAWlG,QAAQ,GAAlF,SAHgBlT,QAOtB,eAAC,IAAD,CAAK8L,UAAU,UAAf,UACE,eAAC,IAAD,+BAAsB,cAAC,IAAD,CAAciG,QAASoG,EAAmBqB,MAAOjB,GAAezM,UAAU,cAA1E,0BACnBqM,QADmB,IACnBA,OADmB,EACnBA,EAAmBjF,QAAQ,UADR,QACciF,EAAoB,SAEvDA,IAAsBH,GAAqB,eAAC,IAAD,CAAKlM,UAAU,aAAf,0BAAyC,cAAC,IAAD,CAAciG,QAASiG,EAAmBwB,MAAOjB,GAAjD,0BAClFP,QADkF,IAClFA,OADkF,EAClFA,EAAmB9E,QAAQ,UADuD,QACjD8E,EAAoB,eAK5D,cAAC,IAAKyB,OAAN,CAAa3N,UAAU,OAAvB,SACE,eAAC,IAAD,CAAKA,UAAU,4CAAf,UACGyH,EAAW,cAAC,IAAD,CAAKJ,GAAG,OAAR,SACV,eAAC,IAAD,WACE,cAAC,IAASzC,OAAV,CAAiBC,KAAK,KAAK7E,UAAU,YAArC,SAAkDtR,IAAUgD,QAAQsG,EAAU,eAC9E,eAAC,IAAS8M,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMgH,EAAY,KAA1C,uBACA,cAAC,IAAS4B,QAAV,IACA,cAAC,IAAD,CAAgCnI,SAAU,SAAAoI,GAAI,OAAI7B,EAAY6B,cAG3D,cAAC,IAAD,CAAKxG,GAAG,OAAR,SAAe,4BAAI3Y,IAAUgD,QAAQsG,EAAU,iBACxD,cAAC,IAAD,CAAKqP,GAAG,OAAR,SACE,eAAC,IAAD,WACGI,EAAW,cAAC,IAAD,CAAgBlB,UAAU,MACpCC,QAAS,cAAC,IAAD,6IADC,SAEV,sBAAMxG,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAQ6E,KAAK,KACXpF,SAAUzH,EACVyO,MAAOzO,EAAW,CAAE0O,cAAe,QAAW,GAC9C1B,QAAS,WACPxM,EAAI4T,MAAQA,EACZtc,IAAiBuI,OAAOG,IAL5B,SAOE,cAAC,IAAD,CAAiBiI,KAAO2L,GAAQpU,EAAY8V,IAASC,IAAY/N,UAAU,gBAG7D,KACnBvJ,QAAQ+U,IAAW,cAAC,IAAD,CAAQ9G,QAAQ,OAAOG,KAAK,KAC9CG,QAASwG,EADS,SAElB,cAAC,IAAD,CAAiB/K,KAAMuN,IAAQhO,UAAU,YAE1CvJ,QAAQgV,IAAa,cAAC,IAAD,CAAQ/G,QAAQ,SAASG,KAAK,KAClDG,QAASyG,EADW,SAEpB,cAAC,IAAD,CAAiBhL,KAAMwN,IAAYjO,UAAU,2B,uFCxH5C,SAASkO,EAAapO,GAAQ,IACrCmG,EAA6BnG,EAA7BmG,QAASyH,EAAoB5N,EAApB4N,MAAOS,EAAarO,EAAbqO,SAClBC,EAAcV,EAAoBW,MAAMpI,GAAW,YAAjB,UAAkCqI,KAAKC,MAAgB,IAAVtI,GAAkB,EAA/D,QAAZ,SAC1B,OAAO,cAAC,IAAD,CAAOvB,QAAS0J,EAAYpO,UAA0B,cAAfoO,EAA6B,GAAK,mBAAzE,SAA8FD,M,uICExF,SAASK,EAAT,GAAwJ,IAAxHjf,EAAuH,EAAvHA,UAAwBV,EAA+F,EAA5GU,UAAaV,aAAgB0Y,EAA+E,EAA/EA,cAAeC,EAAgE,EAAhEA,SAAUiH,EAAsD,EAAtDA,iBAAkBhH,EAAoC,EAApCA,SAAoC,IAA1BiH,cAA0B,MAAjB,cAAiB,EACpK,OAAO,cAAC,IAAD,CAAK1O,UAAU,QAAf,SAAwB5Q,OAAOC,QAAQof,GAAkBha,KAAI,YAA0B,IAAD,mBAAvB3F,EAAuB,KAAZiG,EAAY,KACvFyT,EAAS,GAKb,OAJ+BA,EAAb,cAAd1Z,EAAoC,cACjB,kBAAdA,EAAwC,8BAC1B,mBAAdA,EAAyC,0BACpCJ,IAAUoF,cAAcjF,EAAcC,EAAWA,GACxD,cAAC,IAAD,CAAqBkR,UAAU,OAAOqH,GAAI,GAAIyF,GAAI,EAAGhC,GAAI,EAAzD,SACL,eAAC,IAAD,CAAMrC,GAAIiG,EAAQnK,KAAK,YAAYvE,UAAU,QAA7C,UACE,cAAC,IAAK0I,OAAN,UAAcF,IACd,cAAC,IAAKG,KAAN,UACE,cAAC,IAAD,UAAM5T,EAAON,KAAI,SAAAK,GAAK,OAAI,cAAC,IAAD,eAA6C,CAAEvF,YAAWgY,gBAAeC,WAAUC,WAAUrX,QAAS0E,IAApF6Z,KAAKC,UAAU9Z,eAJhDhG,U,8DCHN+f,IATM,SAAC,GAAD,IAAGV,EAAH,EAAGA,SAAH,OACnB,cAAC,IAAD,CACE3H,QAAS,cAAC,IAAD,+BADX,SAGE,+BACG2H,Q,6YC2FQW,MAvFf,YAAoL,IAAD,EAAlJvf,EAAkJ,EAAlJA,UAAkJ,IAAvIA,UAAaV,EAA0H,EAA1HA,aAAc+J,EAA4G,EAA5GA,qBAAwB2O,EAAoF,EAApFA,cAAeC,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,SAAUsH,EAAiD,EAAjDA,YAAavE,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,YAAalS,EAAa,EAAbA,UAEhKmP,EAAQF,GAAsBD,EAC9BpO,EAAsBqO,EAAQ,UAAGA,EAASrN,kBAAZ,aAAG,EAAqBhB,oBAAsB5J,EAAU4J,oBACtFqO,IAAU5O,EAAuB4O,EAAS5O,sBAC9C,IAAMkC,EAAWpM,IAAUgI,mBAAmBgR,EAAMvN,YAGpD,OAAO,qCACJzL,IAAU8H,cAAc3H,IAAiB,cAACmgB,EAAA,EAAD,UAAK,cAACC,EAAA,EAAD,CAAK5H,GAAI,GAAIrH,UAAU,OAAvB,SAC7C,cAACuK,EAAA,EAAD,eAAiC,CAAEhb,YAAWib,WAAUC,cAAajD,WAAUD,uBAEjF,cAACyH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKjP,UAAU,OAAf,SACE,eAACgJ,EAAA,EAAD,CAAMhJ,UAAU,QAAQyI,GAAG,eAAelE,KAAK,YAA/C,UACE,cAACyE,EAAA,EAAKL,KAAN,UACE,cAAC6F,EAAA,EAAD,eAA0B,CAAEjf,YAAWgY,gBAAeC,WAAUiH,iBAAkB3T,EAAU2M,gBAE7FD,EAAW,eAACwB,EAAA,EAAK2E,OAAN,WACV,cAAChD,EAAA,EAAD,CAAQ3F,QAAS,WACftW,IAAU8I,eAAe3I,EAAc2Y,EAAS/P,aACrC,OAAXsX,QAAW,IAAXA,QAFF,sDAIC5V,GAAuB,cAAC+V,EAAA,EAAD,CAAOlP,UAAU,mCAAmC0E,QAAQ,SAA5D,SAAsE,yEAC/E,YAIvB,cAACsK,EAAA,EAAD,CAAKhP,UAAU,QAAf,SACE,cAACiP,EAAA,EAAD,UACE,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAGC,GAAI,EAAGpP,UAAU,OAA7B,SACE,eAACgJ,EAAA,EAAD,CAAMhJ,UAAU,2BAA2ByI,GAAG,eAAelE,KAAK,YAAlE,UACE,cAACyE,EAAA,EAAKN,OAAN,mCACA,cAACM,EAAA,EAAKL,KAAN,CAAW3I,UAAU,cAArB,SACE,cAACgP,EAAA,EAAD,UACG5f,OAAOC,QAAQuI,IAASyX,cAAc3H,EAAM7O,aAAapE,KAAI,mCAAE+E,EAAF,KAAU8V,EAAV,YAC5D,eAACL,EAAA,EAAD,CAAkB5H,GAAI,GAAIrH,UAAU,OAApC,UACE,6BAAKpI,IAASwV,WAAW5T,KACzB,cAACwV,EAAA,EAAD,UACGM,EAAa7a,KAAI,SAAAiF,GAChB,IAAI6V,EAAW3X,IAAS4X,uBAAuBhW,EAAQE,GACnD7D,EAAiB,EACjBF,EAAciC,IAAS6X,wBAAwBjW,EAAQE,GACvD/D,IACFE,EAAiBC,IAAiB4Z,kBAAkB9W,EAAsB,CAAEa,OAAQD,EAAQG,QAASD,IACrGtK,OAAOC,QAAQuI,IAASkC,oBAAoBN,EAAQE,EAAW7D,IAAiBjG,SAAQ,mCAAEQ,EAAF,KAAW8F,EAAX,YACtFqZ,EAASnf,IAAYmf,EAASnf,IAAY,GAAK8F,MAEnD,IAAIyZ,EAAqB,cAAC5L,EAAA,EAAD,CACvBtE,WAAU+H,EACV7R,YAAaA,EACbE,eAAgBA,EAChBmO,eAAgB,SAAC4L,GAAD,OA/CN,SAACpW,EAAQE,EAAW7D,GAApB,cAAuC2U,QAAvC,IAAuCA,OAAvC,EAAuCA,GAAW,SAAAqF,GAAK,MACxF,CAAEjX,qBAAsB9C,IAAiBkO,eAAe6L,EAAMjX,qBAAsB,CAAEa,OAAQD,EAAQG,QAASD,GAAa7D,OA8C3Eia,CAA4BtW,EAAQE,EAAWkW,IACzE3L,OAAQ,eAAC8L,EAAA,EAAD,CAAOrL,QAAQ,UAAf,UAA0BhL,EAA1B,YAEV,OAAO,eAACuV,EAAA,EAAD,CAAqB5H,GAAI,GAAIrH,UAAU,OAAvC,UACL,+BAAK2P,EAAL,IAA0B/X,IAASoY,iBAAiBxW,EAAQE,EAAWgO,EAAMvN,eAC5EoV,EAAW,cAACP,EAAA,EAAD,UACT5f,OAAOC,QAAQkgB,GAAU9a,KAAI,mCAAErE,EAAF,KAAW8F,EAAX,YAC5B,eAAC+Y,EAAA,EAAD,CAAK5H,GAAI,GAAT,UAA4BO,IAAKG,YAAY3X,GAA7C,KAAyD8F,EAAK0R,IAAKC,YAAYzX,KAA7DA,QACb,OALMsJ,UAnBbF,eAkCnBjB,EACCX,IAASC,cAAcpD,KAAI,SAAAqD,GACzB,IAAMU,EAAMD,EAAUjJ,MAAK,SAAAkJ,GAAG,OAAIA,EAAIV,UAAYA,KAClD,OAAOU,EAAM,cAACyW,EAAA,EAAD,CAAKE,GAAI,EAAGC,GAAI,EAAiBpP,UAAU,OAA3C,SACX,cAACqL,EAAA,EAAD,CAAcE,YAAa/S,KADQV,GAE5B,QACNF,IAASC,cAAcpD,KAAI,SAAAqD,GAAO,OACrC4P,EAAMjQ,YAAYK,GAAW,cAACmX,EAAA,EAAD,CAAKE,GAAI,EAAGC,GAAI,EAAoCpP,UAAU,OAA9D,SAC3B,cAACqL,EAAA,EAAD,CAAcC,WAAY5D,EAAMjQ,YAAYK,GAAU2P,SAAUhR,QAAQsY,GAAcrD,WAAYvS,KAD/CuO,EAAMjQ,YAAYK,IAE9D,mB,0GC1ER,SAASmY,EAAsBnQ,GAAQ,IAAD,EAC7CvQ,EAAmGuQ,EAAnGvQ,UAD6C,EACsDuQ,EAAxFvQ,UAAaV,EADqB,EACrBA,aAAcmF,EADO,EACPA,cAAiByT,EAA4C3H,EAA5C2H,SAAUgD,EAAkC3K,EAAlC2K,YAAayF,EAAqBpQ,EAArBoQ,iBADjC,EAEnBvQ,oBAAS,GAFU,mBAE9CwQ,EAF8C,KAEnCC,EAFmC,KAG/Cte,EAAapD,IAAUmD,gBAAgBhD,GACvCuD,EAAgB1D,IAAUyD,iBAAiBtD,GAC3CgE,EAAQnE,IAAU6I,yBAAyBhI,EAAW,kBAC1D,OAAO,eAACyf,EAAA,EAAD,WACL,cAACC,EAAA,EAAD,CAAK5H,GAAI,GAAIyF,GAAI,EAAjB,SAEE,eAAC9D,EAAA,EAAD,CAAMP,GAAG,eAAelE,KAAK,YAAYvE,UAAU,OAAnD,UACE,cAACgJ,EAAA,EAAKqH,IAAN,CAAUjI,IAAK1Z,IAAU4E,QAAQzE,GAAemR,UAAU,iBAC1D,cAACgJ,EAAA,EAAKL,KAAN,UACE,eAACqG,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAK5H,GAAI,GAAT,UACE,+BAAK3Y,IAAUgD,QAAQ7C,GAAvB,IAAsC,cAACyhB,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASlM,GAAakO,UAAU,gBAAzF,IAA0G,cAACsQ,EAAA,EAAD,CAAOlI,IAAG,UAAErK,IAAOS,mBAAT,aAAE,EAAqBpM,GAAgB4N,UAAU,mBACrK,6BAAI,cAAC,IAAD,CAAOY,MAAOlS,IAAUiD,QAAQ9C,GAAegS,SAAO,SAE5D,cAACoO,EAAA,EAAD,UACGkB,EAAY,cAACnB,EAAA,EAAD,UAAK,cAACC,EAAA,EAAD,UAChB,eAACsB,EAAA,EAAD,WACE,cAACA,EAAA,EAAWpK,QAAZ,UACE,cAACoK,EAAA,EAAWnK,KAAZ,qBAEF,cAAC/G,EAAA,EAAD,CAAmBG,cAAe,SAACtJ,GAAD,OAASuU,EAAY,iBAAkB+F,YAAMta,EAAK,EAAG,MAAM/C,MAAON,IACpG,cAAC0d,EAAA,EAAWlK,OAAZ,UACE,cAACsE,EAAA,EAAD,UACE,cAAC,IAAD,CAAiBlK,KAAMkG,IAAQ9B,KAAK,KAAKG,QAAS,kBAAMyF,EAAY,iBAAkB/b,IAAUkC,SAASrB,EAAUe,kBAGvH,cAACigB,EAAA,EAAWlK,OAAZ,UACE,cAACoK,EAAA,EAAD,CACElK,UAAU,SACVC,QAAS,cAACkK,EAAA,EAAD,gFAFX,SAIE,cAAC/F,EAAA,EAAD,CAAQjG,QAAQ,SAASM,QAAS,kBAAMoL,GAAcD,IAAYtL,KAAK,KAAvE,SACE,+BAAM,cAAC,IAAD,CAAiBpE,KAAMkQ,qBAMrC,eAAC3B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,yCAAYpc,OAEb4U,EAAW,cAACwH,EAAA,EAAD,CAAK5H,GAAG,OAAOrH,UAAU,YAAzB,SACV,cAAC2K,EAAA,EAAD,CAAQjG,QAAQ,OAAOM,QAAS,kBAAMoL,GAAcD,IAAYtL,KAAK,KAArE,SACE,+BAAM,cAAC,IAAD,CAAiBpE,KAAMuN,YAExB,UAGf,cAACiB,EAAA,EAAD,CAAK5H,GAAI,GAAT,SACE,eAAC2H,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK5H,GAAI,GAAT,SAAa,6BAAK3Y,IAAU2D,qBAAqBxD,OACjD,cAACogB,EAAA,EAAD,UACE,cAACD,EAAA,EAAD,CAAKhP,UAAU,OAAf,SACG,YAAIc,MAAM,GAAGrP,QAAQgD,KAAI,SAAAP,GAAC,OACzB,cAAC+a,EAAA,EAAD,CAAK5H,GAAI,EAAGrH,UAAU,MAAtB,SACE,cAACsQ,EAAA,EAAD,CAAOlI,IAAK1Z,IAAUiF,oBAAoB9E,EAAcqF,GAAI8L,UAAS,uBAAkBhM,EAAgBE,EAAI,GAAK,eAA3C,mBACnE0c,eAAa,EAAC5L,QAASyC,EAAY,kBACjCyI,EAAkBhc,EAAI,IAAOF,EAAgBE,EAAIA,EAAI,IAAM,QAHhCA,yBAanD,eAAC+a,EAAA,EAAD,CAAK5H,GAAI,GAAIyF,GAAI,EAAjB,UACE,cAAC+D,GAAD,eAA2B/Q,IAC3B,cAACgR,GAAD,eAAoBhR,UAI1B,SAASiR,GAAT,GAAqC,IAAD,EAAhB3gB,EAAgB,EAAhBA,QAAS8F,EAAO,EAAPA,IAC3B,OAAK9F,EACE,eAAC6e,EAAA,EAAD,CAAK5H,GAAI,GAAI+H,GAAI,EAAGpP,UAAU,OAA9B,UACL,+BAAM,8BAAI8D,YAAY1T,GAAhB,IAA2BwX,IAAKG,YAAY3X,QAClD,uBAAM4P,UAAS,sCAAiC4H,IAAKoJ,eAAe5gB,IAApE,WAAqF,OAAH8F,QAAG,IAAHA,GAAA,UAAAA,EAAKkR,eAAL,oBAAAlR,EAAe0R,IAAKE,UAAU1X,MAAa8F,EAAK0R,IAAKC,YAAYzX,SAHhI,KAMvB,SAAS6gB,GAAT,GAAkE,IAAvCC,EAAsC,EAAtCA,MAAsC,IAA/B1c,aAA+B,MAAvB,GAAuB,MAAnB2F,kBAAmB,MAAN,GAAM,EAC/D,OAAwC,IAApC/K,OAAOqC,KAAP,OAAY+C,QAAZ,IAAYA,IAAS,IAAIoF,OAAqB,KAC3C,eAACoP,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAAYvE,UAAU,OAAlD,UACL,cAACgJ,EAAA,EAAKN,OAAN,CAAa1I,UAAU,YAAvB,SAAoCkR,IACpC,cAAClI,EAAA,EAAKL,KAAN,CAAW3I,UAAU,YAArB,SAAiC,cAACgP,EAAA,EAAD,UAC9B5f,OAAOC,QAAQmF,GAAOC,KAAI,mCAAEvB,EAAF,KAAOgD,EAAP,WAAwB,cAARhD,EAAsB,cAAC,IAAMgS,SAAP,UAA4B9V,OAAOC,QAAP,OAAe6G,QAAf,IAAeA,IAAO,IAAIzB,KAAI,mCAAE6F,EAAF,KAAQD,EAAR,YACzH,cAAC0W,GAAD,CAAqB3gB,QAASkK,EAAMpE,IAAK9G,OAAOC,QAAP,OAAegL,QAAf,IAAeA,IAAY,IAAI8W,QAAO,SAACC,EAAD,0BAAQ9W,EAAR,KAAcC,EAAd,YAA8B6W,EAAOjX,EAAWG,GAAQC,IAAY,IAApID,OADqEpH,GAElF,cAAC6d,GAAD,CAAoB3gB,QAAS8C,EAAKgD,IAAKA,GAAxBhD,aAIzB,SAAS2d,GAAsB/Q,GAAQ,IAAD,EACRH,oBAAS,GADD,mBAC/B0R,EAD+B,KACtBC,EADsB,OAEQ3R,oBAAS,GAFjB,mBAE/B4R,EAF+B,KAEdC,EAFc,KAG9BjiB,EAAqGuQ,EAArGvQ,UAH8B,EAGuEuQ,EAA1FvQ,UAAaV,EAHM,EAGNA,aAHM,IAGQ8B,cAHR,MAGiB,GAHjB,EAGuB8W,EAAgD3H,EAAhD2H,SAAU+C,EAAsC1K,EAAtC0K,SAAUjD,EAA4BzH,EAA5ByH,cAAeC,EAAa1H,EAAb0H,SAG1FE,EAAQF,GAAsBD,EAE5BkK,EAAiB,SAACve,EAAKC,GAAN,OAAgBqX,GAAS,SAAAqF,GAI9C,MAFY,QAAR3c,IAAe2c,EAAMlf,OAAOkF,eAAiB,GACjDga,EAAMlf,OAAOuC,GAAOC,EACb,CAAExC,OAAQkf,EAAMlf,YAErB2M,EAAa7M,IAAO+K,oBAAoB7K,EAAOuC,KAC/Cd,EAAgB1D,IAAUyD,iBAAiBtD,GAC3C6iB,EAAuB/gB,EAAOiN,iBAAmBnN,IAAOwM,qBAAqBtM,EAAOuC,IAAKvC,EAAOL,UAChGqhB,EAAsBhhB,EAAOkN,gBAAkBpN,IAAO2M,oBAAoBzM,EAAOuC,IAAKvC,EAAOL,UAC7FshB,EAAoBnhB,IAAO+L,qBAAqB7L,EAAOuC,KACvD2e,EAAmBphB,IAAOiL,mBAAmB/K,EAAOuC,IAAKvC,EAAOgL,iBAAa2K,GAC7EwL,EAAmBrhB,IAAOmL,yBAAyBjL,EAAOuC,IAAKvC,EAAOgL,YAAahL,EAAOkF,oBAAgByQ,GAC1G3Q,EAAclF,IAAOsM,qBAAqBpM,EAAOuC,KACjD2C,EAAiBlF,EAAOkF,eACxBkc,EAAiB,cAAChO,EAAA,EAAD,CACnBpO,YAAaA,EACbE,eAAgBA,EAChBmO,eAAgB,SAAC4L,GAAD,OAAU6B,EAAe,iBAAkB7B,IAC3D3L,OAAQ,+BAAO2N,MAGjB,OAAO,eAAC5I,EAAA,EAAD,CAAMP,GAAG,eAAelE,KAAK,YAAYvE,UAAU,OAAnD,UACL,cAACgJ,EAAA,EAAKN,OAAN,UACE,eAACsG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,4CAEF,cAACA,EAAA,EAAD,CAAK5H,GAAG,OAAR,SACE,cAACsD,EAAA,EAAD,CAAQjG,QAAQ,OAAOG,KAAK,KAAKG,QAAS,kBAAMwM,GAAoBD,IAApE,SACE,iCAAM,cAAC,IAAD,CAAiB9Q,KAAMuR,MAA7B,IAA8CT,EAAkB,aAAe,oBAGlF9J,EAAW,cAACwH,EAAA,EAAD,CAAK5H,GAAG,OAAR,SACV,cAACsD,EAAA,EAAD,CAAQjG,QAAS2M,EAAU,SAAW,OAAQrM,QAAS,kBAAMsM,GAAYD,IAAUxM,KAAK,KAAxF,SACE,iCAAM,cAAC,IAAD,CAAiBpE,KAAM4Q,EAAUV,IAAS3C,MAAhD,IAA4DqD,EAAU,OAAS,cAE1E,UAGb,eAACrI,EAAA,EAAKL,KAAN,WACE,eAACqG,EAAA,EAAD,CAAKhP,UAAU,OAAf,UACE,cAACiP,EAAA,EAAD,CAAK5H,GAAI,GAAIyF,GAAI,EAAjB,SACE,cAACwD,EAAA,EAAD,CAAOlI,IAAK3X,IAAOuM,aAAarM,EAAOuC,KAAM8M,UAAS,4BAAuBvP,IAAO6L,gBAAgB3L,EAAOuC,KAArD,QAAiE8Z,WAAS,MAEjIqE,EAAU,cAACpC,EAAA,EAAD,UACT,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKG,GAAG,OAAO/H,GAAI,EAAGrH,UAAU,YAAhC,SACE,cAACiS,EAAA,EAAD,CAAgBf,MAAOzgB,IAAO0L,cAAcxL,EAAOuC,KAAnD,SACG,YAAI4N,MAAM,GAAGrP,QAAQqX,UAAUrU,KAAI,SAAAvB,GAAG,OAAIA,EAAM,KAAGuB,KAAI,SAAC7C,EAAMsC,EAAGge,GAAV,OAAkB,eAAC,IAAMhN,SAAP,WACxE,cAACiN,EAAA,EAASC,SAAV,UAAuC,cAAC,IAAD,CAAOxR,MAAOhP,KAA7B,OAASA,GAChCxC,OAAOC,QAAQoB,IAAO8M,iBAAiBnL,IAAgBH,QAAO,oDAAgCsK,SAAW3K,KAAM6C,KAAI,mCAAEvB,EAAF,KAAOyK,EAAP,YAClH,cAACwU,EAAA,EAASpN,KAAV,CAAyBC,QAAS,kBAAMyM,EAAe,MAAOve,IAA9D,SACGyK,EAAUpM,MADO2B,MAIpBgB,IAAMge,EAAItY,OAAS,GAAM,cAAEuY,EAAA,EAASvE,QAAX,MAPkEhc,UAWnG,cAACqd,EAAA,EAAD,CAAKG,GAAG,OAAO/H,GAAI,EAAGrH,UAAU,YAAhC,SACE,eAACiS,EAAA,EAAD,CAAgBf,MAAOzgB,IAAOsL,aAAapL,EAAOL,UAAlD,UACE,cAAC6hB,EAAA,EAASC,SAAV,UACE,yDAEDhjB,OAAOC,QAAQ2M,KAAevH,KAAI,mCAAEvB,EAAF,KAAO3B,EAAP,YACjC,cAAC4gB,EAAA,EAASpN,KAAV,CAAyBC,QAAS,kBAAMyM,EAAe,WAAYve,IAAnE,SACG3B,GADiB2B,WAKzB0e,GAAqB,cAAC3C,EAAA,EAAD,CAAKG,GAAG,OAAO/H,GAAI,EAAGrH,UAAU,OAAhC,SACpB,eAACiS,EAAA,EAAD,CAAgBf,MAAK,qBAAgBvgB,EAAOgL,YAAc,GAAKqE,UAAU,QAAzE,UACE,cAACmS,EAAA,EAASC,SAAV,UACE,8DAEF,cAACD,EAAA,EAASvE,QAAV,IACC,YAAI9M,MAAM,GAAGrP,QAAQgD,KAAI,SAAAvB,GAAG,OAC3B,cAACif,EAAA,EAASpN,KAAV,CAAyBC,QAAS,kBAAMyM,EAAe,cAAeve,IAAtE,8BACiBA,EAAM,IADHA,WAK1B,cAAC+b,EAAA,EAAD,CAAK5H,GAAI,GAAIrH,UAAU,OAAvB,SACE,cAAC8F,EAAA,EAAD,CACEvU,KAAM,iCAAM,cAAC,IAAD,CAAiBkP,KAAM4R,IAASrS,UAAU,SAAhD,SACNT,YAAY,gBACZpM,MAAOue,EACPzL,SAAS,EACTzG,cAAe,SAACrM,GAAD,OAAWse,EAAe,kBAAmBte,IAC5D6S,aAAcvV,IAAOwM,qBAAqBtM,EAAOuC,IAAKvC,EAAOL,cAGhEgN,GAAc,cAAC2R,EAAA,EAAD,CAAK5H,GAAI,GAAIrH,UAAU,OAAvB,SACb,cAAC8F,EAAA,EAAD,CACEvU,KAAM,iCAAM,sBAAMyO,UAAU,OAAhB,SAAwB8D,YAAYxG,KAAoBsK,IAAKG,YAAYzK,MACrFiC,YAAY,iBACZpM,MAAOwe,EACP1L,QAA0C,MAAjC2B,IAAKC,YAAYvK,GAC1BkC,cAAe,SAACrM,GAAD,OAAWse,EAAe,iBAAkBte,IAC3D6S,aAAcvV,IAAO2M,oBAAoBzM,EAAOuC,IAAKvC,EAAOL,mBAKlE,eAAC2e,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKhP,UAAU,OAAf,SAAsB,eAACiP,EAAA,EAAD,WACpB,qBAAIjP,UAAU,OAAd,UAAsBvP,IAAO0L,cAAcxL,EAAOuC,KAAlD,IAAyDzC,IAAOsL,aAAapL,EAAOL,UAApF,IAAgGshB,GAAiB,sBAAmBjhB,EAAOgL,YAAc,EAAxC,QACjH,gCAAQ,cAAC,IAAD,CAAOiF,MAAOnQ,IAAO6L,gBAAgB3L,EAAOuC,cAEtD,cAAC8b,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAM8C,MAGR,4BAAIH,GAAqBnhB,IAAOiM,4BAA4B/L,EAAOuC,IAAKvC,EAAOgL,YAAtD,OAAmE+L,QAAnE,IAAmEA,OAAnE,EAAmEA,EAAOvN,WAAY5K,KAC/G,cAAC0hB,GAAD,CAAiBC,MAAO,aAAc1c,MAAK,aAAIyO,IAAKyO,GAAuBpU,EAAaqU,GAAuBxX,WAAU,OAAEuN,QAAF,IAAEA,OAAF,EAAEA,EAAOvN,aAClI,cAAC8W,GAAD,CAAiBC,MAAO,cAAe1c,MAAOqd,EAAkB1X,WAAU,OAAEuN,QAAF,IAAEA,OAAF,EAAEA,EAAOvN,aACnF,cAAC8W,GAAD,CAAiBC,MAAO,oBAAqB1c,MAAOsd,EAAkB3X,WAAU,OAAEuN,QAAF,IAAEA,OAAF,EAAEA,EAAOvN,mBAG9FoX,GAAmB,cAACvC,EAAA,EAAD,UAAK,cAACC,EAAA,EAAD,UAAK,gCAAQxe,IAAOoM,qBAAqBlM,EAAOuC,iBAK/E,SAAS4d,GAAehR,GAAQ,IACtB2H,EAA8D3H,EAA9D2H,SAAUlY,EAAoDuQ,EAApDvQ,UAAWkb,EAAyC3K,EAAzC2K,YAAalD,EAA4BzH,EAA5ByH,cAAeC,EAAa1H,EAAb0H,SAD5B,EAGC7H,oBAAS,GAHV,mBAGtB0R,EAHsB,KAGbC,EAHa,OAIW3R,oBAAS,GAJpB,mBAItB2S,EAJsB,KAIRC,EAJQ,OAKS5S,oBAAS,GALlB,mBAKtB6S,EALsB,KAKTC,EALS,KAOvBC,EAAiB,CAAC,SAAU,YAAa,WAAY,YAAa,SAClEC,EAAkB,CAAC,UAAW,WAAY,YAChDA,EAAgBtd,KAAhB,MAAAsd,EAAwBD,GACxB,IAAME,EAAe,CAAC,cAAe,KAAM,MAAO,eAAgB,MAAO,OAAQ,eAAgB,MAAO,QACxGA,EAAavd,KAAb,MAAAud,EAAqBF,GACrB,IAAMG,EAAgB,GAEtBnkB,IAAUqD,mBAAmBnC,SAAQ,SAAAkjB,GACnCD,EAAcxd,KAAd,UAAsByd,EAAtB,UACAD,EAAcxd,KAAd,UAAsByd,EAAtB,aAEFD,EAAcxd,KAAK,UAAW,WAAY,cAE1C,IAAM0d,EAAe,CACnB,cAAe,mBACf,eAAgB,oBAChB,aAAc,kBACd,aAAc,kBACd,OAAQ,WAAY,UAAW,gBAE3BC,EAAqBtkB,IAAU6I,yBAAyBhI,EAAW,sBACnE6L,EAAqB1M,IAAU6I,yBAAyBhI,EAAW,sBACnE0jB,EAAsBrL,IAAKC,YAAYmL,GAEvCE,EAAsE,MAAzCtL,IAAKC,YAAYmL,GAE9CG,EAAuB,CAAE5jB,YAAWgY,gBAAeC,WAAUC,YACnE,OAAO,qCACL,eAACuB,EAAA,EAAD,CAAMP,GAAG,eAAelE,KAAK,YAAYvE,UAAU,OAAnD,UACE,cAACgJ,EAAA,EAAKN,OAAN,UACE,eAACsG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,qDAEDxH,EAAW,cAACwH,EAAA,EAAD,CAAK5H,GAAG,OAAR,SACV,cAACsD,EAAA,EAAD,CAAQjG,QAAS2M,EAAU,SAAW,OAAQrM,QAAS,kBAAMsM,GAAYD,IAAUxM,KAAK,KAAxF,SACE,iCAAM,cAAC,IAAD,CAAiBpE,KAAM4Q,EAAUV,IAAS3C,MAAhD,IAA4DqD,EAAU,OAAS,cAE1E,UAGZA,EACC,cAACrI,EAAA,EAAKL,KAAN,UACE,eAACqG,EAAA,EAAD,CAAKhP,UAAU,OAAf,UACG4S,EAAane,KAAI,SAAArE,GAAO,OACvB,cAAC6e,EAAA,EAAD,CAAKG,GAAI,EAAG/H,GAAI,GAAhB,SACE,cAACvB,EAAA,EAAD,CACE9F,UAAU,OACVzO,KAAM,iCAAOuS,YAAY1T,GAAnB,IAA8BwX,IAAKwL,kBAAkBhjB,MAC3DmP,YAAW,eAAUqI,IAAKG,YAAY3X,IACtC+C,MAAOzE,IAAU6I,yBAAyBhI,EAAWa,GACrD6V,QAAuC,MAA9B2B,IAAKC,YAAYzX,GAC1BoP,cAAe,SAACrM,GAAD,OAAWsX,EAAYra,EAAS+C,IAC/C6S,aAActX,IAAUyB,iBAAiBZ,EAAWa,MAR/BA,MAY3B,cAAC6e,EAAA,EAAD,CAAKG,GAAI,EAAG/H,GAAI,GAAhB,SACE,eAACkJ,EAAA,EAAD,WACE,eAAC0B,EAAA,EAAD,CACEf,MAAOtJ,IAAKyL,uBAAuBL,EAAoB,oBACvDjK,GAAIwH,IAAWpK,QAFjB,UAIE,cAACgM,EAAA,EAASC,SAAV,uCACC/P,IAA4B5N,KAAI,SAAAvB,GAAG,OAClC,cAACif,EAAA,EAASpN,KAAV,CAAyBC,QAAS,kBAAMyF,EAAY,qBAAsBvX,IAA1E,SACG0U,IAAKyL,uBAAuBngB,IADXA,SAIxB,cAACmM,EAAA,EAAD,CAAmBC,MAAO4T,EACxB3T,YAAY,yBACZpM,MAAOzE,IAAU6I,yBAAyBhI,EAAW,sBACrDiQ,cAAe,SAACrM,GAAD,OAAWsX,EAAY,qBAAsBtX,MAC7D+f,GAA+B,cAAC3C,EAAA,EAAWlK,OAAZ,UAC9B,cAACkK,EAAA,EAAWnK,KAAZ,4BAMV,cAAC4C,EAAA,EAAKL,KAAN,UACE,eAACqG,EAAA,EAAD,CAAKhP,UAAU,OAAf,UACG2S,EAAgBle,KAAI,SAAArE,GAAO,OAAI,cAAC6e,EAAA,EAAD,CAAK5H,GAAI,GAAI+H,GAAI,EAAjB,SAAmC,cAAC9H,EAAA,EAAD,aAAalX,QAASA,GAAa+iB,KAA7C/iB,MACxDgL,EAAqB,eAAC6T,EAAA,EAAD,CAAKG,GAAI,EAAG/H,GAAI,GAAhB,UACpB,iCAAM,6CAAN,IAA0B,sBAAMrH,UAAWtR,IAAU2I,YAAY9H,EAAW,sBAAwB,eAAiB,GAA3F,SAAgGqY,IAAKG,YAAYiL,QAC3I,sBAAMhT,UAAS,sBAAiBtR,IAAU2I,YAAY9H,EAAW,sBAAwB,eAAiB,IAA1G,mBAAoH6L,GAApH,OAAyI6X,QAClI,aAKjB,eAACjK,EAAA,EAAD,CAAMP,GAAG,eAAelE,KAAK,YAAYvE,UAAU,OAAnD,UACE,cAACgJ,EAAA,EAAKN,OAAN,UACE,eAACsG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,iDAEDxH,GAAY,cAACwH,EAAA,EAAD,CAAK5H,GAAG,OAAR,SACX,cAACsD,EAAA,EAAD,CAAQjG,QAAS4N,EAAe,SAAW,OAAQtN,QAAS,kBAAMuN,GAAiBD,IAAezN,KAAK,KAAvG,SACE,iCAAM,cAAC,IAAD,CAAiBpE,KAAM6R,EAAe3B,IAAS3C,MAArD,IAAiEsE,EAAe,OAAS,mBAKhGA,EACC,cAACtJ,EAAA,EAAKL,KAAN,UACE,cAACqG,EAAA,EAAD,CAAKhP,UAAU,OAAf,SACG6S,EAAcpe,KAAI,SAAArE,GAAO,OACxB,cAAC6e,EAAA,EAAD,CAAKG,GAAI,EAAG/H,GAAI,GAAhB,SACE,cAACvB,EAAA,EAAD,CACE9F,UAAU,OACVzO,KAAM,iCAAOuS,YAAY1T,GAAnB,IAA8BwX,IAAKG,YAAY3X,MACrDmP,YAAW,eAAUqI,IAAKmD,eAAe3a,IACzC+C,MAAOzE,IAAU6I,yBAAyBhI,EAAWa,GACrD6V,QAAuC,MAA9B2B,IAAKC,YAAYzX,GAC1BoP,cAAe,SAACrM,GAAD,OAAWsX,EAAYra,EAAS+C,IAC/C6S,aAActX,IAAUyB,iBAAiBZ,EAAWa,MAR/BA,UAa/B,cAAC4Y,EAAA,EAAKL,KAAN,UACE,cAACqG,EAAA,EAAD,CAAKhP,UAAU,OAAf,SAAuB6S,EAAcpe,KAAI,SAAArE,GAAO,OAAI,cAAC6e,EAAA,EAAD,CAAK5H,GAAI,GAAI+H,GAAI,EAAjB,SAAmC,cAAC9H,EAAA,EAAD,aAAalX,QAASA,GAAa+iB,KAA7C/iB,aAInF,eAAC4Y,EAAA,EAAD,CAAMP,GAAG,eAAelE,KAAK,YAAYvE,UAAU,OAAnD,UACE,cAACgJ,EAAA,EAAKN,OAAN,UACE,eAACsG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,gDAEDxH,GAAY,cAACwH,EAAA,EAAD,CAAK5H,GAAG,OAAR,SACX,cAACsD,EAAA,EAAD,CAAQjG,QAAS8N,EAAc,SAAW,OAAQxN,QAAS,kBAAMyN,GAAgBD,IAAc3N,KAAK,KAApG,SACE,iCAAM,cAAC,IAAD,CAAiBpE,KAAM+R,EAAc7B,IAAS3C,MAApD,IAAgEwE,EAAc,OAAS,mBAK9FA,EACC,cAACxJ,EAAA,EAAKL,KAAN,UACE,cAACqG,EAAA,EAAD,CAAKhP,UAAU,OAAf,SACG+S,EAAate,KAAI,SAAArE,GAAO,OACvB,cAAC6e,EAAA,EAAD,CAAKnE,GAAI,EAAGzD,GAAI,GAAhB,SACE,cAACvB,EAAA,EAAD,CACE9F,UAAU,OACVzO,KAAM,iCAAOuS,YAAY1T,GAAnB,IAA8BwX,IAAKG,YAAY3X,MACrDmP,YAAW,eAAUqI,IAAKmD,eAAe3a,IACzC+C,MAAOzE,IAAU6I,yBAAyBhI,EAAWa,GACrD6V,QAAuC,MAA9B2B,IAAKC,YAAYzX,GAC1BoP,cAAe,SAACrM,GAAD,OAAWsX,EAAYra,EAAS+C,IAC/C6S,aAActX,IAAUyB,iBAAiBZ,EAAWa,MAR/BA,UAa/B,cAAC4Y,EAAA,EAAKL,KAAN,UACE,cAACqG,EAAA,EAAD,CAAKhP,UAAU,OAAf,SAAuB+S,EAAate,KAAI,SAAArE,GAAO,OAAI,cAAC6e,EAAA,EAAD,CAAK5H,GAAI,GAAI+H,GAAI,EAAjB,SAAmC,cAAC9H,EAAA,EAAD,aAAalX,QAASA,GAAa+iB,KAA7C/iB,gB,gCC5YvE,SAASkjB,GAAoBxT,GAAQ,IAC5CvQ,EAA8HuQ,EAA9HvQ,UAD2C,EACmFuQ,EAAnHvQ,UAAaV,EADmB,EACnBA,aAAcyB,EADK,EACLA,SAAU0D,EADL,EACKA,cAAiByT,EAA6D3H,EAA7D2H,SAAU+C,EAAmD1K,EAAnD0K,SAAUC,EAAyC3K,EAAzC2K,YAAajD,EAA4B1H,EAA5B0H,SAAUD,EAAkBzH,EAAlByH,cAE9G1M,EAAYnM,IAAUoE,aAAaxC,GAMnCijB,EAAiB,2BAAQzT,GAAR,IAAejF,cAEpC,OAAO,qCACL,cAACmU,EAAA,EAAD,UAAK,cAACC,EAAA,EAAD,CAAK5H,GAAI,GAAIrH,UAAU,OAAvB,SACH,cAACuK,EAAA,EAAD,eAAiC,CAAEhb,YAAWib,WAAUC,cAAajD,WAAUD,uBAEjF,cAACyH,EAAA,EAAD,UAAK,cAACC,EAAA,EAAD,UAAK,cAACuE,GAAD,eAAqB1T,QAC/B,eAACkP,EAAA,EAAD,WAXmB,CAAC,CAAC,OAAQ,yBAA0B,CAAC,QAAS,mBAAoB,CAAC,QAAS,oBAa7Eva,KAAI,mCAAEgf,EAAF,KAAQC,EAAR,YAClB,cAACzE,EAAA,EAAD,CAAgB5H,GAAI,GAAIyF,GAAI,EAAGsC,GAAI,EAAGpP,UAAU,OAAhD,SACE,cAAC2T,GAAD,2BACMJ,GADN,IAEEzkB,UAAW2kB,EACXG,SAAUF,MAJJD,MAOX/kB,IAAU+E,UAAU5E,EAAc,UAAU,IAAU,cAACogB,EAAA,EAAD,CAAK5H,GAAI,GAAIyF,GAAI,EAAGsC,GAAI,EAAGpP,UAAU,OAArC,SACrD,cAAC2T,GAAD,2BACMJ,GADN,IAEEzkB,UAAU,SACV8kB,SAAS,6BAIf,cAAC5E,EAAA,EAAD,UA3BiB,CAAC,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,sBAAuB,IA6B9Hva,KAAI,YAAyB,IAAD,mBAAtBgf,EAAsB,KAAhBC,EAAgB,KAATG,EAAS,KACpCC,EAAUjZ,GAAagZ,EAC3B,OAAO,cAAC5E,EAAA,EAAD,CAAgBxI,MAAO,CAAEgH,QAASqG,EAAU,EAAI,IAAOzM,GAAI,GAAIyF,GAAI,EAAG9M,UAAU,OAAhF,SACL,cAAC2T,GAAD,2BACMJ,GADN,IAEEzkB,UAAW2kB,EACXG,SAAUF,MAJGD,QASrB,cAACzE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,qBAAIjP,UAAU,cAAd,+BAA+ChM,SAGnD,cAACgb,EAAA,EAAD,CAAKhP,UAAU,QAAf,SAEG,YAAIc,MAAM,GAAGrP,QAAQgD,KAAI,SAAAP,GACxB,IAAIuf,EAAI,uBAAmBvf,EAAI,GAC/B,OAAO,cAAC+a,EAAA,EAAD,CAAa5H,GAAI,GAAIyF,GAAI,EAAG9M,UAAU,OAC3CyG,MAAO,CAAEgH,QAASzZ,EAAgBE,EAAI,EAAI,IADrC,SAEL,cAACyf,GAAD,2BACMJ,GADN,IAEEzkB,UAAW2kB,EACXG,SAAQ,2BAAsB1f,EAAI,GAClC6f,aAActM,EAAY,kBAAM+C,EAAS,CAAExW,cAAgBE,EAAI,IAAOF,EAAgBE,EAAIA,EAAI,UAAQoS,MANzFpS,WAazB,IAAM8f,GAAqB,CACzBC,iBAwBF,YAAsC,IAAD,EAATzf,EAAS,EAATA,MACpB0f,EAAO,mBACb,OAAO,cAAClL,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAA5B,SAAwC,cAACyE,EAAA,EAAKL,KAAN,CAAW3I,UAAU,MAArB,SAC7C,uBAAMA,UAAU,oBAAhB,UAAqC4H,IAAKG,YAAYmM,GAAtD,IAA6D,cAAC5D,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASI,QAAS4B,UAAU,gBAA5G,IAA6H,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASE,KAAM8B,UAAU,gBAAzK,cAA2LxL,EAAM0f,UAAjM,aAA2L,EAAa9M,QAAQQ,IAAKE,UAAUoM,YA1BjOC,mBA6BF,YAAwC,IAAD,EAAT3f,EAAS,EAATA,MACtB0f,EAAO,qBACb,OAAO,cAAClL,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAA5B,SAAwC,cAACyE,EAAA,EAAKL,KAAN,CAAW3I,UAAU,MAArB,SAC7C,uBAAMA,UAAU,sBAAhB,UAAuC4H,IAAKG,YAAYmM,GAAxD,IAA+D,cAAC5D,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASI,QAAS4B,UAAU,gBAA9G,IAA+H,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASM,MAAO0B,UAAU,gBAA5K,cAA8LxL,EAAM0f,UAApM,aAA8L,EAAa9M,QAAQQ,IAAKE,UAAUoM,YA/BpOE,eAkCF,YAAoC,IAAD,EAAT5f,EAAS,EAATA,MAClB0f,EAAO,iBACb,OAAO,cAAClL,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAA5B,SAAwC,cAACyE,EAAA,EAAKL,KAAN,CAAW3I,UAAU,MAArB,SAC7C,uBAAMA,UAAU,kBAAhB,UAAmC4H,IAAKG,YAAYmM,GAApD,IAA2D,cAAC5D,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASI,QAAS4B,UAAU,gBAA1G,IAA2H,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASO,KAAMyB,UAAU,gBAAvK,cAAyLxL,EAAM0f,UAA/L,aAAyL,EAAa9M,QAAQQ,IAAKE,UAAUoM,YApC/NG,eA8CF,YAA+B,IAAD,EAAT7f,EAAS,EAATA,MAAS,EACNmL,mBAASvQ,OAAOqC,KAAK6iB,IAAmB,IADlC,mBACrBxB,EADqB,KAChByB,EADgB,KAEtBL,EAAI,UAAMpB,EAAN,cACV,OAAO,cAAC9J,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAA5B,SAAwC,eAACyE,EAAA,EAAKL,KAAN,CAAW3I,UAAU,MAArB,UAC7C,cAACiS,EAAA,EAAD,CAAgBpN,KAAK,KAAKqM,MAAOoD,GAAkBxB,GAAM9S,UAAU,iBAAnE,SACG5Q,OAAOC,QAAQilB,IAAmB7f,KAAI,mCAAEvB,EAAF,KAAOshB,EAAP,YAAoB,cAACrC,EAAA,EAASpN,KAAV,CAAyBC,QAAS,kBAAMuP,EAAOrhB,IAA/C,SAAsDshB,GAAlCthB,QAEjF,uBAAM8M,UAAS,eAAU8S,EAAV,QAAf,wBAAsCte,EAAM0f,UAA5C,aAAsC,EAAa9M,QAAQQ,IAAKE,UAAUoM,aApD5EO,cAuDF,YAAmC,IAAD,EAATjgB,EAAS,EAATA,MACjB0f,EAAO,gBACPQ,EAAc,cAACjE,EAAA,EAAD,CAClBlK,UAAU,MACVC,QAAS,eAACkK,EAAA,EAAD,8CAAyC,sBAAM1Q,UAAU,WAAhB,wBAFhC,SAIlB,cAAC,IAAD,CAAiBS,KAAMkU,IAAkB3U,UAAU,OAAOyG,MAAO,CAAEmO,OAAQ,YAE7E,OAAO,cAAC5L,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAA5B,SAAwC,cAACyE,EAAA,EAAKL,KAAN,CAAW3I,UAAU,MAArB,SAC7C,uBAAMA,UAAU,iBAAhB,UAAkC4H,IAAKG,YAAYmM,GAAnD,IAA0D,cAAC5D,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASM,MAAO0B,UAAU,gBAAvG,IAAwH,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASE,KAAM8B,UAAU,gBAApK,KAAsL,wBAAOA,UAAU,gBAAjB,yBAA8C0U,EAA9C,OAAtL,cAA2PlgB,EAAM0f,UAAjQ,aAA2P,EAAa9M,QAAQQ,IAAKE,UAAUoM,YA/DjSW,eAkEF,YAAoC,IAAD,EAATrgB,EAAS,EAATA,MAClB0f,EAAO,iBACb,OAAO,cAAClL,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAA5B,SAAwC,cAACyE,EAAA,EAAKL,KAAN,CAAW3I,UAAU,MAArB,SAC7C,uBAAMA,UAAU,kBAAhB,UAAmC4H,IAAKG,YAAYmM,GAApD,IAA2D,cAAC5D,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASI,QAAS4B,UAAU,gBAA1G,IAA2H,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASM,MAAO0B,UAAU,gBAAxK,IAAyL,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASO,KAAMyB,UAAU,gBAArO,IAAsP,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASE,KAAM8B,UAAU,gBAAlS,IAAmT,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASK,IAAK2B,UAAU,gBAA9V,cAAgXxL,EAAM0f,UAAtX,aAAgX,EAAa9M,QAAQQ,IAAKE,UAAUoM,aAnExZ,SAASV,GAAT,GAAoF,IAA5C3kB,EAA2C,EAAxDU,UAAaV,aAAgB2Y,EAA2B,EAA3BA,SAAUD,EAAiB,EAAjBA,cAC1DG,EAAQF,GAAsBD,EAC9BY,EAAazZ,IAAUmD,gBAAgBhD,GACvCimB,EAAW,YAAQ/d,KAAsBoR,IAAe,IAE9D,OADK2M,EAAYjkB,SAAS,kBAAiE,aAA7CnC,IAAUyD,iBAAiBtD,IAA8BimB,EAAYzf,KAAK,iBACjH,cAAC2T,EAAA,EAAD,CAAMP,GAAG,eAAelE,KAAK,YAAYvE,UAAU,OAAnD,SACL,cAACgJ,EAAA,EAAKL,KAAN,CAAW3I,UAAU,YAArB,SACE,cAACgP,EAAA,EAAD,CAAKhP,UAAU,QAAf,SACG8U,EAAYrgB,KAAI,SAAAvB,GACf,IAAM6hB,EAAMf,GAAmB9gB,GAC/B,OAAK6hB,EACE,cAAC9F,EAAA,EAAD,CAAK5H,GAAG,OAAOrH,UAAU,OAAzB,SAA0C,cAAC+U,EAAD,CAAKvgB,MAAK,OAAEkT,QAAF,IAAEA,OAAF,EAAEA,EAAOvN,cAAxBjH,GAD3B,cA0B3B,IAAMohB,GAAoB,CACxB,KAAQ,iCAAO1M,IAAKG,YAAY,kBAAxB,IAA2C,cAACuI,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASO,KAAMyB,UAAU,gBAAvF,IAAwG,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASC,MAAO+B,UAAU,mBAC7J,QAAW,iCAAO4H,IAAKG,YAAY,qBAAxB,IAA8C,cAACuI,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASI,QAAS4B,UAAU,gBAA7F,IAA8G,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASC,MAAO+B,UAAU,mBACtK,KAAQ,iCAAO4H,IAAKG,YAAY,kBAAxB,IAA2C,cAACuI,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASE,KAAM8B,UAAU,gBAAvF,IAAwG,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASC,MAAO+B,UAAU,mBAC7J,MAAS,iCAAO4H,IAAKG,YAAY,mBAAxB,IAA4C,cAACuI,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASM,MAAO0B,UAAU,gBAAzF,IAA0G,cAACsQ,EAAA,EAAD,CAAOlI,IAAKrK,IAAOC,SAASC,MAAO+B,UAAU,oBA+BlK,SAASgV,GAAkB/a,GAA6B,IAAlBE,EAAiB,uDAAJ,GACjD,OAAO/K,OAAOC,QAAQ4K,GAAWxF,KAAI,mCAAEwgB,EAAF,KAAY5a,EAAZ,WAA2B,CAC9DkK,KAAMqD,IAAKG,YAAYkN,GACvBvQ,QAASkD,IAAKoJ,eAAeiE,GAC7B9hB,MAAO/D,OAAOC,QAAP,OAAegL,QAAf,IAAeA,IAAY,IAAI8W,QAAO,SAACC,EAAD,0BAAQ9W,EAAR,KAAcC,EAAd,YAA8B6W,EAAOjX,EAAWG,GAAQC,IAAY,GACjH2a,YAAa,+BAAO9lB,OAAOC,QAAP,OAAegL,QAAf,IAAeA,IAAY,IAAI5F,KAAI,WAAqBP,GAArB,2BAAEoG,EAAF,KAAQC,EAAR,YAA2B,iCAAsB,IAANrG,EAAU,MAAQ,GAAI0T,IAAKsB,UAAU5O,EAAMH,GAA3D,uBAA2EI,QAA3E,IAA2EA,GAA3E,UAA2EA,EAAY6M,eAAvF,aAA2E,OAAA7M,EAAsB,UAAjG,QAAuGA,IAA5FrG,QAC7F6S,MAAOa,IAAKE,UAAUmN,GACtBjO,KAAMY,IAAKC,YAAYoN,OAG3B,SAASE,GAAc3gB,GAAyB,IAAlB2F,EAAiB,uDAAJ,GACzC,OAAO/K,OAAOC,QAAQmF,GAAOC,KAAI,mCAAErE,EAAF,KAAWmJ,EAAX,WACnB,cAAZnJ,EAA0B4kB,GAAkBzb,EAASY,GAAc,CACjEoK,KAAMqD,IAAKG,YAAY3X,GACvBsU,QAASkD,IAAKoJ,eAAe5gB,GAC7B+C,MAAOoG,EACPwN,MAAOa,IAAKE,UAAU1X,GACtB4W,KAAMY,IAAKC,YAAYzX,OAEzBglB,OAGJ,IAAMC,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACxC,SAAS1B,GAAiB7T,GAAQ,IAC1BvQ,EAA6KuQ,EAA7KvQ,UADyB,EACoJuQ,EAAlKvQ,UAAaV,EADC,EACDA,aAAcmF,EADb,EACaA,cAAe2G,EAD5B,EAC4BA,gBAD5B,IAC6CF,mBAD7C,SACoE3L,EAAgFgR,EAAhFhR,UAAW8kB,EAAqE9T,EAArE8T,SAAU/Y,EAA2DiF,EAA3DjF,UAAW0M,EAAgDzH,EAAhDyH,cAAeC,EAAiC1H,EAAjC0H,SAAUC,EAAuB3H,EAAvB2H,SAAU+C,EAAa1K,EAAb0K,SADvI,EAEc1K,EAAvCiU,oBAFyB,MAEV,KAFU,EAEDuB,EAFC,aAEcxV,EAFd,kBAG3B4H,EAAQF,GAAsBD,EAC9BiB,EAAS,KACT+M,EAAY,KAChB,GAAkB,SAAdzmB,GAAwBJ,IAAU2H,gBAAgBxH,GAAe,CACnE,IAAI+H,EAASlI,IAAUmD,gBAAgBhD,GACvC0mB,EAAY,cAACtG,EAAA,EAAD,CAAK5H,GAAG,OAAR,SACV,cAACsD,EAAA,EAAD,CAAQjG,QAASjK,EAAc7D,EAAS,YAAaoJ,UAAU,aAAaP,UAAWgI,EAAUzC,QAASyC,EAAY,kBAAM+C,GAAS,SAAAqF,GAAK,MAAK,CAAEpV,aAAcoV,EAAMpV,sBAAmB6L,EAAWzB,KAAM4C,EAAW,KAAO,KAA3N,SACGhN,EACC,iDAAmB,4BAAI/L,IAAU0C,iBAAiBwF,QAChD,kBAKV,IAAI4e,EAAe,EACnB,GAAI1mB,KAAa6L,EAAiB,CAChC,IAAM8a,EAAkB9a,EAAgB7L,GAClC4mB,EAAahnB,IAAUqF,oBAAoBlF,EAAcC,EAAWkF,GAE1E,GADAwhB,EAAeC,EAAkBC,EAC7BjO,EAAU,CAMZe,EAAS,cAACQ,EAAA,EAAKN,OAAN,UACP,eAACsG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK5H,GAAG,OAAR,SACE,cAAC4K,EAAA,EAAD,CAAgBf,MAAK,qBAAgBsE,EAAe,GAApD,SACG,YAAI1U,MAAMuU,GAAaxa,IAAYpJ,QAAQgD,KAAI,SAAAP,GAAC,OAC/C,eAACie,EAAA,EAASpN,KAAV,CAAuBC,QAAS,kBAVlByO,EAUuC3kB,EAVjC6mB,EAU4CzhB,EAVtBsW,GAAS,SAAAqF,GAC3D,IAAM+F,EAAuB/F,EAAMlV,iBAAmB,GAEtD,OADAib,EAAqBnC,GAAQkC,EACtB,CAAEhb,gBAAiBib,MAHL,IAACnC,EAAMkC,GAUpB,wBAAgFzhB,EAAIwhB,EAAa,IAA7ExhB,UAGzBqhB,YAIL/M,EAAS,cAACQ,EAAA,EAAKN,OAAN,UACP,eAACsG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK5H,GAAG,OAAR,iCACoBmO,EAAe,KAEnC,cAACvG,EAAA,EAAD,CAAK5H,GAAG,OAAR,SACGkO,SAMX,IAAMrgB,EAAcxG,IAAUuG,eAAepG,EAAcC,EAAW4Y,EAAMvN,YACtE0b,EAAW3gB,GAAe,cAAC8Z,EAAA,EAAD,UAAK,cAACC,EAAA,EAAD,UACnC,cAACjG,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAAYvE,UAAU,mBAAlD,SACE,cAAC8V,GAAA,EAAD,CAAW9V,UAAU,aAAa0E,QAAQ,QAA1C,SACGyQ,GAAcjgB,EAAD,OAAcwS,QAAd,IAAcA,OAAd,EAAcA,EAAOvN,YAAY1F,KAAI,SAACK,EAAOZ,GAAR,OACjD,cAAC6hB,GAAD,aAAsBC,MAAO9hB,GAA7B,aAAsCY,SAAUwgB,IAA7BphB,cAK3B,OAAO,eAAC8U,EAAA,EAAD,CAAMP,GAAG,eAAelE,KAAK,YAAYvE,UAAU,QAAnD,UACJwI,EACD,eAACQ,EAAA,EAAKL,KAAN,WACE,eAACqG,EAAA,EAAD,CAAKhP,UAAS,+BAA2ByH,GAAYsM,EAAgB,iBAAmB,IAAM/O,QAAS+O,EAAvG,UACE,cAAC9E,EAAA,EAAD,CAAK5H,GAAG,OAAOrH,UAAU,mCAAzB,SACE,cAACsQ,EAAA,EAAD,CAAOlI,IAAK1Z,IAAU8E,aAAa3E,EAAcC,GAAYkR,UAAU,gBAEzE,eAACiP,EAAA,EAAD,CAAKjP,UAAU,cAAf,UACE,cAACgJ,EAAA,EAAKmE,MAAN,UAAaze,IAAUoF,cAAcjF,EAAcC,KACnD,cAACka,EAAA,EAAKiN,SAAN,UAAgBrC,UAGnBllB,IAAU2F,kBAAkBxF,EAAcC,GAAW2F,KAAI,SAACC,EAASR,GAAO,IAAD,IAGxE,GAFuB,oBAAZQ,IACTA,EAAUA,EAAQgT,EAAMvN,cACrBzF,EAAS,OAAO,KAErB,IAAIwhB,EAAaxhB,EAAQ6P,KACC,oBAAf2R,IACTA,EAAaA,EAAWxO,EAAMvN,aAChC,IAAIpF,EAAM,UAAGL,EAAQK,cAAX,QAAqB,GAE3BY,EAAcjB,EAAQiB,YACC,oBAAhBA,IACTA,EAAcA,EAAY+R,EAAMvN,aAClC,IAAI4X,EAAiB,KACrB,GAAIpc,EAAa,CACf,IAAIE,EAAiBC,IAAiB4Z,kBAAkBngB,EAAUqL,mBAAoB,CAAEnB,OAAQ3K,EAAW6K,QAAShE,EAAYJ,iBAC5H4gB,EAAoB,GACxB,GAAItgB,EAAgB,CAClB,IAAIic,EAAmBpjB,IAAUkH,0BAA0BD,EAAaE,EAAgB,IACxFsgB,EAAiB,sBAAOznB,IAAUyH,2BAA2BR,EAAaE,EAAgB,KAAzE,YAAiFsf,GAAcrD,EAAD,OAAmBpK,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAOvN,cAI3I4X,EAAiB,cAAC9C,EAAA,EAAD,CAAK5H,GAAI,GAAT,SACf,eAAC2B,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAAYvE,UAAU,OAAlD,UACE,cAACgJ,EAAA,EAAKN,OAAN,UACE,cAAC3E,EAAA,EAAD,CAAqBtE,UAAWgI,EAC9B9R,YAAaA,EACbE,eAAgBA,EAChBmO,eARa,SAACnO,GAAD,OAAoB2U,GAAS,SAAAqF,GAAK,MACpD,CAAEjV,mBAAoB9E,IAAiBkO,eAAe6L,EAAMjV,mBAAoB,CAAEnB,OAAQ3K,EAAW6K,QAAShE,EAAYJ,gBAAkBM,QAQvIoO,OAAQ,+BAAOtO,EAAY6O,gBAE/B,cAACsR,GAAA,EAAD,CAAW9V,UAAU,aAAa0E,QAAQ,QAA1C,SACGyR,EAAkB1hB,KAAI,SAAC2hB,EAAWliB,GAAZ,OAAkB,cAAC6hB,GAAD,aAAsBC,MAAO9hB,GAA7B,aAAsCY,MAAOshB,GAAcd,IAAxCphB,aAKpE,OAAO,eAAC8a,EAAA,EAAD,CAAKhP,UAAU,aAAf,UAAgD,eAACiP,EAAA,EAAD,CAAK5H,GAAI,GAAT,UACrD,qBAAKrH,UAAU,OAAf,SAAuBkW,IACtBnhB,EAAO6E,OAAS,GAAK,cAACkc,GAAA,EAAD,CAAW9V,UAAU,kBAArB,gBACnBjL,QADmB,IACnBA,GADmB,UACnBA,EAAQN,WADW,aACnB,OAAAM,GAAc,SAACD,EAAOZ,GAAR,OAAc,cAAC6hB,GAAD,aAAsBC,MAAO9hB,GAA7B,aAAsCY,SAAUwgB,IAA7BphB,WAE7C6d,IALiC,UAAY7d,MAOrD2hB,QAIP,SAASE,GAAT,GAA0G,IAAD,UAApEM,EAAoE,EAAjF9mB,UAAa8mB,uBAA2BvhB,EAAyC,EAAzCA,MAAOkhB,EAAkC,EAAlCA,MAAOzO,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,SACvFE,EAAQF,GAAsBD,EAGlC,GAFqB,oBAAVzS,IACTA,EAAQA,EAAM4S,EAAMvN,cACjBrF,EAAO,OAAO,KAEnB,IAAMyU,EAAY7a,IAAUsG,oBAAoBF,EAAO,OAAQ4S,EAAMvN,YAC/DqP,EAAe9a,IAAUsG,oBAAoBF,EAAO,UAAW4S,EAAMvN,YAErEsP,EAAmB/a,IAAUsG,oBAAoBF,EAAO,cAAe4S,EAAMvN,YAC7Emc,EAAqB7M,EAAmB,cAACgH,EAAA,EAAD,CAC5ClK,UAAU,MACVC,QAAS,cAACkK,EAAA,EAAD,UAAUjH,IAFyB,SAI5C,cAAC,IAAD,CAAiBhJ,KAAMkU,IAAkB3U,UAAU,OAAOyG,MAAO,CAAEmO,OAAQ,YACzD,KAEhB2B,EAAW,KACXzhB,EAAM3B,MACRojB,EAAW7nB,IAAUsG,oBAAoBF,EAAO,QAAS4S,EAAMvN,YACxDrF,EAAM/F,UACbwnB,EAAQ,UAAG7nB,IAAUsG,oBAAoBF,EAAO,UAAW4S,EAAMvN,mBAAzD,iBAAG,EAAoE,UAAvE,aAAG,SAAyEuN,EAAMvN,aAE5F,IAAIqc,EAAW1hB,EAAMiS,OAAS,EACxBC,EAAOtY,IAAUsG,oBAAoBF,EAAO,OAAQ4S,EAAMvN,YAEhE,GAAIkc,GAA0B9O,GAAqC,kBAAbgP,EAAuB,CAAC,IAAD,oBACvEE,EAAmB3hB,EAAM3B,MAAQ2B,EAAM3B,MAApB,WAA4B,EAAA2B,GAAM/F,eAAlC,iBAA4B,SAAgBwY,EAAcpN,mBAA1D,iBAA4B,EAA4C,UAAxE,aAA4B,SAAiDoN,EAAcpN,YAElF,oBAArBsc,IACTA,EAAmB5c,SAAQ,UAAC4c,SAAD,iBAAC,EAAmBlP,EAAcpN,mBAAlC,iBAAC,EAA8CiN,eAA/C,aAAC,SAAwDoP,KACtF,IAAIvP,EAAOsP,EAAWE,EACtBF,EAAW,qDAAOE,SAAP,aAAO,EAAkBrP,QAAQoP,UAAjC,QAA8CC,EAAkBxP,EAAO,uBAAMjH,UAAWiH,EAAO,EAAI,eAAiB,cAA7C,eAA+DA,EAAO,EAAI,IAAM,IAAQ,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMG,eAAN,oBAAAH,EAAgBuP,KAAavP,EAAjH,OAAiI,MAGrN,OAAO,cAAC6O,GAAA,EAAU/Q,KAAX,CAAgBL,QAASsR,EAAQ,EAAI,aAAe,eAAgBhW,UAAU,MAA9E,SACL,gCACE,iCAAM,4BAAIuJ,IAAe+M,KACzB,uBAAMtW,UAAS,sCAAiCwJ,GAAhD,8BAAkE+M,SAAlE,iBAAkE,EAAUnP,eAA5E,aAAkE,SAAoBoP,UAAtF,QAAmGD,EAAUvP,UCrUnH,IAAM0P,GAAaC,IAAMC,YACvB,WAA+DC,GAAS,IAArE1I,EAAoE,EAApEA,SAAU1H,EAA0D,EAA1DA,MAAOzG,EAAmD,EAAnDA,UAA8B8W,EAAqB,EAAxC,mBAC7B,OACE,qBACED,IAAKA,EACLpQ,MAAO,CAAEA,QAAOsQ,SAAU,SAC1B/W,UAAWA,EACXgX,kBAAiBF,EAJnB,SAME,cAAC9H,EAAA,EAAD,UACG2H,IAAMM,SAASC,QAAQ/I,GAAU1Z,KAAI,SAAC0iB,EAAOjjB,GAAR,OAAc,cAAC+a,EAAA,EAAD,CAAa5H,GAAI,EAAjB,SAAqB8P,GAAXjjB,aAOnDkjB,G,kDACnB,WAAYtX,GAAQ,IAAD,uBACjB,cAAMA,IA6CRuX,qBAAuB,WACjB,EAAKxH,MAAMhhB,cACb,EAAK2b,SAAShb,IAAkBC,IAAI,EAAKogB,MAAMhhB,eACjD,EAAKiR,MAAMiP,YAAc,EAAKjP,MAAMiP,cAAgB,EAAKA,eAjDxC,EAmDnBuI,gBAAkB,SAACzoB,GAAkB,IAAD,IAC9BghB,EAAQuH,EAAqBG,kBAC7BC,EAAOhoB,IAAkBC,IAAIZ,GAC7B2oB,EAAM3H,EAAK,2BAAQA,GAAU2H,IAE/B3H,EAAK,2BAAQA,GAAR,IAAehhB,eAAc8B,OAAQymB,EAAqBK,gBAAgB5oB,KAC/E,EAAK6oB,gBAAgB,EAAK7H,QAE5B,EAAKrF,SAASqF,GACd,YAAK/P,aAAL,mBAAYwX,uBAAZ,gBAA8BzoB,IA5Db,EA+DnB8oB,YAAc,SAACrnB,GAAD,OACZ,EAAKka,SAAS,CAAEla,cAhEC,EAkEnBma,YAAc,SAACra,EAAS+C,GAAV,OAAoB,EAAKqX,UAAS,SAAAqF,GAC9C,IAAIvY,EAAoBuY,EAAMvY,kBAE9B,OADkB5I,IAAUyB,iBAAiB,EAAK0f,MAAOzf,KACrC+C,UACXmE,EAAkBlH,GAClB,CAAEkH,uBAETA,EAAkBlH,GAAW+C,EACtB,CAAEmE,0BA1EM,EA8EnB4Y,iBAAmB,SAAClc,GAAD,OAAmB,EAAKwW,SAAS,CAAExW,mBA5EpD,EAAK6b,MAAQuH,EAAqBG,kBAFjB,IAGT1oB,EAA4BiR,EAA5BjR,aAAcU,EAAcuQ,EAAdvQ,UACtB,GAAIV,EAAc,CAAC,IAAD,EACV2oB,EAAI,UAAGhoB,IAAkBC,IAAIZ,UAAzB,QAA0C,CAAEA,eAAc8B,OAAQymB,EAAqBK,gBAAgB5oB,IACjH,EAAKghB,MAAL,2BAAkB,EAAKA,OAAU2H,QACxBjoB,IACT,EAAKsgB,MAAL,2BAAkB,EAAKA,OAAUtgB,IARlB,S,gEA+EE,IAAD,OAClBqoB,QAAQC,IAAI,CACVnpB,IAAUuB,yBACVQ,IAAOoL,sBACPjE,IAASiU,kBACR/J,MAAK,kBAAM,EAAKiN,mB,sCAELc,UACdA,EAAQ/Y,YAAU+Y,IACLwG,uBACb7mB,IAAkB6I,OAAOwX,K,yCAERiI,GACbA,EAAUjpB,eAAiBF,KAAKmR,MAAMjR,cAAgBF,KAAKmR,MAAMjR,eAAiBF,KAAKkhB,MAAMhhB,cAC/FF,KAAK2oB,gBAAgB3oB,KAAKmR,MAAMjR,cAC9BF,KAAKmR,MAAM2H,UAAY9Y,KAAKkhB,MAAMhhB,cAEpCF,KAAK+oB,gBAAgB/oB,KAAKkhB,S,+BAGpB,IAAD,WACgDlhB,KAAKmR,MAAtDiY,EADC,EACDA,OAAQvQ,EADP,EACOA,SAAUC,EADjB,EACiBA,SAAUuQ,EAD3B,EAC2BA,QAASC,EADpC,EACoCA,QACrC1oB,EAAYZ,KAAKkhB,OAEvB,UAAIrI,SAAJ,aAAI,EAAUrN,eACZqN,EAAW1Q,YAAU0Q,IACZrN,WAAWK,QAAUjL,EAAUiL,QACxCgN,EAASrN,WAAWO,aAAenL,EAAUmL,cAPxC,IAUC7L,EAAwEU,EAAxEV,aAAcyB,EAA0Df,EAA1De,SAAU+lB,EAAgD9mB,EAAhD8mB,uBAAmC6B,EAAa3oB,EAAxBgJ,UAClDgP,EAAgB7Y,IAAU4J,eAAe/I,GACzC4oB,EAAoBtpB,EAAe,iCACvC,cAACyhB,EAAA,EAAD,CAAOlI,IAAK1Z,IAAU0E,SAASvE,GAAemR,UAAU,0BAA0B4Q,eAAa,IAC/F,qBAAI5Q,UAAU,WAAd,cAA2BtR,IAAUgD,QAAQ7C,GAA7C,UACQ,sDACJupB,EAAkB,CAAE7oB,YAAWiY,WAAUD,eAAgBC,GAAY6O,EAAyB9O,OAAgBjB,EAAWmB,WAAU+C,SAAU,SAAA6N,GAAC,OAAI,EAAK7N,SAAS6N,IAAI5N,YAAa9b,KAAK8b,YAAasE,YAAapgB,KAAK0oB,sBAG3N,OAFIa,IAAUE,EAAgB7f,UAAY2f,GAElC,eAAClP,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAA5B,UACN,cAACyE,EAAA,EAAKN,OAAN,UACE,eAACsG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK5H,GAAI,OAAQrH,UAAU,UAA3B,SAEGyH,EAAW,eAAC6Q,EAAA,EAAD,WACV,eAACnG,EAAA,EAAD,CAAUpJ,GAAIuP,IAAd,UACE,cAACC,EAAA,EAAD,CAAgBxP,GAAI4B,IAApB,SACGwN,IAEH,cAAChG,EAAA,EAASrN,KAAV,CAAeiE,GAAI2N,GAAnB,SACGhoB,IAAU8C,sBAAsBiD,KAAI,SAAAvD,GAAO,OAC1C,cAACihB,EAAA,EAASpN,KAAV,CAA6BC,QAAS,kBAAM,EAAKsS,gBAAgBpmB,IAAjE,SACE,iCACE,cAACof,EAAA,EAAD,CAAOlI,IAAK1Z,IAAU0E,SAASlC,GAAU8O,UAAS,oCAA+BtR,IAAUiD,QAAQT,GAAjD,QAAiE8b,WAAS,IAC5H,qBAAIhN,UAAU,gBAAd,UAA+BtR,IAAUgD,QAAQR,GAAjD,WAHgBA,WAQ1B,eAAC+gB,EAAA,EAAD,CAAgBlJ,GAAIuP,IAAa7Y,UAAW5Q,EAAcqiB,MACxD,qBAAIlR,UAAU,WAAd,6BAA0CtR,IAAUiE,cAAcrC,GAAlE,OADF,UAGE,cAAC6hB,EAAA,EAASC,SAAV,UACE,+DAED1jB,IAAU+D,eAAegC,KAAI,SAAA+jB,GAAM,OAClC,cAACrG,EAAA,EAASpN,KAAV,CAA4BC,QAAS,kBAAM,EAAK2S,YAAYa,IAA5D,SACE,+BAAM9pB,IAAUiE,cAAc6lB,GAA9B,QADkBA,YAIT,iCAAOL,EAAP,SAAgCzpB,IAAU6I,yBAAyBhI,EAAW,uBAGhGiY,EAAW,cAACyH,EAAA,EAAD,CAAK5H,GAAG,OAAR,SACV,eAACiR,EAAA,EAAD,WACE,cAAC3N,EAAA,EAAD,CAAQjG,QAAS2R,EAAyB,UAAY,UAAW5W,UAAW4W,EAAwBrR,QAAS,kBAAM,EAAKwF,SAAS,CAAE6L,wBAAwB,KAA3J,SACE,8DAEF,cAAC1L,EAAA,EAAD,CAAQjG,QAAU2R,EAAqC,UAAZ,UAAuB5W,SAAU4W,EAAwBrR,QAAS,kBAAM,EAAKwF,SAAS,CAAE6L,wBAAwB,KAA3J,SACE,6EAGG,KACR5f,QAAQuhB,IAAY,cAAC/I,EAAA,EAAD,CAAK5H,GAAG,OAAR,SACnB,cAACsD,EAAA,EAAD,CAAQjG,QAAQ,SAASM,QAASgT,EAAlC,SACE,cAAC,IAAD,CAAiBvX,KAAMgY,eAI9BhiB,QAAQ5H,IAAiB,cAACma,EAAA,EAAKL,KAAN,UACxB,eAAC+P,EAAA,EAAIC,UAAL,CAAeC,iBAAkBX,IAAqBzQ,EAAW,eAAiB,aAAcqR,cAAc,EAAMC,eAAe,EAAnI,UACE,eAACC,EAAA,EAAD,CAAKrU,QAAQ,QAAQ1E,UAAU,YAA/B,UACE,cAAC+Y,EAAA,EAAIhU,KAAL,UACE,cAACgU,EAAA,EAAIC,KAAL,CAAU/P,SAAS,YAAnB,yBAEDzB,EAAW,cAACuR,EAAA,EAAIhU,KAAL,UACV,cAACgU,EAAA,EAAIC,KAAL,CAAU/P,SAAS,eAAnB,6BACY,KACd,cAAC8P,EAAA,EAAIhU,KAAL,UACE,cAACgU,EAAA,EAAIC,KAAL,CAAU/P,SAAS,YAAnB,SAAgCzB,EAAW,oBAAsB,gBAEnE,cAACuR,EAAA,EAAIhU,KAAL,UAC+CrW,IAAU8H,cAAc3H,GAInE,cAACkqB,EAAA,EAAIC,KAAL,CAAU/P,SAAS,SAAnB,qBAHA,cAAC4F,EAAA,EAAD,UACE,eAACkK,EAAA,EAAIC,KAAL,CAAU/P,SAAS,SAASxJ,UAAQ,EAApC,qBAA6C,cAACsQ,EAAA,EAAD,CAAOrL,QAAQ,UAAf,yBAKjDwT,GAAY,cAACa,EAAA,EAAIhU,KAAL,UACZ,cAAC8J,EAAA,EAAD,UACE,eAACkK,EAAA,EAAIC,KAAL,CAAU/P,SAAS,OAAOxJ,UAAQ,EAAlC,kBAAwC,cAACsQ,EAAA,EAAD,CAAOrL,QAAQ,UAAf,2BAI9C,eAACgU,EAAA,EAAIO,QAAL,WACE,cAACP,EAAA,EAAIQ,KAAL,CAAUjQ,SAAS,YAAnB,SACE,cAACgH,EAAD,aACEC,iBAAkBvhB,KAAKuhB,kBACnBkI,MAGR,cAACM,EAAA,EAAIQ,KAAL,CAAUjQ,SAAS,YAAnB,SACE,cAAC,EAAD,0CAAgCmP,GAAhC,IAAiD5Q,cAAUlB,EAAWiB,sBAEvEC,EAAW,cAACkR,EAAA,EAAIQ,KAAL,CAAUjQ,SAAS,eAAnB,SACV,cAAC,EAAD,eAA2BmP,MACf,KACd,cAACM,EAAA,EAAIQ,KAAL,CAAUjQ,SAAS,SAAnB,SACE,cAACqK,GAAD,eAAyB8E,cAKhCL,GAAU,cAAC/O,EAAA,EAAK2E,OAAN,UACRoK,W,GAvNyCpB,IAAMwC,WAAnC/B,GAaZgC,aAAe,CACpBvqB,aAAc,GACdyB,SAAU,KACVkK,QAAS,MACTE,aAAc,KACdhL,kBAAmB,GACnBkJ,qBAAsB,GACtBtB,kBAAmB,GACnB3G,OAAQ,CACNuC,IAAK,GACL5C,SAAU4L,IAAgB,GAC1BP,YAAa,EACbiC,gBAAiB,EACjBC,eAAgB,EAChBhI,eAAgB,GAElB8E,gBAAiB,CACfrE,KAAM,EACN+iB,MAAO,EACPC,MAAO,GAET7e,aAAa,EACbG,mBAAoB,GACpB5G,cAAe,EACfqiB,wBAAwB,GArCPe,GAuCZK,gBAAkB,SAAC5oB,GACxB,IAAI8B,EAASmG,YAxCIsgB,GAwCWgC,aAAazoB,QAEzC,OADAA,EAAOuC,IAAM9D,OAAOqC,KAAKhB,IAAO8M,iBAAiB7O,IAAUyD,iBAAiBtD,KAAgB,GACrF8B,GA1CUymB,GA6CZG,gBAAkB,kBAAMzgB,YAAUsgB,GAAqBgC,gB,iOC3CzD,SAASG,EAAa3f,GAC3B,GAAIA,GAAU,GACZ,MAAM,IAAIhL,MAAJ,kBAAqBgL,EAArB,gBACR,OAAO4f,EAAe5f,EAAQ,GAEzB,SAAS6f,EAAaC,EAAQC,GACnC,IAAI/f,EAASggB,EAAeF,EAAOC,IACnC,GAAI/f,GAAU,GACZ,MAAM,IAAIhL,MAAJ,kBAAqBgL,EAArB,gBACR,MAAO,CACLigB,OAAQjgB,EACR+f,OAAQA,EAAS,GAIrB,SAASG,EAAWC,EAAMC,EAAQC,GAChC,IAGE,OAFID,EAAOE,SACTH,EAAOC,EAAOE,OAAOH,IACfC,EAAOja,MACb,IAAK,OAAQ,OAAOoa,EAAWJ,EAAMC,GACrC,IAAK,SAAU,OAuGrB,SAAsBN,EAAQM,GAC5B,IAAKN,EAAOU,MAAM,mBAChB,MAAM,IAAIxrB,MAAJ,+BAAkC8qB,EAAlC,uBACR,OAAOH,EAAaG,EAAO9f,QAAU8f,EA1GXW,CAAaN,GACnC,IAAK,QAAS,OA6FpB,SAAqBA,EAAMC,GACzB,OAAOG,EAAWH,EAAOM,KAAK1nB,QAAQmnB,GAAOC,GA9FpBO,CAAYR,EAAMC,GACvC,IAAK,QAAS,OA0EpB,SAAqBD,EAAMC,GAAS,IAAD,EACOA,EAAhCQ,eADyB,MACf,GADe,EACXC,EAAkBT,EAAlBS,cACtB,OAAOlB,EAAaQ,EAAKngB,QAAUmgB,EAAKtlB,KAAI,SAACimB,EAAMxmB,GAAP,aAC1C4lB,EAAWY,EAAD,UAAOF,EAAQtmB,UAAf,QAAqBumB,EAAevmB,MAC9CymB,KAAK,IA9EkBC,CAAYb,EAAMC,GACvC,IAAK,SAAU,OAsDrB,SAAsBD,EAAMC,GAAS,IAAD,EACIA,EAA9BQ,eAD0B,MAClB,GADkB,EACdC,EAAkBT,EAAlBS,cAEpB,OAAOrrB,OAAOC,QAAQmrB,GAAS/lB,KAAI,YAAoB,IAAD,qBAAjBvB,EAAiB,KAAZ8mB,EAAY,KAEpD,OADAA,EAAM,UAAGA,SAAH,QAAaS,EACZX,EAAW5mB,KAAO6mB,EAAOA,EAAK7mB,GAAO8mB,EAAOhY,QAASgY,EAAQ9mB,MACnEynB,KAAK,IA5DkBE,CAAad,EAAMC,GACzC,IAAK,SAAU,OA8BrB,SAAsBD,EAAMC,GAAS,IAC3Bc,EAAiCd,EAAjCc,UAAWrpB,EAAsBuoB,EAAtBvoB,KAAMspB,EAAgBf,EAAhBe,YACnBC,EAAQ5rB,OAAOC,QAAQ0qB,GAAM9nB,QAAO,kBAAEiB,EAAF,4CAAWzB,QAAX,IAAWA,OAAX,EAAWA,EAAMZ,SAASqC,UAA1B,YAE1C,OAAOqmB,EAAayB,EAAMphB,QAAUohB,EAAMvmB,KAAI,mCAAEvB,EAAF,KAAOC,EAAP,YAC5C2mB,EAAW5mB,EAAK4nB,EAAW5nB,GAAO4mB,EAAW3mB,EAAO4nB,EAAa7nB,MACjEynB,KAAK,IApCmBM,CAAalB,EAAMC,GACzC,QAAS,MAAM,IAAIprB,MAAJ,kCAAqCorB,EAAOja,KAA5C,eAEjB,MAAOmb,GAAQ,IAAD,EAGd,MAFAA,EAAMC,KAAN,UAAaD,EAAMC,YAAnB,QAA2B,GAC3BD,EAAMC,KAAK9lB,KAAK4kB,GACViB,GAGV,SAASE,EAAW1B,EAAQC,EAAQK,EAAQC,GAC1C,IACE,IAAIJ,EACJ,OAAQG,EAAOja,MACb,IAAK,OAAL,MAAiCsb,EAAW3B,EAAQC,EAAQK,GAA7CH,EAAf,EAAeA,OAAQF,EAAvB,EAAuBA,OAA+C,MACtE,IAAK,SAAL,MA0FN,SAAsBD,EAAQC,EAAQK,GACpC,IAAIpgB,EADwC,EAEd6f,EAAaC,EAAQC,GACnD,OADW/f,EAFiC,EAEzCigB,OAAgBF,EAFyB,EAEzBA,OACZ,CACLE,OAAQH,EAAO4B,MAAM3B,EAAQA,EAAS/f,GACtC+f,OAAQA,EAAS/f,GA/FoB2hB,CAAa7B,EAAQC,GAAvCE,EAAjB,EAAiBA,OAAQF,EAAzB,EAAyBA,OAAiD,MAC1E,IAAK,QAAL,MA8EN,SAAqBD,EAAQC,EAAQK,GACnC,IAAIH,EADuC,EAEvBwB,EAAW3B,EAAQC,EAAQK,GAC/C,OADEH,EAFyC,EAEzCA,OAAQF,EAFiC,EAEjCA,OACH,CAAEE,OAAQG,EAAOM,KAAKT,GAASF,UAjFA6B,CAAY9B,EAAQC,EAAQK,GAA9CH,EAAhB,EAAgBA,OAAQF,EAAxB,EAAwBA,OAAgD,MACxE,IAAK,QAAL,MA8DN,SAAqBD,EAAQC,EAAQK,GAAS,IAExCpgB,EAFuC,EACHogB,EAAhCQ,eADmC,MACzB,GADyB,EACrBC,EAAkBT,EAAlBS,cADqB,EAGfhB,EAAaC,EAAQC,GAMjD,OANU/f,EAHiC,EAGzCigB,OAAgBF,EAHyB,EAGzBA,OAMX,CAAEE,OALI,YAAI,IAAI/Y,MAAMlH,IAASnF,KAAI,SAACgnB,EAAQvnB,GAAO,IAAD,EACjD2lB,EADiD,EAEjCuB,EAAW1B,EAAQC,EAAT,UAAiBa,EAAQtmB,UAAzB,QAA+BumB,EAAevmB,GAC5E,OADE2lB,EAFmD,EAEnDA,OAAQF,EAF2C,EAE3CA,OACHE,KAEQF,UAvEqB+B,CAAYhC,EAAQC,EAAQK,GAA9CH,EAAhB,EAAgBA,OAAQF,EAAxB,EAAwBA,OAAgD,MACxE,IAAK,SAAL,MA4CN,SAAsBD,EAAQC,EAAQK,GAAS,IAAD,EACNA,EAA9BQ,eADoC,MAC5B,GAD4B,EACxBC,EAAkBT,EAAlBS,cAOpB,MAAO,CAAEZ,OALMzqB,OAAO6G,YAAY7G,OAAOC,QAAQmrB,GAAS/lB,KAAI,YAAoB,IAC5EolB,EAD2E,mBAAjB3mB,EAAiB,KAAZ8mB,EAAY,OAE3DoB,EAAW1B,EAAQC,EAAT,OAAiBK,QAAjB,IAAiBA,IAAUS,EAAevnB,GACxE,OADE2mB,EAF6E,EAE7EA,OAAQF,EAFqE,EAErEA,OACH,CAACzmB,EAAK2mB,OAEEF,UApDsBgC,CAAajC,EAAQC,EAAQK,GAA/CH,EAAjB,EAAiBA,OAAQF,EAAzB,EAAyBA,OAAiD,MAC1E,IAAK,SAAL,MAoBN,SAAsBD,EAAQC,EAAQK,GAAS,IAEzCpgB,EADInI,EAAiCuoB,EAAjCvoB,KAAMqpB,EAA2Bd,EAA3Bc,UAAWC,EAAgBf,EAAhBe,YADmB,EAGhBtB,EAAaC,EAAQC,GASjD,OATU/f,EAHkC,EAG1CigB,OAAgBF,EAH0B,EAG1BA,OASX,CAAEE,OAPIzqB,OAAO6G,YAAY,YAAI,IAAI6K,MAAMlH,IAASnF,KAAI,WACzD,IAAIvB,EAAKC,EADsD,EAEtCioB,EAAW1B,EAAQC,EAAQmB,EAAW,MAArD5nB,EAFqD,EAE7D2mB,OAAaF,EAFgD,EAEhDA,OAFgD,MAGpCyB,EAAW1B,EAAQC,EAAQoB,EAAa7nB,GACnE,OADUC,EAHqD,EAG7D0mB,OAAeF,EAH8C,EAG9CA,OACV,CAACzmB,EAAKC,MACZlB,QAAO,kBAAEiB,EAAF,4CAAWzB,QAAX,IAAWA,OAAX,EAAWA,EAAMZ,SAASqC,UAA1B,aAEOymB,UAhCsBiC,CAAalC,EAAQC,EAAQK,GAA/CH,EAAjB,EAAiBA,OAAQF,EAAzB,EAAyBA,OAAiD,MAC1E,QAAS,MAAM,IAAI/qB,MAAJ,kCAAqCorB,EAAOja,KAA5C,cAGjB,OADIia,EAAO6B,SAAQhC,EAASG,EAAO6B,OAAOhC,IACnC,CAAEA,SAAQF,UACjB,MAAOuB,GAAQ,IAAD,EAGd,MAFAA,EAAMC,KAAN,UAAaD,EAAMC,YAAnB,QAA2B,GAC3BD,EAAMC,KAAK9lB,KAAK4kB,GACViB,GAuFV,SAASf,EAAW2B,EAAM9B,GACxB,IAAMN,EAASF,EAAesC,EAAM9B,EAAOpgB,QAC3C,OAAOogB,EAAOpgB,OAAS8f,EAAUH,EAAaG,EAAO9f,QAAU8f,EAEjE,SAAS2B,EAAW3B,EAAQC,EAAQK,GAClC,IAAIpgB,EAASogB,EAAOpgB,OAEpB,IAAKogB,EAAOpgB,OAAZ,OACgC6f,EAAaC,EAAQC,GAAxC/f,EADb,EACKigB,OAAgBF,EADrB,EACqBA,OAErB,MAAO,CACLE,OAAQD,EAAeF,EAAO4B,MAAM3B,EAAQA,EAAS/f,IACrD+f,OAAQA,EAAS/f,GAIrB,SAAS4f,EAAeuC,GAAqB,IAAbniB,EAAY,uDAAH,EACvC,GAAImiB,EAAS,EAAG,MAAM,IAAIntB,MAAJ,wCAA2CmtB,IAEjE,IAAIrC,EAAS,GACb,EAAG,CACD,IAAMsC,EAAYD,EAAS,GAC3BA,EAASzN,KAAKC,MAAMwN,EAAS,IACzBC,EAAY,GACdtC,GAAUuC,OAAOC,aAAaF,EAAY,GAAK,GACxCA,EAAY,GACnBtC,GAAUuC,OAAOC,aAAaF,EAAY,GAAK,IACxCA,EAAY,GACnBtC,GAAUuC,OAAOC,aAAaF,EAAY,GAAK,IAC1B,KAAdA,EACPtC,GAAU,IACW,KAAdsC,IACPtC,GAAU,WACLqC,EAAS,GAElB,IAAKniB,EACH,OAAO8f,EAET,GAAIA,EAAO9f,OAASA,EAClB,MAAM,IAAIhL,MAAJ,6BAAgCmtB,EAAhC,sBACR,OAAOrC,EAAOyC,OAAOviB,EAAQ,KAE/B,SAASggB,EAAeF,GAGtB,IAFA,IAAIG,EAAS,EAAGtf,EAAa,EAEpBrG,EAAI,EAAGA,EAAIwlB,EAAO9f,OAAQ1F,IAAK,CACtC,IAAIkoB,EAAO1C,EAAO2C,WAAWnoB,GAE7B,GAAI,IAAMkoB,GAAQA,EAAO,GACvBvC,GAAUtf,GAAc6hB,EAAO,GAAK,QACjC,GAAI,IAAMA,GAAQA,EAAO,IAC5BvC,GAAUtf,GAAc6hB,EAAO,GAAK,SACjC,GAAI,IAAMA,GAAQA,EAAO,GAC5BvC,GAAUtf,GAAc6hB,EAAO,GAAK,SACjC,GAAkB,MAAd1C,EAAOxlB,GACd2lB,GAAuB,GAAbtf,MACP,IAAkB,MAAdmf,EAAOxlB,GAEX,MAAM,IAAItF,MAAJ,kCAAqC8qB,EAArC,8BAAiEuC,OAAOC,aAAaE,GAArF,MADTvC,GAAuB,GAAbtf,EAGZA,GAAc,GAGhB,OAAOsf,EC3OT,IAAMyC,EAAQ,CAAE,SAAU,QAAS,QAAS,SAAU,WAChDC,EAAW,CAAE,MAAO,SAAU,WAC9BC,EAAgB,CACpB,KAAM,iBAAkB,gBAAiB,YAAa,aAElDhoB,EAAQ,CACZ,GAAI,KAAM,MAAO,MAAO,OAAQ,MAAO,OAAQ,SAAU,YAAa,YAAa,WAAY,QAC/F,gBAAiB,aAAc,YAAa,cAAe,eAAgB,WAAY,aAAc,aAEjGioB,EAAe,CACnB,aAAc,eAAgB,YAAa,kBAAmB,uBAAwB,aAAc,uBAAwB,gBAAiB,UAAW,mBAAoB,eAAgB,aAAc,aAAc,WAAY,gBAAiB,gBAAiB,iBAAkB,oBAAqB,yBAA0B,mBAAoB,sBAAuB,wBAAyB,kBAAmB,UAAW,WAAY,iBAAkB,iBAAkB,cAAe,kBAAmB,qBAAsB,mBAE7gBC,EAAa,CACjB,SAAU,QAAS,UAAW,SAAU,UAAW,WAAY,QAAS,QAAS,SAAU,QAAS,QAAS,OAAQ,QAAS,SAAU,OAAQ,OAAQ,OAAQ,YAAa,SAAU,OAAQ,QAAS,UAAW,YAAa,iBAAkB,eAAgB,QAAS,OAAQ,YAAa,UAAW,SAAU,WA+BjTC,EAAoB,CACxB5c,KAAM,QACN0a,cAAe,CACb1a,KAAM,SACNya,QAAS,CACP/gB,OAAQ,CAAEsG,KAAM,UAChBpG,QAAS,CAAEoG,KAAM,UACjBlK,eAAgB,CAAEkK,KAAM,OAAQnG,OAAQ,MAwDxCgjB,EAAa,CACjB7c,KAAM,SACNya,QAAS,CACPjiB,UAAW,CAAEwH,KAAM,QAAS0a,cA9FT,CACrB1a,KAAM,SACNya,QAAS,CACPhhB,OAAQ,CAAEuG,KAAM,QAASua,KAAMmC,EAAc7iB,OAAQ,GACrDV,SAAU,CAAE6G,KAAM,OAAQnG,OAAQ,GAClC/G,MAAO,CAAEkN,KAAM,OAAQnG,OAAQ,GAC/BZ,YAAa,CAAE+G,KAAM,QAASua,KAAM9lB,EAAOoF,OAAQ,GACnD9B,QAAS,CAAEiI,KAAM,QAASua,KAAMgC,EAAO1iB,OAAQ,GAC/CR,SAAU,CACR2G,KAAM,QACN0a,cAAe,CACb1a,KAAM,SACNya,QAAS,CACPtnB,IAAK,CAAE6M,KAAM,QAASua,KAAM9lB,EAAOoF,OAAQ,GAC3CzG,MAAO,CAAE4M,KAAM,OAAQnG,OAAQ,IAEjCsgB,OAAQ,YAAmB,IAAjBhnB,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MACT0pB,EAAS3pB,EAAI4pB,SAAS,KAAO,GAAK,EACtC,MAAO,CAAE5pB,MAAKC,MAAOA,EAAQ0pB,IAE/BhB,OAAQ,YAAmB,IAAjB3oB,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MACT0pB,EAAS3pB,EAAI4pB,SAAS,KAAO,GAAK,EACtC,MAAO,CAAE5pB,MAAKC,MAAOA,EAAQ0pB,SAyEnCttB,UA7CoB,CACtBwQ,KAAM,SACNya,QAAS,CACP3rB,aAAc,CAAEkR,KAAM,QAASua,KAAMoC,EAAY9iB,OAAQ,GACzDY,QAAS,CAAEuF,KAAM,QAASua,KAAMiC,EAAU3iB,OAAQ,GAClDc,aAAc,CAAEqF,KAAM,QAASua,KAAMkC,EAAe5iB,OAAQ,GAC5D5F,cAAe,CAAE+L,KAAM,OAAQnG,OAAQ,GACvCmjB,cAAe,CAAEhd,KAAM,OAAQnG,OAAQ,GACvCtJ,SAAU,CAAEyP,KAAM,UAClBtF,YAAa,CACXsF,KAAM,OAAQnG,OAAQ,EACtBsgB,OAAQ,SAAC8C,GAAD,OAAUA,EAAO,EAAI,GAC7BnB,OAAQ,SAACoB,GAAD,OAAiB,IAARA,IAEnBtiB,gBAAiB,CACfoF,KAAM,SACNya,QAAS,CAAElkB,KAAM,KAAM+iB,MAAO,KAAMC,MAAO,MAC3CmB,cAAe,CAAE1a,KAAM,OAAQnG,OAAQ,IAEzChB,qBAAsB+jB,EACtBrlB,kBAAmB,CACjByI,KAAM,QACN0a,cAAe,CACb1a,KAAM,SACNya,QAAS,CACPtnB,IAAK,CAAE6M,KAAM,UACb5M,MAAO,CAAE4M,KAAM,YAGnBma,OAAQ,SAACgD,GAAD,OAAY9tB,OAAOC,QAAQ6tB,GAAQzoB,KAAI,yCAC5C,CAAEvB,IAD0C,KACrCC,MADqC,KACxB8M,WAAW7I,QAAQ,MAAO,UAEjDykB,OAAQ,SAACxsB,GAAD,OAAaD,OAAO6G,YAAY5G,EAAQoF,KAAI,gBAAEvB,EAAF,EAAEA,IAAKC,EAAP,EAAOA,MAAP,MAClD,CAACD,EAAK2G,SAAS1G,EAAMiE,QAAQ,KAAM,aAGvCwD,mBAAoB+hB,EACpBhsB,OAhDiB,CACnBoP,KAAM,SACNya,QAAS,CACPtnB,IAAK,CAAE6M,KAAM,UACbzP,SAAU,CAAEyP,KAAM,UAClBpE,YAAa,CAAEoE,KAAM,OAAQnG,OAAQ,GACrCgE,gBAAiB,CAAEmC,KAAM,QACzBlC,eAAgB,CAAEkC,KAAM,QACxBlK,eAAgB,CAAEkK,KAAM,OAAQnG,OAAQ,S,kBCnCrC,SAASujB,EAAazD,GAC3B,IAAM0D,EAAahuB,OAAO6G,YAAYyjB,EAAO2D,MAAM,KAAK5oB,KAAI,SAAA6G,GAAC,OAAIA,EAAE+hB,MAAM,SAEzE,IACE,OAAQxjB,SAASujB,EAAWjY,IAC1B,KAAK,EAAG,OAed,SAAuBuU,GAAS,IAAD,EFtBxB,SAAgBA,EAAQM,GAAS,IAAD,EACZoB,EAAW1B,EAAQ,EAAGM,EAAQ,MAAjDH,EAD+B,EAC/BA,OACN,GAFqC,EACvBF,SACCD,EAAO9f,OACpB,MAAM,IAAIhL,MAAJ,sCAAyC8qB,IACjD,OAAOG,EEmB0BgC,CAAOnC,EAAQkD,GAAxCrtB,EADqB,EACrBA,UAAWgJ,EADU,EACVA,UAInB,OAHAA,EAAU3I,SAAQ,SAAA0tB,GAChBA,EAAStlB,SAAWzI,EAAUV,gBAEzB,aACL0uB,gBAAiBC,IACjBjlB,aAAchJ,GAtBGkuB,CAAcL,EAAWM,GACxC,QAAS,OAwBf,SAAuBnuB,GAAY,IACzBouB,EAAwLpuB,EAAxLouB,IAAK9uB,EAAmLU,EAAnLV,aAAcyB,EAAqKf,EAArKe,SAAUkK,EAA2JjL,EAA3JiL,QAASE,EAAkJnL,EAAlJmL,aAAc9B,EAAoIrJ,EAApIqJ,qBAAsBtB,EAA8G/H,EAA9G+H,kBAAmB3G,EAA2FpB,EAA3FoB,OAAQ8J,EAAmFlL,EAAnFkL,YAAaG,EAAsErL,EAAtEqL,mBAAoB5G,EAAkDzE,EAAlDyE,cAAe+oB,EAAmCxtB,EAAnCwtB,cAAe9hB,EAAoB1L,EAApB0L,KAAM1C,EAAchJ,EAAdgJ,UAC5KqlB,EAAeruB,EAAUV,aAC/BU,EAAUgJ,UAAU3I,SAAQ,SAAA4I,GAC1BA,EAAIR,SAAW4lB,EACfplB,EAAIY,SAAWhK,OAAOC,QAAQmJ,EAAIY,UAAU3E,KAAI,yCAAmB,CAAEvB,IAArB,KAA0BC,MAA1B,YALlB,kBAOH8H,EAPG,GAOzB3E,EAPyB,KAOnB+iB,EAPmB,KAOZC,EAPY,KAQhC,MAAO,CACLiE,gBAAiBI,EACjB9uB,eAAcyB,WAAUkK,UAASE,eAAc9B,uBAAsBtB,oBAAmB3G,SAAQ8J,cAAaG,qBAAoB5G,gBAAe+oB,gBAChJpiB,gBAAiB,CAAErE,OAAM+iB,QAAOC,SAAS/gB,aAnCvBslB,CAAcC,IAAMC,MAAMrE,KAE5C,MAAOwB,GAGP,OAAO,MAKX,SAAS8C,EAAezuB,EAAWgJ,GACjC,MAAO,SFrBAuhB,EEqBkB,CAAEvqB,YAAWgJ,aAAaqkB,EFrBnB,M,2BGnBnB,SAASqB,IACtB,IAAMjmB,EAAWkmB,cACXC,EAAYnmB,EAASomB,OAC3B,GAAID,EAAW,CACb,IAAM5uB,EAAY4tB,EAAagB,EAAUE,UAAU,IACnD,OAAO,cAACC,EAAD,CAAS/uB,UAAWA,IAE3B,IAAMV,EAAemJ,EAASnJ,aAC9B,IAAKA,EAAc,OAAO,cAAC,IAAD,CAAU0vB,GAAE,MACtCC,cACA,IAAMC,EDbH,SAAuB5vB,GAC5B,IAAMU,EAAYC,IAAkBC,IAAIZ,GACxC,IAAKU,EAAW,OAAO,KAEvB,IAAMgJ,EAAYnJ,OAAOO,OAAOJ,EAAUG,mBACvCuC,QAAO,SAAAuG,GAAG,OAAIA,KACd/D,KAAI,SAAA0D,GAAE,OAAIrI,IAAiBL,IAAI0I,MAElC,IACE,OAAO6lB,EAAezuB,EAAWgJ,GACjC,MAAO2iB,GAGP,OAAO,MCASwD,CAAc7vB,GAC9B,OAAK4vB,GACLE,OAAOC,SAAS,EAAG,GACZ,cAAC,IAAD,CAAUL,GAAE,gBAAWE,MAFT,cAAC,IAAD,CAAUF,GAAE,MAKrC,SAASD,EAAT,GAAiC,IAAd/uB,EAAa,EAAbA,UAAa,EACJoQ,oBAAS,GADL,mBACvBkf,EADuB,KAChBC,EADgB,KAExBC,EAAMJ,OAAO3mB,SAAS4S,KAFE,EAOErb,EAAxBguB,gBACFyB,QARwB,MAOJ,EAPI,GAQOxB,IACrC,OAAO,eAAC7E,EAAA,EAAD,CAAW3Y,UAAU,OAArB,UACL,eAACif,EAAA,EAAD,CAAOjH,QAAS,kBAAM8G,GAAS,IAAQI,KAAML,EAAOM,MAAO,IAAMC,UAAQ,EAAC3Y,MAAO,CAC/E4Y,SAAU,WACVC,IAAK,GACLC,MAAO,IAHT,UAKE,cAACN,EAAA,EAAMvW,OAAP,UAAc,mBAAG1I,UAAU,UAAb,iCACd,cAACif,EAAA,EAAMtW,KAAP,0CAEF,cAACK,EAAA,EAAD,CAAMP,GAAG,cAAclE,KAAK,YAAYvE,UAAU,OAAlD,SACE,eAACgJ,EAAA,EAAKL,KAAN,CAAW3I,UAAU,MAArB,UACE,eAACuQ,EAAA,EAAD,CAAYvQ,UAAU,OAAtB,UACE,cAACuQ,EAAA,EAAWpK,QAAZ,UACE,cAACwE,EAAA,EAAD,CAAQ3F,QAnBM,WACtBwa,UAAUC,UAAUC,UAAUX,GAC9BD,GAAS,IAiBD,SACE,iCAAM,cAAC,IAAD,CAAiBre,KAAMkf,MAA7B,gCAGJ,cAACC,EAAA,EAAKC,QAAN,CAAcC,UAAQ,EAAC3sB,MAAOwrB,OAAO3mB,SAAS4S,KAAM5F,QAAS,SAAA9S,GAAC,OAAIA,EAAEiO,OAAO4f,eAE5Ef,GAAc,cAAC9P,EAAA,EAAD,CAAOxK,QAAQ,UAAU1E,UAAU,iBAAnC,wJAGnB,cAACoX,EAAA,QAAD,CAAsB7nB,UAAWA","file":"static/js/12.aab24160.chunk.js","sourcesContent":["import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentDocumentSections = (stats, talentKey) =>\r\n    this.getTalentDocument(stats.characterKey, talentKey).map(section => typeof section === \"function\" ? section(stats) : section)\r\n\r\n  static getTalentField = (stats, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\r\n    if (!stats) return defVal\r\n    const field = this.getTalentDocumentSections(stats, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\r\n    if (!field) return defVal\r\n    return typeof field === \"function\" ? field(stats) : field\r\n  }\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return typeof field?.[key] === \"function\" ? field[key](stats) : field[key]\r\n  }\r\n\r\n  static getTalentStats = (charKey, talentKey, stats, defVal = null) => {\r\n    const talentStats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof talentStats === \"function\")\r\n      return talentStats(stats)\r\n    return talentStats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, stats) => {\r\n    const talents = this.getCDataObj(charKey)?.talent || {}\r\n    const statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(charKey, talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (stats, talentKey, conditionalKey, defVal = null) => {\r\n    const sections = this.getTalentDocumentSections(stats, talentKey)\r\n    let cond = null\r\n    for (const section of sections) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(stats)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  //look up the formula, and generate the formulaPath to send to worker.\r\n  static getFormulaPath(characterKey, talentKey, formula) {\r\n    const formulaDB = this.getCDataObj(characterKey)?.formula\r\n    if (!formulaDB) return\r\n    let formulaKey\r\n    if (talentKey === \"auto\") {\r\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\r\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\r\n        if (formulaKey) {\r\n          talentKey = tk\r\n          break;\r\n        }\r\n      }\r\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\r\n    if (!formulaKey) return\r\n    return { characterKey, talentKey, formulaKey }\r\n  }\r\n\r\n\r\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\r\n\r\n  static getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    const isAutoElemental = Character.isAutoElemental(characterKey)\r\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    if (!isAutoElemental)\r\n      basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (this.hasTalentPage(characterKey)) {\r\n      const charFormulas = {}\r\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\r\n        Character.getTalentDocumentSections(stats, talentKey)?.forEach((section, sectionIndex) =>\r\n          section?.fields?.forEach((field, fieldIndex) => {\r\n            const hasFormula = field?.formula || this.getTalentField(stats, talentKey, sectionIndex, fieldIndex)?.formula\r\n            if (!hasFormula) return\r\n            if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n            charFormulas[talentKey].push({ talentKey, sectionIndex, fieldIndex })\r\n          })))\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {\r\n      //generic average hit parameters.\r\n      const genericAvgHit = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical \r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\r\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst \r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    if (!character) return {}\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    initialStats.characterEle = this.getElementalKey(characterKey);\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.talentConditionals = talentConditionals\r\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, initialStats).forEach(s => this.mergeStats(initialStats, s))\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      const conditional = Character.getTalentConditional(initialStats, talentKey, conditionalKey)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    return initialStats\r\n  }\r\n}","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nimport { objMultiplication } from '../Util/Util.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    stats = stats(refineIndex)\r\n    if (stacks !== 1) objMultiplication(stats, stacks)\r\n    return stats\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  let displayValue = value\r\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\r\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\r\n  const props = {\r\n    type: \"number\",\r\n    className: \"hide-appearance\",\r\n    placeholder,\r\n    value: displayValue,\r\n    disabled,\r\n    onChange: (e) => {\r\n      let value = e.target.value;\r\n      if (float) {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\r\n        else value = parseFloat(value) || 0\r\n      } else {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\r\n        else value = parseInt(value) || 0\r\n      }\r\n      onValueChange?.(value);\r\n    },\r\n    onFocus: () => setFocus(true),\r\n    onBlur: () => setFocus(false),\r\n  }\r\n  return <FormControl {...props} aria-label=\"custom-input\" />\r\n}\r\nexport default CustomFormControl;","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\r\n  let val, oldVal, fixed, unit, variant;\r\n  let label = \"\"\r\n  if (typeof statKey === \"string\") {//basic statKey\r\n    if (newBuild && equippedBuild) {//comparable\r\n      //newbuild -> val\r\n      //equippedbuild ->old\r\n      val = newBuild?.finalStats?.[statKey] ?? 0\r\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\r\n    } else {\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      //build ->val\r\n      val = build?.finalStats?.[statKey] ?? 0\r\n      //statvaluewith override -> old\r\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n      oldVal === invalid && (oldVal = undefined)\r\n      if (statKey === \"finalHP\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n      else if (statKey === \"finalDEF\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n      else if (statKey === \"finalATK\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n    }\r\n    unit = Stat.getStatUnit(statKey)\r\n    fixed = Stat.fixedUnit(statKey)\r\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n  } else {//from character sheet\r\n    const build = newBuild ? newBuild : equippedBuild\r\n    const { talentKey, sectionIndex, fieldIndex } = statKey\r\n    const field = Character.getTalentField(build.finalStats, talentKey, sectionIndex, fieldIndex)\r\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", build.finalStats)\r\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build.finalStats)}</span>\r\n    fixed = Character.getTalentFieldValue(field, \"fixed\", build.finalStats, 0)\r\n    val = Character.getTalentFieldValue(field, \"formula\", build.finalStats)?.[0]?.(build.finalStats)\r\n    if (newBuild && equippedBuild) {//comparable\r\n      oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n    }\r\n  }\r\n\r\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\r\n  reactionMode === null && (reactionMode = \"none\")\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\r\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ character, character: { characterKey }, build }) {\r\n  return <div>\r\n    {Object.entries(Character.getDisplayStatKeys(build.finalStats)).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n      return <Card bg=\"darkcontent\" text=\"lightfont\" key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              //simple statKey field\r\n              if (typeof field === \"string\") {\r\n                const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, [field]), build?.finalStats?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build.finalStats)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              //fields\r\n              const talentField = Character.getTalentField(build.finalStats, field.talentKey, field.sectionIndex, field.fieldIndex)\r\n              const fieldText = Character.getTalentFieldValue(talentField, \"text\", build.finalStats)\r\n              const fieldVariant = Character.getTalentFieldValue(talentField, \"variant\", build.finalStats)\r\n              const fieldFormulaText = Character.getTalentFieldValue(talentField, \"formulaText\", build.finalStats)\r\n              const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(talentField, \"formula\", build.finalStats, [])\r\n              if (!fieldFormula || !fieldFormulaDependency) return null\r\n              const fieldValue = fieldFormula?.(build.finalStats)?.toFixed?.()\r\n              const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, fieldFormulaDependency), build?.finalStats?.modifiers).reverse()\r\n              return <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                  <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                  <Card.Body className=\"p-2\">\r\n                    <div className=\"mb-n2\">\r\n                      <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n                      {subFormulaKeys.map(subKey =>\r\n                        <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} >\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { hitMode }, setState, setOverride, newBuild, equippedBuild }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Accordion>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Options</span>\r\n            <small>Expand below to edit enemy details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* TODO reaction interaction UI */}\r\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"1\">\r\n        <Card.Body>\r\n          <Row className=\"mb-2\"><Col>\r\n            <Button variant=\"warning\" >\r\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                To get the specific resistance values of enemies, please visit the wiki.\r\n          </a>\r\n            </Button >\r\n          </Col></Row>\r\n          <Row>\r\n            <Col xs={12} xl={6} className=\"mb-2\">\r\n              <StatInput\r\n                name={<b>Enemy Level</b>}\r\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\r\n              />\r\n            </Col>\r\n            {Character.getElementalKeys().map(eleKey => {\r\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                <StatInput\r\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  placeholder={Stat.getStatNameRaw(statKey)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                  onValueChange={(val) => setOverride?.(statKey, val)}\r\n                  disabled={elementImmunity}\r\n                />\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n\r\n    <Card bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Formulas</span>\r\n            <small>Expand below to see calculation details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"2\">\r\n        <Card.Body className=\"p-2\">\r\n          <CalculationDisplay character={character} build={build} />\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n}\r\nexport {\r\n  HitModeToggle,\r\n  ReactionToggle,\r\n};\r\n\r\n","import { useCallback, useState } from \"react\"\r\n\r\nexport function useForceUpdate() {\r\n  const [, update] = useState()\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return forceUpdateHook\r\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Character from '../Character/Character';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { useForceUpdate } from '../Util/ReactUtil';\r\nimport Artifact from './Artifact';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, editable, onEdit, onDelete, assumeFull = false }) {\r\n  const forceUpdateHook = useForceUpdate()\r\n  useEffect(() => {\r\n    Artifact.getDataImport()?.then(forceUpdateHook)\r\n    if (artifactId) ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () => {\r\n      if (artifactId) ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook)\r\n    }\r\n  }, [artifactId, forceUpdateHook])\r\n  const equipOnChar = useCallback(\r\n    (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey),\r\n    [artifactId],\r\n  )\r\n  if (!artifactId && !artifactObj) return null;\r\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\r\n  if (!art) return null;\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n  const { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge percent={currentEfficiency} valid={artifactValid} className=\"float-right\">\r\n          {currentEfficiency?.toFixed(2) ?? currentEfficiency + \"%\"}\r\n        </PercentBadge></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency?.toFixed(2) ?? maximumEfficiency + \"%\"}\r\n        </PercentBadge></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location, \"Inventory\")}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.update(art);\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip>Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","import React from 'react';\r\nimport { Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport Stat from \"../../Stat\";\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from './DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState, setOverride, artifacts }) {\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(build.finalStats)\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  return <>\r\n    {Character.hasTalentPage(characterKey) && <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>}\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body>\r\n            <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, editable }} />\r\n          </Card.Body>\r\n          {newBuild ? <Card.Footer>\r\n            <Button onClick={() => {\r\n              Character.equipArtifacts(characterKey, newBuild.artifactIds)\r\n              forceUpdate?.()\r\n            }}>Equip All artifacts to current character</Button>\r\n            {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n          </Card.Footer> : null}\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {artifacts ?\r\n            Artifact.getSlotKeys().map(slotKey => {\r\n              const art = artifacts.find(art => art.slotKey === slotKey)\r\n              return art ? <Col sm={6} lg={4} key={slotKey} className=\"mb-2\">\r\n                <ArtifactCard artifactObj={art} />\r\n              </Col> : null\r\n            }) : Artifact.getSlotKeys().map(slotKey =>\r\n              build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n                <ArtifactCard artifactId={build.artifactIds[slotKey]} editable={Boolean(forceUpdate)} assumeFull={artifactsAssumeFull} />\r\n              </Col> : null\r\n            )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl onValueChange={(val) => setOverride(\"characterLevel\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"characterLevel\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build?.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  const { editable, character, setOverride, equippedBuild, newBuild } = props\r\n\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = []\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\r\n                  onValueChange={(value) => setOverride(\"specializedStatVal\", value)} />\r\n                {isPercentSpecialStatSelect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from 'react';\r\nimport { useState } from \"react\";\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from \"./DamageOptionsAndCalculation\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey }, newBuild, equippedBuild }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build?.finalStats} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : {\r\n      text: Stat.getStatName(statKey),\r\n      variant: Stat.getStatVariant(statKey),\r\n      value: statVal,\r\n      fixed: Stat.fixedUnit(statKey),\r\n      unit: Stat.getStatUnit(statKey)\r\n    }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, talentLevelKeys, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => setState(state => {\r\n        const stateTalentLevelKeys = state.talentLevelKeys || {}\r\n        stateTalentLevelKeys[tKey] = newTalentLevelKey\r\n        return { talentLevelKeys: stateTalentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  const talentStats = Character.getTalentStats(characterKey, talentKey, build.finalStats)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(build.finalStats)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(build.finalStats)\r\n        let fields = section.fields ?? []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(build.finalStats)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character: { compareAgainstEquipped, }, field, index, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(build.finalStats)\r\n  if (!field) return null\r\n\r\n  const fieldText = Character.getTalentFieldValue(field, \"text\", build.finalStats)\r\n  const fieldVariant = Character.getTalentFieldValue(field, \"variant\", build.finalStats)\r\n\r\n  const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build.finalStats)\r\n  const formulaTextOverlay = fieldFormulaText ? <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>{fieldFormulaText}</Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger> : null\r\n\r\n  let fieldVal = null\r\n  if (field.value)\r\n    fieldVal = Character.getTalentFieldValue(field, \"value\", build.finalStats)\r\n  else if (field.formula)\r\n    fieldVal = Character.getTalentFieldValue(field, \"formula\", build.finalStats)?.[0]?.(build.finalStats)\r\n\r\n  let fixedVal = field.fixed || 0\r\n  const unit = Character.getTalentFieldValue(field, \"unit\", build.finalStats)\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild.finalStats)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { deepClone } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = CharacterDisplayCard.getInitialState()\r\n    const { characterKey, character } = props\r\n    if (characterKey) {\r\n      const char = CharacterDatabase.get(characterKey) ?? { characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.state = { ...this.state, ...char }\r\n    } else if (character) {\r\n      this.state = { ...this.state, ...character }\r\n    }\r\n  }\r\n\r\n  static initialState = {\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    hitMode: \"hit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => deepClone(CharacterDisplayCard.initialState)\r\n  //UI will not update if the character is updated in DB. Components will have to call this to update this UI.\r\n  forceUpdateComponent = () => {\r\n    if (this.state.characterKey)\r\n      this.setState(CharacterDatabase.get(this.state.characterKey))\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setCharacterKey = (characterKey) => {\r\n    let state = CharacterDisplayCard.getInitialState()\r\n    let char = CharacterDatabase.get(characterKey)\r\n    if (char) state = { ...state, ...char }\r\n    else {\r\n      state = { ...state, characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.updateCharacter(this.state)\r\n    }\r\n    this.setState(state)\r\n    this.props?.setCharacterKey?.(characterKey)\r\n  }\r\n\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  updateCharacter(state) {\r\n    state = deepClone(state)\r\n    delete state.compareAgainstEquipped\r\n    CharacterDatabase.update(state)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.characterKey !== this.props.characterKey && this.props.characterKey !== this.state.characterKey)\r\n      this.setCharacterKey(this.props.characterKey)\r\n    if (this.props.editable && this.state.characterKey) {\r\n      //save this.state as character to character db.\r\n      this.updateCharacter(this.state)\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose, tabName } = this.props\r\n    const character = this.state\r\n    //transfer the hitmode/reactions over \r\n    if (newBuild?.finalStats) {\r\n      newBuild = deepClone(newBuild)\r\n      newBuild.finalStats.hitMode = character.hitMode;\r\n      newBuild.finalStats.reactionMode = character.reactionMode;\r\n    }\r\n\r\n    const { characterKey, levelKey, compareAgainstEquipped, artifacts: flexArts } = character\r\n    const equippedBuild = Character.calculateBuild(character)\r\n    const HeaderIconDisplay = characterKey ? <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span> : <span>Select a Character</span>\r\n    const commonPaneProps = { character, newBuild, equippedBuild: !newBuild || compareAgainstEquipped ? equippedBuild : undefined, editable, setState: u => this.setState(u), setOverride: this.setOverride, forceUpdate: this.forceUpdateComponent }\r\n    if (flexArts) commonPaneProps.artifacts = flexArts//from flex\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"} className=\"mr-auto\">\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown as={ButtonGroup}>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\r\n                <h6 className=\"d-inline\">Stats Template: {Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(character, \"characterLevel\")}</span>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          {Boolean(onClose) && <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {Boolean(characterKey) && <Card.Body>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {(process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)) ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled>Talents <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\">Talents</Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n            {!flexArts && <Nav.Item>\r\n              <WIPComponent>\r\n                <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n              </WIPComponent>\r\n            </Nav.Item>}\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setConstellation={this.setConstellation}\r\n                {...commonPaneProps}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>}\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","/// Schema keys\r\n/// Common {\r\n///   encode?: A function that transform encoding object into the specified format\r\n///   decode?: A function that transform object in the specified format into the decoded object\r\n/// }\r\n///\r\n/// UInt: { type: \"uint\",\r\n///   length?: number of bytes, uses variable-length format if not set,\r\n/// }\r\n/// String: { type: \"string\" }\r\n/// Fixed: { type: \"fixed\",\r\n///   list: array of permitted items,\r\n///   length?: Same as UInt,\r\n/// }\r\n/// Array: { type: \"array\",\r\n///   schemas?: Array of schemas, in the same order as the item,\r\n///   defaultSchema?: Default schema for when `schemas[i]` is `null`,\r\n/// }\r\n/// Object: { type: \"object\",\r\n///   schemas: A key-schema dictionary, some value entries may be `null`,\r\n///   defaultSchema?: default schema for when `schemas[key]` is `null`,\r\n/// }\r\n/// Sparse: { type: \"sparse\",\r\n///   keys?: A list of permitted keys, `null` if all keys are permitted,\r\n///   keySchema: Common schema for keys,\r\n///   valueSchema: Common schema for values,\r\n/// }\r\n\r\nexport function encode(data, schema) {\r\n  return encodeItem(data, schema, null)\r\n}\r\nexport function decode(string, schema) {\r\n  let { result, offset } = decodeItem(string, 0, schema, null)\r\n  if (offset !== string.length)\r\n    throw new Error(`Decoding string is too long ${string}`)\r\n  return result\r\n}\r\n\r\n// Keep the length low. We might want to reserve high bits for later extension.\r\nexport function encodeLength(length) {\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return numberToString(length, 1)\r\n}\r\nexport function decodeLength(string, offset) {\r\n  let length = stringToNumber(string[offset])\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return {\r\n    result: length,\r\n    offset: offset + 1,\r\n  }\r\n}\r\n\r\nfunction encodeItem(data, schema, pathItem) {\r\n  try {\r\n    if (schema.encode)\r\n      data = schema.encode(data)\r\n    switch (schema.type) {\r\n      case \"uint\": return encodeUInt(data, schema)\r\n      case \"string\": return encodeString(data, schema)\r\n      case \"fixed\": return encodeFixed(data, schema)\r\n      case \"array\": return encodeArray(data, schema)\r\n      case \"object\": return encodeObject(data, schema)\r\n      case \"sparse\": return encodeSparse(data, schema)\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\nfunction decodeItem(string, offset, schema, pathItem) {\r\n  try {\r\n    let result\r\n    switch (schema.type) {\r\n      case \"uint\": ({result, offset} = decodeUInt(string, offset, schema)); break\r\n      case \"string\": ({result, offset} = decodeString(string, offset, schema)); break\r\n      case \"fixed\": ({result, offset} = decodeFixed(string, offset, schema)); break\r\n      case \"array\": ({result, offset} = decodeArray(string, offset, schema)); break\r\n      case \"object\": ({result, offset} = decodeObject(string, offset, schema)); break\r\n      case \"sparse\": ({result, offset} = decodeSparse(string, offset, schema)); break\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n    if (schema.decode) result = schema.decode(result)\r\n    return { result, offset }\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\n\r\nfunction encodeSparse(data, schema) {\r\n  const { keySchema, keys, valueSchema } = schema\r\n  const items = Object.entries(data).filter(([key]) => keys?.includes(key) ?? true)\r\n\r\n  return encodeLength(items.length) + items.map(([key, value]) =>\r\n    encodeItem(key, keySchema, key) + encodeItem(value, valueSchema, key)\r\n  ).join('')\r\n}\r\nfunction decodeSparse(string, offset, schema) {\r\n  const { keys, keySchema, valueSchema } = schema\r\n  let length\r\n  ({result: length, offset} = decodeLength(string, offset))\r\n\r\n  let result = Object.fromEntries([...new Array(length)].map(() => {\r\n    let key, value;\r\n    ({result: key, offset} = decodeItem(string, offset, keySchema, null));\r\n    ({result: value, offset} = decodeItem(string, offset, valueSchema, key));\r\n    return [key, value]\r\n  }).filter(([key]) => keys?.includes(key) ?? true))\r\n\r\n  return { result, offset }\r\n}\r\n\r\nfunction encodeObject(data, schema) {\r\n  const { schemas=[], defaultSchema } = schema\r\n\r\n  return Object.entries(schemas).map(([key, schema]) => {\r\n    schema = schema ?? defaultSchema\r\n    return encodeItem(key in data ? data[key] : schema.default, schema, key)\r\n  }).join('')\r\n}\r\nfunction decodeObject(string, offset, schema) {\r\n  const { schemas=[], defaultSchema } = schema\r\n\r\n  const result = Object.fromEntries(Object.entries(schemas).map(([key, schema]) => {\r\n    let result\r\n    ({result, offset} = decodeItem(string, offset, schema ?? defaultSchema, key))\r\n    return [key, result]\r\n  }))\r\n  return { result, offset }\r\n}\r\n\r\nfunction encodeArray(data, schema) {\r\n  const { schemas = [], defaultSchema } = schema\r\n  return encodeLength(data.length) + data.map((item, i) =>\r\n    encodeItem(item, schemas[i] ?? defaultSchema, i)\r\n  ).join('')\r\n}\r\nfunction decodeArray(string, offset, schema) {\r\n  const { schemas = [], defaultSchema } = schema\r\n  let length\r\n  ({result: length, offset} = decodeLength(string, offset))\r\n  let result = [...new Array(length)].map((unused, i) => {\r\n    let result\r\n    ({result, offset} = decodeItem(string, offset, schemas[i] ?? defaultSchema, i))\r\n    return result\r\n  })\r\n  return { result, offset }\r\n}\r\n\r\nfunction encodeFixed(data, schema) {\r\n  return encodeUInt(schema.list.indexOf(data), schema)\r\n}\r\nfunction decodeFixed(string, offset, schema) {\r\n  let result\r\n  ({result, offset} = decodeUInt(string, offset, schema))\r\n  return { result: schema.list[result], offset }\r\n}\r\n\r\nfunction encodeString(string, schema) {\r\n  if (!string.match(/^[a-z0-9\\-_]+$/i))\r\n    throw new Error(`Cannot encode string ${string}: not alphanumeric`)\r\n  return encodeLength(string.length) + string\r\n}\r\nfunction decodeString(string, offset, schema) {\r\n  let length\r\n  ({ result: length, offset } = decodeLength(string, offset))\r\n  return {\r\n    result: string.slice(offset, offset + length),\r\n    offset: offset + length\r\n  }\r\n}\r\n\r\nfunction encodeUInt(uint, schema) {\r\n  const string = numberToString(uint, schema.length)\r\n  return schema.length ? string : (encodeLength(string.length) + string)\r\n}\r\nfunction decodeUInt(string, offset, schema) {\r\n  let length = schema.length\r\n\r\n  if (!schema.length)\r\n    ({ result: length, offset } = decodeLength(string, offset))\r\n\r\n  return {\r\n    result: stringToNumber(string.slice(offset, offset + length)),\r\n    offset: offset + length\r\n  }\r\n}\r\n\r\nfunction numberToString(number, length = 0) {\r\n  if (number < 0) throw new Error(`Cannot encode negative number ${number}`)\r\n\r\n  var string = \"\"\r\n  do {\r\n    const remainder = number % 64\r\n    number = Math.floor(number / 64)\r\n    if (remainder < 10) // 0-9\r\n      string += String.fromCharCode(remainder + 48 - 0)\r\n    else if (remainder < 36) // a-z\r\n      string += String.fromCharCode(remainder + 97 - 10)\r\n    else if (remainder < 62) // A-Z\r\n      string += String.fromCharCode(remainder + 65 - 36)\r\n    else if (remainder === 62) // -\r\n      string += \"-\"\r\n    else if (remainder === 63) // _\r\n      string += \"_\"\r\n  } while (number > 0)\r\n\r\n  if (!length)\r\n    return string\r\n\r\n  if (string.length > length)\r\n    throw new Error(`Cannot encode uint ${number}: value too large`)\r\n  return string.padEnd(length, \"0\")\r\n}\r\nfunction stringToNumber(string) {\r\n  let result = 0, multiplier = 1\r\n\r\n  for (let i = 0; i < string.length; i++) {\r\n    let code = string.charCodeAt(i)\r\n\r\n    if (48 <= code && code < 58) // 0-9\r\n      result += multiplier * (code - 48 + 0)\r\n    else if (97 <= code && code < 123) // a-z\r\n      result += multiplier * (code - 97 + 10)\r\n    else if (65 <= code && code < 91) // A-Z\r\n      result += multiplier * (code - 65 + 36)\r\n    else if (string[i] === '-')\r\n      result += multiplier * 62\r\n    else if (string[i] === '_')\r\n      result += multiplier * 63\r\n    else throw new Error(`Cannot parse UInt from \"${string}\", which contains \"${String.fromCharCode(code)}\"`)\r\n\r\n    multiplier *= 64\r\n  }\r\n\r\n  return result\r\n}\r\n","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nconst slots = [ \"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\", ]\r\nconst hitModes = [ \"hit\", \"avgHit\", \"critHit\", ]\r\nconst reactionModes = [\r\n  null, \"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",\r\n]\r\nconst stats = [\r\n  \"\", \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n  \"physical_dmg_\", \"anemo_dmg_\", \"cryo_dmg_\", \"dendro_dmg_\", \"electro_dmg_\", \"geo_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\",\r\n]\r\nconst artifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\", \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\", \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\", \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\", \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\", \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\", \"WanderersTroupe\",\r\n]\r\nconst characters = [\r\n  \"albedo\", \"amber\", \"barbara\", \"beidou\", \"bennett\", \"chongyun\", \"diluc\", \"diona\", \"fischl\", \"ganyu\", \"hutao\", \"jean\", \"kaeya\", \"keqing\", \"klee\", \"lisa\", \"mona\", \"ningguang\", \"noelle\", \"qiqi\", \"razor\", \"sucrose\", \"tartaglia\", \"traveler_anemo\", \"traveler_geo\", \"venti\", \"xiao\", \"xiangling\", \"xingqiu\", \"xinyan\", \"zhongli\",\r\n]\r\n\r\nconst artifactSchema = {\r\n  type: \"object\",\r\n  schemas: {\r\n    setKey: { type: \"fixed\", list: artifactSets, length: 1 },\r\n    numStars: { type: \"uint\", length: 1 },\r\n    level: { type: \"uint\", length: 2 },\r\n    mainStatKey: { type: \"fixed\", list: stats, length: 1 },\r\n    slotKey: { type: \"fixed\", list: slots, length: 1 },\r\n    substats: {\r\n      type: \"array\",\r\n      defaultSchema: {\r\n        type: \"object\",\r\n        schemas: {\r\n          key: { type: \"fixed\", list: stats, length: 1 },\r\n          value: { type: \"uint\", length: 2 },\r\n        },\r\n        encode: ({key, value}) => {\r\n          let factor = key.endsWith(\"_\") ? 10 : 1 // one decimal place for percentage\r\n          return { key, value: value * factor }\r\n        },\r\n        decode: ({key, value}) => {\r\n          let factor = key.endsWith(\"_\") ? 10 : 1 // one decomal place for percentage\r\n          return { key, value: value / factor }\r\n        },\r\n      },\r\n    }\r\n  }\r\n}\r\nconst conditionalSchema = {\r\n  type: \"array\",\r\n  defaultSchema: {\r\n    type: \"object\",\r\n    schemas: {\r\n      srcKey: { type: \"string\" },\r\n      srcKey2: { type: \"string\" },\r\n      conditionalNum: { type: \"uint\", length: 1 },\r\n    }\r\n  }\r\n}\r\nconst weaponSchema = {\r\n  type: \"object\",\r\n  schemas: {\r\n    key: { type: \"string\" },\r\n    levelKey: { type: \"string\" },\r\n    refineIndex: { type: \"uint\", length: 1 },\r\n    overrideMainVal: { type: \"uint\" },\r\n    overrideSubVal: { type: \"uint\" },\r\n    conditionalNum: { type: \"uint\", length: 1 },\r\n  }\r\n}\r\nconst characterSchema = {\r\n  type: \"object\",\r\n  schemas: {\r\n    characterKey: { type: \"fixed\", list: characters, length: 1 },\r\n    hitMode: { type: \"fixed\", list: hitModes, length: 1 },\r\n    reactionMode: { type: \"fixed\", list: reactionModes, length: 1 },\r\n    constellation: { type: \"uint\", length: 1 },\r\n    overrideLevel: { type: \"uint\", length: 2 },\r\n    levelKey: { type: \"string\" },\r\n    autoInfused: {\r\n      type: \"uint\", length: 1,\r\n      encode: (bool) => bool ? 1 : 0,\r\n      decode: (int) => int === 1,\r\n    },\r\n    talentLevelKeys: {\r\n      type: \"object\",\r\n      schemas: { auto: null, skill: null, burst: null },\r\n      defaultSchema: { type: \"uint\", length: 1, }\r\n    },\r\n    artifactConditionals: conditionalSchema,\r\n    baseStatOverrides: {\r\n      type: \"array\",\r\n      defaultSchema: {\r\n        type: \"object\",\r\n        schemas: {\r\n          key: { type: \"string\" },\r\n          value: { type: \"string\" },\r\n        }\r\n      },\r\n      encode: (object) => Object.entries(object).map(([key, value]) =>\r\n        ({ key, value: value.toString().replace(/\\./g, '_') })\r\n      ),\r\n      decode: (entries) => Object.fromEntries(entries.map(({key, value}) =>\r\n        [key, parseInt(value.replace(/_/g, '.'))]\r\n      ))\r\n    },\r\n    talentConditionals: conditionalSchema,\r\n    weapon: weaponSchema,\r\n  }\r\n}\r\n\r\nconst flexSchema = {\r\n  type: \"object\",\r\n  schemas: {\r\n    artifacts: { type: \"array\", defaultSchema: artifactSchema },\r\n    character: characterSchema\r\n  }\r\n}\r\n\r\nexport {\r\n  flexSchema\r\n}\r\n// For testing purpose only, no need to maintain strict ordering\r\nexport const constants = {\r\n  slots, hitModes, reactionModes, stats, artifactSets, characters\r\n}\r\n","import ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { CurrentDatabaseVersion } from \"../Database/DatabaseUtil\";\r\nimport { decode, encode } from \"./CodingUtil\";\r\nimport { flexSchema } from \"./Schemas\";\r\nimport urlon from 'urlon'\r\n\r\nexport function createFlexObj(characterKey) {\r\n  const character = CharacterDatabase.get(characterKey)\r\n  if (!character) return null\r\n\r\n  const artifacts = Object.values(character.equippedArtifacts)\r\n    .filter(art => art)\r\n    .map(id => ArtifactDatabase.get(id))\r\n\r\n  try {\r\n    return _createFlexObj(character, artifacts)\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${error.path ?? []}: ${error}`)\r\n    return null\r\n  }\r\n}\r\n\r\n/// Print new url query from old url\r\nexport function updateFlexURL(oldURL) {\r\n  const [hostname, queries] = oldURL.split(\"flex?\")\r\n  const parsed = parseFlexObj(queries)\r\n  console.log(\r\n    hostname + \"flex?\" + _createFlexObj(parsed, parsed.artifacts)\r\n  )\r\n}\r\n\r\nexport function parseFlexObj(string) {\r\n  const parameters = Object.fromEntries(string.split('&').map(s => s.split('=')))\r\n\r\n  try {\r\n    switch (parseInt(parameters.v)) {\r\n      case 1: return parseFlexObj1(parameters.d)\r\n      default: return parseFlexObj0(urlon.parse(string))\r\n    }\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${error.path ?? []}: ${error}`)\r\n    return null\r\n  }\r\n}\r\n\r\n// TODO Remove this when all test URLs are converted to new format\r\nfunction _createFlexObj(character, artifacts) {\r\n  return \"v=1&d=\" + encode({ character, artifacts }, flexSchema)\r\n}\r\n\r\nfunction parseFlexObj1(string) {\r\n  const { character, artifacts } = decode(string, flexSchema)\r\n  artifacts.forEach(artifact => {\r\n    artifact.location = character.characterKey\r\n  })\r\n  return {\r\n    databaseVersion: CurrentDatabaseVersion,\r\n    artifacts, ...character\r\n  }\r\n}\r\nfunction parseFlexObj0(character) {\r\n  const { dbv, characterKey, levelKey, hitMode, reactionMode, artifactConditionals, baseStatOverrides, weapon, autoInfused, talentConditionals, constellation, overrideLevel, tlvl, artifacts } = character\r\n  const characterkey = character.characterKey\r\n  character.artifacts.forEach(art => {\r\n    art.location = characterkey\r\n    art.substats = Object.entries(art.substats).map(([key, value]) => ({ key, value }))\r\n  });\r\n  const [auto, skill, burst] = tlvl\r\n  return {\r\n    databaseVersion: dbv,\r\n    characterKey, levelKey, hitMode, reactionMode, artifactConditionals, baseStatOverrides, weapon, autoInfused, talentConditionals, constellation, overrideLevel,\r\n    talentLevelKeys: { auto, skill, burst }, artifacts\r\n  }\r\n}\r\n","import { Alert, Button, Card, Container, Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { CurrentDatabaseVersion, DatabaseInitAndVerify } from '../Database/DatabaseUtil';\r\nimport '../StatDependency'\r\nimport { createFlexObj, parseFlexObj } from \"../Util/FlexUtil\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TestDisplay() {\r\n  const location = useLocation()\r\n  const searchStr = location.search\r\n  if (searchStr) {\r\n    const character = parseFlexObj(searchStr.substring(1))\r\n    return <Display character={character} />\r\n  } else {\r\n    const characterKey = location.characterKey\r\n    if (!characterKey) return <Redirect to={`/`} />\r\n    DatabaseInitAndVerify()\r\n    const flexObj = createFlexObj(characterKey)\r\n    if (!flexObj) return <Redirect to={`/`} />\r\n    window.scrollTo(0, 0)//sometimes the window isnt scolled to the top on redirect.\r\n    return <Redirect to={`/flex?${flexObj}`} />\r\n  }\r\n}\r\nfunction Display({ character }) {\r\n  const [toast, settoast] = useState(false)\r\n  const url = window.location.href\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(url)\r\n    settoast(true)\r\n  }\r\n  const { databaseVersion = 0 } = character\r\n  const isUpToDate = databaseVersion < CurrentDatabaseVersion\r\n  return <Container className=\"my-2\">\r\n    <Toast onClose={() => settoast(false)} show={toast} delay={3000} autohide style={{\r\n      position: 'absolute',\r\n      top: 50,\r\n      right: 50,\r\n    }}>\r\n      <Toast.Header><b className=\"mr-auto\">Genshin Optimizer</b></Toast.Header>\r\n      <Toast.Body>URL copied to clipboard.</Toast.Body>\r\n    </Toast>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <InputGroup className=\"mb-0\">\r\n          <InputGroup.Prepend>\r\n            <Button onClick={copyToClipboard}>\r\n              <span><FontAwesomeIcon icon={faLink} /> Copy URL to clipboard</span>\r\n            </Button>\r\n          </InputGroup.Prepend>\r\n          <Form.Control readOnly value={window.location.href} onClick={e => e.target.select()} />\r\n        </InputGroup>\r\n        {isUpToDate && <Alert variant=\"warning\" className=\"py-2 mt-2 mb-0\">This URL is generated on an older database version of Genshin Optimizer. The character data below might not be displayed as intended.</Alert>}\r\n      </Card.Body>\r\n    </Card>\r\n    <CharacterDisplayCard character={character} />\r\n  </Container>\r\n}"],"sourceRoot":""}