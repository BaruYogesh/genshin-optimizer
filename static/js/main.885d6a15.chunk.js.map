{"version":3,"sources":["Util/Util.ts","faIcons/index.ts","Types/consts.ts","Database/validation.tsx","StatConstants.ts","Database/utils.ts","Stat.tsx","Database/DBStorage.ts","Util/StatUtil.ts","Data/CharacterData.ts","StatData.ts","Database/DataManager.ts","Database/migration.ts","Database/Database.ts","Data/ElementalData.ts","Types/artifact.ts","Build/BuildSetting.ts","Formula.ts","Data/ArtifactData.ts","Artifact/Artifact.ts","Components/Translate.tsx","Util/ReactUtil.ts","Build/Build.ts","Util/FieldUtil.tsx","Conditional/Conditional.ts","i18n.ts","Artifact/ArtifactSheet.tsx","Components/StatIcon.tsx","Character/CharacterSheet.tsx","Util/KeyPathUtil.ts","Weapon/WeaponSheet.tsx","Artifact/Component/SlotNameWIthIcon.tsx","Util/UIUtil.ts","Weapon/WeaponUtil.ts","Components/LoadingCard.tsx","App.tsx","reportWebVitals.ts","index.tsx","Database/exim/good.ts","Database/exim/mona.ts","Settings/SettingsDisplay.tsx","Database/exim/go.ts"],"names":["getRandomElementFromArray","array","Math","floor","random","length","getRandomInt","min","max","ceil","getRandomIntInclusive","deepClone","obj","JSON","parse","stringify","clamp","val","low","high","clampPercent","strPadLeft","string","pad","Array","join","slice","hammingDistance","str1","str2","dist","toLowerCase","i","j","match","objMultiplication","multi","Object","keys","forEach","prop","layeredAssignment","value","reduce","accu","key","arr","objPathValue","a","k","deletePropPath","path","tempPath","lastKey","pop","objPathed","objClearEmpties","o","crawlObject","validate","cb","entries","evalIfFunc","arg","objectFromKeyMap","map","fromEntries","faAnemo","prefix","iconName","icon","faCryo","faDendro","faElectro","faGeo","faHydro","faPyro","faPhysicalDmgBonus","faAtk","faDef","faElementalMastery","faHpPrimary","faHpSecondary","faMaxStamina","faCdReductionPrimary","faCdReductionSecondary","faCritRate","faEnergyRechargePrimary","faEnergyRechargeSecondary","faHealingBonus","faShieldStrength","faCirclet","faFlower","faGoblet","faPlume","faSands","allHitModes","allReactionModes","allRarities","allArtifactRarities","allSlotKeys","allElements","allWeaponTypeKeys","allArtifactSets","allCharacterKeys","allWeaponKeys","validateArtifact","flex","id","location","exclude","lock","setKey","slotKey","rarity","mainStatKey","level","round","mainStatVal","Artifact","mainStatValue","errors","substats","substat","rolls","efficiency","validated","allPossibleRolls","totalUnambiguousRolls","b","maxSubstatValues","index","possibleRolls","getSubstatRolls","Set","roll","size","push","substatRolls","best","current","Stat","getStatNameWithPercent","artifact","rollInfo","lowerBound","upperBound","highestScore","Infinity","tryAllSubstats","currentScore","total","newScore","totalRolls","some","find","parseArtifact","includes","allMainStatKeys","isArray","_","undefined","allSubstats","isFinite","endsWith","parseFloat","toFixed","parseInt","parseSubstats","removeArtifactCache","validateCharacter","equippedArtifacts","equippedWeapon","parseCharacter","characterKey","ascension","hitMode","elementKey","reactionMode","conditionalValues","baseStatOverrides","talent","infusionAura","constellation","buildSettings","ascensionMaxLevel","findIndex","maxLvl","auto","skill","burst","setFilters","statFilters","mainStatKeys","optimizationTarget","mainStatAssumptionLevel","useExcludedArts","useEquippedArts","builds","buildDate","maxBuildsToShow","initialBuildSettings","sands","goblet","circlet","tempmainStatKeys","every","s","Number","isInteger","maxBuildsToShowList","maxBuildsToShowDefault","result","removeCharacterCache","char","validateWeapon","parseWeapon","refinement","removeWeaponCache","weapon","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","elemental","hitElements","ElementalData","transformativeReactions","overloaded","name","variants","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","pyro","hydro","melt","cryo","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","getDBVersion","storage","getString","setDBVersion","version","setString","toString","this","Error","getStatName","defVal","className","StatData","variant","getStatNameRaw","getStatVariant","getStatUnit","unit","fixedUnit","printStat","statKey","stats","premod","f","expand","getPrintableFormulaStatKeyList","statList","modifiers","FormulaText","filter","has","ModFormula","formula","usePromise","Formula","get","field","formulaText","FormulaDisplay","modifierText","options","statName","statUnit","printValue","baseATK","finalATK","finalHP","finalDEF","enemyLevel_multi","heal_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_hit","ele","move","res","type","reaction","baseMulti","DBLocalStorage","getItem","removeItem","setItem","other","clear","shouldRemove","SandboxStorage","copyFrom","dbStorage","localStorage","mergeStats","initialStats","paths","ambiguousLevel","milestoneLevels","characterStatBase","critRate_","critDMG_","enerRech_","stamina","flat","default","characterHP","const","characterDEF","characterATK","characterEle","characterLevel","weaponATK","hp","hp_","atk","atk_","def","def_","dmg_","critHit_base_multi","eleMas","weakspotDMG_","heal_","incHeal_","shield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaSprintDec_","staminaGlidingDec_","staminaChargedDec_","transformative_level_multi","crystalize_multi","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","ElementToReactionKeys","physical","anemo","geo","electro","dendro","PreprocessFormulas","dependencyKeys","premodFormulaList","postmodFormulaList","getStage","modFormula","computeModifier","modStats","moveName","eleName","opt","typeName","numStages","DataManager","data","listeners","anyListeners","callback","values","listener","allKeys","migrate","state","elementalFilter","weaponFilter","set","startsWith","buildSetting","artifactsAssumeFull","ascending","mainStat","num","migrateV2ToV3","traveler","requireUpdate","migrateV3ToV4","levelKey","split","lvla","maxLevel","addAsc","migrateV4ToV5","character","migrateV5ToV6","migrateV6ToV7","weaponKeyChangeMap","keyInd","generateWeaponId","charMap","newCharacterKey","talentLevelKeys","useLockedArts","rest","refine","refineIndex","numStars","BuildsDisplayState","CharacterDisplayState","characterKeyToEdit","charIdToEdit","migrateV7ToV8","migrateV8ToV9","migrateV9ToV10","migrated","ArtCharDatabase","arts","chars","weapons","reloadStorage","removeAll","remove","weaponIds","charKey","defaultInitialWeapon","weaponId","generateRandomWeaponID","add","art","follow","followAny","oldChar","_getChar","parsedChar","newChar","saveChar","oldArt","parsedArt","newArt","saveArt","oldWeapon","parsedWeapon","newWeapon","saveWeapon","candidate","generateRandomArtID","artKey","newCharKey","art1","char1","art2","char2","weapon1","weapon2","newArts","oldArts","slot","setArtLocation","editorArt","candidates","_getArts","upgraded","duplicated","candidateSubstat","_getWeapons","database","DatabaseContext","createContext","formulaImport","then","imp","formulas","stat","modifier","objs","getCurrent","resolve","ArtifactSubstatRollData","1","numUpgrades","2","3","4","5","ArtifactSlotsData","flower","plume","totalPossibleRolls","sum","rollsRemaining","emptySlotCount","matchedSlotCount","unusedFilterCount","currentEfficiency","maxEfficiency","maxSubstatRollEfficiency","slotName","slotMainStats","setEffectsObjs","artifactSheets","setObj","setEffect","setEffects","setNumKey","entry","setStats","Conditional","parseConditionalValues","conditional","conditionalValue","condStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","ArtifactMainStatsData","ArtifactStarsData","substatKey","ArtifactSubstatsData","getSubstatKeys","getSubstatRollData","v","substatValue","rollData","ArtifactSubstatLookupTable","valueString","getSubstatEfficiency","setToSlots","artifacts","components","Translate","ns","key18","children","t","useTranslation","textKey","textObj","returnObjects","i18nKey","T","TransWrapper","Para","li","parent","trans","useForceUpdate","useState","stateDirty","update","useCallback","promise","dependencies","setRes","useEffect","pending","console","error","buildContext","newBuild","equippedBuild","compareBuild","setCompareBuild","calculateTotalBuildNumber","artifactsBySlot","setKeys","filteredArtifactsBySlot","slotKeys","artifactsBySet","freeze","setCount","slotPerm","artifactSetPermutations","getTalentStatKey","skillKey","overwriteElement","weaponType","eleKey","getTalentStatKeyVariant","statsToFields","statVals","statVal","text","canShow","StatIcon","fixed","fieldProcessing","processed","Promise","all","charImport","sheets","addConditional","weaponImport","artifactImport","source","findConditionals","conditionals","condKey","states","maxStack","fields","stacks","stateKey","conditionalStats","c","languageCodeList","i18n","use","Backend","initReactI18next","LanguageDetector","init","debug","process","fallbackLng","defaultNS","load","returnEmptyString","backend","loadPath","interpolation","escapeValue","ArtifactSheet","promiseSheets","tr","strKey","getSlotName","getSlotDesc","setEffectDesc","setNum","setEffectDocument","document","slots","src","slotIcons","icons","grouped","sheet","charStats","artifactSetEffect","HPIcon","style","color","CdRedIcon","EnerRechIcon","uncoloredEleIcons","coloredEleIcon","faDiceD20","flatMap","expCurve","expCurveJSON","CharacterSheet","loadCharacterSheet","charSheet","getBase","ascensionLvl","baseStat","baseStatCurve","ascensions","props","getSpecializedStat","getSpecializedStatVal","isMelee","weaponTypeKey","getTalent","talents","getTalentOfKey","talentKey","getTalentStats","constell","getTalentStatsAll","statsArr","talentStats","thumbImg","cardImg","star","constellationName","getAll","KeyPath","Proxy","partial","symbol","base","weaponKey","WeaponSheet","loadWeaponSheet","weaponSheet","passiveDescription","getSubStatKey","build","getMainStatValue","curve","addStats","getSubStatValue","subStat","img","getWeaponsOfType","getLevelString","SlotIcon","artifactSlotIcon","SlotNameWithIcon","valueStringWithUnit","initialWeapon","defaultInitialWeaponKey","LoadingCard","useSuspense","ready","Card","bg","Body","Trans","Spinner","animation","Home","lazy","ArtifactDisplay","CharacterDisplay","BuildDisplay","Planner","FlexDisplay","SettingsDisplay","WeaponDisplay","DocumentationDisplay","AppInner","basename","Navbar","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","faGavel","faIdCard","faCalculator","faTools","faCog","faBook","href","target","rel","onClick","ReactGA","outboundLink","label","faPaypal","faPatreon","faDiscord","fallback","Container","component","Row","Col","xs","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","getElementById","GOSource","importGOOD","oldDatabase","counter","invalid","new","updated","unchanged","removed","parsed","hasLocations","idsToRemove","findDuplicates","delete","removeForKeys","w","findDuplicateWeapons","characters","newCharKeys","x","oldCharKeys","_getCharKeys","old","dbVersion","artifactDisplay","characterDisplay","buildsDisplay","importGOOD1","exportGOOD","format","GetConvertedArtifactsOfVersion","dataObj","property","ArtifactSlotKeyMap","genshinArtArtifact","setName","position","mainTag","raw","ArtifactSetKeyMap","ArtifactMainStatKeyMap","normalTags","ArtifactSubStatKeyMap","forceUpdate","pageview","Header","LanguageCard","DownloadCard","UploadCard","Badge","LanguageDropdown","nativeLanguages","onSetLanguage","lang","changeLanguage","currentLang","languages","Dropdown","language","Menu","Item","copyToClipboard","navigator","clipboard","writeText","alert","catch","useContext","numChar","numArt","numWeapon","downloadValid","Boolean","md","Footer","Button","disabled","JSONstr","filename","contentType","window","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","createElement","download","encodeURIComponent","body","appendChild","click","removeChild","faFileDownload","faClipboard","confirm","deleteDatabase","faTrashAlt","setdata","setfilename","errorMsg","setErrorMsg","useMemo","e","imported","converted","importMona","characterDatabase","artifactDatabase","charCount","artCount","importGO","onUpload","file","files","reader","FileReader","onload","readAsText","Form","File","onChange","custom","accept","minHeight","UploadInfo","UploadAction","GOUploadInfo","GOODUploadInfo","reset","GOUploadAction","MergeResult","Alert","dataValid","faFileUpload"],"mappings":"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","file":"static/js/main.885d6a15.chunk.js","sourcesContent":["export const getRandomElementFromArray = <T>(array: readonly T[]): T => array[Math.floor(Math.random() * array.length)];\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nexport function getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n}\r\nexport function getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport const deepClone = <T>(obj: T): T =>\r\n  obj && JSON.parse(JSON.stringify(obj))\r\n\r\nexport const clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nexport const getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nexport const clamp01 = (val) => clamp(val, 0, 1)\r\nexport const clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nexport function strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nexport function hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nexport function objMultiplication(obj, multi) {\r\n  if (multi === 1) return obj\r\n  Object.keys(obj).forEach((prop: any) => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n  return obj\r\n}\r\n\r\n//assign obj.[keys...] = value\r\nexport function layeredAssignment(obj, keys: string[], value) {\r\n  keys.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, obj)\r\n  return obj\r\n}\r\n//get the value in a nested object, giving array of path\r\nexport function objPathValue(obj: object, keys: string[]) {\r\n  return keys.reduce((a, k) => a?.[k], obj)\r\n}\r\n//delete the value denoted by the path. Will also delete empty objects as well.\r\nexport function deletePropPath(obj, path) {\r\n  const tempPath = [...path]\r\n  const lastKey = tempPath.pop()\r\n  const objPathed = objPathValue(obj, tempPath)\r\n  delete objPathed?.[lastKey];\r\n}\r\n\r\nexport function objClearEmpties(o) {\r\n  for (const k in o) {\r\n    if (typeof o[k] !== \"object\") continue\r\n    objClearEmpties(o[k])\r\n    if (!Object.keys(o[k]).length) delete o[k];\r\n  }\r\n}\r\nexport function crawlObject(obj, keys, validate, cb) {\r\n  if (validate(obj)) cb(obj, keys)\r\n  else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => crawlObject(val, [...keys, key], validate, cb))\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nexport const getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\n\r\nexport function evalIfFunc<T, X>(value: T | ((arg: X) => T), arg: X): T {\r\n  return typeof value === \"function\" ? (value as any)(arg) : value\r\n}\r\n//fromEntries doesn't result in StrictDict, this is just a utility wrapper.\r\nexport function objectFromKeyMap<K extends string | number, V>(keys: readonly K[], map: (key: K) => V): StrictDict<K, V> {\r\n  return Object.fromEntries(keys.map(k => [k, map(k)])) as any\r\n}","// Elements\r\nexport const faAnemo = {\r\n\tprefix: 'faga',\r\n\ticonName: \"anemo\",\r\n\ticon: [\r\n\t\t14, 13.857,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M.2,4.834c.764,1.2,1.813,2.475,3.362,2.434,1.025-.067,2.374.224,2.679,1.359.313.865-.825,1.982-1.513,1.124-.108-.187-.039-.3.173-.326,1,.021,1.348-1.12.4-1.513-.813-.1-1.548.527-2.329.707C.791,9.247-.524,6.656.2,4.834Zm9.912,2.429c-1.056-.074-2.449.563-2.375,1.786a.973.973,0,0,0,1.1.984c.316.013.724-.546.294-.612-1.621,0-1.022-2.1.346-1.4a5.222,5.222,0,0,0,2.343.687c1.8-.177,2.572-2.3,1.989-3.859C12.938,6.152,11.852,7.446,10.112,7.263Zm-2.42-.772A7.516,7.516,0,0,0,9.918,5.63,3.067,3.067,0,0,0,9.286.018,5.143,5.143,0,0,1,7.692,6.491ZM6.349,6.477A5.071,5.071,0,0,1,4.734,0,3.075,3.075,0,0,0,3.612,5.287a7.944,7.944,0,0,0,2.7,1.235Zm5.342-.089c-1.143.656-2.594.363-3.651,1.217a1.557,1.557,0,0,0,.07,2.768c.234.1.462.206.689.014.223-.167.4-.162.721-.012a9.094,9.094,0,0,0-2.513,3.482,9.217,9.217,0,0,0-2.523-3.478.605.605,0,0,1,.726,0c.6.347,1.443-.4,1.555-1C7.012,8.2,5.829,7.273,4.783,7.049c-.512-.121-1.038-.182-1.55-.3C.866,6.266.51,3.868,1.669,2.034c.668,4.9,4,3.555,5.332,6.26,1.321-2.671,4.678-1.382,5.345-6.261C13.157,3.449,13.4,5.556,11.691,6.388Zm-4.12,5.191L7,11.2l-.572.385.58.972ZM7,10.066a1.592,1.592,0,0,1-1,.911.925.925,0,0,0,.991-.272c.426.327.794.417,1.046.255A1.561,1.561,0,0,1,7,10.066Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faCryo = {\r\n\tprefix: 'faga',\r\n\ticonName: \"cryo\",\r\n\ticon: [\r\n\t\t12.086, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M0,3.52A19.776,19.776,0,0,1,1.911,6.8a6.152,6.152,0,0,0,.128-.624A6.476,6.476,0,0,1,5.5,6.7,6.479,6.479,0,0,1,3.316,3.96a6.308,6.308,0,0,0,.477-.423A19.8,19.8,0,0,1,0,3.52ZM4.411,6.067a7.469,7.469,0,0,0-2.4-.573,3.548,3.548,0,0,0-.2-.933h0a3.559,3.559,0,0,0,.909-.289A7.478,7.478,0,0,0,4.411,6.067ZM0,10.48A19.776,19.776,0,0,0,1.911,7.2a6.152,6.152,0,0,1,.128.624A6.476,6.476,0,0,0,5.5,7.3,6.479,6.479,0,0,0,3.316,10.04a6.308,6.308,0,0,1,.477.423A19.8,19.8,0,0,0,0,10.48ZM4.411,7.933a7.469,7.469,0,0,1-2.4.573,3.548,3.548,0,0,1-.2.933h0a3.559,3.559,0,0,1,.909.289A7.478,7.478,0,0,1,4.411,7.933ZM6.043,14a19.768,19.768,0,0,0-1.882-3.293,6.161,6.161,0,0,1,.605.2A6.467,6.467,0,0,0,6.043,7.649,6.478,6.478,0,0,0,7.32,10.908a6.251,6.251,0,0,1,.6-.2A19.768,19.768,0,0,0,6.043,14Zm0-5.094a7.461,7.461,0,0,1-.7,2.368,3.577,3.577,0,0,1,.705.643h0a3.561,3.561,0,0,1,.706-.643A7.48,7.48,0,0,1,6.043,8.906Zm6.043,1.574A19.85,19.85,0,0,1,10.175,7.2a6.215,6.215,0,0,0-.127.624A6.479,6.479,0,0,1,6.586,7.3,6.486,6.486,0,0,1,8.771,10.04a6.112,6.112,0,0,0-.477.423A19.783,19.783,0,0,1,12.086,10.48ZM7.675,7.933a7.473,7.473,0,0,0,2.4.573,3.548,3.548,0,0,0,.2.933h0a3.562,3.562,0,0,0-.91.289A7.478,7.478,0,0,0,7.675,7.933ZM12.086,3.52A19.85,19.85,0,0,0,10.175,6.8a6.215,6.215,0,0,1-.127-.624A6.479,6.479,0,0,0,6.586,6.7,6.486,6.486,0,0,0,8.771,3.96a6.112,6.112,0,0,1-.477-.423A19.783,19.783,0,0,0,12.086,3.52ZM7.675,6.067a7.473,7.473,0,0,1,2.4-.573,3.548,3.548,0,0,1,.2-.933h0a3.562,3.562,0,0,1-.91-.289A7.478,7.478,0,0,1,7.675,6.067ZM6.043,0A19.768,19.768,0,0,1,4.161,3.293a6.161,6.161,0,0,0,.605-.2A6.467,6.467,0,0,1,6.043,6.351,6.478,6.478,0,0,1,7.32,3.092a6.251,6.251,0,0,0,.6.2A19.768,19.768,0,0,1,6.043,0Zm0,5.094a7.461,7.461,0,0,0-.7-2.368,3.577,3.577,0,0,0,.705-.643h0a3.561,3.561,0,0,0,.706.643A7.48,7.48,0,0,0,6.043,5.094Zm.1,2.038,1.044.92-.071.817-.744-.347L6.1,7.157a.163.163,0,0,1-.115,0L5.711,8.522l-.743.347L4.9,8.052l1.044-.92a.165.165,0,0,1-.062-.1l-1.314.443-.672-.471.672-.47,1.312.442a.17.17,0,0,1,.056-.1L4.9,5.961l.071-.817.743.347.272,1.352a.166.166,0,0,1,.12,0l.272-1.352.744-.347.071.817-1.037.913a.165.165,0,0,1,.056.1l1.313-.442.672.47-.672.471L6.208,7.034A.165.165,0,0,1,6.146,7.132Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faDendro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"dengro\",\r\n\ticon: [\r\n\t\t14, 13.314,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M10.956,7.949c-1.242-.339-2.145.509-3.174,1.065.5-.835,1.613-1.371,1.588-2.466A1.122,1.122,0,0,0,8.041,5.379c.741-1.764,3.98.034,2.174,1.958C10.518,7.478,10.839,7.589,10.956,7.949Zm-7.919,0c1.242-.339,2.144.509,3.173,1.065-.5-.835-1.613-1.371-1.587-2.466A1.121,1.121,0,0,1,5.952,5.379c-.742-1.764-3.98.034-2.174,1.958C3.474,7.478,3.153,7.589,3.037,7.949ZM7,11.38C6.11,9.815,4.008,9.887,2.989,8.436.769,5.889,4.028,2.245,6.5,4.573c.88-1.994-3.2-1.85-4.069-.59-.1-.709-.187-1.217-.962-1.305C1.3,2.692.355,2.473.452,2.737c.37,1.113.5,1.67,1.824,1.4a4.167,4.167,0,0,0-.731,3.139C.825,6.681.636,6.927,0,7.46c1.239,1.223,1.412-.3,1.632.133C2.207,10.851,5.976,10.376,7,13.314c1.023-2.936,4.794-2.465,5.368-5.721.22-.429.393,1.09,1.632-.133-.636-.533-.825-.779-1.545-.186a4.167,4.167,0,0,0-.731-3.139c1.328.272,1.454-.285,1.824-1.4.1-.264-.852-.045-1.015-.059-.775.088-.859.6-.962,1.3-.864-1.26-4.95-1.4-4.07.591C9.969,2.245,13.235,5.89,11.01,8.437,9.992,9.887,7.89,9.815,7,11.38M7.007,0C5.986,1.347,5.175,2.309,6.993,3.6,8.792,2.311,8.083,1.485,7.007,0Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faElectro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"electro\",\r\n\ticon: [\r\n\t\t14, 13.996,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M4.533,13.505a6.911,6.911,0,0,0,3.024-.468c-.237-.073-.459-.134-.675-.209s-.432-.159-.643-.252A3.907,3.907,0,0,1,4,10.333a3.449,3.449,0,0,1-.128-1.82c.117.139.222.277.341.4a1.044,1.044,0,0,0,1.01.32A1.571,1.571,0,0,0,6.5,7.879a2.422,2.422,0,0,0-2.083-2.8A2.993,2.993,0,0,0,1.2,7.231,7.083,7.083,0,0,0,.874,9.417c-.005.309,0,.618,0,.9A7.089,7.089,0,0,1,.012,6.581,6.949,6.949,0,0,1,2.691,1.5c-.26.472-.519.917-.752,1.374a3.664,3.664,0,0,0-.412,1.521c.207-.193.385-.361.566-.524A4.657,4.657,0,0,1,4.248,2.71,3.573,3.573,0,0,1,7.323,3.5l-.442.09A1.213,1.213,0,0,0,6,5.283,2.008,2.008,0,0,0,7.719,6.624a2.575,2.575,0,0,0,2.873-2.561,3.33,3.33,0,0,0-1.1-2.508A7.781,7.781,0,0,0,7.289.09C7.237.066,7.185.039,7.108,0A7,7,0,0,1,14,5.915c-.282-.45-.544-.9-.836-1.328A3.743,3.743,0,0,0,12.055,3.5c.079.371.171.721.226,1.077a4.086,4.086,0,0,1-.792,3.364A3.554,3.554,0,0,1,9.98,8.958a.115.115,0,0,1-.049,0c.062-.2.134-.389.184-.587A1.091,1.091,0,0,0,9.59,7.135a1.68,1.68,0,0,0-1.765-.046A2.357,2.357,0,0,0,6.657,10.05a2.745,2.745,0,0,0,2.377,1.878,4.373,4.373,0,0,0,2.462-.5c.465-.215.9-.5,1.344-.759.056-.032.108-.071.18-.119A6.922,6.922,0,0,1,4.533,13.505Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faGeo = {\r\n\tprefix: 'faga',\r\n\ticonName: \"geo\",\r\n\ticon: [\r\n\t\t13.029, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M6.633,6.009c-.5.538-.953,1.041-1.42,1.537a.23.23,0,0,0-.061.286A4.5,4.5,0,0,0,6.507,9.551a.181.181,0,0,0,.164-.009c.388-.257.785-.5,1.151-.788A16.081,16.081,0,0,0,9.963,6.761c.181.366.382.7.518,1.063.2.535.356,1.088.535,1.632a.293.293,0,0,1-.061.286,12.277,12.277,0,0,1-1.768,1.985c-.839.755-1.714,1.47-2.574,2.2A1.2,1.2,0,0,1,6.505,14c-.5-.411-1.02-.817-1.519-1.243A29.249,29.249,0,0,1,2.138,9.983,16.778,16.778,0,0,1,.043,7.137a.245.245,0,0,1,0-.279A10.138,10.138,0,0,1,1.389,5.1a25.247,25.247,0,0,0,5.158,8.241,12.37,12.37,0,0,0,2.98-4.617l-.036-.03L6.558,11.157c-.04-.032-.081-.061-.117-.1A13.544,13.544,0,0,1,3.879,7.693a.249.249,0,0,1,.051-.356c.5-.442,1-.89,1.5-1.325.226-.194.473-.365.736-.566Zm.228,2.545c.263-.2.51-.372.736-.566.506-.435,1-.883,1.5-1.325a.251.251,0,0,0,.051-.356A13.523,13.523,0,0,0,6.588,2.938c-.036-.034-.077-.063-.116-.1L3.539,5.306,3.5,5.276A12.345,12.345,0,0,1,6.483.659,25.245,25.245,0,0,1,11.64,8.9a10.138,10.138,0,0,0,1.345-1.758.244.244,0,0,0,0-.279,16.724,16.724,0,0,0-2.1-2.846A29.136,29.136,0,0,0,8.043,1.243C7.545.817,7.028.411,6.524,0c-.05.033-.082.049-.108.071-.86.732-1.734,1.447-2.573,2.2A12.23,12.23,0,0,0,2.075,4.258a.293.293,0,0,0-.062.286c.179.544.334,1.1.536,1.632.136.361.336.7.517,1.063A16.2,16.2,0,0,1,5.207,5.246c.366-.285.764-.531,1.151-.788a.181.181,0,0,1,.164-.009A4.5,4.5,0,0,1,7.877,6.168a.231.231,0,0,1-.06.286c-.468.5-.926,1-1.421,1.537Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faHydro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"hydro\",\r\n\ticon: [\r\n\t\t14, 13.95,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M2.922,12.219c.108.055.181.092.253.13a7.943,7.943,0,0,0,3.891.963,3.753,3.753,0,0,0,.486-7.464,3.6,3.6,0,0,0-1.691.132.938.938,0,0,1-.716-1.732,4.3,4.3,0,0,1,1.481-.366,4.912,4.912,0,0,1,5.048,3.446,4.933,4.933,0,0,1-2.517,5.764c4.218-1.543,4.723-7.809.812-10.017a5.342,5.342,0,0,0-3.437-.829A5.506,5.506,0,0,0,2.883,4.021a6.606,6.606,0,0,0-.417.524.873.873,0,0,1-.927.337.929.929,0,0,1-.781-.638.881.881,0,0,1,.1-.684A6.158,6.158,0,0,1,2.221,1.839,7.091,7.091,0,0,1,6.135.055a6.933,6.933,0,0,1,6.848,3.359c2.683,4.1-.263,9.987-5.094,10.472a6.838,6.838,0,0,1-3.241-.343A3.994,3.994,0,0,1,2.922,12.219ZM8.438,12.1a2.044,2.044,0,0,1-2.35.064,1.5,1.5,0,0,1-.007-2.613.949.949,0,0,1,1.433.505c.77,2.06,2.637.147,1.424-1.246a2.385,2.385,0,0,0-2.17-.95,2.486,2.486,0,1,0,.784,4.891A2.393,2.393,0,0,0,9.073,11.6C8.862,11.766,8.663,11.951,8.438,12.1ZM2.21,9.495a.663.663,0,1,0,.663.663A.663.663,0,0,0,2.21,9.495ZM.958,6.107a.958.958,0,1,0,.957.957A.958.958,0,0,0,.958,6.107Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faPyro = {\r\n\tprefix: 'faga',\r\n\ticonName: \"pyro\",\r\n\ticon: [\r\n\t\t11.479, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M5.853,14C4.311,12.53,2.374,11.75.692,10.523c-1.471-1.1-.268-3.047.586-4.163A17.969,17.969,0,0,0,3.031,3.838c-.007,1.6,1.56,2.152,2.781,2.709C3.509,6.412,1.548,9.1,3.385,10.92c-1.873-.773-2.7-2.455-1.3-4.17a2.113,2.113,0,0,0-.535,3.662c1.332.9,2.865,1.483,4.153,2.461a.2.2,0,0,0,.187.019C7.13,12,8.5,11.315,9.811,10.543c1.654-.887,1.47-2.773-.154-3.583,1.455,2.82-1.213,4.942-3.9,4.745C2.832,11.491,2.676,8.531,5.131,9a1.39,1.39,0,0,0-.682,1.5c.526,1.495,2.954.974,3.81.031,1.095-1.027.327-3.031-.979-3.6-1.492-.7-4.443-1.527-3.3-3.737C4.676,2.109,5.49,1.385,5.617,0,6.05.581,7.06,1.719,6.857,2.452c-.24.72-1.085.982-1.348,1.71a1.334,1.334,0,0,0,.578,1.824c-1.018-1.09.09-2.409,1.15-2.981A3.3,3.3,0,0,0,8.373,7.061c-.725-1.6-1.347-1.64-.128-3.408a4.575,4.575,0,0,0,1.806,2.766c2.057,1.807,1.9,3.731-.521,5.067A16.689,16.689,0,0,0,5.853,14Zm.541-3.5C10.185,9.076,5.44,5.335,4.03,8.493,5.446,7.684,7.387,8.92,6.394,10.5Z\"\r\n\t]\r\n} as const\r\n// Elements End\r\n\r\n// DMG Bonus\r\nexport const faPhysicalDmgBonus = {\r\n\tprefix: 'faga',\r\n\ticonName: \"physicalDmgBonus\",\r\n\ticon: [\r\n\t\t14, 13.962,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M11.511,7.88,9.022,9.54v1.77l2.489-1.66L14,11.31V9.54Zm0,2.434-2.489,1.66v1.771l2.489-1.66L14,13.745V11.974ZM7.45,1.619l-.731.731a.228.228,0,0,0,0,.322l.837.837L.412,10.652a.458.458,0,0,0-.133.318A21.292,21.292,0,0,0,.04,13.922a21.435,21.435,0,0,0,2.952-.239.458.458,0,0,0,.318-.133l7.143-7.144c1.116,1.012.725,1.313,1.89.106a.228.228,0,0,0,0-.322L10.7,4.549l1.926-1.926c1.89.06,1.215.263,1.335-2.395A.228.228,0,0,0,13.734,0H11.542a.228.228,0,0,0-.228.219l.025,1.116L9.413,3.261,7.772,1.619A.228.228,0,0,0,7.45,1.619Z\"\r\n\t]\r\n} as const\r\n// DMG Bonus End\r\n\r\n// Base Stats\r\nexport const faAtk = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Atk\",\r\n\ticon: [\r\n\t\t14, 13.977,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M7.78,1.621,9.423,3.264l1.928-1.927L11.326.219A.228.228,0,0,1,11.554,0h2.2a.228.228,0,0,1,.228.228c-.121,2.661.556,2.457-1.337,2.4L10.712,4.553,12.356,6.2a.228.228,0,0,1,0,.322c-1.167,1.208-.775.907-1.892-.106L3.313,13.564A.457.457,0,0,1,3,13.7a21.32,21.32,0,0,1-2.954.239,21.172,21.172,0,0,1,.238-2.954.451.451,0,0,1,.134-.318L7.564,3.513l-.838-.838a.229.229,0,0,1,0-.323l.732-.731A.228.228,0,0,1,7.78,1.621Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faDef = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Def\",\r\n\ticon: [\r\n\t\t12.883, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M12.883.726a.291.291,0,0,0-.175-.268C12.3.286,10.944,0,6.442,0S.584.286.176.458A.291.291,0,0,0,0,.727v7.44a.868.868,0,0,0,.125.453c1.579,2.6,5.347,4.855,6.161,5.339a.292.292,0,0,0,.3,0c.789-.482,4.559-2.688,6.168-5.335a.868.868,0,0,0,.127-.455ZM6.441,11.968C6.5,11.981,2.882,9.951,1.617,7.6V1.565s0-.452,4.824-.452Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faElementalMastery = {\r\n\tprefix: 'faga',\r\n\ticonName: \"ele_mas\",\r\n\ticon: [\r\n\t\t14, 13.113,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M8.076,7.71l-.017-.049A4.335,4.335,0,0,0,7.3,6.353a4.431,4.431,0,0,0-.325-.346A2.113,2.113,0,1,0,7,1.781a2.144,2.144,0,0,0-1.838,3.18,4.374,4.374,0,0,0-1.2-.168,4.42,4.42,0,0,0-.755.066l-.038.007C1.836-.682,10.7-2.114,10.962,3.9A3.985,3.985,0,0,1,8.076,7.71Zm3.662-2.137a3.949,3.949,0,0,0-.626-.235,4.473,4.473,0,0,1-1.105,1.7h.031A2.113,2.113,0,1,1,7.925,9.151,4.09,4.09,0,0,0,7.9,8.706,3.968,3.968,0,0,0,6.037,5.775l-.19-.11A3.963,3.963,0,1,0,6.492,12.2c.082-.068.16-.14.236-.214L6.7,11.949a4.367,4.367,0,0,1-.891-1.765A2.112,2.112,0,1,1,4.926,7.27q.1.051.189.111a2.111,2.111,0,0,1,.942,1.49,2.159,2.159,0,0,1,.018.28,3.963,3.963,0,1,0,5.663-3.578Z\"\r\n\t]\r\n} as const\r\n\r\n// Max-HP stacked SVG (primary = base shape, secondary = flair)\r\nexport const faHpPrimary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"hp_primary\",\r\n\ticon: [\r\n\t\t11.104, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M2.052,7.654A.978.978,0,0,1,2.5,7.083c1.511-.85,3.586,2.117,6.544.548C10.971,13.714.151,13.878,2.052,7.654ZM5.552,14C2.177,14-1.2,11.579.416,6.74A18.543,18.543,0,0,1,5.121.213.748.748,0,0,1,5.552,0a.751.751,0,0,1,.431.212A18.543,18.543,0,0,1,10.688,6.74C12.3,11.579,8.927,14,5.552,14Zm.22-12.19a.639.639,0,0,0-.22-.075h0a.649.649,0,0,0-.221.075c-1.71,1.324-4.08,5.282-3.941,7.4a4.019,4.019,0,0,0,4.162,3.543h0A4.019,4.019,0,0,0,9.714,9.215C9.853,7.092,7.483,3.134,5.772,1.81Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faHpSecondary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"hp_secondary\",\r\n\ticon: [\r\n\t\t11.104, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M6.534,8.03A12.566,12.566,0,0,1,8.107,6.521c.569-.413.94,1.11.94,1.11A3.731,3.731,0,0,1,6.534,8.03Z\"\r\n\t]\r\n} as const\r\n// Max-HP stacked End\r\n\r\nexport const faMaxStamina = {\r\n\tprefix: 'faga',\r\n\ticonName: \"MaxStamina\",\r\n\ticon: [\r\n\t\t14, 10.365,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M13.924,6.541c-.152.207-1.292.3-1.292.3L9.77,6.948V8.564c0,.981-1.387,1.8-2.77,1.8s-2.77-.82-2.77-1.8V6.948L1.368,6.843s-1.14-.095-1.292-.3c-.239-.323.145-1.524.331-2.154.326-.865,1.284-3.21,1.885-3.119,1.115.17-.673,3.894.1,3.814A21.17,21.17,0,0,1,7,5a21.17,21.17,0,0,1,4.6.079c.777.08-1.011-3.644.1-3.814.6-.091,1.559,2.254,1.885,3.119C13.779,5.017,14.163,6.218,13.924,6.541ZM4.553,2.421a2.456,2.456,0,0,0,4.911,0A2.456,2.456,0,0,0,4.553,2.421Z\"\r\n\t]\r\n} as const\r\n\r\n// Base Stats End\r\n\r\n// Advanced Stats\r\n\r\n// CD Reducation stacked SVG (primary = base shape, secondary = flair)\r\nexport const faCdReductionPrimary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"CdReduction_primary\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M14,7A7,7,0,0,1,2.986,12.733L5.333,9.381A2.907,2.907,0,1,0,7,4.092V0a7,7,0,0,1,7,7\"\r\n\t]\r\n} as const\r\n\r\nexport const faCdReductionSecondary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"CdReduction_secondary\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M5.333,9.381,2.986,12.733A7,7,0,0,1,.356,4.8l4.054.881a2.905,2.905,0,0,0,.923,3.7Z\"\r\n\t]\r\n} as const\r\n// CD Reduction stacked end\r\n\r\nexport const faCritRate = {\r\n\tprefix: 'faga',\r\n\ticonName: \"CritRate\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M0,14,3.5,6.236,1.973,1.464,7.255,3.5,14,0,10.5,7.255l1.527,4.772L7.255,10.5,0,14\"\r\n\t]\r\n} as const\r\n\r\n// Energy Recharge stacked SVG (primary = base shape, secondary = flair) \r\nexport const faEnergyRechargePrimary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"EnergyRecharge_primary\",\r\n\ticon: [\r\n\t\t14, 13.282,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M14,6.641A6.642,6.642,0,0,1,.928,8.3h0L0,8.737.961,4.8l.012.012L2.392,6.3l1.37,1.433-1.23.143A4.981,4.981,0,1,0,7.359,1.66V0A6.641,6.641,0,0,1,14,6.641Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faEnergyRechargeSecondary = {\r\n\tprefix: 'faga',\r\n\ticonName: \"EnergyRecharge_secondary\",\r\n\ticon: [\r\n\t\t14, 13.282,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M2.392,6.3.973,4.813A6.643,6.643,0,0,1,7.359,0V1.66A4.98,4.98,0,0,0,2.392,6.3Z\"\r\n\t]\r\n} as const\r\n// Energy Recharge stacked end\r\n\r\nexport const faHealingBonus = {\r\n\tprefix: 'faga',\r\n\ticonName: \"HealingBonus\",\r\n\ticon: [\r\n\t\t14, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M14,4.765v4.47a.589.589,0,0,1-.588.589H9.824v3.588A.589.589,0,0,1,9.235,14H4.765a.589.589,0,0,1-.589-.588V9.824H.588A.589.589,0,0,1,0,9.235V4.765a.589.589,0,0,1,.588-.589H4.176V.588A.589.589,0,0,1,4.765,0h4.47a.589.589,0,0,1,.589.588V4.176h3.588A.589.589,0,0,1,14,4.765Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faShieldStrength = {\r\n\tprefix: 'faga',\r\n\ticonName: \"ShieldStrength\",\r\n\ticon: [\r\n\t\t12.883, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M12.883.726a.291.291,0,0,0-.175-.268C12.3.286,10.944,0,6.442,0S.584.286.176.458A.291.291,0,0,0,0,.727v7.44a.868.868,0,0,0,.125.453c1.579,2.6,5.347,4.855,6.161,5.339a.292.292,0,0,0,.3,0c.789-.482,4.559-2.688,6.168-5.335a.868.868,0,0,0,.127-.455ZM5.136,10.773,6.182,7l-4-1,5.61-4.762L6.747,5.01l4,1Z\"\r\n\t]\r\n} as const\r\n// Advanced Stats End\r\n\r\n// Artifacts\r\nexport const faCirclet = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Circlet\",\r\n\ticon: [\r\n\t\t14, 11.588,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M12.793,3.842l.269.269L10.5,5.93,7.269,2.158l.809-.809L7,0,5.922,1.349l.809.809L3.5,5.93.938,4.111l.269-.269L0,2.965,2.958,9.972,7,11.588l4.042-1.616L14,2.965ZM8.732,7.864l-.892.149a.673.673,0,0,0-.543.5l-.25,1a.048.048,0,0,1-.094,0l-.25-1a.673.673,0,0,0-.543-.5l-.892-.149a.049.049,0,0,1,0-.1l.892-.149a.673.673,0,0,0,.543-.5l.25-1a.048.048,0,0,1,.094,0l.25,1a.673.673,0,0,0,.543.5l.892.149A.049.049,0,0,1,8.732,7.864Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faFlower = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Flower\",\r\n\ticon: [\r\n\t\t14, 13.326,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M11.279,4.705a2.554,2.554,0,0,0-1.6.9C11.215,3.854,12.708.454,9.711.3c-.015-.115-.2-.387-.4-.276A5.942,5.942,0,0,0,7.2,4.742C6.705,2.18,4.078.459,3.016.769c-.207.324-.056.607-.261.793-.18.163-.58-.016-.619.249-.324,1.729.945,3.632,2.758,4.532C3.113,6.057.165,6.349,0,8.491,0,9.43,1.269,9.868,3.191,9.868A3.541,3.541,0,0,0,6.319,8.4c-2.541,2.727-.544,3.278,2.192,1.78,1.073-.621.8-1.4.027-2.295,1.395.853,3.755-.174,3.877-1.72C12.414,5.533,12.142,4.718,11.279,4.705ZM7.521,6.213a.5.5,0,0,1-.441.5l-.1.637L6.9,6.694A.5.5,0,0,1,6.538,6.1l-.467-.567.557.377a.5.5,0,0,1,.706-.086l.459-.381-.356.492A.5.5,0,0,1,7.521,6.213ZM14,8.089c-.519.249-.77,1.7-1.586,2.337a3.966,3.966,0,0,1-2.678.5,3.463,3.463,0,0,1-1.881,2.393.041.041,0,0,1-.05-.064,4.294,4.294,0,0,0,1-3.174A1.125,1.125,0,0,0,8.956,8.3c.344.065.828,1.348.876,2.125,0,0,1.857-1.178,2.355-1.37A6.666,6.666,0,0,0,9.877,10.3a5.933,5.933,0,0,1,1.269-1.5C11.757,8.271,13.548,8.252,14,8.089Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faGoblet = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Goblet\",\r\n\ticon: [\r\n\t\t14, 13.864,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M9.546,8.637c4.121-2.3,4.121-3.555,4.12-6.894H.428c0,3.339,0,4.59,4.12,6.894,0,1.75,1.739,1.28,1.739,2.187.076.765-.192,1.207-.567,1.275-1.21.167-3.368.939-3.383,1.765h9.42c-.015-.826-2.173-1.6-3.383-1.765-.374-.068-.644-.509-.567-1.275C7.807,9.917,9.546,10.387,9.546,8.637ZM7.461,5.723,7.113,7.116a.066.066,0,0,1-.066.052.066.066,0,0,1-.066-.052L6.633,5.723a.941.941,0,0,0-.757-.7L4.631,4.817a.068.068,0,0,1,0-.135l1.245-.207a.939.939,0,0,0,.757-.7l.348-1.393a.066.066,0,0,1,.066-.051.067.067,0,0,1,.066.051l.348,1.393a.939.939,0,0,0,.757.7l1.245.207a.068.068,0,0,1,0,.135l-1.245.207A.941.941,0,0,0,7.461,5.723Zm5.881-4.408H.658A.657.657,0,0,1,0,.658H0A.657.657,0,0,1,.658,0H13.342A.657.657,0,0,1,14,.658h0A.657.657,0,0,1,13.342,1.315Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faPlume = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Plume\",\r\n\ticon: [\r\n\t\t12.933, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M11.809,0a4.52,4.52,0,0,0-1,.186,4.469,4.469,0,0,0-1.479.6c-.236.14-.241.324-.312.274a.717.717,0,0,0-.467-.033C5.117,3.737,5.04,3.893,3.285,6.494,3.171,6.54,3,6.384,3,6.384c-.059.546-.215.546-.526,1.168A2.75,2.75,0,0,0,2.1,9.588a2.49,2.49,0,0,1-.723-.245l.467.39a2.681,2.681,0,0,1-.934.078l.623.467s-.39.389-.546.389l.519.074A18.034,18.034,0,0,0,0,13.948.04.04,0,0,0,.045,14l.593-.3a.038.038,0,0,0,.02-.025,5.139,5.139,0,0,1,1.722-2.7l.479.549a1.881,1.881,0,0,1-.155-.779l.856.156c-.389-.39-.35-.56-.35-.56a4.067,4.067,0,0,0,1.6-.034,8.175,8.175,0,0,0,1.705-.865c.084-.04-.146-.082-.066-.124s.329-.095.413-.145A20.31,20.31,0,0,0,9.415,7.147a11.77,11.77,0,0,0,2.367-2.7c.043-.074-.36-.2-.526-.231.177.021.616.121.654.048a6.256,6.256,0,0,0,.86-2.34C12.826,1.245,13.449-.079,11.809,0ZM2.548,9.577C4.5,5.372,10.1,1.946,10.1,1.946,11.87.561,6.141,4.384,2.548,9.655Z\"\r\n\t]\r\n} as const\r\n\r\nexport const faSands = {\r\n\tprefix: 'faga',\r\n\ticonName: \"Sands\",\r\n\ticon: [\r\n\t\t9.822, 14,\r\n\t\t[],\r\n\t\tnull,\r\n\t\t\"M9.606,12.708H8.788v-.944c0-3.536-3.274-3.709-3.274-4.915V6.778a.855.855,0,0,1,.392-.72c.868-.56,2.773-1.311,2.877-3.895a.216.216,0,0,0-.215-.225H1.254a.217.217,0,0,0-.216.225c.1,2.584,2.009,3.335,2.877,3.9a.856.856,0,0,1,.393.72v.071c0,1.206-3.274,1.379-3.274,4.915v.944H.215A.215.215,0,0,0,0,12.923v.862A.215.215,0,0,0,.215,14H9.606a.216.216,0,0,0,.216-.215v-.862A.216.216,0,0,0,9.606,12.708Zm-4.695,0h-3.1c0-2.757,2.757-2.154,2.757-3.274V5.988S2.929,5.04,2.929,4.351H6.892c0,.689-1.637,1.637-1.637,1.637V9.434c0,1.12,2.757.517,2.757,3.274ZM9.822.215v.862a.216.216,0,0,1-.216.215H.215A.215.215,0,0,1,0,1.077V.215A.215.215,0,0,1,.215,0H9.606A.216.216,0,0,1,9.822.215Z\"\r\n\t]\r\n} as const\r\n// Artifacts End","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nexport const allHitModes = [\"hit\", \"avgHit\", \"critHit\"] as const\r\nexport const allReactionModes = [\"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",] as const\r\nexport const allArtifactSetCount = [1, 2, 3, 4, 5] as const\r\nexport const allRarities = [5, 4, 3, 2, 1] as const\r\nexport const allArtifactRarities = [5, 4, 3] as const\r\nexport const allSlotKeys = [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"] as const\r\nexport const allElements = ['anemo', 'geo', 'electro', 'hydro', 'pyro', 'cryo'] as const\r\nexport const allWeaponTypeKeys = ['sword', 'claymore', 'polearm', 'bow', 'catalyst'] as const\r\nexport const allArtifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\",\r\n  \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\",\r\n  \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\",\r\n  \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\",\r\n  \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\",\r\n  \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\",\r\n  \"WanderersTroupe\", \"TenacityOfTheMillelith\", \"PaleFlame\", \"EmblemOfSeveredFate\", \"ShimenawasReminiscence\",\r\n] as const\r\nexport const allCharacterKeys = [\r\n  \"Albedo\", \"Amber\", \"Barbara\", \"Beidou\", \"Bennett\", \"Chongyun\", \"Diluc\", \"Diona\", \"Fischl\", \"Ganyu\",\r\n  \"HuTao\", \"Jean\", \"Kaeya\", \"Keqing\", \"Klee\", \"Lisa\", \"Mona\", \"Ningguang\", \"Noelle\", \"Qiqi\",\r\n  \"Razor\", \"Sucrose\", \"Tartaglia\", \"Traveler\", \"RaidenShogun\", \"Venti\", \"Xiao\", \"Xiangling\", \"Xingqiu\", \"Xinyan\",\r\n  \"Zhongli\", \"Rosaria\", \"Yanfei\", \"Eula\", \"KaedeharaKazuha\", \"KamisatoAyaka\", \"Sayu\", \"Yoimiya\", \"KujouSara\", \"Aloy\"\r\n] as const\r\nexport const allWeaponKeys = [\r\n  \"DullBlade\", \"SilverSword\", \"CoolSteel\", \"DarkIronSword\", \"FilletBlade\", \"HarbingerOfDawn\", \"SkyriderSword\",\r\n  \"TravelersHandySword\", \"BlackcliffLongsword\", \"FavoniusSword\", \"IronSting\", \"LionsRoar\", \"PrimordialJadeCutter\",\r\n  \"PrototypeRancour\", \"RoyalLongsword\", \"SacrificialSword\", \"TheAlleyFlash\", \"TheBlackSword\", \"TheFlute\",\r\n  \"SwordOfDescension\", \"FesteringDesire\", \"AquilaFavonia\", \"SkywardBlade\", \"SummitShaper\", \"WasterGreatsword\",\r\n  \"OldMercsPal\", \"BloodtaintedGreatsword\", \"DebateClub\", \"FerrousShadow\", \"Quartz\", \"SkyriderGreatsword\",\r\n  \"WhiteIronGreatsword\", \"BlackcliffSlasher\", \"FavoniusGreatsword\", \"LithicBlade\", \"PrototypeArchaic\", \"Rainslasher\",\r\n  \"RoyalGreatsword\", \"SerpentSpine\", \"TheBell\", \"Whiteblind\", \"SacrificialGreatsword\", \"SnowTombedStarsilver\",\r\n  \"SkywardPride\", \"WolfsGravestone\", \"TheUnforged\", \"BeginnersProtector\", \"IronPoint\", \"BlackTassel\", \"Halberd\",\r\n  \"WhiteTassel\", \"BlackcliffPole\", \"CrescentPike\", \"Deathmatch\", \"DragonsBane\", \"LithicSpear\", \"PrototypeStarglitter\",\r\n  \"FavoniusLance\", \"RoyalSpear\", \"DragonspineSpear\", \"VortexVanquisher\", \"PrimordialJadeWingedSpear\", \"StaffOfHoma\",\r\n  \"SkywardSpine\", \"HuntersBow\", \"SeasonedHuntersBow\", \"EbonyBow\", \"Messenger\", \"RavenBow\", \"RecurveBow\",\r\n  \"SharpshootersOath\", \"Slingshot\", \"TheStringless\", \"AlleyHunter\", \"BlackcliffWarbow\", \"CompoundBow\",\r\n  \"FavoniusWarbow\", \"PrototypeCrescent\", \"RoyalBow\", \"Rust\", \"SacrificialBow\", \"TheViridescentHunt\", \"SkywardHarp\",\r\n  \"AmosBow\", \"ElegyForTheEnd\", \"WindblumeOde\", \"ApprenticesNotes\", \"PocketGrimoire\", \"EngulfingLightning\", \"EmeraldOrb\",\r\n  \"MagicGuide\", \"OtherworldlyStory\", \"ThrillingTalesOfDragonSlayers\", \"TwinNephrite\", \"BlackcliffAgate\",\r\n  \"FavoniusCodex\", \"MappaMare\", \"PrototypeAmber\", \"RoyalGrimoire\", \"SacrificialFragments\", \"SolarPearl\", \"TheWidsith\",\r\n  \"WineAndSong\", \"EyeOfPerception\", \"Frostbearer\", \"LostPrayerToTheSacredWinds\", \"SkywardAtlas\", \"MemoryOfDust\",\r\n  \"SongOfBrokenPines\", \"DodocoTales\", \"MitternachtsWaltz\", \"FreedomSworn\", \"AmenomaKageuchi\", \"MistsplitterReforged\",\r\n  \"KatsuragikiriNagamasa\", \"KitainCrossSpear\", \"ThunderingPulse\", \"Hamayumi\", \"HakushinRing\", \"TheCatch\",\r\n  \"EverlastingMoonglow\", \"LuxuriousSeaLord\", \"Predator\"\r\n] as const\r\nexport const characterSpecializedStatKeys = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"] as const\r\n\r\nexport type HitModeKey = typeof allHitModes[number]\r\nexport type ReactionModeKey = typeof allReactionModes[number]\r\nexport type SetNum = typeof allArtifactSetCount[number]\r\nexport type Rarity = typeof allRarities[number]\r\nexport type ArtifactRarity = typeof allArtifactRarities[number]\r\nexport type SlotKey = typeof allSlotKeys[number]\r\nexport type ElementKey = typeof allElements[number]\r\nexport type ArtifactSetKey = typeof allArtifactSets[number]\r\nexport type CharacterKey = typeof allCharacterKeys[number]\r\nexport type WeaponKey = typeof allWeaponKeys[number]\r\nexport type WeaponTypeKey = typeof allWeaponTypeKeys[number]\r\nexport type CharacterSpecializedStatKey = typeof characterSpecializedStatKeys[number]","import Artifact from \"../Artifact/Artifact\";\r\nimport { maxBuildsToShowDefault, maxBuildsToShowList } from \"../Build/Build\";\r\nimport { initialBuildSettings } from \"../Build/BuildSetting\";\r\nimport { ascensionMaxLevel } from \"../Data/CharacterData\";\r\nimport Stat from \"../Stat\";\r\nimport { allMainStatKeys, allSubstats, ICachedArtifact, IArtifact, ICachedSubstat, ISubstat, SubstatKey } from \"../Types/artifact\";\r\nimport { ICachedCharacter, ICharacter } from \"../Types/character\";\r\nimport { allArtifactRarities, allArtifactSets, allCharacterKeys, allElements, allHitModes, allReactionModes, allSlotKeys, allWeaponKeys } from \"../Types/consts\";\r\nimport { IWeapon, ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectFromKeyMap } from \"../Util/Util\";\r\n\r\n/// Returns the closest (not necessarily valid) artifact, including errors as necessary\r\nexport function validateArtifact(flex: IArtifact, id: string): { artifact: ICachedArtifact, errors: Displayable[] } {\r\n  const { location, exclude, lock, setKey, slotKey, rarity, mainStatKey } = flex\r\n  const level = Math.round(Math.min(Math.max(0, flex.level), rarity >= 3 ? rarity * 4 : 4))\r\n  const mainStatVal = Artifact.mainStatValue(mainStatKey, rarity, level)!\r\n\r\n  const errors: Displayable[] = []\r\n  const substats: ICachedSubstat[] = flex.substats.map(substat => ({ ...substat, rolls: [], efficiency: 0 }))\r\n  const validated: ICachedArtifact = { id, setKey, location, slotKey, exclude, lock, mainStatKey, rarity, level, substats, mainStatVal }\r\n\r\n  const allPossibleRolls: { index: number, substatRolls: number[][] }[] = []\r\n  let totalUnambiguousRolls = 0\r\n\r\n  function efficiency(rolls: number[], key: SubstatKey): number {\r\n    return rolls.reduce((a, b) => a + b, 0) / Artifact.maxSubstatValues(key) * 100 / rolls.length\r\n  }\r\n\r\n  substats.forEach((substat, index) => {\r\n    const { key, value } = substat\r\n    if (!key) return substat.value = 0\r\n\r\n    const possibleRolls = Artifact.getSubstatRolls(key, value, rarity)\r\n\r\n    if (possibleRolls.length) { // Valid Substat\r\n      const possibleLengths = new Set(possibleRolls.map(roll => roll.length))\r\n\r\n      if (possibleLengths.size !== 1) { // Ambiguous Rolls\r\n        allPossibleRolls.push({ index, substatRolls: possibleRolls })\r\n      } else { // Unambiguous Rolls\r\n        totalUnambiguousRolls += possibleRolls[0].length\r\n      }\r\n\r\n      substat.rolls = possibleRolls.reduce((best, current) => best.length < current.length ? best : current)\r\n      substat.efficiency = efficiency(substat.rolls, key)\r\n    } else { // Invalid Substat\r\n      substat.rolls = []\r\n      substat.efficiency = 0\r\n      errors.push(<>Invalid substat {Stat.getStatNameWithPercent(substat.key)}</>)\r\n    }\r\n  })\r\n\r\n  if (errors.length) return { artifact: validated, errors }\r\n\r\n  const { low, high } = Artifact.rollInfo(rarity), lowerBound = low + Math.floor(level / 4), upperBound = high + Math.floor(level / 4)\r\n\r\n  let highestScore = -Infinity // -Max(substats.rolls[i].length) over ambiguous rolls\r\n  const tryAllSubstats = (rolls: { index: number, roll: number[] }[], currentScore: number, total: number) => {\r\n    if (rolls.length === allPossibleRolls.length) {\r\n      if (total <= upperBound && total >= lowerBound && highestScore < currentScore) {\r\n        highestScore = currentScore\r\n        for (const { index, roll } of rolls) {\r\n          const key = substats[index].key as SubstatKey\r\n          substats[index].rolls = roll\r\n          substats[index].efficiency = efficiency(roll, key)\r\n        }\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    const { index, substatRolls } = allPossibleRolls[rolls.length]\r\n    for (const roll of substatRolls) {\r\n      rolls.push({ index, roll })\r\n      let newScore = Math.min(currentScore, -roll.length)\r\n      if (newScore >= highestScore) // Scores won't get better, so we can skip.\r\n        tryAllSubstats(rolls, newScore, total + roll.length)\r\n      rolls.pop()\r\n    }\r\n  }\r\n\r\n  tryAllSubstats([], Infinity, totalUnambiguousRolls)\r\n\r\n  const totalRolls = substats.reduce((accu, { rolls }) => accu + rolls.length, 0)\r\n\r\n  if (totalRolls > upperBound)\r\n    errors.push(`${rarity}-star artifact (level ${level}) should have no more than ${upperBound} rolls. It currently has ${totalRolls} rolls.`)\r\n  else if (totalRolls < lowerBound)\r\n    errors.push(`${rarity}-star artifact (level ${level}) should have at least ${lowerBound} rolls. It currently has ${totalRolls} rolls.`)\r\n\r\n  if (substats.some((substat) => !substat.key)) {\r\n    let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n    if (substat)\r\n      errors.push(<>Substat {Stat.getStatNameWithPercent(substat.key)} has {'>'} 1 roll, but not all substats are unlocked.</>)\r\n  }\r\n\r\n  return { artifact: validated, errors }\r\n}\r\n/// Returns the closest flex artifact, or undefined if it's not recoverable\r\nexport function parseArtifact(obj: any): IArtifact | undefined {\r\n  if (typeof obj !== \"object\") return\r\n\r\n  let {\r\n    setKey, rarity, level, slotKey, mainStatKey, substats, location, exclude, lock,\r\n  } = obj ?? {}\r\n\r\n  if (!allArtifactSets.includes(setKey) ||\r\n    !allSlotKeys.includes(slotKey) ||\r\n    !allMainStatKeys.includes(mainStatKey) ||\r\n    !allArtifactRarities.includes(rarity) ||\r\n    typeof level !== \"number\" || level < 0 || level > 20)\r\n    return // non-recoverable\r\n\r\n  substats = parseSubstats(substats)\r\n  lock = !!lock\r\n  exclude = !!exclude\r\n  level = Math.round(level)\r\n  if (!allCharacterKeys.includes(location)) location = \"\"\r\n  return { setKey, rarity, level, slotKey, mainStatKey, substats, location, exclude, lock }\r\n}\r\n/// Return a new flex artifact from given artifact. All extra keys are removed\r\nexport function removeArtifactCache(artifact: ICachedArtifact): IArtifact {\r\n  const { setKey, rarity, level, slotKey, mainStatKey, substats, location, exclude, lock } = artifact\r\n  return { setKey, rarity, level, slotKey, mainStatKey, substats: substats.map(substat => ({ key: substat.key, value: substat.value })), location, exclude, lock }\r\n}\r\nfunction parseSubstats(obj: any): ISubstat[] {\r\n  if (!Array.isArray(obj))\r\n    return new Array(4).map(_ => ({ key: \"\", value: 0 }))\r\n  const substats = obj.slice(0, 4).map(({ key = undefined, value = undefined }) => {\r\n    if (!allSubstats.includes(key) || typeof value !== \"number\" || !isFinite(value))\r\n      return { key: \"\", value: 0 }\r\n    value = key.endsWith(\"_\") ? parseFloat(value.toFixed(1)) : parseInt(value.toFixed())\r\n    return { key, value }\r\n  })\r\n  while (substats.length < 4)\r\n    substats.push({ key: \"\", value: 0 })\r\n\r\n  return substats\r\n}\r\n/// Returns the closest character\r\nexport function validateCharacter(flex: ICharacter): ICachedCharacter {\r\n  // TODO: Add more validations to make sure the returned value is a \"valid\" character\r\n  return {\r\n    equippedArtifacts: objectFromKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    ...flex,\r\n  }\r\n}\r\n/// Returns the closest flex character, or undefined if it's not recoverable\r\nexport function parseCharacter(obj: any): ICharacter | undefined {\r\n  if (typeof obj !== \"object\") return\r\n\r\n  let {\r\n    key: characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    baseStatOverrides, talent, infusionAura, constellation, buildSettings,\r\n  } = obj\r\n\r\n  if (!allCharacterKeys.includes(characterKey) ||\r\n    typeof level !== \"number\" || level < 0 || level > 90)\r\n    return // non-recoverable\r\n\r\n  if (!allHitModes.includes(hitMode)) hitMode = \"avgHit\"\r\n  if (characterKey !== \"Traveler\") elementKey = undefined\r\n  else if (!allElements.includes(elementKey)) elementKey = \"anemo\"\r\n  if (!allReactionModes.includes(reactionMode)) reactionMode = null\r\n  if (!allElements.includes(infusionAura)) infusionAura = \"\"\r\n  if (typeof constellation !== \"number\" && constellation < 0 && constellation > 6) constellation = 0\r\n  if (typeof ascension !== \"number\" ||\r\n    !(ascension in ascensionMaxLevel) ||\r\n    level > ascensionMaxLevel[ascension] ||\r\n    level < (ascensionMaxLevel[ascension - 1] ?? 0))\r\n    ascension = ascensionMaxLevel.findIndex(maxLvl => level <= maxLvl)\r\n  if (typeof talent !== \"object\") talent = { auto: 1, skill: 1, burst: 1 }\r\n  else {\r\n    let { auto, skill, burst } = talent\r\n    if (typeof auto !== \"number\" || auto < 1 || auto > 15) auto = 1\r\n    if (typeof skill !== \"number\" || skill < 1 || skill > 15) skill = 1\r\n    if (typeof burst !== \"number\" || burst < 1 || burst > 15) burst = 1\r\n    talent = { auto, skill, burst }\r\n  }\r\n  if (buildSettings && typeof buildSettings === \"object\") {//buildSettings\r\n    let { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, builds, buildDate, maxBuildsToShow } = buildSettings ?? {}\r\n    if (!Array.isArray(setFilters)) setFilters = initialBuildSettings().setFilters\r\n    if (typeof statFilters !== \"object\") statFilters = {}\r\n\r\n    if (!mainStatKeys || !mainStatKeys.sands || !mainStatKeys.goblet || !mainStatKeys.circlet) {\r\n      const tempmainStatKeys = initialBuildSettings().mainStatKeys\r\n      if (Array.isArray(mainStatKeys)) {\r\n        const [sands, goblet, circlet] = mainStatKeys\r\n        if (sands) tempmainStatKeys.sands = [sands]\r\n        if (goblet) tempmainStatKeys.goblet = [goblet]\r\n        if (circlet) tempmainStatKeys.circlet = [circlet]\r\n      }\r\n      mainStatKeys = tempmainStatKeys\r\n    }\r\n\r\n    if (!optimizationTarget) optimizationTarget = \"finalAtk\"\r\n    if (typeof mainStatAssumptionLevel !== \"number\" || mainStatAssumptionLevel < 0 || mainStatAssumptionLevel > 20)\r\n      mainStatAssumptionLevel = 0\r\n    useExcludedArts = !!useExcludedArts\r\n    useEquippedArts = !!useEquippedArts\r\n    if (!Array.isArray(builds) || !builds.every(b => Array.isArray(b) && b.every(s => typeof s === \"string\"))) {\r\n      builds = []\r\n      buildDate = 0\r\n    }\r\n    if (!Number.isInteger(buildDate)) buildDate = 0\r\n    if (!maxBuildsToShowList.includes(maxBuildsToShow)) maxBuildsToShow = maxBuildsToShowDefault\r\n    buildSettings = { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, builds, buildDate, maxBuildsToShow }\r\n  }\r\n\r\n  // TODO: validate baseStatOverrides, conditionalValues\r\n  const result: ICharacter = {\r\n    key: characterKey, level, ascension, hitMode, reactionMode, conditionalValues,\r\n    baseStatOverrides, talent, infusionAura, constellation,\r\n  }\r\n  if (buildSettings) result.buildSettings = buildSettings\r\n  if (elementKey) result.elementKey = elementKey\r\n  return result\r\n}\r\n/// Return a new flex character from given character. All extra keys are removed\r\nexport function removeCharacterCache(char: ICachedCharacter): ICharacter {\r\n  const {\r\n    key: characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n    baseStatOverrides, talent, infusionAura, constellation, buildSettings,\r\n  } = char\r\n  const result: ICharacter = {\r\n    key: characterKey, level, ascension, hitMode, reactionMode, conditionalValues,\r\n    baseStatOverrides, talent, infusionAura, constellation, buildSettings,\r\n  }\r\n  if (elementKey) result.elementKey = elementKey\r\n  return result\r\n}\r\n\r\nexport function validateWeapon(flex: IWeapon, id: string): ICachedWeapon {\r\n  //TODO: weapon validation\r\n  return { ...flex, id }\r\n}\r\nexport function parseWeapon(obj: any): IWeapon | undefined {\r\n  if (typeof obj !== \"object\") return\r\n\r\n  let { key, level, ascension, refinement, location, } = obj\r\n  if (!allWeaponKeys.includes(key)) return\r\n  if (typeof level !== \"number\" || level < 1 || level > 90) level = 1\r\n  if (typeof ascension !== \"number\" || ascension < 0 || ascension > 6) ascension = 0\r\n  // TODO: Check if level-ascension matches\r\n  if (typeof refinement !== \"number\" || refinement < 1 || refinement > 5) refinement = 1\r\n  if (!allCharacterKeys.includes(location)) location = \"\"\r\n\r\n  return { key, level, ascension, refinement, location, }\r\n}\r\n/// Return a new flex character from given character. All extra keys are removed\r\nexport function removeWeaponCache(weapon: ICachedWeapon): IWeapon {\r\n  const { key, level, ascension, refinement, location, } = weapon\r\n  return { key, level, ascension, refinement, location, }\r\n}","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\n\r\n// https://github.com/Dimbreath/GenshinData/blob/72c9112a7c5e8e5014f61009a1a2764e266aeab7/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//   or if the permalink is dead,\r\n// https://github.com/Dimbreath/GenshinData/blob/master/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//\r\n// PlayerElementLevelCo\r\nexport const transformativeReactionLevelMultipliers = [-1.0, // lvl 0\r\n  17.165606, 18.535048, 19.904854, 21.274902, 22.6454, 24.649612, 26.640642, 28.868587, 31.36768, 34.143345, 37.201, 40.66, 44.446667, 48.56352, 53.74848, 59.081898, 64.420044, 69.72446, 75.12314, 80.58478, 86.11203, 91.70374, 97.24463, 102.812645, 108.40956, 113.20169, 118.102905, 122.97932, 129.72733, 136.29291, 142.67085, 149.02902, 155.41699, 161.8255, 169.10631, 176.51808, 184.07274, 191.70952, 199.55692, 207.38205, 215.3989, 224.16566, 233.50217, 243.35057, 256.06308, 268.5435, 281.52606, 295.01364, 309.0672, 323.6016, 336.75754, 350.5303, 364.4827, 378.61917, 398.6004, 416.39825, 434.387, 452.95105, 472.60623, 492.8849, 513.56854, 539.1032, 565.51056, 592.53876, 624.4434, 651.47015, 679.4968, 707.79407, 736.67145, 765.64026, 794.7734, 824.67737, 851.1578, 877.74207, 914.2291, 946.74677, 979.4114, 1011.223, 1044.7917, 1077.4437, 1109.9976, 1142.9766, 1176.3695, 1210.1844, 1253.8357, 1288.9528, 1325.4841, 1363.4569, 1405.0974, 1446.8535]\r\n// PlayerShieldLevelCo\r\nexport const crystalizeLevelMultipliers = [-1.0, // lvl 0\r\n  91.1791, 98.707664, 106.23622, 113.76477, 121.29332, 128.82188, 136.35042, 143.87898, 151.40752, 158.93608, 169.99149, 181.07625, 192.19037, 204.0482, 215.939, 227.86275, 247.68594, 267.5421, 287.4312, 303.82642, 320.22522, 336.62762, 352.31927, 368.01093, 383.70255, 394.43237, 405.18146, 415.94992, 426.73764, 437.5447, 450.6, 463.7003, 476.84558, 491.1275, 502.55457, 514.0121, 531.4096, 549.9796, 568.5849, 584.9965, 605.67035, 626.3862, 646.0523, 665.7556, 685.4961, 700.8394, 723.3331, 745.8653, 768.4357, 786.79193, 809.5388, 832.32904, 855.16266, 878.0396, 899.4848, 919.362, 946.0396, 974.7642, 1003.5786, 1030.077, 1056.635, 1085.2463, 1113.9244, 1149.2587, 1178.0648, 1200.2238, 1227.6603, 1257.243, 1284.9174, 1314.7529, 1342.6652, 1372.7524, 1396.321, 1427.3124, 1458.3745, 1482.3358, 1511.9109, 1541.5493, 1569.1537, 1596.8143, 1622.4197, 1648.074, 1666.3761, 1684.6782, 1702.9803, 1726.1047, 1754.6715, 1785.8666, 1817.1375, 1851.0603]\r\n","import { DBStorage } from \"./DBStorage\"\r\n\r\nexport function getDBVersion(storage: DBStorage) {\r\n  return parseInt(storage.getString('db_ver') ?? '0')\r\n}\r\nexport function setDBVersion(storage: DBStorage, version: number) {\r\n  storage.setString('db_ver', version.toString())\r\n}\r\n","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\nimport { usePromise } from \"./Util/ReactUtil\";\r\nimport { evalIfFunc } from \"./Util/Util\";\r\nimport Formula from \"./Formula\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") => <span className={`text-${StatData[key]?.variant} text-nowrap`}>{StatData[key]?.name ?? defVal}</span>\r\n\r\n  static getStatNameRaw = (key, defVal = \"\") => StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\", variant = true) => <span className={`text-${variant && StatData[key]?.variant} text-nowrap`}>{StatData[key]?.name ?? defVal}{key?.endsWith('_') && \"%\"}</span>\r\n\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats, premod = false) =>\r\n    f({ stats, expand: false, premod }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n}\r\n\r\nconst ModFormula = ({ path, stats }) => {\r\n  const formula = usePromise(Formula.get(path), [path]) as any\r\n  if (!formula?.field?.formulaText) return null\r\n  const ret = evalIfFunc(formula.field.formulaText, stats) as JSX.Element\r\n  return ret\r\n}\r\nexport function FormulaDisplay({ statKey, stats, modifiers = {}, expand = true }) {\r\n  if (modifiers[statKey]) {\r\n    const modifierText = (modifiers?.[statKey] ?? []).map(path =>\r\n      <span key={path.join()}> + <ModFormula path={path} stats={stats} /></span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand, premod: true })}{modifierText} </span>\r\n    else\r\n      return <span>{f({ stats, premod: true }, statKey)}{modifierText} </span>\r\n  }\r\n\r\n  if (typeof FormulaText?.[statKey] === \"function\")\r\n    return FormulaText[statKey]({ stats, expand })\r\n  else return null\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true, premod = false } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatName(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  const value = (premod ? stats?.premod?.[statKey] : undefined) ?? stats?.[statKey]\r\n  const printValue = value?.toFixed?.(fixedUnit) || value\r\n  const debug = process.env.NODE_ENV === \"development\" ? <code className=\"text-warning\"> {statKey}</code> : null\r\n  return <span className=\"text-nowrap\"><b>{statName}</b>{debug} <span className=\"text-info\">{printValue}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - Min( {f(o, \"enemyDEFRed_\")} , 90% ) ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>16 * {f(o, \"eleMas\")} / ( 2000 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n};\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].map(ele => FormulaText[`${ele}_crystalize_hit`] = o => <span>250% * {f(o, `crystalize_hit`)}</span>)\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","export interface DBStorage {\r\n  keys: string[]\r\n  entries: [key: string, value: string][]\r\n\r\n  get(key: string): any | undefined\r\n  set(key: string, value: any): void\r\n\r\n  getString(key: string): string | undefined\r\n  setString(key: string, value: string): void\r\n  remove(key: string): void\r\n  removeForKeys(shouldRemove: (key: string) => boolean): void\r\n\r\n  copyFrom(other: DBStorage): void\r\n  clear(): void\r\n}\r\n\r\nexport class DBLocalStorage implements DBStorage {\r\n  private storage: Storage\r\n\r\n  constructor(storage: Storage) {\r\n    this.storage = storage\r\n  }\r\n\r\n  get keys(): string[] {\r\n    return Object.keys(this.storage)\r\n  }\r\n  get entries(): [key: string, value: string][] {\r\n    return Object.entries(this.storage)\r\n  }\r\n\r\n  get(key: string) {\r\n    const string = this.storage.getItem(key)\r\n    if (!string) return undefined\r\n    try {\r\n      return JSON.parse(string)\r\n    } catch {\r\n      this.storage.removeItem(key)\r\n      return undefined\r\n    }\r\n  }\r\n  set(key: string, value: any): void {\r\n    this.storage.setItem(key, JSON.stringify(value))\r\n  }\r\n\r\n  getString(key: string): string | undefined {\r\n    return this.storage.getItem(key) ?? undefined\r\n  }\r\n  setString(key: string, value: string) {\r\n    this.storage.setItem(key, value)\r\n  }\r\n  remove(key: string) {\r\n    this.storage.removeItem(key)\r\n  }\r\n\r\n  copyFrom(other: DBStorage) {\r\n    for (const [key, value] of other.entries) {\r\n      this.setString(key, value)\r\n    }\r\n  }\r\n  clear() {\r\n    this.storage.clear()\r\n  }\r\n  removeForKeys(shouldRemove: (key: string) => boolean) {\r\n    for (const key in this.storage) {\r\n      if (shouldRemove(key))\r\n        this.storage.removeItem(key)\r\n    }\r\n  }\r\n}\r\n\r\nexport class SandboxStorage implements DBStorage {\r\n  private storage: Dict<string, string> = {}\r\n\r\n  constructor(other: DBStorage | undefined = undefined) {\r\n    other && this.copyFrom(other)\r\n  }\r\n\r\n  get keys(): string[] {\r\n    return Object.keys(this.storage)\r\n  }\r\n  get entries(): [key: string, value: string][] {\r\n    return Object.entries(this.storage)\r\n  }\r\n\r\n  get(key: string) {\r\n    const string = this.storage[key]\r\n    if (!string) return undefined\r\n    try {\r\n      return JSON.parse(string)\r\n    } catch {\r\n      delete this.storage[key]\r\n      return undefined\r\n    }\r\n  }\r\n  set(key: string, value: any): void {\r\n    this.storage[key] = JSON.stringify(value)\r\n  }\r\n\r\n  getString(key: string): string | undefined {\r\n    return this.storage[key]\r\n  }\r\n  setString(key: string, value: string): void {\r\n    this.storage[key] = value\r\n  }\r\n  remove(key: string): void {\r\n    delete this.storage[key]\r\n  }\r\n\r\n  copyFrom(other: DBStorage) {\r\n    for (const [key, value] of other.entries) {\r\n      this.setString(key, value)\r\n    }\r\n  }\r\n  clear() {\r\n    this.storage = {}\r\n  }\r\n  removeForKeys(shouldRemove: (key: string) => boolean) {\r\n    this.storage = Object.fromEntries(Object.entries(this.storage).filter(([key]) => !shouldRemove(key)))\r\n  }\r\n}\r\n\r\nexport const dbStorage = new DBLocalStorage(localStorage)\r\n","import { BonusStats, Modifier } from \"../Types/stats\"\r\n\r\nexport function mergeStats(initialStats: BonusStats, stats: BonusStats | undefined) {\r\n  if (!stats) return\r\n  return Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [key, paths] of (Object.entries(val as Modifier))) {\r\n        initialStats.modifiers[key] = initialStats.modifiers[key] ?? []\r\n        initialStats.modifiers[key].push(...paths)\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n}","// import characters from\r\n\r\nexport const ascensionMaxLevel = [20, 40, 50, 60, 70, 80, 90] as const\r\nexport const ambiguousLevel = (level) => level !== 90 && ascensionMaxLevel.includes(level)\r\nexport const milestoneLevels = [\r\n  [90, 6],\r\n  [80, 6],\r\n  [80, 5],\r\n  [70, 5],\r\n  [70, 4],\r\n  [60, 4],\r\n  [60, 3],\r\n  [50, 3],\r\n  [50, 2],\r\n  [40, 2],\r\n  [40, 1],\r\n  [20, 1],\r\n  [20, 0],\r\n  [1, 0]\r\n] as const\r\n\r\nexport const characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n} as const\r\n","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\nimport { ICalculatedStats } from \"./Types/stats\";\r\nimport { mergeStats } from \"./Util/StatUtil\";\r\nimport Formula from \"./Formula\";\r\n\r\nexport interface StatItem {\r\n  name: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\" },\r\n  atk: { name: \"ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\" },\r\n  def: { name: \"DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"Total HP\" },\r\n  finalATK: { name: \"Total ATK\" },\r\n  finalDEF: { name: \"Total DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  shield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Reduction\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaSprintDec_: { name: \"Sprinting Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas: Dict<string, (s: ICalculatedStats) => number> = {\r\n  // Basic Stats\r\n  baseATK: (s) => s.characterATK + s.weaponATK,\r\n  finalATK: (s) => s.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s) => s.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s) => s.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s) => (100 + s.characterLevel) / ((100 + s.characterLevel) + (100 + s.enemyLevel) * (1 - Math.min(s.enemyDEFRed_, 90) / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s) => transformativeReactionLevelMultipliers[s.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 1600 * s.eleMas / (2000 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s) => crystalizeLevelMultipliers[s.characterLevel],\r\n  crystalize_hit: (s) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * s.crystalize_multi,\r\n};\r\n\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].forEach(ele => {\r\n  StatData[`${ele}_crystalize_hit`] = { name: `Crystalize Shield ${hitElements[ele].name} Effective HP`, variant: ele }\r\n  Formulas[`${ele}_crystalize_hit`] = s => s.crystalize_hit * 2.5\r\n})\r\n\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"shattered_hit\", \"crystalize_hit\", \"electro_crystalize_hit\", \"pyro_crystalize_hit\", \"cryo_crystalize_hit\", \"hydro_crystalize_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s) => s[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s) => s[`${ele}_${move}_hit_base_multi`] * s.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s) => multi * s.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * s[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * s[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\ntype KeyedFormula = [string, (s: ICalculatedStats) => number]\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys: string[], stats: ICalculatedStats) {\r\n  const { modifiers = {} } = stats, initialStats = {} as ICalculatedStats\r\n\r\n  const premodFormulaList: KeyedFormula[] = [], postmodFormulaList: KeyedFormula[] = []\r\n  for (const key of dependencyKeys) {\r\n    switch (getStage(key)) {\r\n      case 0: initialStats[key] = stats[key] ?? StatData[key]?.default ?? 0; break // Stat\r\n      case 1: initialStats[key] = Formulas[key]!(initialStats); break // Const Formula\r\n      case 2: premodFormulaList.push([key, Formulas[key]!]); break // Premod\r\n      case 3:  // Premod + Postmod\r\n        premodFormulaList.push([key, Formulas[key]!])\r\n        postmodFormulaList.push([key, Formulas[key]!])\r\n        break\r\n      case 4: postmodFormulaList.push([key, Formulas[key]!]); break // Postmod\r\n    }\r\n  }\r\n\r\n  const modFormula = Formula.computeModifier(stats, Object.fromEntries(Object.entries(modifiers)\r\n    .filter(([key]) => dependencyKeys.includes(key)) // Keep only relevant keys\r\n  ))\r\n\r\n  return {\r\n    initialStats: initialStats as ICalculatedStats,\r\n    formula: (s: ICalculatedStats) => {\r\n      premodFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n\r\n      const modStats = Formula.computeModifier(s, s.modifiers)(s) // late-binding modifiers (arts mod)\r\n      mergeStats(modStats, modFormula(s))\r\n      s.premod = Object.fromEntries(Object.keys(modifiers).map(key => [key, s[key]]))\r\n      // Apply modifiers\r\n      mergeStats(s, modStats)\r\n      mergeStats(s, { modifiers })\r\n\r\n      postmodFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n    }\r\n  }\r\n}\r\nexport const numStages = 5\r\nexport function getStage(key: string): number {\r\n  if (!(key in Formulas)) return 0 // Stat\r\n  if (StatData[key]?.const) return 1 // Const\r\n  // Premod (doesn't exist right now)\r\n  if (key === \"finalATK\" || key === \"finalDEF\" || key === \"finalHP\") return 3 // Premod + Postmod\r\n  return 4 // Postmod\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","export class DataManager<Key extends string | number, Value> {\r\n  static readonly allKeys = {} as const\r\n\r\n  data: Dict<Key, Value> = {}\r\n  listeners: Dict<Key, Callback<Value | undefined>[]> = {}\r\n  anyListeners: Callback<Key | typeof DataManager.allKeys>[] = []\r\n\r\n  followAny(callback: Callback<Key | typeof DataManager.allKeys>): () => void {\r\n    this.anyListeners.push(callback)\r\n    return () => {\r\n      this.anyListeners = this.anyListeners.filter(cb => cb !== callback)\r\n    }\r\n  }\r\n  follow(key: Key, callback: Callback<Value | undefined>) {\r\n    const value = this.get(key)\r\n    callback(value)\r\n    if (this.listeners[key]) this.listeners[key]!.push(callback)\r\n    else this.listeners[key] = [callback]\r\n    return () => {\r\n      this.listeners[key] = this.listeners[key]?.filter(cb => cb !== callback)\r\n      if (!this.listeners[key]?.length) delete this.listeners[key]\r\n    }\r\n  }\r\n\r\n  get keys() { return Object.keys(this.data) }\r\n  get values() { return Object.values(this.data) }\r\n  get(key: Key | \"\" | undefined): Value | undefined { return key ? this.data[key] : undefined }\r\n  set(key: Key, value: Value) {\r\n    this.data[key] = value\r\n\r\n    this.listeners[key]?.forEach(cb => cb(value))\r\n    this.anyListeners.forEach(cb => cb(key))\r\n  }\r\n  remove(key: Key) {\r\n    delete this.data[key]\r\n\r\n    this.listeners[key]?.forEach(cb => cb(undefined))\r\n    this.anyListeners.forEach(cb => cb(key))\r\n    delete this.listeners[key]\r\n  }\r\n  removeAll() {\r\n    this.data = {}\r\n\r\n    Object.values(this.listeners).forEach(listeners => listeners.forEach(listener => listener(undefined)))\r\n    this.anyListeners.forEach(listener => listener(DataManager.allKeys))\r\n    this.listeners = {}\r\n    this.anyListeners = []\r\n  }\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg) => void\r\n","import { initialBuildSettings } from \"../Build/BuildSetting\"\r\nimport { ascensionMaxLevel } from \"../Data/CharacterData\"\r\nimport { allCharacterKeys } from \"../Types/consts\"\r\nimport { DBStorage } from \"./DBStorage\"\r\nimport { getDBVersion, setDBVersion } from \"./utils\"\r\n\r\nexport function migrate(storage: DBStorage): { migrated: boolean } {\r\n  const version = getDBVersion(storage)\r\n\r\n  // Update version upon each successful migration, so we don't\r\n  // need to migrate that part again if later parts fail.\r\n  if (version < 3) { migrateV2ToV3(storage); setDBVersion(storage, 3) }\r\n  if (version < 4) { migrateV3ToV4(storage); setDBVersion(storage, 4) }\r\n  if (version < 5) { migrateV4ToV5(storage); setDBVersion(storage, 5) }\r\n  if (version < 6) { migrateV5ToV6(storage); setDBVersion(storage, 6) }\r\n  if (version < 7) { migrateV6ToV7(storage); setDBVersion(storage, 7) }\r\n  if (version < 8) { migrateV7ToV8(storage); setDBVersion(storage, 8) }\r\n  if (version < 9) { migrateV8ToV9(storage); setDBVersion(storage, 9) }\r\n  if (version < 10) { migrateV9ToV10(storage); setDBVersion(storage, 10) }\r\n\r\n  if (version > 10) throw new Error(`Database version ${version} is not supported`)\r\n\r\n  return { migrated: version < getDBVersion(storage) }\r\n}\r\n\r\n/// v4.0.0 - v4.23.2\r\nfunction migrateV2ToV3(storage: DBStorage) {\r\n  const state = storage.get(\"CharacterDisplay.state\")\r\n  if (state) {\r\n    if (Array.isArray(state.elementalFilter)) state.elementalFilter = \"\"\r\n    if (Array.isArray(state.weaponFilter)) state.weaponFilter = \"\"\r\n    storage.set(\"CharacterDisplay.state\", state)\r\n  }\r\n\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = storage.get(key)\r\n      if (!value) continue\r\n      if (value.buildSetting) {\r\n        const { artifactsAssumeFull = false, ascending = false, mainStat = [\"\", \"\", \"\"], setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }], useExcludedArts = false } = value.buildSetting ?? {}\r\n        value.buildSettings = { mainStatAssumptionLevel: artifactsAssumeFull ? 20 : 0, ascending, mainStatKeys: mainStat, setFilters, useExcludedArts }\r\n      }\r\n\r\n      storage.set(key, value)\r\n    }\r\n  }\r\n}\r\n\r\n/// v5.0.0 - v5.7.15\r\nfunction migrateV3ToV4(storage: DBStorage) { // \r\n  // Convert anemo traveler to traveler, and remove geo traveler\r\n  const traveler = storage.get(\"char_traveler_anemo\")\r\n  // Deletion of old travelers are handled during validation\r\n\r\n  if (traveler) {\r\n    traveler.elementKey = \"anemo\"\r\n    traveler.characterKey = \"traveler\"\r\n    storage.set(\"char_traveler\", traveler)\r\n  }\r\n\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"artifact_\")) {\r\n      const value = storage.get(key)\r\n      let requireUpdate = false\r\n      if (value.location === \"traveler_anemo\") {\r\n        value.location = \"traveler\"\r\n        requireUpdate = true\r\n      } else if (value.location === \"traveler_geo\") {\r\n        value.location = \"\"\r\n        requireUpdate = true\r\n      }\r\n\r\n      if (requireUpdate)\r\n        storage.set(key, value)\r\n    }\r\n  }\r\n}\r\n\r\n/// v5.8.0 - v5.11.5\r\nfunction migrateV4ToV5(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = storage.get(key)\r\n\r\n      const levelKey = value.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        value.level = 1\r\n        value.ascension = 0\r\n      } else {\r\n        value.level = level\r\n        value.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n\r\n      // TODO: Remove this once we validate baseStatOverrides\r\n      delete value.baseStatOverrides?.characterLevel\r\n      delete value.baseStatOverrides?.characterHP\r\n      delete value.baseStatOverrides?.characterATK\r\n      delete value.baseStatOverrides?.characterDEF\r\n\r\n      storage.set(key, value)\r\n    }\r\n  }\r\n}\r\n\r\n// v5.12.0 - 5.19.14\r\nfunction migrateV5ToV6(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n\r\n      // Migrate character weapon levels\r\n      if (!character.weapon) continue\r\n      const levelKey = character.weapon.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        character.weapon.level = 1\r\n        character.weapon.ascension = 0\r\n      } else {\r\n        character.weapon.level = level\r\n        character.weapon.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n      storage.set(key, character)\r\n    }\r\n  }\r\n}\r\n\r\n// 5.20.0 - 6.0.0\r\nfunction migrateV6ToV7(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n      if (!character.buildSettings) character.buildSettings = initialBuildSettings()\r\n      else {\r\n        const [sands, goblet, circlet] = (Array.isArray(character.buildSettings?.mainStatKeys) && character.buildSettings?.mainStatKeys) || []\r\n        character.buildSettings.mainStatKeys = initialBuildSettings().mainStatKeys\r\n        if (sands) character.buildSettings.mainStatKeys.sands = [sands]\r\n        if (goblet) character.buildSettings.mainStatKeys.goblet = [goblet]\r\n        if (circlet) character.buildSettings.mainStatKeys.circlet = [circlet]\r\n      }\r\n      storage.set(key, character)\r\n    }\r\n  }\r\n}\r\n\r\n// 6.0.0 - present\r\nfunction migrateV7ToV8(storage: DBStorage) {\r\n  const weaponKeyChangeMap = {\r\n    \"PrototypeAminus\": \"PrototypeArchaic\",\r\n    \"PrototypeGrudge\": \"PrototypeStarglitter\",\r\n    \"PrototypeMalice\": \"PrototypeAmber\"\r\n  } as const\r\n  let keyInd = 1;\r\n  function generateWeaponId(storage: DBStorage) {\r\n    let key = `weapon_${keyInd++}`\r\n    while (storage.keys.includes(key))\r\n      key = `weapon_${keyInd++}`\r\n    return key\r\n  }\r\n\r\n  const charMap = Object.fromEntries(allCharacterKeys.map(k => [k.toLowerCase(), k]))\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key), characterKey = character.characterKey\r\n      // We delete old key upon validation\r\n\r\n      const newCharacterKey = charMap[characterKey]\r\n\r\n      // Rename characterKey\r\n      character.key = newCharacterKey\r\n      // Rename conditionalValues with characterKey\r\n      if (character.conditionalValues?.character?.[characterKey]) {\r\n        character.conditionalValues.character[newCharacterKey] = character.conditionalValues?.character?.[characterKey]\r\n        delete character.conditionalValues?.character?.[characterKey]\r\n      }\r\n\r\n      // Convert base-0 `talentLevelKeys` to base-1 `talent`\r\n      if (typeof character.talentLevelKeys === \"object\") {\r\n        character.talent = Object.fromEntries(\r\n          Object.entries(character.talentLevelKeys)\r\n            .map(([key, value]: [any, any]) => [key, value + 1]))\r\n      }\r\n\r\n      //rename buildSettings.useLockedArts to buildSettings.useExcludedArts\r\n      if (character.buildSettings?.useLockedArts !== undefined) {\r\n        character.buildSettings.useExcludedArts = character.buildSettings.useLockedArts\r\n        delete character.buildSettings.useLockedArts\r\n      }\r\n\r\n      const { weapon, ...rest } = character\r\n      if (!weapon) continue\r\n      if (weaponKeyChangeMap[weapon.key])\r\n        weapon.key = weaponKeyChangeMap[weapon.key]\r\n      weapon.location = newCharacterKey\r\n      weapon.refine = weapon.refineIndex + 1\r\n      storage.set(generateWeaponId(storage), weapon)\r\n      storage.set(`char_${newCharacterKey}`, rest)\r\n    } else if (key.startsWith(\"artifact_\")) {\r\n      const artifact = storage.get(key)\r\n      artifact.location = charMap[artifact.location]\r\n      artifact.exclude = artifact.lock\r\n      artifact.rarity = artifact.numStars\r\n      storage.set(key, artifact)\r\n    }\r\n  }\r\n  const BuildsDisplayState = storage.get(\"BuildsDisplay.state\")\r\n  if (BuildsDisplayState) {\r\n    BuildsDisplayState.characterKey = charMap[BuildsDisplayState.characterKey] ?? \"\"\r\n    // Limit maxBuildsToShow\r\n    BuildsDisplayState.maxBuildsToShow = BuildsDisplayState.maxBuildsToShow > 10 ? 5 : BuildsDisplayState.maxBuildsToShow\r\n    storage.set(\"BuildsDisplay.state\", BuildsDisplayState)\r\n  }\r\n  const CharacterDisplayState = storage.get(\"CharacterDisplay.state\")\r\n  if (CharacterDisplayState) {\r\n    CharacterDisplayState.characterKeyToEdit = charMap[CharacterDisplayState.charIdToEdit] ?? \"\"\r\n    delete CharacterDisplayState.charIdToEdit\r\n    storage.set(\"CharacterDisplay.state\", CharacterDisplayState)\r\n  }\r\n}\r\n\r\nfunction migrateV8ToV9(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n      const { buildSettings = {} } = character\r\n      delete buildSettings.ascending\r\n      const { statFilters = {} } = buildSettings\r\n      for (const key in statFilters) {\r\n        if (statFilters[key]?.min)\r\n          statFilters[key] = statFilters[key].min\r\n        else\r\n          delete statFilters[key]\r\n      }\r\n      storage.set(key, character)\r\n    }\r\n  }\r\n}\r\n\r\nfunction migrateV9ToV10(storage: DBStorage) {\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"weapon_\")) {\r\n      const weapon = storage.get(key)\r\n      if (weapon.refine) {\r\n        weapon.refinement = weapon.refine\r\n        storage.set(key, weapon)\r\n      }\r\n    }\r\n  }\r\n}","import { ICachedArtifact, IArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter, ICharacter } from \"../Types/character\";\r\nimport { allSlotKeys, CharacterKey, SlotKey } from \"../Types/consts\";\r\nimport { deepClone, getRandomInt, objectFromKeyMap } from \"../Util/Util\";\r\nimport { DataManager } from \"./DataManager\";\r\nimport { migrate } from \"./migration\";\r\nimport { validateArtifact, parseCharacter, parseArtifact, removeArtifactCache, validateCharacter, removeCharacterCache, parseWeapon, validateWeapon, removeWeaponCache } from \"./validation\";\r\nimport { DBStorage, dbStorage } from \"./DBStorage\";\r\nimport { ICachedWeapon, IWeapon } from \"../Types/weapon\";\r\nimport { createContext } from \"react\";\r\nimport { defaultInitialWeapon } from \"../Weapon/WeaponUtil\";\r\n\r\nexport class ArtCharDatabase {\r\n  storage: DBStorage\r\n  arts = new DataManager<string, ICachedArtifact>()\r\n  chars = new DataManager<CharacterKey, ICachedCharacter>()\r\n  weapons = new DataManager<string, ICachedWeapon>()\r\n\r\n  constructor(storage: DBStorage) {\r\n    this.storage = storage\r\n    this.reloadStorage()\r\n  }\r\n\r\n  /// Call this function when the underlying data changes without this instance's knowledge\r\n  reloadStorage() {\r\n    this.arts.removeAll()\r\n    this.chars.removeAll()\r\n    this.weapons.removeAll()\r\n    const storage = this.storage\r\n    const { migrated } = migrate(storage)\r\n\r\n    // Load into memory and verify database integrity\r\n    for (const key of storage.keys) {\r\n      if (key.startsWith(\"char_\")) {\r\n        const flex = parseCharacter(storage.get(key))\r\n        if (!flex || key !== `char_${flex.key}`) {\r\n          // Non-recoverable\r\n          storage.remove(key)\r\n          continue\r\n        }\r\n        const character = validateCharacter(flex)\r\n        // Use relations from artifact\r\n        character.equippedArtifacts = objectFromKeyMap(allSlotKeys, () => \"\")\r\n\r\n        this.chars.set(flex.key, character)\r\n        // Save migrated version back to db\r\n        if (migrated) this.storage.set(`char_${flex.key}`, flex)\r\n      }\r\n    }\r\n\r\n    for (const key of storage.keys) {\r\n      if (key.startsWith(\"artifact_\")) {\r\n        const flex = parseArtifact(storage.get(key))\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          storage.remove(key)\r\n          continue\r\n        }\r\n\r\n        // Update relations\r\n        const { location, slotKey } = flex\r\n        if (this.chars.data[location] && this.chars.data[location]?.equippedArtifacts[slotKey] === \"\") {\r\n          this.chars.data[location]!.equippedArtifacts[slotKey] = key // equiped on `location`\r\n        } else flex.location = \"\"\r\n\r\n        const { artifact } = validateArtifact(flex, key)\r\n\r\n        this.arts.set(artifact.id, artifact)\r\n        // Save migrated version back to db\r\n        if (migrated) this.storage.set(key, flex)\r\n      }\r\n    }\r\n    for (const key of storage.keys) {\r\n      if (key.startsWith(\"weapon_\")) {\r\n        const flex = parseWeapon(storage.get(key))\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          storage.remove(key)\r\n          continue\r\n        }\r\n\r\n        // Update relations\r\n        const { location } = flex\r\n        if (this.chars.data[location] && this.chars.data[location]?.equippedWeapon === \"\") {\r\n          this.chars.data[location]!.equippedWeapon = key // equiped on `location`\r\n        } else flex.location = \"\"\r\n\r\n        const weapon = validateWeapon(flex, key)\r\n\r\n        this.weapons.set(key, weapon)\r\n        // Save migrated version back to db\r\n        if (migrated) this.storage.set(key, flex)\r\n      }\r\n    }\r\n    const weaponIds = new Set(this.weapons.keys)\r\n    for (const [charKey, char] of Object.entries(this.chars.data)) {\r\n      if (!char.equippedWeapon) {\r\n        // A default \"sword\" should work well enough for this case.\r\n        // We'd have to pull the hefty character sheet otherwise.\r\n        const weapon = defaultInitialWeapon(\"sword\")\r\n        const weaponId = generateRandomWeaponID(weaponIds)\r\n        weapon.location = charKey\r\n        char.equippedWeapon = weaponId\r\n\r\n        weaponIds.add(weaponId)\r\n        this.weapons.set(weaponId, weapon)\r\n        this.storage.set(weaponId, removeWeaponCache(weapon))\r\n        // No need to set anything on character side.\r\n      }\r\n    }\r\n  }\r\n\r\n  private saveArt(key: string, art: ICachedArtifact) {\r\n    this.storage.set(key, removeArtifactCache(art))\r\n    this.arts.set(key, art)\r\n  }\r\n  private saveChar(key: CharacterKey, char: ICachedCharacter) {\r\n    this.storage.set(`char_${key}`, removeCharacterCache(char))\r\n    this.chars.set(key, char)\r\n  }\r\n  private saveWeapon(key: string, weapon: ICachedWeapon) {\r\n    this.storage.set(key, removeWeaponCache(weapon))\r\n    this.weapons.set(key, weapon)\r\n  }\r\n  // TODO: Make theses `_` functions private once we migrate to use `followXXX`,\r\n  // or de-underscore it if we decide that these are to stay\r\n  _getArt(key: string) { return this.arts.get(key) }\r\n  _getChar(key: CharacterKey | \"\") { return key ? this.chars.get(key) : undefined }\r\n  _getArts() { return this.arts.values }\r\n  _getCharKeys(): CharacterKey[] { return this.chars.keys }\r\n  _getWeapon(key: string) { return this.weapons.get(key) }\r\n  _getWeapons() { return this.weapons.values }\r\n\r\n  followChar(key: CharacterKey, cb: Callback<ICachedCharacter>): (() => void) | undefined { return this.chars.follow(key, cb) }\r\n  followArt(key: string, cb: Callback<ICachedArtifact>): (() => void) | undefined {\r\n    if (this.arts.get(key) !== undefined)\r\n      return this.arts.follow(key, cb)\r\n    cb(undefined)\r\n  }\r\n  followWeapon(key: string, cb: Callback<ICachedWeapon>): (() => void) | undefined {\r\n    if (this.weapons.get(key) !== undefined)\r\n      return this.weapons.follow(key, cb)\r\n    cb(undefined)\r\n  }\r\n\r\n  followAnyChar(cb: (key: CharacterKey | {}) => void): (() => void) | undefined { return this.chars.followAny(cb) }\r\n  followAnyArt(cb: (key: string | {}) => void): (() => void) | undefined { return this.arts.followAny(cb) }\r\n  followAnyWeapon(cb: (key: string | {}) => void): (() => void) | undefined { return this.weapons.followAny(cb) }\r\n\r\n  /**\r\n   * **Caution**: This does not update `equippedArtifacts`, use `equipArtifacts` instead\r\n   * **Caution**: This does not update `equipedWeapon`, use `setWeaponLocation` instead\r\n   */\r\n  updateChar(value: Partial<ICharacter>): void {\r\n    const key = value.key!\r\n    const oldChar = this._getChar(key)\r\n    const parsedChar = parseCharacter({ ...oldChar, ...(value as ICharacter) })\r\n    if (!parsedChar) return\r\n\r\n    const newChar = validateCharacter({ ...oldChar, ...parsedChar })\r\n    this.saveChar(key, newChar)\r\n  }\r\n\r\n  /**\r\n   * **Caution** This does not update `location`, use `setLocation` instead\r\n   */\r\n  updateArt(value: Partial<IArtifact>, id: string) {\r\n    const oldArt = this.arts.get(id)\r\n    const parsedArt = parseArtifact({ ...oldArt, ...(value as IArtifact) })\r\n    if (!parsedArt) return\r\n\r\n    const newArt = validateArtifact({ ...oldArt, ...parsedArt }, id).artifact\r\n    this.saveArt(id, newArt)\r\n    if (newArt.location)\r\n      this.chars.set(newArt.location, deepClone(this.chars.get(newArt.location)!))\r\n  }\r\n  /**\r\n   * **Caution** This does not update `location` use `setWeaponLocation` instead\r\n   */\r\n  updateWeapon(value: Partial<IWeapon>, id: string) {\r\n    const oldWeapon = this.weapons.get(id)\r\n    const parsedWeapon = parseWeapon({ ...oldWeapon, ...(value as IWeapon) })\r\n    if (!parsedWeapon) return\r\n\r\n    const newWeapon = validateWeapon({ ...oldWeapon, ...parsedWeapon }, id)\r\n    this.saveWeapon(id, newWeapon)\r\n    if (newWeapon.location)\r\n      this.chars.set(newWeapon.location, deepClone(this.chars.get(newWeapon.location)!))\r\n  }\r\n\r\n  createArt(value: IArtifact): string {\r\n    const id = generateRandomArtID(new Set(this.arts.keys))\r\n    const newArt = validateArtifact(parseArtifact({ ...value, location: \"\" })!, id).artifact\r\n    this.saveArt(id, newArt)\r\n    return id\r\n  }\r\n  createWeapon(value: IWeapon): string {\r\n    const id = generateRandomWeaponID(new Set(this.weapons.keys))\r\n    const newWeapon = validateWeapon(parseWeapon({ ...value, location: \"\" })!, id)\r\n    this.saveWeapon(id, newWeapon)\r\n    return id\r\n  }\r\n\r\n  removeChar(key: CharacterKey) {\r\n    const char = this.chars.get(key)\r\n    if (!char) return\r\n\r\n    for (const artKey of Object.values(char.equippedArtifacts)) {\r\n      const art = this.arts.get(artKey)\r\n      if (art && art.location === key) {\r\n        art.location = \"\"\r\n        this.saveArt(artKey, art)\r\n      }\r\n    }\r\n    const weapon = this.weapons.get(char.equippedWeapon)\r\n    if (weapon && weapon.location === key) {\r\n      weapon.location = \"\"\r\n      this.saveWeapon(char.equippedWeapon, weapon)\r\n    }\r\n\r\n    this.storage.remove(`char_${key}`)\r\n    this.chars.remove(key)\r\n  }\r\n  removeArt(key: string) {\r\n    const art = this.arts.get(key)\r\n    if (!art) return\r\n\r\n    const char = art.location && this.chars.get(art.location)\r\n    if (char && char.equippedArtifacts[art.slotKey] === key) {\r\n      char.equippedArtifacts[art.slotKey] = \"\"\r\n      this.saveChar(char.key, char)\r\n    }\r\n    this.storage.remove(key)\r\n    this.arts.remove(key)\r\n  }\r\n  removeWeapon(key: string) {\r\n    const weapon = this.weapons.get(key)\r\n    if (!weapon || weapon.location)\r\n      return // Can't delete equipped weapon here\r\n\r\n    this.storage.remove(key)\r\n    this.weapons.remove(key)\r\n  }\r\n  setArtLocation(artKey: string, newCharKey: CharacterKey | \"\") {\r\n    const art1 = this.arts.get(artKey)\r\n    if (!art1 || art1.location === newCharKey) return\r\n\r\n    const slotKey = art1.slotKey\r\n    const char1 = this.chars.get(newCharKey)\r\n    const art2 = this.arts.get(char1?.equippedArtifacts[slotKey])\r\n    const char2 = this.chars.get(art1.location)\r\n\r\n    // Currently art1 <-> char2 & art2 <-> char1\r\n    // Swap to art1 <-> char1 & art2 <-> char2\r\n\r\n    this.saveArt(art1.id, { ...art1, location: char1?.key ?? \"\" })\r\n    if (art2)\r\n      this.saveArt(art2.id, { ...art2, location: char2?.key ?? \"\" })\r\n    if (char1)\r\n      this.saveChar(char1.key, { ...char1, equippedArtifacts: { ...char1.equippedArtifacts, [slotKey]: art1.id } })\r\n    if (char2)\r\n      this.saveChar(char2.key, { ...char2, equippedArtifacts: { ...char2.equippedArtifacts, [slotKey]: art2?.id ?? \"\" } })\r\n  }\r\n  setWeaponLocation(weaponId: string, newCharKey: CharacterKey) {\r\n    const weapon1 = this.weapons.get(weaponId)\r\n    const char1 = this.chars.get(newCharKey)\r\n    if (!weapon1 || !char1 || weapon1.location === newCharKey) return\r\n\r\n    const weapon2 = this.weapons.get(char1.equippedWeapon)!\r\n    const char2 = this.chars.get(weapon1.location)\r\n\r\n    // Currently weapon1 <-> char2 & weapon2 <-> char1\r\n    // Swap to weapon1 <-> char1 & weapon2 <-> char2\r\n\r\n    this.saveWeapon(weapon1.id, { ...weapon1, location: char1.key })\r\n    this.saveChar(char1.key, { ...char1, equippedWeapon: weapon1.id })\r\n\r\n    if (weapon2)\r\n      this.saveWeapon(weapon2.id, { ...weapon2, location: char2?.key ?? \"\" })\r\n    if (char2)\r\n      this.saveChar(char2.key, { ...char2, equippedWeapon: weapon2.id })\r\n  }\r\n  equipArtifacts(charKey: CharacterKey, newArts: StrictDict<SlotKey, string>) {\r\n    const char = this.chars.get(charKey)\r\n    if (!char) return\r\n\r\n    const oldArts = char.equippedArtifacts\r\n    for (const [slot, newArt] of Object.entries(newArts)) {\r\n      if (newArt) this.setArtLocation(newArt, charKey)\r\n      else if (oldArts[slot]) this.setArtLocation(oldArts[slot], \"\")\r\n    }\r\n  }\r\n\r\n  findDuplicates(editorArt: IArtifact): { duplicated: ICachedArtifact[], upgraded: ICachedArtifact[] } {\r\n    const { setKey, rarity, level, slotKey, mainStatKey, substats } = editorArt\r\n\r\n    const candidates = this._getArts().filter(candidate =>\r\n      setKey === candidate.setKey &&\r\n      rarity === candidate.rarity &&\r\n      slotKey === candidate.slotKey &&\r\n      mainStatKey === candidate.mainStatKey &&\r\n      level >= candidate.level &&\r\n      substats.every((substat, i) =>\r\n        !candidate.substats[i].key || // Candidate doesn't have anything on this slot\r\n        (substat.key === candidate.substats[i].key && // Or editor simply has better substat\r\n          substat.value >= candidate.substats[i].value)\r\n      )\r\n    )\r\n\r\n    // Strictly upgraded artifact\r\n    const upgraded = candidates.filter(candidate =>\r\n      level > candidate.level &&\r\n      (Math.floor(level / 4) === Math.floor(candidate.level / 4) ? // Check for extra rolls\r\n        substats.every((substat, i) => // Has no extra roll\r\n          substat.key === candidate.substats[i].key && substat.value === candidate.substats[i].value) :\r\n        substats.some((substat, i) => // Has extra rolls\r\n          candidate.substats[i].key ?\r\n            substat.value > candidate.substats[i].value : // Extra roll to existing substat\r\n            substat.key // Extra roll to new substat\r\n        )\r\n      )\r\n    )\r\n    // Strictly duplicated artifact\r\n    const duplicated = candidates.filter(candidate =>\r\n      level === candidate.level &&\r\n      substats.every(substat =>\r\n        !substat.key ||  // Empty slot\r\n        candidate.substats.some(candidateSubstat =>\r\n          substat.key === candidateSubstat.key && // Or same slot\r\n          substat.value === candidateSubstat.value\r\n        )))\r\n    return { duplicated, upgraded }\r\n  }\r\n\r\n  findDuplicateWeapons(weapon: IWeapon): { duplicated: ICachedWeapon[], upgraded: ICachedWeapon[] } {\r\n    const { key, level, ascension, refinement } = weapon\r\n\r\n    const candidates = this._getWeapons().filter(candidate =>\r\n      key === candidate.key &&\r\n      level >= candidate.level &&\r\n      ascension >= candidate.ascension &&\r\n      refinement >= candidate.refinement\r\n    )\r\n\r\n    // Strictly upgraded weapons\r\n    const upgraded = candidates.filter(candidate =>\r\n      level > candidate.level ||\r\n      ascension > candidate.ascension ||\r\n      refinement > candidate.refinement\r\n    )\r\n    // Strictly duplicated weapons\r\n    const duplicated = candidates.filter(candidate =>\r\n      level === candidate.level &&\r\n      ascension === candidate.ascension &&\r\n      refinement === candidate.refinement\r\n    )\r\n    return { duplicated, upgraded }\r\n  }\r\n}\r\n\r\n/// Get a random integer (converted to string) that is not in `keys`\r\nfunction generateRandomArtID(keys: Set<string>): string {\r\n  let candidate = \"\"\r\n  do {\r\n    candidate = `artifact_${getRandomInt(1, 2 * (keys.size + 1))}`\r\n  } while (keys.has(candidate))\r\n  return candidate\r\n}\r\n\r\n/// Get a random integer (converted to string) that is not in `keys`\r\nfunction generateRandomWeaponID(keys: Set<string>): string {\r\n  let candidate = \"\"\r\n  do {\r\n    candidate = `weapon_${getRandomInt(1, 2 * (keys.size + 1))}`\r\n  } while (keys.has(candidate))\r\n  return candidate\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg | undefined) => void\r\n\r\nexport const database = new ArtCharDatabase(dbStorage)\r\nexport const DatabaseContext = createContext(database)\r\n","import { ElementKey } from \"../Types/consts\"\r\n\r\nconst ElementalData: StrictDict<ElementKey | \"physical\", { name: string }> = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { ArtifactRarity, ArtifactSetKey, CharacterKey, ElementKey, SetNum, SlotKey } from \"./consts\";\r\nimport { BonusStats, BasicStats } from \"./stats\";\r\nimport { IConditionals } from \"./IConditional\";\r\nimport { DocumentSection } from \"./character\";\r\n\r\nexport type IArtifactSheets = StrictDict<ArtifactSetKey, IArtifactSheet>\r\n\r\nexport interface IArtifactSheet {\r\n  name: string, // only to stored the English name for OCR, otherwise, should come from localization pipeline\r\n  rarity: readonly ArtifactRarity[],\r\n  icons: Dict<SlotKey, string>,\r\n  conditionals?: IConditionals,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  stats?: BonusStats | ((stats: BasicStats) => BonusStats)\r\n  document?: DocumentSection[],\r\n}\r\n\r\nexport interface IArtifact {\r\n  setKey: ArtifactSetKey,\r\n  slotKey: SlotKey,\r\n  level: number,\r\n  rarity: ArtifactRarity,\r\n  mainStatKey: MainStatKey,\r\n  location: CharacterKey | \"\",\r\n  lock: boolean,\r\n  substats: ISubstat[],\r\n\r\n  // GO-specific\r\n  exclude: boolean,\r\n}\r\nexport interface ICachedArtifact extends IArtifact {\r\n  id: string,\r\n  mainStatVal: number,\r\n  substats: ICachedSubstat[],\r\n}\r\n\r\nexport interface ISubstat {\r\n  key: SubstatKey | \"\"\r\n  value: number\r\n}\r\nexport interface ICachedSubstat extends ISubstat {\r\n  rolls: number[],\r\n  efficiency: number,\r\n}\r\nexport type StatKey = MainStatKey | SubstatKey | ReactionDMGStatKey | MoveDMGStatKey | ElementalRESStatKey | ElementalEnemyRESStatKey | SpecializedStatKey\r\n\r\ntype ElementalRESStatKey = `${ElementKey | \"physical\"}_res_`\r\ntype ElementalEnemyRESStatKey = `${ElementKey | \"physical\"}_enemyRes_`\r\ntype ReactionDMGStatKey = \"overloaded_dmg_\" | \"shattered_dmg_\" | \"electrocharged_dmg_\" | \"superconduct_dmg_\" | \"swirl_dmg_\" | \"vaporize_dmg_\" | \"melt_dmg_\" | \"burning_dmg_\" | \"crystalize_dmg_\"\r\ntype MoveDMGStatKey = \"normal_dmg_\" | \"charged_dmg_\" | \"skill_dmg_\" | \"burst_dmg_\"\r\n\r\nexport const allMainStatKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"heal_\"] as const\r\nexport const allSubstats = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"def\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\",] as const\r\n\r\n// TODO: Check if these actually applies\r\ntype SpecializedStatKey = \"normal_critRate_\" | \"charged_critRate_\" | \"plunging_dmg_\" | \"shield_\" | \"enemyDEFRed_\" | \"skillCDRed_\" | \"incHeal_\" | \"weakspotDMG_\" | \"dmg_\" | \"moveSPD_\" | \"staminaDec_\" | \"atkSPD_\" | \"cdRed_\" | \"finalHP\" | \"finalATK\" | \"finalDEF\"\r\n\r\nexport type MainStatKey = typeof allMainStatKeys[number]\r\nexport type SubstatKey = typeof allSubstats[number]\r\n","import { BuildSetting } from \"../Types/Build\";\r\n\r\nexport const initialBuildSettings = (): BuildSetting => ({\r\n  setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n  statFilters: {},\r\n  mainStatKeys: { sands: [], goblet: [], circlet: [] },\r\n  optimizationTarget: \"finalATK\",\r\n  mainStatAssumptionLevel: 0,\r\n  useExcludedArts: false,\r\n  useEquippedArts: false,\r\n  builds: [],\r\n  buildDate: 0,\r\n  maxBuildsToShow: 5\r\n})","import { FormulaItem, IBaseStat } from './Types/character';\r\nimport { BonusStats, ICalculatedStats, Modifier } from './Types/stats';\r\nimport { resolve } from './Util/KeyPathUtil';\r\nimport { objPathValue } from './Util/Util';\r\n\r\nexport const formulaImport = import('./Data/formula').then(imp => {\r\n  Formula.formulas = imp.default\r\n  return imp.default\r\n})\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | object | undefined> => formulaImport.then(formulas => objPathValue(formulas, keys))\r\n  static computeModifier(stat: IBaseStat, modifier: Modifier | undefined): (s: ICalculatedStats) => BonusStats {\r\n    if (!modifier) return () => ({})\r\n\r\n    // Keep objs separate here, so that it won't need to be recomputed when the modifier is triggered\r\n    const objs = Object.entries(modifier).map(([key, formulas]) =>\r\n      [key, formulas.map(path => Formula.getCurrent(path, stat)[0])] as [string, ((s: ICalculatedStats) => number)[]])\r\n\r\n    return s => Object.fromEntries(objs.map(([key, formulas]) =>\r\n      [key, formulas.reduce((a, formula) => a + formula(s), 0)]))\r\n  }\r\n  static getCurrent(path: string[], stat: IBaseStat): FormulaItem {\r\n    return resolve<any, (stat: IBaseStat) => FormulaItem>(Formula.formulas, path)(stat)\r\n  }\r\n}\r\n","import { MainStatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactSubstatRollData: StrictDict<Rarity, { low: number, high: number, numUpgrades: number }> = {\r\n  1: { low: 0, high: 0, numUpgrades: 1 },\r\n  2: { low: 0, high: 1, numUpgrades: 2 },\r\n  3: { low: 1, high: 2, numUpgrades: 3 },\r\n  4: { low: 2, high: 3, numUpgrades: 4 },\r\n  5: { low: 3, high: 4, numUpgrades: 5 }\r\n};\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: readonly MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatRollData as ArtifactStarsData,\r\n};\r\n","import { ArtifactSlotsData, ArtifactStarsData } from '../Data/ArtifactData';\r\nimport { clampPercent, deepClone, evalIfFunc, objectFromKeyMap } from '../Util/Util';\r\nimport { allSubstats, ICachedArtifact, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, allRarities, ArtifactRarity } from '../Types/consts';\r\nimport { BonusStats, ICalculatedStats } from '../Types/stats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\nimport { ArtifactSetEffects } from '../Types/Build';\r\nimport { mergeStats } from '../Util/StatUtil';\r\nimport ArtifactMainStatsData from './artifact_main_gen.json'\r\nimport ArtifactSubstatsData from './artifact_sub_gen.json'\r\nimport ArtifactSubstatLookupTable from './artifact_sub_rolls_gen.json'\r\nimport { valueString } from '../Util/UIUtil';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey): string =>\r\n    ArtifactSlotsData[slotKey].name\r\n  static slotMainStats = (slotKey: SlotKey): readonly MainStatKey[] =>\r\n    ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): ArtifactSetEffects => {\r\n    const result: ArtifactSetEffects = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      const setEffect: Dict<SetNum, BonusStats> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, entry]) => {\r\n        const setStats = evalIfFunc(entry.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      mergeStats(result[setKey][setNumKey], condStats)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: ICachedArtifact[]) =>\r\n    objectFromKeyMap(allSlotKeys, slotKey => databaseObj.filter(art => art.slotKey === slotKey))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey): readonly number[] => {\r\n    if (statKey.endsWith('_')) // TODO: % CONVERSION\r\n      return ArtifactMainStatsData[numStar][statKey].map(k => k * 100)\r\n    return ArtifactMainStatsData[numStar][statKey]\r\n  }\r\n  static mainStatValue = (key: MainStatKey, rarity: Rarity, level: number): number =>\r\n    Artifact.mainStatValues(rarity, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } =>\r\n    ArtifactStarsData[rarity]\r\n\r\n  static maxSubstatValues = (substatKey: SubstatKey, rarity = maxStar): number => {\r\n    if (substatKey.endsWith(\"_\")) // TODO: % CONVERSION\r\n      return Math.max(...ArtifactSubstatsData[rarity][substatKey]) * 100\r\n    return Math.max(...ArtifactSubstatsData[rarity][substatKey])\r\n  }\r\n\r\n  static maxSubstatRollEfficiency = objectFromKeyMap(allRarities,\r\n    rarity => 100 * Math.max(...allSubstats.map(substat =>\r\n      Artifact.maxSubstatValues(substat, rarity) /\r\n      Artifact.maxSubstatValues(substat, maxStar))))\r\n  static getSubstatKeys = (): readonly SubstatKey[] =>\r\n    allSubstats\r\n  static totalPossibleRolls = (rarity: Rarity): number =>\r\n    ArtifactStarsData[rarity].high + ArtifactStarsData[rarity].numUpgrades\r\n  static rollsRemaining = (level: number, rarity: Rarity) =>\r\n    Math.ceil((rarity * 4 - level) / 4)\r\n  static getSubstatRollData = (substatKey: SubstatKey, rarity: Rarity) => {\r\n    if (substatKey.endsWith(\"_\")) // TODO: % CONVERSION\r\n      return ArtifactSubstatsData[rarity][substatKey].map(v => v * 100)\r\n    return ArtifactSubstatsData[rarity][substatKey]\r\n  }\r\n\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, rarity: ArtifactRarity): number[][] => {\r\n    const rollData = Artifact.getSubstatRollData(substatKey, rarity)\r\n    const table = ArtifactSubstatLookupTable[rarity][substatKey]\r\n    const lookupValue = valueString(substatValue, substatKey.endsWith(\"_\") ? \"%\" : \"\")\r\n    return table[lookupValue]?.map(roll => roll.map(i => rollData[i])) ?? []\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static getArtifactEfficiency(artifact: ICachedArtifact, filter: Set<SubstatKey>): { currentEfficiency: number, maxEfficiency: number } {\r\n    const { substats, rarity, level } = artifact\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    const totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    const current = substats.filter(({ key }) => key && filter.has(key)).reduce((sum, { rolls, efficiency }) => sum + ((efficiency ?? 0) * (rolls?.length ?? 0)), 0)\r\n\r\n    const rollsRemaining = Artifact.rollsRemaining(level, rarity);\r\n    const emptySlotCount = substats.filter(s => !s.key).length\r\n    const matchedSlotCount = substats.filter(s => s.key && filter.has(s.key)).length\r\n    const unusedFilterCount = filter.size - matchedSlotCount\r\n    let maximum\r\n    if (emptySlotCount && unusedFilterCount) maximum = current + Artifact.maxSubstatRollEfficiency[rarity] * rollsRemaining // Rolls into good empty slot\r\n    else if (matchedSlotCount) maximum = current + Artifact.maxSubstatRollEfficiency[rarity] * (rollsRemaining - emptySlotCount) // Rolls into existing matched slot\r\n    else maximum = current // No possible roll\r\n\r\n    const currentEfficiency = current / totalRolls\r\n    const maxEfficiency = maximum / totalRolls\r\n    return { currentEfficiency, maxEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, ICachedArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    const setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}\r\n","import { Trans, useTranslation } from \"react-i18next\"\r\nconst components = {\r\n  anemo: <span className=\"text-anemo\" />,\r\n  geo: <span className=\"text-geo\" />,\r\n  cryo: <span className=\"text-cryo\" />,\r\n  hydro: <span className=\"text-hydro\" />,\r\n  pyro: <span className=\"text-pyro\" />,\r\n  electro: <span className=\"text-electro\" />,\r\n}\r\n\r\nexport function Translate({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  const textObj = values ? t(textKey, values, { returnObjects: true }) as any : t(textKey, { returnObjects: true }) as any\r\n  if (typeof textObj === \"string\") return children ? <Trans i18nKey={textKey} t={t} components={components} values={values} >{children}</Trans> : <Trans i18nKey={textKey} t={t} components={components} values={values} />\r\n  return <T key18={textKey} obj={textObj} t={t} values={values} />\r\n}\r\n/**this is used cause the `components` prop mess with tag interpolation. */\r\nexport function TransWrapper({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  return <Trans i18nKey={textKey} t={t} values={values} >{children}</Trans>\r\n}\r\nfunction Para({ children }: { children?: JSX.Element }) {\r\n  return <p className=\"mb-0\">{children}</p>\r\n}\r\n\r\nfunction T({ key18, obj, li, t, values }: { key18: string, obj: any, li?: boolean, t, values?: any }) {\r\n  if (typeof obj === \"string\") return <Trans i18nKey={key18} components={components} parent={Para} t={t} values={values} />\r\n  if (Array.isArray(obj))\r\n    return <ul className=\"mb-2\">\r\n      <T key18={key18} obj={{ ...obj }} li t={t} values={values} />\r\n    </ul>\r\n  return Object.entries(obj).map(([key, val]) => {\r\n    if (val === \"<br/>\") return <div key={key as any} className=\"mb-2\" />\r\n\r\n    if (typeof val === \"object\") return <T key={key as any} key18={`${key18}.${key as any}`} obj={val} t={t} values={values} />\r\n    if (typeof val === \"string\") {\r\n      const trans = <Trans key={key as any} i18nKey={`${key18}.${key}`} components={components} parent={Para} t={t} values={values} />\r\n      return li ? <li key={key as any}>{trans}</li> : trans\r\n    }\r\n    return null\r\n  }) as any\r\n}","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined, dependencies: any[]): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>(undefined);\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => {\r\n      pending = false\r\n      setRes(undefined)\r\n    }\r\n  }, dependencies)// eslint-disable-line react-hooks/exhaustive-deps\r\n  return res\r\n}\r\n","import { createContext } from \"react\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport { StatKey, ICachedArtifact, SubstatKey } from \"../Types/artifact\"\r\nimport { ArtifactSetEffects, ArtifactsBySlot, SetFilter } from \"../Types/Build\"\r\nimport { ArtifactSetKey, ElementKey, SetNum, SlotKey } from \"../Types/consts\"\r\nimport { BasicStats, BonusStats, ICalculatedStats } from \"../Types/stats\"\r\nimport { mergeStats } from \"../Util/StatUtil\"\r\nimport { deepClone } from \"../Util/Util\"\r\n\r\ntype buildContextObj = {\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats,\r\n  compareBuild?: boolean,\r\n  setCompareBuild?: ((boolean) => void),\r\n}\r\nexport const buildContext = createContext({\r\n  newBuild: undefined,\r\n  equippedBuild: undefined,\r\n  compareBuild: false,\r\n  setCompareBuild: undefined,\r\n} as buildContextObj)\r\n\r\nexport const maxBuildsToShowList = [1, 2, 3, 4, 5, 8, 10] as const\r\nexport const maxBuildsToShowDefault = 5\r\n\r\n/**\r\n * Remove artifacts that can never be used in optimized builds when trying to optimize for top `maxBuildsToShow` builds\r\n * @param {artifact[]} artifacts - List of artifacts of the same slot\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - The list of the set effects\r\n * @param {Set.<statKey>} significantStats - A set of stats that pruning needs to take into consideration\r\n * @param {bool} ascending - Whether the sorting is ascending or descending\r\n * @param {Set.<setKey>} alwaysAccepted - The list of artifact sets that are always included\r\n */\r\nexport function pruneArtifacts(artifacts: ICachedArtifact[], artifactSetEffects: ArtifactSetEffects, significantStats: Set<StatKey>, maxBuildsToShow: number = 1, alwaysAccepted: Set<ArtifactSetKey> = new Set()): ICachedArtifact[] {\r\n  function shouldKeepFirst(first: Dict<StatKey, number>, second: Dict<StatKey, number>, preferFirst: boolean) {\r\n    let firstBetter = Object.entries(first).some(([k, v]) => !isFinite(v) || v > (second[k] ?? 0))\r\n    let secondBetter = Object.entries(second).some(([k, v]) => !isFinite(v) || v > (first[k] ?? 0))\r\n    // Keep if first is strictly better, uncomparable, or equal + prefer first.\r\n    // That is, return false if second is strictly better, or equal + NOT prefer first\r\n    return firstBetter || (!secondBetter && preferFirst)\r\n  }\r\n\r\n  // Prune unused set effects. Sets with no relevant effects are regrouped to \"other\"\r\n  const prunedSetEffects: PrunedArtifactSetEffects = { \"other\": {} }\r\n  Object.entries(artifactSetEffects).forEach(([set, effect]) => {\r\n    Object.entries(effect).forEach(([num, item]) => {\r\n      const effects = Object.entries(item).filter(([key]) => significantStats.has(key as StatKey))\r\n      if (effects.length > 0) {\r\n        prunedSetEffects[set] = prunedSetEffects[set] ?? {}\r\n        prunedSetEffects[set]![num] = Object.fromEntries(effects)\r\n      }\r\n      const modifiers = item.modifiers\r\n      if (modifiers) {\r\n        // Modifiers are treated as infinite stats\r\n        prunedSetEffects[set] = prunedSetEffects[set] ?? {}\r\n        prunedSetEffects[set]![num] = prunedSetEffects[set]![num] ?? {}\r\n\r\n        Object.keys(modifiers)\r\n          .filter(key => significantStats.has(key as StatKey))\r\n          .forEach(key =>\r\n            prunedSetEffects[set]![num]![key] = Infinity\r\n          )\r\n      }\r\n    })\r\n  })\r\n\r\n  // array of artifacts, artifact stats, and set (may be \"other\")\r\n  let tmp: { artifact: ICachedArtifact, numberOfBetterSameSetArtifacts: number, stats: Dict<StatKey, number>, set: ArtifactSetKey | \"other\" }[] = artifacts.map(artifact => {\r\n    const stats: Dict<StatKey, number> = {}, set: ArtifactSetKey | \"other\" = (artifact.setKey in prunedSetEffects || alwaysAccepted.has(artifact.setKey)) ? artifact.setKey : \"other\"\r\n    if (significantStats.has(artifact.mainStatKey as any))\r\n      stats[artifact.mainStatKey] = artifact.mainStatVal!\r\n    for (const { key, value } of artifact.substats)\r\n      if (key && significantStats.has(key as SubstatKey))\r\n        stats[key] = (stats[key] ?? 0) + value\r\n    for (const key in stats)\r\n      if (key.endsWith(\"enemyRes_\"))\r\n        stats[key as StatKey] = -stats[key as StatKey]!\r\n    return { artifact, numberOfBetterSameSetArtifacts: 0, stats, set }\r\n  })\r\n\r\n  // Compare artifacts' base stats from the same set\r\n  tmp = tmp.filter((first) => {\r\n    const { artifact: candidate, stats: candidateStats, set: candidateSet } = first\r\n    return tmp.every(({ artifact: other, stats: otherStats, set: otherSet }) => {\r\n      if (candidateSet !== otherSet || shouldKeepFirst(candidateStats, otherStats, candidate.id! <= other.id!)) {\r\n        return true\r\n      } else {\r\n        first.numberOfBetterSameSetArtifacts += 1\r\n        return first.numberOfBetterSameSetArtifacts < maxBuildsToShow\r\n      }\r\n    })\r\n  })\r\n\r\n  // Cross-check with different sets\r\n  tmp = tmp.filter(({ artifact: candidate, stats: candidateStats, set: candidateSet }) => {\r\n    if (alwaysAccepted.has(candidate.setKey))\r\n      return true\r\n    // Possible \"additional stats\" if a build equips `candidate` on an empty slot.\r\n    let possibleStats = [...Object.values(prunedSetEffects[candidateSet]!), {}].map(c => {\r\n      const current: BonusStats = { ...candidateStats }\r\n      mergeStats(current, c)\r\n      return { stat: current, numberOfBetterArtifacts: 0 }\r\n    })\r\n    return tmp.every(({ artifact: other, stats: otherStats, set: otherSet, numberOfBetterSameSetArtifacts }) => {\r\n      if (candidateSet === otherSet) return true // Already checked same-set\r\n\r\n      // Remove possibilities that shouldn't be kept\r\n      possibleStats = possibleStats.filter(current => {\r\n        if (shouldKeepFirst(current.stat, otherStats, candidate.id! <= other.id!)) {\r\n          return true\r\n        } else {\r\n          current.numberOfBetterArtifacts += 1\r\n          return current.numberOfBetterArtifacts + numberOfBetterSameSetArtifacts < maxBuildsToShow\r\n        }\r\n      })\r\n      return possibleStats.length !== 0\r\n    })\r\n  })\r\n\r\n  return tmp.map(tmp => tmp.artifact)\r\n}\r\n\r\n/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet: Dict<ArtifactSetKey, ICachedArtifact[]> = {}\r\n    for (const artifact of (artifactsBySlot[slotKey] ?? [])) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey]!.push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet['null']) artifactsBySet['null'].push(artifact)\r\n        else artifactsBySet['null'] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu: ArtifactsBySlot = {}, result: ArtifactsBySlot[] = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot: ArtifactsBySlot, setFilters: SetFilter) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1]!.length, 1)\r\n    , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats: ICalculatedStats, artifactsBySlot: ArtifactsBySlot, artifactSetEffects: ArtifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount: Dict<ArtifactSetKey, SetNum> = {}, accu = {}\r\n  function slotPerm(index: number, stats: ICalculatedStats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    for (const artifact of artifactsBySlot[slotKey] ?? []) {\r\n      const newStats = { ...stats }\r\n\r\n      // Hand-pick costly copying\r\n      if (newStats.modifiers) newStats.modifiers = deepClone(newStats.modifiers)\r\n\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey]! -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey: SlotKey, art: ICachedArtifact, setCount: Dict<ArtifactSetKey, SetNum>, accu: Dict<SlotKey, ICachedArtifact>, stats: ICalculatedStats, artifactSetEffects: ArtifactSetEffects) {\r\n  const setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1 as SetNum\r\n\r\n  // Add artifact stats\r\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal!\r\n  art.substats.forEach((substat) => {\r\n    if (substat?.key in stats) stats[substat.key] += substat.value\r\n  })\r\n\r\n  // Add set effects\r\n  const setEffect = artifactSetEffects[setKey]?.[setCount[setKey]!]\r\n  setEffect && mergeStats(stats, setEffect) // TODO: This may slow down the computation\r\n}\r\n\r\n/**\r\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\r\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\r\n  * @param {*} stats - The calculated stats\r\n  * @param {*} overwriteElement - Override the hit to be the character's elemental, that is not part of infusion.\r\n  */\r\nexport function getTalentStatKey(skillKey: string, stats: BasicStats, overwriteElement?: ElementKey | \"physical\") {\r\n  const { hitMode = \"\", infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if ((Object.keys(ElementalData) as any).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\r\n  if (!overwriteElement && weaponType === \"catalyst\") overwriteElement = characterEle\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || overwriteElement) {\r\n    if (reactionMode && reactionMode.startsWith(overwriteElement || characterEle)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n    return `${overwriteElement || characterEle}_${skillKey}_${hitMode}`\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) return `${reactionMode}_${skillKey}_${hitMode}`\r\n\r\n  return `${eleKey}_${skillKey}_${hitMode}`\r\n}\r\n\r\nexport function getTalentStatKeyVariant(skillKey: string, stats: BasicStats, overwriteElement: ElementKey | \"physical\" | undefined | \"\" = \"\") {\r\n  if ((Object.keys(ElementalData) as any).includes(skillKey)) return skillKey//elemental DMG\r\n  const { infusionAura = \"\", infusionSelf = \"\", reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (!overwriteElement && weaponType === \"catalyst\") overwriteElement = characterEle\r\n\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || overwriteElement) {\r\n    if (reactionMode && reactionMode.startsWith(overwriteElement || characterEle)) {\r\n      if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n      else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n    }\r\n    return overwriteElement || characterEle\r\n  }\r\n  //auto attacks\r\n  let eleKey = \"physical\"\r\n  if (infusionSelf) eleKey = infusionSelf\r\n  else if (infusionAura) eleKey = infusionAura\r\n  if (reactionMode && reactionMode.startsWith(eleKey)) {\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode)) return \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode)) return \"melt\"\r\n  }\r\n  return eleKey\r\n}\r\n\r\nexport type PrunedArtifactSetEffects = Dict<ArtifactSetKey | \"other\", Dict<SetNum, Dict<StatKey, number>>>\r\n","import StatIcon from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\n\r\nexport default function statsToFields(statVals, stats = {}): IFieldDisplay[] {\r\n  return Object.entries(statVals).filter(([statKey]) => statKey !== \"modifiers\").map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      default:\r\n        return {\r\n          text: <span>{StatIcon[statKey as any]} {Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal as number,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => addConditional(sheets, \"weapon\")), //attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => addConditional(sheets, \"artifact\")) //attach artifact conditionals to Conditional\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow?.(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n// Probably a way to auto-populate this.\r\nexport const languageCodeList = [\r\n  \"chs\",\r\n  \"cht\",\r\n  \"de\",\r\n  \"en\",\r\n  \"es\",\r\n  \"fr\",\r\n  \"id\",\r\n  \"ja\",\r\n  \"ko\",\r\n  \"pt\",\r\n  \"ru\",\r\n  \"th\",\r\n  \"vi\"\r\n];\r\n\r\n/**\r\n * @see: https://www.i18next.com/translation-function/essentials\r\n * @see: https://react.i18next.com/latest/using-with-hooks\r\n */\r\ni18n\r\n  // load translation using http ->\r\n  // see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // Configure localization.\r\n  .init({\r\n    debug: process.env.NODE_ENV === \"development\",\r\n    // Use English strings by default, if the current language does not include\r\n    // the specified string.\r\n    fallbackLng: 'en',\r\n    // fallbackLng: 'dev', // Switch to this to force the fallback value on missing strings.\r\n\r\n    // List all translation namespaces.\r\n    ns: [\r\n      \"artifact\",\r\n      \"home\",\r\n      \"languages\",\r\n      \"settings\",\r\n      \"ui\",\r\n    ],\r\n    // Specify the default namespace.\r\n    defaultNS: \"ui\",\r\n\r\n    // Only use the language code, skipping the region code.\r\n    // For example, en-US becomes simply en.\r\n    load: 'languageOnly',\r\n\r\n    // allow an empty value to count as invalid (by default is true)\r\n    returnEmptyString: false,\r\n\r\n    backend: process.env.NODE_ENV === \"development\" ? {\r\n      // Path to load localization data from.\r\n      loadPath: 'genshin-optimizer/locales/{{lng}}/{{ns}}.json',\r\n    } : {\r\n      // Path to load localization data from.\r\n      loadPath: 'locales/{{lng}}/{{ns}}.json',\r\n    },\r\n    interpolation: {\r\n      escapeValue: false,//react does interlopation already\r\n    }\r\n  });\r\n\r\nexport default i18n;","import { Image } from \"react-bootstrap\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { IArtifactSheet, SetEffectEntry } from \"../Types/artifact\";\r\nimport { allArtifactSets, allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey } from \"../Types/consts\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { BonusStats, ICalculatedStats } from \"../Types/stats\";\r\nimport { mergeStats } from \"../Util/StatUtil\";\r\nimport { deepClone, evalIfFunc, objectFromKeyMap } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value, set)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = objectFromKeyMap(allArtifactSets, set => artifactImport.then(sheets => sheets[set]))\r\n\r\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  readonly key: ArtifactSetKey\r\n  constructor(data: IArtifactSheet, setKey: ArtifactSetKey) {\r\n    this.data = data\r\n    this.key = setKey\r\n  }\r\n\r\n  get name() { return tr(this.key, \"setName\") }\r\n  get nameWithIcon() {\r\n    const slotKey = this.slots[0]\r\n    return <span><Image src={this.slotIcons[slotKey]} className=\"inline-icon\" /> {tr(this.key, \"setName\")}</span>\r\n  }\r\n\r\n  //This is only for OCR, because we only scan in english right now.\r\n  get nameRaw(): string { return this.data.name }\r\n  get rarity(): readonly ArtifactRarity[] { return this.data.rarity }\r\n  get slots(): SlotKey[] {\r\n    switch (this.key) {\r\n      case \"PrayersForDestiny\":\r\n      case \"PrayersForIllumination\":\r\n      case \"PrayersForWisdom\":\r\n      case \"PrayersToSpringtime\": return [\"circlet\"]\r\n      default: return deepClone(allSlotKeys) as any\r\n    }\r\n  }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\r\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): BonusStats {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\r\n  setEffectDocument = (setNum: SetNum) => this.data.setEffects[setNum]?.document\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<ArtifactRarity, ArtifactSetKey[]> {\r\n    const grouped: Dict<ArtifactRarity, ArtifactSetKey[]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as ArtifactRarity\r\n      if (grouped[rarity]) grouped[rarity]!.push(key)\r\n      else grouped[rarity] = [key]\r\n    })\r\n    return grouped\r\n  }\r\n\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: ArtifactRarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): BonusStats {\r\n    const artifactSetEffect: BonusStats = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && mergeStats(artifactSetEffect, evalIfFunc(value.stats, charStats))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import { faDiceD20 } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAnemo, faAtk, faCdReductionPrimary, faCdReductionSecondary, faCritRate, faCryo, faDef, faDendro, faElectro, faElementalMastery, faEnergyRechargePrimary, faEnergyRechargeSecondary, faGeo, faHealingBonus, faHpPrimary, faHpSecondary, faHydro, faMaxStamina, faPhysicalDmgBonus, faPyro, faShieldStrength } from '../faIcons'\r\nimport { objectFromKeyMap } from '../Util/Util'\r\n\r\nexport function HPIcon() {\r\n\treturn <span className=\"fa-layers \">\r\n\t\t<FontAwesomeIcon icon={faHpPrimary as any} />\r\n\t\t<FontAwesomeIcon icon={faHpSecondary as any} style={{ color: \"grey\" }} />\r\n\t</span>\r\n}\r\n\r\nexport function CdRedIcon() {\r\n\treturn <span className=\"fa-layers \">\r\n\t\t<FontAwesomeIcon icon={faCdReductionPrimary as any} />\r\n\t\t<FontAwesomeIcon icon={faCdReductionSecondary as any} style={{ color: \"grey\" }} />\r\n\t</span>\r\n}\r\n\r\nexport function EnerRechIcon() {\r\n\treturn <span className=\"fa-layers \">\r\n\t\t<FontAwesomeIcon icon={faEnergyRechargePrimary as any} />\r\n\t\t<FontAwesomeIcon icon={faEnergyRechargeSecondary as any} style={{ color: \"grey\" }} />\r\n\t</span>\r\n}\r\nexport const uncoloredEleIcons = {\r\n\tanemo: <FontAwesomeIcon icon={faAnemo as any} />,\r\n\tgeo: <FontAwesomeIcon icon={faGeo as any} />,\r\n\telectro: <FontAwesomeIcon icon={faElectro as any} />,\r\n\thydro: <FontAwesomeIcon icon={faHydro as any} />,\r\n\tpyro: <FontAwesomeIcon icon={faPyro as any} />,\r\n\tcryo: <FontAwesomeIcon icon={faCryo as any} />,\r\n\tdendro: <FontAwesomeIcon icon={faDendro as any} />,\r\n\tphysical: <FontAwesomeIcon icon={faPhysicalDmgBonus as any} />,\r\n} as const\r\nconst coloredEleIcon = objectFromKeyMap(Object.keys(uncoloredEleIcons), key => <span className={`text-${key}`}>{uncoloredEleIcons[key]}</span>)\r\n\r\nconst StatIcon = {\r\n\tcharacterHP: <HPIcon />,\r\n\tfinalHP: <HPIcon />,\r\n\thp_: <HPIcon />,\r\n\thp: <HPIcon />,\r\n\r\n\tbaseATK: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tcharacterATK: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tfinalATK: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tatk_: <FontAwesomeIcon icon={faAtk as any} />,\r\n\tatk: <FontAwesomeIcon icon={faAtk as any} />,\r\n\r\n\tcharacterDEF: <FontAwesomeIcon icon={faDef as any} />,\r\n\tfinalDEF: <FontAwesomeIcon icon={faDef as any} />,\r\n\tdef_: <FontAwesomeIcon icon={faDef as any} />,\r\n\tdef: <FontAwesomeIcon icon={faDef as any} />,\r\n\r\n\teleMas: <FontAwesomeIcon icon={faElementalMastery as any} />,\r\n\tcritRate_: <FontAwesomeIcon icon={faCritRate as any} />,\r\n\tcritDMG_: <FontAwesomeIcon icon={faDiceD20 as any} />,\r\n\tenerRech_: <EnerRechIcon />,\r\n\theal_: <FontAwesomeIcon icon={faHealingBonus as any} />,\r\n\r\n\tcdRed_: <CdRedIcon />,\r\n\r\n\tshield_: <FontAwesomeIcon icon={faShieldStrength as any} />,\r\n\tstamina: <FontAwesomeIcon icon={faMaxStamina as any} />,\r\n\r\n\t...coloredEleIcon,\r\n\t...Object.fromEntries(Object.keys(coloredEleIcon).flatMap(ele => [[`${ele}_dmg_`, coloredEleIcon[ele]], [`${ele}_res_`, coloredEleIcon[ele]]]))\r\n}\r\n\r\nexport default StatIcon","import { ICharacterSheet, TalentSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey } from \"../Types/consts\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { evalIfFunc, objectFromKeyMap } from \"../Util/Util\";\r\nimport { CharacterExpCurveData } from \"pipeline\";\r\nimport expCurveJSON from './expCurve_gen.json'\r\nimport Stat from '../Stat'\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nconst expCurve = expCurveJSON as CharacterExpCurveData\r\n\r\nexport const charImport = import('../Data/Characters').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return objectFromKeyMap(Object.keys(imp.default), charKey => new CharacterSheet(imp.default[charKey]))\r\n})\r\n\r\nconst loadCharacterSheet = objectFromKeyMap(allCharacterKeys, set => charImport.then(sheets => sheets[set]))\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | \"\"): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get nameWIthIcon() { return <span><Image src={this.thumbImg} className=\"inline-icon\" /> {this.name}</span> }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return \"elementKey\" in this.sheet ? this.sheet.elementKey : undefined }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get isAutoElemental() { return this.sheet.weaponTypeKey === \"catalyst\" }\r\n  getBase = (statKey: \"hp\" | \"def\" | \"atk\", level = 1, ascensionLvl = 0) =>\r\n    this.sheet.baseStat[statKey] * (expCurve[this.sheet.baseStatCurve[statKey] as any])[level] + this.sheet.ascensions[ascensionLvl].props[statKey]\r\n  getSpecializedStat = (ascensionLvl = 0): string | undefined => Object.keys(this.sheet.ascensions[ascensionLvl].props).find(k => k !== \"hp\" && k !== \"def\" && k !== \"atk\")\r\n  getSpecializedStatVal = (ascensionLvl = 0): number => {\r\n    const statKey = this.getSpecializedStat(ascensionLvl)\r\n    if (!statKey) return 0\r\n    const value = this.sheet.ascensions[ascensionLvl].props[statKey] ?? 0\r\n    if (Stat.getStatUnit(statKey) === \"%\") return value * 100\r\n    return value\r\n  }\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (eleKey: ElementKey = \"anemo\"): TalentSheet | undefined => {\r\n    if (\"talent\" in this.sheet) return this.sheet.talent\r\n    else return this.sheet.talents[eleKey]\r\n  }\r\n  getTalentOfKey = (talentKey: string, eleKey: ElementKey = \"anemo\") => this.getTalent(eleKey)?.sheets[talentKey]\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalentOfKey(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats, eleKey: ElementKey = \"anemo\") => {\r\n    const talents = this.getTalent(eleKey)?.sheets\r\n    if (!talents) return []\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n}\r\n","export function KeyPath<Base, Value = Base>(prefix: string[] = []): PartialPath<Base, Value> {\r\n  const path = () => path.keys\r\n  path.keys = prefix\r\n\r\n  return new Proxy(path, {\r\n    get: (partial, symbol) => KeyPath([...partial.keys, symbol.toString()])\r\n  }) as any\r\n}\r\nexport function resolve<Base, Value>(base: Base, path: Path<Base, Value>): Value {\r\n  return path.reduce((current, key) => current?.[key], base as any)\r\n}\r\nexport function assign<Base, Value>(base: Base, path: Path<Base, Value>, value: Value) {\r\n  path.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, base as any)\r\n}\r\n\r\ntype PartialPath<Base, Value> = {\r\n  [key in keyof Value]: PartialPath<Base, Value[key]> & (() => Path<Base, Value>)\r\n}\r\n// eslint-disable-next-line\r\nexport type Path<Base, Value> = string[]","import { WeaponExpCurveData } from 'pipeline';\r\nimport { Translate } from '../Components/Translate';\r\nimport { ascensionMaxLevel } from '../Data/CharacterData';\r\nimport Stat from '../Stat';\r\nimport { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { ICachedWeapon, IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc, objectFromKeyMap } from '../Util/Util';\r\nimport expCurveJSON from './expCurve_gen.json';\r\nconst expCurve = expCurveJSON as WeaponExpCurveData\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return Object.fromEntries(Object.entries(imp.default).map(([weaponKey, value]) =>\r\n    [weaponKey, new WeaponSheet(weaponKey, value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>\r\n})\r\n\r\nconst loadWeaponSheet = objectFromKeyMap(allWeaponKeys, set => weaponImport.then(sheets => sheets[set]))\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  key: WeaponKey;\r\n  constructor(key: string, weaponSheet: IWeaponSheet) {\r\n    this.key = key as WeaponKey\r\n    this.sheet = weaponSheet\r\n  }\r\n  static get = (weaponKey: WeaponKey | \"\"): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICachedWeapon): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  //when there is no substat, assume there is no passive. \r\n  get passiveName() { return this.getSubStatKey() ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (stats: ICalculatedStats) => this.getSubStatKey() ? this.tr(`passiveDescription.${stats.weapon.refineIndex}`) : \"\"\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  stats = (build: ICalculatedStats): object | undefined => evalIfFunc(this.sheet.stats, build) || {}\r\n  get conditionals() { return this.sheet.conditionals }\r\n  get document() { return this.sheet.document }\r\n  getMainStatValue = (level = 1, ascension = 0) => {\r\n    const { type, base, curve } = this.sheet.mainStat\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatValue = (level = 1, ascension = 0) => {\r\n    if (!this.sheet.subStat) return 0\r\n    let { type, base, curve } = this.sheet.subStat\r\n    if (Stat.getStatUnit(type) === \"%\") base = base * 100\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatKey = () => this.sheet.subStat?.type ?? \"\"\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { faCirclet, faFlower, faGoblet, faPlume, faSands } from '../../faIcons'\r\nimport { SlotKey } from \"../../Types/consts\"\r\n\r\nconst SlotIcon: StrictDict<SlotKey, any> = {\r\n  flower: faFlower,\r\n  plume: faPlume,\r\n  sands: faSands,\r\n  goblet: faGoblet,\r\n  circlet: faCirclet\r\n}\r\n\r\nexport function artifactSlotIcon(slotKey: SlotKey) {\r\n  return <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n}\r\nexport default function SlotNameWithIcon({ slotKey }: { slotKey: SlotKey }) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  const icon = artifactSlotIcon(slotKey)\r\n  return <span>{icon} {t(`slotName.${slotKey}`)}</span>\r\n}","export function valueStringWithUnit(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return valueString(value, unit) + \"%\"\r\n    case \"eff\": return valueString(value, unit) + \"%\"\r\n    default: return valueString(value, unit)\r\n  }\r\n}\r\n\r\nexport function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1) // TODO: % conversion\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}\r\n","import { WeaponKey, WeaponTypeKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\n\r\nfunction defaultInitialWeaponKey(type: WeaponTypeKey): WeaponKey {\r\n  switch (type) {\r\n    case \"sword\": return \"DullBlade\"\r\n    case \"bow\": return \"HuntersBow\"\r\n    case \"claymore\": return \"WasterGreatsword\"\r\n    case \"polearm\": return \"BeginnersProtector\"\r\n    case \"catalyst\": return \"ApprenticesNotes\"\r\n    default: return \"DullBlade\"\r\n  }\r\n}\r\nexport const defaultInitialWeapon = (type: WeaponTypeKey): ICachedWeapon =>\r\n  initialWeapon(defaultInitialWeaponKey(type))\r\n\r\nexport const initialWeapon = (key: WeaponKey): ICachedWeapon => ({\r\n  id: \"\",\r\n  key,\r\n  level: 1,\r\n  ascension: 0,\r\n  refinement: 1,\r\n  location: \"\"\r\n})","import { Card, Spinner } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nexport default function LoadingCard() {\r\n  const { t, ready } = useTranslation(\"ui\", { useSuspense: false });\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n    <Card.Body>\r\n      <h3 className=\"text-center\">{ready ? <Trans t={t} i18nKey=\"ui:loading\" /> : \"Loading...\"}<Spinner animation=\"border\" variant=\"primary\" /></h3>\r\n    </Card.Body>\r\n  </Card>\r\n}","import { faDiscord, faPatreon, faPaypal } from '@fortawesome/free-brands-svg-icons';\r\nimport { faBook, faCalculator, faCog, faGavel, faIdCard, faTools } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ReactGA from 'react-ga';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { HashRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { version } from \"../package.json\";\r\nimport './App.scss';\r\nimport { artifactSlotIcon } from './Artifact/Component/SlotNameWIthIcon';\r\nimport './Assets/Image.scss';\r\nimport LoadingCard from './Components/LoadingCard';\r\nimport './Database/Database';\r\nimport './i18n';\r\nimport { LanguageDropdown } from './Settings/SettingsDisplay';\r\n\r\nconst Home = lazy(() => import('./Home/HomeDisplay'))\r\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\r\nconst CharacterDisplay = lazy(() => import('./Character/CharacterDisplay'))\r\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\r\nconst Planner = lazy(() => import('./Planner/PlannerDisplay'))\r\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\r\nconst FlexDisplay = lazy(() => import('./FlexPage/FlexDisplay'))\r\nconst SettingsDisplay = lazy(() => import('./Settings/SettingsDisplay'))\r\nconst WeaponDisplay = lazy(() => import('./Weapon/WeaponDisplay'))\r\nconst DocumentationDisplay = lazy(() => import('./DocumentationPage/DocumentationDisplay'))\r\n\r\nfunction App() {\r\n  return <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n    <AppInner />\r\n  </Suspense>\r\n}\r\nfunction AppInner() {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <HashRouter basename=\"/\">\r\n    <div className=\"h-100 d-flex flex-column\" id=\"mainContainer\">\r\n      <div id=\"content\" className=\"flex-grow-1\">\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand as={Link} to=\"/\"><Trans t={t} i18nKey=\"pageTitle\">Genshin Optimizer</Trans></Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link as={Link} to=\"/artifact\">{artifactSlotIcon(\"flower\")} <Trans t={t} i18nKey=\"ui:tabs.artifacts\">Artifacts</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/weapon\"><FontAwesomeIcon icon={faGavel} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:tabs.weapons\">Weapons</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/character\"><FontAwesomeIcon icon={faIdCard} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:tabs.characters\">Character</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/build\"><FontAwesomeIcon icon={faCalculator} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:tabs.builds\">Builds</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/tools\"><FontAwesomeIcon icon={faTools} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:tabs.tools\">Tools</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/database\"><FontAwesomeIcon icon={faCog} /> <Trans t={t} i18nKey=\"ui:tabs.database\">Database</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/doc\"><FontAwesomeIcon icon={faBook} /> <Trans t={t} i18nKey=\"ui:tabs.doc\">Documentation</Trans></Nav.Link>\r\n              {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/test\">TEST</Nav.Link>}\r\n            </Nav>\r\n            <Nav>\r\n              {process.env.NODE_ENV === \"development\" && <LanguageDropdown />}\r\n              <Nav.Link href={process.env.REACT_APP_PAYPAL_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPaypal} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.paypal\">PayPal</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_PATREON_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPatreon} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.patreon\">Patreon</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"discord\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faDiscord} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.discord\">Discord</Trans></span>\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n          <Switch>\r\n            <Route path=\"/artifact\" component={ArtifactDisplay} />\r\n            <Route path=\"/weapon\" component={WeaponDisplay} />\r\n            <Route path=\"/character\" component={CharacterDisplay} />\r\n            <Route path=\"/build\" component={BuildDisplay} />\r\n            <Route path=\"/tools\" component={Planner} />\r\n            {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\r\n            <Route path=\"/database\" component={SettingsDisplay} />\r\n            <Route path=\"/doc\" component={DocumentationDisplay} />\r\n            <Route path=\"/flex\" component={FlexDisplay} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n      <Nav id=\"footer\" className=\"bg-dark\">\r\n        <Row className=\"w-100 ml-0 mr-0 mb-2 text-light d-flex justify-content-between\">\r\n          <Col xs={\"auto\"}>\r\n            <span><small><Trans t={t} i18nKey=\"ui:rightsDisclaimer\">Genshin Optimizer is not affiliated with or endorsed by miHoYo.</Trans></small></span>\r\n          </Col>\r\n          <Col xs={\"auto\"}>\r\n            <span><small ><Trans t={t} i18nKey=\"ui:appVersion\" values={{ version: version }}>Genshin Optimizer Version: {{ version }}</Trans></small></span>\r\n          </Col>\r\n        </Row>\r\n      </Nav>\r\n    </div>\r\n  </HashRouter>\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID as any, {\r\n  // debug: process.env.NODE_ENV === \"development\"\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(undefined);\r\n","import { IArtifact, ICachedArtifact } from \"../../Types/artifact\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport { ICachedWeapon, IWeapon } from \"../../Types/weapon\";\r\nimport { ArtCharDatabase } from \"../Database\";\r\nimport { DBStorage, SandboxStorage } from \"../DBStorage\";\r\nimport { setDBVersion } from \"../utils\";\r\nimport { parseArtifact, parseCharacter, parseWeapon } from \"../validation\";\r\n\r\nconst GOSource = \"Genshin Optimizer\" as const\r\n\r\nexport function importGOOD(data: IGOOD, oldDatabase: ArtCharDatabase): ImportResult | undefined {\r\n  switch (data.version) {\r\n    case 1: return importGOOD1(data, oldDatabase)\r\n  }\r\n}\r\n\r\nfunction importGOOD1(data: IGOOD, oldDatabase: ArtCharDatabase): ImportResult | undefined {\r\n  const source = data.source, storage = new SandboxStorage(oldDatabase.storage)\r\n  const result: ImportResult = { type: \"GOOD\", storage, source }\r\n\r\n  // Match artifacts for counter, metadata, and locations\r\n  if (data.artifacts) {\r\n    const counter = newCounter()\r\n    const artifacts = data.artifacts.flatMap(a => {\r\n      const parsed = parseArtifact(a)\r\n      if (!parsed) counter.invalid.push(a)\r\n      return parsed ? [parsed] : []\r\n    })\r\n    const hasLocations = artifacts.some(art => art.location)\r\n    const idsToRemove = new Set(oldDatabase._getArts().map(a => a.id))\r\n    for (const artifact of artifacts) {\r\n      let { duplicated, upgraded } = oldDatabase.findDuplicates(artifact)\r\n\r\n      // Don't reuse dups/upgrades\r\n      duplicated = duplicated.filter(a => idsToRemove.has(a.id))\r\n      upgraded = upgraded.filter(a => idsToRemove.has(a.id))\r\n\r\n      // Prefer dups over upgrades\r\n      const match = (duplicated[0] ?? upgraded[0]) as ICachedArtifact | undefined\r\n      if (match) {\r\n        idsToRemove.delete(match.id)\r\n        for (const key in match) {\r\n          if (!(key in artifact) && key !== \"location\")\r\n            artifact[key] = match[key]\r\n        }\r\n        if (!hasLocations)\r\n          artifact.location = match.location\r\n      }\r\n\r\n      if (duplicated.length) counter.unchanged++\r\n      else if (upgraded.length) counter.updated++\r\n      else counter.new++\r\n    }\r\n\r\n    counter.total = data.artifacts.length\r\n    counter.removed = idsToRemove.size\r\n    result.artifacts = counter\r\n\r\n    storage.removeForKeys(k => k.startsWith(\"artifact_\"))\r\n    artifacts.forEach((a, i) => storage.set(`artifact_${i}`, a))\r\n  }\r\n\r\n  // Match weapons for counter, metadata, and locations\r\n  if (data.weapons) {\r\n    const counter = newCounter()\r\n    const weapons = data.weapons.flatMap(w => {\r\n      const parsed = parseWeapon(w)\r\n      if (!parsed) counter.invalid.push(w)\r\n      return parsed ? [parsed] : []\r\n    })\r\n    const hasLocations = weapons.some(weapon => weapon.location)\r\n    const idsToRemove = new Set(oldDatabase._getWeapons().map(w => w.id))\r\n    for (const weapon of weapons) {\r\n      let { duplicated, upgraded } = oldDatabase.findDuplicateWeapons(weapon)\r\n\r\n      // Don't reuse dups/upgrades\r\n      duplicated = duplicated.filter(w => idsToRemove.has(w.id))\r\n      upgraded = upgraded.filter(w => idsToRemove.has(w.id))\r\n\r\n      // Prefer dups over upgrades\r\n      const match = (duplicated[0] ?? upgraded[0]) as ICachedWeapon | undefined\r\n      if (match) {\r\n        idsToRemove.delete(match.id)\r\n        for (const key in match) {\r\n          if (!(key in weapon) && key !== \"location\")\r\n            weapon[key] = match[key]\r\n        }\r\n        if (!hasLocations)\r\n          weapon.location = match.location\r\n      }\r\n\r\n      if (duplicated.length) counter.unchanged++\r\n      else if (upgraded.length) counter.updated++\r\n      else counter.new++\r\n    }\r\n\r\n    counter.total = data.weapons!.length\r\n    counter.removed = idsToRemove.size\r\n    result.weapons = counter\r\n\r\n    storage.removeForKeys(k => k.startsWith(\"weapon_\"))\r\n    weapons.forEach((w, i) => storage.set(`weapon_${i}`, w))\r\n  }\r\n\r\n  if (data.characters) {\r\n    const invalid: any[] = []\r\n    const characters = data.characters.flatMap(c => {\r\n      const parsed = parseCharacter(c)\r\n      if (!parsed) invalid.push(c)\r\n      return parsed ? [parsed] : []\r\n    })\r\n    const newCharKeys = new Set(characters.map(x => x.key))\r\n    const oldCharKeys = new Set(oldDatabase._getCharKeys())\r\n\r\n    for (const character of characters) {\r\n      const old = oldDatabase._getChar(character.key)\r\n      if (!old) continue\r\n\r\n      for (const key in old) {\r\n        if (!(key in character))\r\n          character[key] = old[key]\r\n      }\r\n    }\r\n\r\n    result.characters = {\r\n      total: data.characters!.length,\r\n      new: [...newCharKeys].filter(x => !oldCharKeys.has(x)).length,\r\n      updated: [...newCharKeys].filter(x => oldCharKeys.has(x)).length,\r\n      removed: [...oldCharKeys].filter(x => !newCharKeys.has(x)).length,\r\n      unchanged: 0,\r\n      invalid\r\n    }\r\n\r\n    storage.removeForKeys(k => k.startsWith(\"char_\"))\r\n    characters.forEach((c => storage.set(`char_${c.key}`, c)))\r\n  }\r\n\r\n  // We invalidate build results here because we need to do\r\n  // it regardless of whether the file has character/art data.\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n      if (character.buildSettings) {\r\n        character.buildSettings.builds = []\r\n        character.buildSettings.buildDate = 0\r\n        storage.set(key, character)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (source === GOSource) {\r\n    const { dbVersion, artifactDisplay, characterDisplay, buildsDisplay } = data as unknown as IGO\r\n    if (dbVersion < 8) return // Something doesn't look right here\r\n    setDBVersion(storage, dbVersion)\r\n    artifactDisplay && storage.set(\"ArtifactDisplay.state\", artifactDisplay)\r\n    characterDisplay && storage.set(\"CharacterDisplay.state\", characterDisplay)\r\n    buildsDisplay && storage.set(\"BuildsDisplay.state\", buildsDisplay)\r\n  } else {\r\n    // DO NOT CHANGE THE DB VERSION\r\n    // Standard GOODv1 matches dbv8.\r\n    setDBVersion(storage, 8)\r\n  }\r\n\r\n  new ArtCharDatabase(storage) // validate storage entries\r\n  return result\r\n}\r\n\r\nexport function exportGOOD(storage: DBStorage): IGOOD & IGO {\r\n  return {\r\n    format: \"GOOD\",\r\n    dbVersion: 8,\r\n    source: GOSource,\r\n    version: 1,\r\n    characters: storage.entries\r\n      .filter(([key]) => key.startsWith(\"char_\"))\r\n      .map(([_, value]) => {\r\n        // Invalidate build results since we won't use it on imports either\r\n        const result = JSON.parse(value)\r\n        if (result.buildSettings) {\r\n          result.buildSettings.builds = []\r\n          result.buildSettings.buildDate = 0\r\n        }\r\n        return result\r\n      }),\r\n    artifacts: storage.entries\r\n      .filter(([key]) => key.startsWith(\"artifact_\"))\r\n      .map(([_, value]) => JSON.parse(value)),\r\n    weapons: storage.entries\r\n      .filter(([key]) => key.startsWith(\"weapon_\"))\r\n      .map(([_, value]) => JSON.parse(value)),\r\n\r\n    artifactDisplay: storage.get(\"ArtifactDisplay.state\") ?? {},\r\n    characterDisplay: storage.get(\"CharacterDisplay.state\") ?? {},\r\n    buildsDisplay: storage.get(\"BuildsDisplay.state\") ?? {},\r\n  }\r\n}\r\n\r\ntype IGOOD = {\r\n  format: \"GOOD\"\r\n  source: string\r\n  version: 1\r\n  characters?: ICharacter[]\r\n  artifacts?: IArtifact[]\r\n  weapons?: IWeapon[]\r\n}\r\ntype IGO = {\r\n  dbVersion: number\r\n  source: typeof GOSource\r\n  artifactDisplay: any\r\n  characterDisplay: any\r\n  buildsDisplay: any\r\n}\r\n\r\nexport type ImportResultCounter = {\r\n  total: number, // total # in file\r\n  new: number,\r\n  updated: number,\r\n  unchanged: number,\r\n  removed: number,\r\n  invalid: any[],\r\n}\r\nexport type ImportResult = {\r\n  type: \"GOOD\",\r\n  storage: DBStorage,\r\n  source: string,\r\n  artifacts?: ImportResultCounter,\r\n  weapons?: ImportResultCounter,\r\n  characters?: ImportResultCounter,\r\n}\r\nfunction newCounter(): ImportResultCounter {\r\n  return { total: 0, invalid: [], new: 0, updated: 0, unchanged: 0, removed: 0, }\r\n}","import { ArtCharDatabase } from '../Database';\r\nimport { IArtifact, MainStatKey, SubstatKey } from '../../Types/artifact';\r\nimport { parseArtifact } from '../../Database/validation';\r\nimport { ArtifactSetKey, SlotKey } from \"../../Types/consts\";\r\nimport { importGOOD, ImportResult } from './good';\r\n\r\nconst DefaultVersion = \"1\";\r\nconst GetConvertedArtifactsOfVersion: Dict<string, (data: any) => { artifacts: IArtifact[], invalid: any[] }> = {\r\n  \"1\": importMona1\r\n};\r\n\r\nexport function importMona(dataObj: any, oldDatabase: ArtCharDatabase): ImportResult | undefined {\r\n  const version = dataObj.version ?? DefaultVersion\r\n  const converted = GetConvertedArtifactsOfVersion[version]?.(dataObj)\r\n\r\n  if (!converted)\r\n    return // TODO: Maybe add failure reason, or throws here\r\n\r\n  const { artifacts, invalid } = converted\r\n\r\n  const result = importGOOD({\r\n    format: \"GOOD\",\r\n    source: \"mona-uranai\",\r\n    version: 1,\r\n    artifacts: artifacts\r\n  }, oldDatabase)\r\n  result?.artifacts!.invalid.push(...invalid)\r\n  return result\r\n}\r\n\r\n// backup 0: https://github.com/wormtql/genshin_artifact/blob/main/src/assets/artifacts/data/*/index.js\r\n// backup 1: https://github.com/YuehaiTeam/cocogoat/blob/main/src/App/export/Mona.ts\r\n\r\nfunction importMona1(dataObj: any): { artifacts: IArtifact[], invalid: any[] } {\r\n  const invalid: any[] = [], artifacts: IArtifact[] = []\r\n\r\n  for (const property in dataObj) {\r\n    if (!(property in ArtifactSlotKeyMap))\r\n      continue\r\n\r\n    for (const genshinArtArtifact of dataObj[property]) {\r\n      const { setName, star, level, position, mainTag } = genshinArtArtifact\r\n      const raw = {\r\n        setKey: ArtifactSetKeyMap[setName],\r\n        rarity: star,\r\n        level,\r\n        slotKey: ArtifactSlotKeyMap[position],\r\n        mainStatKey: ArtifactMainStatKeyMap[mainTag.name],\r\n        substats: genshinArtArtifact.normalTags.map(({ name, value }) => {\r\n          const key = ArtifactSubStatKeyMap[name]\r\n          return {\r\n            key,\r\n            value: key?.endsWith(\"_\") ?\r\n              Math.round(value * 1000) / 10 : // decimal to percentage\r\n              value,\r\n          }\r\n        }),\r\n      }\r\n      const flex = parseArtifact(raw)\r\n\r\n      if (!flex) {\r\n        invalid.push(raw)\r\n        continue\r\n      }\r\n\r\n      artifacts.push(flex)\r\n    }\r\n  }\r\n\r\n  return { artifacts, invalid }\r\n}\r\n\r\n// Referencing https://wormtql.gitbook.io/mona-uranai/ (they don't seem to update this anymore...)\r\n\r\nconst ArtifactSlotKeyMap: Dict<string, SlotKey> = {\r\n  \"flower\": \"flower\",\r\n  \"feather\": \"plume\",\r\n  \"sand\": \"sands\",\r\n  \"cup\": \"goblet\",\r\n  \"head\": \"circlet\",\r\n}\r\nconst ArtifactSetKeyMap: Dict<string, ArtifactSetKey> = {\r\n  \"adventurer\": \"Adventurer\",\r\n  \"archaicPetra\": \"ArchaicPetra\",\r\n  \"berserker\": \"Berserker\",\r\n  \"blizzardStrayer\": \"BlizzardStrayer\",\r\n  \"bloodstainedChivalry\": \"BloodstainedChivalry\",\r\n  \"braveHeart\": \"BraveHeart\",\r\n  \"crimsonWitch\": \"CrimsonWitchOfFlames\",\r\n  \"defenderWill\": \"DefendersWill\",\r\n  \"gambler\": \"Gambler\",\r\n  \"gladiatorFinale\": \"GladiatorsFinale\",\r\n  \"heartOfDepth\": \"HeartOfDepth\",\r\n  \"instructor\": \"Instructor\",\r\n  \"lavaWalker\": \"Lavawalker\",\r\n  \"luckyDog\": \"LuckyDog\",\r\n  \"maidenBeloved\": \"MaidenBeloved\",\r\n  \"martialArtist\": \"MartialArtist\",\r\n  \"noblesseOblige\": \"NoblesseOblige\",\r\n  \"prayersForDestiny\": \"PrayersForDestiny\",\r\n  \"prayersForIllumination\": \"PrayersForIllumination\",\r\n  \"prayersForWisdom\": \"PrayersForWisdom\",\r\n  \"prayersToSpringtime\": \"PrayersToSpringtime\",\r\n  \"resolutionOfSojourner\": \"ResolutionOfSojourner\",\r\n  \"retracingBolide\": \"RetracingBolide\",\r\n  \"scholar\": \"Scholar\",\r\n  \"exile\": \"TheExile\",\r\n  \"thunderingFury\": \"ThunderingFury\",\r\n  \"thunderSmoother\": \"Thundersoother\",\r\n  \"tinyMiracle\": \"TinyMiracle\",\r\n  \"travelingDoctor\": \"TravelingDoctor\",\r\n  \"viridescentVenerer\": \"ViridescentVenerer\",\r\n  \"wandererTroupe\": \"WanderersTroupe\",\r\n  \"tenacityOfTheMillelith\": \"TenacityOfTheMillelith\",\r\n  \"paleFlame\": \"PaleFlame\",\r\n  \"emblemOfSeveredFate\": \"EmblemOfSeveredFate\",\r\n  \"shimenawaReminiscence\": \"ShimenawasReminiscence\",\r\n}\r\nconst ArtifactMainStatKeyMap: Dict<string, MainStatKey> = {\r\n  \"cureEffect\": \"heal_\",\r\n  \"lifeStatic\": \"hp\",\r\n  \"lifePercentage\": \"hp_\",\r\n  \"attackStatic\": \"atk\",\r\n  \"attackPercentage\": \"atk_\",\r\n  // \"defendStatic\": \"def\",\r\n  \"defendPercentage\": \"def_\",\r\n  \"critical\": \"critRate_\",\r\n  // // \"eCritical\": \"\",\r\n  \"criticalDamage\": \"critDMG_\",\r\n  \"elementalMastery\": \"eleMas\",\r\n  \"recharge\": \"enerRech_\",\r\n  \"thunderBonus\": \"electro_dmg_\",\r\n  \"fireBonus\": \"pyro_dmg_\",\r\n  \"waterBonus\": \"hydro_dmg_\",\r\n  \"iceBonus\": \"cryo_dmg_\",\r\n  \"windBonus\": \"anemo_dmg_\",\r\n  \"rockBonus\": \"geo_dmg_\",\r\n  // \"grassBonus\": \"dendro_dmg_\",  // the day will come...\r\n  \"physicalBonus\": \"physical_dmg_\",\r\n  // \"bonus\": \"\",\r\n  // \"aBonus\": \"\",\r\n  // \"bBonus\": \"\",\r\n  // \"eBonus\": \"\",\r\n  // \"qBonus\": \"\",\r\n}\r\nconst ArtifactSubStatKeyMap: Dict<string, SubstatKey> = {\r\n  \"lifeStatic\": \"hp\",\r\n  \"lifePercentage\": \"hp_\",\r\n  \"attackStatic\": \"atk\",\r\n  \"attackPercentage\": \"atk_\",\r\n  \"defendStatic\": \"def\",\r\n  \"defendPercentage\": \"def_\",\r\n  \"critical\": \"critRate_\",\r\n  \"criticalDamage\": \"critDMG_\",\r\n  \"elementalMastery\": \"eleMas\",\r\n  \"recharge\": \"enerRech_\",\r\n}\r\n","import { faClipboard, faFileDownload, faFileUpload, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useContext, useMemo, useState } from \"react\"\r\nimport { Alert, Badge, Button, Card, Col, Container, Dropdown, Form, Row } from \"react-bootstrap\"\r\nimport ReactGA from 'react-ga'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\"\r\nimport { dbStorage } from '../Database/DBStorage'\r\nimport { importGO, ImportResult as GOImportResult } from '../Database/exim/go'\r\nimport { ImportResultCounter, exportGOOD, importGOOD, ImportResult as GOODImportResult } from '../Database/exim/good'\r\nimport { importMona } from '../Database/exim/mona'\r\nimport { languageCodeList } from \"../i18n\"\r\nimport { useForceUpdate } from \"../Util/ReactUtil\"\r\n\r\nexport default function SettingsDisplay() {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const [, forceUpdate] = useForceUpdate()\r\n  ReactGA.pageview('/setting')\r\n\r\n  return <Container>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n      <Card.Header><Trans t={t} i18nKey=\"title\" /></Card.Header>\r\n      <Card.Body>\r\n        <LanguageCard />\r\n        <DownloadCard forceUpdate={forceUpdate} />\r\n        <UploadCard forceUpdate={forceUpdate} />\r\n      </Card.Body>\r\n    </Card>\r\n  </Container >\r\n}\r\n\r\nfunction LanguageCard() {\r\n  const { t } = useTranslation();\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header>{t(\"settings:languageCard.selectLanguage\")} <Badge variant=\"warning\">{t(\"ui:underConstruction\")}</Badge></Card.Header>\r\n    <Card.Body>\r\n      <LanguageDropdown />\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nconst nativeLanguages = {\r\n  \"chs\": \"中文 正体字\",\r\n  \"cht\": \"中文 繁體字\",\r\n  \"de\": \"Deutsch\",\r\n  \"en\": \"English\",\r\n  \"es\": \"español\",\r\n  \"fr\": \"français\",\r\n  \"id\": \"Bahasa Indonesia\",\r\n  \"ja\": \"日本語\",\r\n  \"ko\": \"한국어\",\r\n  \"pt\": \"Português\",\r\n  \"ru\": \"Русский язык\",\r\n  \"th\": \"ภาษาไทย\",\r\n  \"vi\": \"Tiếng Việt\"\r\n}\r\nexport function LanguageDropdown() {\r\n  const { t, i18n } = useTranslation([\"ui\", \"settings\"]);\r\n  const onSetLanguage = (lang) => () => i18n.changeLanguage(lang);\r\n  const currentLang = i18n.languages[0];\r\n  return <Dropdown className=\"flex-grow-1 mb-2\">\r\n    <Dropdown.Toggle className=\"w-100\" variant=\"primary\">\r\n      {t('settings:languageCard.languageFormat', { language: t(`languages:${currentLang}`) })}\r\n    </Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {languageCodeList.map((lang) => <Dropdown.Item key={lang} onClick={onSetLanguage(lang)}><Trans i18nKey={`languages:${lang}`} />{lang !== currentLang ? ` (${nativeLanguages[lang]})` : \"\"}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\nfunction download(JSONstr: string, filename = \"data.json\") {\r\n  const contentType = \"application/json;charset=utf-8\"\r\n  if (window?.navigator?.msSaveOrOpenBlob as any) { // TODO: Function is always defined, do we want to call it instead?\r\n    const blob = new Blob([decodeURIComponent(encodeURI(JSONstr))], { type: contentType })\r\n    navigator.msSaveOrOpenBlob(blob, filename)\r\n  } else {\r\n    const a = document.createElement('a');\r\n    a.download = filename\r\n    a.href = `data:${contentType},${encodeURIComponent(JSONstr)}`\r\n    a.target = \"_blank\"\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n  }\r\n}\r\n\r\nfunction deleteDatabase(t, database: ArtCharDatabase) {\r\n  if (!window.confirm(t(\"uploadCard.goUpload.deleteDatabasePrompt\"))) return\r\n  dbStorage.clear()\r\n  database.reloadStorage()\r\n}\r\nfunction copyToClipboard() {\r\n  navigator.clipboard.writeText(JSON.stringify(exportGOOD(dbStorage)))\r\n    .then(() => alert(\"Copied database to clipboard.\"))\r\n    .catch(console.error)\r\n}\r\nfunction DownloadCard({ forceUpdate }) {\r\n  const database = useContext(DatabaseContext)\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const numChar = database._getCharKeys().length\r\n  const numArt = database._getArts().length\r\n  const numWeapon = database._getWeapons().length\r\n  const downloadValid = Boolean(numChar || numArt)\r\n  const deleteDB = () => {\r\n    deleteDatabase(t, database);\r\n    forceUpdate()\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header><Trans t={t} i18nKey=\"downloadCard.databaseDownload\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={6} md={4}><Trans t={t} i18nKey=\"count.chars\" /> {numChar}</Col>\r\n        <Col xs={6} md={4}><Trans t={t} i18nKey=\"count.arts\" /> {numArt}</Col>\r\n        <Col xs={6} md={4}><Trans t={t} i18nKey=\"count.weapons\" /> {numWeapon}</Col>\r\n      </Row>\r\n      <small><Trans t={t} i18nKey=\"downloadCard.databaseDisclaimer\" /></small>\r\n    </Card.Body>\r\n    <Card.Footer><Row>\r\n      <Col xs=\"auto\"><Button disabled={!downloadValid} onClick={() => download(JSON.stringify(exportGOOD(dbStorage)))}><FontAwesomeIcon icon={faFileDownload} /> <Trans t={t} i18nKey=\"downloadCard.button.download\" /></Button></Col>\r\n      <Col ><Button disabled={!downloadValid} variant=\"info\" onClick={copyToClipboard}><FontAwesomeIcon icon={faClipboard} /> <Trans t={t} i18nKey=\"downloadCard.button.copy\" /></Button></Col>\r\n      <Col xs=\"auto\"><Button disabled={!downloadValid} variant=\"danger\" onClick={deleteDB} ><FontAwesomeIcon icon={faTrashAlt} /> <Trans t={t} i18nKey=\"downloadCard.button.delete\" /></Button></Col>\r\n    </Row></Card.Footer>\r\n  </Card>\r\n}\r\n\r\nfunction UploadCard({ forceUpdate }) {\r\n  const database = useContext(DatabaseContext)\r\n  const { t } = useTranslation(\"settings\");\r\n  const [data, setdata] = useState(\"\")\r\n  const [filename, setfilename] = useState(\"\")\r\n  const [errorMsg, setErrorMsg] = useState(\"\") // TODO localize error msg\r\n  const dataObj: UploadData | undefined = useMemo(() => {\r\n    if (!data) return\r\n    let parsed: any\r\n    try {\r\n      parsed = JSON.parse(data)\r\n      if (typeof parsed !== \"object\") {\r\n        setErrorMsg(\"uploadCard.error.jsonParse\")\r\n        return\r\n      }\r\n    } catch (e) {\r\n      setErrorMsg(\"uploadCard.error.jsonParse\")\r\n      return\r\n    }\r\n    // Figure out the file format\r\n    if (parsed.version === \"1\" && [\"flower\", \"feather\", \"sand\", \"cup\", \"head\"].some(k => Object.keys(parsed).includes(k))) {\r\n      // Parse as mona format\r\n      const imported = importMona(parsed, database)\r\n      if (!imported) {\r\n        setErrorMsg(\"uploadCard.error.monaInvalid\")\r\n        return\r\n      }\r\n      return imported\r\n    } else if (\"version\" in parsed && \"characterDatabase\" in parsed && \"artifactDatabase\" in parsed) {\r\n      // Parse as GO format\r\n      const imported = importGO(parsed)\r\n      if (!imported) {\r\n        setErrorMsg(\"uploadCard.error.goInvalid\")\r\n        return\r\n      }\r\n      return imported\r\n    } else if (parsed.format === \"GOOD\") {\r\n      // Parse as GOOD format\r\n      const imported = importGOOD(parsed, database)\r\n      if (!imported) {\r\n        setErrorMsg(\"uploadCard.error.goInvalid\")\r\n        return\r\n      }\r\n      return imported\r\n    }\r\n    setErrorMsg(\"uploadCard.error.unknown\")\r\n    return\r\n  }, [data, database])\r\n\r\n  const reset = () => {\r\n    setdata(\"\")\r\n    setfilename(\"\")\r\n    forceUpdate()\r\n  }\r\n  const onUpload = async e => {\r\n    const file = e.target.files[0]\r\n    e.target.value = null // reset the value so the same file can be uploaded again...\r\n    if (file) setfilename(file.name)\r\n    const reader = new FileReader()\r\n    reader.onload = () => setdata(reader.result as string)\r\n    reader.readAsText(file)\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header><Trans t={t} i18nKey=\"settings:uploadCard.title\" /></Card.Header>\r\n    <Card.Body>\r\n      <Form.File\r\n        className=\"mb-2\"\r\n        label={filename ? filename : <Trans t={t} i18nKey=\"settings:uploadCard.hint\" />}\r\n        onChange={onUpload}\r\n        custom\r\n        accept=\".json\"\r\n      />\r\n      <h6><Trans t={t} i18nKey=\"settings:uploadCard.hintPaste\" /></h6>\r\n      <textarea className=\"w-100 text-monospace mb-2\" value={data} onChange={e => setdata(e.target.value)} style={{ minHeight: \"10em\" }} />\r\n      {UploadInfo(dataObj) ?? errorMsg}\r\n    </Card.Body>\r\n    {UploadAction(dataObj, reset)}\r\n  </Card>\r\n}\r\n\r\nfunction UploadInfo(data: UploadData | undefined) {\r\n  switch (data?.type) {\r\n    case \"GO\": return <GOUploadInfo data={data} />\r\n    case \"GOOD\": return <GOODUploadInfo data={data} />\r\n  }\r\n}\r\nfunction UploadAction(data: UploadData | undefined, reset: () => void) {\r\n  switch (data?.type) {\r\n    case \"GO\":\r\n    case \"GOOD\": return <GOUploadAction data={data} reset={reset} />\r\n  }\r\n}\r\n\r\nfunction GOODUploadInfo({ data: { source, artifacts, characters, weapons }, data }: { data: GOODImportResult }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header><Trans t={t} i18nKey=\"uploadCard.dbSource\" /> <strong>{source}</strong></Card.Header>\r\n    <Card.Body className=\"mb-n2\">\r\n      <MergeResult result={artifacts} type=\"arts\" />\r\n      <MergeResult result={weapons} type=\"weapons\" />\r\n      <MergeResult result={characters} type=\"chars\" />\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction MergeResult({ result, type }: { result?: ImportResultCounter, type: string }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  if (!result) return null\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header><Trans t={t} i18nKey={`count.${type}`} /> {result.total ?? 0}</Card.Header>\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row xs={12} md={4} className=\"mb-2\">\r\n        <Col><Trans t={t} i18nKey=\"count.new\" /> <strong>{result.new}</strong> / {result.total}</Col>\r\n        <Col><Trans t={t} i18nKey=\"count.updated\" /> <strong>{result.updated}</strong> / {result.total}</Col>\r\n        <Col><Trans t={t} i18nKey=\"count.unchanged\" /> <strong>{result.unchanged}</strong> / {result.total}</Col>\r\n        <Col className=\"text-warning\"><Trans t={t} i18nKey=\"count.removed\" /> <strong>{result.removed}</strong></Col>\r\n      </Row>\r\n      {!!result.invalid?.length && <div>\r\n        <h6 className=\"text-danger\"><Trans t={t} i18nKey=\"count.invalid\" /> <strong>{result.invalid.length}</strong> / {result.total}</h6>\r\n        <textarea className=\"w-100 text-monospace mb-2\" value={JSON.stringify(result.invalid, undefined, 2)} disabled style={{ minHeight: \"10em\" }} />\r\n      </div>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction GOUploadInfo({ data: { charCount, artCount } }: { data: GOImportResult }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header><Trans t={t} i18nKey=\"uploadCard.goUpload.title\" /></Card.Header>\r\n    <Card.Body><Row>\r\n      <Col xs={12} md={6}><Trans t={t} i18nKey=\"count.chars\" /> {charCount}</Col>\r\n      <Col xs={12} md={6}><Trans t={t} i18nKey=\"count.arts\" /> {artCount}</Col>\r\n      {<Col xs={12} ><Alert variant=\"warning\" className=\"mb-0 mt-2\"><Trans t={t} i18nKey=\"uploadCard.goUpload.migrate\" /></Alert></Col>}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction GOUploadAction({ data: { storage }, data, reset }: { data: GOImportResult | GOODImportResult, reset: () => void }) {\r\n  const database = useContext(DatabaseContext)\r\n  const { t } = useTranslation(\"settings\")\r\n  const dataValid = data.type === \"GO\" ? data.charCount || data.artCount : (data.characters?.total || data.artifacts?.total || data.weapons?.total)\r\n  const replaceDB = () => {\r\n    dbStorage.removeForKeys(k => k.startsWith(\"artifact_\") || k.startsWith(\"char_\") || k.startsWith(\"weapon_\"))\r\n    dbStorage.copyFrom(storage)\r\n    database.reloadStorage()\r\n    reset()\r\n  }\r\n\r\n  return <Card.Footer>\r\n    <Button variant={dataValid ? \"success\" : \"danger\"} disabled={!dataValid} onClick={replaceDB}><FontAwesomeIcon icon={faFileUpload} /> <Trans t={t} i18nKey=\"settings:uploadCard.replaceDatabase\" /></Button>\r\n  </Card.Footer>\r\n}\r\n\r\ntype UploadData = GOImportResult | GOODImportResult","import { IArtifact } from \"../../Types/artifact\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport { ArtCharDatabase } from \"../Database\";\r\nimport { DBStorage, SandboxStorage } from \"../DBStorage\";\r\nimport { setDBVersion } from \"../utils\";\r\n\r\nexport function importGO(data: any): ImportResult | undefined {\r\n  const storage = new SandboxStorage()\r\n  const { version, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay } = data as Partial<DatabaseObj>\r\n  if (!version || !characterDatabase || !artifactDatabase)\r\n    return\r\n\r\n  characterDatabase && Object.entries(characterDatabase).forEach(([charKey, char]) => storage.set(`char_${charKey}`, char))\r\n  artifactDatabase && Object.entries(artifactDatabase).forEach(([id, art]) => storage.set(id, art))\r\n  //override version\r\n  version && setDBVersion(storage, version)\r\n  artifactDisplay && storage.set(\"ArtifactDisplay.state\", artifactDisplay)\r\n  characterDisplay && storage.set(\"CharacterDisplay.state\", characterDisplay)\r\n  buildsDisplay && storage.set(\"BuildsDisplay.state\", buildsDisplay)\r\n\r\n  const database = new ArtCharDatabase(storage) // validate storage entries\r\n  //TODO: figure out the # of dups/upgrades/new/foddered, not just total char/art count below.\r\n  return { type: \"GO\", storage, charCount: database.chars.keys.length, artCount: database.arts.keys.length }\r\n}\r\n\r\ntype DatabaseObj = {\r\n  version: number,\r\n  characterDatabase: Dict<CharacterKey, ICharacter>\r\n  artifactDatabase: Dict<string, IArtifact>\r\n  artifactDisplay: any\r\n  characterDisplay: any\r\n  buildsDisplay: any\r\n}\r\nexport type ImportResult = { type: \"GO\", storage: DBStorage, charCount: number, artCount: number }\r\n"],"sourceRoot":""}