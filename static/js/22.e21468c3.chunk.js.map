{"version":3,"sources":["Components/Card/CardLight.tsx","Components/Card/CardDark.tsx","Components/DropdownMenu/DropdownButton.tsx","Components/SqBadge.tsx","ReactHooks/useForceUpdate.tsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/Alert/Alert.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/internal/svg-icons/Close.js","../node_modules/@mui/icons-material/esm/Download.js","Database/exim/good.ts","Settings/Components/DownloadCard.tsx","Settings/Components/LanguageCard.tsx","Settings/Components/TCToggleCard.tsx","../node_modules/@mui/icons-material/esm/Upload.js","Database/exim/mona.ts","Settings/Components/UploadCard.tsx","Database/exim/go.ts","Settings/SettingsDisplay.tsx"],"names":["CardLight","styled","Card","backgroundColor","theme","palette","contentLight","main","CardDark","contentDark","DropdownButton","title","children","id","props","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","useCallback","event","currentTarget","handleClose","fallback","endIcon","width","aria-controls","aria-haspopup","aria-expanded","undefined","onClick","onClose","MenuListProps","height","SqBadge","name","slot","color","display","padding","fontSize","fontWeight","lineHeight","textAlign","whiteSpace","verticalAlign","borderRadius","contrastText","useForceUpdate","stateDirty","update","createSvgIcon","_jsx","d","getAlertUtilityClass","generateUtilityClass","_CloseIcon","alertClasses","generateUtilityClasses","_excluded","AlertRoot","Paper","overridesResolver","styles","ownerState","root","variant","capitalize","severity","getColor","mode","darken","lighten","getBackgroundColor","_extends","typography","body2","shape","light","icon","border","fontWeightMedium","dark","AlertIcon","marginRight","opacity","AlertMessage","message","AlertAction","action","alignItems","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","Alert","React","inProps","ref","useThemeProps","className","closeText","iconMapping","role","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsxs","square","elevation","clsx","IconButton","size","CloseIcon","GOSource","importGOOD","data","oldDatabase","version","source","storage","SandboxStorage","result","type","artifacts","counter","total","invalid","new","updated","unchanged","removed","flatMap","a","parsed","parseArtifact","push","hasLocations","some","art","location","idsToRemove","Set","_getArts","map","artifact","findDuplicates","duplicated","upgraded","filter","has","match","key","delete","length","removeForKeys","k","startsWith","forEach","i","set","weapons","w","parseWeapon","weapon","_getWeapons","findDuplicateWeapons","characters","c","parseCharacter","newCharKeys","x","oldCharKeys","_getCharKeys","character","old","_getChar","keys","get","buildSettings","builds","buildDate","dbVersion","artifactDisplay","characterDisplay","buildsDisplay","setDBVersion","ArtCharDatabase","importGOOD1","exportGOOD","format","currentDBVersion","entries","value","JSON","parse","copyToClipboard","navigator","clipboard","writeText","stringify","dbStorage","then","alert","catch","console","DownloadCard","forceUpdate","database","useContext","DatabaseContext","t","useTranslation","numChar","numArt","numWeapon","downloadValid","CardContent","sx","py","Typography","Trans","i18nKey","Divider","Grid","container","mb","spacing","item","xs","md","Button","disabled","JSONstr","filename","contentType","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","startIcon","Download","flexGrow","faClipboard","window","confirm","clear","reloadStorage","deleteDatabase","faTrashAlt","LanguageCard","LanguageDropdown","nativeLanguages","i18n","onSetLanguage","lang","changeLanguage","currentLang","languages","fullWidth","language","languageCodeList","MenuItem","selected","TCToggleCard","GlobalSettingsContext","tcMode","globalSettings","globalSettingsDispatch","gutterBottom","CheckBox","CheckBoxOutlineBlank","GetConvertedArtifactsOfVersion","dataObj","property","ArtifactSlotKeyMap","genshinArtArtifact","setName","star","level","position","mainTag","raw","setKey","ArtifactSetKeyMap","rarity","slotKey","mainStatKey","ArtifactMainStatKeyMap","substats","normalTags","ArtifactSubStatKeyMap","endsWith","Math","round","flex","InvisInput","UploadCard","setdata","setfilename","errorMsg","setErrorMsg","useMemo","e","Object","includes","imported","converted","importMona","characterDatabase","artifactDatabase","charKey","char","charCount","chars","artCount","arts","importGO","onUpload","file","files","reader","FileReader","onload","readAsText","htmlFor","accept","onChange","component","Upload","px","faFileCode","faArrowLeft","Box","fontFamily","minHeight","resize","UploadInfo","UploadAction","GOUploadInfo","GOODUploadInfo","reset","GOUploadAction","MergeResult","dataValid","copyFrom","faFileUpload","SettingsDisplay","ReactGA","pageview","my","flexDirection","gap"],"mappings":"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","file":"static/js/22.e21468c3.chunk.js","sourcesContent":["import { Card, styled } from \"@mui/material\";\r\n\r\nconst CardLight = styled(Card)(({ theme }) => ({\r\n  backgroundColor: theme.palette.contentLight.main\r\n}));\r\n\r\nexport default CardLight","import { Card, styled } from \"@mui/material\";\r\n\r\nconst CardDark = styled(Card)(({ theme }) => ({\r\n  backgroundColor: theme.palette.contentDark.main\r\n}));\r\n\r\nexport default CardDark","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Button, ButtonProps, Menu, Skeleton } from \"@mui/material\";\r\nimport { Suspense, useCallback, useState } from \"react\";\r\n\r\nexport type DropdownButtonProps = Omit<ButtonProps, \"title\"> & {\r\n  title: React.ReactNode,\r\n  id?: string,\r\n  children: React.ReactNode\r\n}\r\nexport default function DropdownButton({ title, children, id = \"dropdownbtn\", ...props }: DropdownButtonProps) {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget),\r\n    [setAnchorEl],\r\n  )\r\n  const handleClose = useCallback(\r\n    () => setAnchorEl(null),\r\n    [setAnchorEl],\r\n  )\r\n\r\n  return <Suspense fallback={<Button endIcon={<KeyboardArrowDown />}{...props}><Skeleton width={50} /></Button>} >\r\n    <Button\r\n      {...props}\r\n      id={id}\r\n      aria-controls=\"basic-menu\"\r\n      aria-haspopup=\"true\"\r\n      aria-expanded={open ? 'true' : undefined}\r\n      onClick={handleClick}\r\n      endIcon={<KeyboardArrowDown />}\r\n    >\r\n      {title}\r\n    </Button>\r\n    <Menu\r\n      id=\"basic-menu\"\r\n      anchorEl={anchorEl}\r\n      open={open}\r\n      onClose={handleClose}\r\n      MenuListProps={{\r\n        'aria-labelledby': id,\r\n      }}\r\n      onClick={handleClose}\r\n    >\r\n      {/* set Skeleton to be really high so the taller dropdowns can still be placed properly... */}\r\n      <Suspense fallback={<Skeleton width=\"100%\" height=\"1000\" />}>\r\n        {children}\r\n      </Suspense>\r\n    </Menu>\r\n  </Suspense>\r\n}","import { styled } from \"@mui/material\";\r\n\r\nconst SqBadge = styled(\"span\", {\r\n  name: 'SqBadge',\r\n  slot: 'Root',\r\n})(({ theme, color = \"primary\" }) => ({\r\n  display: \"inline-block\",\r\n  padding: \".25em .4em\",\r\n  fontSize: \"75%\",\r\n  fontWeight: 700,\r\n  lineHeight: 1,\r\n  textAlign: \"center\",\r\n  whiteSpace: \"nowrap\",\r\n  verticalAlign: \"baseline\",\r\n  borderRadius: \".25em\",\r\n  backgroundColor: theme.palette[color]?.main,\r\n  color: theme.palette[color]?.contrastText\r\n}))\r\nexport default SqBadge","import { useCallback, useState } from \"react\"\r\n\r\nexport default function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _CloseIcon;\n\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\n\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    backgroundColor: getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${theme.palette[color].light}`,\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'filled' && {\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main\n  });\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n          fontSize: \"small\"\n        }))\n      })\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5v2zM19 9h-4V3H9v6H5l7 7 7-7z\"\n}), 'Download');","import { IArtifact, ICachedArtifact } from \"../../Types/artifact\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport { ICachedWeapon, IWeapon } from \"../../Types/weapon\";\r\nimport { ArtCharDatabase } from \"../Database\";\r\nimport { DBStorage, SandboxStorage } from \"../DBStorage\";\r\nimport { currentDBVersion } from \"../migration\";\r\nimport { setDBVersion } from \"../utils\";\r\nimport { parseArtifact, parseCharacter, parseWeapon } from \"../validation\";\r\n\r\nconst GOSource = \"Genshin Optimizer\" as const\r\n\r\nexport function importGOOD(data: IGOOD, oldDatabase: ArtCharDatabase): ImportResult | undefined {\r\n  switch (data.version) {\r\n    case 1: return importGOOD1(data, oldDatabase)\r\n  }\r\n}\r\n\r\nfunction importGOOD1(data: IGOOD, oldDatabase: ArtCharDatabase): ImportResult | undefined {\r\n  const source = data.source, storage = new SandboxStorage(oldDatabase.storage)\r\n  const result: ImportResult = { type: \"GOOD\", storage, source }\r\n\r\n  // Match artifacts for counter, metadata, and locations\r\n  if (data.artifacts) {\r\n    const counter = newCounter()\r\n    const artifacts = data.artifacts.flatMap(a => {\r\n      const parsed = parseArtifact(a)\r\n      if (!parsed) counter.invalid.push(a)\r\n      return parsed ? [parsed] : []\r\n    })\r\n    const hasLocations = artifacts.some(art => art.location)\r\n    const idsToRemove = new Set(oldDatabase._getArts().map(a => a.id))\r\n    for (const artifact of artifacts) {\r\n      let { duplicated, upgraded } = oldDatabase.findDuplicates(artifact)\r\n\r\n      // Don't reuse dups/upgrades\r\n      duplicated = duplicated.filter(a => idsToRemove.has(a.id))\r\n      upgraded = upgraded.filter(a => idsToRemove.has(a.id))\r\n\r\n      // Prefer dups over upgrades\r\n      const match = (duplicated[0] ?? upgraded[0]) as ICachedArtifact | undefined\r\n      if (match) {\r\n        idsToRemove.delete(match.id)\r\n        for (const key in match) {\r\n          if (!(key in artifact) && key !== \"location\")\r\n            artifact[key] = match[key]\r\n        }\r\n        if (!hasLocations)\r\n          artifact.location = match.location\r\n      }\r\n\r\n      if (duplicated.length) counter.unchanged++\r\n      else if (upgraded.length) counter.updated++\r\n      else counter.new++\r\n    }\r\n\r\n    counter.total = data.artifacts.length\r\n    counter.removed = idsToRemove.size\r\n    result.artifacts = counter\r\n\r\n    storage.removeForKeys(k => k.startsWith(\"artifact_\"))\r\n    artifacts.forEach((a, i) => storage.set(`artifact_${i}`, a))\r\n  }\r\n\r\n  // Match weapons for counter, metadata, and locations\r\n  if (data.weapons) {\r\n    const counter = newCounter()\r\n    const weapons = data.weapons.flatMap(w => {\r\n      const parsed = parseWeapon(w)\r\n      if (!parsed) counter.invalid.push(w)\r\n      return parsed ? [parsed] : []\r\n    })\r\n    const hasLocations = weapons.some(weapon => weapon.location)\r\n    const idsToRemove = new Set(oldDatabase._getWeapons().map(w => w.id))\r\n    for (const weapon of weapons) {\r\n      let { duplicated, upgraded } = oldDatabase.findDuplicateWeapons(weapon)\r\n\r\n      // Don't reuse dups/upgrades\r\n      duplicated = duplicated.filter(w => idsToRemove.has(w.id))\r\n      upgraded = upgraded.filter(w => idsToRemove.has(w.id))\r\n\r\n      // Prefer dups over upgrades\r\n      const match = (duplicated[0] ?? upgraded[0]) as ICachedWeapon | undefined\r\n      if (match) {\r\n        idsToRemove.delete(match.id)\r\n        for (const key in match) {\r\n          if (!(key in weapon) && key !== \"location\")\r\n            weapon[key] = match[key]\r\n        }\r\n        if (!hasLocations)\r\n          weapon.location = match.location\r\n      }\r\n\r\n      if (duplicated.length) counter.unchanged++\r\n      else if (upgraded.length) counter.updated++\r\n      else counter.new++\r\n    }\r\n\r\n    counter.total = data.weapons!.length\r\n    counter.removed = idsToRemove.size\r\n    result.weapons = counter\r\n\r\n    storage.removeForKeys(k => k.startsWith(\"weapon_\"))\r\n    weapons.forEach((w, i) => storage.set(`weapon_${i}`, w))\r\n  }\r\n\r\n  if (data.characters) {\r\n    const invalid: any[] = []\r\n    const characters = data.characters.flatMap(c => {\r\n      const parsed = parseCharacter(c)\r\n      if (!parsed) invalid.push(c)\r\n      return parsed ? [parsed] : []\r\n    })\r\n    const newCharKeys = new Set(characters.map(x => x.key))\r\n    const oldCharKeys = new Set(oldDatabase._getCharKeys())\r\n\r\n    for (const character of characters) {\r\n      const old = oldDatabase._getChar(character.key)\r\n      if (!old) continue\r\n\r\n      for (const key in old) {\r\n        if (!(key in character))\r\n          character[key] = old[key]\r\n      }\r\n    }\r\n\r\n    result.characters = {\r\n      total: data.characters!.length,\r\n      new: [...newCharKeys].filter(x => !oldCharKeys.has(x)).length,\r\n      updated: [...newCharKeys].filter(x => oldCharKeys.has(x)).length,\r\n      removed: [...oldCharKeys].filter(x => !newCharKeys.has(x)).length,\r\n      unchanged: 0,\r\n      invalid\r\n    }\r\n\r\n    storage.removeForKeys(k => k.startsWith(\"char_\"))\r\n    characters.forEach((c => storage.set(`char_${c.key}`, c)))\r\n  }\r\n\r\n  // We invalidate build results here because we need to do\r\n  // it regardless of whether the file has character/art data.\r\n  for (const key of storage.keys) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = storage.get(key)\r\n      if (character.buildSettings) {\r\n        character.buildSettings.builds = []\r\n        character.buildSettings.buildDate = 0\r\n        storage.set(key, character)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (source === GOSource) {\r\n    const { dbVersion, artifactDisplay, characterDisplay, buildsDisplay } = data as unknown as IGO\r\n    if (dbVersion < 8) return // Something doesn't look right here\r\n    setDBVersion(storage, dbVersion)\r\n    artifactDisplay && storage.set(\"ArtifactDisplay.state\", artifactDisplay)\r\n    characterDisplay && storage.set(\"CharacterDisplay.state\", characterDisplay)\r\n    buildsDisplay && storage.set(\"BuildsDisplay.state\", buildsDisplay)\r\n  } else {\r\n    // DO NOT CHANGE THE DB VERSION\r\n    // Standard GOODv1 matches dbv8.\r\n    setDBVersion(storage, 8)\r\n  }\r\n\r\n  new ArtCharDatabase(storage) // validate storage entries\r\n  return result\r\n}\r\n\r\nexport function exportGOOD(storage: DBStorage): IGOOD & IGO {\r\n  return {\r\n    format: \"GOOD\",\r\n    dbVersion: currentDBVersion,\r\n    source: GOSource,\r\n    version: 1,\r\n    characters: storage.entries\r\n      .filter(([key]) => key.startsWith(\"char_\"))\r\n      .map(([_, value]) => {\r\n        // Invalidate build results since we won't use it on imports either\r\n        const result = JSON.parse(value)\r\n        if (result.buildSettings) {\r\n          result.buildSettings.builds = []\r\n          result.buildSettings.buildDate = 0\r\n        }\r\n        return result\r\n      }),\r\n    artifacts: storage.entries\r\n      .filter(([key]) => key.startsWith(\"artifact_\"))\r\n      .map(([_, value]) => JSON.parse(value)),\r\n    weapons: storage.entries\r\n      .filter(([key]) => key.startsWith(\"weapon_\"))\r\n      .map(([_, value]) => JSON.parse(value)),\r\n\r\n    artifactDisplay: storage.get(\"ArtifactDisplay.state\") ?? {},\r\n    characterDisplay: storage.get(\"CharacterDisplay.state\") ?? {},\r\n    buildsDisplay: storage.get(\"BuildsDisplay.state\") ?? {},\r\n  }\r\n}\r\n\r\ntype IGOOD = {\r\n  format: \"GOOD\"\r\n  source: string\r\n  version: 1\r\n  characters?: ICharacter[]\r\n  artifacts?: IArtifact[]\r\n  weapons?: IWeapon[]\r\n}\r\ntype IGO = {\r\n  dbVersion: number\r\n  source: typeof GOSource\r\n  artifactDisplay: any\r\n  characterDisplay: any\r\n  buildsDisplay: any\r\n}\r\n\r\nexport type ImportResultCounter = {\r\n  total: number, // total # in file\r\n  new: number,\r\n  updated: number,\r\n  unchanged: number,\r\n  removed: number,\r\n  invalid: any[],\r\n}\r\nexport type ImportResult = {\r\n  type: \"GOOD\",\r\n  storage: DBStorage,\r\n  source: string,\r\n  artifacts?: ImportResultCounter,\r\n  weapons?: ImportResultCounter,\r\n  characters?: ImportResultCounter,\r\n}\r\nfunction newCounter(): ImportResultCounter {\r\n  return { total: 0, invalid: [], new: 0, updated: 0, unchanged: 0, removed: 0, }\r\n}","import { faClipboard, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Download } from '@mui/icons-material'\r\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material'\r\nimport { useContext } from \"react\"\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport CardLight from '../../Components/Card/CardLight'\r\nimport { ArtCharDatabase, DatabaseContext } from \"../../Database/Database\"\r\nimport { dbStorage } from '../../Database/DBStorage'\r\nimport { exportGOOD } from '../../Database/exim/good'\r\n\r\nfunction download(JSONstr: string, filename = \"data.json\") {\r\n  const contentType = \"application/json;charset=utf-8\"\r\n  const a = document.createElement('a');\r\n  a.download = filename\r\n  a.href = `data:${contentType},${encodeURIComponent(JSONstr)}`\r\n  a.target = \"_blank\"\r\n  document.body.appendChild(a)\r\n  a.click()\r\n  document.body.removeChild(a)\r\n}\r\n\r\nfunction deleteDatabase(t, database: ArtCharDatabase) {\r\n  if (!window.confirm(t(\"uploadCard.goUpload.deleteDatabasePrompt\"))) return\r\n  dbStorage.clear()\r\n  database.reloadStorage()\r\n}\r\nfunction copyToClipboard() {\r\n  navigator.clipboard.writeText(JSON.stringify(exportGOOD(dbStorage)))\r\n    .then(() => alert(\"Copied database to clipboard.\"))\r\n    .catch(console.error)\r\n}\r\nexport default function DownloadCard({ forceUpdate }) {\r\n  const database = useContext(DatabaseContext)\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const numChar = database._getCharKeys().length\r\n  const numArt = database._getArts().length\r\n  const numWeapon = database._getWeapons().length\r\n  const downloadValid = Boolean(numChar || numArt)\r\n  const deleteDB = () => {\r\n    deleteDatabase(t, database);\r\n    forceUpdate()\r\n  }\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Typography variant=\"subtitle1\">\r\n        <Trans t={t} i18nKey=\"downloadCard.databaseDownload\" />\r\n      </Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container mb={2} spacing={2}>\r\n        <Grid item xs={6} md={4}><Typography><Trans t={t} i18nKey=\"count.chars\" /> {numChar}</Typography></Grid>\r\n        <Grid item xs={6} md={4}><Typography><Trans t={t} i18nKey=\"count.arts\" /> {numArt}</Typography></Grid>\r\n        <Grid item xs={6} md={4}><Typography><Trans t={t} i18nKey=\"count.weapons\" /> {numWeapon}</Typography></Grid>\r\n      </Grid>\r\n      <Typography variant=\"caption\"><Trans t={t} i18nKey=\"downloadCard.databaseDisclaimer\" /></Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={2}>\r\n        <Grid item><Button disabled={!downloadValid} onClick={() => download(JSON.stringify(exportGOOD(dbStorage)))} startIcon={<Download />}><Trans t={t} i18nKey=\"downloadCard.button.download\" /></Button></Grid>\r\n        <Grid item flexGrow={1} ><Button disabled={!downloadValid} color=\"info\" onClick={copyToClipboard} startIcon={<FontAwesomeIcon icon={faClipboard} />}><Trans t={t} i18nKey=\"downloadCard.button.copy\" /></Button></Grid>\r\n        <Grid item><Button disabled={!downloadValid} color=\"error\" onClick={deleteDB} startIcon={<FontAwesomeIcon icon={faTrashAlt} />}><Trans t={t} i18nKey=\"downloadCard.button.delete\" /></Button></Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}","import { CardContent, Divider, MenuItem } from '@mui/material'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport CardLight from '../../Components/Card/CardLight'\r\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton'\r\nimport SqBadge from '../../Components/SqBadge'\r\nimport { languageCodeList } from \"../../i18n\"\r\nexport default function LanguageCard() {\r\n  const { t } = useTranslation();\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      {t(\"settings:languageCard.selectLanguage\")} <SqBadge color=\"warning\">{t(\"ui:underConstruction\")}</SqBadge>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <LanguageDropdown />\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nconst nativeLanguages = {\r\n  \"chs\": \"中文 正体字\",\r\n  \"cht\": \"中文 繁體字\",\r\n  \"de\": \"Deutsch\",\r\n  \"en\": \"English\",\r\n  \"es\": \"español\",\r\n  \"fr\": \"français\",\r\n  \"id\": \"Bahasa Indonesia\",\r\n  \"ja\": \"日本語\",\r\n  \"ko\": \"한국어\",\r\n  \"pt\": \"Português\",\r\n  \"ru\": \"Русский язык\",\r\n  \"th\": \"ภาษาไทย\",\r\n  \"vi\": \"Tiếng Việt\"\r\n}\r\nexport function LanguageDropdown() {\r\n  const { t, i18n } = useTranslation([\"ui\", \"settings\"]);\r\n  const onSetLanguage = (lang) => () => i18n.changeLanguage(lang);\r\n  const currentLang = i18n.languages[0];\r\n  return <DropdownButton fullWidth title={t('settings:languageCard.languageFormat', { language: t(`languages:${currentLang}`) })}>\r\n    {languageCodeList.map((lang) => <MenuItem key={lang} selected={currentLang === lang} disabled={currentLang === lang} onClick={onSetLanguage(lang)}>\r\n      <Trans i18nKey={`languages:${lang}`} />\r\n      {lang !== currentLang ? ` (${nativeLanguages[lang]})` : \"\"}\r\n    </MenuItem>)}\r\n  </DropdownButton>\r\n}","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\r\nimport { Button, CardContent, Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport { GlobalSettingsContext } from \"../../GlobalSettings\";\r\n\r\nexport default function TCToggleCard() {\r\n  const { globalSettings: { tcMode }, globalSettingsDispatch } = useContext(GlobalSettingsContext)\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography gutterBottom color=\"warning.main\">Enabling this toggle will show some features that might be too complex for the average user.</Typography>\r\n      <Button fullWidth\r\n        onClick={() => globalSettingsDispatch({ tcMode: !tcMode })}\r\n        color={tcMode ? \"success\" : \"primary\"}\r\n        startIcon={tcMode ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n        Theorycrafting Mode\r\n      </Button>\r\n    </CardContent>\r\n  </CardLight>\r\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5v2zm0-10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Upload');","import { ArtCharDatabase } from '../Database';\r\nimport { IArtifact, MainStatKey, SubstatKey } from '../../Types/artifact';\r\nimport { parseArtifact } from '../../Database/validation';\r\nimport { ArtifactSetKey, SlotKey } from \"../../Types/consts\";\r\nimport { importGOOD, ImportResult } from './good';\r\n\r\nconst DefaultVersion = \"1\";\r\nconst GetConvertedArtifactsOfVersion: Dict<string, (data: any) => { artifacts: IArtifact[], invalid: any[] }> = {\r\n  \"1\": importMona1\r\n};\r\n\r\nexport function importMona(dataObj: any, oldDatabase: ArtCharDatabase): ImportResult | undefined {\r\n  const version = dataObj.version ?? DefaultVersion\r\n  const converted = GetConvertedArtifactsOfVersion[version]?.(dataObj)\r\n\r\n  if (!converted)\r\n    return // TODO: Maybe add failure reason, or throws here\r\n\r\n  const { artifacts, invalid } = converted\r\n\r\n  const result = importGOOD({\r\n    format: \"GOOD\",\r\n    source: \"mona-uranai\",\r\n    version: 1,\r\n    artifacts: artifacts\r\n  }, oldDatabase)\r\n  result?.artifacts!.invalid.push(...invalid)\r\n  return result\r\n}\r\n\r\n// backup 0: https://github.com/wormtql/genshin_artifact/blob/main/src/assets/artifacts/data/*/index.js\r\n// backup 1: https://github.com/YuehaiTeam/cocogoat/blob/main/src/App/export/Mona.ts\r\n\r\nfunction importMona1(dataObj: any): { artifacts: IArtifact[], invalid: any[] } {\r\n  const invalid: any[] = [], artifacts: IArtifact[] = []\r\n\r\n  for (const property in dataObj) {\r\n    if (!(property in ArtifactSlotKeyMap))\r\n      continue\r\n\r\n    for (const genshinArtArtifact of dataObj[property]) {\r\n      const { setName, star, level, position, mainTag } = genshinArtArtifact\r\n      const raw = {\r\n        setKey: ArtifactSetKeyMap[setName],\r\n        rarity: star,\r\n        level,\r\n        slotKey: ArtifactSlotKeyMap[position],\r\n        mainStatKey: ArtifactMainStatKeyMap[mainTag.name],\r\n        substats: genshinArtArtifact.normalTags.map(({ name, value }) => {\r\n          const key = ArtifactSubStatKeyMap[name]\r\n          return {\r\n            key,\r\n            value: key?.endsWith(\"_\") ?\r\n              Math.round(value * 1000) / 10 : // decimal to percentage\r\n              value,\r\n          }\r\n        }),\r\n      }\r\n      const flex = parseArtifact(raw)\r\n\r\n      if (!flex) {\r\n        invalid.push(raw)\r\n        continue\r\n      }\r\n\r\n      artifacts.push(flex)\r\n    }\r\n  }\r\n\r\n  return { artifacts, invalid }\r\n}\r\n\r\n// Referencing https://wormtql.gitbook.io/mona-uranai/ (they don't seem to update this anymore...)\r\n\r\nconst ArtifactSlotKeyMap: Dict<string, SlotKey> = {\r\n  \"flower\": \"flower\",\r\n  \"feather\": \"plume\",\r\n  \"sand\": \"sands\",\r\n  \"cup\": \"goblet\",\r\n  \"head\": \"circlet\",\r\n}\r\nconst ArtifactSetKeyMap: Dict<string, ArtifactSetKey> = {\r\n  \"adventurer\": \"Adventurer\",\r\n  \"archaicPetra\": \"ArchaicPetra\",\r\n  \"berserker\": \"Berserker\",\r\n  \"blizzardStrayer\": \"BlizzardStrayer\",\r\n  \"bloodstainedChivalry\": \"BloodstainedChivalry\",\r\n  \"braveHeart\": \"BraveHeart\",\r\n  \"crimsonWitch\": \"CrimsonWitchOfFlames\",\r\n  \"defenderWill\": \"DefendersWill\",\r\n  \"gambler\": \"Gambler\",\r\n  \"gladiatorFinale\": \"GladiatorsFinale\",\r\n  \"heartOfDepth\": \"HeartOfDepth\",\r\n  \"instructor\": \"Instructor\",\r\n  \"lavaWalker\": \"Lavawalker\",\r\n  \"luckyDog\": \"LuckyDog\",\r\n  \"maidenBeloved\": \"MaidenBeloved\",\r\n  \"martialArtist\": \"MartialArtist\",\r\n  \"noblesseOblige\": \"NoblesseOblige\",\r\n  \"prayersForDestiny\": \"PrayersForDestiny\",\r\n  \"prayersForIllumination\": \"PrayersForIllumination\",\r\n  \"prayersForWisdom\": \"PrayersForWisdom\",\r\n  \"prayersToSpringtime\": \"PrayersToSpringtime\",\r\n  \"resolutionOfSojourner\": \"ResolutionOfSojourner\",\r\n  \"retracingBolide\": \"RetracingBolide\",\r\n  \"scholar\": \"Scholar\",\r\n  \"exile\": \"TheExile\",\r\n  \"thunderingFury\": \"ThunderingFury\",\r\n  \"thunderSmoother\": \"Thundersoother\",\r\n  \"tinyMiracle\": \"TinyMiracle\",\r\n  \"travelingDoctor\": \"TravelingDoctor\",\r\n  \"viridescentVenerer\": \"ViridescentVenerer\",\r\n  \"wandererTroupe\": \"WanderersTroupe\",\r\n  \"tenacityOfTheMillelith\": \"TenacityOfTheMillelith\",\r\n  \"paleFlame\": \"PaleFlame\",\r\n  \"emblemOfSeveredFate\": \"EmblemOfSeveredFate\",\r\n  \"shimenawaReminiscence\": \"ShimenawasReminiscence\",\r\n}\r\nconst ArtifactMainStatKeyMap: Dict<string, MainStatKey> = {\r\n  \"cureEffect\": \"heal_\",\r\n  \"lifeStatic\": \"hp\",\r\n  \"lifePercentage\": \"hp_\",\r\n  \"attackStatic\": \"atk\",\r\n  \"attackPercentage\": \"atk_\",\r\n  // \"defendStatic\": \"def\",\r\n  \"defendPercentage\": \"def_\",\r\n  \"critical\": \"critRate_\",\r\n  // // \"eCritical\": \"\",\r\n  \"criticalDamage\": \"critDMG_\",\r\n  \"elementalMastery\": \"eleMas\",\r\n  \"recharge\": \"enerRech_\",\r\n  \"thunderBonus\": \"electro_dmg_\",\r\n  \"fireBonus\": \"pyro_dmg_\",\r\n  \"waterBonus\": \"hydro_dmg_\",\r\n  \"iceBonus\": \"cryo_dmg_\",\r\n  \"windBonus\": \"anemo_dmg_\",\r\n  \"rockBonus\": \"geo_dmg_\",\r\n  // \"grassBonus\": \"dendro_dmg_\",  // the day will come...\r\n  \"physicalBonus\": \"physical_dmg_\",\r\n  // \"bonus\": \"\",\r\n  // \"aBonus\": \"\",\r\n  // \"bBonus\": \"\",\r\n  // \"eBonus\": \"\",\r\n  // \"qBonus\": \"\",\r\n}\r\nconst ArtifactSubStatKeyMap: Dict<string, SubstatKey> = {\r\n  \"lifeStatic\": \"hp\",\r\n  \"lifePercentage\": \"hp_\",\r\n  \"attackStatic\": \"atk\",\r\n  \"attackPercentage\": \"atk_\",\r\n  \"defendStatic\": \"def\",\r\n  \"defendPercentage\": \"def_\",\r\n  \"critical\": \"critRate_\",\r\n  \"criticalDamage\": \"critDMG_\",\r\n  \"elementalMastery\": \"eleMas\",\r\n  \"recharge\": \"enerRech_\",\r\n}\r\n","import { faArrowLeft, faFileCode, faFileUpload } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Upload } from '@mui/icons-material'\r\nimport { Alert, Box, Button, CardContent, Divider, Grid, styled, Typography } from '@mui/material'\r\nimport { useContext, useMemo, useState } from \"react\"\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport CardDark from '../../Components/Card/CardDark'\r\nimport CardLight from '../../Components/Card/CardLight'\r\nimport { DatabaseContext } from \"../../Database/Database\"\r\nimport { dbStorage } from '../../Database/DBStorage'\r\nimport { importGO, ImportResult as GOImportResult } from '../../Database/exim/go'\r\nimport { importGOOD, ImportResult as GOODImportResult, ImportResultCounter } from '../../Database/exim/good'\r\nimport { importMona } from '../../Database/exim/mona'\r\n\r\nconst InvisInput = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nexport default function UploadCard({ forceUpdate }) {\r\n  const database = useContext(DatabaseContext)\r\n  const { t } = useTranslation(\"settings\");\r\n  const [data, setdata] = useState(\"\")\r\n  const [filename, setfilename] = useState(\"\")\r\n  const [errorMsg, setErrorMsg] = useState(\"\") // TODO localize error msg\r\n  const dataObj: UploadData | undefined = useMemo(() => {\r\n    if (!data) return\r\n    let parsed: any\r\n    try {\r\n      parsed = JSON.parse(data)\r\n      if (typeof parsed !== \"object\") {\r\n        setErrorMsg(\"uploadCard.error.jsonParse\")\r\n        return\r\n      }\r\n    } catch (e) {\r\n      setErrorMsg(\"uploadCard.error.jsonParse\")\r\n      return\r\n    }\r\n    // Figure out the file format\r\n    if (parsed.version === \"1\" && [\"flower\", \"feather\", \"sand\", \"cup\", \"head\"].some(k => Object.keys(parsed).includes(k))) {\r\n      // Parse as mona format\r\n      const imported = importMona(parsed, database)\r\n      if (!imported) {\r\n        setErrorMsg(\"uploadCard.error.monaInvalid\")\r\n        return\r\n      }\r\n      return imported\r\n    } else if (\"version\" in parsed && \"characterDatabase\" in parsed && \"artifactDatabase\" in parsed) {\r\n      // Parse as GO format\r\n      const imported = importGO(parsed)\r\n      if (!imported) {\r\n        setErrorMsg(\"uploadCard.error.goInvalid\")\r\n        return\r\n      }\r\n      return imported\r\n    } else if (parsed.format === \"GOOD\") {\r\n      // Parse as GOOD format\r\n      const imported = importGOOD(parsed, database)\r\n      if (!imported) {\r\n        setErrorMsg(\"uploadCard.error.goInvalid\")\r\n        return\r\n      }\r\n      return imported\r\n    }\r\n    setErrorMsg(\"uploadCard.error.unknown\")\r\n    return\r\n  }, [data, database])\r\n\r\n  const reset = () => {\r\n    setdata(\"\")\r\n    setfilename(\"\")\r\n    forceUpdate()\r\n  }\r\n  const onUpload = async e => {\r\n    const file = e.target.files[0]\r\n    e.target.value = null // reset the value so the same file can be uploaded again...\r\n    if (file) setfilename(file.name)\r\n    const reader = new FileReader()\r\n    reader.onload = () => setdata(reader.result as string)\r\n    reader.readAsText(file)\r\n  }\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}><Trans t={t} i18nKey=\"settings:uploadCard.title\" /></CardContent>\r\n    <CardContent>\r\n      <Grid container spacing={2} sx={{ mb: 1 }}>\r\n        <Grid item>\r\n          <label htmlFor=\"icon-button-file\">\r\n            <InvisInput accept=\".json\" id=\"icon-button-file\" type=\"file\" onChange={onUpload} />\r\n            <Button component=\"span\" startIcon={<Upload />}>Upload</Button>\r\n          </label>\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <CardDark sx={{ px: 2, py: 1 }}>\r\n            <Typography>{filename ? <span><FontAwesomeIcon icon={faFileCode} /> {filename}</span> : <span><FontAwesomeIcon icon={faArrowLeft} /> <Trans t={t} i18nKey=\"settings:uploadCard.hint\" /></span>}</Typography>\r\n          </CardDark>\r\n        </Grid>\r\n      </Grid>\r\n      <Typography gutterBottom variant=\"caption\"><Trans t={t} i18nKey=\"settings:uploadCard.hintPaste\" /></Typography>\r\n      <Box component=\"textarea\" sx={{ width: \"100%\", fontFamily: \"monospace\", minHeight: \"10em\", mb: 2, resize: \"vertical\" }} value={data} onChange={e => setdata(e.target.value)} />\r\n      {UploadInfo(dataObj) ?? errorMsg}\r\n    </CardContent>\r\n    {UploadAction(dataObj, reset)}\r\n  </CardLight>\r\n}\r\n\r\nfunction UploadInfo(data: UploadData | undefined) {\r\n  switch (data?.type) {\r\n    case \"GO\": return <GOUploadInfo data={data} />\r\n    case \"GOOD\": return <GOODUploadInfo data={data} />\r\n  }\r\n}\r\nfunction UploadAction(data: UploadData | undefined, reset: () => void) {\r\n  switch (data?.type) {\r\n    case \"GO\":\r\n    case \"GOOD\": return <GOUploadAction data={data} reset={reset} />\r\n  }\r\n}\r\n\r\nfunction GOODUploadInfo({ data: { source, artifacts, characters, weapons }, data }: { data: GOODImportResult }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  return <CardDark>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Typography>\r\n        <Trans t={t} i18nKey=\"uploadCard.dbSource\" /><strong> {source}</strong>\r\n      </Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      <Grid container spacing={2}>\r\n        <Grid item flexGrow={1}>\r\n          <MergeResult result={artifacts} type=\"arts\" />\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <MergeResult result={weapons} type=\"weapons\" />\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <MergeResult result={characters} type=\"chars\" />\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\nfunction MergeResult({ result, type }: { result?: ImportResultCounter, type: string }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  if (!result) return null\r\n  return <CardLight >\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Typography>\r\n        <Trans t={t} i18nKey={`count.${type}`} /> {result.total ?? 0}\r\n      </Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Typography><Trans t={t} i18nKey=\"count.new\" /> <strong>{result.new}</strong> / {result.total}</Typography>\r\n      <Typography><Trans t={t} i18nKey=\"count.updated\" /> <strong>{result.updated}</strong> / {result.total}</Typography>\r\n      <Typography><Trans t={t} i18nKey=\"count.unchanged\" /> <strong>{result.unchanged}</strong> / {result.total}</Typography>\r\n      <Typography color=\"warning.main\"><Trans t={t} i18nKey=\"count.removed\" /> <strong>{result.removed}</strong></Typography>\r\n      {!!result.invalid?.length && <div>\r\n        <Typography color=\"error.main\"><Trans t={t} i18nKey=\"count.invalid\" /> <strong>{result.invalid.length}</strong> / {result.total}</Typography>\r\n        <Box component=\"textarea\" sx={{ width: \"100%\", fontFamily: \"monospace\", minHeight: \"10em\", resize: \"vertical\" }} value={JSON.stringify(result.invalid, undefined, 2)} disabled />\r\n      </div>}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction GOUploadInfo({ data: { charCount, artCount } }: { data: GOImportResult }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  return <CardDark>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Trans t={t} i18nKey=\"uploadCard.goUpload.title\" />\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent><Grid container spacing={1}>\r\n      <Grid item xs={12} md={6}> <Typography><Trans t={t} i18nKey=\"count.chars\" /> {charCount}</Typography></Grid>\r\n      <Grid item xs={12} md={6}> <Typography><Trans t={t} i18nKey=\"count.arts\" /> {artCount}</Typography></Grid>\r\n      {<Grid item xs={12} ><Alert severity=\"warning\" ><Trans t={t} i18nKey=\"uploadCard.goUpload.migrate\" /></Alert></Grid>}\r\n    </Grid></CardContent>\r\n  </CardDark>\r\n}\r\n\r\nfunction GOUploadAction({ data: { storage }, data, reset }: { data: GOImportResult | GOODImportResult, reset: () => void }) {\r\n  const database = useContext(DatabaseContext)\r\n  const { t } = useTranslation(\"settings\")\r\n  const dataValid = data.type === \"GO\" ? data.charCount || data.artCount : (data.characters?.total || data.artifacts?.total || data.weapons?.total)\r\n  const replaceDB = () => {\r\n    dbStorage.removeForKeys(k => k.startsWith(\"artifact_\") || k.startsWith(\"char_\") || k.startsWith(\"weapon_\"))\r\n    dbStorage.copyFrom(storage)\r\n    database.reloadStorage()\r\n    reset()\r\n  }\r\n\r\n  return <><Divider /><CardContent sx={{ py: 1 }}>\r\n    <Button color={dataValid ? \"success\" : \"error\"} disabled={!dataValid} onClick={replaceDB} startIcon={<FontAwesomeIcon icon={faFileUpload} />}><Trans t={t} i18nKey=\"settings:uploadCard.replaceDatabase\" /></Button>\r\n  </CardContent></>\r\n}\r\n\r\ntype UploadData = GOImportResult | GOODImportResult","import { IArtifact } from \"../../Types/artifact\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport { ArtCharDatabase } from \"../Database\";\r\nimport { DBStorage, SandboxStorage } from \"../DBStorage\";\r\nimport { setDBVersion } from \"../utils\";\r\n\r\nexport function importGO(data: any): ImportResult | undefined {\r\n  const storage = new SandboxStorage()\r\n  const { version, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay } = data as Partial<DatabaseObj>\r\n  if (!version || !characterDatabase || !artifactDatabase)\r\n    return\r\n\r\n  characterDatabase && Object.entries(characterDatabase).forEach(([charKey, char]) => storage.set(`char_${charKey}`, char))\r\n  artifactDatabase && Object.entries(artifactDatabase).forEach(([id, art]) => storage.set(id, art))\r\n  //override version\r\n  version && setDBVersion(storage, version)\r\n  artifactDisplay && storage.set(\"ArtifactDisplay.state\", artifactDisplay)\r\n  characterDisplay && storage.set(\"CharacterDisplay.state\", characterDisplay)\r\n  buildsDisplay && storage.set(\"BuildsDisplay.state\", buildsDisplay)\r\n\r\n  const database = new ArtCharDatabase(storage) // validate storage entries\r\n  //TODO: figure out the # of dups/upgrades/new/foddered, not just total char/art count below.\r\n  return { type: \"GO\", storage, charCount: database.chars.keys.length, artCount: database.arts.keys.length }\r\n}\r\n\r\ntype DatabaseObj = {\r\n  version: number,\r\n  characterDatabase: Dict<CharacterKey, ICharacter>\r\n  artifactDatabase: Dict<string, IArtifact>\r\n  artifactDisplay: any\r\n  characterDisplay: any\r\n  buildsDisplay: any\r\n}\r\nexport type ImportResult = { type: \"GO\", storage: DBStorage, charCount: number, artCount: number }\r\n","import { CardContent, Divider, Typography } from '@mui/material'\r\nimport ReactGA from 'react-ga'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport CardDark from '../Components/Card/CardDark'\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate'\r\nimport DownloadCard from './Components/DownloadCard'\r\nimport LanguageCard from './Components/LanguageCard'\r\nimport TCToggleCard from './Components/TCToggleCard'\r\nimport UploadCard from './Components/UploadCard'\r\n\r\nexport default function SettingsDisplay() {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const [, forceUpdate] = useForceUpdate()\r\n  ReactGA.pageview('/setting')\r\n\r\n  return <CardDark sx={{ my: 1 }}>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Typography variant=\"subtitle1\">\r\n        <Trans t={t} i18nKey=\"title\" />\r\n      </Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n      <LanguageCard />\r\n      <DownloadCard forceUpdate={forceUpdate} />\r\n      <UploadCard forceUpdate={forceUpdate} />\r\n      <TCToggleCard />\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n"],"sourceRoot":""}