{"version":3,"sources":["Data/Characters/traveler/data.ts","Data/Characters/formula.ts","Data/Weapons/formula.ts","Data/formula.ts","Data/Weapons/Sword/AquilaFavonia/data.ts","Data/Weapons/Sword/FilletBlade/data.ts","Data/Weapons/Sword/SkywardBlade/data.ts","Data/Weapons/Sword/SwordOfDescension/data.ts","Data/Weapons/Sword/TheBlackSword/data.ts","Data/Weapons/Sword/TheFlute/data.ts","Data/Weapons/Sword/TravelersHandySword/data.ts","Data/Weapons/Polearm/CrescentPike/data.ts","Data/Weapons/Polearm/DragonspineSpear/data.ts","Data/Weapons/Polearm/Halberd/data.ts","Data/Weapons/Polearm/SkywardSpine/data.ts","Data/Weapons/Claymore/DebateClub/data.ts","Data/Weapons/Claymore/PrototypeAminus/data.ts","Data/Weapons/Claymore/SkywardPride/data.ts","Data/Weapons/Claymore/SnowTombedStarsilver/data.ts","Data/Weapons/Claymore/TheBell/data.ts","Data/Weapons/Claymore/WhiteIronGreatsword/data.ts","Data/Weapons/Catalyst/EyeOfPerception/data.ts","Data/Weapons/Catalyst/Frostbearer/data.ts","Data/Weapons/Catalyst/OtherworldlyStory/data.ts","Data/Weapons/Catalyst/PrototypeMalice/data.ts","Data/Weapons/Catalyst/SkywardAtlas/data.ts","Data/Weapons/Bow/Messenger/data.ts","Data/Weapons/Bow/RecurveBow/data.ts","Data/Weapons/Bow/SkywardHarp/data.ts","Data/Weapons/Bow/TheViridescentHunt/data.ts"],"names":["data","anemo","geo","electro","formula","albedo","amber","barbara","beidou","bennett","chongyun","diluc","diona","eula","fischl","ganyu","hutao","jean","kaedeharakazuha","kaeya","kamisatoayaka","keqing","klee","lisa","mona","ningguang","noelle","qiqi","razor","rosaria","sucrose","tartaglia","traveler","venti","xiao","xiangling","xingqiu","xinyan","yanfei","zhongli","sword","AquilaFavonia","FilletBlade","SkywardBlade","SwordOfDescension","TheBlackSword","TheFlute","TravelersHandySword","polearm","CrescentPike","DragonspineSpear","Halberd","SkywardSpine","catalyst","EyeOfPerception","Frostbearer","OtherworldlyStory","PrototypeMalice","SkywardAtlas","claymore","DebateClub","PrototypeAminus","SkywardPride","SnowTombedStarsilver","TheBell","WhiteIronGreatsword","bow","Messenger","RecurveBow","SkywardHarp","TheViridescentHunt","character","weapon","crawlObject","f","keys","heal","dmg","stats","basicDMGFormula","refineIndex","hp","s","finalATK","heal_multi","dmg_","regen","vals","finalHP","dmgc","shield","hpMulti","powShield_"],"mappings":"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","file":"static/js/3.4ac230e2.chunk.js","sourcesContent":["\r\nimport anemo from './anemo/data'\r\nimport geo from './geo/data'\r\nimport electro from './electro/data'\r\n\r\nconst data = {\r\n  anemo,\r\n  geo,\r\n  electro,\r\n}\r\nexport default data","import albedo from './albedo/data'\r\nimport amber from './amber/data'\r\nimport barbara from './barbara/data'\r\nimport beidou from './beidou/data'\r\nimport bennett from './bennett/data'\r\nimport chongyun from './chongyun/data'\r\nimport diluc from './diluc/data'\r\nimport diona from './diona/data'\r\nimport eula from './eula/data'\r\nimport fischl from './fischl/data'\r\nimport ganyu from './ganyu/data'\r\nimport hutao from './hutao/data'\r\nimport jean from './jean/data'\r\nimport kaedeharakazuha from './kaedeharakazuha/data'\r\nimport kaeya from './kaeya/data'\r\nimport kamisatoayaka from './kamisatoayaka/data'\r\nimport keqing from './keqing/data'\r\nimport klee from './klee/data'\r\nimport lisa from './lisa/data'\r\nimport mona from './mona/data'\r\nimport ningguang from './ningguang/data'\r\nimport noelle from './noelle/data'\r\nimport qiqi from './qiqi/data'\r\nimport razor from './razor/data'\r\nimport rosaria from './rosaria/data'\r\nimport sucrose from './sucrose/data'\r\nimport tartaglia from './tartaglia/data'\r\nimport traveler from './traveler/data'\r\nimport venti from './venti/data'\r\nimport xiao from './xiao/data'\r\nimport xiangling from './xiangling/data'\r\nimport xingqiu from './xingqiu/data'\r\nimport xinyan from './xinyan/data'\r\nimport yanfei from './yanfei/data'\r\nimport zhongli from './zhongli/data'\r\nimport { IFormulaSheet } from '../../Types/character'\r\nimport { CharacterKey, ElementKey } from '../../Types/consts'\r\ntype IFormulaSheets = StrictDict<CharacterKey, IFormulaSheet | Dict<ElementKey, IFormulaSheet>>\r\nconst formula: IFormulaSheets = {\r\n  albedo,\r\n  amber,\r\n  barbara,\r\n  beidou,\r\n  bennett,\r\n  chongyun,\r\n  diluc,\r\n  diona,\r\n  eula,\r\n  fischl,\r\n  ganyu,\r\n  hutao,\r\n  jean,\r\n  kaedeharakazuha,\r\n  kaeya,\r\n  kamisatoayaka,\r\n  keqing,\r\n  klee,\r\n  lisa,\r\n  mona,\r\n  ningguang,\r\n  noelle,\r\n  qiqi,\r\n  razor,\r\n  rosaria,\r\n  sucrose,\r\n  tartaglia,\r\n  traveler,\r\n  venti,\r\n  xiao,\r\n  xiangling,\r\n  xingqiu,\r\n  xinyan,\r\n  yanfei,\r\n  zhongli\r\n};\r\nexport default formula\r\n","import AquilaFavonia from './Sword/AquilaFavonia/data'\r\n// import BlackcliffLongsword from './Sword/BlackcliffLongsword/data'\r\n// import CoolSteel from './Sword/CoolSteel/data'\r\n// import DarkIronSword from './Sword/DarkIronSword/data'\r\n// import DullBlade from './Sword/DullBlade/data'\r\n// import FavoniusSword from './Sword/FavoniusSword/data'\r\n// import FesteringDesire from './Sword/FesteringDesire/data'\r\nimport FilletBlade from './Sword/FilletBlade/data'\r\n// import FreedomSworn from './Sword/FreedomSworn/data'\r\n// import HarbingerOfDawn from './Sword/HarbingerOfDawn/data'\r\n// import IronSting from './Sword/IronSting/data'\r\n// import LionsRoar from './Sword/LionsRoar/data'\r\n// import PrimordialJadeCutter from './Sword/PrimordialJadeCutter/data'\r\n// import PrototypeRancour from './Sword/PrototypeRancour/data'\r\n// import RoyalLongsword from './Sword/RoyalLongsword/data'\r\n// import SacrificialSword from './Sword/SacrificialSword/data'\r\n// import SilverSword from './Sword/SilverSword/data'\r\n// import SkyriderSword from './Sword/SkyriderSword/data'\r\nimport SkywardBlade from './Sword/SkywardBlade/data'\r\n// import SummitShaper from './Sword/SummitShaper/data'\r\nimport SwordOfDescension from './Sword/SwordOfDescension/data'\r\n// import TheAlleyFlash from './Sword/TheAlleyFlash/data'\r\nimport TheBlackSword from './Sword/TheBlackSword/data'\r\nimport TheFlute from './Sword/TheFlute/data'\r\nimport TravelersHandySword from './Sword/TravelersHandySword/data'\r\n\r\n// import BeginnersProtector from './Polearm/BeginnersProtector/data'\r\n// import BlackcliffPole from './Polearm/BlackcliffPole/data'\r\n// import BlackTassel from './Polearm/BlackTassel/data'\r\nimport CrescentPike from './Polearm/CrescentPike/data'\r\n// import Deathmatch from './Polearm/Deathmatch/data'\r\n// import DragonsBane from './Polearm/DragonsBane/data'\r\nimport DragonspineSpear from './Polearm/DragonspineSpear/data'\r\n// import FavoniusLance from './Polearm/FavoniusLance/data'\r\nimport Halberd from './Polearm/Halberd/data'\r\n// import IronPoint from './Polearm/IronPoint/data'\r\n// import LithicSpear from './Polearm/LithicSpear/data'\r\n// import PrimordialJadeWingedSpear from './Polearm/PrimordialJadeWingedSpear/data'\r\n// import PrototypeGrudge from './Polearm/PrototypeGrudge/data'\r\n// import RoyalSpear from './Polearm/RoyalSpear/data'\r\nimport SkywardSpine from './Polearm/SkywardSpine/data'\r\n// import StaffOfHoma from './Polearm/StaffOfHoma/data'\r\n// import VortexVanquisher from './Polearm/VortexVanquisher/data'\r\n// import WhiteTassel from './Polearm/WhiteTassel/data'\r\n\r\n// import BlackcliffSlasher from './Claymore/BlackcliffSlasher/data'\r\n// import BloodtaintedGreatsword from './Claymore/BloodtaintedGreatsword/data'\r\nimport DebateClub from './Claymore/DebateClub/data'\r\n// import FavoniusGreatsword from './Claymore/FavoniusGreatsword/data'\r\n// import FerrousShadow from './Claymore/FerrousShadow/data'\r\n// import LithicBlade from './Claymore/LithicBlade/data'\r\n// import OldMercsPal from './Claymore/OldMercsPal/data'\r\nimport PrototypeAminus from './Claymore/PrototypeAminus/data'\r\n// import Quartz from './Claymore/Quartz/data'\r\n// import Rainslasher from './Claymore/Rainslasher/data'\r\n// import RoyalGreatsword from './Claymore/RoyalGreatsword/data'\r\n// import SacrificialGreatsword from './Claymore/SacrificialGreatsword/data'\r\n// import SerpentSpine from './Claymore/SerpentSpine/data'\r\n// import SkyriderGreatsword from './Claymore/SkyriderGreatsword/data'\r\nimport SkywardPride from './Claymore/SkywardPride/data'\r\nimport SnowTombedStarsilver from './Claymore/SnowTombedStarsilver/data'\r\n// import SongOfBrokenPines from './Claymore/SongOfBrokenPines/data'\r\nimport TheBell from './Claymore/TheBell/data'\r\n// import TheUnforged from './Claymore/TheUnforged/data'\r\n// import WasterGreatsword from './Claymore/WasterGreatsword/data'\r\n// import Whiteblind from './Claymore/Whiteblind/data'\r\nimport WhiteIronGreatsword from './Claymore/WhiteIronGreatsword/data'\r\n// import WolfsGravestone from './Claymore/WolfsGravestone/data'\r\n\r\n// import ApprenticesNotes from './Catalyst/ApprenticesNotes/data'\r\n// import BlackcliffAgate from './Catalyst/BlackcliffAgate/data'\r\n// import DodocoTales from './Catalyst/DodocoTales/data'\r\n// import EmeraldOrb from './Catalyst/EmeraldOrb/data'\r\nimport EyeOfPerception from './Catalyst/EyeOfPerception/data'\r\n// import FavoniusCodex from './Catalyst/FavoniusCodex/data'\r\nimport Frostbearer from './Catalyst/Frostbearer/data'\r\n// import LostPrayerToTheSacredWinds from './Catalyst/LostPrayerToTheSacredWinds/data'\r\n// import MagicGuide from './Catalyst/MagicGuide/data'\r\n// import MappaMare from './Catalyst/MappaMare/data'\r\n// import MemoryOfDust from './Catalyst/MemoryOfDust/data'\r\nimport OtherworldlyStory from './Catalyst/OtherworldlyStory/data'\r\n// import PocketGrimoire from './Catalyst/PocketGrimoire/data'\r\nimport PrototypeMalice from './Catalyst/PrototypeMalice/data'\r\n// import RoyalGrimoire from './Catalyst/RoyalGrimoire/data'\r\n// import SacrificialFragments from './Catalyst/SacrificialFragments/data'\r\nimport SkywardAtlas from './Catalyst/SkywardAtlas/data'\r\n// import SolarPearl from './Catalyst/SolarPearl/data'\r\n// import TheWidsith from './Catalyst/TheWidsith/data'\r\n// import ThrillingTalesOfDragonSlayers from './Catalyst/ThrillingTalesOfDragonSlayers/data'\r\n// import TwinNephrite from './Catalyst/TwinNephrite/data'\r\n// import WineAndSong from './Catalyst/WineAndSong/data'\r\n\r\n// import AlleyHunter from './Bow/AlleyHunter/data'\r\n// import AmosBow from './Bow/AmosBow/data'\r\n// import BlackcliffWarbow from './Bow/BlackcliffWarbow/data'\r\n// import CompoundBow from './Bow/CompoundBow/data'\r\n// import EbonyBow from './Bow/EbonyBow/data'\r\n// import ElegyForTheEnd from './Bow/ElegyForTheEnd/data'\r\n// import FavoniusWarbow from './Bow/FavoniusWarbow/data'\r\n// import HuntersBow from './Bow/HuntersBow/data'\r\nimport Messenger from './Bow/Messenger/data'\r\n// import MitternachtsWaltz from './Bow/MitternachtsWaltz/data'\r\n// import PrototypeCrescent from './Bow/PrototypeCrescent/data'\r\n// import RavenBow from './Bow/RavenBow/data'\r\nimport RecurveBow from './Bow/RecurveBow/data'\r\n// import RoyalBow from './Bow/RoyalBow/data'\r\n// import Rust from './Bow/Rust/data'\r\n// import SacrificialBow from './Bow/SacrificialBow/data'\r\n// import SeasonedHuntersBow from './Bow/SeasonedHuntersBow/data'\r\n// import SharpshootersOath from './Bow/SharpshootersOath/data'\r\nimport SkywardHarp from './Bow/SkywardHarp/data'\r\n// import Slingshot from './Bow/Slingshot/data'\r\n// import TheStringless from './Bow/TheStringless/data'\r\nimport TheViridescentHunt from './Bow/TheViridescentHunt/data'\r\n// import WindblumeOde from './Bow/WindblumeOde/data'\r\n\r\nconst sword = {\r\n  AquilaFavonia,\r\n  // BlackcliffLongsword,\r\n  // CoolSteel,\r\n  // DarkIronSword,\r\n  // DullBlade,\r\n  // FavoniusSword,\r\n  // FesteringDesire,\r\n  FilletBlade,\r\n  // FreedomSworn,\r\n  // HarbingerOfDawn,\r\n  // IronSting,\r\n  // LionsRoar,\r\n  // PrimordialJadeCutter,\r\n  // PrototypeRancour,\r\n  // RoyalLongsword,\r\n  // SacrificialSword,\r\n  // SilverSword,\r\n  // SkyriderSword,\r\n  SkywardBlade,\r\n  // SummitShaper,\r\n  SwordOfDescension,\r\n  // TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  TravelersHandySword,\r\n}\r\n\r\nconst polearm = {\r\n  // BeginnersProtector,\r\n  // BlackcliffPole,\r\n  // BlackTassel,\r\n  CrescentPike,\r\n  // Deathmatch,\r\n  // DragonsBane,\r\n  DragonspineSpear,\r\n  // FavoniusLance,\r\n  Halberd,\r\n  // IronPoint,\r\n  // LithicSpear,\r\n  // PrimordialJadeWingedSpear,\r\n  // PrototypeGrudge,\r\n  // RoyalSpear,\r\n  SkywardSpine,\r\n  // StaffOfHoma,\r\n  // VortexVanquisher,\r\n  // WhiteTassel,\r\n}\r\n\r\nconst catalyst = {\r\n  // ApprenticesNotes,\r\n  // BlackcliffAgate,\r\n  // DodocoTales,\r\n  // EmeraldOrb,\r\n  EyeOfPerception,\r\n  // FavoniusCodex,\r\n  Frostbearer,\r\n  // LostPrayerToTheSacredWinds,\r\n  // MagicGuide,\r\n  // MappaMare,\r\n  // MemoryOfDust,\r\n  OtherworldlyStory,\r\n  // PocketGrimoire,\r\n  PrototypeMalice,\r\n  // RoyalGrimoire,\r\n  // SacrificialFragments,\r\n  SkywardAtlas,\r\n  // SolarPearl,\r\n  // TheWidsith,\r\n  // ThrillingTalesOfDragonSlayers,\r\n  // TwinNephrite,\r\n  // WineAndSong,\r\n}\r\n\r\nconst claymore = {\r\n  // BlackcliffSlasher,\r\n  // BloodtaintedGreatsword,\r\n  DebateClub,\r\n  // FavoniusGreatsword,\r\n  // FerrousShadow,\r\n  // LithicBlade,\r\n  // OldMercsPal,\r\n  PrototypeAminus,\r\n  // Quartz,\r\n  // Rainslasher,\r\n  // RoyalGreatsword,\r\n  // SacrificialGreatsword,\r\n  // SerpentSpine,\r\n  // SkyriderGreatsword,\r\n  SkywardPride,\r\n  SnowTombedStarsilver,\r\n  // SongOfBrokenPines,\r\n  TheBell,\r\n  // TheUnforged,\r\n  // WasterGreatsword,\r\n  // Whiteblind,\r\n  WhiteIronGreatsword,\r\n  // WolfsGravestone,\r\n}\r\n\r\nconst bow = {\r\n  // AlleyHunter,\r\n  // AmosBow,\r\n  // BlackcliffWarbow,\r\n  // CompoundBow,\r\n  // EbonyBow,\r\n  // ElegyForTheEnd,\r\n  // FavoniusWarbow,\r\n  // HuntersBow,\r\n  Messenger,\r\n  // MitternachtsWaltz,\r\n  // PrototypeCrescent,\r\n  // RavenBow,\r\n  RecurveBow,\r\n  // RoyalBow,\r\n  // Rust,\r\n  // SacrificialBow,\r\n  // SeasonedHuntersBow,\r\n  // SharpshootersOath,\r\n  SkywardHarp,\r\n  // Slingshot,\r\n  // TheStringless,\r\n  TheViridescentHunt,\r\n  // WindblumeOde,\r\n}\r\n\r\nconst formula = {\r\n  ...sword,\r\n  ...bow,\r\n  ...polearm,\r\n  ...catalyst,\r\n  ...claymore,\r\n}\r\nexport default formula","import { crawlObject } from '../Util/Util'\r\nimport character from './Characters/formula'\r\nimport weapon from './Weapons/formula'\r\nconst formula = {\r\n  character,\r\n  weapon\r\n}\r\n\r\ncrawlObject(formula, [], f => typeof f === \"function\", (formula, keys) => formula.keys = keys)\r\n\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  heal: [100, 115, 130, 145, 160],\r\n  dmg: [200, 230, 260, 290, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalATK) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 280, 320, 360, 400]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [20, 25, 30, 35, 40]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(200, stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  dmg_: [20, 25, 30, 35, 40],\r\n  heal: [60, 70, 80, 90, 100]\r\n}\r\nconst formula: ISubFormula = {\r\n  regen: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalATK) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  vals: [100, 125, 150, 175, 200]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.vals[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [1, 1.25, 1.5, 1.75, 2]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [20, 25, 30, 35, 40]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [160, 200, 240, 280, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg:  [40, 55, 70, 85, 100]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [60, 75, 90, 105, 120]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 300, 360, 420, 480]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 100, 120, 140, 160]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  shield: [20, 23, 26, 29, 32]\r\n}\r\nconst formula: ISubFormula = {\r\n  shield: stats => {\r\n    const hpMulti = data.shield[stats.weapon.refineIndex] / 100\r\n    return [s => hpMulti * s.finalHP * (1 + s.powShield_ / 100) * 1.5, [\"finalHP\", \"powShield_\"]]\r\n  }\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [8, 10, 12, 14, 16]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 270, 300, 330, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [1, 1.25, 1.5, 1.75, 2]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [4, 4.5, 5, 5.5, 6]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [160, 200, 240, 280, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [100, 125, 150, 175, 200]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [8, 10, 12, 14, 16]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(125, stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  vals: [40, 50, 60, 70, 80]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.vals[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula"],"sourceRoot":""}