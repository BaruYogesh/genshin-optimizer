{"version":3,"file":"static/js/354.2733620b.chunk.js","mappings":"+OAIMA,GAAuBC,EAAAA,EAAAA,OAAK,kBAAM,4JACzB,SAASC,IAAoB,IAAD,EACnCC,GAAWC,EAAAA,EAAAA,MACXC,GAAiBC,EAAAA,EAAAA,MAAjBD,aAEN,OADoBE,EAAAA,GAAAA,SAAA,UAA0BF,SAA1B,QAAiD,KAE5D,SAAC,KAAD,CAAUG,GAAG,gBACf,SAAC,IAAD,CAAKC,GAAI,EAAGC,QAAQ,OAAOC,cAAc,SAASC,IAAK,EAAvD,SACJP,IAAgB,SAAC,WAAD,CAAgBQ,UAAU,SAAC,IAAD,CAAUC,QAAQ,cAAcC,MAAM,OAAOC,OAAQ,MAA/E,UACf,SAAChB,EAAD,CAAsBK,aAAcA,EAAcY,QAAS,kBAAMd,EAAS","sources":["PageCharacter/CharacterDisplay.tsx"],"sourcesContent":["import { Box, Skeleton } from '@mui/material';\r\nimport React, { lazy } from 'react';\r\nimport { Navigate, useNavigate, useParams } from 'react-router';\r\nimport { allCharacterKeys, CharacterKey } from '../Types/consts';\r\nconst CharacterDisplayCard = lazy(() => import('./CharacterDisplayCard'))\r\nexport default function CharacterDisplay() {\r\n  const navigate = useNavigate();\r\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\r\n  const invalidKey = !allCharacterKeys.includes(characterKey as any ?? \"\")\r\n  if (invalidKey)\r\n    return <Navigate to=\"/character\" />\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    {characterKey && <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n      <CharacterDisplayCard characterKey={characterKey} onClose={() => navigate(\"/character\")} />\r\n    </React.Suspense>}\r\n  </Box>\r\n}\r\n"],"names":["CharacterDisplayCard","lazy","CharacterDisplay","navigate","useNavigate","characterKey","useParams","allCharacterKeys","to","my","display","flexDirection","gap","fallback","variant","width","height","onClose"],"sourceRoot":""}