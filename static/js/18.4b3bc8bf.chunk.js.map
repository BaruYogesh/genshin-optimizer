{"version":3,"sources":["Components/Card/CardLight.tsx","Components/Card/CardDark.tsx","Components/DropdownMenu/DropdownButton.tsx","Components/SqBadge.tsx","Components/StarDisplay.tsx","Character/Character.ts","Assets/icon_bow.png","Assets/Assets.ts","Assets/icon_catalyst.png","Assets/icon_claymore.png","Assets/icon_polearm.png","Assets/icon_sword.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/CloseButton.tsx","Components/ModalWrapper.tsx","Components/SolidToggleButtonGroup.tsx","ReactHooks/useForceUpdate.tsx","Character/CharacterUtil.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/ConditionalWrapper.tsx","StatDependency.ts","Util/SortByFilters.ts","Components/SortByButton.tsx","Components/ToggleButton/ElementToggle.tsx","Util/CharacterSort.ts","Components/Character/CharacterSelectionModal.tsx","Components/InfoComponent.tsx","../node_modules/@mui/material/internal/svg-icons/Cancel.js","../node_modules/@mui/material/Chip/chipClasses.js","../node_modules/@mui/material/Chip/Chip.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","Character/CharacterCard.tsx","Character/CharacterDisplay.tsx"],"names":["CardLight","styled","Card","backgroundColor","theme","palette","contentLight","main","CardDark","contentDark","DropdownButton","title","children","id","props","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","useCallback","event","currentTarget","handleClose","fallback","endIcon","width","aria-controls","aria-haspopup","aria-expanded","undefined","onClick","onClose","MenuListProps","height","SqBadge","name","slot","color","display","padding","fontSize","fontWeight","lineHeight","textAlign","whiteSpace","verticalAlign","borderRadius","contrastText","StarIcon","icon","faStar","Stars","stars","colored","component","Array","keys","map","_","i","Character","this","Error","getElementalName","elementalKey","ElementalData","getLevelString","character","level","ascensionMaxLevel","ascension","getTalentFieldValue","field","key","stats","defVal","evalIfFunc","hasBonusStats","statKey","bonusStats","getStatValueWithBonus","overrideStatKeys","includes","characterBaseStats","calculateBuild","database","characterSheet","weaponSheet","artifactSheets","mainStatAssumptionLevel","artifacts","Object","fromEntries","entries","equippedArtifacts","artid","_getArt","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","values","forEach","art","mainStatKey","mainStatValue","rarity","Math","max","min","substats","substat","value","mergeStats","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","length","condStats","resolve","val","dependencies","GetDependencies","modifiers","PreprocessFormulas","preprocessedStats","formula","characterKey","elementKey","hitMode","infusionAura","reactionMode","talent","constellation","equippedWeapon","weapon","_getWeapon","defaultInitialWeapon","weaponTypeKey","overrideStats","filter","s","additionalStats","characterLevel","characterHP","getBase","characterDEF","characterATK","characterEle","weaponType","tlvl","refineIndex","refinement","specialStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","getTalentStatsAll","weaponATK","getMainStatValue","weaponSubKey","getSubStatKey","getSubStatValue","weaponCond","otherCond","canShow","getDisplayStatKeys","eleKey","basicKeys","isAutoElemental","push","transReactions","ElementToReactionKeys","charFormulas","talentSheet","getTalent","addFormula","fields","parseSection","section","sheets","talentKey","sections","formKey","document","num","artifactSheet","setEffects","setNum","Assets","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","CloseButton","large","t","useTranslation","startIcon","sx","p","minWidth","ScrollModal","Modal","overflow","paddingTop","spacing","paddingBottom","ModalContainer","Container","minHeight","flexDirection","justifyContent","pointerEvents","ModalWrapper","containerProps","variant","SolidToggleButtonGroup","ToggleButtonGroup","shouldForwardProp","prop","baseColor","selectedColor","dark","useForceUpdate","stateDirty","update","getFormulaTargetsDisplayHeading","startsWith","subkey","split","getTalentOfKey","initialCharacter","objectFromKeyMap","allSlotKeys","buildSettings","initialBuildSettings","auto","skill","burst","WeaponToggle","onChange","cb","e","newVal","exclusive","allWeaponTypeKeys","wt","src","size","ConditionalWrapper","condition","wrapper","GetFormulaDependency","dependency","Set","Proxy","get","target","receiver","add","toString","formulaKeyDependency","freeze","Formulas","baseStat","StatData","found","numStages","InsertDependencies","flatMap","dep","has","k","path","Formula","getCurrent","getStage","SortByFilters","sortby","ascending","options","Sort","a","b","filterOption","aV","getValue","bV","localeCompare","diff","tieBreaker","SortByButton","sortKeys","onChangeAsc","i18nKey","selected","disabled","faSortAmountDownAlt","faSortAmountUp","className","ElementToggle","allElements","ele","uncoloredEleIcons","characterSortOptions","characterSheets","new","ck","_getChar","star","defaultSortKeys","CharacterSelectionModal","show","onHide","onSelect","newFirst","useMemo","useContext","DatabaseContext","sortBy","setsortBy","setascending","elementalFilter","setelementalFilter","weaponFilter","setweaponFilter","usePromise","CharacterSheet","getAll","sortOptions","characterKeyList","allCharacterKeys","cKey","sort","py","container","item","flexGrow","xs","md","lg","CharacterBtn","WeaponSheet","alignItems","thumbImg","pl","StatIcon","skillBoost","burstBoost","InfoComponent","pageKey","text","modalTitle","dbStorage","showInfoModal","setshowInfoModal","isArray","getRandomElementFromArray","displayText","closeModal","infoShown","set","faQuestionCircle","ns","key18","maxWidth","createSvgIcon","_jsx","d","getChipUtilityClass","generateUtilityClass","chipClasses","generateUtilityClasses","_excluded","ChipRoot","overridesResolver","styles","ownerState","clickable","onDelete","avatar","capitalize","deleteIcon","root","deletable","deleteIconColor","alpha","primary","_extends","fontFamily","typography","pxToRem","action","transition","transitions","create","cursor","outline","textDecoration","border","boxSizing","opacity","disabledOpacity","marginLeft","marginRight","mode","grey","avatarColorPrimary","avatarColorSecondary","secondary","avatarSmall","WebkitTapHighlightColor","margin","focusVisible","selectedOpacity","focusOpacity","userSelect","hoverOpacity","boxShadow","shadows","hover","focus","iconSmall","deleteIconSmall","ChipLabel","label","textOverflow","paddingLeft","paddingRight","isDeleteKeyboardEvent","keyboardEvent","Chip","React","inProps","ref","useThemeProps","avatarProp","clickableProp","ComponentProp","deleteIconProp","iconProp","onKeyDown","onKeyUp","other","_objectWithoutPropertiesLoose","chipRef","handleRef","useForkRef","handleDeleteIconClick","stopPropagation","small","ButtonBase","classes","slots","composeClasses","useUtilityClasses","moreProps","focusVisibleClassName","disableRipple","customClasses","clsx","CancelIcon","_jsxs","as","preventDefault","current","blur","getCardActionAreaUtilityClass","cardActionAreaClasses","CardActionAreaRoot","focusHighlight","CardActionAreaFocusHighlight","position","top","right","bottom","left","duration","short","CardActionArea","CharacterCard","onEdit","footer","databaseCharacter","updateDatabaseCharacter","useEffect","followChar","actionWrapperFunc","deleteChar","weaponLevel","weaponAscension","weaponName","weaponMainVal","toFixed","Stat","fixedUnit","weaponSubVal","weaponLevelName","weaponPassiveName","passiveName","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","flexShrink","alignSelf","zIndex","mt","flexWrap","textShadow","pb","mb","alignContent","img","mr","getStatName","getStatUnit","arr","artifactSetName","highestNum","defIconSrc","unit","statVal","px","Link","to","pathname","faCalculator","faLink","faTrash","InfoDisplay","lazy","CharacterDisplayCard","initialState","characterKeyToEdit","sortType","element","filterReducer","state","filterInit","initial","CharacterDisplay","useReducer","stateDisplatch","newCharacter","setnewCharacter","dbDirty","forceUpdate","scrollRef","useRef","ReactGA","pageview","followAnyChar","allCharacterSheets","deleteCharacter","chararcterSheet","i18next","window","confirm","removeChar","editCharacter","newChar","updateChar","weaponId","createWeapon","setWeaponLocation","setTimeout","scrollIntoView","behavior","cancelEditCharacter","charKeyList","_getCharKeys","Suspense","setCharacterKey","CharDisplayFooter","sm","faPlus","charKey"],"mappings":"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","file":"static/js/18.4b3bc8bf.chunk.js","sourcesContent":["import { Card, styled } from \"@mui/material\";\r\n\r\nconst CardLight = styled(Card)(({ theme }) => ({\r\n  backgroundColor: theme.palette.contentLight.main\r\n}));\r\n\r\nexport default CardLight","import { Card, styled } from \"@mui/material\";\r\n\r\nconst CardDark = styled(Card)(({ theme }) => ({\r\n  backgroundColor: theme.palette.contentDark.main\r\n}));\r\n\r\nexport default CardDark","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Button, ButtonProps, Menu, Skeleton } from \"@mui/material\";\r\nimport { Suspense, useCallback, useState } from \"react\";\r\n\r\nexport type DropdownButtonProps = Omit<ButtonProps, \"title\"> & {\r\n  title: React.ReactNode,\r\n  id?: string,\r\n  children: React.ReactNode\r\n}\r\nexport default function DropdownButton({ title, children, id = \"dropdownbtn\", ...props }: DropdownButtonProps) {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget),\r\n    [setAnchorEl],\r\n  )\r\n  const handleClose = useCallback(\r\n    () => setAnchorEl(null),\r\n    [setAnchorEl],\r\n  )\r\n\r\n  return <Suspense fallback={<Button endIcon={<KeyboardArrowDown />}{...props}><Skeleton width={50} /></Button>} >\r\n    <Button\r\n      {...props}\r\n      id={id}\r\n      aria-controls=\"basic-menu\"\r\n      aria-haspopup=\"true\"\r\n      aria-expanded={open ? 'true' : undefined}\r\n      onClick={handleClick}\r\n      endIcon={<KeyboardArrowDown />}\r\n    >\r\n      {title}\r\n    </Button>\r\n    <Menu\r\n      id=\"basic-menu\"\r\n      anchorEl={anchorEl}\r\n      open={open}\r\n      onClose={handleClose}\r\n      MenuListProps={{\r\n        'aria-labelledby': id,\r\n      }}\r\n      onClick={handleClose}\r\n    >\r\n      {/* set Skeleton to be really high so the taller dropdowns can still be placed properly... */}\r\n      <Suspense fallback={<Skeleton width=\"100%\" height=\"1000\" />}>\r\n        {children}\r\n      </Suspense>\r\n    </Menu>\r\n  </Suspense>\r\n}","import { styled } from \"@mui/material\";\r\n\r\nconst SqBadge = styled(\"span\", {\r\n  name: 'SqBadge',\r\n  slot: 'Root',\r\n})(({ theme, color = \"primary\" }) => ({\r\n  display: \"inline-block\",\r\n  padding: \".25em .4em\",\r\n  fontSize: \"75%\",\r\n  fontWeight: 700,\r\n  lineHeight: 1,\r\n  textAlign: \"center\",\r\n  whiteSpace: \"nowrap\",\r\n  verticalAlign: \"baseline\",\r\n  borderRadius: \".25em\",\r\n  backgroundColor: theme.palette[color]?.main,\r\n  color: theme.palette[color]?.contrastText\r\n}))\r\nexport default SqBadge","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Typography } from '@mui/material'\r\nimport { Rarity } from '../Types/consts'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\r\n  <Typography color={colored ? \"warning.main\" : undefined} component=\"span\">\r\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n  </Typography>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { ArtifactSetKey, ElementKey, SlotKey } from \"../Types/consts\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { characterBaseStats, mergeStats, overrideStatKeys } from \"../Util/StatUtil\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport { defaultInitialWeapon } from \"../Weapon/WeaponUtil\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey: ElementKey | \"physical\"): string =>\r\n    ElementalData[elementalKey].name\r\n  static getLevelString = (character: ICachedCharacter): string =>\r\n    `${character.level}/${ascensionMaxLevel[character.ascension]}`\r\n\r\n  static getTalentFieldValue = (field: IFieldDisplay, key: keyof IFieldDisplay, stats = {}, defVal = \"\"): any => {\r\n    if (!field[key]) return defVal\r\n    return evalIfFunc(field[key] as any, stats!)\r\n  }\r\n\r\n  static hasBonusStats = (character: ICachedCharacter, statKey): boolean => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasBonusStats(character, \"hp\") || Character.hasBonusStats(character, \"hp_\") || Character.hasBonusStats(character, \"characterHP\")\r\n    if (statKey === \"finalDEF\")\r\n      return Character.hasBonusStats(character, \"def\") || Character.hasBonusStats(character, \"def_\") || Character.hasBonusStats(character, \"characterDEF\")\r\n    if (statKey === \"finalATK\")\r\n      return Character.hasBonusStats(character, \"atk\") || Character.hasBonusStats(character, \"atk_\") || Character.hasBonusStats(character, \"characterATK\")\r\n    return character?.bonusStats ? (statKey in character.bonusStats) : false;\r\n  }\r\n\r\n  static getStatValueWithBonus = (character: ICachedCharacter, statKey: string) => {\r\n    if (overrideStatKeys.includes(statKey))\r\n      return character.bonusStats?.[statKey] ?? characterBaseStats(character)[statKey] ?? 0\r\n    else\r\n      return character.bonusStats?.[statKey] ?? 0\r\n  }\r\n\r\n  static calculateBuild = (character: ICachedCharacter, database: ArtCharDatabase, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, mainStatAssumptionLevel = 0): ICalculatedStats => {\r\n    const artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, database._getArt(artid)]))\r\n    const initialStats = Character.createInitialStats(character, database, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats: ICalculatedStats, artifacts: Dict<SlotKey, ICachedArtifact>, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>): ICalculatedStats => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    const artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, initialStats, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(stats.mainStatAssumptionLevel, art.rarity * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    mergeStats(stats, artifactSetEffectsStats)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      mergeStats(stats, condStats)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats, stats?.modifiers)\r\n    const { initialStats: preprocessedStats, formula } = PreprocessFormulas(dependencies, stats)\r\n    formula(preprocessedStats)\r\n    return { ...stats, ...preprocessedStats }\r\n  }\r\n\r\n  static createInitialStats = (character: ICachedCharacter, database: ArtCharDatabase, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    const { key: characterKey, bonusStats = {}, elementKey, level, ascension, hitMode, infusionAura, reactionMode, talent, constellation, equippedArtifacts, conditionalValues = {}, equippedWeapon } = character\r\n    const weapon = database._getWeapon(equippedWeapon) ?? defaultInitialWeapon(characterSheet.weaponTypeKey) // need to ensure all characters have a weapon\r\n\r\n    const overrideStats = Object.fromEntries(Object.entries(bonusStats).filter(([s]) => overrideStatKeys.includes(s)))\r\n    const additionalStats = Object.fromEntries(Object.entries(bonusStats).filter(([s]) => !overrideStatKeys.includes(s)))\r\n    //generate the initalStats obj with data from Character \r\n    let initialStats = characterBaseStats(character)\r\n    initialStats.characterKey = characterKey\r\n    initialStats.characterLevel = level\r\n    initialStats.characterHP = characterSheet.getBase(\"characterHP\", level, ascension)\r\n    initialStats.characterDEF = characterSheet.getBase(\"characterDEF\", level, ascension)\r\n    initialStats.characterATK = characterSheet.getBase(\"characterATK\", level, ascension)\r\n    initialStats.characterEle = characterSheet.elementKey ?? elementKey ?? \"anemo\";\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = Object.fromEntries(Object.entries(talent ?? {}).map(([key, value]) => [key, value - 1])) as any;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = { key: weapon.key, refineIndex: weapon.refinement - 1 }\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n    initialStats = { ...initialStats, ...overrideStats }\r\n    mergeStats(initialStats, additionalStats)\r\n    //add specialized stat\r\n    const specialStatKey = characterSheet.getSpecializedStat(ascension)\r\n    if (specialStatKey) {\r\n      const specializedStatVal = characterSheet.getSpecializedStatVal(ascension)\r\n      mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n    }\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats, initialStats.characterEle).forEach(s => mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponATK = weaponSheet.getMainStatValue(weapon.level, weapon.ascension)\r\n    initialStats.weaponATK = weaponATK\r\n    const weaponSubKey = weaponSheet.getSubStatKey()\r\n    if (weaponSubKey) mergeStats(initialStats, { [weaponSubKey]: weaponSheet.getSubStatValue(weapon.level, weapon.ascension) })\r\n    mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      if (keys[0] === \"character\" && keys[3] === \"talents\" && keys[4] !== elementKey) return //fix for Traveler, make sure conditionals match element.\r\n      if (!Conditional.canShow(conditional, initialStats)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n\r\n  static getDisplayStatKeys = (stats: ICalculatedStats, { characterSheet, weaponSheet, artifactSheets }: { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet> }) => {\r\n    const eleKey = stats.characterEle\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = characterSheet.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = characterSheet.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    const charFormulas = {}\r\n    const talentSheet = characterSheet.getTalent(eleKey)\r\n    const addFormula = (fields, key) => fields.forEach(field => {\r\n      if (!field.formula || !field?.canShow?.(stats)) return\r\n      if (!charFormulas[key]) charFormulas[key] = []\r\n      charFormulas[key].push((field.formula as any).keys)\r\n    })\r\n    const parseSection = (section, key) => {\r\n      //conditional\r\n      if (section.conditional && Conditional.canShow(section.conditional, stats)) {\r\n        const { fields }: { fields?: Array<IFieldDisplay> } = Conditional.resolve(section.conditional, stats, null)\r\n        fields && addFormula(fields, key)\r\n      }\r\n      //fields\r\n      if (section.fields) addFormula(section.fields, key)\r\n    }\r\n    talentSheet && Object.entries(talentSheet.sheets).forEach(([talentKey, { sections }]) => {\r\n      if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n      sections.forEach(section => parseSection(section, `talentKey_${talentKey}`))\r\n    })\r\n\r\n    const formKey = `weapon_${stats.weapon.key}`\r\n    weaponSheet.document && weaponSheet.document.map(section => parseSection(section, formKey))\r\n\r\n    stats.setToSlots && Object.entries(stats.setToSlots).map(([setKey, slots]) => [setKey, slots.length]).forEach(([setKey, num]) => {\r\n      const artifactSheet = artifactSheets[setKey] as ArtifactSheet\r\n      if (!artifactSheet) return\r\n      Object.entries(artifactSheet.setEffects).forEach(([setNum, { document }]) => {\r\n        if (num < parseInt(setNum)) return\r\n        document && document.map(section => parseSection(section, `artifact_${setKey}_${setNum}`))\r\n      })\r\n    })\r\n\r\n    return { basicKeys, ...charFormulas, transReactions }\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/icon_bow.7ceaa8e2.png\";","import bow from './icon_bow.png'\r\nimport catalyst from './icon_catalyst.png'\r\nimport claymore from './icon_claymore.png'\r\nimport polearm from './icon_polearm.png'\r\nimport sword from './icon_sword.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nconst Assets = {\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/icon_catalyst.db078b7b.png\";","export default __webpack_public_path__ + \"static/media/icon_claymore.63b1abb8.png\";","export default __webpack_public_path__ + \"static/media/icon_polearm.e5f4a2a1.png\";","export default __webpack_public_path__ + \"static/media/icon_sword.619c9c2d.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { Close } from \"@mui/icons-material\";\r\nimport { Button, ButtonProps } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\ntype CloseButtonProps = ButtonProps & {\r\n  large?: boolean\r\n}\r\nexport default function CloseButton({ large = false, ...props }: CloseButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  if (large)\r\n    return <Button color=\"error\" startIcon={<Close />} {...props} >{t`close`}</Button>\r\n  return <Button color=\"error\" sx={{ p: 1, minWidth: 0 }} {...props} >\r\n    <Close />\r\n  </Button>\r\n}","import { CardContent, Container, ContainerProps, Modal, ModalProps, Skeleton, styled } from \"@mui/material\"\r\nimport { Suspense } from \"react\"\r\nimport CardLight from \"./Card/CardLight\"\r\n\r\nconst ScrollModal = styled(Modal)(({ theme }) => ({\r\n  overflow: \"scroll\",\r\n  paddingTop: theme.spacing(2),\r\n  paddingBottom: theme.spacing(2),\r\n\r\n}))\r\nconst ModalContainer = styled(Container)(({ theme }) => ({\r\n  padding: 0,\r\n  minHeight: \"100%\",\r\n  display: \"flex\", flexDirection: \"column\", justifyContent: \"center\",\r\n  pointerEvents: \"none\",\r\n  \"& > *\": {\r\n    pointerEvents: \"auto\"\r\n  }\r\n}))\r\n\r\ntype ModalWrapperProps = ModalProps & {\r\n  containerProps?: ContainerProps\r\n}\r\nexport default function ModalWrapper({ children, containerProps, ...props }: ModalWrapperProps) {\r\n  return <ScrollModal {...props}>\r\n    <ModalContainer {...containerProps}>\r\n      <Suspense fallback={<CardLight><CardContent><Skeleton variant=\"rectangular\" width=\"100%\" height={300} /></CardContent></CardLight>}>\r\n        {children}\r\n      </Suspense>\r\n    </ModalContainer>\r\n  </ScrollModal>\r\n}","import { ButtonProps, styled, ToggleButtonGroup, ToggleButtonGroupProps } from \"@mui/material\";\r\n\r\nexport type SolidToggleButtonGroupProps = SolidToggleButtonGroupPropsPartial & ToggleButtonGroupProps\r\ntype SolidToggleButtonGroupPropsPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\n\r\nconst SolidToggleButtonGroup = styled(ToggleButtonGroup, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\"\r\n})<SolidToggleButtonGroupPropsPartial>(({ theme, baseColor = \"primary\", selectedColor = \"success\" }) => ({\r\n  '& .MuiToggleButtonGroup-grouped': {\r\n    '&': {\r\n      backgroundColor: theme.palette[baseColor].main,\r\n      color: theme.palette[baseColor].contrastText,\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: theme.palette[baseColor].dark,\r\n    },\r\n    '&.Mui-selected': {\r\n      backgroundColor: theme.palette[selectedColor].main,\r\n      color: theme.palette[selectedColor].contrastText,\r\n    },\r\n    '&.Mui-selected:hover': {\r\n      backgroundColor: theme.palette[selectedColor].dark,\r\n    },\r\n    '&.Mui-disabled': {\r\n      backgroundColor: theme.palette[baseColor].dark,\r\n    },\r\n    '&.Mui-selected.Mui-disabled': {\r\n      backgroundColor: theme.palette[selectedColor].dark,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default SolidToggleButtonGroup","import { useCallback, useState } from \"react\"\r\n\r\nexport default function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}","import { ArtifactSheet } from \"../Artifact/ArtifactSheet\"\r\nimport { initialBuildSettings } from \"../Build/BuildSetting\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { allSlotKeys, ArtifactSetKey, CharacterKey, ElementKey } from \"../Types/consts\"\r\nimport { objectFromKeyMap } from \"../Util/Util\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport CharacterSheet from \"./CharacterSheet\"\r\n\r\nexport function getFormulaTargetsDisplayHeading(key: string, { characterSheet, weaponSheet, artifactSheets }: { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet> }, eleKey: ElementKey = \"anemo\") {\r\n  if (key === \"basicKeys\") return \"Basic Stats\"\r\n  else if (key === \"genericAvgHit\") return \"Generic Optimization Values\"\r\n  else if (key === \"transReactions\") return \"Transformation Reaction\"\r\n  else if (key.startsWith(\"talentKey_\")) {\r\n    const subkey = key.split(\"talentKey_\")[1]\r\n    return (characterSheet?.getTalentOfKey(subkey, eleKey)?.name ?? subkey)\r\n  } else if (key.startsWith(\"weapon_\")) {\r\n    const subkey = key.split(\"weapon_\")[1]\r\n    return (weaponSheet?.name ?? subkey)\r\n  } else if (key.startsWith(\"artifact_\")) {\r\n    const [, setKey, num] = key.split('_')\r\n    return <span>{artifactSheets[setKey]?.name} <SqBadge color=\"success\">{num}-Set</SqBadge></span>\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key, // the game character this is based off\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: \"\",\r\n    equippedArtifacts: objectFromKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    conditionalValues: {},\r\n    bonusStats: {},\r\n    buildSettings: initialBuildSettings(),\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n  }\r\n}","import { ToggleButton } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey | \"\") => void\r\n  value: WeaponTypeKey | \"\"\r\n}\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allWeaponTypeKeys} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : children) as JSX.Element;\r\n}","import Formula from \"./Formula\"\r\nimport { Formulas, getStage, numStages, StatData } from \"./StatData\"\r\nimport { IBaseStat } from \"./Types/character\"\r\nimport { Modifier } from \"./Types/stats\"\r\n\r\n// Generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula: (s) => number) {\r\n  const dependency: Set<string> = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop.toString()) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.entries(Formulas).map(([key, value]) => [key, GetFormulaDependency(value)])\r\n)) as Dict<string, string[]>\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(baseStat: IBaseStat, modifiers: Modifier = {}, keys = Object.keys(StatData)): Dependencies {\r\n  const found = new Set<string>()\r\n  const dependencies = [...Array(numStages)].map(_ => new Set<string>())\r\n  keys.forEach(key => InsertDependencies(baseStat, key, modifiers, dependencies, found))\r\n  return dependencies.flatMap(dep => [...dep])\r\n}\r\nfunction InsertDependencies(baseStat: IBaseStat, key: string, modifiers: Modifier, dependencies: Set<string>[], found: Set<string>) {\r\n  if (found.has(key)) return\r\n  found.add(key)\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(baseStat, k, modifiers, dependencies, found));\r\n  (modifiers[key] ?? []).forEach(path => Formula.getCurrent(path, baseStat)[1].forEach(k =>\r\n    InsertDependencies(baseStat, k, modifiers, dependencies, found)))\r\n  dependencies[getStage(key)].add(key)\r\n}\r\n\r\ntype Dependencies = string[]\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n","\r\ninterface SortOption {\r\n  getValue: (id: string) => number | string\r\n  tieBreaker?: string\r\n}\r\nexport interface SortOptions { [key: string]: SortOption }\r\n\r\n\r\nexport default function SortByFilters(sortby: string, ascending: boolean, options: SortOptions) {\r\n  function Sort(a: string, b: string, ascending: boolean, filterOption: SortOption,) {\r\n    const aV = filterOption.getValue(a)\r\n    const bV = filterOption.getValue(b)\r\n    let diff = 0\r\n    if (typeof aV === \"string\" && typeof bV === \"string\")\r\n      diff = aV.localeCompare(bV)\r\n    else\r\n      diff = ((bV as number) - (aV as number))\r\n    return (ascending ? -1 : 1) * diff\r\n  }\r\n  return (a: string, b: string) => {\r\n    const filterOption = options[sortby]\r\n    let diff = Sort(a, b, ascending, filterOption)\r\n    if (!diff && filterOption.tieBreaker)\r\n      diff = Sort(a, b, ascending, options[filterOption.tieBreaker])\r\n    return diff\r\n  }\r\n}\r\n","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\r\n\r\ntype SortByButtonProps = ButtonGroupProps & {\r\n  sortKeys: string[]\r\n  value: string\r\n  onChange: (value: string) => void\r\n  ascending: boolean\r\n  onChangeAsc: (value: boolean) => void\r\n}\r\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\r\nexport default function SortByButton({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: SortByButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <ButtonGroup {...props} >\r\n    <DropdownButton title={<Trans t={t} i18nKey=\"sortByFormat\" value={t(`sortMap.${value}`) as any}>Sort By: {{ value: t(`sortMap.${value}`) }}</Trans>}>\r\n      {sortKeys.map(key =>\r\n        <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\r\n      {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\r\n    </Button>\r\n  </ButtonGroup>\r\n}","import { Box, ToggleButton } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport { uncoloredEleIcons } from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey | \"\") => void\r\n  value: ElementKey | \"\"\r\n}\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allElements} {...props}>\r\n    {allElements.map(ele => <ToggleButton key={ele} value={ele} >\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{uncoloredEleIcons[ele]}</Box>\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}\r\n","import CharacterSheet from \"../Character/CharacterSheet\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { SortOptions } from \"./SortByFilters\";\r\nexport const sortKeys = [\"level\", \"rarity\", \"name\"]\r\nexport default function characterSortOptions(database: ArtCharDatabase, characterSheets: StrictDict<CharacterKey, CharacterSheet>): SortOptions {\r\n  return {\r\n    new: {\r\n      getValue: (ck) => database._getChar(ck as CharacterKey) ? 0 : 1,\r\n      tieBreaker: \"name\"\r\n    },\r\n    name: {\r\n      getValue: (ck) => ck,\r\n    },\r\n    level: {\r\n      getValue: (ck) => database._getChar(ck as CharacterKey)?.level ?? 0,\r\n      tieBreaker: \"rarity\"\r\n    },\r\n    rarity: {\r\n      getValue: (ck) => characterSheets?.[ck]?.star,\r\n      tieBreaker: \"level\"\r\n    }\r\n  }\r\n}","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\";\r\nimport { useContext, useMemo, useState } from \"react\";\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Character from '../../Character/Character';\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey, WeaponTypeKey } from \"../../Types/consts\";\r\nimport characterSortOptions from \"../../Util/CharacterSort\";\r\nimport SortByFilters from \"../../Util/SortByFilters\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport CardLight from \"../Card/CardLight\";\r\nimport CloseButton from \"../CloseButton\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport ModalWrapper from \"../ModalWrapper\";\r\nimport SortByButton from \"../SortByButton\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { Stars } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ElementToggle from \"../ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\";\r\n\r\nconst defaultSortKeys = [\"level\", \"rarity\", \"name\"]\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const sortKeys = useMemo(() => newFirst ? [\"new\", ...defaultSortKeys] : defaultSortKeys, [newFirst])\r\n  const database = useContext(DatabaseContext)\r\n\r\n  const [sortBy, setsortBy] = useState(sortKeys[0])\r\n  const [ascending, setascending] = useState(false)\r\n  const [elementalFilter, setelementalFilter] = useState<ElementKey | \"\">(\"\")\r\n  const [weaponFilter, setweaponFilter] = useState<WeaponTypeKey | \"\">(\"\")\r\n\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n\r\n  const sortOptions = useMemo(() => characterSheets && characterSortOptions(database, characterSheets), [database, characterSheets])\r\n  const characterKeyList = useMemo(() => characterSheets && sortOptions ? [...new Set(allCharacterKeys)].filter(cKey => filter(database._getChar(cKey), characterSheets[cKey])).filter(cKey => {\r\n    if (elementalFilter && elementalFilter !== characterSheets?.[cKey]?.elementKey) return false\r\n    if (weaponFilter && weaponFilter !== characterSheets?.[cKey]?.weaponTypeKey) return false\r\n    return true\r\n  }).sort(SortByFilters(sortBy, ascending, sortOptions) as (a: CharacterKey, b: CharacterKey) => number) : [],\r\n    [database, characterSheets, filter, elementalFilter, weaponFilter, sortBy, ascending, sortOptions])\r\n\r\n  if (!characterSheets) return null\r\n  return <ModalWrapper open={show} onClose={onHide} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1} >\r\n          <Grid item>\r\n            <WeaponToggle sx={{ height: \"100%\" }} onChange={setweaponFilter} value={weaponFilter} size=\"small\" />\r\n          </Grid>\r\n          <Grid item flexGrow={1}>\r\n            <ElementToggle sx={{ height: \"100%\" }} onChange={setelementalFilter} value={elementalFilter} size=\"small\" />\r\n          </Grid>\r\n\r\n          <Grid item flexGrow={1} />\r\n\r\n          <Grid item >\r\n            <SortByButton sx={{ height: \"100%\" }}\r\n              sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\r\n              ascending={ascending} onChangeAsc={setascending} />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={6} md={4} lg={3} >\r\n          <CharacterBtn key={characterKey} characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n        </Grid>)}\r\n      </Grid></CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CharacterBtn({ onClick, characterKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const character = database._getChar(characterKey)\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const weapon = character?.equippedWeapon ? database._getWeapon(character.equippedWeapon) : undefined\r\n  const weaponSheet = usePromise(weapon ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets, database])\r\n  if (!characterSheet) return null\r\n  const rarity = characterSheet.star\r\n  return <CardActionArea onClick={onClick} >\r\n    <CardLight sx={{ display: \"flex\", alignItems: \"center\" }}  >\r\n      <Box component=\"img\" src={characterSheet.thumbImg} sx={{ width: 130, height: \"auto\" }} className={`grad-${rarity}star`} />\r\n      <Box sx={{ pl: 1 }}>\r\n        <Typography><strong>{characterSheet.name}</strong></Typography>\r\n        {stats && character ? <>\r\n          <Typography variant=\"h6\"> {characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <ImgIcon src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} />{` `}{Character.getLevelString(character)}</Typography>\r\n          <Typography >\r\n            <SqBadge color=\"success\">{`C${character.constellation}`}</SqBadge>{` `}\r\n            <SqBadge color=\"secondary\"><strong >{stats.tlvl.auto + 1}</strong></SqBadge>{` `}\r\n            <SqBadge color={stats.skillBoost ? \"info\" : \"secondary\"}><strong >{stats.tlvl.skill + 1}</strong></SqBadge>{` `}\r\n            <SqBadge color={stats.burstBoost ? \"info\" : \"secondary\"}><strong >{stats.tlvl.burst + 1}</strong></SqBadge>\r\n          </Typography>\r\n        </> : <>\r\n          <Typography variant=\"h6\"><SqBadge color=\"primary\">NEW</SqBadge></Typography>\r\n        </>}\r\n        <small><Stars stars={characterSheet.star} colored /></small>\r\n      </Box>\r\n    </CardLight>\r\n  </CardActionArea >\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Button, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useState } from \"react\"\r\nimport { dbStorage } from \"../Database/DBStorage\"\r\nimport { getRandomElementFromArray } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CloseButton from \"./CloseButton\"\r\nimport ModalWrapper from \"./ModalWrapper\"\r\nimport { TransWrapper } from \"./Translate\"\r\n\r\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }: { pageKey: string, text: Displayable | Displayable[], modalTitle: Displayable, children: JSX.Element }) {\r\n  const [showInfoModal, setshowInfoModal] = useState(dbStorage.get(\"infoShown\")?.[pageKey] ?? true)\r\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\r\n  const closeModal = () => {\r\n    const infoShown = dbStorage.get(\"infoShown\") ?? {}\r\n    infoShown[pageKey] = false\r\n    dbStorage.set(\"infoShown\", infoShown)\r\n    setshowInfoModal(false)\r\n  }\r\n  return <CardDark >\r\n    <Grid container>\r\n      <Grid item flexGrow={1}>\r\n        <Typography variant=\"caption\" pl={1} >\r\n          {displayText}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs=\"auto\">\r\n        <Button size=\"small\" color=\"info\" variant=\"contained\" onClick={() => setshowInfoModal(true)} startIcon={<FontAwesomeIcon icon={faQuestionCircle} />}>\r\n          <TransWrapper ns=\"ui\" key18=\"info\" />\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n    <ModalWrapper containerProps={{ maxWidth: \"xl\" }} open={showInfoModal} onClose={() => closeModal()} >\r\n      <CardDark >\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{modalTitle}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={closeModal} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\r\n            {children}\r\n          </Suspense>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent sx={{ py: 1 }}>\r\n          <CloseButton large onClick={closeModal} />\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper >\r\n  </CardDark>\r\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorPrimary', 'colorSecondary', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(color)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIconOutlinedColor${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\n\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconOutlinedColor${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], variant === 'outlined' && styles[`outlined${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return _extends({\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    }),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: theme.palette[ownerState.color].main,\n    color: theme.palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.palette[ownerState.color].dark\n    }\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: theme.shadows[1]\n  }\n}, ownerState.clickable && ownerState.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette[ownerState.color].dark\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n  color: theme.palette[ownerState.color].main,\n  border: `1px solid ${alpha(theme.palette[ownerState.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: alpha(theme.palette[ownerState.color].main, 0.7),\n    '&:hover, &:active': {\n      color: theme.palette[ownerState.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, ownerState.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n\n  const {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const small = size === 'small';\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n\n  const ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  let deleteIcon = null;\n\n  if (onDelete) {\n    const customClasses = clsx(color !== 'default' && (variant === 'outlined' ? classes[`deleteIconOutlinedColor${capitalize(color)}`] : classes[`deleteIconColor${capitalize(color)}`]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  let avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n\n  let icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  const {\n    children,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActionArea;","import { faCalculator, faLink, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Box, Button, CardActionArea, CardContent, Chip, Grid, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport ConditionalWrapper from '../Components/ConditionalWrapper';\r\nimport ImgIcon from '../Components/Image/ImgIcon';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport StatIcon from '../Components/StatIcon';\r\nimport { ascensionMaxLevel } from '../Data/LevelData';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport Stat from '../Stat';\r\nimport { ICachedCharacter } from '../Types/character';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { ICachedWeapon } from '../Types/weapon';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\ntype CharacterCardProps = { characterKey: CharacterKey | \"\", onEdit?: (any) => void, onDelete?: (any) => void, footer?: boolean }\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, footer = false }: CharacterCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseCharacter, updateDatabaseCharacter] = useState(undefined as ICachedCharacter | undefined)\r\n  useEffect(() =>\r\n    characterKey ? database.followChar(characterKey, updateDatabaseCharacter) : undefined,\r\n    [characterKey, updateDatabaseCharacter, database])\r\n\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n  const character = databaseCharacter\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const weapon = character?.equippedWeapon ? database._getWeapon(character.equippedWeapon) : undefined\r\n  const weaponSheet = usePromise(weapon ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets, database])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => onEdit?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onEdit, characterKey],\r\n  )\r\n  const deleteChar = useCallback(() => onDelete?.(characterKey), [onDelete, characterKey])\r\n\r\n  if (!character || !weapon || !characterSheet || !weaponSheet || !stats) return null;\r\n  const { constellation } = character\r\n  const { level: weaponLevel, ascension: weaponAscension } = weapon\r\n  const { tlvl, characterLevel, ascension } = stats\r\n\r\n  const elementKey = stats.characterEle\r\n  const weaponName = weaponSheet?.name\r\n  const weaponMainVal = weaponSheet.getMainStatValue(weaponLevel, weaponAscension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(weaponLevel, weaponAscension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponLevelName = WeaponSheet.getLevelString(weapon as ICachedWeapon)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <ConditionalWrapper condition={!!onEdit} wrapper={actionWrapperFunc}>\r\n        <Box display=\"flex\"\r\n          position=\"relative\"\r\n          className={`grad-${characterSheet.star}star`}\r\n          sx={{\r\n            \"&::before\": {\r\n              content: '\"\"',\r\n              display: \"block\", position: \"absolute\",\r\n              left: 0, top: 0,\r\n              width: \"100%\", height: \"100%\",\r\n              opacity: 0.7,\r\n              backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n            }\r\n          }}\r\n          width=\"100%\" >\r\n          <Box flexShrink={1} sx={{ maxWidth: { xs:\"40%\", lg:\"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n            <Box\r\n              component=\"img\"\r\n              src={characterSheet.thumbImg}\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n              maxWidth={256}\r\n              sx={{ mt: \"auto\" }}\r\n            />\r\n          </Box>\r\n          <Box flexGrow={1} sx={{ p: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n            <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={elementKey as any} />\r\n            <Grid container spacing={1} flexWrap=\"nowrap\">\r\n              <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n                <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n                <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={1} flexWrap=\"nowrap\">\r\n              <Grid item>\r\n                <Chip color=\"secondary\" label={<strong >{tlvl.auto + 1}</strong>} />\r\n              </Grid>\r\n              <Grid item>\r\n                <Chip color={stats.skillBoost ? \"info\" : \"secondary\"} label={<strong >{tlvl.skill + 1}</strong>} />\r\n              </Grid>\r\n              <Grid item>\r\n                <Chip color={stats.burstBoost ? \"info\" : \"secondary\"} label={<strong >{tlvl.burst + 1}</strong>} />\r\n              </Grid>\r\n            </Grid>\r\n            <Typography mt={1} ><Stars stars={characterSheet.star} colored /></Typography>\r\n          </Box>\r\n        </Box>\r\n        <CardContent sx={{ pb: 0, width: \"100%\" }}>\r\n          <CardDark sx={{ mb: 1 }}>\r\n            <Box display=\"flex\" >\r\n              <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n                <Box\r\n                  component=\"img\"\r\n                  src={weaponSheet.img}\r\n                  width=\"100%\"\r\n                  height=\"auto\"\r\n                  sx={{ mt: \"auto\" }}\r\n                />\r\n              </Box>\r\n              <Box flexGrow={1} sx={{ p: 1 }}>\r\n                <Typography variant=\"body2\"><strong>{weaponName}</strong></Typography>\r\n                <Typography whiteSpace=\"nowrap\" lineHeight={1}>\r\n                  <SqBadge color=\"primary\" sx={{ mr: 1 }}>Lv. {weaponLevelName}</SqBadge>\r\n                  {weaponPassiveName && <SqBadge color=\"info\"> Refinement {weapon.refinement}</SqBadge>}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">ATK: {weaponMainVal}</Typography>\r\n                {weaponPassiveName && <Typography variant=\"subtitle2\" lineHeight={1}>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</Typography>}\r\n              </Box>\r\n            </Box>\r\n          </CardDark>\r\n          <Grid container spacing={1} justifyContent=\"space-around\">\r\n            {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([key, arr]) => {\r\n              let artifactSetName = artifactSheets?.[key].name ?? \"\"\r\n              let highestNum = Math.max(...arr)\r\n              return <Grid item key={key} flexGrow={1}>\r\n                <Chip color=\"secondary\" sx={{ width: \"100%\" }} icon={<ImgIcon src={artifactSheets?.[key].defIconSrc} size={2.5} />}\r\n                  label={<span>{artifactSetName} <SqBadge color=\"success\">{highestNum}</SqBadge></span>} />\r\n              </Grid>\r\n            })}\r\n          </Grid>\r\n        </CardContent>\r\n        {/* grow to fill the 100% heigh */}\r\n        <Box flexGrow={1} />\r\n        <CardContent sx={{ py: 1, width: \"100%\" }} >\r\n          {statkeys.map(statKey => {\r\n            let unit = Stat.getStatUnit(statKey)\r\n            let statVal = stats[statKey]\r\n            return <Box sx={{ display: \"flex\" }} key={statKey}>\r\n              <Typography flexGrow={1}><strong>{StatIcon[statKey]} {Stat.getStatName(statKey)}</strong></Typography>\r\n              <Typography>\r\n                {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n              </Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n      </ConditionalWrapper>\r\n      {footer && <Grid container spacing={1} sx={{ py: 1, px: 2 }}>\r\n        <Grid item>\r\n          <Button size=\"small\" component={Link} to={{\r\n            pathname: \"/build\",\r\n            characterKey\r\n          } as any} startIcon={<FontAwesomeIcon icon={faCalculator} />}>Build</Button>\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <Button size=\"small\" color=\"info\" component={Link} to={{ pathname: \"/flex\", characterKey } as any}\r\n            startIcon={<FontAwesomeIcon icon={faLink} />}>Share</Button>\r\n        </Grid>\r\n        {!!onDelete && <Grid item>\r\n          <Button size=\"small\" color=\"error\" startIcon={<FontAwesomeIcon icon={faTrash} />} onClick={deleteChar}>Delete</Button>\r\n        </Grid>}\r\n      </Grid>}\r\n    </CardLight>\r\n  </Suspense>\r\n}\r\n","import { faCalculator, faLink, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Box, Button, CardContent, Grid, Skeleton, Typography } from '@mui/material';\r\nimport i18next from 'i18next';\r\nimport React, { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport { Link } from 'react-router-dom';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport CloseButton from '../Components/CloseButton';\r\nimport InfoComponent from '../Components/InfoComponent';\r\nimport SortByButton from '../Components/SortByButton';\r\nimport ElementToggle from '../Components/ToggleButton/ElementToggle';\r\nimport WeaponToggle from '../Components/ToggleButton/WeaponToggle';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport { dbStorage } from '../Database/DBStorage';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { CharacterKey, ElementKey, WeaponTypeKey } from '../Types/consts';\r\nimport characterSortOptions, { sortKeys } from '../Util/CharacterSort';\r\nimport SortByFilters from '../Util/SortByFilters';\r\nimport { defaultInitialWeapon } from '../Weapon/WeaponUtil';\r\nimport CharacterCard from './CharacterCard';\r\nimport { CharacterSelectionModal } from '../Components/Character/CharacterSelectionModal';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { initialCharacter } from './CharacterUtil';\r\n\r\nconst InfoDisplay = React.lazy(() => import('./InfoDisplay'));\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCard = lazy(() => import('./CharacterDisplayCard'))\r\n\r\nconst initialState = () => ({\r\n  characterKeyToEdit: \"\" as CharacterKey | \"\",\r\n  sortType: sortKeys[0],\r\n  ascending: false,\r\n  weaponType: \"\" as WeaponTypeKey | \"\",\r\n  element: \"\" as ElementKey | \"\",\r\n})\r\nexport type stateType = ReturnType<typeof initialState>\r\n\r\nfunction filterReducer(state: stateType, action): stateType {\r\n  return { ...state, ...action }\r\n}\r\nfunction filterInit(initial = initialState()): stateType {\r\n  return { ...initial, ...(dbStorage.get(\"CharacterDisplay.state\") ?? {}) }\r\n}\r\n\r\nexport default function CharacterDisplay(props) {\r\n  const database = useContext(DatabaseContext)\r\n  const [state, stateDisplatch] = useReducer(filterReducer, initialState(), filterInit)\r\n  const [newCharacter, setnewCharacter] = useState(false)\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  const scrollRef = useRef(null as any)\r\n  //set follow, should run only once\r\n  useEffect(() => {\r\n    ReactGA.pageview('/character')\r\n    return database.followAnyChar(forceUpdate)\r\n  }, [forceUpdate, database])\r\n\r\n  const allCharacterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  //save to db\r\n  useEffect(() => {\r\n    dbStorage.set(\"CharacterDisplay.state\", state)\r\n  }, [state])\r\n\r\n  const deleteCharacter = useCallback(async (cKey: CharacterKey) => {\r\n    const chararcterSheet = await CharacterSheet.get(cKey)\r\n    let name = chararcterSheet?.name\r\n    //use translated string\r\n    if (typeof name === \"object\")\r\n      name = i18next.t(`char_${cKey}_gen:name`)\r\n\r\n    if (!window.confirm(`Are you sure you want to remove ${name}?`)) return\r\n    database.removeChar(cKey)\r\n    if (state.characterKeyToEdit === cKey)\r\n      stateDisplatch({ characterKeyToEdit: \"\" })\r\n  }, [state.characterKeyToEdit, stateDisplatch, database])\r\n\r\n  const editCharacter = useCallback(cKey => {\r\n    if (!database._getChar(cKey))\r\n      (async () => {\r\n        //Create a new character + weapon, with linking.\r\n        const newChar = initialCharacter(cKey)\r\n        database.updateChar(newChar)\r\n        const characterSheet = await CharacterSheet.get(cKey)\r\n        if (!characterSheet) return\r\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\r\n        const weaponId = database.createWeapon(weapon)\r\n        database.setWeaponLocation(weaponId, cKey)\r\n        stateDisplatch({ characterKeyToEdit: cKey })\r\n      })()\r\n    else\r\n      stateDisplatch({ characterKeyToEdit: cKey })\r\n    setTimeout(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, 500);\r\n  }, [stateDisplatch, scrollRef, database])\r\n\r\n  const cancelEditCharacter = useCallback(() => {\r\n    stateDisplatch({ characterKeyToEdit: \"\" })\r\n    setnewCharacter(false)\r\n  }, [stateDisplatch])\r\n\r\n  const sortOptions = useMemo(() => allCharacterSheets && characterSortOptions(database, allCharacterSheets), [database, allCharacterSheets])\r\n\r\n  const charKeyList = useMemo(() => sortOptions && dbDirty && database._getCharKeys().filter(cKey => {\r\n    if (state.element && state.element !== allCharacterSheets?.[cKey]?.elementKey) return false\r\n    if (state.weaponType && state.weaponType !== allCharacterSheets?.[cKey]?.weaponTypeKey) return false\r\n    return true\r\n  }).sort(SortByFilters(state.sortType, state.ascending, sortOptions) as (a: CharacterKey, b: CharacterKey) => number),\r\n    [dbDirty, database, sortOptions, allCharacterSheets, state.element, state.weaponType, state.sortType, state.ascending])\r\n  return <Box sx={{ mt: 1, \"> div\": { mb: 1 }, }}>\r\n    <InfoComponent\r\n      pageKey=\"characterPage\"\r\n      modalTitle=\"Character Management Page Guide\"\r\n      text={[\"Every character will be tested with in-game numbers for maximum accuracy.\",\r\n        \"You can see the details of the calculations of every number.\",\r\n        \"You need to manually enable auto infusion for characters like Choungyun or Noelle.\",\r\n        \"You can change character constellations in both \\\"Character\\\" tab and in \\\"Talents\\\" tab.\",\r\n        \"Modified character Stats are bolded.\"]}\r\n    >\r\n      <InfoDisplay />\r\n    </InfoComponent>\r\n    {/* editor/character detail display */}\r\n    {!!state.characterKeyToEdit ? <Box ref={scrollRef}>\r\n      <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n        <CharacterDisplayCard\r\n          setCharacterKey={editCharacter}\r\n          characterKey={state.characterKeyToEdit}\r\n          onClose={cancelEditCharacter}\r\n          footer={<CharDisplayFooter onClose={cancelEditCharacter} characterKey={state.characterKeyToEdit} />}\r\n        />\r\n      </React.Suspense>\r\n    </Box> : null}\r\n    <CardDark sx={{ p: 2 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => stateDisplatch({ weaponType })} value={state.weaponType} size=\"small\" />\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <ElementToggle sx={{ height: \"100%\" }} onChange={element => stateDisplatch({ element })} value={state.element} size=\"small\" />\r\n        </Grid>\r\n        <Grid item >\r\n          <SortByButton sx={{ height: \"100%\" }}\r\n            sortKeys={sortKeys} value={state.sortType} onChange={sortType => stateDisplatch({ sortType })}\r\n            ascending={state.ascending} onChangeAsc={ascending => stateDisplatch({ ascending })} />\r\n        </Grid>\r\n      </Grid>\r\n    </CardDark>\r\n    <Grid container spacing={1}>\r\n      <Suspense fallback={<Grid item xs={12}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 5000 }} /></Grid>}>\r\n        {!state.characterKeyToEdit && <Grid item xs={12} sm={6} md={4} lg={3} >\r\n          <CardDark sx={{ height: \"100%\", minHeight: 400, width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n            <CardContent>\r\n              <Typography sx={{ textAlign: \"center\" }}>Add New Character</Typography>\r\n            </CardContent>\r\n            <CharacterSelectionModal newFirst show={newCharacter} onHide={() => setnewCharacter(false)} onSelect={editCharacter} />\r\n            <Box sx={{\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n            >\r\n              <Button onClick={() => setnewCharacter(true)} sx={{\r\n                borderRadius: \"1em\"\r\n              }}>\r\n                <Typography variant=\"h1\"><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></Typography>\r\n              </Button>\r\n            </Box>\r\n          </CardDark>\r\n        </Grid>}\r\n        {!!charKeyList && charKeyList.map(charKey =>\r\n          <Grid item key={charKey} xs={12} sm={6} md={4} lg={3} >\r\n            <CharacterCard\r\n              characterKey={charKey}\r\n              onDelete={deleteCharacter}\r\n              onEdit={editCharacter}\r\n              footer\r\n            />\r\n          </Grid>)}\r\n      </Suspense>\r\n    </Grid>\r\n  </Box>\r\n}\r\nfunction CharDisplayFooter({ onClose, characterKey }) {\r\n  return <Grid container spacing={1}>\r\n    <Grid item>\r\n      <Button component={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      } as any}\r\n        startIcon={<FontAwesomeIcon icon={faCalculator} />}\r\n      >Generate Builds</Button>\r\n    </Grid>\r\n    <Grid item flexGrow={1}>\r\n      <Button color=\"info\" component={Link} to={{ pathname: \"/flex\", characterKey } as any}\r\n        startIcon={<FontAwesomeIcon icon={faLink} />}\r\n      >Share Character</Button>\r\n    </Grid>\r\n    <Grid item xs=\"auto\">\r\n      <CloseButton large onClick={onClose} />\r\n    </Grid>\r\n  </Grid>\r\n}"],"sourceRoot":""}