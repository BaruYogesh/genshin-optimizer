{"version":3,"sources":["Database/CharacterDatabase.js","Database/ArtifactDatabase.js","Database/dbV2KeyMap.js","Database/DatabaseUtil.js","Util/Util.js","App.js","reportWebVitals.js","index.js"],"names":["CharacterDatabase","this","Error","callback","listener","push","filter","cb","forEach","characterDatabase","characterKey","charListener","char","initiated","isInvalid","levelKey","getCharacterDatabase","deepClone","getCharacterKeyList","Object","keys","getIdList","populateDatebaseFromLocalStorage","localStorage","key","startsWith","split","character","loadFromLocalStorage","emitEvent","update","dchar","saveToLocalStorage","emitCharEvent","get","defVal","remove","removeItem","getArtifactIDFromSlot","slotKey","equippedArtifacts","equipArtifact","art","id","unequipArtifactOnSlot","equipArtifactBuild","artifactIds","unequipAllArtifacts","values","clearDatabase","artifactDatabase","artIdIndex","artListener","ArtifactDatabase","setKey","numStars","mainStatKey","substats","some","substat","value","getArtifactDatabase","removeArtifactById","removeArtifact","getItem","dart","emitArtEvent","artId","moveToNewLocation","artid","location","setLocked","lock","swapLocations","artA","artB","locA","locB","swapLocationsById","artAid","artBid","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","CurrentDatabaseVersion","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","dbKey","name","dmgMode","rest","Array","isArray","buildSetting","mainStat","map","stat","v2change","statFilters","fromEntries","entries","hitMode","ArtifactDisplayState","filterMainStatKey","filterSubstats","state","elementalFilter","weaponFilter","charDBJustPopualted","artDBJustPopualted","valid","artInSlotId","obj","i","currentEfficiency","maximumEfficiency","efficiency","rolls","chars","equippedArt","artifactConditional","talentCondtiional","autoInfused","artifactsAssumeFull","ascending","setFilters","num","useLockedArts","buildSettings","mainStatAssumptionLevel","mainStatKeys","weapon","conditionalNum","setDatabaseVersion","parseInt","version","createDatabaseObj","artifactDisplay","characterDisplay","buildsDisplay","loadDatabaseObj","charKey","getRandomElementFromArray","array","Math","floor","random","length","getRandomIntInclusive","min","max","ceil","data","JSON","parse","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","clamp","val","low","high","getArrLastElement","arr","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","multi","prop","layeredAssignment","reduce","accu","objPathValue","k","deletePropPath","path","tempPath","lastKey","pop","objClearEmpties","o","crawlObject","validate","Home","lazy","ArtifactDisplay","CharacterDisplay","BuildDisplay","Planner","FlexDisplay","SettingsDisplay","App","className","Navbar","bg","variant","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","process","href","target","rel","onClick","ReactGA","outboundLink","label","icon","faPaypal","faPatreon","faDiscord","faCog","fallback","Container","Card","text","Body","Spinner","animation","component","Row","Col","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3b44bd0.chunk.js","sourcesContent":["import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static initiated = false\r\n  static characterDatabase = {}\r\n  static listener = []\r\n  static charListener = []\r\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(this.characterDatabase);\r\n  static getCharacterKeyList = () => Object.keys(this.characterDatabase);\r\n  static getIdList = () => Object.keys(this.characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (this.initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\r\n      const [, characterKey] = key.split(\"char_\")\r\n      if (!this.characterDatabase[characterKey]) {\r\n        const character = loadFromLocalStorage(key);\r\n        if (!character) return;\r\n        this.characterDatabase[characterKey] = character;\r\n      }\r\n    })\r\n    this.initiated = true\r\n    this.emitEvent()\r\n    return true\r\n  }\r\n  static update = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    const dchar = deepClone(char)\r\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\r\n    this.characterDatabase[char.characterKey] = dchar;\r\n    this.emitEvent()\r\n    this.emitCharEvent(dchar.characterKey, dchar)\r\n  }\r\n  static get = (characterKey, defVal = null) => this.characterDatabase?.[characterKey] ?? defVal\r\n\r\n  static remove = (characterKey) => {\r\n    delete this.characterDatabase[characterKey];\r\n    localStorage.removeItem(`char_${characterKey}`);\r\n    this.emitEvent()\r\n  }\r\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\r\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\r\n\r\n  static equipArtifact = (characterKey, art) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.update(char)\r\n  }\r\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !slotKey) return\r\n    if (!char?.equippedArtifacts?.[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.update(char)\r\n  }\r\n  static equipArtifactBuild = (characterKey, artifactIds) => {\r\n    const character = this.get(characterKey)\r\n    if (!character) return;\r\n    character.equippedArtifacts = artifactIds\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(this.characterDatabase).forEach(char => {\r\n      char.equippedArtifacts = {}\r\n      this.update(char)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    this.characterDatabase = {}\r\n    this.initiated = false\r\n    this.emitEvent()\r\n  }\r\n  static registerListener(callback) {\r\n    this.listener.push(callback)\r\n  }\r\n  static unregisterListener(callback) {\r\n    this.listener = this.listener.filter(cb => cb !== callback)\r\n  }\r\n  static emitEvent() {\r\n    this.listener.forEach(cb => cb(this.characterDatabase))\r\n  }\r\n  static registerCharListener(characterKey, callback) {\r\n    if (!this.charListener[characterKey]) this.charListener[characterKey] = [callback]\r\n    else this.charListener[characterKey].push(callback)\r\n  }\r\n  static unregisterCharListener(characterKey, callback) {\r\n    this.charListener[characterKey] = this.charListener[characterKey]?.filter(cb => cb !== callback)\r\n  }\r\n  static emitCharEvent(characterKey, char) {\r\n    this.charListener[characterKey]?.forEach(cb => cb(char))\r\n  }\r\n}\r\n","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nconst artListener = {}\r\nvar listener = []\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) throw Error('A static class cannot be instantiated.');\r\n\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey || art.substats?.some(substat => substat.key && !substat.value)\r\n  static getArtifactDatabase = () => artifactDatabase;\r\n  static getIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    this.emitEvent()\r\n    return true\r\n  }\r\n  static get = (id) => artifactDatabase[id] ?? null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static update = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    if (!id) {//if does not have id, generate ID\r\n      do {\r\n        id = `artifact_${artIdIndex++}`\r\n      } while (localStorage.getItem(id) !== null)\r\n      art.id = id\r\n    }\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    this.emitEvent()\r\n    this.emitArtEvent(id, dart)\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n    this.emitEvent()\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location = \"\") => {\r\n    const art = this.get(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.update(art);\r\n  }\r\n  static setLocked = (artid, lock = false) => {\r\n    const art = this.get(artid)\r\n    if (!art || art.lock === lock) return;\r\n    art.lock = lock;\r\n    this.update(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.get(artAid), this.get(artBid))\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(artifactDatabase).forEach(art => {\r\n      art.location = \"\"\r\n      this.update(art)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    artifactDatabase = {}\r\n    initiated = false\r\n    artIdIndex = 1\r\n    this.emitEvent()\r\n  }\r\n  static registerListener(callback) {\r\n    listener.push(callback)\r\n  }\r\n  static unregisterListener(callback) {\r\n    listener = listener.filter(cb => cb !== callback)\r\n  }\r\n  static emitEvent() {\r\n    listener.forEach(cb => cb(artifactDatabase))\r\n  }\r\n  static registerArtListener(id, callback) {\r\n    if (!artListener[id]) artListener[id] = [callback]\r\n    else artListener[id].push(callback)\r\n  }\r\n  static unregisterArtListener(id, callback) {\r\n    artListener[id] = artListener[id]?.filter(cb => cb !== callback)\r\n  }\r\n  static emitArtEvent(id, art) {\r\n    artListener[id]?.forEach(cb => cb(art))\r\n  }\r\n}","//for DB v2, we changed a bunch of keys.\r\nconst changes = {\r\n  char_ele_key: \"characterEle\",\r\n  char_level: \"characterLevel\",\r\n\r\n  hp_base: \"characterHP\",\r\n  hp_final: \"finalHP\",\r\n  atk_character_base: \"characterATK\",\r\n  atk_base: \"baseATK\",\r\n  atk_final: \"finalATK\",\r\n  atk_weapon: \"weaponATK\",\r\n  def_base: \"characterDEF\",\r\n  def_final: \"finalDEF\",\r\n  phy_dmg_bonus: \"physical_dmg_\",\r\n  phy_res: \"physical_res_\",\r\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\r\n  geo_ele_dmg_bonus: \"geo_dmg_\",\r\n  electro_ele_dmg_bonus: \"electro_dmg_\",\r\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\r\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\r\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\r\n  anemo_ele_res: \"anemo_res_\",\r\n  geo_ele_res: \"geo_res_\",\r\n  electro_ele_res: \"electro_res_\",\r\n  hydro_ele_res: \"hydro_res_\",\r\n  pyro_ele_res: \"pyro_res_\",\r\n  cryo_ele_res: \"cryo_res_\",\r\n  ener_rech: \"enerRech_\",\r\n  crit_rate: \"critRate_\",\r\n  crit_dmg: \"critDMG_\",\r\n  stam: \"stamina\",\r\n  heal_bonu: \"heal_\",\r\n  inc_heal: \"incHeal_\",\r\n  pow_shield: \"powShield_\",\r\n  red_cd: \"cdRed_\",\r\n  skill_cd_red: \"skillCDRed_\",\r\n  burst_cd_red: \"burstCDRed_\",\r\n  all_dmg_bonus: \"dmg_\",\r\n  move_spd: \"moveSPD_\",\r\n  atk_spd: \"atkSPD_\",\r\n  weakspot_dmg: \"weakspotDMG_\",\r\n  stamina_dec: \"staminaDec_\",\r\n  stamina_gliding_dec: \"staminaGlidingDec_\",\r\n  stamina_charged_dec: \"staminaChargedDec_\",\r\n  ele_mas_multi_x: \"eleMasX\",\r\n  ele_mas_multi_y: \"eleMasY\",\r\n  ele_mas_multi_z: \"eleMasZ\",\r\n\r\n  norm_atk_dmg: \"physical_normal_hit\",\r\n  char_atk_dmg: \"physical_charged_hit\",\r\n  plunge_dmg: \"physical_plunging_hit\",\r\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\r\n  char_atk_crit_dmg: \"physical_charged_critHit\",\r\n  plunge_crit_dmg: \"physical_plunging_critHit\",\r\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\r\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\r\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\r\n  norm_atk_dmg_bonus: \"normal_dmg_\",\r\n  char_atk_dmg_bonus: \"charged_dmg_\",\r\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\r\n  skill_dmg_bonus: \"skill_dmg_\",\r\n  burst_dmg_bonus: \"burst_dmg_\",\r\n  norm_atk_crit_rate: \"normal_critRate_\",\r\n  char_atk_crit_rate: \"charged_critRate_\",\r\n  skill_crit_rate: \"skill_critRate_\",\r\n  burst_crit_rate: \"burst_critRate_\",\r\n\r\n  anemo_skill_dmg: \"anemo_skill_hit\",\r\n  anemo_burst_dmg: \"anemo_burst_hit\",\r\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\r\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\r\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\r\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\r\n  geo_skill_dmg: \"geo_skill_hit\",\r\n  geo_burst_dmg: \"geo_burst_hit\",\r\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\r\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\r\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\r\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\r\n  electro_skill_dmg: \"electro_skill_hit\",\r\n  electro_burst_dmg: \"electro_burst_hit\",\r\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\r\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\r\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\r\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\r\n  hydro_skill_dmg: \"hydro_skill_hit\",\r\n  hydro_burst_dmg: \"hydro_burst_hit\",\r\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\r\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\r\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\r\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\r\n  pyro_skill_dmg: \"pyro_skill_hit\",\r\n  pyro_burst_dmg: \"pyro_burst_hit\",\r\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\r\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\r\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\r\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\r\n  cryo_skill_dmg: \"cryo_skill_hit\",\r\n  cryo_burst_dmg: \"cryo_burst_hit\",\r\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\r\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\r\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\r\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\r\n\r\n  phy_dmg: \"physical_hit\",\r\n  phy_crit_dmg: \"physical_critHit\",\r\n  phy_avg_dmg: \"physical_avgHit\",\r\n  anemo_ele_dmg: \"anemo_hit\",\r\n  anemo_ele_crit_dmg: \"anemo_critHit\",\r\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\r\n  geo_ele_dmg: \"geo_hit\",\r\n  geo_ele_crit_dmg: \"geo_critHit\",\r\n  geo_ele_avg_dmg: \"geo_avgHit\",\r\n  electro_ele_dmg: \"electro_hit\",\r\n  electro_ele_crit_dmg: \"electro_critHit\",\r\n  electro_ele_avg_dmg: \"electro_avgHit\",\r\n  hydro_ele_dmg: \"hydro_hit\",\r\n  hydro_ele_crit_dmg: \"hydro_critHit\",\r\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\r\n  pyro_ele_dmg: \"pyro_hit\",\r\n  pyro_ele_crit_dmg: \"pyro_critHit\",\r\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\r\n  cryo_ele_dmg: \"cryo_hit\",\r\n  cryo_ele_crit_dmg: \"cryo_critHit\",\r\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\r\n\r\n  overload_dmg: \"overload_hit\",\r\n  overload_dmg_bonus: \"overload_dmg_\",\r\n  overload_multi: \"overload_multi\",\r\n  electrocharged_dmg: \"electrocharged_hit\",\r\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\r\n  electrocharged_multi: \"electrocharged_multi\",\r\n  superconduct_dmg: \"superconduct_hit\",\r\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\r\n  superconduct_multi: \"superconduct_multi\",\r\n  burning_dmg: \"burning_hit\",\r\n  burning_dmg_bonus: \"burning_dmg_\",\r\n  swirl_dmg: \"swirl_hit\",\r\n  swirl_dmg_bonus: \"swirl_dmg_\",\r\n  swirl_multi: \"swirl_multi\",\r\n  shatter_dmg: \"shattered_hit\",\r\n  shatter_dmg_bonus: \"shattered_dmg_\",\r\n  shatter_multi: \"shattered_multi\",\r\n  crystalize_dmg: \"crystalize_hit\",\r\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\r\n\r\n  melt_dmg_bonus: \"melt_dmg_\",\r\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\r\n\r\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\r\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\r\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\r\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\r\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\r\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\r\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\r\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\r\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\r\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\r\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\r\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\r\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\r\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\r\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\r\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\r\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\r\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\r\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\r\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\r\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\r\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\r\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\r\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\r\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\r\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\r\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\r\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\r\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\r\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\r\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\r\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\r\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\r\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\r\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\r\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\r\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\r\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\r\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\r\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\r\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\r\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\r\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\r\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\r\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\r\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\r\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\r\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\r\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\r\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\r\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\r\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\r\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\r\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\r\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\r\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\r\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\r\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\r\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\r\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\r\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\r\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\r\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\r\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\r\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\r\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\r\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\r\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\r\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\r\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\r\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\r\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\r\n\r\n  enemy_phy_res: \"physical_enemyRes_\",\r\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\r\n  enemy_phy_immunity: \"physical_enemyImmunity\",\r\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\r\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\r\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\r\n  geo_enemy_ele_res: \"geo_enemyRes_\",\r\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\r\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\r\n  electro_enemy_ele_res: \"electro_enemyRes_\",\r\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\r\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\r\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\r\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\r\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\r\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\r\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\r\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\r\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\r\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\r\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\r\n\r\n  ele_mas: \"eleMas\",\r\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\r\n\r\n  enemy_level_multi: \"enemyLevel_multi\",\r\n  enemy_level: \"enemyLevel\"\r\n}\r\n/*\r\nconst same = [\r\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\r\n]\r\n\r\nconst removed = [\r\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\r\n]\r\n\r\nconst aded = [\r\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\r\n]\r\n*/\r\n\r\n//renamed dmgMode to hitMode\r\nconst dmgModeToHitMode = {\r\n  avg_dmg: \"avgHit\",\r\n  dmg: \"hit\",\r\n  crit_dmg: \"critHit\"\r\n}\r\nexport { changes, dmgModeToHitMode }","import ArtifactDatabase from \"./ArtifactDatabase\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\n\r\nconst CurrentDatabaseVersion = 3\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  const dbVersion = getDatabaseVersion()\r\n  //edit the data before the database is populated\r\n  if (dbVersion < 2) {\r\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\r\n      const character = loadFromLocalStorage(key);\r\n      const { characterKey, equippedArtifacts = {} } = character\r\n      const dbKey = `char_${characterKey}`\r\n      if (localStorage.getItem(dbKey) === null) {\r\n        //if there is no character saved, create a new character\r\n        const { id, name, dmgMode, ...rest } = character\r\n        if (Array.isArray(rest?.buildSetting?.mainStat))\r\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\r\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\r\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\r\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\r\n        saveToLocalStorage(dbKey, rest)\r\n        //equip to the new character\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = characterKey\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      } else {\r\n        //if the character does exist, \"move\" the artifacts equipped to inventory\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = \"\"\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      }\r\n      //delete the old database\r\n      localStorage.removeItem(key)\r\n    })\r\n    //reset the ArtifactDisplay keys\r\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\r\n    if (ArtifactDisplayState) {\r\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\r\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\r\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\r\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\r\n    }\r\n  }\r\n  if (dbVersion < 3) {\r\n    const state = loadFromLocalStorage(\"CharacterDisplay.state\")\r\n    if (state) {\r\n      if (Array.isArray(state.elementalFilter)) state.elementalFilter = \"\"\r\n      if (Array.isArray(state.weaponFilter)) state.weaponFilter = \"\"\r\n      saveToLocalStorage(\"CharacterDisplay.state\", state)\r\n    }\r\n  }\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n\r\n  Object.values(deepClone(ArtifactDatabase.getArtifactDatabase())).forEach(art => {\r\n    let valid = true\r\n\r\n    //verify the linking of artifacts and characters\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.get(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 2) {\r\n      if (art.mainStatKey in v2change) {\r\n        art.mainStatKey = v2change[art.mainStatKey]\r\n        valid = false\r\n      }\r\n      art?.substats?.forEach((obj, i) => {\r\n        if (obj.key in v2change) {\r\n          art.substats[i].key = v2change[obj.key]\r\n          valid = false\r\n        }\r\n      })\r\n    }\r\n    if (dbVersion < 3) {\r\n      //remove cached efficiency & rolls\r\n      delete art.currentEfficiency\r\n      delete art.maximumEfficiency\r\n      art?.substats?.forEach((substat, i) => {\r\n        delete substat.efficiency\r\n        delete substat.rolls\r\n      })\r\n      valid = false\r\n    }\r\n\r\n    //Update any invalid artifacts in DB\r\n    if (!valid) ArtifactDatabase.update(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    const { characterKey } = character\r\n    //verify character database equipment validity\r\n    if (!character.equippedArtifacts) {\r\n      character.equippedArtifacts = {}\r\n      valid = false\r\n    }\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.get(artid)\r\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\r\n      if (artid && !equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 3) {\r\n      delete character.artifactConditional\r\n      delete character.talentCondtiional\r\n      delete character.autoInfused\r\n      if (character.buildSetting) {\r\n        const { artifactsAssumeFull = false, ascending = false, mainStat = [\"\", \"\", \"\"], setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }], useLockedArts = false } = character.buildSetting ?? {}\r\n        delete character.buildSetting\r\n        character.buildSettings = { mainStatAssumptionLevel: artifactsAssumeFull ? 20 : 0, ascending, mainStatKeys: mainStat, setFilters, useLockedArts }\r\n      }\r\n      delete character.weapon?.conditionalNum\r\n      valid = false\r\n    }\r\n\r\n    //update any invalid characters in DB\r\n    if (!valid) CharacterDatabase.update(character)\r\n  })\r\n  setDatabaseVersion(CurrentDatabaseVersion)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nfunction createDatabaseObj() {\r\n  const characterDatabase = CharacterDatabase.getCharacterDatabase()\r\n  const artifactDatabase = ArtifactDatabase.getArtifactDatabase()\r\n  const artifactDisplay = loadFromLocalStorage(\"ArtifactDisplay.state\") ?? {}\r\n  const characterDisplay = loadFromLocalStorage(\"CharacterDisplay.state\") ?? {}\r\n  const buildsDisplay = loadFromLocalStorage(\"BuildsDisplay.state\") ?? {}\r\n\r\n  return {\r\n    version: getDatabaseVersion(),\r\n    characterDatabase,\r\n    artifactDatabase,\r\n    artifactDisplay,\r\n    characterDisplay,\r\n    buildsDisplay,\r\n  }\r\n}\r\n\r\nfunction loadDatabaseObj({ version = 0, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay, }) {\r\n  clearDatabase()\r\n  //load from obj charDB,artDB\r\n  Object.entries(characterDatabase).forEach(([charKey, char]) => saveToLocalStorage(`char_${charKey}`, char))\r\n  Object.entries(artifactDatabase).forEach(([id, art]) => saveToLocalStorage(id, art))\r\n  //override version\r\n  setDatabaseVersion(version)\r\n  saveToLocalStorage(\"ArtifactDisplay.state\", artifactDisplay)\r\n  saveToLocalStorage(\"CharacterDisplay.state\", characterDisplay)\r\n  saveToLocalStorage(\"BuildsDisplay.state\", buildsDisplay)\r\n\r\n  DatabaseInitAndVerify()\r\n}\r\nfunction clearDatabase() {\r\n  //delete all characters and artifacts\r\n  Object.keys(localStorage).filter(key => key.startsWith(\"char_\") || key.startsWith(\"artifact_\")).forEach(id =>\r\n    localStorage.removeItem(id))\r\n  localStorage.removeItem(\"db_ver\")\r\n  localStorage.removeItem(\"ArtifactDisplay.state\")\r\n  localStorage.removeItem(\"CharacterDisplay.state\")\r\n  localStorage.removeItem(\"BuildsDisplay.state\")\r\n  //clear the database to validate again\r\n  CharacterDatabase.clearDatabase()\r\n  ArtifactDatabase.clearDatabase()\r\n}\r\nexport {\r\n  DatabaseInitAndVerify,\r\n  createDatabaseObj,\r\n  loadDatabaseObj,\r\n  clearDatabase,\r\n  CurrentDatabaseVersion\r\n};\r\n","export const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nexport function getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nexport function getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport const loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nexport const saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nexport const deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nexport const closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nexport const closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nexport const clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nexport const getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nexport const clamp01 = (val) => clamp(val, 0, 1)\r\nexport const clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nexport function strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nexport function hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nexport function objMultiplication(obj, multi) {\r\n  if (multi === 1) return obj\r\n  Object.keys(obj).forEach(prop => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n  return obj\r\n}\r\n\r\n//assign obj.[keys...] = value\r\nexport function layeredAssignment(obj, keys, value) {\r\n  keys.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, obj)\r\n  return obj\r\n}\r\nexport function objPathValue(obj, keys) {\r\n  return keys.reduce((a, k) => a?.[k], obj)\r\n}\r\n//delete the value denoted by the path. Will also delete empty objects as well.\r\nexport function deletePropPath(obj, path) {\r\n  const tempPath = [...path]\r\n  const lastKey = tempPath.pop()\r\n  const objPathed = objPathValue(obj, tempPath)\r\n  delete objPathed[lastKey];\r\n}\r\n\r\nexport function objClearEmpties(o) {\r\n  for (const k in o) {\r\n    if (typeof o[k] !== \"object\") continue\r\n    objClearEmpties(o[k])\r\n    if (!Object.keys(o[k]).length) delete o[k];\r\n  }\r\n}\r\nexport function crawlObject(obj, keys, validate, cb) {\r\n  if (validate(obj)) cb(obj, keys)\r\n  else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => crawlObject(val, [...keys, key], validate, cb))\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nexport const getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\n","import { faDiscord, faPatreon, faPaypal } from '@fortawesome/free-brands-svg-icons';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport ReactGA from 'react-ga';\r\nimport { HashRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { version } from \"../package.json\";\r\nimport './App.scss';\r\nimport './Assets/Image.scss';\r\nimport { DatabaseInitAndVerify } from './Database/DatabaseUtil';\r\n\r\nconst Home = lazy(() => import('./Home/HomeDisplay'))\r\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\r\nconst CharacterDisplay = lazy(() => import('./Character/CharacterDisplay'))\r\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\r\nconst Planner = lazy(() => import('./Planner/PlannerDisplay'))\r\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\r\nconst FlexDisplay = lazy(() => import('./FlexPage/FlexDisplay'))\r\nconst SettingsDisplay = lazy(() => import('./Settings/SettingsDisplay'))\r\nDatabaseInitAndVerify()\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"h-100 d-flex flex-column\">\r\n        <div id=\"content\" className=\"flex-grow-1\">\r\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n            <Navbar.Brand as={Link} to=\"/\">Genshin Optimizer</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link as={Link} to=\"/artifact\">\r\n                  Artifacts</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/character\">Characters</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/build\">Builds</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/tools\">Tools</Nav.Link>\r\n                {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/test\">TEST</Nav.Link>}\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link href={process.env.REACT_APP_PAYPAL_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                  <span><FontAwesomeIcon icon={faPaypal} className=\"fa-fw\" /> PayPal</span>\r\n                </Nav.Link>\r\n                <Nav.Link href={process.env.REACT_APP_PATREON_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                  <span><FontAwesomeIcon icon={faPatreon} className=\"fa-fw\" /> Patreon</span>\r\n                </Nav.Link>\r\n                <Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"discord\" }, () => { })}>\r\n                  <span><FontAwesomeIcon icon={faDiscord} className=\"fa-fw\" /> Discord</span>\r\n                </Nav.Link>\r\n                <Nav.Link as={Link} to=\"/setting\"><FontAwesomeIcon icon={faCog} /></Nav.Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n          <Suspense fallback={<Container>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\r\n              <Card.Body>\r\n                <h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>\r\n              </Card.Body>\r\n            </Card></Container>}>\r\n            <Switch>\r\n              <Route path=\"/artifact\" component={ArtifactDisplay} />\r\n              <Route path=\"/character\" component={CharacterDisplay} />\r\n              <Route path=\"/build\" component={BuildDisplay} />\r\n              <Route path=\"/tools\" component={Planner} />\r\n              {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\r\n              <Route path=\"/setting\" component={SettingsDisplay} />\r\n              <Route path=\"/flex\" component={FlexDisplay} />\r\n              <Route path=\"/\" component={Home} />\r\n              {/* <Route exact path=\"/\" component={Home} /> */}\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n        <Nav id=\"footer\" className=\"bg-dark\">\r\n          <Row className=\"w-100 ml-0 mr-0 mb-2 text-light d-flex justify-content-between\">\r\n            <Col xs={\"auto\"}>\r\n              <span > <small>Genshin Optimizer is not affiliated with or endorsed by miHoYo. </small></span>\r\n            </Col>\r\n            <Col xs={\"auto\"}>\r\n              <span  ><small > Genshin Optimizer Ver:{version} </small></span>\r\n            </Col>\r\n          </Row>\r\n        </Nav>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactGA from 'react-ga';\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID, {\r\n  // debug: process.env.NODE_ENV === \"development\"\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}