{"version":3,"sources":["Components/CustomFormControl.tsx","Components/FieldDisplay.tsx","Artifact/ArtifactCard.tsx","Artifact/PercentBadge.tsx","../node_modules/react-bootstrap/esm/Tooltip.js","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx","../node_modules/react-bootstrap/esm/InputGroup.js","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","../node_modules/react-bootstrap/esm/DropdownButton.js","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Components/StatDisplay.tsx","Character/StatInput.tsx","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","Character/CharacterDisplay/DamageOptionsAndCalculation.tsx","Weapon/WeaponStatsCard.tsx","Weapon/WeaponDisplayCard.tsx","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"names":["CustomFormControl","value","onChange","className","disabled","float","placeholder","allowEmpty","max","min","useState","state","setState","sendChange","useCallback","undefined","parseFunc","parseFloat","parseInt","useEffect","toString","aria-label","type","e","target","onBlur","onKeyDown","key","FieldDisplay","field","index","equippedBuild","newBuild","compareAgainstEquipped","useContext","compareAgainstEquippedContext","stats","canShow","useMemo","fixedVal","fixed","fieldVal","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","toFixed","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","id","icon","faQuestionCircle","style","cursor","unit","Item","variant","allSubstatFilter","Set","allSubstats","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","effFilter","t","useTranslation","database","DatabaseContext","databaseArtifact","updateDatabaseArtifact","followArt","sheet","usePromise","ArtifactSheet","get","_getArt","setKey","equipOnChar","charKey","setArtLocation","editable","localDatabase","art","characterSheet","CharacterSheet","location","lock","slotKey","rarity","level","mainStatKey","substats","exclude","mainStatLevel","Math","levelVariant","floor","mainStatVal","valueStringWithUnit","Artifact","mainStatValue","Stat","getStatUnit","getArtifactEfficiency","currentEfficiency","maxEfficiency","artifactValid","locationName","name","nameWIthIcon","faBriefcase","slotName","getSlotName","slotDesc","getSlotDesc","slotDescEle","faInfoCircle","setEffects","setDesc","Object","keys","map","setNumKey","setNum","setEffectDesc","setDescEle","border","bg","text","Header","xs","md","src","slotIcons","thumbnail","size","onClick","updateArt","faLock","faLockOpen","stars","Body","Title","getStatName","stat","i","numRolls","rolls","length","efficiency","effOpacity","statName","opacity","has","valid","process","Footer","Toggle","Menu","Divider","onSelect","faEdit","faBan","faChartLine","faTrashAlt","PercentBadge","badgeColor","_excluded","Tooltip","React","forwardRef","_ref","ref","bsPrefix","children","arrowProps","props","popper","show","_objectWithoutPropertiesLoose","useBootstrapPrefix","primaryPlacement","split","createElement","_extends","role","classNames","defaultProps","displayName","artLayoutSize","lg","CharacterArtifactPane","sheets","character","characterKey","characterDispatch","artifacts","history","useHistory","statKeys","getDisplayStatKeys","edit","artid","push","pathname","artToEditId","artifactSheets","getAll","useForceUpdate","followAnyArt","equipArts","window","confirm","equippedArtifacts","equipArtifacts","unequipArts","fromEntries","allSlotKeys","sKey","Card","StatDisplayComponent","statsDisplayKeys","Button","Boolean","Alert","Row","Col","entries","setToSlots","setNumKeyArr","SetEffectDisplay","find","CharacterOverviewPane","weaponSheet","constellation","ascension","build","tlvl","elementKey","characterEle","weaponTypeKey","Img","cardImg","StatIcon","Image","Assets","weaponTypes","star","colored","getLevelString","tKey","getTalentOfKey","img","roundedCircle","Badge","position","bottom","right","constellationName","Array","WeaponDisplayCard","charData","weaponId","equippedWeapon","MainStatsCards","editing","SetEditing","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","allElements","forEach","ele","miscStatkeys","specializedStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","specializedStatUnit","displayNewBuildProps","faSave","statKey","StatInput","prependEle","getStatNameWithPercent","getStatValueWithOverride","percent","onValueChange","defaultValue","getBaseStatValue","StatDisplay","fixedUnit","getStatNameRaw","xl","CharacterTalentPane","skillDisplayProps","ReactionDisplay","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electro","cryo","electrocharged_hit","hydro","overloaded_hit","pyro","pyro_swirl_hit","swirlEleToDisplay","setele","DropdownButton","title","element","Dropdown","shattered_hit","information","OverlayTrigger","crystalize_hit","crystalizeEleToDisplay","charEleKey","eleInterArr","ElementToReactionKeys","includes","Ele","anemo","geo","talentLimits","talent","header","levelBoost","talentLvlKey","newTalentLevelKey","talentStats","getTalentStats","talentStatsFields","statsToFields","statsEle","ListGroup","talentSheet","sections","Subtitle","DocumentDisplay","createContext","CharacterDisplayCard","setCharacterKey","footer","propNewBuild","onClose","tabName","setcompareAgainstEquipped","databaseToken","onDatabaseUpdate","weaponSheets","WeaponSheet","characterSheets","_getChar","initialCharacter","weapon","_getWeapon","action","setWeaponLocation","baseStatOverrides","baseStatVal","updateChar","followChar","followWeapon","deepClone","hitMode","reactionMode","calculateBuild","commonPaneProps","DamageOptionsAndCalculationEle","DamageOptionsAndCalculation","CharSelectDropdown","ButtonGroup","faTimes","Provider","Tab","Container","defaultActiveKey","mountOnEnter","unmountOnExit","Nav","fill","Link","eventKey","Content","Pane","HeaderIconDisplay","thumbImg","setLevel","clamp","ascensionMaxLevel","findIndex","ascenML","ambiguousLevel","setAscension","lowerAscension","InputGroup","as","Prepend","ElementalData","talents","eleKey","Text","Append","milestoneLevels","lv","lvlstr","DropdownItem","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","hasValidation","_ref$as","InputGroupWithExtras","Radio","Checkbox","ConditionalSelector","conditional","conditionalValue","setConditional","conditionalNum","conditionalStateKey","states","values","evalIfFunc","maxStack","badge","whiteSpace","stateKey","condial","Fragment","v","stack","faCheckSquare","faSquare","ConditionalDisplay","fieldClassName","Conditional","resolve","conditionalStats","fields","conditionalFields","displayFields","condV","layeredAssignment","conditionalValues","deletePropPath","objClearEmpties","section","talentText","propTypes","PropTypes","any","href","string","func","node","isRequired","bool","menuAlign","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","DropdownToggle","childBsPrefix","DropdownMenu","align","renderOnMount","setEffectText","setStats","setNumStats","setStatsFields","document","setEffectDocument","cardbg","sectionKey","sectionValues","getFormulaTargetsDisplayHeading","JSON","stringify","DisplayStatDiff","label","val","oldVal","oldText","diffText","isArray","Formula","invalid","characterHP","characterDEF","characterATK","weaponATK","labelVariant","hasOverride","restProps","pointerEvents","faUndo","context","useAccordionToggle","contextEventKey","AccordionContext","SelectableContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","in","Children","only","Accordion","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","controlledProps","finalClassName","infusionVals","uncoloredEleIcons","InfusionAuraDropdown","infusionAura","isMelee","ReactionToggle","s","ToggleButtonGroup","ToggleButton","HitModeToggle","m","CalculationDisplay","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","reverse","printStat","subKey","expand","formulaField","fieldFixed","fieldUnit","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","rel","immunityStatKey","elementImmunity","WeaponStatsCard","statsVals","propWeaponId","refine","weaponType","weaponDispatch","newWeapon","updateWeapon","refineIndex","weaponFilter","ws","WeaponSelection","k","filter","ItemText","SwapBtn","onChangeId","substatKey","getSubStatKey","weaponDisplayMainVal","getMainStatValue","weaponDisplaySubVal","getSubStatValue","weaponPassiveName","passiveName","weaponBonusStats","description","passiveDescription","atk","EquipmentDropdown","onEquip","cKey","disableUnequip","setShow","close","clickHandler","weaponIdList","weapons","wKey","dbWeapon","faExchangeAlt","Modal","contentClassName","onHide","WeaponCard","cardClassName","TabContainer","generateCustomChildId","generateChildId","transition","tabContext","getControlledId","getControllerId","TabContext","TabContent","decoratedBsPrefix","_excluded2","TabPane","_useTabContext","rest","shouldTransition","makeEventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","ListGroupItem","handleClick","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav"],"mappings":"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","file":"static/js/1.f5fddd09.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\ntype props = {\r\n  value: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  className?: string\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  placeholder?: string,\r\n  allowEmpty?: boolean,\r\n  max?: string | number,\r\n  min?: string | number,\r\n}\r\nexport default function CustomFormControl({ value, onChange, className = \"\", disabled = false, float = false, placeholder, allowEmpty = false, max, min }: props) {\r\n  const [state, setState] = useState(\"\")\r\n  const sendChange = useCallback(\r\n    () => {\r\n      if (allowEmpty && state === \"\") return onChange(undefined)\r\n      if (state === \"\") return onChange(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state))\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setState(value?.toString() ?? \"\"), [value, setState]) // update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className={`hide-appearance ${className}`}\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={(e: any) => setState(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={(e: any) => e.key === \"Enter\" && sendChange()}\r\n    max={max}\r\n    min={min}\r\n  />\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Character from \"../Character/Character\";\r\nimport { compareAgainstEquippedContext } from \"../Character/CharacterDisplayCard\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\n\r\nexport default function FieldDisplay({ field, index, equippedBuild, newBuild, className = \"p-2\" }: { field: IFieldDisplay, index: number, equippedBuild?: ICalculatedStats, newBuild?: ICalculatedStats, className?: string }) {\r\n  const compareAgainstEquipped = useContext(compareAgainstEquippedContext)\r\n  const stats = (newBuild ? newBuild : equippedBuild)\r\n  const canShow = useMemo(() => stats ? field?.canShow?.(stats) : false, [field, stats])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", stats)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", stats)?.[0]?.(stats)\r\n      //compareAgainstEquipped\r\n      if (compareAgainstEquipped && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareAgainstEquipped, fixedVal, equippedBuild, field, stats])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", stats), [field, stats])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", stats), [field, stats])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", stats)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip id=\"field-formula\">{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, stats])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", stats), [field, stats])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","import { faBan, faBriefcase, faChartLine, faEdit, faInfoCircle, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Character/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { DatabaseContext, database as localDatabase } from '../Database/Database';\r\nimport Stat from '../Stat';\r\nimport { allSubstats, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { usePromise } from '../Util/ReactUtil';\r\nimport { valueStringWithUnit } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport SlotNameWithIcon from './Component/SlotNameWIthIcon';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: ICachedArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number, effFilter?: Set<SubstatKey> }\r\nconst allSubstatFilter = new Set(allSubstats)\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter }: Data): JSX.Element | null {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseArtifact, updateDatabaseArtifact] = useState(undefined as ICachedArtifact | undefined)\r\n  useEffect(() =>\r\n    artifactId ? database.followArt(artifactId, updateDatabaseArtifact) : undefined,\r\n    [artifactId, updateDatabaseArtifact, database])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? database._getArt(artifactId) : undefined))?.setKey), [artifactObj, artifactId])\r\n  const equipOnChar = (charKey: CharacterKey | \"\") => database.setArtLocation(artifactId!, charKey)\r\n\r\n  const editable = !artifactObj && database === localDatabase // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? databaseArtifact\r\n  const characterSheet = usePromise(CharacterSheet.get(art?.location ?? \"\"), [art?.location])\r\n  if (!art) return null\r\n\r\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const levelVariant = (Math.floor(Math.max(level - 1, 0) / 4) + 1) + \"roll\"\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{valueStringWithUnit(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, Stat.getStatUnit(mainStatKey))}</span>\r\n  const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\r\n  const artifactValid = maxEfficiency !== 0\r\n  const locationName = characterSheet?.name ? characterSheet.nameWIthIcon : <span><FontAwesomeIcon icon={faBriefcase} /> {t`filterLocation.inventory`}</span>\r\n  const slotName = sheet?.getSlotName(slotKey) || \"Unknown Piece Name\"\r\n  const slotDesc = sheet?.getSlotDesc(slotKey)\r\n  const slotDescEle = slotDesc ? <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip id=\"slotdesc-tooltip\">{slotDesc}</Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faInfoCircle} />\r\n  </OverlayTrigger> : null\r\n  const setEffects = sheet?.setEffects\r\n  const setDesc = sheet && setEffects && <Tooltip id=\"setdesc-tooltop\">\r\n    {Object.keys(setEffects).map(setNumKey => <span key={setNumKey} className=\"text-left\">\r\n      <h6 className=\"mb-0\"><Badge variant=\"success\">{t(`setEffectNum`, { setNum: setNumKey })}</Badge></h6>\r\n      <p>{sheet.setEffectDesc(setNumKey as any)}</p>\r\n    </span>)}\r\n  </Tooltip>\r\n  const setDescEle = setDesc ? <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={setDesc}\r\n  >\r\n    <FontAwesomeIcon icon={faInfoCircle} />\r\n  </OverlayTrigger> : null\r\n\r\n  return (<Card className=\"h-100\" border={`${rarity}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${rarity}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-2\">\r\n          <h6><strong>{slotName} {slotDescEle}</strong></h6>\r\n          <div><SlotNameWithIcon slotKey={slotKey} /> <span className=\"float-right mr-4\"> <Button size=\"sm\" disabled={!editable} onClick={() => database.updateArt({ lock: !lock }, id)}><FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" /></Button></span></div>\r\n          <div><small><Stars stars={rarity} /></small></div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <Badge variant={levelVariant} ><strong className=\"text-dark\">{` +${level}`}</strong></Badge> {sheet?.name ?? \"Artifact Set\"} {setDescEle}\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: ICachedSubstat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueStringWithUnit(stat.value, Stat.getStatUnit(stat.key))}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{stat.key && effFilter.has(stat.key) ? valueStringWithUnit(efficiency, \"eff\") : \"-\"}</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <Row>\r\n          <Col ><small>{t`editor.curSubEff`}</small></Col>\r\n          <Col xs=\"auto\"><PercentBadge value={currentEfficiency} valid={artifactValid} /></Col>\r\n        </Row>\r\n        {currentEfficiency !== maxEfficiency && <Row>\r\n          <Col ><small>{t`editor.maxSubEff`}</small></Col>\r\n          <Col xs=\"auto\"><PercentBadge value={maxEfficiency} valid={artifactValid} /></Col>\r\n        </Row>}\r\n      </div>\r\n      {process.env.NODE_ENV === \"development\" && <span className=\"text-warning\">{id || `\"\"`} </span>}\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}><FontAwesomeIcon icon={faBriefcase} /> Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        {editable && <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\" onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"exclude-artifact-tip\">{t`excludeArtifactTip`}</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\" onClick={() => database.updateArt({ exclude: !exclude }, id)} className=\"rounded-0\" variant={exclude ? \"danger\" : \"success\"}>\r\n                  <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger>\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card >)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"placement\", \"className\", \"style\", \"children\", \"arrowProps\", \"popper\", \"show\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  placement: 'right'\n};\nvar Tooltip = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      placement = _ref.placement,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      arrowProps = _ref.arrowProps,\n      _ = _ref.popper,\n      _2 = _ref.show,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n\n  var _ref2 = (placement == null ? void 0 : placement.split('-')) || [],\n      primaryPlacement = _ref2[0];\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    style: style,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, \"bs-tooltip-\" + primaryPlacement)\n  }, props), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"arrow\"\n  }, arrowProps)), /*#__PURE__*/React.createElement(\"div\", {\n    className: bsPrefix + \"-inner\"\n  }, children));\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","import { useCallback, useContext, useEffect, useMemo } from 'react';\r\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { DatabaseContext, database as localDatabase } from '../../Database/Database';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from '../../Types/consts';\r\nimport { ICalculatedStats } from '../../Types/stats';\r\nimport { useForceUpdate, usePromise } from '../../Util/ReactUtil';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport type { characterReducerAction } from '../CharacterDisplayCard';\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\nconst artLayoutSize = { xs: 12, md: 6, lg: 4 }\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  artifacts?: any[]\r\n}\r\nfunction CharacterArtifactPane({ sheets, character, character: { key: characterKey }, equippedBuild, newBuild, editable, characterDispatch, artifacts }: CharacterArtifactPaneProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = (newBuild ? newBuild : equippedBuild)\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => stats && Character.getDisplayStatKeys(stats, sheets), [stats, sheets])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  // TODO: We can also listen only to equipped artifacts\r\n  const [, updateArt] = useForceUpdate()\r\n  useEffect(() => database.followAnyArt(updateArt))\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && database.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n  }, [characterKey, newBuild, database])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    database.equipArtifacts(characterKey, Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])) as StrictDict<SlotKey, string>)\r\n  }, [characterKey, database])\r\n  if (!stats) return null\r\n  return <>\r\n    <Card className=\"h-100 mb-2\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Body>\r\n        <StatDisplayComponent {...{ sheets, character, equippedBuild, newBuild, statsDisplayKeys: statKeys, editable }} />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        {newBuild ? <Button onClick={equipArts}>Equip all artifacts to current character</Button> : (editable && database === localDatabase && <Button onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n        {Boolean(mainStatAssumptionLevel) && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert>}\r\n      </Card.Footer>\r\n    </Card>\r\n    <Row className=\"mb-n2\">\r\n      <Col {...artLayoutSize} className=\"d-flex flex-column\">\r\n        {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n          <Card key={setKey} className=\"mb-2 flex-grow-1\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n            <Card.Header>{artifactSheets?.[setKey].name ?? \"\"}</Card.Header>\r\n            <Card.Body className=\"p-2 mb-n2\">\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      {artifacts ?\r\n        allSlotKeys.map(slotKey => {//from flex\r\n          const art = artifacts.find(art => art.slotKey === slotKey)\r\n          return Boolean(art) && <Col {...artLayoutSize} key={slotKey} className=\"mb-2\">\r\n            <ArtifactCard artifactObj={art} />\r\n          </Col>\r\n        }) : allSlotKeys.map(slotKey =>\r\n          Boolean(stats?.equippedArtifacts?.[slotKey]) && <Col {...artLayoutSize} key={stats?.equippedArtifacts?.[slotKey]} className=\"mb-2\">\r\n            <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n          </Col>\r\n        )}\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Badge, Button, Card, Col, Image, Row } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { Stars } from \"../../Components/StarDisplay\";\r\nimport StatDisplay from \"../../Components/StatDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport Stat from \"../../Stat\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport WeaponDisplayCard from \"../../Weapon/WeaponDisplayCard\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport type { characterReducerAction } from \"../CharacterDisplayCard\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean;\r\n  character: ICachedCharacter\r\n  characterDispatch: (any: characterReducerAction) => void\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, weaponSheet, editable, character, character: { constellation, level, ascension }, characterDispatch, equippedBuild, newBuild }: CharacterOverviewPaneProps) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const { tlvl } = build\r\n  const elementKey = build.characterEle\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Card.Img src={characterSheet.cardImg} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <h3>{characterSheet.name} {StatIcon[elementKey]} <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n          <h6><Stars stars={characterSheet.star} colored /></h6>\r\n          <h5>Level: {Character.getLevelString(character)}</h5>\r\n          <Row className=\"px-2 mb-2\">\r\n            {[\"auto\", \"skill\", \"burst\"].map(tKey =>\r\n              <Col xs={4} className=\"p-1\" key={tKey}>\r\n                <Image src={characterSheet.getTalentOfKey(tKey, build.characterEle)?.img} className=\"w-100 h-auto\" roundedCircle />\r\n                <h5 className=\"mb-0\"><Badge variant=\"info\" style={{ position: \"absolute\", bottom: \"0\", right: \"0\" }}><strong>{tlvl[tKey] + 1}</strong></Badge></h5>\r\n              </Col>)}\r\n          </Row>\r\n          <div className=\"text-center\"><h6>{characterSheet.constellationName}</h6></div>\r\n          <Row className=\"px-2\">\r\n            {[...Array(6).keys()].map(i =>\r\n              <Col xs={4} className=\"p-1\" key={i}>\r\n                <Image src={characterSheet.getTalentOfKey(`constellation${i + 1}`, build.characterEle)?.img} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                  roundedCircle onClick={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponDisplayCard {...{ charData: { character, characterSheet, equippedBuild, newBuild, characterDispatch }, editable, weaponId: character.equippedWeapon }} />\r\n      <MainStatsCards {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n    </Col>\r\n  </Row >\r\n}\r\n\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  editable: boolean,\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction MainStatsCards({ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp\", \"hp_\", \"def\", \"def_\", \"atk\", \"atk_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys: any[] = [];\r\n\r\n  [\"physical\", ...allElements].forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"plunging_dmg_\", \"plunging_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"enemyDEFRed_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = characterSheet.getSpecializedStat(character.ascension)\r\n  const specializedStatVal = characterSheet.getSpecializedStatVal(character.ascension)\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIcon[statKey]} {Stat.getStatNameWithPercent(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span>{specializedStatKey && StatIcon[specializedStatKey]} {Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right`}>{`${specializedStatVal.toFixed(Stat.fixedUnit(specializedStatKey))}${specializedStatUnit}`}</span>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from 'react';\r\nimport { Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\";\r\nimport FieldDisplay from \"../../Components/FieldDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport type { characterReducerAction } from \"../CharacterDisplayCard\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n  editable: boolean,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterTalentPane(props: CharacterTalentPaneProps) {\r\n  const { characterSheet, character: { ascension, constellation }, editable, characterDispatch, newBuild, equippedBuild } = props\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const skillDisplayProps = { ...props, ascension }\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <>\r\n    <Row><Col><ReactionDisplay {...{ characterSheet, newBuild, equippedBuild }} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {!!characterSheet.getTalentOfKey(\"sprint\", build?.characterEle) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalentOfKey(tKey, build?.characterEle)) return null\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet, newBuild, equippedBuild }: { characterSheet: CharacterSheet, newBuild?: ICalculatedStats, equippedBuild?: ICalculatedStats }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.cryo} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.hydro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.pyro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} {StatIcon.pyro}+{StatIcon.anemo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} {StatIcon.electro}+{StatIcon.anemo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} {StatIcon.cryo}+{StatIcon.anemo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} {StatIcon.hydro}+{StatIcon.anemo}</span>\r\n} as const\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip id=\"shatter-tooltip\">Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} {StatIcon.hydro}+{StatIcon.cryo}+ <small className=\"text-physical\">Heavy Attack{information} </small> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\nconst crystalizeEleToDisplay = {\r\n  \"default\": <span className=\"text-crystalize\">{Stat.getStatName(\"crystalize_hit\")} {StatIcon.electro}/{StatIcon.hydro}/{StatIcon.pyro}/{StatIcon.cryo}+{StatIcon.geo}</span>,\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_crystalize_hit\")} {StatIcon.pyro}+{StatIcon.geo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_crystalize_hit\")} {StatIcon.electro}+{StatIcon.geo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_crystalize_hit\")} {StatIcon.cryo}+{StatIcon.geo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_crystalize_hit\")} {StatIcon.hydro}+{StatIcon.geo}</span>\r\n} as const\r\nfunction CrystalizeCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(crystalizeEleToDisplay)[0])\r\n  const sKey = ele === \"default\" ? \"crystalize_hit\" : `${ele}_crystalize_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={crystalizeEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(crystalizeEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  ascension: number,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { elementKey, talent, }, characterDispatch, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, onClickTitle }: SkillDisplayCardProps) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    const talentLvlKey = talent[talentKey] + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n        talent[tKey] = newTalentLevelKey\r\n        characterDispatch({ talent })\r\n      }\r\n      header = <Card.Header>\r\n        <DropdownButton title={`Talent Lv. ${talentLvlKey}`}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i + 1)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>{`Talent Level: ${talentLvlKey}`}</Card.Header>\r\n    }\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const talentStatsFields = talentStats && statsToFields(talentStats, build)\r\n  const statsEle = talentStatsFields && !!talentStatsFields.length && <Row><Col>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {talentStatsFields.map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, build.characterEle)\r\n  const sections = talentSheet?.sections\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"h-100\">\r\n    {header}\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={talentSheet?.img} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{talentSheet?.name}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {/* Display document sections */}\r\n      {sections ? <DocumentDisplay {...{ sections, characterDispatch, equippedBuild, newBuild, editable }} /> : null}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { Alert, ButtonGroup, Dropdown, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownItem from 'react-bootstrap/esm/DropdownItem';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { ascensionMaxLevel, milestoneLevels } from '../Data/CharacterData';\r\nimport ElementalData from '../Data/ElementalData';\r\nimport { DatabaseContext, database as localDatabase } from '../Database/Database';\r\nimport { ICachedCharacter } from '../Types/character';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { clamp, deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport DamageOptionsAndCalculation from './CharacterDisplay/DamageOptionsAndCalculation';\r\nimport { CharSelectionButton } from './CharacterSelection';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { initialCharacter } from './CharacterUtil';\r\n\r\nexport const compareAgainstEquippedContext = createContext(undefined)\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerStatOverride = {\r\n  type: \"statOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerStatOverride | Partial<ICachedCharacter>\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  editable?: boolean,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey, setCharacterKey = () => { }, footer, newBuild: propNewBuild, editable = false, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [compareAgainstEquipped, setcompareAgainstEquipped] = useState(false)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  // TODO: We probably don't need to fetch all sheets,\r\n  // though this wouldn't affect the performance currently.\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  const character = useMemo(() =>\r\n    databaseToken && (database._getChar(characterKey) ?? initialCharacter(characterKey)),\r\n    [characterKey, databaseToken, database])\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(character.equippedWeapon),\r\n    [character.equippedWeapon, databaseToken, database])\r\n\r\n  const characterSheet = characterSheets?.[characterKey]\r\n  const weaponSheet = weapon ? weaponSheets?.[weapon.key] : undefined\r\n  const sheets = characterSheet && weaponSheet && artifactSheets && { characterSheet, weaponSheet, artifactSheets }\r\n\r\n  const characterDispatch = useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"statOverride\": {\r\n        const character = database._getChar(characterKey)!\r\n        if (!characterSheet || !weaponSheet) break\r\n        const { statKey, value } = action\r\n        const baseStatOverrides = character.baseStatOverrides\r\n        const baseStatVal = Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)\r\n        if (baseStatVal === value || baseStatVal === undefined) delete baseStatOverrides[statKey]\r\n        else baseStatOverrides[statKey] = value\r\n        database.updateChar({ ...character, baseStatOverrides }) // TODO: Validate this\r\n        break\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action }) // TODO: Validate this\r\n  }, [characterKey, characterSheet, weaponSheet, database])\r\n\r\n  useEffect(() => {\r\n    return database.followChar(characterKey, onDatabaseUpdate)\r\n  }, [characterKey, onDatabaseUpdate, database])\r\n\r\n  useEffect(() => database.followWeapon(character.equippedWeapon, onDatabaseUpdate),\r\n    [character.equippedWeapon, onDatabaseUpdate, database])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return\r\n    const newBuild = propNewBuild && deepClone(propNewBuild);\r\n    newBuild.hitMode = character.hitMode;\r\n    newBuild.reactionMode = character.reactionMode;\r\n    return newBuild\r\n  }, [propNewBuild, character.hitMode, character.reactionMode])\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel), [character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel, database])\r\n  const commonPaneProps = { character, newBuild, equippedBuild: (!newBuild || compareAgainstEquipped) ? equippedBuild : undefined, editable, characterDispatch, compareAgainstEquipped }\r\n  // main CharacterDisplayCard\r\n  const DamageOptionsAndCalculationEle = sheets && <DamageOptionsAndCalculation {...{ sheets, weaponSheet, character, characterDispatch, newBuild, equippedBuild }} className=\"mb-2\" />\r\n  return (<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n    <Card.Header>\r\n      <Row>\r\n        {database === localDatabase && <Col xs={\"auto\"} className=\"mr-auto\">\r\n          {/* character selecter/display */}\r\n          <CharSelectDropdown characterSheet={characterSheet} character={character} weaponSheet={weaponSheet} editable={editable} characterDispatch={characterDispatch} setCharacterKey={setCharacterKey} />\r\n        </Col>}\r\n        {Boolean(mainStatAssumptionLevel) && <Col xs=\"auto\"><Alert className=\"mb-0 py-1 h-100\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert></Col>}\r\n        {/* Compare against new build toggle */}\r\n        {newBuild ? <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(false)}>\r\n              <small>Show New artifact Stats</small>\r\n            </Button>\r\n            <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(true)}>\r\n              <small>Compare against equipped artifacts</small>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col> : null}\r\n        {Boolean(onClose) && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    {characterKey && sheets && characterSheet && weaponSheet && <Card.Body>\r\n      <compareAgainstEquippedContext.Provider value={compareAgainstEquipped as any}>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 mx-0\" fill>\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\"><h5 className=\"mb-0\">Character</h5></Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\"><h5 className=\"mb-0\">New Artifacts</h5></Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\"><h5 className=\"mb-0\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</h5></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\"><h5 className=\"mb-0\">Talents</h5></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterOverviewPane characterSheet={characterSheet} weaponSheet={weaponSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane sheets={sheets} artifacts={undefined} {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane sheets={sheets} artifacts={undefined} {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterTalentPane characterSheet={characterSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </compareAgainstEquippedContext.Provider>\r\n    </Card.Body>}\r\n    {footer && <Card.Footer>\r\n      {footer}\r\n    </Card.Footer>}\r\n  </Card>)\r\n}\r\n\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  weaponSheet?: WeaponSheet,\r\n  character: ICachedCharacter\r\n  editable: boolean\r\n  characterDispatch: (any: characterReducerAction) => void\r\n  setCharacterKey: (any: CharacterKey) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, weaponSheet, character, character: { elementKey = \"anemo\", level = 1, ascension = 0 }, editable, characterDispatch, setCharacterKey }: CharSelectDropdownProps) {\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <Image src={characterSheet.thumbImg} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {characterSheet.name} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  const setLevel = useCallback((level) => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    characterDispatch({ level, ascension })\r\n  }, [characterDispatch])\r\n  const ambiguousLevel = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML) > 0\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\r\n    else characterDispatch({ ascension: lowerAscension })\r\n  }, [characterDispatch, ascension, level])\r\n  return <>{editable ? <InputGroup >\r\n    <ButtonGroup as={InputGroup.Prepend}>\r\n      <CharSelectionButton characterSheet={characterSheet} onSelect={setCharacterKey} />\r\n      {characterSheet?.sheet && \"talents\" in characterSheet?.sheet && <Dropdown as={ButtonGroup}>\r\n        <Dropdown.Toggle as={Button} className={`text-${elementKey}`}>\r\n          <strong>{ElementalData[elementKey].name}</strong>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu >\r\n          {Object.keys(characterSheet.sheet.talents).map(eleKey =>\r\n            <Dropdown.Item key={eleKey} className={`text-${eleKey}`} onClick={() => characterDispatch({ elementKey: eleKey })}><strong>{ElementalData[eleKey].name}</strong></Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>}\r\n    </ButtonGroup>\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text><strong>Lvl. </strong></InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n\r\n    <InputGroup.Append>\r\n      <CustomFormControl placeholder={undefined} className=\"h-100\" onChange={setLevel} value={level} min={1} max={90} disabled={!characterSheet} />\r\n    </InputGroup.Append>\r\n    <InputGroup.Append>\r\n      <Button disabled={!ambiguousLevel || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n    </InputGroup.Append>\r\n    <ButtonGroup as={InputGroup.Append}>\r\n      <Dropdown as={ButtonGroup} >\r\n        <Dropdown.Toggle as={Button} disabled={!characterSheet}>Select Level</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {milestoneLevels.map(([lv, as]) => {\r\n            const sameLevel = lv === ascensionMaxLevel[as]\r\n            const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n            return <DropdownItem key={`${lv}/${as}`} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</DropdownItem>\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </ButtonGroup>\r\n  </InputGroup> : <span>{HeaderIconDisplay} {characterSheet && weaponSheet && Character.getLevelString(character)}</span>}</>\r\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"bsPrefix\", \"size\", \"hasValidation\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      hasValidation = _ref.hasValidation,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, hasValidation && 'has-validation')\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial]: any, i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n          <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setConditional([0])}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n            <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n              {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n            </Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n        <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport IConditional from \"../Types/IConditional\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  characterDispatch: (any) => void,//TODO: characterDispatch type\r\n  editable: boolean,\r\n  fieldClassName?: string\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, equippedBuild, newBuild, characterDispatch, editable, fieldClassName }: ConditionalDisplayProps) {\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    if (!stats) return\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else if (conditional.keys)\r\n      layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats, characterDispatch])\r\n\r\n  if (!canShow || !stats) return null\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector disabled={!editable}\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild, className: fieldClassName }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","import { ListGroup } from \"react-bootstrap\"\r\nimport ConditionalDisplay from \"./ConditionalDisplay\"\r\nimport { DocumentSection } from \"../Types/character\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\n\r\ntype SkillDisplayCardProps = {\r\n  sections: DocumentSection[],\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n}\r\nexport default function DocumentDisplay({ sections, characterDispatch, equippedBuild, newBuild, editable }: SkillDisplayCardProps) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  return <div className=\"w-100\">{sections?.map((section, i) => {\r\n    if (!section.canShow!(build)) return null\r\n    const talentText = evalIfFunc(section.text, build)\r\n    const fields = section.fields ?? []\r\n    return <div className=\"my-2\" key={\"section\" + i}>\r\n      <div {...{ xs: 12 }}>\r\n        <div className=\"mb-2\">{talentText}</div>\r\n        {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n          {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n        </ListGroup>}\r\n      </div>\r\n      {!!section.conditional && <ConditionalDisplay {...{ conditional: section.conditional, equippedBuild, newBuild, characterDispatch, editable }} />}\r\n    </div>\r\n  })}</div>\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\"\r\nimport FieldDisplay from \"../../Components/FieldDisplay\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  editable: boolean,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n  characterDispatch: (arg0: any) => void,\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, editable, characterDispatch }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectDesc(setNumKey)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const document = sheet.setEffectDocument(setNumKey)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {document ? <DocumentDisplay {...{ sections: document, equippedBuild, newBuild, characterDispatch, editable }} /> : null}\r\n  </>\r\n}\r\n","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICachedCharacter } from \"../../Types/character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport { ArtifactSetKey } from \"../../Types/consts\"\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../CharacterUtil\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  character: ICachedCharacter\r\n  statsDisplayKeys: any,\r\n  editable: boolean,\r\n  cardbg?: string\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ sheets, sheets: { characterSheet, weaponSheet }, character, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }: StatDisplayComponentProps) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([sectionKey, sectionValues]: any) => {\r\n    const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build?.characterEle)\r\n    return <Col key={sectionKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text={\"lightfont\" as any} className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport StatIcon from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\ntype StatDisplayProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined, [statKey])\r\n\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\" //can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey) ?? invalid\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (build) {\r\n          if (statKey === \"finalHP\")\r\n            oldVal = build.characterHP\r\n          else if (statKey === \"finalDEF\")\r\n            oldVal = build.characterDEF\r\n          else if (statKey === \"finalATK\")\r\n            oldVal = build.characterATK + build.weaponATK\r\n        }\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, characterSheet, weaponSheet, equippedBuild, newBuild, editable, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label: label as any }} />\r\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\ntype StatInputInput = {\r\n  name: Displayable,\r\n  prependEle?: Displayable,\r\n  value: number,\r\n  placeholder: string,\r\n  defaultValue: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n  className?: any,\r\n}\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent = false, disabled = false, ...restProps }: StatInputInput) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip id=\"reset-tooltip\">Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"children\", \"eventKey\", \"onClick\"];\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"eventKey\"];\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\";\r\nimport StatIcon, { uncoloredEleIcons } from \"../../Components/StatIcon\";\r\nimport Formula from \"../../Formula\";\r\nimport Stat, { FormulaDisplay } from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allElements, ArtifactSetKey } from \"../../Types/consts\";\r\nimport { IFieldDisplay } from \"../../Types/IFieldDisplay\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport { usePromise } from \"../../Util/ReactUtil\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport type { characterReducerAction } from \"../CharacterDisplayCard\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport { getFormulaTargetsDisplayHeading } from \"../CharacterUtil\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No External Infusion</span>,\r\n  \"pyro\": <span >{uncoloredEleIcons.pyro} Pyro Infusion</span>,\r\n  \"cryo\": <span >{uncoloredEleIcons.cryo} Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  className?: string\r\n}\r\nexport function InfusionAuraDropdown({ characterSheet, character: { infusionAura = \"\" }, characterDispatch, className }: InfusionAuraDropdownProps) {\r\n  if (!characterSheet.isMelee()) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\ntype ReactionToggleProps = {\r\n  character: ICachedCharacter,\r\n  build: ICalculatedStats,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  className: string\r\n}\r\nexport function ReactionToggle({ character: { reactionMode = null, infusionAura }, build, characterDispatch, className }: ReactionToggleProps) {\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  const v = s => s ? \"success\" : \"secondary\"\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={v(!reactionMode)}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={v(reactionMode === \"pyro_vaporize\")}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) {StatIcon.hydro}+{StatIcon.pyro}</span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={v(reactionMode === \"pyro_melt\")}>\r\n      <span className=\"text-melt\">Melt(Pyro) {StatIcon.cryo}+{StatIcon.pyro}</span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={v(reactionMode === \"hydro_vaporize\")}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) {StatIcon.pyro}+{StatIcon.hydro}</span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={v(reactionMode === \"cryo_melt\")}>\r\n      <span className=\"text-melt\">Melt(Cryo) {StatIcon.pyro}+{StatIcon.cryo}</span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className }) {\r\n  const v = s => s ? \"success\" : \"secondary\"\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={v(hitMode === \"avgHit\")}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={v(hitMode === \"hit\")}>Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={v(hitMode === \"critHit\")}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ sheets, build }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  build: ICalculatedStats\r\n}) {\r\n  const displayStatKeys = useMemo(() => build && Character.getDisplayStatKeys(build, sheets), [build, sheets])\r\n  if (!build) return null\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([sectionKey, fields]: [string, any]) => {\r\n      const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build.characterEle)\r\n      return <Card bg=\"darkcontent\" text={\"lightfont\" as any} key={sectionKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              if (Array.isArray(field))\r\n                return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} fieldIndex={fieldIndex} />\r\n              else if (typeof field === \"string\") {//simple statKey field\r\n                const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              return null\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\nfunction FormulaCalculationField({ fieldKeys, build, fieldIndex }: { fieldKeys: string[], build: ICalculatedStats, fieldIndex: number, }) {\r\n  const formula = usePromise(Formula.get(fieldKeys), [fieldKeys])\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const fieldFixed = Character.getTalentFieldValue(formulaField, \"fixed\", build) ?? 0\r\n  const fieldUnit = Character.getTalentFieldValue(formulaField, \"unit\", build) ?? \"\"\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.(fieldFixed)\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n      <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}{fieldUnit}</span>\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n      <Card.Body className=\"p-2\">\r\n        <div className=\"mb-n2\">\r\n          <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n          {subFormulaKeys.map(subKey =>\r\n            <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></p>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\ntype DamageOptionsAndCalculationProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any: characterReducerAction) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  className: string\r\n}\r\nexport default function DamageOptionsAndCalculation({ sheets, sheets: { characterSheet, weaponSheet }, character, character: { hitMode }, characterDispatch, newBuild, equippedBuild, className }: DamageOptionsAndCalculationProps) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle character={character} build={build} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle callback={undefined} {...{ as: Button }} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value })}\r\n                    />\r\n                  </Col>\r\n                  {[\"physical\", ...allElements].map(eleKey => {\r\n                    let statKey = `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay sheets={sheets} build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","import React from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport FieldDisplay from \"../Components/FieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nexport default function WeaponStatsCard({ title, statsVals = {}, stats }: { title: Displayable, statsVals?: object, stats: ICalculatedStats }) {\r\n  if ((Object.keys(statsVals ?? {}) as any).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay newBuild={undefined} key={i} index={i} {...{ field, equippedBuild: stats, className: \"px-3 py-2\" }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","import { faExchangeAlt, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport { Badge, Button, ButtonGroup, Card, Col, Dropdown, Image, InputGroup, Modal, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport EquipmentDropdown from \"../Components/EquipmentDropdown\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport { ascensionMaxLevel, milestoneLevels } from \"../Data/CharacterData\"\r\nimport { DatabaseContext, database as localDatabase } from \"../Database/Database\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { useForceUpdate, usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport { WeaponSelectionButton } from \"./WeaponSelection\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\nimport WeaponStatsCard from \"./WeaponStatsCard\"\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  charData?: {\r\n    character: ICachedCharacter,\r\n    characterSheet: CharacterSheet,\r\n    equippedBuild?: ICalculatedStats\r\n    newBuild?: ICalculatedStats\r\n    characterDispatch: (any) => void\r\n  }\r\n  editable?: boolean\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  charData,\r\n  editable = false,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(propWeaponId!)!,\r\n    [propWeaponId, databaseToken, database])\r\n  const { key, level, refine, ascension } = weapon\r\n  const { location = \"\", id } = weapon as Partial<ICachedWeapon>\r\n  const weaponSheet: WeaponSheet | undefined = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  useEffect(() =>\r\n    propWeaponId ? database.followWeapon(propWeaponId, onDatabaseUpdate) : undefined,\r\n    [propWeaponId, onDatabaseUpdate, database])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const ambiguousLevel = level !== 90 && ascensionMaxLevel.findIndex(ascenML => level === ascenML) > 0\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const build = { ...(charData ? (charData.newBuild ?? charData.equippedBuild) : { weapon: { refineIndex: refine - 1, level, ascension } }) } as any\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          {editable ? <InputGroup >\r\n            <ButtonGroup as={InputGroup.Prepend}>\r\n              <WeaponSelectionButton weaponSheet={weaponSheet} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} />\r\n              <Dropdown as={ButtonGroup}>\r\n                <Dropdown.Toggle as={Button}>Refinement {refine}</Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.ItemText>\r\n                    <span>Select Weapon Refinement</span>\r\n                  </Dropdown.ItemText>\r\n                  <Dropdown.Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => weaponDispatch({ refine: key + 1 })}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </ButtonGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text><strong>Lvl. </strong></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <InputGroup.Append>\r\n              <CustomFormControl placeholder={undefined} onChange={level => weaponDispatch({ level })} value={level} min={1} max={90} />\r\n            </InputGroup.Append>\r\n            <InputGroup.Append>\r\n              <Button disabled={!ambiguousLevel} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n            </InputGroup.Append>\r\n            <ButtonGroup as={InputGroup.Append}>\r\n              <Dropdown as={ButtonGroup}>\r\n                <Dropdown.Toggle as={Button}>Select Level</Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    return <Dropdown.Item key={`${lv}/${as}`} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</Dropdown.Item>\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </ButtonGroup>\r\n          </InputGroup> : <span>Weapon</span>}\r\n        </Col>\r\n        {!!onClose && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n        {!!charData && editable && database === localDatabase && <Col xs=\"auto\">\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, charData.character.key)} />\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      {(() => {\r\n        if (!weaponSheet) return null\r\n        const substatKey = weaponSheet.getSubStatKey()\r\n        const weaponDisplayMainVal = weaponSheet.getMainStatValue(level, ascension)\r\n        const weaponDisplaySubVal = weaponSheet.getSubStatValue(level, ascension)\r\n        const weaponPassiveName = weaponSheet.passiveName\r\n        const weaponBonusStats = weaponSheet.stats(build)\r\n        const sections = weaponSheet.document\r\n\r\n        return <Row className=\"mb-n2\">\r\n          <Col xs={12} md={3} lg={4}>\r\n            <Image src={weaponSheet.img} className={`w-100 h-auto grad-${weaponSheet.rarity}star`} thumbnail />\r\n            <small>{weaponSheet.description}</small>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"mb-0\">{process.env.NODE_ENV === \"development\" && <span className=\"text-warning\">{id || `\"\"`} </span>}{weaponSheet.name} Lv. {WeaponSheet.getLevelString(weapon)} {weaponPassiveName && <Badge variant=\"info\">Refinement {refine}</Badge>}</h5>\r\n            <div className=\"mb-2\"><Stars stars={weaponSheet.rarity} /></div>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <div className=\"mb-2\">{weaponPassiveName && weaponSheet.passiveDescription(build)}</div>\r\n            {build && <>\r\n              <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: substatKey ? weaponDisplaySubVal : undefined }} stats={build} />\r\n              <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            </>}\r\n            {charData && sections ? (() => {\r\n              const { equippedBuild, newBuild, characterDispatch } = charData\r\n              return < DocumentDisplay  {...{ sections, equippedBuild, newBuild, characterDispatch, editable }} />\r\n            })() : null}\r\n          </Col>\r\n        </Row>\r\n      })()}\r\n    </Card.Body>\r\n    {footer && id && <Card.Footer><Row>\r\n      <Col><EquipmentDropdown location={location} onEquip={cKey => database.setWeaponLocation(id, cKey)} weaponTypeKey={weaponSheet?.weaponType} disableUnequip={!!weapon.location} editable={editable} /></Col>\r\n      {!!onClose && <Col xs=\"auto\"><Button variant=\"danger\" onClick={onClose}>Close</Button></Col>}\r\n    </Row></Card.Footer>}\r\n  </Card>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button variant=\"info\" onClick={open} ><FontAwesomeIcon icon={faExchangeAlt} /> SWAP WEAPON</Button>\r\n    <Modal show={show} size=\"xl\" contentClassName=\"bg-transparent\" onHide={close}>\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>{weaponTypeKey ? <Image src={Assets.weaponTypes[weaponTypeKey]} className=\"inline-icon\" /> : null} <h5 className=\"mb-0 d-inline\">Swap Weapon</h5></Col>\r\n            <Col xs=\"auto\">\r\n              <Button onClick={close} variant=\"danger\"><FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            {weaponIdList.map(weaponId =>\r\n              <Col key={weaponId} lg={4} md={6} className=\"mb-2\">\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  // header={undefined}\r\n                  cardClassName=\"h-100\"\r\n                  // characterKey={charKey}\r\n                  onClick={clickHandler}\r\n                  footer\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Modal></>\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"onClick\"];\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // eslint-disable-next-line no-nested-ternary\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;"],"sourceRoot":""}