{"version":3,"sources":["Character/CharacterUtil.tsx","Character/CharacterCard.tsx","Character/CharacterDisplay.tsx"],"names":["getFormulaTargetsDisplayHeading","key","characterSheet","weaponSheet","artifactSheets","eleKey","startsWith","subkey","split","getTalentOfKey","name","setKey","num","variant","initialCharacter","level","ascension","hitMode","reactionMode","equippedArtifacts","objectFromKeyMap","allSlotKeys","equippedWeapon","conditionalValues","bonusStats","buildSettings","initialBuildSettings","talent","auto","skill","burst","infusionAura","constellation","CharacterCard","characterKey","onEdit","onDelete","cardClassName","bg","header","footer","database","useContext","DatabaseContext","useState","undefined","databaseCharacter","updateDatabaseCharacter","useEffect","followChar","usePromise","ArtifactSheet","getAll","character","CharacterSheet","get","weapon","_getWeapon","WeaponSheet","stats","useMemo","Character","calculateBuild","tlvl","elementKey","characterEle","weaponTypeKey","weaponName","weaponMainVal","getMainStatValue","toFixed","Stat","fixedUnit","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","weaponLevelName","getLevelString","weaponPassiveName","passiveName","className","text","Header","xs","size","onClick","icon","faEdit","faTrashAlt","Body","src","thumbImg","star","thumbnail","stars","colored","StatIcon","Assets","weaponTypes","refinement","getStatName","getStatUnit","Object","entries","setEffects","setToSlots","map","arr","artifactSetName","highestNum","Math","max","statKey","unit","statVal","Footer","as","Link","to","pathname","faCalculator","faLink","InfoDisplay","React","lazy","CharacterDisplayCard","toggle","rarity","filterReducer","oldFilter","newFilter","CharacterDisplay","props","characterKeyToEdit","setCharacterKeyToEdit","keys","sortBy","setsortBy","useReducer","elementalFilter","elementalFilterDispatch","weaponFilter","weaponFilterDispatch","newCharacter","setnewCharacter","useForceUpdate","forceUpdate","scrollRef","useRef","ReactGA","pageview","saved","dbStorage","allElements","includes","allWeaponTypeKeys","followAnyChar","allCharacterSheets","sortingFunc","ck","_getChar","save","set","deleteCharacter","useCallback","cKey","a","chararcterSheet","i18next","t","window","confirm","removeChar","editCharacter","newChar","updateChar","defaultInitialWeapon","weaponId","createWeapon","setWeaponLocation","setTimeout","current","scrollIntoView","behavior","cancelEditCharacter","charKeyList","_getCharKeys","filter","sort","b","diff","ref","pageKey","modalTitle","Suspense","fallback","animation","setCharacterKey","onClose","CharDisplayFooter","uncoloredEleIcons","weaponType","type","value","onChange","lg","md","faPlus","show","onHide","onSelect","charKey"],"mappings":"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","file":"static/js/22.e3cedec0.chunk.js","sourcesContent":["import { Badge } from \"react-bootstrap\"\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\"\r\nimport { initialBuildSettings } from \"../Build/BuildSetting\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { allSlotKeys, ArtifactSetKey, CharacterKey, ElementKey } from \"../Types/consts\"\r\nimport { objectFromKeyMap } from \"../Util/Util\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport CharacterSheet from \"./CharacterSheet\"\r\n\r\nexport function getFormulaTargetsDisplayHeading(key: string, { characterSheet, weaponSheet, artifactSheets }: { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet> }, eleKey: ElementKey = \"anemo\") {\r\n  if (key === \"basicKeys\") return \"Basic Stats\"\r\n  else if (key === \"genericAvgHit\") return \"Generic Optimization Values\"\r\n  else if (key === \"transReactions\") return \"Transformation Reaction\"\r\n  else if (key.startsWith(\"talentKey_\")) {\r\n    const subkey = key.split(\"talentKey_\")[1]\r\n    return (characterSheet?.getTalentOfKey(subkey, eleKey)?.name ?? subkey)\r\n  } else if (key.startsWith(\"weapon_\")) {\r\n    const subkey = key.split(\"weapon_\")[1]\r\n    return (weaponSheet?.name ?? subkey)\r\n  } else if (key.startsWith(\"artifact_\")) {\r\n    const [, setKey, num] = key.split('_')\r\n    return <span>{artifactSheets[setKey]?.name} <Badge variant=\"success\">{num}-Set</Badge></span>\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key, // the game character this is based off\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: objectFromKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    conditionalValues: {},\r\n    bonusStats: {},\r\n    buildSettings: initialBuildSettings(),\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n  }\r\n}","import { faCalculator, faEdit, faLink, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useContext, useEffect, useMemo, useState } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport StatIcon from '../Components/StatIcon';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport Stat from '../Stat';\r\nimport { ICachedCharacter } from '../Types/character';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { ICachedWeapon } from '../Types/weapon';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\ntype CharacterCardProps = { characterKey: CharacterKey | \"\", onEdit?: (any) => void, onDelete?: (any) => void, cardClassName: string, header?: JSX.Element, bg?: string, footer?: boolean }\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer = false }: CharacterCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseCharacter, updateDatabaseCharacter] = useState(undefined as ICachedCharacter | undefined)\r\n  useEffect(() =>\r\n    characterKey ? database.followChar(characterKey, updateDatabaseCharacter) : undefined,\r\n    [characterKey, updateDatabaseCharacter, database])\r\n\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n  const character = databaseCharacter\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const weapon = character?.equippedWeapon ? database._getWeapon(character.equippedWeapon) : undefined\r\n  const weaponSheet = usePromise(weapon ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets, database])\r\n  if (!character || !weapon || !characterSheet || !weaponSheet || !stats) return null;\r\n\r\n  const { constellation } = character\r\n  const { level, ascension } = weapon\r\n  const { tlvl } = stats\r\n  const name = characterSheet.name\r\n  const elementKey = stats.characterEle\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponName = weaponSheet?.name\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponLevelName = WeaponSheet.getLevelString(weapon as ICachedWeapon)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {header ? header : <h5><b>{name}</b></h5>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(characterKey)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete(characterKey)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onEdit?.(characterKey)} className={onEdit ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={characterSheet.thumbImg} className={`thumb-big grad-${characterSheet.star}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h5 className=\"mb-0\">Lv. {Character.getLevelString(character)} {`C${constellation}`}</h5>\r\n          <h6 className=\"mb-0\">\r\n            <Badge variant=\"secondary\"><strong className=\"mx-1\">{tlvl.auto + 1}</strong></Badge>{` `}\r\n            <Badge variant=\"secondary\"><strong className=\"mx-1\">{tlvl.skill + 1}</strong></Badge>{` `}\r\n            <Badge variant=\"secondary\"><strong className=\"mx-1\">{tlvl.burst + 1}</strong></Badge>\r\n          </h6>\r\n          <h6 className=\"mb-0\"><Stars stars={characterSheet.star} colored /></h6>\r\n          <h3 className=\"mb-0\">{StatIcon[elementKey]} <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && <Badge variant=\"info\" className=\"ml-1\">{weapon.refinement}</Badge>} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = artifactSheets?.[key].name ?? \"\"\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = stats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIcon[statKey]} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Row>\r\n        <Col><Button as={Link} to={{\r\n          pathname: \"/build\",\r\n          characterKey\r\n        } as any}><FontAwesomeIcon icon={faCalculator} /> Generate Builds</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button variant=\"info\" as={Link} to={{ pathname: \"/flex\", characterKey } as any}><FontAwesomeIcon icon={faLink} /> Share Character</Button>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faCalculator, faLink, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport i18next from 'i18next';\r\nimport React, { lazy, useCallback, useContext, useEffect, useReducer, useRef, useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Col, Container, Image, Row, Spinner, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { Link } from 'react-router-dom';\r\nimport Assets from '../Assets/Assets';\r\nimport InfoComponent from '../Components/InfoComponent';\r\nimport { uncoloredEleIcons } from '../Components/StatIcon';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport { dbStorage } from '../Database/DBStorage';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { allElements, allWeaponTypeKeys, CharacterKey } from '../Types/consts';\r\nimport { defaultInitialWeapon } from '../Weapon/WeaponUtil';\r\nimport CharacterCard from './CharacterCard';\r\nimport { CharacterSelectionModal } from './CharacterSelection';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { initialCharacter } from './CharacterUtil';\r\n\r\nconst InfoDisplay = React.lazy(() => import('./InfoDisplay'));\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCard = lazy(() => import('./CharacterDisplayCard'))\r\nconst toggle = {\r\n  level: \"Level\",\r\n  rarity: \"Rarity\",\r\n  name: \"Name\"\r\n} as const\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\nexport default function CharacterDisplay(props) {\r\n  const database = useContext(DatabaseContext)\r\n  const [characterKeyToEdit, setCharacterKeyToEdit] = useState(\"\" as CharacterKey | \"\")\r\n  const [sortBy, setsortBy] = useState(() => Object.keys(toggle)[0])\r\n  const [elementalFilter, elementalFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [newCharacter, setnewCharacter] = useState(false)\r\n  const [, forceUpdate] = useForceUpdate()\r\n  const scrollRef = useRef(null as any)\r\n  useEffect(() => {\r\n    ReactGA.pageview('/character')\r\n    const saved = dbStorage.get(\"CharacterDisplay.state\")\r\n    if (saved) {\r\n      const { characterKeyToEdit, sortBy, elementalFilter, weaponFilter } = saved\r\n      characterKeyToEdit && setCharacterKeyToEdit(characterKeyToEdit)\r\n      sortBy && setsortBy(sortBy)\r\n      allElements.includes(elementalFilter) && elementalFilterDispatch(elementalFilter)\r\n      allWeaponTypeKeys.includes(weaponFilter) && weaponFilterDispatch(weaponFilter)\r\n    }\r\n    return database.followAnyChar(forceUpdate)\r\n  }, [forceUpdate, database])\r\n  const allCharacterSheets = usePromise(CharacterSheet.getAll(), []) ?? {}\r\n  const sortingFunc = {\r\n    level: (ck) => database._getChar(ck)?.level ?? 0,\r\n    rarity: (ck) => allCharacterSheets[ck]?.star\r\n  }\r\n  useEffect(() => {\r\n    const save = { characterKeyToEdit, sortBy, elementalFilter, weaponFilter }\r\n    dbStorage.set(\"CharacterDisplay.state\", save)\r\n  }, [characterKeyToEdit, sortBy, elementalFilter, weaponFilter])\r\n  const deleteCharacter = useCallback(async (cKey: CharacterKey) => {\r\n    const chararcterSheet = await CharacterSheet.get(cKey)\r\n    let name = chararcterSheet?.name\r\n    //use translated string\r\n    if (typeof name === \"object\")\r\n      name = i18next.t(`char_${cKey}_gen:name`)\r\n\r\n    if (!window.confirm(`Are you sure you want to remove ${name}?`)) return\r\n    database.removeChar(cKey)\r\n    if (characterKeyToEdit === cKey)\r\n      setCharacterKeyToEdit(\"\")\r\n  }, [characterKeyToEdit, setCharacterKeyToEdit, database])\r\n\r\n  const editCharacter = useCallback(cKey => {\r\n    if (!database._getChar(cKey))\r\n      (async () => {\r\n        //Create a new character + weapon, with linking.\r\n        const newChar = initialCharacter(cKey)\r\n        database.updateChar(newChar)\r\n        const characterSheet = await CharacterSheet.get(cKey)\r\n        if (!characterSheet) return\r\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\r\n        const weaponId = database.createWeapon(weapon)\r\n        database.setWeaponLocation(weaponId, cKey)\r\n        setCharacterKeyToEdit(cKey)\r\n      })()\r\n    else\r\n      setCharacterKeyToEdit(cKey)\r\n    setTimeout(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, 500);\r\n  }, [setCharacterKeyToEdit, scrollRef, database])\r\n\r\n  const cancelEditCharacter = useCallback(() => {\r\n    setCharacterKeyToEdit(\"\")\r\n    setnewCharacter(false)\r\n  }, [setCharacterKeyToEdit])\r\n\r\n  const charKeyList = database._getCharKeys().filter(cKey => {\r\n    if (elementalFilter && elementalFilter !== allCharacterSheets[cKey]?.elementKey) return false\r\n    if (weaponFilter && weaponFilter !== allCharacterSheets[cKey]?.weaponTypeKey) return false\r\n    return true\r\n  }).sort((a, b) => {\r\n    if (sortBy === \"name\") {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      // names must be equal\r\n      return 0;\r\n    }\r\n    if (sortBy === \"level\") {\r\n      const diff = sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n    } else {\r\n      const diff = sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n    }\r\n  })\r\n  return <Container ref={scrollRef} className=\"mt-2\">\r\n    <InfoComponent\r\n      pageKey=\"characterPage\"\r\n      modalTitle=\"Character Management Page Guide\"\r\n      text={[\"Every character will be tested with in-game numbers for maximum accuracy.\",\r\n        \"You can see the details of the calculations of every number.\",\r\n        \"You need to manually enable auto infusion for characters like Choungyun or Noelle.\",\r\n        \"You can change character constellations in both \\\"Character\\\" tab and in \\\"Talents\\\" tab.\",\r\n        \"Modified character Stats show up in yellow.\"]}\r\n    >\r\n      <InfoDisplay />\r\n    </InfoComponent>\r\n    {/* editor/character detail display */}\r\n    {!!characterKeyToEdit ? <Row className=\"mt-2\"><Col>\r\n      <React.Suspense fallback={<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n        <Card.Body><h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3></Card.Body>\r\n      </Card>}>\r\n        <CharacterDisplayCard\r\n          setCharacterKey={editCharacter}\r\n          characterKey={characterKeyToEdit}\r\n          onClose={cancelEditCharacter}\r\n          footer={<CharDisplayFooter onClose={cancelEditCharacter} characterKey={characterKeyToEdit} />}\r\n        />\r\n      </React.Suspense>\r\n    </Col></Row> : null}\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              {allElements.map(eleKey => <Button key={eleKey} variant={(!elementalFilter || elementalFilter === eleKey) ? eleKey : \"secondary\"} className=\"py-1 px-2 text-white\" onClick={() => elementalFilterDispatch(eleKey)} >\r\n                <h3 className=\"mb-0\">{uncoloredEleIcons[eleKey]}</h3>\r\n              </Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {allWeaponTypeKeys.map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"secondary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}>\r\n                  <h3 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h3></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <span>Sort by: </span>\r\n            <ToggleButtonGroup type=\"radio\" name=\"level\" value={sortBy} onChange={setsortBy}>\r\n              {Object.entries(toggle).map(([key, text]) =>\r\n                <ToggleButton key={key} value={key} variant={sortBy === key ? \"success\" : \"primary\"}>\r\n                  <h6 className=\"mb-0\">{text}</h6>\r\n                </ToggleButton>)}\r\n            </ToggleButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Row className=\"mt-2\">\r\n      {!characterKeyToEdit && <Col lg={4} md={6} className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n          <Card.Header className=\"pr-2\">\r\n            <span>Add New Character</span>\r\n          </Card.Header>\r\n          <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n            <Row className=\"d-flex flex-row justify-content-center\">\r\n              <Col xs=\"auto\">\r\n                <Button onClick={() => setnewCharacter(true)}>\r\n                  <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                </Button>\r\n                <CharacterSelectionModal show={newCharacter} onHide={() => setnewCharacter(false)} onSelect={editCharacter} />\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>}\r\n      {charKeyList.map(charKey =>\r\n        <Col key={charKey} lg={4} md={6} className=\"mb-2\">\r\n          <CharacterCard\r\n            header={undefined}\r\n            cardClassName=\"h-100\"\r\n            characterKey={charKey}\r\n            onDelete={deleteCharacter}\r\n            onEdit={editCharacter}\r\n            footer\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n  </Container>\r\n}\r\nfunction CharDisplayFooter({ onClose, characterKey }) {\r\n  return <Row>\r\n    <Col xs=\"auto\">\r\n    <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      } as any}><FontAwesomeIcon icon={faCalculator} /> Generate Builds</Button>\r\n    </Col>\r\n    <Col>\r\n    <Button variant=\"info\" as={Link} to={{ pathname: \"/flex\", characterKey } as any}><FontAwesomeIcon icon={faLink} /> Share Character</Button>\r\n    </Col>\r\n    <Col xs=\"auto\">\r\n      <Button variant=\"danger\" onClick={onClose}>Close</Button>\r\n    </Col>\r\n  </Row>\r\n}"],"sourceRoot":""}