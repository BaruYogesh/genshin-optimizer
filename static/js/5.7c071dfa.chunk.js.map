{"version":3,"sources":["Character/Character.js","Components/SlotIcon.js","Data/ArtifactLookupTable.js","Artifact/Artifact.js","Data/ElementalData.js","Util/FieldUtil.js","Formula.js","Conditional/Conditional.js","Data/WeaponData.js","StatData.js","Weapon/Weapon.js","Components/StarDisplay.js","Components/StatIcon.js","Data/CharacterData.js","StatDependency.js","Util/ReactUtil.js","Data/ArtifactData.js","StatConstants.js","Stat.js"],"names":["Character","this","Error","characterKey","talentKey","formula","formulaDB","getCDataObj","formulaKey","tk","Object","entries","find","character","CharacterDatabase","get","equippedArtifacts","values","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getCharacterDataImport","CharacterDataImport","getBaseStatValue","statKey","defVal","levelKey","getSpecializedStatKey","getSpeicalizedStatVal","Weapon","getWeaponMainStatValWithOverride","weapon","getLevel","includes","characterStatBase","characterObj","baseStat","getIndexFromlevelkey","charKey","CharacterData","getElementalName","elementalKey","ElementalData","name","getAllCharacterKeys","keys","getName","getStar","star","getElementalKey","elementKey","getElementalKeys","getElementalKeysWithoutPhysical","filter","e","getWeaponTypeKey","weaponTypeKey","getConstellationName","constellationName","getTitles","titles","getlevelKeys","LevelsData","getlevelTemplateName","getLevelString","levelOverride","getStatValueWithOverride","indexOf","level","getAscension","asend","getSpecializedStat","specializeStat","key","value","getThumb","thumbImg","getCard","cardImg","getTalentImg","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","constellation","talents","i","talentBoost","boostEntry","getTalentDocument","document","getTalentDocumentSections","stats","map","section","getTalentField","sectionIndex","fieldIndex","field","fields","getTalentFieldValue","getTalentStats","talentStats","getTalentStatsAll","statsArr","push","isAutoElemental","isMelee","hasTalentPage","Boolean","length","getDisplayStatKeys","basicKeys","eleKey","transReactions","deepClone","ElementToReactionKeys","Formula","formulas","charFormulas","canShow","genericAvgHit","reactions","startsWith","replace","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","Artifact","getSlotKeys","slotKey","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifact","fromEntries","sKey","update","calculateBuild","artifacts","mainStatAssumptionLevel","art","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","artifactSetEffectsStats","getArtifactSetEffectsStats","mainStatKey","getMainStatValue","numStars","Math","max","min","substats","substat","stat","statVal","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","condStats","resolve","val","dependencies","GetDependencies","modifiers","PreprocessFormulas","mergeStats","modifier","mkey","multiplier","undefined","hitMode","infusionAura","reactionMode","talentLevelKeys","ascension","statKeys","characterEle","weaponType","tlvl","overrides","hasOwnProperty","specializedStatVal","specialStatKey","s","weaponSubKey","getWeaponSubStatKey","getWeaponSubStatValWithOverride","getWeaponBonusStat","weaponCond","otherCond","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactSubstatLookupTable","hp","3","4","5","eleMas","atk","def","def_","critRate_","atk_","critDMG_","hp_","enerRech_","state","errors","allSubstatRolls","total","index","substatRolls","getSubstatRolls","Set","roll","size","rolls","efficiency","getSubstatEfficiency","Stat","getStatNameWithPercent","some","minimum","getBaseSubRollNumLow","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accurateValue","reduce","sum","cur","getArtifactEfficiency","currentEfficiency","maximumEfficiency","accu","current","totalRolls","ArtifactSubstatsMinMax","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getDataImport","ArtifactDataImport","getSetKeys","ArtifactData","getSetName","getSetsByMaxStarEntries","setobj","rarity","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","getSetEffects","setNumKeys","getSetEffectText","setEffectText","text","getSetEffectConditionals","setEffect","conditionals","default","ArtifactSlotsData","getSlotName","getSlotIcon","icon","className","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","ArtifactStarsData","getRarityArr","getMainStatKeys","ArtifactMainSlotKeys","getMainStatValues","numStar","ArtifactMainStatsData","main","subsBaselow","getBaseSubRollNumHigh","subBaseHigh","getNumUpgradesOrUnlocks","numUpgradesOrUnlocks","getSubstatAllMax","getSubStatKeys","ArtifactSubStatsData","subStatCloseEnough","value1","value2","getStatUnit","closeEnoughFloat","closeEnoughInt","ceil","numberOfSubstatUnlocked","getSubstatRollData","subStatKey","subStatValue","rollData","table","lookupValue","toFixed","a","b","clampPercent","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffectObj","physical","anemo","geo","electro","hydro","pyro","cryo","modifiersToFields","mStatKey","getStatName","variant","getStatVariant","formulaText","printStat","fixed","fixedUnit","unit","statsToFields","statVals","StatIconEle","flat","fieldProcessing","CharacterFormulaImport","then","imp","src","crawlObject","f","objPathValue","processed","Promise","charImport","res","addConditional","artImport","setNumObj","c","weaponImport","WeaponDataImport","WeaponData","all","source","findConditionals","obj","callback","condKey","states","maxStack","layeredAssignment","trigger","stacks","stateKey","conditionalStats","objMultiplication","Array","isArray","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","StatData","characterHP","pretty","const","characterDEF","characterATK","characterLevel","weaponATK","baseATK","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","infusionSelf","Formulas","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","dendro","dependencyKeys","debug","constData","formulaList","tmp","constModifier","k","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","func","console","log","error","assign","hitMoves","move","moveName","clamp","hitElements","ele","eleName","opt","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","getWeaponDataImport","getLevelName","getLevelIndex","getWeaponName","weaponKey","getWeaponRarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","charFinalStats","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","getWeaponTypeName","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","StarIcon","faStar","Stars","stars","colored","_","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","CharacterSpecializedStatKey","GetFormulaDependency","dependency","Proxy","target","prop","receiver","add","formulaKeyDependency","freeze","InsertDependencies","has","useForceUpdate","useState","useCallback","1","physical_dmg_","ele_dmg_","2","getArrLastElement","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","htmlStatsData","getStatNamePretty","getStatNameRaw","expand","getPrintableFormulaStatKeyList","statList","FormulaText","printFormula","modifierText","options","statName","statUnit","o"],"mappings":"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AG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhDE,IAAK,CACDJ,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDG,IAAK,CACDL,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDI,KAAM,CACFN,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,KAC/KC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3sBC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EA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AG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EA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","file":"static/js/5.7c071dfa.chunk.js","sourcesContent":["import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport Formula from \"../Formula\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelTemplateName = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getLevelString = (character) => {\r\n    const levelOverride = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n    return Character.getLevel(character.levelKey) === levelOverride ? Character.getlevelTemplateName(character.levelKey) : `Lvl. ${levelOverride}`\r\n  }\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentDocumentSections = (stats, talentKey) =>\r\n    this.getTalentDocument(stats.characterKey, talentKey).map(section => typeof section === \"function\" ? section(stats) : section)\r\n\r\n  static getTalentField = (stats, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\r\n    if (!stats) return defVal\r\n    const field = this.getTalentDocumentSections(stats, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\r\n    if (!field) return defVal\r\n    return typeof field === \"function\" ? field(stats) : field\r\n  }\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return typeof field?.[key] === \"function\" ? field[key](stats) : field[key]\r\n  }\r\n\r\n  static getTalentStats = (charKey, talentKey, stats, defVal = null) => {\r\n    const talentStats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof talentStats === \"function\")\r\n      return talentStats(stats)\r\n    return talentStats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, stats) => {\r\n    const talents = this.getCDataObj(charKey)?.talent || {}\r\n    const statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(charKey, talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isMelee = (charKey, defVal = false) => {\r\n    const weaponTypeKey = this.getWeaponTypeKey(charKey)\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\" || defVal\r\n  }\r\n\r\n  //look up the formula, and generate the formulaPath to send to worker.\r\n  static getFormulaPath(characterKey, talentKey, formula) {\r\n    const formulaDB = this.getCDataObj(characterKey)?.formula\r\n    if (!formulaDB) return\r\n    let formulaKey\r\n    if (talentKey === \"auto\") {\r\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\r\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\r\n        if (formulaKey) {\r\n          talentKey = tk\r\n          break;\r\n        }\r\n      }\r\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\r\n    if (!formulaKey) return\r\n    return { characterKey, talentKey, formulaKey }\r\n  }\r\n\r\n  static hasTalentPage = (characterKey) => Boolean(Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).length)//TODO: remove when all chararacter sheets are complete\r\n\r\n  static getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats || !Object.keys(stats).length) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = Character.isAutoElemental(characterKey)\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (Formula.formulas.character?.[characterKey]) {\r\n      const charFormulas = {}\r\n      Object.entries(Formula.formulas.character[characterKey]).forEach(([talentKey, formulas]) => {\r\n        Object.values(formulas).forEach(formula => {\r\n          if (!formula.field.canShow(stats)) return\r\n          if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n          if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n          charFormulas[talentKey].push(formula.keys)\r\n        })\r\n      })\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {//TODO: doesnt have character sheet\r\n      //generic average hit parameters.\r\n      const genericAvgHit = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical \r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst \r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    const artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      const artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar?.location === characterKey) return; //it is already equipped\r\n      const artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      const notCharLoc = (artNotOnChar?.location ?? \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = Object.fromEntries(Artifact.getSlotKeys().map(sKey => [sKey, \"\"]))\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character, mainStatAssumptionLevel = 0) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.createInitialStats(character)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return this.calculateBuildwithArtifact(initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats, artifacts) => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(stats.mainStatAssumptionLevel, art.numStars * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return stats\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n\r\n  static createInitialStats = (character) => {\r\n    if (!character) return {}\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, infusionAura, reactionMode, talentLevelKeys, constellation, equippedArtifacts, conditionalValues = {}, weapon = { key: \"\" } } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    initialStats.characterEle = this.getElementalKey(characterKey);\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = weapon\r\n    initialStats.equippedArtifacts = equippedArtifacts\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, initialStats).forEach(s => this.mergeStats(initialStats, s))\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, initialStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      this.mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats\r\n  }\r\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export const ArtifactSubstatLookupTable = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport Conditional from '../Conditional/Conditional';\r\nimport { ArtifactData, ArtifactDataImport, ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, stats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(stats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditionals = (setKey, setNumKey, defVal = null) => {\r\n    const setEffect = this.getSetEffectsObj(setKey)?.[setNumKey]\r\n    if (setEffect?.conditional || setEffect?.conditionals) {\r\n      return {\r\n        ...setEffect?.conditional && { default: setEffect?.conditional },\r\n        ...setEffect?.conditionals && setEffect?.conditionals\r\n      }\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\r\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return []\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return []\r\n\r\n    let table = ArtifactSubstatLookupTable[subStatKey][numStars]\r\n    let lookupValue = subStatValue.toFixed(1)\r\n\r\n    if (table[lookupValue])\r\n      return table[lookupValue].map(roll => roll.map(i => rollData[i]))\r\n    else return [] // Lookup fails\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls) => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = this.getSubstatAllMax(subStatKey) * rolls.length\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    const { numStars, level, substats } = state, errors = []\r\n\r\n    const allSubstatRolls = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = Artifact.getSubstatRolls(key, value, numStars)\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => substat.rolls.length > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const minimum = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls, maxRolls, total) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(substats[index].key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + current.rolls.length, 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    } else {\r\n      // Found valid build, filling missing data\r\n      for (const substat of substats)\r\n        substat.accurateValue = substat.rolls.reduce((sum, cur) => sum + cur, 0)\r\n      const { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n      state.currentEfficiency = currentEfficiency\r\n      state.maximumEfficiency = maximumEfficiency\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let current = substats.reduce((sum, { key, accurateValue }) => sum + (key ? (accurateValue / ArtifactSubstatsMinMax[key].max[maxStar]) : 0), 0)\r\n    let maximum = current + rollsRemaining\r\n    let currentEfficiency = current * 100 / totalRolls\r\n    let maximumEfficiency = maximum * 100 / totalRolls\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  static getAllArtifactSetEffectsObj = stats => {\r\n    let ArtifactSetEffectsObj = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n      ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.unequipArtifactOnSlot(location, slotKey)\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey] * multiplier, 0),\r\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}) {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","import { crawlObject, objPathValue } from './Util/Util';\r\nexport let CharacterFormulaImport = import('./Data/Characters/formula')\r\nCharacterFormulaImport.then(imp => {\r\n  addFormula(imp.default, \"character\")\r\n  CharacterFormulaImport = null\r\n})\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas = {}\r\n  static get = (keys, defVal = null) => objPathValue(this.formulas, keys) ?? defVal\r\n}\r\n\r\nfunction addFormula(src, key) {\r\n  Formula.formulas[key] = src\r\n  crawlObject(src, [key], f => typeof f === \"function\", (formula, keys) => {\r\n    formula.keys = keys\r\n  })\r\n}\r\n","import { ArtifactData, ArtifactDataImport } from \"../Data/ArtifactData\"\r\nimport { CharacterDataImport, CharacterData } from \"../Data/CharacterData\"\r\nimport { WeaponData, WeaponDataImport } from \"../Data/WeaponData\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\"\r\n\r\nconst processed = new Promise(resolve => {\r\n  //attach character conditionals to Conditional\r\n  const charImport = new Promise(res =>\r\n    Promise.resolve(CharacterDataImport).then(() => {\r\n      addConditional(CharacterData, \"character\")\r\n      res()\r\n    }))\r\n\r\n  const artImport = new Promise(res =>\r\n    Promise.resolve(ArtifactDataImport).then(() => {\r\n      addConditional(ArtifactData, \"artifact\")\r\n      //attach metadata prop setNumKey to the conditional\r\n      Object.values(ArtifactData).forEach(setObj =>\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n          if (setNumObj.conditional) setNumObj.conditional.setNumKey = setNumKey\r\n          if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach(c => c.setNumKey = setNumKey)\r\n        }))\r\n      res()\r\n    }))\r\n\r\n  const weaponImport = new Promise(res =>\r\n    Promise.resolve(WeaponDataImport).then(() => {\r\n      addConditional(WeaponData, \"weapon\")\r\n      res()\r\n    }))\r\n\r\n  Promise.all([charImport, artImport, weaponImport]).then(resolve)\r\n})\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    if (!conditionalValue) conditionalValue = conditional.trigger?.(stats)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(this.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = this.get(keys, null)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach(state => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20/40\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40/50\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50/60\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60/70\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70/80\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80/90\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nconst StatData = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" }\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\r\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, charFinalStats, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(charFinalStats) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, stats, defVal = {}) => WeaponData[weaponKey]?.stats?.(stats) ?? WeaponData[weaponKey]?.stats ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20/40\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40/50\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50/60\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60/70\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70/80\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80/90\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","import { useCallback, useState } from \"react\"\r\n\r\nexport function useForceUpdate() {\r\n  const [, update] = useState()\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return forceUpdateHook\r\n}","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [ \"pyro\" ] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [ \"physical\" ] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [ \"electro\" ] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [ \"cryo\" ] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [ \"pyro\", \"hydro\", \"electro\", \"cryo\" ] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [ 0,\r\n  17.2,  18.5,  19.9,  21.3,  22.6,  24.6,  26.6,  28.9,  31.4,  34.1,\r\n  37.2,  40.7,  44.4,  48.6,  53.7,  59.1,  64.4,  69.7,  75.1,  80.6,\r\n  86.1,  91.7,  97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n 142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n 215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n 336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n 509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n 742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n 968.6, 991.0,1013.5,1036.1,1066.6,1090.0,1115.0,1141.7,1171.9,1202.8,\r\n1202.8,1233.9,1264.7,1305.7,1346.1,1468.9,1524.0,1577.0,1627.6,1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [ 0,\r\n  91,  99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n 170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n 320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n 448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n 574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n 733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n 915, 936, 956, 982,1003,1017,1036,1057,1075,1096,\r\n1114,1135,1149,1170,1191,1205,1224,1243,1260,1277,\r\n1293,1308,1317,1327,1336,1349,1366,1384,1403,1424,\r\n1450,1478,1507,1543,1570,1580,1589,1673,1682,1691,\r\n]","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ ele ] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n    })    \r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n"],"sourceRoot":""}