{"version":3,"sources":["../node_modules/react-bootstrap/esm/Button.js","Character/CharacterDisplay/Components/FieldDisplay.tsx","Components/CustomFormControl.tsx","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Conditional/ConditionalSelector.tsx","Character/CharacterDisplay/Components/ConditionalDisplay.tsx","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-bootstrap/esm/Badge.js","Components/CharacterSelection.tsx","../node_modules/react-bootstrap/esm/ButtonGroup.js","Components/StatDisplay.tsx","Character/StatInput.tsx","../node_modules/react-bootstrap/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-bootstrap/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Artifact/ArtifactCard.tsx","Util/UIUtil.ts","Artifact/PercentBadge.tsx","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx","Components/WIPComponent.tsx","../node_modules/react-bootstrap/esm/Image.js","../node_modules/react-bootstrap/esm/CloseButton.js","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Character/CharacterDisplay/DamageOptionsAndCalculation.tsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","TestPage/TestDisplay.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["Button","React","forwardRef","_ref","ref","bsPrefix","variant","size","active","className","block","type","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","href","createElement","SafeAnchor","_extends","disabled","Component","displayName","defaultProps","FieldDisplay","field","index","equippedBuild","newBuild","compareAgainstEquipped","useContext","compareAgainstEquippedContext","stats","canShow","useMemo","fixedVal","fixed","fieldVal","value","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","parseInt","toFixed","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","id","icon","faQuestionCircle","style","cursor","unit","Item","CustomFormControl","onChange","float","placeholder","allowEmpty","useState","state","setstate","stateDirty","setstateDirty","sendChange","useCallback","parseFunc","parseFloat","useEffect","aria-label","e","target","onBlur","onKeyDown","key","_fadeStyles","fadeStyles","ENTERING","ENTERED","Fade","children","handleEnter","node","triggerBrowserReflow","onEnter","Transition","addEndListener","transitionEndListener","status","innerProps","cloneElement","in","timeout","mountOnEnter","unmountOnExit","appear","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ConditionalSelector","conditional","conditionalValue","setConditional","name","conditionalNum","conditionalStateKey","states","text","maxStack","badge","Badge","Dropdown","Toggle","whiteSpace","Menu","onClick","entries","map","stateKey","condial","Fragment","keys","v","stack","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","editable","fieldClassName","Conditional","resolve","undefined","conditionalStats","fields","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","conditionalValues","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","contains","context","compareDocumentPosition","useMounted","mounted","useRef","isMounted","current","useCallbackRef","pill","_ref$as","CharacterSelectionDropdownList","onSelect","CharacterDatabase","getCharacterKeyList","sort","a","b","characterKey","DropDownItem","characterSheet","usePromise","CharacterSheet","get","ButtonGroup","toggle","vertical","rest","baseClass","role","DisplayStatDiff","label","val","oldVal","oldText","diffText","xs","StatDisplay","weaponSheet","character","statKey","Formula","build","invalid","getStatValueWithOverride","Stat","getStatUnit","fixedUnit","StatIconEle","getStatName","labelVariant","hasOverride","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Prepend","Text","Append","Boolean","pointerEvents","faUndo","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","create","constructor","useWillUnmount","fn","onUnmount","valueRef","useUpdatedRef","resolveContainerRef","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","useForceUpdate","forceUpdateHook","ArtifactDatabase","registerArtListener","unregisterArtListener","sheet","ArtifactSheet","setKey","equipOnChar","charKey","Artifact","equipArtifactOnChar","art","location","maximumEfficiency","substatsValidation","slotKey","numStars","level","mainStatKey","substats","lock","currentEfficiency","mainStatLevel","Math","max","min","mainStatVal","mainStatValue","artifactValid","locationName","border","md","src","slotIcons","thumbnail","slotNames","slotNameWithIcon","Body","Title","stars","stat","numRolls","rolls","efficiency","effOpacity","statName","valueString","opacity","valid","Footer","Divider","update","faLock","faLockOpen","faEdit","faTrashAlt","round","PercentBadge","floor","badgeColor","artLayoutSize","lg","CharacterArtifactPane","artifacts","history","useHistory","statKeys","getDisplayStatKeys","edit","artid","push","pathname","artToEditId","artifactSheets","getAll","equipArts","window","confirm","equipArtifacts","equippedArtifacts","unequipArts","fromEntries","allSlotKeys","sKey","StatDisplayComponent","statsDisplayKeys","Alert","Row","Col","setEffects","setToSlots","setNumKeyArr","setNumKey","SetEffectDisplay","find","CharacterOverviewPane","constellation","editLevel","setEditLevel","elementKey","weaponTypeKey","Img","cardImg","Image","Assets","elements","weaponTypes","star","colored","InputGroup","clamp","getLevel","levelKey","OverlayTrigger","Tooltip","faSave","constellationName","getTalent","img","roundedCircle","WeaponStatsEditorCard","MainStatsCards","WeaponStatsCard","title","statsVals","WeaponStatsEditorCardWeaponDropdown","setStateWeapon","weaponSheets","WeaponSheet","DropdownButton","reverse","arr","ItemText","getWeaponsOfType","filter","rarity","weaponObj","weapon","editing","SetEditing","showDescription","setShowDescription","substatKey","Weapon","getWeaponSubstatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubstatVal","weaponPassiveName","passiveName","weaponBonusStats","conditionals","faQuoteLeft","getLevelName","LevelNameData","refineIndex","faGavel","passiveDescription","atk","description","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","allElements","forEach","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","CharacterSpecializedStatKey","getStatNameRaw","xl","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electro","cryo","electrocharged_hit","hydro","overloaded_hit","pyro","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","crystalize_hit","geo","charEleKey","eleInterArr","ElementToReactionKeys","includes","Ele","anemo","talentLimits","talentLevelKeys","header","talentLvlKey","talentLvlKeyRaw","levelBoost","newTalentLevelKey","talentStats","getTalentStats","statsEle","Subtitle","section","talentText","evalIfFunc","createContext","CustomMenu","labeledBy","minWidth","aria-labelledby","Children","toArray","child","initialCharacter","hitMode","reactionMode","baseStatOverrides","WeaponLevelKeys","auto","skill","burst","infusionAura","characterReducer","action","CharacterDisplayCard","propCharacterKey","propCharacter","propSetCharacterKey","setCharacterKey","footer","propNewBuild","onClose","tabName","useReducer","setcompareAgainstEquipped","firstUpdate","char","newCKey","deepClone","flexArts","calculateBuild","commonPaneProps","DamageOptionsAndCalculationEle","hasTalentPage","DamageOptionsAndCalculation","CharSelectDropdown","faTimes","Provider","Tab","Container","defaultActiveKey","Nav","fill","Link","eventKey","WIPComponent","Content","Pane","HeaderIconDisplay","thumbImg","allCharacterKeys","CharDropdownItem","getlevelTemplateName","getlevelKeys","lvlKey","getLevelString","PropTypes","string","bool","fluid","rounded","propTypes","isRequired","func","CloseButton","setEffectText","setEffectTexts","setStats","setNumStats","setStatsFields","setEffectConditionals","ckey","cardbg","sectionValues","JSON","stringify","infusionVals","InfusionAuraDropdown","isMelee","ReactionToggle","HitModeToggle","m","CalculationDisplay","fieldIndex","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","printStat","Collapse","subKey","printFormula","ContextAwareToggle","callback","currentEventKey","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","rel","eleKey","immunityStatKey","elementImmunity","isValidElement","hasClass","classList","baseVal","indexOf","usePrevious","noop","ToggleButton","checked","inputRef","focused","setFocused","handleFocus","tagName","handleBlur","autoComplete","onFocus","ToggleButtonGroup","_useUncontrolled","useUncontrolled","controlledProps","getValues","concat","invariant","values","_child$props","childVal","childOnChange","chainFunction","inputVal","event","isActive","handleToggle","TestDisplay","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/12.b388ddf0.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Character from \"../../Character\";\r\nimport { compareAgainstEquippedContext } from \"../../CharacterDisplayCard\";\r\n\r\nexport default function FieldDisplay({ field, index, equippedBuild, newBuild, className = \"p-2\" }) {\r\n  const compareAgainstEquipped = useContext(compareAgainstEquippedContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => field.canShow(stats), [field, stats])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", stats)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", stats)?.[0]?.(stats)\r\n      //compareAgainstEquipped\r\n      if (compareAgainstEquipped && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareAgainstEquipped, fixedVal, equippedBuild, field, stats])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", stats), [field, stats])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", stats), [field, stats])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", stats)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip id=\"field-formula\">{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, stats])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", stats), [field, stats])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled = false, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _fadeStyles;\n\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport Transition, { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nvar fadeStyles = (_fadeStyles = {}, _fadeStyles[ENTERING] = 'show', _fadeStyles[ENTERED] = 'show', _fadeStyles);\nvar Fade = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\"]);\n\n  var handleEnter = useCallback(function (node) {\n    triggerBrowserReflow(node);\n    if (props.onEnter) props.onEnter(node);\n  }, [props]);\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    ref: ref,\n    addEndListener: transitionEndListener\n  }, props, {\n    onEnter: handleEnter\n  }), function (status, innerProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames('fade', className, children.props.className, fadeStyles[status])\n    }));\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name\r\n  if (conditional.states) {//complex conditional\r\n    const state = conditional.states[conditionalStateKey] ?? {}\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(state.maxStack > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial]: any, i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {//single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n    </Button>\r\n  }\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport Conditional from \"../../../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../../../Conditional/ConditionalSelector\"\r\nimport ICalculatedStats from \"../../../Types/ICalculatedStats\"\r\nimport statsToFields from \"../../../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../../../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\ntype ConditionalDisplayProps = {\r\n  conditional: any,//TODO: type\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  characterDispatch: (any) => void,\r\n  editable: boolean,\r\n  fieldClassName?: string\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, equippedBuild, newBuild, characterDispatch, editable, fieldClassName }: ConditionalDisplayProps) {\r\n  const stats = newBuild ? newBuild : equippedBuild as ICalculatedStats\r\n  if (!stats) debugger\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else layeredAssignment(stats.conditionalValues, conditional.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [stats.conditionalValues, conditional.keys, characterDispatch])\r\n\r\n  if (!canShow) return null\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector disabled={!editable}\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild, className: fieldClassName }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","/* eslint-disable no-bitwise, no-cond-assign */\n// HTML DOM and SVG DOM may have different support levels,\n// so we need to check on context instead of a document root element.\nexport default function contains(context, node) {\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return <>{CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>\r\n    {characterSheet.name}\r\n  </Dropdown.Item>\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { ICharacter } from \"../Types/character\"\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\ntype StatDisplayProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined)\r\n\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey, invalid as any)\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (statKey === \"finalHP\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterHP\")\r\n        else if (statKey === \"finalDEF\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterDEF\")\r\n        else if (statKey === \"finalATK\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterATK\") + Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"weaponATK\")\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, characterSheet, weaponSheet, equippedBuild, newBuild, editable, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label: label as any }} />\r\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip id=\"reset-tooltip\">Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { IArtifact, Substat } from '../Types/artifact';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: IArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number }\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }: Data): JSX.Element | null {\r\n  const [, forceUpdateHook] = useForceUpdate()\r\n  useEffect(() => {\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () => { artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook) }\r\n  }, [artifactId, forceUpdateHook])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? ArtifactDatabase.get(artifactId) : undefined))?.setKey))\r\n  const equipOnChar = (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey)\r\n\r\n  const editable = !artifactObj //dont allow edit for flex artifacts\r\n  const art = artifactObj || ArtifactDatabase.get(artifactId);\r\n  const characterSheet = usePromise(CharacterSheet.get(art.location))\r\n  if (!art) return null\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n\r\n  const { slotKey, numStars, level, mainStatKey, substats, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.mainStatValue(mainStatKey, numStars, mainStatLevel) ?? \"\"}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = art.maximumEfficiency !== undefined\r\n  const locationName = characterSheet?.name ?? \"Inventory\"\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{sheet?.slotNames[slotKey] ?? \"Unknown Piece Name\"}</b></h6>\r\n          <div>{Artifact.slotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{sheet?.name ?? \"Artifact Set\"}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: Substat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueString(stat.value, Stat.getStatUnit(stat.key))}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{valueString(efficiency, \"eff\")}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} {...{ className: \"float-right\" }} /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"lock-artifact-tip\">Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.update(art);\r\n                  }}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","export function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1)\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { useCallback, useMemo } from 'react';\r\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { ICharacter } from '../../Types/character';\r\nimport { allSlotKeys } from '../../Types/consts';\r\nimport ICalculatedStats from '../../Types/ICalculatedStats';\r\nimport { usePromise } from '../../Util/ReactUtil';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\nconst artLayoutSize = { xs: 12, md: 6, lg: 4 }\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  artifacts?: any[]\r\n}\r\nfunction CharacterArtifactPane({ characterSheet, weaponSheet, character, character: { characterKey }, equippedBuild, newBuild, editable, characterDispatch, artifacts }: CharacterArtifactPaneProps) {\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => characterSheet.getDisplayStatKeys(stats), [stats, characterSheet])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    }), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    Character.equipArtifacts(characterKey, newBuild?.equippedArtifacts)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, newBuild?.equippedArtifacts, characterDispatch])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    Character.equipArtifacts(characterKey, Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])))\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, characterDispatch])\r\n  return <>\r\n    <Card className=\"h-100 mb-2\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Body>\r\n        <StatDisplayComponent {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys: statKeys, editable }} />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        {newBuild ? <Button onClick={equipArts}>Equip all artifacts to current character</Button> : (editable && <Button onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n        {Boolean(mainStatAssumptionLevel) && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert>}\r\n      </Card.Footer>\r\n    </Card>\r\n    <Row className=\"mb-n2\">\r\n      <Col {...artLayoutSize} className=\"d-flex flex-column\">\r\n        {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n          <Card key={setKey} className=\"mb-2 flex-grow-1\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n            <Card.Header>{artifactSheets?.[setKey].name ?? \"\"}</Card.Header>\r\n            <Card.Body className=\"p-2 mb-n2\">\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      {artifacts ?\r\n        allSlotKeys.map(slotKey => {//from flex\r\n          const art = artifacts.find(art => art.slotKey === slotKey)\r\n          return Boolean(art) && <Col {...artLayoutSize} key={slotKey} className=\"mb-2\">\r\n            <ArtifactCard artifactObj={art} />\r\n          </Col>\r\n        }) : allSlotKeys.map(slotKey =>\r\n          Boolean(stats.equippedArtifacts[slotKey]) && <Col {...artLayoutSize} key={stats.equippedArtifacts[slotKey]} className=\"mb-2\">\r\n            <ArtifactCard artifactId={stats.equippedArtifacts[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats.equippedArtifacts[slotKey])} />\r\n          </Col>\r\n        )}\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport Conditional from \"../../Conditional/Conditional\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport { allElements } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport Character from \"../Character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport StatInput from \"../StatInput\"\r\nimport ConditionalDisplay from \"./Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"./Components/FieldDisplay\"\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean;\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, weaponSheet, editable, character, character: { characterKey, constellation }, characterDispatch, equippedBuild, newBuild }: CharacterOverviewPaneProps) {\r\n  const [editLevel, setEditLevel] = useState(false)\r\n  const elementKey = characterSheet.elementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Card.Img src={characterSheet.cardImg} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{characterSheet.name} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={characterSheet.star} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl placeholder={undefined} onChange={val => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: clamp(val, 1, 90), characterSheet, weaponSheet })} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: Character.getLevel(character.levelKey), characterSheet, weaponSheet })} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip id=\"artifact-override-level\">Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"success\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{characterSheet.constellationName}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={characterSheet.getTalent(`constellation${i + 1}`)?.img} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n      <MainStatsCards {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n    </Col>\r\n  </Row >\r\n}\r\n\r\nfunction WeaponStatsCard({ title, statsVals = {}, stats = {} }) {\r\n  if ((Object.keys(statsVals ?? {}) as any).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay newBuild={undefined} key={i} index={i} {...{ field, equippedBuild: stats, className: \"px-3 py-2\" }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}\r\n\r\n\r\nfunction WeaponStatsEditorCardWeaponDropdown({ weaponSheet, weaponTypeKey, setStateWeapon }: { weaponSheet: WeaponSheet, weaponTypeKey: string, setStateWeapon: (key: any, value: any) => void }) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  if (!weaponSheets) return null\r\n\r\n  return <DropdownButton title={weaponSheet.name}>\r\n    {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n      <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n      {Object.entries(WeaponSheet.getWeaponsOfType(weaponSheets, weaponTypeKey)).filter(([, weaponObj]: any) => weaponObj.rarity === star).map(([key, weaponObj]: any) =>\r\n        <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n          {weaponObj.name}\r\n        </Dropdown.Item>\r\n      )}\r\n      {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n    </React.Fragment>)}\r\n  </DropdownButton>\r\n}\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction WeaponStatsEditorCard({ characterSheet, weaponSheet, editable, character, character: { weapon }, characterDispatch, equippedBuild, newBuild }: WeaponStatsEditorCardProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => {\r\n    if (key === \"key\") {\r\n      if (value === weapon.key) return\r\n      else {\r\n        //reset the conditionalNum when we switch weapons\r\n        const { conditionalValues } = character\r\n        delete conditionalValues.weapon\r\n        characterDispatch({ conditionalValues })\r\n      }\r\n    }\r\n    character.weapon[key] = value\r\n    characterDispatch({ weapon: character.weapon })\r\n  }\r\n  const substatKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)\r\n  const weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet.passiveName\r\n  const weaponBonusStats = weaponSheet.stats(build)\r\n  const conditionals = Conditional.conditionals.weapon[weapon.key]\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      <Row className=\"mb-n2\">\r\n        <Col xs={12} md={3} lg={4}>\r\n          <Image src={weaponSheet.img} className={`w-100 h-auto grad-${weaponSheet.rarity}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <WeaponStatsEditorCardWeaponDropdown weaponSheet={weaponSheet} weaponTypeKey={weaponTypeKey} setStateWeapon={setStateWeapon} />\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {substatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><span className=\"mr-2\">{StatIconEle(substatKey)}</span>{Stat.getStatName(substatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(substatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <h5 className=\"mb-0\">{weaponSheet.name} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n            <p><Stars stars={weaponSheet.rarity} /></p>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <p>{weaponPassiveName && weaponSheet.passiveDescription(build)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: weaponDisplaySubVal }} stats={build} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            {Boolean(conditionals) && Object.entries(conditionals).map(([stateKey, conditional]) =>\r\n              <ConditionalDisplay key={stateKey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} fieldClassName=\"py-2 px-3\" />)}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <small>{weaponSheet.description}</small>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  editable: boolean,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction MainStatsCards({ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys: any[] = [];\r\n\r\n  [\"physical\", ...allElements].forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: key, characterSheet, weaponSheet })} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")}\r\n                  onChange={value => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value, characterSheet, weaponSheet })} />\r\n                <InputGroup.Append>\r\n                  {isPercentSpecialStatSelect && <InputGroup.Text>%</InputGroup.Text>}\r\n                  <Button onClick={() => {\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatKey\"), characterSheet, weaponSheet })\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatVal\"), characterSheet, weaponSheet })\r\n                  }}\r\n                    disabled={!Character.hasOverride(character, \"specializedStatKey\") && !Character.hasOverride(character, \"specializedStatVal\")}\r\n                  >\r\n                    <FontAwesomeIcon icon={faUndo} />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined\r\n                  }\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from 'react';\r\nimport { Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport { evalIfFunc } from \"../../Util/Util\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport ConditionalDisplay from './Components/ConditionalDisplay';\r\nimport FieldDisplay from './Components/FieldDisplay';\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterTalentPane(props: CharacterTalentPaneProps) {\r\n  const { characterSheet, character: { levelKey, constellation }, editable, characterDispatch, newBuild, equippedBuild } = props\r\n  const ascension = Character.getAscension(levelKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col><ReactionDisplay {...{ characterSheet, newBuild, equippedBuild }} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {!!characterSheet.getTalent(\"sprint\") && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet, newBuild, equippedBuild }: { characterSheet: CharacterSheet, newBuild?: ICalculatedStats, equippedBuild?: ICalculatedStats }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = characterSheet.elementKey\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip id=\"shatter-tooltip\">Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  ascension: number,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { constellation, talentLevelKeys, }, characterDispatch, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, onClickTitle }: SkillDisplayCardProps) {\r\n  let build = newBuild ? newBuild : equippedBuild as ICalculatedStats //assumes at least one of them is not undefined\r\n  let header: Displayable | null = null\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n        talentLevelKeys[tKey] = newTalentLevelKey\r\n        characterDispatch({ talentLevelKeys })\r\n      }\r\n      header = <Card.Header>\r\n        <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>{`Talent Level: ${talentLvlKey + 1}`}</Card.Header>\r\n    }\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"h-100\">\r\n    {header}\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={characterSheet.getTalent(talentKey)?.img} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{characterSheet.getTalent(talentKey)?.name}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {/* Display document sections */}\r\n      {characterSheet.getTalent(talentKey)?.document?.map((section, i) => {\r\n        if (!section.canShow!(build)) return null\r\n        const talentText = evalIfFunc(section.text, build)\r\n        let fields = section.fields ?? []\r\n        return <div className=\"my-2\" key={\"section\" + i}>\r\n          <div {...{ xs: 12 }}>\r\n            <div className=\"mb-2\">{talentText}</div>\r\n            {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n              {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n            </ListGroup>}\r\n          </div>\r\n          {Boolean(section.conditional) && <ConditionalDisplay fieldClassName={undefined} {...{ conditional: section.conditional, equippedBuild, newBuild, characterDispatch, editable }} />}\r\n        </div>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { createContext, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allCharacterKeys } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { usePromise } from '../Util/ReactUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport DamageOptionsAndCalculation from './CharacterDisplay/DamageOptionsAndCalculation';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nexport const compareAgainstEquippedContext = createContext(undefined)\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }: any, ref: any) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" } as any}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\nconst initialCharacter = (characterKey): ICharacter => ({\r\n  characterKey: characterKey ?? \"\",//the game character this is based off\r\n  levelKey: \"L1\",//combination of level and ascension\r\n  hitMode: \"avgHit\",\r\n  reactionMode: null,\r\n  equippedArtifacts: {},\r\n  conditionalValues: {},\r\n  baseStatOverrides: {},//overriding the baseStat\r\n  weapon: {\r\n    key: \"\",\r\n    levelKey: WeaponLevelKeys[0],\r\n    refineIndex: 0,\r\n    overrideMainVal: 0,\r\n    overrideSubVal: 0,\r\n  },\r\n  talentLevelKeys: {\r\n    auto: 0,\r\n    skill: 0,\r\n    burst: 0,\r\n  },\r\n  infusionAura: \"\",\r\n  constellation: 0,\r\n})\r\n\r\ntype characterReducerOverwrite = {\r\n  type: \"overwrite\",\r\n  character: ICharacter\r\n}\r\ntype characterReducerFromDB = {\r\n  type: \"fromDB\",\r\n}\r\ntype characterReducerStatOverride = {\r\n  type: \"statOverride\",\r\n  statKey: string\r\n  value: number | string\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n}\r\ntype characterReducerOverwriteAction = characterReducerOverwrite | characterReducerFromDB | characterReducerStatOverride | Partial<ICharacter>\r\n\r\nfunction characterReducer(state: ICharacter, action: characterReducerOverwriteAction) {\r\n  if (\"type\" in action) switch (action?.type) {\r\n    case \"overwrite\":\r\n      return { ...state, ...action.character }\r\n    case \"fromDB\"://for equipping artifacts, that makes the changes in DB instead of in state.\r\n      return { ...state, ...CharacterDatabase.get(state.characterKey, {} as any) }\r\n    case \"statOverride\": {\r\n      const { statKey, value, characterSheet, weaponSheet, } = action\r\n      const baseStatOverrides = state.baseStatOverrides\r\n      const baseStatVal = Character.getBaseStatValue(state, characterSheet, weaponSheet, statKey)\r\n      if (baseStatVal === value)\r\n        delete baseStatOverrides[statKey]\r\n      else\r\n        baseStatOverrides[statKey] = value\r\n      return { ...state, baseStatOverrides }\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\ntype CharacterDisplayCardProps = {\r\n  characterKey?: string,\r\n  character?: ICharacter,\r\n  setCharacterKey?: (any) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  editable?: boolean,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey: propCharacterKey, character: propCharacter, setCharacterKey: propSetCharacterKey, footer, newBuild: propNewBuild, editable = false, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const [character, characterDispatch] = useReducer(characterReducer, initialCharacter(propCharacterKey))\r\n  const [compareAgainstEquipped, setcompareAgainstEquipped] = useState(false)\r\n  const firstUpdate = useRef(true)\r\n  useEffect(() => {\r\n    if (!propCharacterKey) return\r\n    const char = { ...initialCharacter(propCharacterKey), ...CharacterDatabase.get(propCharacterKey, {} as any) }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacterKey])\r\n  useEffect(() => {\r\n    if (!propCharacter) return\r\n    const char = { ...initialCharacter(propCharacter.characterKey), ...propCharacter }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacter])\r\n\r\n  useEffect(() => {\r\n    //skip saving on the first update, since those updates are from loading from DB\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false\r\n      return\r\n    }\r\n    //save character to DB\r\n    editable && CharacterDatabase.update(character)\r\n  }, [character, editable])\r\n\r\n  const characterKey = propCharacter?.characterKey ?? character.characterKey\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  useEffect(() => {\r\n    if (weaponSheets && characterSheet && !character.weapon.key) {\r\n      character.weapon.key = Object.keys(WeaponSheet.getWeaponsOfType(weaponSheets, characterSheet.weaponTypeKey))[0] ?? \"\"\r\n      characterDispatch({ weapon: character.weapon })\r\n    }\r\n  }, [characterSheet, weaponSheets, character.weapon])\r\n\r\n  const weaponSheet = usePromise(WeaponSheet.get(character.weapon.key))\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const setCharacterKey = useCallback(\r\n    newCKey => {\r\n      let state = initialCharacter(newCKey)\r\n      const char = CharacterDatabase.get(newCKey)\r\n      if (char) state = { ...state, ...char }\r\n      characterDispatch({ type: \"overwrite\", character: state })\r\n      if (newCKey !== characterKey)\r\n        propSetCharacterKey?.(newCKey)\r\n    }, [characterKey, characterDispatch, propSetCharacterKey])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return\r\n    const newBuild = propNewBuild && deepClone(propNewBuild);\r\n    (newBuild as any).hitMode = character.hitMode;\r\n    (newBuild as any).reactionMode = character.reactionMode;\r\n    return newBuild\r\n  }, [propNewBuild, character.hitMode, character.reactionMode])\r\n\r\n  const { levelKey, artifacts: flexArts } = character\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel), [character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel])\r\n\r\n  const commonPaneProps = { character, newBuild, equippedBuild: (!newBuild || compareAgainstEquipped) ? equippedBuild : undefined, editable, characterDispatch, compareAgainstEquipped }\r\n  if (flexArts) (commonPaneProps as any).artifacts = flexArts//from flex\r\n  // main CharacterDisplayCard\r\n  const DamageOptionsAndCalculationEle = characterSheet?.hasTalentPage && weaponSheet && <DamageOptionsAndCalculation {...{ characterSheet, weaponSheet, character, characterDispatch, newBuild, equippedBuild }} className=\"mb-2\" />\r\n  return (<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs={\"auto\"} className=\"mr-auto\">\r\n          {/* character selecter/display */}\r\n          <CharSelectDropdown characterSheet={characterSheet} character={character} weaponSheet={weaponSheet} editable={editable} levelKey={levelKey} characterDispatch={characterDispatch} setCharacterKey={setCharacterKey} />\r\n        </Col>\r\n        {Boolean(mainStatAssumptionLevel) && <Col xs=\"auto\"><Alert className=\"mb-0 py-1 h-100\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert></Col>}\r\n        {/* Compare against new build toggle */}\r\n        {newBuild ? <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(false)}>\r\n              <small>Show New artifact Stats</small>\r\n            </Button>\r\n            <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(true)}>\r\n              <small>Compare against equipped artifact</small>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col> : null}\r\n        {Boolean(onClose) && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    {characterKey && characterSheet && weaponSheet && <Card.Body>\r\n      <compareAgainstEquippedContext.Provider value={compareAgainstEquipped as any}>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 mx-0\" fill>\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\"><h5 className=\"mb-0\">Character</h5></Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\"><h5 className=\"mb-0\">New Artifacts</h5></Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\"><h5 className=\"mb-0\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</h5></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {process.env.NODE_ENV !== \"development\" && !characterSheet.hasTalentPage ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled><h5 className=\"mb-0\">Talents</h5> <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\"><h5 className=\"mb-0\">Talents</h5></Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterOverviewPane characterSheet={characterSheet} weaponSheet={weaponSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterTalentPane characterSheet={characterSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </compareAgainstEquippedContext.Provider>\r\n    </Card.Body>}\r\n    {footer && <Card.Footer>\r\n      {footer}\r\n    </Card.Footer>}\r\n  </Card>)\r\n}\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  weaponSheet?: WeaponSheet,\r\n  character: ICharacter\r\n  editable: boolean\r\n  levelKey: string\r\n  characterDispatch: (any) => void\r\n  setCharacterKey: (any) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, weaponSheet, character, editable, levelKey, characterDispatch, setCharacterKey }: CharSelectDropdownProps) {\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <Image src={characterSheet.thumbImg} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {characterSheet.name} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  return <>{editable ? <ButtonGroup>\r\n    <Dropdown as={ButtonGroup}>\r\n      <Dropdown.Toggle as={Button}>\r\n        {HeaderIconDisplay}\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu as={CustomMenu}>\r\n        {allCharacterKeys.map(charKey => <CharDropdownItem key={charKey} characterKey={charKey} setCharacterKey={setCharacterKey} />)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n    <DropdownButton as={ButtonGroup} disabled={!characterSheet} title={\r\n      <h6 className=\"d-inline\">Stats Template: {Character.getlevelTemplateName(levelKey)} </h6>\r\n    }>\r\n      <Dropdown.ItemText>\r\n        <span>Select Base Stat Template</span>\r\n      </Dropdown.ItemText>\r\n      {Character.getlevelKeys().map(lvlKey =>\r\n        <Dropdown.Item key={lvlKey} onClick={() => characterDispatch({ levelKey: lvlKey })}>\r\n          <h6 >{Character.getlevelTemplateName(lvlKey)} </h6>\r\n        </Dropdown.Item>)}\r\n    </DropdownButton>\r\n  </ButtonGroup> : <span>{HeaderIconDisplay} {characterSheet && weaponSheet && Character.getLevelString(character, characterSheet, weaponSheet)}</span>}</>\r\n}\r\nfunction CharDropdownItem({ characterKey, setCharacterKey }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => setCharacterKey(characterKey)}>\r\n    <span >\r\n      <Image src={characterSheet.thumbImg} className={`thumb-small p-0 m-n1 grad-${characterSheet.star}star`} thumbnail />\r\n      <h6 className=\"d-inline ml-2\">{characterSheet.name} </h6>\r\n    </span>\r\n  </Dropdown.Item>\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip id=\"wip\">Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nexport var propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nvar propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n};\nvar defaultProps = {\n  label: 'Close'\n};\nvar CloseButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var label = _ref.label,\n      onClick = _ref.onClick,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"label\", \"onClick\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    ref: ref,\n    type: \"button\",\n    className: classNames('close', className),\n    onClick: onClick\n  }, props), /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label));\n});\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport ConditionalDisplay from \"../../Character/CharacterDisplay/Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"../../Character/CharacterDisplay/Components/FieldDisplay\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, editable, characterDispatch }) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey))\r\n\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const setEffectText = sheet.setEffectTexts(setNumKey, stats)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const conditionals = sheet.setEffectConditionals(setNumKey, stats)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {Boolean(conditionals) && Object.entries(conditionals!).map(([ckey, conditional]) => <ConditionalDisplay key={ckey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n  </>\r\n}","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter\r\n  statsDisplayKeys: any,\r\n  editable: boolean,\r\n  cardbg?: string\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }: StatDisplayComponentProps) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, sectionValues]: any) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text={\"lightfont\" as any} className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Formula from \"../../Formula\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport { IFieldDisplay } from \"../../Types/IFieldDisplay\";\r\nimport { usePromise } from \"../../Util/ReactUtil\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No Infusion</span>,\r\n  \"pyro\": <span >Pyro Infusion</span>,\r\n  \"cryo\": <span >Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className?: string\r\n}\r\nexport function InfusionAuraDropdown({ characterSheet, character: { infusionAura = \"\", characterKey }, characterDispatch, className }: InfusionAuraDropdownProps) {\r\n  if (!characterSheet.isMelee()) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\ntype ReactionToggleProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className: string\r\n}\r\nexport function ReactionToggle({ characterSheet, character: { characterKey, reactionMode = \"none\", infusionAura }, characterDispatch, className }: ReactionToggleProps) {\r\n  if (reactionMode === null) reactionMode = \"none\"\r\n  const charEleKey = characterSheet.elementKey\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ characterSheet, build }: { characterSheet: CharacterSheet, build: ICalculatedStats }) {\r\n  const displayStatKeys = useMemo(() => characterSheet.getDisplayStatKeys(build), [build, characterSheet])\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n      return <Card bg=\"darkcontent\" text={\"lightfont\" as any} key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              if (Array.isArray(field))\r\n                <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} fieldIndex={fieldIndex} />\r\n              else if (typeof field === \"string\") {//simple statKey field\r\n                const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              return null\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\nfunction FormulaCalculationField({ fieldKeys, build, fieldIndex }: { fieldKeys: string[], build: ICalculatedStats, fieldIndex: number, }) {\r\n  const formula = usePromise(Formula.get(fieldKeys))\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.()\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n      <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n      <Card.Body className=\"p-2\">\r\n        <div className=\"mb-n2\">\r\n          <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n          {subFormulaKeys.map(subKey =>\r\n            <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\ntype DamageOptionsAndCalculationProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  className: string\r\n}\r\nexport default function DamageOptionsAndCalculation({ characterSheet, weaponSheet, character, character: { hitMode }, characterDispatch, newBuild, equippedBuild, className }: DamageOptionsAndCalculationProps) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle callback={undefined} {...{ as: Button }} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={undefined}\r\n                      disabled={undefined}\r\n                      percent={undefined}\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value, characterSheet, weaponSheet })}\r\n                    />\r\n                  </Col>\r\n                  {[\"physical\", ...allElements].map(eleKey => {\r\n                    let statKey = `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity, characterSheet, weaponSheet })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay characterSheet={characterSheet} build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","export default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nexport default function TestDisplay() {\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterKey=\"noelle\" tabName=\"talent\" />\r\n  </Container>\r\n}\r\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}