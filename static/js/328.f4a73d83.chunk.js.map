{"version":3,"file":"static/js/328.f4a73d83.chunk.js","mappings":"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","sources":["Components/Character/CharacterAutocomplete.tsx","Components/Character/LocationName.tsx","Components/Character/ThumbSide.tsx","Components/CustomNumberInput.tsx","Components/InfoTooltip.tsx","Components/MenuItemWithImage.tsx","Components/SolidColoredTextfield.tsx","Components/StatFilterCard.tsx","GlobalSettings.tsx","PageArtifact/ArtifactCard.tsx","PageArtifact/ArtifactSort.ts","PageArtifact/PercentBadge.tsx","PageArtifact/RollProbability.ts","ReactHooks/useArtifact.tsx"],"sourcesContent":["import { faUserShield } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { BusinessCenter, Favorite } from \"@mui/icons-material\";\r\nimport { Autocomplete, AutocompleteProps, Box, Skeleton, Typography, useTheme } from \"@mui/material\";\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { allCharacterKeys, CharacterKey } from \"../../Types/consts\";\r\nimport { CharacterFilterConfigs, characterFilterConfigs } from \"../../Util/CharacterSort\";\r\nimport { filterFunction } from \"../../Util/SortByFilters\";\r\nimport MenuItemWithImage from \"../MenuItemWithImage\";\r\nimport SolidColoredTextField from \"../SolidColoredTextfield\";\r\nimport ThumbSide from \"./ThumbSide\";\r\n\r\ntype CharacterAutocompleteValue = CharacterKey | \"\" | \"Inventory\" | \"Equipped\"\r\ntype CharacterAutocompleteOption = {\r\n  value: CharacterAutocompleteValue\r\n  label: string\r\n}\r\ntype CharacterAutocompleteProps = Omit<AutocompleteProps<CharacterAutocompleteOption, false, true, false>, \"onChange\" | \"options\" | \"renderInput\" | \"value\" | \"disableClearable\"> & {\r\n  value: CharacterAutocompleteValue\r\n  onChange: (v: any) => void\r\n  filter?: (cs: CharacterSheet, ck: CharacterKey) => boolean\r\n  disable?: (v: any) => boolean\r\n  showDefault?: boolean\r\n  showInventory?: boolean\r\n  showEquipped?: boolean\r\n  defaultText?: string\r\n  defaultIcon?: Displayable\r\n  placeholderText?: string\r\n  labelText?: string\r\n}\r\n\r\nexport default function CharacterAutocomplete({ value, onChange, defaultText = \"\", defaultIcon = \"\", placeholderText = \"\", labelText = \"\", showDefault = false, showInventory = false, showEquipped = false, filter = () => true, disable = () => false, ...props }: CharacterAutocompleteProps) {\r\n  const { t } = useTranslation([\"ui\", \"artifact\", ...allCharacterKeys.map(k => `char_${k}_gen`)])\r\n  const theme = useTheme()\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\r\n  const filterConfigs = useMemo(() => characterSheets && characterFilterConfigs(database, characterSheets), [database, characterSheets])\r\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck], ck)).sort()\r\n\r\n  const textForValue = useCallback((value: CharacterAutocompleteValue): string => {\r\n    switch (value) {\r\n      case \"Equipped\":\r\n        return t(\"artifact:filterLocation.currentlyEquipped\")\r\n      case \"Inventory\":\r\n        return t(\"artifact:filterLocation.inventory\")\r\n      case \"\":\r\n        return defaultText\r\n      default:\r\n        return t(`char_${value}_gen:name`)\r\n    }\r\n  }, [defaultText, t])\r\n\r\n  const imageForValue = useCallback((value: CharacterAutocompleteValue): Displayable => {\r\n    switch (value) {\r\n      case \"Equipped\":\r\n        return <FontAwesomeIcon icon={faUserShield} />\r\n      case \"Inventory\":\r\n        return <BusinessCenter />\r\n      case \"\":\r\n        return defaultIcon\r\n      default:\r\n        return <ThumbSide src={characterSheets![value]?.thumbImgSide} sx={{ pr: 1 }} />\r\n    }\r\n  }, [defaultIcon, characterSheets])\r\n\r\n  const characterOptions = useMemo(() => filterConfigs && charOptions(characterKeys, filterConfigs, textForValue, showDefault, showInventory, showEquipped),\r\n    [filterConfigs, characterKeys, showDefault, showInventory, showEquipped, textForValue])\r\n\r\n\r\n\r\n  if (!characterSheets || !characterOptions) return null\r\n\r\n  return <Autocomplete\r\n    autoHighlight\r\n    options={characterOptions}\r\n    getOptionLabel={(option) => option.label}\r\n    onChange={(_, newValue) => onChange(newValue ? newValue.value : \"\")}\r\n    isOptionEqualToValue={(option, value) => option.value === value.value}\r\n    getOptionDisabled={option => option.value ? disable(option.value) : false}\r\n    value={{ value, label: textForValue(value) }}\r\n    renderInput={(props) => <SolidColoredTextField\r\n      {...props}\r\n      label={labelText}\r\n      placeholder={placeholderText}\r\n      startAdornment={imageForValue(value)}\r\n      hasValue={value ? true : false}\r\n    />}\r\n    renderOption={(props, option) => {\r\n      const favorite = option.value !== \"Equipped\" && option.value !== \"Inventory\"\r\n        && option.value !== \"\" && database._getChar(option.value)?.favorite\r\n      return <MenuItemWithImage\r\n        key={option.value ? option.value : \"default\"}\r\n        value={option.value ? option.value : \"default\"}\r\n        image={imageForValue(option.value)}\r\n        text={\r\n          <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n            <Typography variant=\"inherit\" noWrap>\r\n              {textForValue(option.value)}\r\n            </Typography>\r\n          </Suspense>\r\n        }\r\n        theme={theme}\r\n        isSelected={value === option.value}\r\n        addlElement={<>\r\n          {favorite && <Box display=\"flex\" flexGrow={1} />}\r\n          {favorite && <Favorite sx={{ ml: 1, mr: -0.5 }} />}\r\n        </>}\r\n        props={props}\r\n      />\r\n    }}\r\n    {...props}\r\n  />\r\n}\r\n\r\n\r\nfunction charOptions(characterKeys: CharacterKey[], filterConfigs: CharacterFilterConfigs | undefined, textForValue: (v: CharacterAutocompleteValue) => string, showDefault: boolean, showInventory, showEquipped): CharacterAutocompleteOption[] {\r\n  if (!filterConfigs) return []\r\n  const base: CharacterAutocompleteOption[] = []\r\n  if (showDefault) {\r\n    base.push({ value: \"\", label: textForValue(\"\") })\r\n  }\r\n  if (showInventory) {\r\n    base.push({ value: \"Inventory\", label: textForValue(\"Inventory\") })\r\n  }\r\n  if (showEquipped) {\r\n    base.push({ value: \"Equipped\", label: textForValue(\"Equipped\") })\r\n  }\r\n  const faves = characterKeys\r\n    .filter(filterFunction({ element: \"\", weaponType: \"\", favorite: \"yes\", name: \"\" }, filterConfigs))\r\n    .map(characterKey => ({ value: characterKey, label: textForValue(characterKey) }))\r\n  const nonFaves = characterKeys\r\n    .filter(filterFunction({ element: \"\", weaponType: \"\", favorite: \"no\", name: \"\" }, filterConfigs))\r\n    .map(characterKey => ({ value: characterKey, label: textForValue(characterKey) }))\r\n\r\n  return base.concat(faves).concat(nonFaves)\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\n\r\nexport default function LocationName({ location }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t<string>(\"inventory\")}</span>}\r\n  </Typography>\r\n\r\n}\r\n","import { styled } from \"@mui/system\";\r\n\r\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  height: `2.3em`,\r\n  lineHeight: 1,\r\n  verticalAlign: \"text-bottom\",\r\n  marginTop: theme.spacing(-3),\r\n  marginLeft: theme.spacing(-1.25),\r\n  marginRight: theme.spacing(-1),\r\n  marginBottom: theme.spacing(-1),\r\n}))\r\n\r\nexport default ThumbSide","import { Button, ButtonProps, InputBase, InputProps, styled } from '@mui/material'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\ntype props = Omit<InputProps, \"onChange\"> & {\r\n  value?: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  allowEmpty?: boolean,\r\n}\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  transition: \"all 0.5s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-focused\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}))\r\n\r\nconst Wrapper = styled(Button)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  padding: 0,\r\n  overflow: \"hidden\",\r\n  \"div\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n}))\r\n\r\n// wrap the Input with this when using the input in a buttongroup\r\nexport function CustomNumberInputButtonGroupWrapper({ children, disableRipple, disableFocusRipple, disableTouchRipple, ...props }: ButtonProps) {\r\n  return <Wrapper disableRipple disableFocusRipple disableTouchRipple {...props}>{children}</Wrapper>\r\n}\r\n\r\nexport default function CustomNumberInput({ value = 0, onChange, disabled = false, float = false, ...props }: props) {\r\n  const [number, setNumber] = useState(value)\r\n  const [focused, setFocus] = useState(false)\r\n  const parseFunc = useMemo(() => float ? parseFloat : parseInt, [float],)\r\n  const onBlur = useCallback(\r\n    () => {\r\n      onChange(number)\r\n      setFocus(false)\r\n    },\r\n    [onChange, number, setFocus],\r\n  )\r\n  const onFocus = useCallback(\r\n    () => {\r\n      setFocus(true)\r\n    },\r\n    [setFocus],\r\n  )\r\n  useEffect(() => setNumber(value), [value, setNumber]) // update value on value change\r\n  const onInputChange = useCallback(e => setNumber(parseFunc(e.target.value) || 0), [setNumber, parseFunc],)\r\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && onBlur(), [onBlur],)\r\n  return <StyledInputBase\r\n    value={(focused && !number) ? \"\" : number}\r\n    aria-label=\"custom-input\"\r\n    type=\"number\"\r\n    inputProps={{ step: float ? 0.1 : 1 }}\r\n    onChange={onInputChange}\r\n    onBlur={onBlur}\r\n    onFocus={onFocus}\r\n    disabled={disabled}\r\n    onKeyDown={onKeyDOwn}\r\n    {...props}\r\n  />\r\n}\r\n","\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TooltipProps } from \"@mui/material\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\n\r\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\r\n  className?: string,\r\n}\r\nconst InfoTooltip = ({ className, ...props }: ITooltipProps) =>\r\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faInfoCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\nexport default InfoTooltip\r\n","import { ListItemIcon, ListItemText, MenuItem, Theme } from \"@mui/material\";\r\n\r\ntype MenuItemWithImageProps = {\r\n  value: string\r\n  image?: Displayable\r\n  text: Displayable\r\n  theme: Theme\r\n  isSelected?: boolean\r\n  addlElement?: Displayable\r\n  props?: object\r\n}\r\n\r\nexport default function MenuItemWithImage({ value, image = \"\", text, theme, isSelected, addlElement, props }: MenuItemWithImageProps) {\r\n  return <MenuItem key={value} value={value} {...props}>\r\n    <ListItemIcon>{image}</ListItemIcon>\r\n    <ListItemText primaryTypographyProps={{ style: { fontWeight: isSelected ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular } }}>\r\n      {text}\r\n    </ListItemText>\r\n    {addlElement && addlElement}\r\n  </MenuItem>\r\n}\r\n","import { TextField, TextFieldProps, useTheme } from \"@mui/material\";\r\n\r\ntype SolidColoredTextFieldProps = Omit<TextFieldProps, \"multiline\" | \"variant\" | \"color\" | \"hiddenLabel\" | \"type\" | \"InputLabelProps\"> & {\r\n  hasValue: boolean\r\n  startAdornment?: Displayable\r\n  flattenCorners?: boolean\r\n}\r\nexport default function SolidColoredTextField({ hasValue, startAdornment, flattenCorners = false, InputProps, sx, ...props }: SolidColoredTextFieldProps) {\r\n  const theme = useTheme()\r\n  return <TextField\r\n    {...props}\r\n    variant=\"filled\"\r\n    color={hasValue ? \"success\" : \"primary\"}\r\n    hiddenLabel={props.label ? false : true}\r\n    type=\"search\"\r\n    InputProps={{\r\n      ...InputProps,\r\n      startAdornment,\r\n    }}\r\n    InputLabelProps={{ style: { color: theme.palette.text.primary } }}\r\n    sx={{\r\n      ...sx,\r\n      \"& .MuiFilledInput-root\": { backgroundColor: hasValue ? theme.palette.success.main : theme.palette.primary.main, borderRadius: flattenCorners ? 0 : 1, paddingTop: props.label ? undefined : 0, paddingBottom: 0 },\r\n      \"& .MuiFilledInput-root:before\": { border: \"none\" },\r\n      \"& .MuiFilledInput-root:after\": { border: \"none\" },\r\n      \"& .MuiFilledInput-root.Mui-focused\": { backgroundColor: hasValue ? theme.palette.success.light : theme.palette.primary.light },\r\n      \"& .MuiFilledInput-root:hover\": { backgroundColor: hasValue ? theme.palette.success.dark : theme.palette.primary.dark },\r\n      \"& .MuiFilledInput-root:hover:not(.Mui-disabled):before\": { border: \"none\" },\r\n    }}\r\n  />\r\n}\r\n","import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, ButtonGroup, CardContent, MenuItem, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { DataContext } from '../DataContext';\r\nimport { uiInput as input } from '../Formula';\r\nimport KeyMap, { StatKey } from '../KeyMap';\r\nimport { ElementKey } from '../Types/consts';\r\nimport CardLight from './Card/CardLight';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\r\nimport DropdownButton from './DropdownMenu/DropdownButton';\r\nimport InfoTooltip from './InfoTooltip';\r\nexport default function StatFilterCard({ statFilters = {}, setStatFilters, disabled = false }:\r\n  { statFilters: Dict<StatKey, number>, setStatFilters: (object: Dict<StatKey, number>) => void, disabled?: boolean }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { data } = useContext(DataContext)\r\n  const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\r\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\r\n  const charEle = data.get(input.charEle).value as ElementKey\r\n  statKeys.push(`${charEle}_dmg_`)\r\n\r\n  const remainingKeys = statKeys.filter(key => !(Object.keys(statFilters) as any).some(k => k === key))\r\n  const setFilter = useCallback((sKey, min) => setStatFilters({ ...statFilters, [sKey]: min }), [statFilters, setStatFilters],)\r\n  return <Box>\r\n    <CardLight>\r\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\r\n        <Typography>{t`tabOptimize.constraintFilter.title`}</Typography>\r\n        <InfoTooltip title={<Typography>{t`tabOptimize.constraintFilter.tooltip`}</Typography>} />\r\n      </CardContent>\r\n    </CardLight>\r\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\r\n      {Object.entries(statFilters).map(([statKey, min]) => {\r\n        return <StatFilterItem key={statKey} statKey={statKey} statKeys={remainingKeys} setFilter={setFilter} disabled={disabled} value={min} close={() => {\r\n          delete statFilters[statKey]\r\n          setStatFilters({ ...statFilters })\r\n        }} />\r\n      })}\r\n      <StatFilterItem value={undefined} close={undefined} statKeys={remainingKeys} setFilter={setFilter} disabled={disabled} />\r\n    </Box>\r\n  </Box>\r\n}\r\n\r\nexport function StatFilterItem({ statKey, statKeys = [], value = 0, close, setFilter, disabled = false }: {\r\n  statKey?: string, statKeys: string[], value?: number, close?: () => void, setFilter: (statKey: string, value?: number) => void, disabled?: boolean\r\n}) {\r\n  const isFloat = KeyMap.unit(statKey) === \"%\"\r\n  const onChange = useCallback(s => statKey && setFilter(statKey, s), [setFilter, statKey])\r\n  return <ButtonGroup sx={{ width: \"100%\" }}>\r\n    <DropdownButton\r\n      title={statKey ? KeyMap.get(statKey) : \"New Stat\"}\r\n      disabled={disabled}\r\n      color={statKey ? \"success\" : \"secondary\"}\r\n    >\r\n      {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { close?.(); setFilter(sKey, value) }}>{KeyMap.get(sKey)}</MenuItem>)}\r\n    </DropdownButton>\r\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: 30, flexGrow: 1 }}>\r\n      <CustomNumberInput\r\n        disabled={!statKey}\r\n        float={isFloat}\r\n        value={value}\r\n        placeholder=\"Min Value\"\r\n        onChange={onChange}\r\n        sx={{ px: 2 }}\r\n      />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    {!!close && <Button color=\"error\" onClick={close} disabled={disabled}><FontAwesomeIcon icon={faTrashAlt} /></Button>}\r\n  </ButtonGroup>\r\n}\r\n","\r\nexport function initGlobalSettings() {\r\n  return { tcMode: false }\r\n}\r\n","import { faBan, faChartLine, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { BusinessCenter, Lock, LockOpen } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, Chip, IconButton, Skeleton, Tooltip, Typography } from '@mui/material';\r\nimport React, { lazy, Suspense, useCallback, useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SlotNameWithIcon from '../Components/Artifact/SlotNameWIthIcon';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport CharacterAutocomplete from '../Components/Character/CharacterAutocomplete';\r\nimport LocationName from '../Components/Character/LocationName';\r\nimport ColorText from '../Components/ColoredText';\r\nimport ConditionalWrapper from '../Components/ConditionalWrapper';\r\nimport InfoTooltip from '../Components/InfoTooltip';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport StatIcon from '../Components/StatIcon';\r\nimport Artifact from '../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport KeyMap, { cacheValueString } from '../KeyMap';\r\nimport useArtifact from '../ReactHooks/useArtifact';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { allSubstatKeys, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\r\nimport { CharacterKey, Rarity } from '../Types/consts';\r\nimport { clamp, clamp01 } from '../Util/Util';\r\nimport PercentBadge from './PercentBadge';\r\nimport { probability } from './RollProbability';\r\n\r\nconst ArtifactEditor = lazy(() => import('./ArtifactEditor'))\r\n\r\ntype Data = {\r\n  artifactId?: string,\r\n  artifactObj?: ICachedArtifact,\r\n  onClick?: (id: string) => void,\r\n  onDelete?: (id: string) => void, mainStatAssumptionLevel?: number,\r\n  effFilter?: Set<SubstatKey>,\r\n  probabilityFilter?: Dict<SubstatKey, number>\r\n  disableEditSetSlot?: boolean\r\n  editor?: boolean,\r\n  canExclude?: boolean\r\n  canEquip?: boolean,\r\n  extraButtons?: JSX.Element\r\n}\r\nconst allSubstatFilter = new Set(allSubstatKeys)\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onClick, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter, probabilityFilter, disableEditSetSlot = false, editor = false, canExclude = false, canEquip = false, extraButtons }: Data): JSX.Element | null {\r\n  const { t } = useTranslation([\"artifact\", \"ui\"]);\r\n  const { database } = useContext(DatabaseContext)\r\n  const databaseArtifact = useArtifact(artifactId)\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? databaseArtifact)?.setKey), [artifactObj, databaseArtifact])\r\n  const equipOnChar = (charKey: CharacterKey | \"\") => database.setArtLocation(artifactId!, charKey)\r\n  const editable = !artifactObj\r\n  const [showEditor, setshowEditor] = useState(false)\r\n  const onHideEditor = useCallback(() => setshowEditor(false), [setshowEditor])\r\n  const onShowEditor = useCallback(() => editable && setshowEditor(true), [editable, setshowEditor])\r\n\r\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => artifactId && onClick?.(artifactId)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }} >{children}</CardActionArea>, [onClick, artifactId],)\r\n  const falseWrapperFunc = useCallback(children => <Box sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }} >{children}</Box>, [])\r\n\r\n  const art = artifactObj ?? databaseArtifact\r\n  if (!art) return null\r\n\r\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude, location = \"\" } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\r\n  const artifactValid = maxEfficiency !== 0\r\n  const slotName = sheet?.getSlotName(slotKey) || \"Unknown Piece Name\"\r\n  const slotDesc = sheet?.getSlotDesc(slotKey)\r\n  const slotDescTooltip = slotDesc && <InfoTooltip title={<Box>\r\n    <Typography variant='h6'>{slotName}</Typography>\r\n    <Typography>{slotDesc}</Typography>\r\n  </Box>} />\r\n  const setEffects = sheet?.setEffects\r\n  const setDescTooltip = sheet && setEffects && <InfoTooltip title={\r\n    <span>\r\n      {Object.keys(setEffects).map(setNumKey => <span key={setNumKey}>\r\n        <Typography variant=\"h6\"><SqBadge color=\"success\">{t(`artifact:setEffectNum`, { setNum: setNumKey })}</SqBadge></Typography>\r\n        <Typography>{sheet.setEffectDesc(setNumKey as any)}</Typography>\r\n      </span>)}\r\n    </span>\r\n  } />\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    {editor && <Suspense fallback={false}>\r\n      <ArtifactEditor\r\n        artifactIdToEdit={showEditor ? artifactId : \"\"}\r\n        cancelEdit={onHideEditor}\r\n        disableEditSetSlot={disableEditSetSlot}\r\n      />\r\n    </Suspense>}\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\r\n        <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", width: \"100%\" }}>\r\n          {!onClick && <IconButton color=\"primary\" disabled={!editable} onClick={() => database.updateArt({ lock: !lock }, id)} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>}\r\n          <Box sx={{ pt: 2, px: 2, position: \"relative\", zIndex: 1 }}>\r\n            {/* header */}\r\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, justifyContent: \"space-between\", mb: 1 }}>\r\n              <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={levelVariant as any} />\r\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}>{slotName}</Typography>\r\n              {slotDescTooltip}\r\n            </Box>\r\n            <Typography color=\"text.secondary\" variant=\"body2\">\r\n              <SlotNameWithIcon slotKey={slotKey} />\r\n            </Typography>\r\n            <Typography variant=\"h6\" color={`${KeyMap.getVariant(mainStatKey)}.main`}>\r\n              <span>{StatIcon[mainStatKey]} {KeyMap.get(mainStatKey)}</span>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <strong>\r\n                <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\r\n              </strong>\r\n            </Typography>\r\n            <Stars stars={rarity} colored />\r\n            {/* {process.env.NODE_ENV === \"development\" && <Typography color=\"common.black\">{id || `\"\"`} </Typography>} */}\r\n          </Box>\r\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\r\n            <Box\r\n              component=\"img\"\r\n              src={sheet?.slotIcons[slotKey] ?? \"\"}\r\n              width=\"auto\"\r\n              height=\"100%\"\r\n              sx={{ float: \"right\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <CardContent sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\", pt: 1, pb: 0, width: \"100%\" }}>\r\n          {substats.map((stat: ICachedSubstat) => <SubstatDisplay key={stat.key} stat={stat} effFilter={effFilter} rarity={rarity} />)}\r\n          <Box sx={{ display: \"flex\", my: 1 }}>\r\n            <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`artifact:editor.curSubEff`}</Typography>\r\n            <PercentBadge value={currentEfficiency} max={900} valid={artifactValid} />\r\n          </Box>\r\n          {currentEfficiency !== maxEfficiency && <Box sx={{ display: \"flex\", mb: 1 }}>\r\n            <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`artifact:editor.maxSubEff`}</Typography>\r\n            <PercentBadge value={maxEfficiency} max={900} valid={artifactValid} />\r\n          </Box>}\r\n          <Box flexGrow={1} />\r\n          {probabilityFilter && <strong>Probability: {(probability(art, probabilityFilter) * 100).toFixed(2)}%</strong>}\r\n          <Typography color=\"success.main\">{sheet?.name ?? \"Artifact Set\"} {setDescTooltip}</Typography>\r\n        </CardContent>\r\n      </ConditionalWrapper>\r\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        {editable && canEquip\r\n          ? <CharacterAutocomplete sx={{ flexGrow: 1 }} size=\"small\" showDefault\r\n            defaultIcon={<BusinessCenter />} defaultText={t(\"ui:inventory\")}\r\n            value={location} onChange={equipOnChar} />\r\n          : <LocationName location={location} />}\r\n        {editable && <ButtonGroup sx={{ height: \"100%\" }}>\r\n          {editor && <Tooltip title={<Typography>{t`artifact:edit`}</Typography>} placement=\"top\" arrow>\r\n            <Button color=\"info\" size=\"small\" onClick={onShowEditor} >\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>\r\n          </Tooltip>}\r\n          {canExclude && <Tooltip title={<Typography>{t`artifact:excludeArtifactTip`}</Typography>} placement=\"top\" arrow>\r\n            <Button onClick={() => database.updateArt({ exclude: !exclude }, id)} color={exclude ? \"error\" : \"success\"} size=\"small\" >\r\n              <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\r\n            </Button>\r\n          </Tooltip>}\r\n          {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={lock}>\r\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n          </Button>}\r\n          {extraButtons}\r\n        </ButtonGroup>}\r\n      </Box>\r\n    </CardLight >\r\n  </Suspense>\r\n}\r\nfunction SubstatDisplay({ stat, effFilter, rarity }: { stat: ICachedSubstat, effFilter: Set<SubstatKey>, rarity: Rarity }) {\r\n  if (!stat.value) return null\r\n  const numRolls = stat.rolls?.length ?? 0\r\n  const maxRoll = stat.key ? Artifact.maxSubstatValues(stat.key) : 0\r\n  const rollData = stat.key ? Artifact.getSubstatRollData(stat.key, rarity) : []\r\n  const rollOffset = 7 - rollData.length\r\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n  const efficiency = stat.efficiency ?? 0\r\n  const effOpacity = clamp01(0.5 + (efficiency / (100 * 5)) * 0.5) //divide by 6 because an substat can have max 6 rolls\r\n  const statName = KeyMap.getStr(stat.key)\r\n  const unit = KeyMap.unit(stat.key)\r\n  const inFilter = stat.key && effFilter.has(stat.key)\r\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\r\n    <Typography sx={{ flexGrow: 1 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">{StatIcon[stat.key]} {statName}{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</Typography>\r\n    {inFilter && <Box display=\"flex\" gap={0.25} height=\"1.3em\">\r\n      {stat.rolls.sort().map((v, i) => <SmolProgress key={`${i}${v}`} value={100 * v / maxRoll} color={`roll${clamp(rollOffset + rollData.indexOf(v), 1, 6)}.main`} />)}\r\n    </Box>}\r\n    <Typography sx={{ opacity: effOpacity, minWidth: 40, textAlign: \"right\" }}>{inFilter ? `${efficiency.toFixed()}%` : \"-\"}</Typography>\r\n  </Box>)\r\n}\r\nexport function SmolProgress({ color = \"red\", value = 50 }) {\r\n  return <Box sx={{ width: 7, height: \"100%\", bgcolor: color, overflow: \"hidden\", borderRadius: 1, display: \"inline-block\" }}>\r\n    <Box sx={{ width: 10, height: `${100 - clamp(value, 0, 100)}%`, bgcolor: \"gray\" }} />\r\n  </Box>\r\n}\r\n","import { ICachedArtifact, MainStatKey } from \"../Types/artifact\";\r\nimport { allArtifactRarities, allSlotKeys, ArtifactRarity, ArtifactSetKey, CharacterKey, SlotKey } from \"../Types/consts\";\r\nimport { FilterConfigs, SortConfigs } from \"../Util/SortByFilters\";\r\nimport Artifact from \"../Data/Artifacts/Artifact\";\r\nimport { probability } from \"./RollProbability\";\r\nimport { SubstatKey } from \"../Types/artifact\";\r\nexport const artifactSortKeys = [\"rarity\", \"level\", \"artsetkey\", \"efficiency\", \"mefficiency\", \"probability\"] as const\r\nexport const artifactSortKeysTC = [\"probability\"] as const\r\nexport type ArtifactSortKey = typeof artifactSortKeys[number]\r\nexport type FilterOption = {\r\n  artSetKeys: ArtifactSetKey[],\r\n  rarity: ArtifactRarity[],\r\n  levelLow: number,\r\n  levelHigh: number,\r\n  slotKeys: SlotKey[],\r\n  mainStatKeys: MainStatKey[],\r\n  substats: SubstatKey[]\r\n  location: CharacterKey | \"Inventory\" | \"Equipped\" | \"\"\r\n  exclusion: Array<\"excluded\" | \"included\">,\r\n  locked: Array<\"locked\" | \"unlocked\">,\r\n}\r\n\r\ntype ArtifactSortFilter = {\r\n  filterOption: FilterOption\r\n  ascending: boolean\r\n  sortType: ArtifactSortKey\r\n}\r\nexport function initialFilterOption(): FilterOption {\r\n  return {\r\n    artSetKeys: [],\r\n    rarity: [...allArtifactRarities],\r\n    levelLow: 0,\r\n    levelHigh: 20,\r\n    slotKeys: [...allSlotKeys],\r\n    mainStatKeys: [],\r\n    substats: [],\r\n    location: \"\",\r\n    exclusion: [\"excluded\", \"included\"],\r\n    locked: [\"locked\", \"unlocked\"],\r\n  }\r\n}\r\nexport const initialArtifactSortFilter = (): ArtifactSortFilter => ({\r\n  filterOption: initialFilterOption(),\r\n  ascending: false,\r\n  sortType: artifactSortKeys[0],\r\n})\r\n\r\nexport function artifactSortConfigs(effFilterSet: Set<SubstatKey>, probabilityFilter): SortConfigs<ArtifactSortKey, ICachedArtifact> {\r\n  return {\r\n    rarity: {\r\n      getValue: art => art.rarity ?? 0,\r\n      tieBreaker: \"level\"\r\n    },\r\n    level: {\r\n      getValue: art => art.level ?? 0,\r\n      tieBreaker: \"artsetkey\"\r\n    },\r\n    artsetkey: {\r\n      getValue: art => art.setKey ?? \"\",\r\n      tieBreaker: \"level\"\r\n    },\r\n    efficiency: {\r\n      getValue: art => Artifact.getArtifactEfficiency(art, effFilterSet).currentEfficiency\r\n    },\r\n    mefficiency: {\r\n      getValue: art => Artifact.getArtifactEfficiency(art, effFilterSet).maxEfficiency\r\n    },\r\n    probability: {\r\n      getValue: art => {\r\n        if (!Object.keys(probabilityFilter).length) return 0\r\n        const prob = (art as any).probability\r\n        if (prob === undefined) return probability(art, probabilityFilter);\r\n        return prob\r\n      }\r\n    }\r\n  }\r\n}\r\nexport function artifactFilterConfigs(): FilterConfigs<keyof FilterOption, ICachedArtifact> {\r\n  return {\r\n    exclusion: (art, filter) => {\r\n      if (!filter.includes(\"included\") && !art.exclude) return false\r\n      if (!filter.includes(\"excluded\") && art.exclude) return false\r\n      return true\r\n    },\r\n    locked: (art, filter) => {\r\n      if (!filter.includes(\"locked\") && art.lock) return false\r\n      if (!filter.includes(\"unlocked\") && !art.lock) return false\r\n      return true\r\n    },\r\n    location: (art, filter) => {\r\n      if (!filter) return true\r\n      if (filter === \"Inventory\" && !art.location) return true\r\n      if (filter === \"Equipped\" && art.location) return true\r\n      if (filter === art.location) return true\r\n      return false\r\n    },\r\n    artSetKeys: (art, filter) => filter.length ? filter.includes(art.setKey) : true,\r\n    slotKeys: (art, filter) => filter.includes(art.slotKey),\r\n    mainStatKeys: (art, filter) => filter.length ? filter.includes(art.mainStatKey) : true,\r\n    levelLow: (art, filter) => filter <= art.level,\r\n    levelHigh: (art, filter) => filter >= art.level,\r\n    rarity: (art, filter) => filter.includes(art.rarity),\r\n    substats: (art, filter) => {\r\n      for (const filterKey of filter)\r\n        if (filterKey && !art.substats.some(substat => substat.key === filterKey)) return false;\r\n      return true\r\n    }\r\n  }\r\n}\r\n","import SqBadge from '../Components/SqBadge';\r\nimport { clamp } from '../Util/Util';\r\n\r\nexport default function PercentBadge({ value, max = 1, valid }: {\r\n  valid?: boolean,\r\n  value: number | string,\r\n  max?: number\r\n}) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`roll${clamp(Math.floor((value / max) * 10) - 4, 1, 6)}`, value.toFixed() + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"error\"\r\n  return <SqBadge color={badgeColor} >{text}</SqBadge>\r\n}\r\n","import { IArtifact, ISubstat, MainStatKey, SubstatKey } from '../Types/artifact'\r\nimport { crawlObject, layeredAssignment } from '../Util/Util'\r\nimport Artifact from '../Data/Artifacts/Artifact'\r\nimport ArtifactMainStatsData from '../Data/Artifacts/artifact_main_gen.json'\r\n\r\n// We separate rolls into \"filler rolls\" that occurs when there are less than 4 substats,\r\n// and \"upgrade rolls\" that occurs when all 4 substats are added. They have different\r\n// probability distribution and require separate consideration.\r\n\r\n// Notations for the remainder of this file.\r\n//\r\n// i, j, k := substat\r\n// E(i) := Extra substat that rolls into substat i\r\n// T(i) := Targetted (extra) substat for substat i\r\n// Nf(i) := # of filler roll into substat i (0 <= Nfi <= 1)\r\n// Nu(i) := # of upgrade rolls into substat i\r\n//\r\n// E := { E1, E2, ... }\r\n// T := { T1, T2, ... }\r\n// N(i) := Nf(i) + Nu(i)\r\n// Nf := Nf(1) + Nf(2) + ...\r\n// Nu := Nu(1) + Nu(2) + ...\r\n//\r\n// For example, if the artifact has 14 atk, and the target atk is 30,\r\n// in a scenario where we roll 2 rolls of 16 and 18 into atk, then\r\n//\r\n// i = atk, E(atk) = 16 + 18, T(atk) = 30 - 14, Nf(atk) = 0 roll, Nu(atk) = 2 rolls\r\n\r\nconst allWeights = [3, 4, 6] as const\r\ntype Weight = typeof allWeights[number]\r\n\r\n/**\r\n * Weight used when rolling a filler roll. Each roll will choose from available\r\n * substats (excluding main stat and existing substats) with these weights.\r\n */\r\nconst fWeight: StrictDict<SubstatKey, Weight> = {\r\n  hp: 6, atk: 6, def: 6,\r\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\r\n  critRate_: 3, critDMG_: 3\r\n}\r\n\r\n/**\r\n * Probability of observing a filler sequence with particular weights\r\n *\r\n * pFillerSeq[w0][w1][w2][...] = Pr [ fWeight[main stat] = w0, fWeight[substat1] = w1, fWeight[substat2] = w2, ... ]\r\n */\r\nconst pFillerSeq: Dict<0 | Weight, Dict<Weight, Dict<Weight, Dict<Weight, Dict<Weight, number>>>>> = {}\r\nfunction populatePFillerSeq(prefix: (0 | Weight)[], prob: { [key in Weight]: number }, sumProb: number, current: number) {\r\n  if (prefix.length === 5) {\r\n    layeredAssignment(pFillerSeq, prefix as any, current)\r\n    return\r\n  }\r\n\r\n  for (const i of allWeights)\r\n    if (prob[i] > 0)\r\n      populatePFillerSeq([...prefix, i], { ...prob, [i]: prob[i] - i }, sumProb - i, current * prob[i] / sumProb)\r\n}\r\npopulatePFillerSeq([0], { 3: 6, 4: 20, 6: 18 }, 44, 1)\r\n\r\npopulatePFillerSeq([3], { 3: 3, 4: 20, 6: 18 }, 41, 1)\r\npopulatePFillerSeq([4], { 3: 6, 4: 16, 6: 18 }, 40, 1)\r\npopulatePFillerSeq([6], { 3: 6, 4: 20, 6: 12 }, 38, 1)\r\n\r\n/**\r\n * cnr[n][r] = C(n, r) = n! / (r!(n-r)!)\r\n *\r\n * 0 <= n <= 5; 0 <= r <= n\r\n */\r\nconst cnr = Array(6).fill(0).map((_, n) => {\r\n  const result = [1]\r\n  let r = 0, value = 1\r\n  while (++r <= n) {\r\n    value *= n - r + 1\r\n    value /= r\r\n    result.push(value)\r\n  }\r\n\r\n  return result\r\n})\r\n\r\n/**\r\n * pNExtra[n][i] = Pr[ E(k) >= (i - 7n) * alpha(i) | N(k) = n ]\r\n *               = Pr[ (E(k) / alpha(k)) - 7n >= i | N(k) = n ]\r\n *\r\n * 0 <= n <= 5; 0 <= i < 3*n + 1\r\n */\r\nconst pNExtra = [[1]]\r\nwhile (pNExtra.length < 6) {\r\n  const last = pNExtra[pNExtra.length - 1]\r\n  const next = Array(last.length + 3).fill(0)\r\n  last.forEach((value, i) => {\r\n    for (const j of [0, 1, 2, 3]) {\r\n      next[i + j] += value\r\n    }\r\n  })\r\n\r\n  pNExtra.push(next.map(x => x / 4))\r\n}\r\nfor (const array of pNExtra) {\r\n  let accu = array.reduce((a, b) => a + b)\r\n  array.forEach((x, i, array) => {\r\n    array[i] = accu\r\n    accu -= x\r\n  })\r\n}\r\n\r\n/** Probability that `artifact` will have at least `target` stats at max level */\r\nfunction probability(artifact: IArtifact, _target: { [key in SubstatKey]?: number }): number {\r\n  if (artifact.rarity <= 2) return NaN // Doesn't work with 1* and 2* should we decide to add them\r\n\r\n  const { rarity, level, substats } = artifact\r\n\r\n  // `target = target - mainstat - substat` to find the extra substats we need\r\n  // Also count filler rolls (4 - # of substats) while we're at it\r\n  const target = { ..._target }, required = new Set(Object.keys(target))\r\n  let numFillerSlots = 0\r\n  {\r\n    const key = artifact.mainStatKey\r\n    if (key in target) {\r\n      const maxLevel = rarity * 4 // Note: this formula doesn't work with 1* and 2* artifacts\r\n      const maxLevelMainStat = ArtifactMainStatsData[rarity][key][maxLevel]\r\n      if (maxLevelMainStat < target[key]!) return 0 // Main stat won't meet the target\r\n\r\n      delete target[key]\r\n      required.delete(key as SubstatKey)\r\n    }\r\n  }\r\n  for (const { key, value } of substats) {\r\n    if (key) {\r\n      if (required.has(key)) {\r\n        required.delete(key)\r\n        if (target[key]! > value)\r\n          target[key]! -= value\r\n        else delete target[key] // Requirement already met\r\n      }\r\n    } else numFillerSlots += 1\r\n  }\r\n  numFillerSlots += 4 - substats.length\r\n\r\n  if (required.size > numFillerSlots || Object.keys(target).length > 4) return 0 // Not enough filler rolls\r\n\r\n  const numUpgradeRolls = Artifact.rollsRemaining(level, rarity) - numFillerSlots\r\n\r\n  // normalize `target`\r\n  for (const [key, value] of Object.entries(target))\r\n    target[key] = Math.max(Math.ceil(10 * value / Artifact.maxSubstatValues(key, rarity)), 1)\r\n\r\n  let minTotalUpgrades = 0\r\n  const targetEntries = Object.entries(target).map(([key, target]) => {\r\n    const filler = required.has(key) ? 1 : 0 // Nf(i)\r\n    const minUpgrade = Math.ceil(target / 10) - filler // Minimum # of upgrade rolls to ensure E(i) > T(i)\r\n    minTotalUpgrades += minUpgrade\r\n    return { target, filler, minUpgrade }\r\n  }).reverse()\r\n\r\n  if (minTotalUpgrades > numUpgradeRolls) return 0 // Not enough upgrade rolls\r\n\r\n  /**\r\n   * The optimization trick here is to write Pr[ E > T | N ] using a recursive relation. Let\r\n   *\r\n   *  f(n, t) = Pr[ E(i) >= t | N(i) = n ]\r\n   *  g(k, n) = Pr[ E(1) >= T(1), E(2) >= T(2), ..., E(k) >= T(k) | Nu - Nu(1) - Nu(2) - ... - Nu(k) = n ]\r\n   *  h(n, m, M) = Pr[ Nu(k) = m | 0 <= Nu(k) <= n, |K| = M ]\r\n   *\r\n   * Then\r\n   *\r\n   *  Pr [ E > T | N ] = Pr[ Nf(k) = I(k requires filler) for all k | N ] sum{0 <= n <= Nu} g(|K|, n)\r\n   *\r\n   * where I(X) is the indicator function, and |K| is the number of substat constraints, and\r\n   *\r\n   *  f(n, e * alpha(i)) = pNExtra[n][ e - 7n ]\r\n   *  h(n, m, M) = C(n, m) (M-1)^(n - m) M^(-n) = pRollInto(n, m, M)\r\n   *  g(0, N) = 1\r\n   *  g(0, n) = 0 for n != N\r\n   *\r\n   *  g(k + 1, n) = sum{0 <= m <= n} g(k, n + m) f(m + Nf(k), T(k)) h(n + m, m, |K| - k)\r\n   */\r\n\r\n  // At this point,\r\n  //  `target` = ceil(T / alpha)\r\n  //  `numUpgradeRolls` = Nu\r\n\r\n  let result = { [numUpgradeRolls]: 1 }, additionalUpgradeRolls = numUpgradeRolls - minTotalUpgrades\r\n\r\n  // Keep applying `target` from first to last.\r\n  // At each step i in the loop, `result[n]` = g(i, n)\r\n  targetEntries.forEach(({ target, filler, minUpgrade }, targetIndex) => {\r\n    const next: typeof result = {}\r\n\r\n    for (let rolls = minUpgrade; rolls <= minUpgrade + additionalUpgradeRolls; rolls++) {\r\n      // rolls = m; extra = T(i) / alpha - 7n\r\n\r\n      // Extra substat (mutiple of alpha) required from upgrade & filler rolls\r\n      const extra = target - 7 * (rolls + filler)\r\n      // pExtra = Pr[ Has at least `extra` * alpha from `rolls` upgrade or filler rolls into `key` ]\r\n      //        = f(m + Nf(i), T(i))\r\n      const pExtra = (extra > 0 ? pNExtra[rolls + filler][extra] : 1)\r\n\r\n      for (const [_remaining, probability] of Object.entries(result)) {\r\n        const remaining = parseInt(_remaining)\r\n        if (remaining < rolls) continue\r\n\r\n        // n := remaining - m\r\n        // remaining = n + m\r\n        // probability = g(i, n + m)\r\n\r\n        // `pRolls` = Pr[ Has `rolls` rolls into `key` from `remaining` upgrade rolls ]\r\n        //          = h(n + m, m, |K| - i)\r\n        const pRolls = pRollInto(remaining, rolls, 4 - targetIndex)\r\n        const index = remaining - rolls // n\r\n\r\n        // g(i + 1, n) += g(i, n + m) f(m + Nf(i), T(i)) h(n + m, m, |K| - i)\r\n        next[index] = (next[index] ?? 0) + probability * pExtra * pRolls\r\n      }\r\n    }\r\n    result = next\r\n  })\r\n\r\n  // At this point, `result[i]` = g(|K|, i)\r\n\r\n  return calculatePFillerRolls(artifact.mainStatKey, substats, required) * Object.values(result).reduce((a, b) => a + b)\r\n}\r\n\r\n/**\r\n * Pr[ N(k) = n | N = m, |K| = M ]\r\n *\r\n * 0 <= n <= N <= 5; 0 <= M <= 4\r\n */\r\nfunction pRollInto(m: number, n: number, M: number) {\r\n  return cnr[m][n] * Math.pow(M - 1, m - n) / Math.pow(M, m)\r\n}\r\n\r\n// Given a list of substat (in that order), calculate the probability that filler rolls will have all `required` substats in any order\r\nfunction calculatePFillerRolls(mainStat: MainStatKey, substats: ISubstat[], required: Set<SubstatKey>) {\r\n  // Instead of picking substats in a particular order [critDMG_, atk_, ...],\r\n  // We pick substat weights first [3, 4, 3, ...], then assign proper substats\r\n  // that corresponds to that weight: 3 => critDMG_ | critRate_ ; 4 => atk_, etc.\r\n  // This reduces the search space significantly (5040 substat sequences => 71 weight sequences).\r\n\r\n  const mainStatRatio = fWeight[mainStat] ?? 0\r\n  let pFillerRolls = 0 // Pr[ filler rolls include all `required` substats, Substats are in the same order as `substats` ]\r\n\r\n  const numUnusedSubstats = { 3: 2, 4: 5, 6: 3 } // # of substat not used by main stat or substats\r\n  let pSuffixFillerSeq: any = pFillerSeq[mainStatRatio] // Suffix of `pFillerSeq` that excludes the `substats` portion\r\n  for (const { key } of substats) {\r\n    if (key) {\r\n      const ratio = fWeight[key]\r\n      pSuffixFillerSeq = pSuffixFillerSeq[ratio]\r\n      numUnusedSubstats[ratio] -= 1\r\n    }\r\n  }\r\n  if (mainStatRatio) numUnusedSubstats[mainStatRatio] -= 1\r\n\r\n  const requiredCount = { 3: 0, 4: 0, 6: 0 }\r\n  for (const key of required) requiredCount[fWeight[key]] += 1\r\n\r\n  let total = 0\r\n  crawlObject(pSuffixFillerSeq, [], obj => typeof obj === \"number\", (prob: number, path: string[]) => {\r\n    total += prob\r\n    const currentCount = { 3: 0, 4: 0, 6: 0 }\r\n    for (const key of path) currentCount[key] += 1\r\n\r\n    let sum = prob\r\n    for (const i of allWeights) {\r\n      const current = currentCount[i], required = requiredCount[i]\r\n      if (current < required) return\r\n      sum *= cnr[current][required]\r\n    }\r\n\r\n    pFillerRolls += sum\r\n  })\r\n\r\n  for (const i of allWeights)\r\n    pFillerRolls /= cnr[numUnusedSubstats[i]][requiredCount[i]]\r\n  return pFillerRolls / total\r\n}\r\n\r\nexport { probability }\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useArtifact(artifactID: string | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [artifact, setArtifact] = useState(database._getArt(artifactID))\r\n  useEffect(() => setArtifact(database._getArt(artifactID)), [database, artifactID])\r\n  useEffect(() =>\r\n    artifactID ? database.followArt(artifactID, setArtifact) : undefined,\r\n    [artifactID, setArtifact, database])\r\n  return artifact\r\n}\r\n"],"names":["CharacterAutocomplete","value","onChange","defaultText","defaultIcon","placeholderText","labelText","showDefault","showInventory","showEquipped","filter","disable","props","t","useTranslation","allCharacterKeys","k","theme","useTheme","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","filterConfigs","useMemo","characterFilterConfigs","characterKeys","_getCharKeys","ck","sort","textForValue","useCallback","imageForValue","icon","faUserShield","src","thumbImgSide","sx","pr","characterOptions","base","push","label","faves","filterFunction","element","weaponType","favorite","name","map","characterKey","nonFaves","concat","charOptions","autoHighlight","options","getOptionLabel","option","_","newValue","isOptionEqualToValue","getOptionDisabled","renderInput","placeholder","startAdornment","hasValue","renderOption","_getChar","image","text","Suspense","fallback","variant","width","noWrap","isSelected","addlElement","display","flexGrow","ml","mr","LocationName","location","characterSheet","component","nameWIthIcon","verticalAlign","ThumbSide","styled","height","lineHeight","marginTop","spacing","marginLeft","marginRight","marginBottom","StyledInputBase","InputBase","backgroundColor","palette","primary","main","transition","dark","Wrapper","Button","padding","overflow","CustomNumberInputButtonGroupWrapper","children","disableRipple","disableFocusRipple","disableTouchRipple","CustomNumberInput","disabled","float","useState","number","setNumber","focused","setFocus","parseFunc","parseFloat","parseInt","onBlur","onFocus","useEffect","onInputChange","e","target","onKeyDOwn","key","type","inputProps","step","onKeyDown","className","placement","cursor","faInfoCircle","MenuItemWithImage","primaryTypographyProps","style","fontWeight","typography","fontWeightMedium","fontWeightRegular","SolidColoredTextField","flattenCorners","InputProps","color","hiddenLabel","InputLabelProps","success","borderRadius","paddingTop","undefined","paddingBottom","border","light","StatFilterCard","statFilters","setStatFilters","data","DataContext","statKeys","get","input","charEle","remainingKeys","Object","keys","some","setFilter","sKey","min","gap","justifyContent","title","flexDirection","entries","statKey","StatFilterItem","close","isFloat","KeyMap","s","onClick","flexBasis","px","faTrashAlt","initGlobalSettings","tcMode","ArtifactEditor","lazy","allSubstatFilter","Set","allSubstatKeys","ArtifactCard","artifactId","artifactObj","onDelete","mainStatAssumptionLevel","effFilter","probabilityFilter","disableEditSetSlot","editor","canExclude","canEquip","extraButtons","databaseArtifact","useArtifact","sheet","ArtifactSheet","setKey","editable","showEditor","setshowEditor","onHideEditor","onShowEditor","wrapperFunc","falseWrapperFunc","art","id","lock","slotKey","rarity","level","mainStatKey","substats","exclude","mainStatLevel","Math","max","mainStatUnit","levelVariant","floor","Artifact","currentEfficiency","maxEfficiency","artifactValid","slotName","getSlotName","slotDesc","getSlotDesc","slotDescTooltip","setEffects","setDescTooltip","setNumKey","setNum","setEffectDesc","minHeight","artifactIdToEdit","cancelEdit","condition","wrapper","falseWrapper","position","updateArt","right","bottom","zIndex","pt","alignItems","mb","size","textAlign","StatIcon","cacheValueString","stars","colored","top","slotIcons","pb","stat","SubstatDisplay","my","valid","probability","toFixed","p","charKey","setArtLocation","arrow","faEdit","faBan","faChartLine","numRolls","rolls","length","maxRoll","rollData","rollOffset","rollColor","clamp","efficiency","effOpacity","clamp01","statName","unit","inFilter","has","alignContent","v","i","SmolProgress","indexOf","opacity","minWidth","bgcolor","artifactSortKeys","artifactSortKeysTC","initialFilterOption","artSetKeys","allArtifactRarities","levelLow","levelHigh","slotKeys","allSlotKeys","mainStatKeys","exclusion","locked","initialArtifactSortFilter","filterOption","ascending","sortType","artifactSortConfigs","effFilterSet","getValue","tieBreaker","artsetkey","mefficiency","prob","artifactFilterConfigs","includes","filterKey","substat","PercentBadge","badgeColor","allWeights","fWeight","hp","atk","def","hp_","atk_","def_","eleMas","enerRech_","critRate_","critDMG_","pFillerSeq","populatePFillerSeq","prefix","sumProb","current","layeredAssignment","cnr","Array","fill","n","result","r","pNExtra","last","next","forEach","x","array","accu","reduce","a","b","artifact","_target","NaN","required","numFillerSlots","maxLevel","ArtifactMainStatsData","delete","numUpgradeRolls","ceil","minTotalUpgrades","targetEntries","filler","minUpgrade","reverse","additionalUpgradeRolls","targetIndex","m","M","extra","pExtra","_remaining","remaining","pRolls","pow","index","mainStat","mainStatRatio","pFillerRolls","numUnusedSubstats","pSuffixFillerSeq","ratio","requiredCount","total","crawlObject","obj","path","currentCount","sum","calculatePFillerRolls","values","artifactID","_getArt","setArtifact","followArt"],"sourceRoot":""}