{"version":3,"sources":["Character/Character.js","Weapon/Weapon.js","StatDependency.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.js","Data/WeaponData.js","Data/CharacterData.js","Util/ReactUtil.js","Components/StatIcon.js","InfoComponent.jsx","Character/CharacterCard.jsx","Character/CharacterDisplay.jsx"],"names":["Character","this","Error","characterKey","talentKey","formula","formulaDB","getCDataObj","formulaKey","tk","Object","entries","find","character","CharacterDatabase","get","equippedArtifacts","values","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getCharacterDataImport","CharacterDataImport","getBaseStatValue","statKey","defVal","levelKey","getSpecializedStatKey","getSpeicalizedStatVal","Weapon","getWeaponMainStatValWithOverride","weapon","getLevel","includes","characterStatBase","characterObj","baseStat","getIndexFromlevelkey","charKey","CharacterData","getElementalName","elementalKey","ElementalData","name","getAllCharacterKeys","keys","getName","getStar","star","getElementalKey","elementKey","getElementalKeys","getElementalKeysWithoutPhysical","filter","e","getWeaponTypeKey","weaponTypeKey","getConstellationName","constellationName","getTitles","titles","getlevelKeys","LevelsData","getlevelTemplateName","getLevelString","levelOverride","getStatValueWithOverride","indexOf","level","getAscension","asend","getSpecializedStat","specializeStat","key","value","getThumb","thumbImg","getCard","cardImg","getTalentImg","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","constellation","talents","i","talentBoost","boostEntry","getTalentDocument","document","getTalentDocumentSections","stats","map","section","getTalentField","sectionIndex","fieldIndex","field","fields","getTalentFieldValue","getTalentStats","talentStats","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","sections","cond","tempCond","conditional","getTalentConditionalStats","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","fromEntries","val","getTalentConditionalFields","isAutoElemental","isAutoInfusable","auto","infusable","hasTalentPage","Boolean","getDisplayStatKeys","basicKeys","eleKey","transReactions","deepClone","ElementToReactionKeys","charFormulas","genericAvgHit","reactions","startsWith","replace","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","Artifact","getSlotKeys","slotKey","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifact","sKey","update","calculateBuild","artifacts","art","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactConditionals","setToSlots","artifactSetEffectsStats","getArtifactSetEffectsStats","mainStatKey","getMainStatValue","numStars","artifactsAssumeFull","substats","substat","stat","statVal","setKey","srcKey","setNumKey","srcKey2","length","parseInt","getConditionalStats","dependencies","GetDependencies","modifiers","PreprocessFormulas","finalStats","mergeStats","modifier","mkey","multiplier","hitMode","autoInfused","reactionMode","talentLevelKeys","talentConditionals","ascension","statKeys","characterEle","weaponType","tlvl","overrides","hasOwnProperty","specializedStatVal","specialStatKey","s","weaponSubKey","getWeaponSubStatKey","getWeaponSubStatValWithOverride","getWeaponBonusStat","refineIndex","getWeaponConditionalStat","getWeaponDataImport","WeaponDataImport","getLevelName","LevelNameData","getLevelIndex","WeaponLevelKeys","getWeaponName","weaponKey","WeaponData","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","charFinalStats","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","subStatKey","getWeaponsOfType","getWeaponTypeName","WeaponTypeData","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","objMultiplication","GetFormulaDependency","dependency","Set","Proxy","target","prop","receiver","add","formulaKeyDependency","freeze","Formulas","StatData","InsertDependencies","has","k","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","icon","faStar","Stars","stars","colored","className","Array","_","then","imp","default","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","useForceUpdate","useState","useCallback","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","InfoComponent","pageKey","text","modalTitle","children","loadFromLocalStorage","showInfoModal","setshowInfoModal","isArray","getRandomElementFromArray","displayText","closeModal","infoShown","saveToLocalStorage","show","onHide","size","variant","contentClassName","bg","Header","Title","xs","onClick","faTimes","Body","fallback","animation","Footer","faQuestionCircle","CharacterCard","onEdit","onDelete","cardClassName","header","footer","forceUpdate","useEffect","Promise","all","getDataImport","registerCharListener","unregisterCharListener","build","weaponName","weaponMainVal","weaponSubVal","weaponLevelName","weaponPassiveName","faEdit","faTrashAlt","src","thumbnail","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","toFixed","fixedUnit","as","Link","to","pathname","CharacterDisplayInfo","React","lazy","CharacterDisplayCardPromise","CharacterDisplayCard","toggle","sortingFunc","ck","filterReducer","oldFilter","newFilter","CharacterDisplay","props","charIdToEdit","setcharIdToEdit","sortBy","setsortBy","useReducer","elementalFilter","elementalFilterDispatch","weaponFilter","weaponFilterDispatch","newCharacter","setnewCharacter","scrollRef","useRef","ReactGA","pageview","saved","registerListener","unregisterListener","save","deleteCharacter","window","confirm","editCharacter","setTimeout","current","scrollIntoView","behavior","cancelEditCharacter","charKeyList","getCharacterKeyList","cKey","sort","a","b","diff","showEditor","ref","Suspense","editable","setCharacterKey","onClose","CharDisplayFooter","type","onChange","lg","md","faPlus","faLink"],"mappings":"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","file":"static/js/17.0895cae9.chunk.js","sourcesContent":["import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelTemplateName = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getLevelString = (character) => {\r\n    const levelOverride = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n    return Character.getLevel(character.levelKey) === levelOverride ? Character.getlevelTemplateName(character.levelKey) : `Lvl. ${levelOverride}`\r\n  }\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentDocumentSections = (stats, talentKey) =>\r\n    this.getTalentDocument(stats.characterKey, talentKey).map(section => typeof section === \"function\" ? section(stats) : section)\r\n\r\n  static getTalentField = (stats, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\r\n    if (!stats) return defVal\r\n    const field = this.getTalentDocumentSections(stats, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\r\n    if (!field) return defVal\r\n    return typeof field === \"function\" ? field(stats) : field\r\n  }\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return typeof field?.[key] === \"function\" ? field[key](stats) : field[key]\r\n  }\r\n\r\n  static getTalentStats = (charKey, talentKey, stats, defVal = null) => {\r\n    const talentStats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof talentStats === \"function\")\r\n      return talentStats(stats)\r\n    return talentStats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, stats) => {\r\n    const talents = this.getCDataObj(charKey)?.talent || {}\r\n    const statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(charKey, talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (stats, talentKey, conditionalKey, defVal = null) => {\r\n    const sections = this.getTalentDocumentSections(stats, talentKey)\r\n    let cond = null\r\n    for (const section of sections) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(stats)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  //look up the formula, and generate the formulaPath to send to worker.\r\n  static getFormulaPath(characterKey, talentKey, formula) {\r\n    const formulaDB = this.getCDataObj(characterKey)?.formula\r\n    if (!formulaDB) return\r\n    let formulaKey\r\n    if (talentKey === \"auto\") {\r\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\r\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\r\n        if (formulaKey) {\r\n          talentKey = tk\r\n          break;\r\n        }\r\n      }\r\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\r\n    if (!formulaKey) return\r\n    return { characterKey, talentKey, formulaKey }\r\n  }\r\n\r\n\r\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\r\n\r\n  static getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    const isAutoElemental = Character.isAutoElemental(characterKey)\r\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    if (!isAutoElemental)\r\n      basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (this.hasTalentPage(characterKey)) {\r\n      const charFormulas = {}\r\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\r\n        Character.getTalentDocumentSections(stats, talentKey)?.forEach((section, sectionIndex) =>\r\n          section?.fields?.forEach((field, fieldIndex) => {\r\n            const hasFormula = field?.formula || this.getTalentField(stats, talentKey, sectionIndex, fieldIndex)?.formula\r\n            if (!hasFormula) return\r\n            if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n            charFormulas[talentKey].push({ talentKey, sectionIndex, fieldIndex })\r\n          })))\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {\r\n      //generic average hit parameters.\r\n      const genericAvgHit = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical \r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\r\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst \r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    const artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      const artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar?.location === characterKey) return; //it is already equipped\r\n      const artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      const notCharLoc = (artNotOnChar?.location ?? \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = Object.fromEntries(Artifact.getSlotKeys().map(sKey => [sKey, \"\"]))\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    if (!character) return {}\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    initialStats.characterEle = this.getElementalKey(characterKey);\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.talentConditionals = talentConditionals\r\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, initialStats).forEach(s => this.mergeStats(initialStats, s))\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      const conditional = Character.getTalentConditional(initialStats, talentKey, conditionalKey)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    return initialStats\r\n  }\r\n}","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nimport { objMultiplication } from '../Util/Util.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    stats = stats(refineIndex)\r\n    if (stacks !== 1) objMultiplication(stats, stacks)\r\n    return stats\r\n  }\r\n}","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20/40\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40/50\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50/60\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60/70\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70/80\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80/90\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20/40\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40/50\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50/60\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60/70\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70/80\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80/90\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { useCallback, useState } from \"react\"\r\n\r\nexport function useForceUpdate() {\r\n  const [, update] = useState()\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return forceUpdateHook\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { faQuestionCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Suspense, useState } from \"react\"\r\nimport { Button, Card, Col, Modal, Row, Spinner } from \"react-bootstrap\"\r\nimport { getRandomElementFromArray, loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\"\r\n\r\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }) {\r\n  const [showInfoModal, setshowInfoModal] = useState(loadFromLocalStorage(\"infoShown\")?.[pageKey] ?? true)\r\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\r\n  const closeModal = () => {\r\n    const infoShown = loadFromLocalStorage(\"infoShown\") ?? {}\r\n    infoShown[pageKey] = false\r\n    saveToLocalStorage(\"infoShown\", infoShown)\r\n    setshowInfoModal(false)\r\n  }\r\n  return <>\r\n    <Modal show={showInfoModal} onHide={() => closeModal()} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <Card.Title>{modalTitle}</Card.Title>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button variant=\"danger\" onClick={() => closeModal()} >\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Suspense fallback={<h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>}>\r\n            {children}\r\n          </Suspense>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={() => closeModal()}>\r\n            <span>Close</span>\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Body className=\"pl-2 py-0 pr-0\">\r\n        <Row>\r\n          <Col><small>{displayText}</small></Col>\r\n          <Col xs=\"auto\">\r\n            <Button size=\"sm\" variant=\"info\" className=\"m-0 py-1\" onClick={() => setshowInfoModal(true)}><FontAwesomeIcon icon={faQuestionCircle} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { useForceUpdate } from '../Util/ReactUtil';\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer }) {\r\n  const forceUpdate = useForceUpdate()\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(forceUpdate)\r\n    characterKey && CharacterDatabase.registerCharListener(characterKey, forceUpdate)\r\n    return () =>\r\n      characterKey && CharacterDatabase.unregisterCharListener(characterKey, forceUpdate)\r\n  }, [characterKey, forceUpdate])\r\n  const character = CharacterDatabase.get(characterKey)\r\n  if (!character) return null;\r\n  const build = Character.calculateBuild(character)\r\n  const { setToSlots } = build\r\n\r\n  const { weapon = {}, constellation } = character\r\n  const name = Character.getName(characterKey)\r\n  const elementKey = Character.getElementalKey(characterKey)\r\n  const weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  const weaponName = Weapon.getWeaponName(weapon.key)\r\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  const weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  const weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  const weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {header ? header : <h5><b>{name}</b></h5>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(characterKey)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete(characterKey)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onEdit(characterKey)} className={onEdit ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`thumb-big grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h3 className=\"mb-0\">{Character.getLevelString(character)} {`C${constellation}`}</h3>\r\n          <h5 className=\"mb-0\"><Stars stars={Character.getStar(characterKey)} colored /></h5>\r\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faLink, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, useCallback, useEffect, useReducer, useRef, useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Col, Container, Image, Row, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { Link } from 'react-router-dom';\r\nimport Assets from '../Assets/Assets';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport InfoComponent from '../InfoComponent';\r\nimport { useForceUpdate } from '../Util/ReactUtil';\r\nimport { loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nconst CharacterDisplayInfo = React.lazy(() => import('./CharacterDisplayInfo'));\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('./CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\nconst toggle = {\r\n  level: \"Level\",\r\n  rarity: \"Rarity\",\r\n  name: \"Name\"\r\n}\r\nconst sortingFunc = {\r\n  level: (ck) => Character.getLevel(CharacterDatabase.get(ck).levelKey),\r\n  rarity: (ck) => Character.getStar(ck)\r\n}\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\nexport default function CharacterDisplay(props) {\r\n  const [charIdToEdit, setcharIdToEdit] = useState(\"\")\r\n  const [sortBy, setsortBy] = useState(() => Object.keys(toggle)[0])\r\n  const [elementalFilter, elementalFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [newCharacter, setnewCharacter] = useState(false)\r\n  const forceUpdate = useForceUpdate()\r\n  const scrollRef = useRef(null)\r\n  useEffect(() => {\r\n    ReactGA.pageview('/character')\r\n    const saved = loadFromLocalStorage(\"CharacterDisplay.state\")\r\n    if (saved) {\r\n      const { charIdToEdit, sortBy, elementalFilter, weaponFilter } = saved\r\n      setcharIdToEdit(charIdToEdit)\r\n      setsortBy(sortBy)\r\n      Character.getElementalKeysWithoutPhysical().includes(elementalFilter) && elementalFilterDispatch(elementalFilter)\r\n      Weapon.getWeaponTypeKeys().includes(weaponFilter) && weaponFilterDispatch(weaponFilter)\r\n    }\r\n    Character.getCharacterDataImport()?.then(forceUpdate)\r\n    CharacterDatabase.registerListener(forceUpdate)\r\n    return () => CharacterDatabase.unregisterListener(forceUpdate)\r\n  }, [forceUpdate])\r\n  useEffect(() => {\r\n    const save = { charIdToEdit, sortBy, elementalFilter, weaponFilter }\r\n    saveToLocalStorage(\"CharacterDisplay.state\", save)\r\n  }, [charIdToEdit, sortBy, elementalFilter, weaponFilter])\r\n  const deleteCharacter = useCallback(id => {\r\n    if (!window.confirm(`Are you sure you want to remove ${Character.getName(id)}?`)) return\r\n    Character.remove(id)\r\n    if (charIdToEdit === id)\r\n      setcharIdToEdit(\"\")\r\n  }, [charIdToEdit, setcharIdToEdit])\r\n\r\n  const editCharacter = useCallback(id => {\r\n    setcharIdToEdit(id)\r\n    setTimeout(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, 500);\r\n  }, [setcharIdToEdit, scrollRef])\r\n\r\n  const cancelEditCharacter = useCallback(() => {\r\n    setcharIdToEdit(\"\")\r\n    setnewCharacter(false)\r\n  }, [setcharIdToEdit])\r\n\r\n  const charKeyList = CharacterDatabase.getCharacterKeyList().filter(cKey => {\r\n    if (elementalFilter && elementalFilter !== Character.getElementalKey(cKey)) return false\r\n    if (weaponFilter && weaponFilter !== Character.getWeaponTypeKey(cKey)) return false\r\n    return true\r\n  }).sort((a, b) => {\r\n    if (sortBy === \"name\") {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      // names must be equal\r\n      return 0;\r\n    }\r\n    if (sortBy === \"level\") {\r\n      const diff = sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n    } else {\r\n      const diff = sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n    }\r\n  })\r\n  const showEditor = Boolean(charIdToEdit || newCharacter)\r\n  return <Container ref={scrollRef} className=\"mt-2\">\r\n    <InfoComponent\r\n      pageKey=\"characterPage\"\r\n      modalTitle=\"Character Management Page Guide\"\r\n      text={[\"Every character will be tested with in-game numbers for maximum accuracy.\",\r\n        \"You can see the details of the calculations of every number.\",\r\n        \"You need to manually enable auto infusion for characters like Choungyun or Noelle.\",\r\n        \"You can change character constellations in both \\\"Character\\\" tab and in \\\"Talents\\\" tab.\",\r\n        \"Modified character Stats show up in yellow.\"]}\r\n    >\r\n      <CharacterDisplayInfo />\r\n    </InfoComponent>\r\n    {/* editor/character detail display */}\r\n    {showEditor ? <Row className=\"mt-2\"><Col>\r\n      <React.Suspense fallback={<span>Loading...</span>}>\r\n        <CharacterDisplayCard editable\r\n          setCharacterKey={editCharacter}\r\n          characterKey={charIdToEdit}\r\n          onClose={cancelEditCharacter}\r\n          footer={<CharDisplayFooter onClose={cancelEditCharacter} characterKey={charIdToEdit} />}\r\n        />\r\n      </React.Suspense>\r\n    </Col></Row> : null}\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              {Character.getElementalKeysWithoutPhysical().map(eleKey =>\r\n                <Button key={eleKey} variant={(!elementalFilter || elementalFilter === eleKey) ? \"success\" : \"primary\"} className=\"py-1 px-2\" onClick={() => elementalFilterDispatch(eleKey)} ><h4 className=\"mb-0\"><Image src={Assets.elements?.[eleKey]} className=\"inline-icon\" /></h4></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {Weapon.getWeaponTypeKeys().map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"primary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}><h4 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h4></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <span>Sort by: </span>\r\n            <ToggleButtonGroup type=\"radio\" name=\"level\" value={sortBy} onChange={setsortBy}>\r\n              {Object.entries(toggle).map(([key, text]) =>\r\n                <ToggleButton key={key} value={key} variant={sortBy === key ? \"success\" : \"primary\"}>{text}</ToggleButton>)}\r\n            </ToggleButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Row className=\"mt-2\">\r\n      {!showEditor && <Col lg={4} md={6} className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n          <Card.Header className=\"pr-2\">\r\n            <span>Add New Character</span>\r\n          </Card.Header>\r\n          <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n            <Row className=\"d-flex flex-row justify-content-center\">\r\n              <Col xs=\"auto\">\r\n                <Button onClick={() => setnewCharacter(true)}>\r\n                  <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>}\r\n      {charKeyList.map(charKey =>\r\n        <Col key={charKey} lg={4} md={6} className=\"mb-2\">\r\n          <CharacterCard\r\n            cardClassName=\"h-100\"\r\n            characterKey={charKey}\r\n            onDelete={deleteCharacter}\r\n            onEdit={editCharacter}\r\n            footer\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n  </Container>\r\n}\r\nfunction CharDisplayFooter({ onClose, characterKey }) {\r\n  return <Row>\r\n    <Col>\r\n      <Button variant=\"info\" as={Link} to={{ pathname: \"/flex\", characterKey }}><FontAwesomeIcon icon={faLink} /> Share Character</Button>\r\n    </Col>\r\n    <Col xs=\"auto\">\r\n      <Button variant=\"danger\" onClick={onClose}>Close</Button>\r\n    </Col>\r\n  </Row>\r\n}"],"sourceRoot":""}