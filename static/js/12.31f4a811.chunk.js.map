{"version":3,"sources":["Character/Character.js","Weapon/Weapon.js","StatDependency.js","Components/CustomFormControl.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.js","Data/WeaponData.js","Data/CharacterData.js","Util/ReactUtil.js","Components/StatIcon.js","Components/CharacterSelection.js","Character/StatInput.jsx","Components/StatDisplay.js","Components/ConditionalSelector.js","Character/CharacterDisplay/DamageOptionsAndCalculation.jsx","Character/CharacterDisplay/StatDisplayComponent.jsx","Util/CodingUtil.js","Util/Schemas.js","Util/FlexUtil.js","FlexPage/FlexDisplay.js"],"names":["Character","this","Error","characterKey","talentKey","formula","formulaDB","getCDataObj","formulaKey","tk","Object","entries","find","character","CharacterDatabase","get","equippedArtifacts","values","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getCharacterDataImport","CharacterDataImport","getBaseStatValue","statKey","defVal","levelKey","getSpecializedStatKey","getSpeicalizedStatVal","Weapon","getWeaponMainStatValWithOverride","weapon","getLevel","includes","characterStatBase","characterObj","baseStat","getIndexFromlevelkey","charKey","CharacterData","getElementalName","elementalKey","ElementalData","name","getAllCharacterKeys","keys","getName","getStar","star","getElementalKey","elementKey","getElementalKeys","getElementalKeysWithoutPhysical","filter","e","getWeaponTypeKey","weaponTypeKey","getConstellationName","constellationName","getTitles","titles","getlevelKeys","LevelsData","getlevelTemplateName","getLevelString","levelOverride","getStatValueWithOverride","indexOf","level","getAscension","asend","getSpecializedStat","specializeStat","key","value","getThumb","thumbImg","getCard","cardImg","getTalentImg","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","constellation","talents","i","talentBoost","boostEntry","getTalentDocument","document","getTalentDocumentSections","stats","map","section","getTalentField","sectionIndex","fieldIndex","field","fields","getTalentFieldValue","getTalentStats","talentStats","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","sections","cond","tempCond","conditional","getTalentConditionalStats","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","fromEntries","val","getTalentConditionalFields","isAutoElemental","isAutoInfusable","auto","infusable","hasTalentPage","Boolean","getDisplayStatKeys","basicKeys","eleKey","transReactions","deepClone","ElementToReactionKeys","charFormulas","genericAvgHit","reactions","startsWith","replace","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","Artifact","getSlotKeys","slotKey","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifact","sKey","update","calculateBuild","artifacts","art","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactConditionals","setToSlots","artifactSetEffectsStats","getArtifactSetEffectsStats","mainStatKey","getMainStatValue","numStars","artifactsAssumeFull","substats","substat","stat","statVal","setKey","srcKey","setNumKey","srcKey2","length","parseInt","getConditionalStats","dependencies","GetDependencies","modifiers","PreprocessFormulas","finalStats","mergeStats","modifier","mkey","multiplier","hitMode","autoInfused","reactionMode","talentLevelKeys","talentConditionals","ascension","statKeys","characterEle","weaponType","tlvl","overrides","hasOwnProperty","specializedStatVal","specialStatKey","s","weaponSubKey","getWeaponSubStatKey","getWeaponSubStatValWithOverride","getWeaponBonusStat","refineIndex","getWeaponConditionalStat","getWeaponDataImport","WeaponDataImport","getLevelName","LevelNameData","getLevelIndex","WeaponLevelKeys","getWeaponName","weaponKey","WeaponData","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","charFinalStats","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","subStatKey","getWeaponsOfType","getWeaponTypeName","WeaponTypeData","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","objMultiplication","GetFormulaDependency","dependency","Set","Proxy","target","prop","receiver","add","formulaKeyDependency","freeze","Formulas","StatData","InsertDependencies","has","k","CustomFormControl","onChange","disabled","float","placeholder","allowEmpty","useState","state","setstate","stateDirty","setstateDirty","sendChange","useCallback","parseFunc","parseFloat","useEffect","aria-label","className","type","onBlur","onKeyDown","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","icon","faStar","Stars","stars","colored","Array","_","then","imp","default","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","useForceUpdate","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","a","b","Item","onClick","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Prepend","Text","Append","undefined","placement","overlay","style","pointerEvents","faUndo","DisplayStatDiff","label","oldVal","fixed","unit","variant","diff","oldText","diffText","toFixed","xs","StatDisplay","equippedBuild","newBuild","editable","build","invalid","Stat","getStatUnit","fixedUnit","getStatName","labelVariant","ConditionalSelector","props","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","count","Toggle","size","Menu","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","ReactionToggle","characterDispatch","charEleKey","src","HitModeToggle","m","CalculationDisplay","header","bg","Header","Body","subFormulaKeys","getPrintableFormulaStatKeyList","reverse","as","Card","eventKey","printStat","Collapse","subKey","printFormula","talentField","fieldText","fieldVariant","fieldFormulaText","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","DamageOptionsAndCalculation","Button","href","rel","xl","getStatNameRaw","immunityStatKey","elementImmunity","StatDisplayComponent","statsDisplayKeys","cardbg","md","JSON","stringify","encodeItem","data","schema","pathItem","encode","uint","string","numberToString","encodeLength","encodeUInt","match","encodeString","schemas","defaultSchema","item","join","encodeArray","encodeObject","keySchema","valueSchema","items","encodeSparse","error","path","decodeItem","stream","result","decodeLength","stringToNumber","take","decodeUInt","decodeString","unused","decodeArray","decodeObject","decodeSparse","decode","number","remainder","Math","floor","String","fromCharCode","padEnd","code","charCodeAt","BlockStream","offset","prototype","slice","end","slots","hitModes","reactionModes","artifactSets","characterKeys","toString","array","other","object","list","index","artifactSet","slot","artifact","factor","endsWith","overrideLevel","bool","int","skill","burst","sparse","flex","_createFlexObj","parseFlexObj","parameters","split","databaseVersion","CurrentDatabaseVersion","parseFlexObj1","d","dbv","characterkey","parseFlexObj0","urlon","parse","TestDisplay","useLocation","searchStr","search","substring","to","Display","flexObj","createFlexObj","window","scrollTo","toast","settoast","url","isUpToDate","Container","Toast","onClose","show","delay","autohide","position","top","right","InputGroup","navigator","clipboard","writeText","faLink","Form","Control","readOnly","select","Alert","CharacterDisplayCard"],"mappings":"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","file":"static/js/12.31f4a811.chunk.js","sourcesContent":["import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelTemplateName = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getLevelString = (character) => {\r\n    const levelOverride = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n    return Character.getLevel(character.levelKey) === levelOverride ? Character.getlevelTemplateName(character.levelKey) : `Lvl. ${levelOverride}`\r\n  }\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentDocumentSections = (stats, talentKey) =>\r\n    this.getTalentDocument(stats.characterKey, talentKey).map(section => typeof section === \"function\" ? section(stats) : section)\r\n\r\n  static getTalentField = (stats, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\r\n    if (!stats) return defVal\r\n    const field = this.getTalentDocumentSections(stats, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\r\n    if (!field) return defVal\r\n    return typeof field === \"function\" ? field(stats) : field\r\n  }\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return typeof field?.[key] === \"function\" ? field[key](stats) : field[key]\r\n  }\r\n\r\n  static getTalentStats = (charKey, talentKey, stats, defVal = null) => {\r\n    const talentStats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof talentStats === \"function\")\r\n      return talentStats(stats)\r\n    return talentStats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, stats) => {\r\n    const talents = this.getCDataObj(charKey)?.talent || {}\r\n    const statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(charKey, talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (stats, talentKey, conditionalKey, defVal = null) => {\r\n    const sections = this.getTalentDocumentSections(stats, talentKey)\r\n    let cond = null\r\n    for (const section of sections) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(stats)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  //look up the formula, and generate the formulaPath to send to worker.\r\n  static getFormulaPath(characterKey, talentKey, formula) {\r\n    const formulaDB = this.getCDataObj(characterKey)?.formula\r\n    if (!formulaDB) return\r\n    let formulaKey\r\n    if (talentKey === \"auto\") {\r\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\r\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\r\n        if (formulaKey) {\r\n          talentKey = tk\r\n          break;\r\n        }\r\n      }\r\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\r\n    if (!formulaKey) return\r\n    return { characterKey, talentKey, formulaKey }\r\n  }\r\n\r\n\r\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\r\n\r\n  static getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    const isAutoElemental = Character.isAutoElemental(characterKey)\r\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    if (!isAutoElemental)\r\n      basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (this.hasTalentPage(characterKey)) {\r\n      const charFormulas = {}\r\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\r\n        Character.getTalentDocumentSections(stats, talentKey)?.forEach((section, sectionIndex) =>\r\n          section?.fields?.forEach((field, fieldIndex) => {\r\n            const hasFormula = field?.formula || this.getTalentField(stats, talentKey, sectionIndex, fieldIndex)?.formula\r\n            if (!hasFormula) return\r\n            if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n            charFormulas[talentKey].push({ talentKey, sectionIndex, fieldIndex })\r\n          })))\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {\r\n      //generic average hit parameters.\r\n      const genericAvgHit = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical \r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\r\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst \r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    const artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      const artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar?.location === characterKey) return; //it is already equipped\r\n      const artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      const notCharLoc = (artNotOnChar?.location ?? \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = Object.fromEntries(Artifact.getSlotKeys().map(sKey => [sKey, \"\"]))\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    if (!character) return {}\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    initialStats.characterEle = this.getElementalKey(characterKey);\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.talentConditionals = talentConditionals\r\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, initialStats).forEach(s => this.mergeStats(initialStats, s))\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      const conditional = Character.getTalentConditional(initialStats, talentKey, conditionalKey)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    return initialStats\r\n  }\r\n}","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nimport { objMultiplication } from '../Util/Util.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    stats = stats(refineIndex)\r\n    if (stacks !== 1) objMultiplication(stats, stacks)\r\n    return stats\r\n  }\r\n}","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20/40\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40/50\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50/60\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60/70\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70/80\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80/90\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20/40\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40/50\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50/60\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60/70\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70/80\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80/90\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { useCallback, useState } from \"react\"\r\n\r\nexport function useForceUpdate() {\r\n  const [, update] = useState()\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return forceUpdateHook\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","import { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\nexport default function StatDisplay({ character, equippedBuild, newBuild, editable, statKey }) {\r\n  let val, oldVal, fixed, unit, variant;\r\n  let label = \"\"\r\n  if (typeof statKey === \"string\") {//basic statKey\r\n    if (newBuild && equippedBuild) {//comparable\r\n      //newbuild -> val\r\n      //equippedbuild ->old\r\n      val = newBuild?.finalStats?.[statKey] ?? 0\r\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\r\n    } else {\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      //build ->val\r\n      val = build?.finalStats?.[statKey] ?? 0\r\n      //statvaluewith override -> old\r\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n      oldVal === invalid && (oldVal = undefined)\r\n      if (statKey === \"finalHP\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n      else if (statKey === \"finalDEF\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n      else if (statKey === \"finalATK\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n    }\r\n    unit = Stat.getStatUnit(statKey)\r\n    fixed = Stat.fixedUnit(statKey)\r\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n  } else {//from character sheet\r\n    const build = newBuild ? newBuild : equippedBuild\r\n    const { talentKey, sectionIndex, fieldIndex } = statKey\r\n    const field = Character.getTalentField(build.finalStats, talentKey, sectionIndex, fieldIndex)\r\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", build.finalStats)\r\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build.finalStats)}</span>\r\n    fixed = Character.getTalentFieldValue(field, \"fixed\", build.finalStats, 0)\r\n    val = Character.getTalentFieldValue(field, \"formula\", build.finalStats)?.[0]?.(build.finalStats)\r\n    if (newBuild && equippedBuild) {//comparable\r\n      oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n    }\r\n  }\r\n\r\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, characterDispatch, className }) {\r\n  if (reactionMode === null) reactionMode = \"none\"\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nfunction HitModeToggle({ hitMode, characterDispatch, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ character, character: { characterKey }, build }) {\r\n  return <div>\r\n    {Object.entries(Character.getDisplayStatKeys(build.finalStats)).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n      return <Card bg=\"darkcontent\" text=\"lightfont\" key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              //simple statKey field\r\n              if (typeof field === \"string\") {\r\n                const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, [field]), build?.finalStats?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build.finalStats)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              //fields\r\n              const talentField = Character.getTalentField(build.finalStats, field.talentKey, field.sectionIndex, field.fieldIndex)\r\n              const fieldText = Character.getTalentFieldValue(talentField, \"text\", build.finalStats)\r\n              const fieldVariant = Character.getTalentFieldValue(talentField, \"variant\", build.finalStats)\r\n              const fieldFormulaText = Character.getTalentFieldValue(talentField, \"formulaText\", build.finalStats)\r\n              const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(talentField, \"formula\", build.finalStats, [])\r\n              if (!fieldFormula || !fieldFormulaDependency) return null\r\n              const fieldValue = fieldFormula?.(build.finalStats)?.toFixed?.()\r\n              const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, fieldFormulaDependency), build?.finalStats?.modifiers).reverse()\r\n              return <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                  <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                  <Card.Body className=\"p-2\">\r\n                    <div className=\"mb-n2\">\r\n                      <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n                      {subFormulaKeys.map(subKey =>\r\n                        <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { hitMode }, characterDispatch, newBuild, equippedBuild, className }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Accordion className={className}>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle character={character} characterDispatch={characterDispatch} /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n            <small>Expand below to edit enemy details and view calculation details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"details\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"details\">\r\n        <Card.Body className=\"p-2\">\r\n          <Card className=\"mb-2\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>Enemy Editor</Col>\r\n                <Col xs=\"auto\">\r\n                  <Button variant=\"warning\" size=\"sm\">\r\n                    <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                  </Button >\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-2\">\r\n              <Row >\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                    onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value })}\r\n                  />\r\n                </Col>\r\n                {Character.getElementalKeys().map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity })} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                      name={<b>{Stat.getStatName(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value })}\r\n                      disabled={elementImmunity}\r\n                      percent\r\n                    />\r\n                  </Col>\r\n                })}\r\n                <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n          <CalculationDisplay character={character} build={build} />\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n}\r\nexport {\r\n  HitModeToggle,\r\n  ReactionToggle,\r\n};\r\n\r\n","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","/// Schema keys\r\n/// Common {\r\n///   encode?: A function that transform encoding object into the specified format\r\n///   decode?: A function that transform object in the specified format into the decoded object\r\n/// }\r\n///\r\n/// UInt: { type: \"uint\",\r\n///   length?: number of bytes, uses variable-length format if not set,\r\n/// }\r\n/// String: { type: \"string\" }\r\n/// Array: { type: \"array\",\r\n///   schemas?: Array of schemas, in the same order as the item,\r\n///   defaultSchema?: Default schema for when `schemas[i]` is `null`,\r\n/// }\r\n/// Object: { type: \"object\",\r\n///   schemas: A key-schema dictionary. All keys are encoded {\r\n///     default: default value if the object[key] doesn't exist\r\n///   }\r\n/// }\r\n/// Sparse: { type: \"sparse\",\r\n///   keys?: A list of permitted keys, `null` if all keys are permitted,\r\n///   keySchema: Common schema for keys,\r\n///   valueSchema: Common schema for values,\r\n/// }\r\n\r\nexport function encode(data, schema) {\r\n  return encodeItem(data, schema, null)\r\n}\r\nexport function decode(string, schema) {\r\n  const stream = new BlockStream(string)\r\n  const result = decodeItem(stream, schema, null)\r\n  stream.end()\r\n  return result\r\n}\r\n\r\nfunction encodeItem(data, schema, pathItem) {\r\n  try {\r\n    if (schema.encode)\r\n      data = schema.encode(data)\r\n    switch (schema.type) {\r\n      case \"uint\": return encodeUInt(data, schema)\r\n      case \"string\": return encodeString(data, schema)\r\n      case \"array\": return encodeArray(data, schema)\r\n      case \"object\": return encodeObject(data, schema)\r\n      case \"sparse\": return encodeSparse(data, schema)\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\nfunction decodeItem(stream, schema, pathItem) {\r\n  try {\r\n    let result\r\n    switch (schema.type) {\r\n      case \"uint\": result = decodeUInt(stream, schema); break\r\n      case \"string\": result = decodeString(stream, schema); break\r\n      case \"array\": result = decodeArray(stream, schema); break\r\n      case \"object\": result = decodeObject(stream, schema); break\r\n      case \"sparse\": result = decodeSparse(stream, schema); break\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n    if (schema.decode)\r\n      return schema.decode(result)\r\n    return result\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\n\r\nfunction encodeSparse(data, schema) {\r\n  const { keySchema, keys, valueSchema } = schema\r\n  const items = Object.entries(data).filter(([key]) => keys?.includes(key) ?? true)\r\n\r\n  return encodeLength(items.length) + items.map(([key, value]) =>\r\n    encodeItem(key, keySchema, key) + encodeItem(value, valueSchema, key)\r\n  ).join('')\r\n}\r\nfunction decodeSparse(stream, schema) {\r\n  const { keys, keySchema, valueSchema } = schema\r\n  const length = decodeLength(stream)\r\n\r\n  return Object.fromEntries([...new Array(length)].map(() => {\r\n    const key = decodeItem(stream, keySchema, null)\r\n    const value = decodeItem(stream, valueSchema, key)\r\n    return [key, value]\r\n  }).filter(([key]) => keys?.includes(key) ?? true))\r\n}\r\n\r\nfunction encodeObject(data, schema) {\r\n  const { schemas = [] } = schema\r\n  return Object.entries(schemas).map(([key, schema]) =>\r\n    encodeItem(key in data ? data[key] : schema.default, schema, key)\r\n  ).join('')\r\n}\r\nfunction decodeObject(stream, schema) {\r\n  const { schemas = [] } = schema\r\n  return Object.fromEntries(Object.entries(schemas).map(([key, schema]) =>\r\n    [key, decodeItem(stream, schema, key)]\r\n  ))\r\n}\r\n\r\nfunction encodeArray(data, schema) {\r\n  const { schemas = [], defaultSchema } = schema\r\n  return encodeLength(data.length) + data.map((item, i) =>\r\n    encodeItem(item, schemas[i] ?? defaultSchema, i)\r\n  ).join('')\r\n}\r\nfunction decodeArray(stream, schema) {\r\n  const { schemas = [], defaultSchema } = schema, length = decodeLength(stream)\r\n  return [...new Array(length)].map((unused, i) =>\r\n    decodeItem(stream, schemas[i] ?? defaultSchema, i))\r\n}\r\n\r\nfunction encodeString(string, schema) {\r\n  if (!string.match(/^[a-z0-9\\-_]+$/i))\r\n    throw new Error(`Cannot encode string ${string}: not alphanumeric or -_`)\r\n  return encodeLength(string.length) + string\r\n}\r\nfunction decodeString(stream, schema) {\r\n  const string = stream.take(decodeLength(stream))\r\n  if (!string.match(/^[a-z0-9\\-_]+$/i))\r\n    throw new Error(`Cannot decode string ${string}: not alphanumeric or -_`)\r\n  return string\r\n}\r\n\r\nfunction encodeUInt(uint, schema) {\r\n  const string = numberToString(uint, schema.length)\r\n  return schema.length ? string : (encodeLength(string.length) + string)\r\n}\r\nfunction decodeUInt(stream, schema) {\r\n  let length = schema.length || decodeLength(stream)\r\n  return stringToNumber(stream.take(length))\r\n}\r\n\r\n// Keep the length low. We might want to reserve high bits for later extension.\r\nfunction encodeLength(length) {\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return numberToString(length, 1)\r\n}\r\nfunction decodeLength(stream) {\r\n  let length = stringToNumber(stream.take(1))\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return length\r\n}\r\n\r\nfunction numberToString(number, length = 0) {\r\n  if (number < 0) throw new Error(`Cannot encode negative number ${number}`)\r\n\r\n  var string = \"\"\r\n  while (number > 0) {\r\n    const remainder = number % 64\r\n    number = Math.floor(number / 64)\r\n    if (remainder < 10) // 0-9\r\n      string += String.fromCharCode(remainder + 48 - 0)\r\n    else if (remainder < 36) // a-z\r\n      string += String.fromCharCode(remainder + 97 - 10)\r\n    else if (remainder < 62) // A-Z\r\n      string += String.fromCharCode(remainder + 65 - 36)\r\n    else if (remainder === 62) // -\r\n      string += \"-\"\r\n    else if (remainder === 63) // _\r\n      string += \"_\"\r\n  }\r\n\r\n  if (!length)\r\n    return string\r\n\r\n  if (string.length > length)\r\n    throw new Error(`Cannot encode uint ${number}: value too large`)\r\n  return string.padEnd(length, \"0\")\r\n}\r\nfunction stringToNumber(string) {\r\n  let result = 0, multiplier = 1\r\n\r\n  for (let i = 0; i < string.length; i++) {\r\n    let code = string.charCodeAt(i)\r\n\r\n    if (48 <= code && code < 58) // 0-9\r\n      result += multiplier * (code - 48 + 0)\r\n    else if (97 <= code && code < 123) // a-z\r\n      result += multiplier * (code - 97 + 10)\r\n    else if (65 <= code && code < 91) // A-Z\r\n      result += multiplier * (code - 65 + 36)\r\n    else if (string[i] === '-')\r\n      result += multiplier * 62\r\n    else if (string[i] === '_')\r\n      result += multiplier * 63\r\n    else throw new Error(`Cannot parse UInt from \"${string}\", which contains \"${String.fromCharCode(code)}\"`)\r\n\r\n    multiplier *= 64\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction BlockStream(string) {\r\n  this.string = string\r\n  this.offset = 0\r\n}\r\nBlockStream.prototype.take = function(count) {\r\n  if (this.offset + count > this.string.length)\r\n    throw new Error(`Cannot take ${count} items from ${this.string.slice(this.offset)}`)\r\n\r\n  const result = this.string.slice(this.offset, this.offset + count)\r\n  this.offset += count\r\n  return result\r\n}\r\nBlockStream.prototype.end = function() {\r\n  if (this.string.length !== this.offset)\r\n    throw new Error(`Unused string ${this.string.slice(this.offset)}`)\r\n}\r\n","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nconst slots = [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\",]\r\nconst hitModes = [\"hit\", \"avgHit\", \"critHit\",]\r\nconst reactionModes = [\r\n  null, \"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",\r\n]\r\nconst stats = [\r\n  \"\", \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n  \"physical_dmg_\", \"anemo_dmg_\", \"cryo_dmg_\", \"dendro_dmg_\", \"electro_dmg_\", \"geo_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\",\r\n]\r\nconst artifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\", \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\", \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\", \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\", \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\", \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\", \"WanderersTroupe\",\r\n]\r\nconst characterKeys = [\r\n  \"albedo\", \"amber\", \"barbara\", \"beidou\", \"bennett\", \"chongyun\", \"diluc\", \"diona\", \"fischl\", \"ganyu\", \"hutao\", \"jean\", \"kaeya\", \"keqing\", \"klee\", \"lisa\", \"mona\", \"ningguang\", \"noelle\", \"qiqi\", \"razor\", \"sucrose\", \"tartaglia\", \"traveler_anemo\", \"traveler_geo\", \"venti\", \"xiao\", \"xiangling\", \"xingqiu\", \"xinyan\", \"zhongli\", \"rosaria\",\r\n]\r\n\r\n// Common schemas\r\n\r\nconst bool = {\r\n  type: \"uint\", length: 1,\r\n  encode: (bool) => bool ? 1 : 0,\r\n  decode: (int) => int !== 0,\r\n}\r\nconst uint = (length) => ({ type: \"uint\", length })\r\nconst float = {\r\n  type: \"string\",\r\n  encode: (value) => value.toString().replace(/\\./g, '_'),\r\n  decode: (string) => parseFloat(string.replace(/_/g, '.')),\r\n}\r\nconst string = { type: \"string\" }\r\nconst array = (defaultSchema, other = {}) => ({ type: \"array\", defaultSchema, ...other })\r\nconst object = (schemas, other = {}) => ({ type: \"object\", schemas, ...other })\r\nconst sparse = (keySchema, valueSchema, keys = null) => ({ type: \"sparse\", keys, keySchema, valueSchema })\r\n\r\n// Fixed schema\r\n\r\nconst fixed = (list, length = 1) => ({\r\n  type: \"uint\", length,\r\n  encode: (item) => list.indexOf(item),\r\n  decode: (index) => list[index],\r\n})\r\nconst stat = fixed(stats)\r\nconst artifactSet = fixed(artifactSets)\r\nconst slot = fixed(slots)\r\nconst characterKey = fixed(characterKeys)\r\nconst hitMode = fixed(hitModes)\r\nconst reactionMode = fixed(reactionModes)\r\n\r\n// Complex schemas\r\n\r\nconst artifact = object({\r\n  setKey: artifactSet,\r\n  numStars: uint(1),\r\n  level: uint(2),\r\n  mainStatKey: stat,\r\n  slotKey: slot,\r\n  substats: array(\r\n    object({\r\n      key: stat,\r\n      value: uint(2),\r\n    }, {\r\n      encode: ({ key, value }) => {\r\n        let factor = key.endsWith(\"_\") ? 10 : 1 // one decimal place for percentage\r\n        return { key, value: value * factor }\r\n      },\r\n      decode: ({ key, value }) => {\r\n        let factor = key.endsWith(\"_\") ? 10 : 1 // one decomal place for percentage\r\n        return { key, value: value / factor }\r\n      }\r\n    })\r\n  )\r\n})\r\nconst conditional = array(\r\n  object({\r\n    srcKey: string,\r\n    srcKey2: string,\r\n    conditionalNum: uint(1),\r\n  }), {\r\n  // Add this here because someone is being naughty.\r\n  encode: (array) => array.filter(({ srcKey2 }) => srcKey2?.match(/^[a-z0-9\\-_]+$/i))\r\n  }\r\n)\r\nconst weapon = object({\r\n  key: string,\r\n  levelKey: string,\r\n  refineIndex: uint(1),\r\n  overrideMainVal: float,\r\n  overrideSubVal: float,\r\n  conditionalNum: uint(1),\r\n})\r\nconst character = object({\r\n  characterKey,\r\n  hitMode,\r\n  reactionMode,\r\n  constellation: uint(1),\r\n  overrideLevel: uint(2),\r\n  levelKey: string,\r\n  autoInfused: bool,\r\n  talentLevelKeys: object({ auto: uint(1), skill: uint(1), burst: uint(1) }),\r\n  artifactConditionals: conditional,\r\n  baseStatOverrides: sparse(string, float),\r\n  talentConditionals: conditional,\r\n  weapon,\r\n})\r\n\r\nconst flex = object({\r\n  artifacts: array(artifact),\r\n  character,\r\n})\r\n\r\nexport const schemas = {\r\n  flex\r\n}\r\n// For testing purpose only, no need to maintain strict ordering\r\nexport const constants = {\r\n  slots, hitModes, reactionModes, stats, artifactSets, characterKeys\r\n}\r\n","import ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { CurrentDatabaseVersion } from \"../Database/DatabaseUtil\";\r\nimport { decode, encode } from \"./CodingUtil\";\r\nimport { schemas } from \"./Schemas\";\r\nimport urlon from 'urlon'\r\n\r\nexport function createFlexObj(characterKey) {\r\n  const character = CharacterDatabase.get(characterKey)\r\n  if (!character) return null\r\n\r\n  const artifacts = Object.values(character.equippedArtifacts)\r\n    .filter(art => art)\r\n    .map(id => ArtifactDatabase.get(id))\r\n\r\n  return _createFlexObj(character, artifacts)\r\n}\r\n\r\n// TODO: Remove this when all test URLs are converted to new format\r\nexport function _createFlexObj(character, artifacts) {\r\n  try {\r\n    return \"v=1&d=\" + encode({ character, artifacts }, schemas.flex)\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${error.path ?? []}: ${error}`)\r\n    return null\r\n  }\r\n}\r\n\r\nexport function parseFlexObj(string) {\r\n  const parameters = Object.fromEntries(string.split('&').map(s => s.split('=')))\r\n\r\n  try {\r\n    switch (parseInt(parameters.v)) {\r\n      case 1: return parseFlexObj1(parameters.d)\r\n      default: return parseFlexObj0(urlon.parse(string))\r\n    }\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${error.path ?? []}: ${error}`)\r\n    return null\r\n  }\r\n}\r\n\r\nfunction parseFlexObj1(string) {\r\n  const { character, artifacts } = decode(string, schemas.flex)\r\n  artifacts.forEach(artifact => {\r\n    artifact.location = character.characterKey\r\n  })\r\n  return {\r\n    databaseVersion: CurrentDatabaseVersion,\r\n    artifacts, ...character\r\n  }\r\n}\r\nfunction parseFlexObj0(character) {\r\n  const { dbv, characterKey, levelKey, hitMode, reactionMode, artifactConditionals, baseStatOverrides, weapon, autoInfused, talentConditionals, constellation, overrideLevel, tlvl, artifacts } = character\r\n  const characterkey = character.characterKey\r\n  character.artifacts.forEach(art => {\r\n    art.location = characterkey\r\n    art.substats = Object.entries(art.substats).map(([key, value]) => ({ key, value }))\r\n  });\r\n  const [auto, skill, burst] = tlvl\r\n  return {\r\n    databaseVersion: dbv,\r\n    characterKey, levelKey, hitMode, reactionMode, artifactConditionals, baseStatOverrides, weapon, autoInfused, talentConditionals, constellation, overrideLevel,\r\n    talentLevelKeys: { auto, skill, burst }, artifacts\r\n  }\r\n}\r\n","import { Alert, Button, Card, Container, Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { CurrentDatabaseVersion } from '../Database/DatabaseUtil';\r\nimport '../StatDependency'\r\nimport { createFlexObj, parseFlexObj, _createFlexObj } from \"../Util/FlexUtil\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TestDisplay() {\r\n  const location = useLocation()\r\n  const searchStr = location.search\r\n  if (searchStr) {\r\n    const character = parseFlexObj(searchStr.substring(1))\r\n    if (!character) return <Redirect to={`/`} />\r\n    if (searchStr.startsWith(\"?$\"))\r\n      return <Redirect to={`/flex?${_createFlexObj(character, character.artifacts)}`} />\r\n    return <Display character={character} />\r\n  } else {\r\n    const characterKey = location.characterKey\r\n    if (!characterKey) return <Redirect to={`/`} />\r\n    const flexObj = createFlexObj(characterKey)\r\n    if (!flexObj) return <Redirect to={`/`} />\r\n    window.scrollTo(0, 0)//sometimes the window isnt scrolled to the top on redirect.\r\n    return <Redirect to={`/flex?${flexObj}`} />\r\n  }\r\n}\r\nfunction Display({ character }) {\r\n  const [toast, settoast] = useState(false)\r\n  const url = window.location.href\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(url)\r\n    settoast(true)\r\n  }\r\n  const { databaseVersion = 0 } = character\r\n  const isUpToDate = databaseVersion < CurrentDatabaseVersion\r\n  return <Container className=\"my-2\">\r\n    <Toast onClose={() => settoast(false)} show={toast} delay={3000} autohide style={{\r\n      position: 'absolute',\r\n      top: 50,\r\n      right: 50,\r\n    }}>\r\n      <Toast.Header><b className=\"mr-auto\">Genshin Optimizer</b></Toast.Header>\r\n      <Toast.Body>URL copied to clipboard.</Toast.Body>\r\n    </Toast>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <InputGroup className=\"mb-0\">\r\n          <InputGroup.Prepend>\r\n            <Button onClick={copyToClipboard}>\r\n              <span><FontAwesomeIcon icon={faLink} /> Copy URL to clipboard</span>\r\n            </Button>\r\n          </InputGroup.Prepend>\r\n          <Form.Control readOnly value={window.location.href} onClick={e => e.target.select()} />\r\n        </InputGroup>\r\n        {isUpToDate && <Alert variant=\"warning\" className=\"py-2 mt-2 mb-0\">This URL is generated on an older database version of Genshin Optimizer. The character data below might not be displayed as intended.</Alert>}\r\n      </Card.Body>\r\n    </Card>\r\n    <CharacterDisplayCard character={character} />\r\n  </Container>\r\n}"],"sourceRoot":""}