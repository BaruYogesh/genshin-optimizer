{"version":3,"file":"static/js/426.4d08ce56.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactSetSlotTooltip.tsx","Components/BootstrapTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/Character/CharacterSelectionModal.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","Context/CharacterContext.tsx","Context/DataContext.tsx","Data/Artifacts/ArtifactSheet.tsx","Data/Resonance.tsx","Data/Weapons/WeaponSheet.tsx","ReactHooks/useCharSelectionCallback.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useTeamData.tsx","ReactHooks/useWeapon.tsx","Util/MultiSelect.ts"],"sourcesContent":["import { Box, Typography } from '@mui/material';\r\nimport Assets from '../../Assets/Assets';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport KeyMap, { cacheValueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allElementsWithPhy, SlotKey } from '../../Types/consts';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon, { uncoloredEleIcons } from '../StatIcon';\r\nimport ArtifactSetSlotTooltip from './ArtifactSetSlotTooltip';\r\n\r\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\r\n  const artifactSheet = usePromise(() => art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\r\n  // Blank artifact slot icon\r\n  if (!art || !artifactSheet)\r\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"70%\", height: \"70%\",\r\n            left: \"50%\", top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            opacity: 0.7\r\n          }}\r\n          component=\"img\"\r\n          src={Assets.slot[key]}\r\n        />\r\n      </Box>\r\n    </CardDark>\r\n\r\n  // Actual artifact icon + info\r\n  const { mainStatKey, rarity, level, mainStatVal } = art\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ?? \"secondary\"\r\n\r\n  return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\r\n    <ArtifactSetSlotTooltip slotKey={key} sheet={artifactSheet}>\r\n      <Box\r\n        component=\"img\"\r\n        className={`grad-${rarity}star`}\r\n        src={artifactSheet.slotIcons[key]}\r\n        maxWidth=\"100%\"\r\n        maxHeight=\"100%\"\r\n      />\r\n    </ArtifactSetSlotTooltip>\r\n    <Typography sx={{ position: \"absolute\", m: -0.2, lineHeight: 1, pointerEvents: \"none\" }} variant=\"subtitle2\"><SqBadge color={levelVariant as any}>+{level}</SqBadge></Typography>\r\n    <Typography variant='h6' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, }}>\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{cacheValueString(mainStatVal, KeyMap.unit(mainStatKey))}{KeyMap.unit(mainStatKey)} {KeyMap.getStr(mainStatKey)}</Typography>} disableInteractive>\r\n        <SqBadge color={color} sx={{ p: 0.25 }}>{element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}</SqBadge>\r\n      </BootstrapTooltip>\r\n    </Typography>\r\n  </CardDark>\r\n}\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport { SlotKey } from \"../../Types/consts\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\r\n\r\ntype Data = {\r\n  slotKey: SlotKey,\r\n  sheet: ArtifactSheet | undefined,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function ArtifactSetSlotTooltip({ slotKey, sheet, children }: Data) {\r\n  const fallback = <Box>\r\n    <Skeleton variant=\"text\" width={100} />\r\n    <Skeleton variant=\"text\" width={100} />\r\n  </Box>\r\n  const title = <Suspense fallback={fallback}>\r\n    <Box>\r\n      <Typography><strong>{sheet?.name}</strong></Typography>\r\n      <Typography>{artifactSlotIcon(slotKey)} {sheet?.getSlotName?.(slotKey)}</Typography>\r\n    </Box>\r\n  </Suspense>\r\n\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 500,\r\n  },\r\n}));\r\nexport default BootstrapTooltip\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\r\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\r\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\r\n          <WeaponStat node={UIData.get(input.weapon.main)} />\r\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n        </Typography>\r\n\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <SqBadge color=\"secondary\">{StatIcon[node.info.key]} {val}</SqBadge>\r\n}\r\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { DataContext, dataContextObj, TeamData } from '../../Context/DataContext';\r\nimport { uiInput as input } from '../../Formula';\r\nimport KeyMap from '../../KeyMap';\r\nimport CharacterCardPico from './CharacterCardPico';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\r\nimport { range } from '../../Util/Util';\r\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\r\nimport CardLight from '../Card/CardLight';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport { NodeFieldDisplay } from '../FieldDisplay';\r\nimport SqBadge from '../SqBadge';\r\nimport { Stars } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\r\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey | \"\",\r\n  onClick?: (characterKey: CharacterKey) => void,\r\n  onClickHeader?: (characterKey: CharacterKey) => void,\r\n  onClickTeammate?: (characterKey: CharacterKey) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  characterChildren?: Displayable,\r\n  footer?: Displayable,\r\n  isTeammateCard?: boolean,\r\n}\r\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, onClickTeammate, footer, isTeammateCard }: CharacterCardProps) {\r\n  const { teamData: teamDataContext } = useContext(DataContext)\r\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\r\n  const character = useCharacter(characterKey)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const data = teamData?.[characterKey]?.target\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n\r\n  const characterContextObj: CharacterContextObj | undefined = useMemo(() => character && characterSheet && {\r\n    character, characterSheet, characterDispatch\r\n  }, [character, characterSheet, characterDispatch])\r\n  const dataContextObj: dataContextObj | undefined = useMemo(() => data && teamData && ({\r\n    data,\r\n    teamData,\r\n  }), [data, teamData])\r\n\r\n  if (!character || !dataContextObj || !characterContextObj) return null;\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CharacterContext.Provider value={characterContextObj}><DataContext.Provider value={dataContextObj}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\r\n          <IconButton sx={{ p: 0.5 }} onClick={_ => characterDispatch({ favorite: !character.favorite })}>\r\n            {character.favorite ? <Favorite /> : <FavoriteBorder />}\r\n          </IconButton>\r\n        </Box>\r\n        <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n          <Header onClick={!onClick ? onClickHeader : undefined} />\r\n          <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n            <Artifacts />\r\n            {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\r\n              <Grid item xs={1} height=\"100%\">\r\n                <WeaponCardPico weaponId={character.equippedWeapon} />\r\n              </Grid>\r\n              {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} onClick={!onClick ? onClickTeammate : undefined} index={i} /></Grid>)}\r\n            </Grid>}\r\n            {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\r\n            {!isTeammateCard && <Stats />}\r\n            {weaponChildren}\r\n            {artifactChildren}\r\n            {characterChildren}\r\n          </CardContent>\r\n        </ConditionalWrapper>\r\n        {footer}\r\n      </CardLight>\r\n    </DataContext.Provider></CharacterContext.Provider>\r\n  </Suspense>\r\n}\r\nfunction Header({ onClick }: { onClick?: (characterKey: CharacterKey) => void }) {\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterKey = data.get(input.charKey).value as CharacterKey\r\n  const characterEle = data.get(input.charEle).value as ElementKey\r\n  const characterLevel = data.get(input.lvl).value\r\n  const constellation = data.get(input.constellation).value\r\n  const ascension = data.get(input.asc).value\r\n  const autoBoost = data.get(input.bonus.auto).value\r\n  const skillBoost = data.get(input.bonus.skill).value\r\n  const burstBoost = data.get(input.bonus.burst).value\r\n\r\n  const tAuto = data.get(input.total.auto).value\r\n  const tSkill = data.get(input.total.skill).value\r\n  const tBurst = data.get(input.total.burst).value\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterSheet.thumbImg}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n            <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n            <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item>\r\n            <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\r\n          </Grid>\r\n        </Grid>\r\n        <Typography mt={1} ><Stars stars={characterSheet.rarity} colored /></Typography>\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\nfunction Artifacts() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifacts = useMemo(() =>\r\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\r\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\r\n\r\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\r\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\r\n      <Grid item key={key} xs={1}>\r\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\r\n      </Grid>\r\n    )}\r\n  </Grid>\r\n}\r\n\r\nfunction Stats() {\r\n  const { data } = useContext(DataContext)\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    {data.get(input.special).info.key && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\r\n      {StatIcon[data.get(input.special).info.key!]}\r\n      <Typography>{KeyMap.get(data.get(input.special).info.key!)}</Typography>\r\n    </Box>}\r\n  </Box>\r\n}\r\n","import { Box, CardActionArea, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback } from 'react';\r\nimport Assets from '../../Assets/Assets';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { CharacterKey } from '../../Types/consts';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function CharacterCardPico({ characterKey = \"\", index = -1, onClick }: { characterKey: CharacterKey | \"\", index?: number, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const teammateSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\r\n  const character = useCharacter(characterKey)\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler}>{children}</CardActionArea>,\r\n    [onClickHandler])\r\n  if (teammateSheet && character) {\r\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\r\n    </Suspense>\r\n\r\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n        <BootstrapTooltip placement=\"top\" title={title}>\r\n          <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\r\n            <Box\r\n              component=\"img\"\r\n              src={teammateSheet.thumbImgSide}\r\n              maxWidth=\"100%\"\r\n              maxHeight=\"100%\"\r\n              sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\r\n            />\r\n          </Box>\r\n        </BootstrapTooltip>\r\n        <Typography variant='subtitle1' sx={{ position: \"absolute\", top: 0, mt: -0.2, lineHeight: 1, pointerEvents: \"none\" }}>\r\n          <SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge>\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, pointerEvents: \"none\" }}>\r\n          <SqBadge color=\"secondary\" >C{character.constellation}</SqBadge>\r\n        </Typography>\r\n      </ConditionalWrapper>\r\n    </CardDark>\r\n  } else {\r\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\r\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\r\n    </CardDark>\r\n  }\r\n}\r\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, IconButton, Skeleton, TextField, Typography } from \"@mui/material\";\r\nimport { ChangeEvent, Suspense, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport { uiInput as input } from \"../../Formula\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport useForceUpdate from \"../../ReactHooks/useForceUpdate\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport useTeamData from \"../../ReactHooks/useTeamData\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allCharacterKeys, allElements, allWeaponTypeKeys, CharacterKey } from \"../../Types/consts\";\r\nimport { characterFilterConfigs, characterSortConfigs } from \"../../Util/CharacterSort\";\r\nimport { filterFunction, sortFunction } from \"../../Util/SortByFilters\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport CardLight from \"../Card/CardLight\";\r\nimport CloseButton from \"../CloseButton\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport ModalWrapper from \"../ModalWrapper\";\r\nimport SortByButton from \"../SortByButton\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { Stars } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ElementToggle from \"../ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\";\r\n\r\nconst defaultSortKeys = [\"level\", \"rarity\", \"name\"]\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const sortKeys = useMemo(() => newFirst ? [\"new\", ...defaultSortKeys] : defaultSortKeys, [newFirst])\r\n  const { database } = useContext(DatabaseContext)\r\n  const { t } = useTranslation([\"page_character\", \"charNames_gen\"])\r\n\r\n  const [sortBy, setsortBy] = useState(sortKeys[0])\r\n  const [ascending, setascending] = useState(false)\r\n  const [elementalFilter, setelementalFilter] = useState([...allElements])\r\n  const [weaponFilter, setweaponFilter] = useState([...allWeaponTypeKeys])\r\n\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n\r\n  const [favesDirty, setFavesDirty] = useForceUpdate()\r\n  useEffect(() => database.chars.followAny(setFavesDirty), [database, setFavesDirty])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\r\n  const filterConfigs = useMemo(() => characterSheets && favesDirty && characterFilterConfigs(database, characterSheets), [favesDirty, database, characterSheets])\r\n  const ownedCharacterKeyList = useMemo(() => characterSheets ? allCharacterKeys.filter(cKey => filter(database.chars.get(cKey), characterSheets[cKey])) : [], [database, characterSheets, filter])\r\n  const characterKeyList = useMemo(() => (characterSheets && sortConfigs && filterConfigs) ?\r\n    ownedCharacterKeyList\r\n      .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"yes\", name: deferredSearchTerm }, filterConfigs))\r\n      .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      .concat(\r\n        ownedCharacterKeyList\r\n          .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"no\", name: deferredSearchTerm }, filterConfigs))\r\n          .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      )\r\n    : [],\r\n    [characterSheets, elementalFilter, weaponFilter, sortBy, ascending, sortConfigs, filterConfigs, ownedCharacterKeyList, deferredSearchTerm])\r\n\r\n  if (!characterSheets) return null\r\n  return <ModalWrapper open={show} onClose={onHide} sx={{ \"& .MuiContainer-root\": { justifyContent: \"normal\" } }}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1} >\r\n          <Grid item>\r\n            <WeaponToggle sx={{ height: \"100%\" }} onChange={setweaponFilter} value={weaponFilter} size=\"small\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <ElementToggle sx={{ height: \"100%\" }} onChange={setelementalFilter} value={elementalFilter} size=\"small\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              autoFocus\r\n              value={searchTerm}\r\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n              label={t(\"characterName\")}\r\n              size=\"small\"\r\n              sx={{ height: \"100%\" }}\r\n              InputProps={{\r\n                sx: { height: \"100%\" }\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item flexGrow={1} />\r\n\r\n          <Grid item >\r\n            <SortByButton sx={{ height: \"100%\" }}\r\n              sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\r\n              ascending={ascending} onChangeAsc={setascending} />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={6} md={4} lg={3} >\r\n          <CharacterBtn key={characterKey} characterKey={characterKey} characterSheet={characterSheets[characterKey]} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n        </Grid>)}\r\n      </Grid></CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CharacterBtn({ onClick, characterKey, characterSheet }: { onClick: () => void, characterKey: CharacterKey, characterSheet: CharacterSheet }) {\r\n  const teamData = useTeamData(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const favorite = database.chars.get(characterKey)?.favorite\r\n  const { target: data } = teamData?.[characterKey] ?? {}\r\n  const rarity = characterSheet.rarity\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" height={130} />}><Box>\r\n    {favorite !== undefined && <Box display=\"flex\" position=\"absolute\" alignSelf=\"start\" zIndex={1}>\r\n      <IconButton sx={{ p: 0.5 }} onClick={() => characterDispatch({ favorite: !favorite })}>\r\n        {favorite ? <Favorite /> : <FavoriteBorder />}\r\n      </IconButton>\r\n    </Box>}\r\n    <CardActionArea onClick={onClick} >\r\n      <CardLight sx={{ display: \"flex\", alignItems: \"center\" }}  >\r\n        <Box component=\"img\" src={characterSheet.thumbImg} sx={{ width: 130, height: \"auto\" }} className={`grad-${rarity}star`} />\r\n        <Box sx={{ pl: 1 }}>\r\n          <Typography><strong>{characterSheet.name}</strong></Typography>\r\n          {data ? <>\r\n            <Typography variant=\"h6\"> {characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <ImgIcon src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} />{` `}{CharacterSheet.getLevelString(data.get(input.lvl).value, data.get(input.asc).value)}</Typography>\r\n            <Typography >\r\n              <SqBadge color=\"success\">{`C${data.get(input.constellation).value}`}</SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.auto).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.auto).value}</strong></SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.skill).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.skill).value}</strong></SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.burst).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.burst).value}</strong></SqBadge>\r\n            </Typography>\r\n          </> : <>\r\n            <Typography variant=\"h6\"><SqBadge color=\"primary\">NEW</SqBadge></Typography>\r\n          </>}\r\n          <small><Stars stars={rarity} colored /></small>\r\n        </Box>\r\n      </CardLight>\r\n    </CardActionArea >\r\n  </Box></Suspense>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TooltipProps } from \"@mui/material\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\n\r\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\r\n  className?: string,\r\n}\r\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\r\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\nexport default QuestionTooltip\r\n","import { Groups } from \"@mui/icons-material\";\r\nimport { Box, List, ListItem, Skeleton, styled, Typography } from \"@mui/material\";\r\nimport React, { Suspense, useContext, useMemo } from 'react';\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport { NodeDisplay } from \"../Formula/api\";\r\nimport KeyMap, { valueString } from \"../KeyMap\";\r\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/fieldDisplay\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport ColorText from \"./ColoredText\";\r\nimport QuestionTooltip from \"./QuestionTooltip\";\r\nimport StatIcon from \"./StatIcon\";\r\n\r\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\r\n  return <FieldDisplayList sx={{ m: 0 }}>\r\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\r\n  if (!canShow) return null\r\n  if (\"node\" in field) {\r\n    const node = data.get(field.node)\r\n    if (node.isEmpty) return null\r\n    if (oldData) {\r\n      const oldNode = oldData.get(field.node)\r\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\r\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\r\n    }\r\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\r\n  }\r\n  return <BasicFieldDisplay field={field} component={component} />\r\n}\r\n\r\nfunction BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\r\n  const { data } = useContext(DataContext)\r\n  const v = evalIfFunc(field.value, data)\r\n  const variant = evalIfFunc(field.variant, data)\r\n  const text = field.text && <span>{field.text}</span>\r\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\r\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport function NodeFieldDisplay({ node, oldValue, suffix, component, emphasize }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType, emphasize?: boolean }) {\r\n  if (node.isEmpty) return null\r\n\r\n  suffix = suffix && <span>{suffix}</span>\r\n  const icon = node.info.key && StatIcon[node.info.key]\r\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\r\n  const isTeamBuff = node.info.isTeamBuff\r\n  const fieldFormulaText = node.formula\r\n  let fieldVal = \"\" as Displayable\r\n  if (oldValue) {\r\n    const diff = node.value - oldValue\r\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\r\n  } else fieldVal = valueString(node.value, node.unit)\r\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip title={<Typography><Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={30} />}>{fieldFormulaText}</Suspense></Typography>} />\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1, boxShadow: emphasize ? \"0px 0px 0px 2px red inset\" : undefined }} component={component} >\r\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\r\n    <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n      <Typography noWrap>{fieldVal}</Typography>\r\n      {formulaTextOverlay}\r\n    </Box>\r\n  </Box>\r\n}\r\n\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));\r\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\r\n\r\ntype SolidColoredToggleButtonPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\r\n\r\n\r\nconst SolidColoredToggleButton = styled(ToggleButton, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\r\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"secondary\", selectedColor = \"success\" }) => ({\r\n  '&': {\r\n    backgroundColor: theme.palette[baseColor].main,\r\n    color: theme.palette[baseColor].contrastText,\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: theme.palette[selectedColor].main,\r\n    color: theme.palette[selectedColor].contrastText,\r\n  },\r\n  '&.Mui-selected:hover': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n  '&.Mui-disabled': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected.Mui-disabled': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n}));\r\n\r\nexport default SolidColoredToggleButton\r\n","import { Box, ToggleButtonGroup } from \"@mui/material\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\r\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport { uncoloredEleIcons } from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey[]) => void\r\n  value: ElementKey[]\r\n}\r\nconst elementHandler = handleMultiSelect([...allElements])\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  return <ToggleButtonGroup exclusive value={value} {...props}>\r\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} onClick={() => onChange(elementHandler(value, ele))}>\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{uncoloredEleIcons[ele]}</Box>\r\n    </SolidColoredToggleButton>)}\r\n  </ToggleButtonGroup>\r\n}\r\n","import { ToggleButton } from \"@mui/material\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey[]) => void\r\n  value: WeaponTypeKey[]\r\n}\r\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} onClick={() => onChange(weaponTypeHandler(value, wt))}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponNameTooltip from './WeaponNameTooltip';\r\n\r\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n\r\n  const tooltipAddl = <Box>\r\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\r\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\r\n  </Box>\r\n\r\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\r\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          maxWidth=\"100%\"\r\n          maxHeight=\"100%\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </WeaponNameTooltip>\r\n    </Box>\r\n    <Typography variant='subtitle1' sx={{ position: \"absolute\", mt: -0.2, lineHeight: 1, pointerEvents: \"none\" }}>\r\n      <SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge>\r\n    </Typography>\r\n    {weaponSheet.hasRefinement && <Typography variant='subtitle1' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, pointerEvents: \"none\" }}>\r\n      <SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge>\r\n    </Typography>}\r\n  </CardDark>\r\n}\r\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <Typography>{StatIcon[node.info.key]} {val}</Typography>\r\n}\r\n","import { Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\ntype Data = {\r\n  sheet: WeaponSheet,\r\n  addlText?: any,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\r\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\r\n    {addlText}\r\n  </Suspense>\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { createContext } from \"react\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { characterReducerAction } from \"../ReactHooks/useCharacterReducer\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nexport type CharacterContextObj = {\r\n  character: ICachedCharacter\r\n  characterSheet: CharacterSheet\r\n  characterDispatch: (action: characterReducerAction) => void\r\n}\r\n\r\n// If using this context without a Provider, then stuff will crash...\r\n// In theory, none of the components that uses this context should work without a provider...\r\nexport const CharacterContext = createContext({} as CharacterContextObj)\r\n","import { createContext } from \"react\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { UIData } from \"../Formula/uiData\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nexport type TeamData = Partial<Record<CharacterKey, {\r\n  target: UIData\r\n  buffs: Dict<CharacterKey, UIData>\r\n  character: ICachedCharacter\r\n  weapon: ICachedWeapon\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet,\r\n}>>\r\nexport type dataContextObj = {\r\n  data: UIData\r\n  oldData?: UIData\r\n  teamData: TeamData\r\n}\r\n\r\n// If using this context without a Provider, then stuff will crash...\r\n// In theory, none of the components that uses this context should work without a provider...\r\nexport const DataContext = createContext({} as dataContextObj)\r\n","import { ArtifactSlotKey } from \"pipeline\";\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport SqBadge from \"../../Components/SqBadge\";\r\nimport { Translate } from \"../../Components/Translate\";\r\nimport { input } from \"../../Formula\";\r\nimport { mergeData } from \"../../Formula/api\";\r\nimport { Data } from \"../../Formula/type\";\r\nimport { UIData } from \"../../Formula/uiData\";\r\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey } from \"../../Types/consts\";\r\nimport { DocumentSection, IDocumentHeader } from \"../../Types/sheet\";\r\nimport { st } from \"../SheetUtil\";\r\n\r\n// TODO: remove typecasting once all sheets populated\r\nconst artifactSheets = import(\".\").then(imp => imp.default)\r\n\r\nexport interface IArtifactSheet {\r\n  name: string, // only to stored the English name for OCR, otherwise, should come from localization pipeline\r\n  rarity: readonly ArtifactRarity[],\r\n  icons: Dict<SlotKey, string>,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  document: DocumentSection[],\r\n}\r\n\r\n\r\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\nconst allData = artifactSheets.then(as => mergeData(Object.values(as).map(s => s.data)))\r\nexport class ArtifactSheet {\r\n  readonly sheet: IArtifactSheet\r\n  readonly key: ArtifactSetKey\r\n  readonly data: Data\r\n  constructor(setKey: ArtifactSetKey, sheet: IArtifactSheet, data: Data) {\r\n    this.sheet = sheet\r\n    this.key = setKey\r\n    this.data = data\r\n  }\r\n\r\n  get name() { return tr(this.key, \"setName\") }\r\n  get defIconSrc() {\r\n    const slotKey = this.slots[0]\r\n    if (!this.slotIcons[slotKey]) return undefined\r\n    return this.slotIcons[slotKey]\r\n  }\r\n  get defIcon() { return <ImgIcon src={this.defIconSrc} sx={{ fontSize: \"1.5em\" }} /> }\r\n  /**\r\n   * @deprecated use src directly\r\n   */\r\n  get nameWithIcon() {\r\n    const slotKey = this.slots[0]\r\n    return <span><ImgIcon src={this.slotIcons[slotKey]} /> {tr(this.key, \"setName\")}</span>\r\n  }\r\n\r\n  //This is only for OCR, because we only scan in english right now.\r\n  get nameRaw(): string { return this.sheet.name }\r\n  get rarity(): readonly ArtifactRarity[] { return this.sheet.rarity }\r\n  get slots(): SlotKey[] {\r\n    switch (this.key) {\r\n      case \"PrayersForDestiny\":\r\n      case \"PrayersForIllumination\":\r\n      case \"PrayersForWisdom\":\r\n      case \"PrayersToSpringtime\": return [\"circlet\"]\r\n      default: return [...allSlotKeys]\r\n    }\r\n  }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.sheet.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.sheet.setEffects }\r\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\r\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\r\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\r\n  setEffectDocument = (setNum: SetNum) => this.sheet.setEffects[setNum]?.document\r\n\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set ? artifactSheets.then(a => a[set]) : undefined }\r\n  static get getAll() { return artifactSheets }\r\n  static get getAllData() { return allData }\r\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<ArtifactRarity, ArtifactSetKey[]> {\r\n    const grouped: Dict<ArtifactRarity, ArtifactSetKey[]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as ArtifactRarity\r\n      if (grouped[rarity]) grouped[rarity]!.push(key)\r\n      else grouped[rarity] = [key]\r\n    })\r\n    return grouped\r\n  }\r\n\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, data: UIData) {\r\n    const artifactSetEffect: Partial<Record<ArtifactSetKey, SetNum[]>> = {}\r\n    Object.entries(sheets).forEach(([setKey, sheet]) => {\r\n      const setNums = (Object.keys(sheet.setEffects).map(k => parseInt(k)) as SetNum[]).filter(sn => sheet.hasEnough(sn, data))\r\n      if (setNums.length) artifactSetEffect[setKey] = setNums\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n  hasEnough = (setNum: SetNum, data: UIData) => (data.get(input.artSet[this.key]).value ?? 0) >= setNum\r\n}\r\nexport const setHeaderTemplate = (setKey: ArtifactSetKey, icons: Partial<Record<ArtifactSlotKey, string>>): ((setNum: SetNum) => IDocumentHeader) => {\r\n  const tr = (strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\n  return (setNum: SetNum) => ({\r\n    title: tr(\"setName\"),\r\n    icon: <ImgIcon size={2} sx={{ m: -1 }} src={icons.flower ?? icons.circlet ?? \"\"} />,\r\n    action: <SqBadge color=\"success\">{st(`${setNum}set`)}</SqBadge>,\r\n    description: tr(`setEffects.${setNum}`)\r\n  })\r\n}\r\n","import StatIcon from \"../Components/StatIcon\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { tally } from \"../Formula\";\r\nimport { inferInfoMut } from \"../Formula/api\";\r\nimport { UIData } from \"../Formula/uiData\";\r\nimport { equal, greaterEq, percent } from \"../Formula/utils\";\r\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\r\nimport { DocumentSection } from \"../Types/sheet\";\r\nimport { objectKeyValueMap } from \"../Util/Util\";\r\nimport { condReadNode, sgt, st } from \"./SheetUtil\";\r\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\r\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\r\n\r\ntype IResonance = {\r\n  name: Displayable,\r\n  desc: Displayable,\r\n  icon: Displayable,\r\n  canShow: (data: UIData) => boolean\r\n  sections: DocumentSection[]\r\n}\r\n\r\n// Protective Canopy\r\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`, greaterEq(tally.ele, 4, percent(0.15))])\r\n\r\nconst protectiveCanopy: IResonance = {\r\n  name: tr(\"ProtectiveCanopy.name\"),\r\n  desc: tr(\"ProtectiveCanopy.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\r\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: Object.values(pcNodes).map(node => ({ node }))\r\n  }]\r\n}\r\n\r\n// Fervent Flames\r\nconst ffNode = greaterEq(tally.pyro, 2, percent(0.25))\r\nconst ferventFlames: IResonance = {\r\n  name: tr(\"FerventFlames.name\"),\r\n  desc: tr(\"FerventFlames.desc\"),\r\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.cryo\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: ffNode\r\n    }]\r\n  }]\r\n}\r\n\r\n// Soothing Waters\r\nconst swNode = greaterEq(tally.hydro, 2, percent(0.30))\r\nconst soothingWaters: IResonance = {\r\n  name: tr(\"SoothingWater.name\"),\r\n  desc: tr(\"SoothingWater.desc\"),\r\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.pyro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: swNode\r\n    }]\r\n  }]\r\n}\r\n\r\n//ShatteringIce\r\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\r\nconst condSI = condReadNode(condSIPath)\r\nconst siNode = greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15)))\r\nconst shatteringIce: IResonance = {\r\n  name: tr(\"ShatteringIce.name\"),\r\n  desc: tr(\"ShatteringIce.desc\"),\r\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.electro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSIPath,\r\n    value: condSI,\r\n    name: trm(\"ShatteringIce.cond\"),\r\n    header: {\r\n      title: tr(\"ShatteringIce.name\"),\r\n      icon: StatIcon.cryo,\r\n    },\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: siNode\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// High Voltage\r\nconst highVoltage: IResonance = {\r\n  name: tr(\"HighVoltage.name\"),\r\n  desc: tr(\"HighVoltage.desc\"),\r\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.hydro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}\r\n\r\n// Impetuous Winds\r\nconst iwNodeStam = greaterEq(tally.anemo, 2, percent(-0.15))\r\nconst iwNodeMove = greaterEq(tally.anemo, 2, percent(0.1))\r\nconst iwNodeCD = greaterEq(tally.anemo, 2, percent(-0.05))\r\nconst impetuousWinds: IResonance = {\r\n  name: tr(\"ImpetuousWinds.name\"),\r\n  desc: tr(\"ImpetuousWinds.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      node: iwNodeStam\r\n    }, {\r\n      node: iwNodeMove\r\n    }, {\r\n      node: iwNodeCD\r\n    }]\r\n  }]\r\n}\r\n\r\n// Enduring Rock\r\nconst condERPath = [\"resonance\", \"EnduringRock\"]\r\nconst condER = condReadNode(condERPath)\r\nconst erNodeshield_ = greaterEq(tally.geo, 2, percent(0.15))\r\nconst erNodeDMG_ = greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15)))\r\nconst erNodeRes_ = greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2)))\r\nconst enduringRock: IResonance = {\r\n  name: tr(\"EnduringRock.name\"),\r\n  desc: tr(\"EnduringRock.desc\"),\r\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"EnduringRock.desc\"),\r\n    fields: [{\r\n      node: erNodeshield_\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condERPath,\r\n    value: condER,\r\n    header: {\r\n      title: tr(\"EnduringRock.name\"),\r\n      icon: StatIcon.geo,\r\n    },\r\n    name: st(\"protectedByShield\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: erNodeDMG_\r\n        }, {\r\n          node: erNodeRes_\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 15,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\nexport const resonanceSheets: IResonance[] = [\r\n  protectiveCanopy,\r\n  ferventFlames,\r\n  soothingWaters,\r\n  shatteringIce,\r\n  highVoltage,\r\n  impetuousWinds,\r\n  enduringRock,\r\n]\r\n\r\nexport const resonanceData = inferInfoMut({\r\n  premod: {\r\n    ...pcNodes,\r\n    atk_: ffNode,\r\n    incHeal_: swNode,\r\n    staminaDec_: iwNodeStam,\r\n    moveSPD_: iwNodeMove,\r\n    cdRed_: iwNodeCD,\r\n    shield_: erNodeshield_,\r\n    all_dmg_: erNodeDMG_,\r\n    geo_enemyRes_: erNodeRes_,\r\n  },\r\n  total: {\r\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\r\n    critRate_: siNode\r\n  }\r\n})\r\n","import type { WeaponData } from 'pipeline';\r\nimport ImgIcon from '../../Components/Image/ImgIcon';\r\nimport SqBadge from '../../Components/SqBadge';\r\nimport { Translate } from '../../Components/Translate';\r\nimport { input } from '../../Formula';\r\nimport { Data } from '../../Formula/type';\r\nimport { Rarity, WeaponKey, WeaponTypeKey } from '../../Types/consts';\r\nimport { DocumentSection, IDocumentHeader } from '../../Types/sheet';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, lowRarityMilestoneLevels, milestoneLevels } from '../LevelData';\r\n\r\nconst weaponSheets = import('.').then(imp => imp.default)\r\n\r\nexport interface IWeaponSheet {\r\n  icon: string,\r\n  iconAwaken: string,\r\n  document: DocumentSection[],\r\n}\r\n\r\nexport default class WeaponSheet {\r\n  readonly key: WeaponKey;\r\n  readonly sheet: IWeaponSheet;\r\n  readonly data: Data;\r\n  readonly rarity: Rarity;\r\n  readonly weaponType: WeaponTypeKey;\r\n  constructor(key: WeaponKey, weaponSheet: IWeaponSheet, weaponData: WeaponData, data: Data) {\r\n    this.rarity = weaponData.rarity\r\n    this.weaponType = weaponData.weaponType\r\n    this.key = key\r\n    this.sheet = weaponSheet\r\n    this.data = data\r\n  }\r\n  static get = (weaponKey: WeaponKey | \"\"): Promise<WeaponSheet> | undefined => weaponKey ? weaponSheets.then(w => w[weaponKey]) : undefined\r\n  static get getAll() { return weaponSheets }\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([_, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICachedWeapon): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  get hasRefinement() { return this.rarity > 2 }\r\n  get passiveName() { return this.hasRefinement ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (refineIndex: number) => this.hasRefinement ? this.tr(`passiveDescription.${refineIndex}`) : \"\"\r\n  get document() { return this.sheet.document }\r\n  get milestoneLevels(): Array<[number, number]> {\r\n    if (this.hasRefinement) return milestoneLevels as any\r\n    else return lowRarityMilestoneLevels as any\r\n  }\r\n  ambiguousLevel(level: number) {\r\n    if (this.hasRefinement) return ambiguousLevel(level)\r\n    else return ambiguousLevelLow(level)\r\n  }\r\n  getImg(ascsion: number) {\r\n    return ascsion < 2 ? this.sheet.icon : this.sheet.iconAwaken\r\n  }\r\n}\r\nexport const headerTemplate = (weaponKey: WeaponKey, img: string, imgAwaken: string, action?: Displayable): IDocumentHeader => {\r\n  const tr = (strKey: string) => <Translate ns={`weapon_${weaponKey}_gen`} key18={strKey} />\r\n  return {\r\n    title: tr(`passiveName`),\r\n    icon: data => <ImgIcon size={2} sx={{ m: -1 }} src={data.get(input.weapon.asc).value < 2 ? img : imgAwaken} />,\r\n    action: action && <SqBadge color=\"success\">{action}</SqBadge>,\r\n    description: data => tr(`passiveDescription.${data.get(input.weapon.refineIndex).value}`)\r\n  }\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { useNavigate, useMatch } from \"react-router\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { allSlotKeys, CharacterKey } from \"../Types/consts\";\r\nimport { defaultInitialWeapon } from \"../Util/WeaponUtil\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { objectKeyMap } from \"../Util/Util\";\r\n\r\n/**\r\n * Basically a history hook to go to the dedicated character page. Will create the character if it doesn't exist.\r\n * @returns\r\n */\r\nexport default function useCharSelectionCallback() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const navigate = useNavigate()\r\n  // Used to maintain the previous tab, if there is one\r\n  let { params: { tab = \"\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"\" } }\r\n  const cb = useCallback(\r\n    async (characterKey: CharacterKey) => {\r\n      const character = database.chars.get(characterKey)\r\n      let navTab = tab\r\n      // Create a new character + weapon, with linking if char isnt in db.\r\n      if (!character) {\r\n        const newChar = initialCharacter(characterKey)\r\n        database.chars.set(characterKey, newChar)\r\n        const characterSheet = await CharacterSheet.get(characterKey)\r\n        if (!characterSheet) return\r\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\r\n        const weaponId = database.weapons.new(weapon)\r\n        database.weapons.set(weaponId, { location: characterKey })\r\n        // If we are navigating to a new character,\r\n        // redirect to Overview, regardless of previous tab.\r\n        // Trying to enforce a certain UI flow when building new characters\r\n        navTab = \"\"\r\n      }\r\n      navigate(`/characters/${characterKey}/${navTab}`)\r\n    },\r\n    [navigate, database, tab],\r\n  )\r\n  return cb\r\n}\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key,\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: \"\",\r\n    equippedArtifacts: objectKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    conditional: {},\r\n    bonusStats: {},\r\n    enemyOverride: {},\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n    team: [\"\", \"\", \"\"],\r\n    compareData: false,\r\n    favorite: false,\r\n  }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database.chars.get(characterKey))\r\n  useEffect(() => updateCharacter(database.chars.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, updateCharacter) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { deepClone } from \"../Util/Util\";\r\n\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerenemyOverrideAction = {\r\n  type: \"enemyOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\nexport type characterReducerAction = characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"enemyOverride\": {\r\n        const character = database.chars.get(characterKey)!\r\n        const enemyOverride = character.enemyOverride\r\n        const { statKey, value } = action\r\n        if (enemyOverride[statKey] === value) break\r\n        database.chars.set(characterKey, { ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\r\n        break\r\n      }\r\n      case \"editStats\": {\r\n        const character = database.chars.get(characterKey)!\r\n        const { statKey, value } = action\r\n\r\n        const bonusStats = deepClone(character.bonusStats)\r\n\r\n        if (bonusStats[statKey] === value) break\r\n        if (!value) delete bonusStats[statKey]\r\n        else bonusStats[statKey] = value\r\n\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const character = database.chars.get(characterKey)!\r\n        const { statKey } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const character = database.chars.get(characterKey)!\r\n        const { team: team_ } = character\r\n        const team = [...team_] as ICachedCharacter[\"team\"]\r\n\r\n        const { index, charKey: newCharKey } = action\r\n        const oldCharKey = team[index]\r\n        team[index] = newCharKey\r\n\r\n        // move the old char to \"inventory\"\r\n        if (oldCharKey) {\r\n          const oldChar = database.chars.get(oldCharKey)\r\n          if (oldChar) database.chars.set(oldCharKey, { ...oldChar, team: [\"\", \"\", \"\"] })\r\n        }\r\n\r\n        // unequip new char from its old teammates\r\n        if (newCharKey) {\r\n          const newChar = database.chars.get(newCharKey)\r\n          if (newChar) {\r\n            newChar.team.forEach(t => {\r\n              if (!t) return\r\n              const tChar = database.chars.get(t)\r\n              tChar && database.chars.set(t, { ...tChar, team: tChar.team.map(c => c === newCharKey ? \"\" : c) as ICachedCharacter[\"team\"] })\r\n            })\r\n          }\r\n        }\r\n\r\n        // equip new char to new teammates\r\n        team.forEach((t, tind) => {\r\n          if (!t) return\r\n          const newChar = database.chars.get(t)\r\n          if (newChar) database.chars.set(t, { ...newChar, team: [characterKey, ...team].filter((_, i) => i !== tind + 1) as ICachedCharacter[\"team\"] })\r\n        })\r\n\r\n        // update src character\r\n        database.chars.set(characterKey, { ...character, team })\r\n      }\r\n    } else\r\n      database.chars.set(characterKey, { ...database.chars.get(characterKey)!, ...action })\r\n  }, [characterKey, database])\r\n\r\n}\r\n","import { useCallback, useContext, useDeferredValue, useEffect } from \"react\";\r\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { resonanceData } from \"../Data/Resonance\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\r\nimport { TeamData } from \"../Context/DataContext\";\r\nimport { common } from \"../Formula\";\r\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, uiDataForTeam } from \"../Formula/api\";\r\nimport { Data } from \"../Formula/type\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectMap } from \"../Util/Util\";\r\nimport useForceUpdate from \"./useForceUpdate\";\r\nimport usePromise from \"./usePromise\";\r\n\r\ntype TeamDataBundle = {\r\n  teamData: Dict<CharacterKey, Data[]>\r\n  teamBundle: Dict<CharacterKey, CharBundle>\r\n}\r\n\r\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[], overrideWeapon?: ICachedWeapon): TeamData | undefined {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n  const dbDirtyDeferred = useDeferredValue(dbDirty)\r\n  const data = usePromise(() => getTeamDataCalc(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon), [dbDirtyDeferred, characterKey, database, mainStatAssumptionLevel, overrideArt, overrideWeapon])\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.arts.followAny(setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  const team = Object.keys(data ?? {})\r\n  const [t1, t2, t3, t4] = team\r\n\r\n  const setTeamDataDirty = useCallback(() => {\r\n    team.map(c => database.invalidateTeamData(c))\r\n    setDbDirty()\r\n  }, [database, team, setDbDirty])\r\n\r\n\r\n  useEffect(() =>\r\n    t1 ? database.chars.follow(t1, setTeamDataDirty) : undefined,\r\n    [t1, setTeamDataDirty, database])\r\n  useEffect(() =>\r\n    t2 ? database.chars.follow(t2, setTeamDataDirty) : undefined,\r\n    [t2, setTeamDataDirty, database])\r\n  useEffect(() =>\r\n    t3 ? database.chars.follow(t3, setTeamDataDirty) : undefined,\r\n    [t3, setTeamDataDirty, database])\r\n  useEffect(() =>\r\n    t4 ? database.chars.follow(t4, setTeamDataDirty) : undefined,\r\n    [t4, setTeamDataDirty, database])\r\n\r\n  return data\r\n}\r\n\r\nasync function getTeamDataCalc(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[], overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamData | undefined> {\r\n  if (!characterKey) return\r\n\r\n  // Retrive from cache\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon) {\r\n    const cache = database._getTeamData(characterKey)\r\n    if (cache) return cache\r\n  }\r\n  const { teamData, teamBundle } = (await getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon)) ?? {}\r\n  if (!teamData || !teamBundle) return\r\n\r\n  const calcData = uiDataForTeam(teamData, characterKey as CharacterKey)\r\n\r\n  const data = objectMap(calcData, (obj, ck) => {\r\n    const { data: _, ...rest } = teamBundle[ck]!\r\n    return { ...obj, ...rest }\r\n  })\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon)\r\n    database.cacheTeamData(characterKey, data)\r\n  return data\r\n}\r\n\r\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[], overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamDataBundle | undefined> {\r\n  if (!characterKey) return\r\n  const char1DataBundle = await getCharDataBundle(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon)\r\n  if (!char1DataBundle) return\r\n  const teamBundle = { [characterKey]: char1DataBundle }\r\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\r\n\r\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\r\n    if (!ck) return\r\n    const databundle = await getCharDataBundle(database, ck)\r\n    if (!databundle) return\r\n    teamBundle[ck] = databundle\r\n    teamData[ck] = databundle.data\r\n  }))\r\n\r\n  return { teamData, teamBundle }\r\n}\r\ntype CharBundle = {\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  data: Data[]\r\n}\r\nasync function getCharDataBundle(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[], overrideWeapon?: ICachedWeapon)\r\n  : Promise<CharBundle | undefined> {\r\n  if (!characterKey) return\r\n  const character = database.chars.get(characterKey)\r\n  if (!character) return\r\n  const weapon = overrideWeapon ?? database.weapons.get(character.equippedWeapon)\r\n  if (!weapon) return\r\n  const [characterSheet, weaponSheet, artifactSheetsData] = await Promise.all([\r\n    CharacterSheet.get(characterKey),\r\n    WeaponSheet.get(weapon.key),\r\n    ArtifactSheet.getAllData\r\n  ])\r\n  if (!characterSheet || !weaponSheet || !artifactSheetsData) return\r\n  const artifacts = (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database.arts.get(a))).filter(a => a) as ICachedArtifact[]\r\n  const data = [\r\n    ...artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)),\r\n    dataObjForCharacter(character),\r\n    characterSheet.getData(character.elementKey),\r\n    dataObjForWeapon(weapon),\r\n    weaponSheet.data,\r\n    artifactSheetsData,\r\n    common, // NEED TO PUT THIS AT THE END\r\n    resonanceData,\r\n  ]\r\n  return { character, weapon, characterSheet, weaponSheet, data }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useWeapon(weaponID: string | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\r\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\r\n  useEffect(() =>\r\n    weaponID ? database.weapons.follow(weaponID, setWeapon) : undefined,\r\n    [weaponID, setWeapon, database])\r\n  return weapon\r\n}\r\n","import { toggleArr } from \"./Util\"\r\n\r\nexport function handleMultiSelect<T>(allKeys: T[]) {\r\n  return (arr: T[], v: T): T[] => {\r\n    const len = arr.length\r\n    if (len === allKeys.length) return [v]\r\n    if (len === 1 && arr[0] === v) return [...allKeys]\r\n    return [...new Set(toggleArr(arr, v))]\r\n  }\r\n}\r\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","mainStatVal","levelVariant","Math","floor","max","element","allElementsWithPhy","ele","includes","color","sheet","className","slotIcons","maxWidth","maxHeight","m","lineHeight","pointerEvents","variant","bottom","right","placement","title","cacheValueString","KeyMap","disableInteractive","p","uncoloredEleIcons","StatIcon","ArtifactSetSlotTooltip","children","fallback","Suspense","name","artifactSlotIcon","getSlotName","BootstrapTooltip","styled","props","arrow","classes","popper","theme","tooltipClasses","palette","common","black","backgroundColor","WeaponFullCard","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","getImg","ascension","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","val","valueString","value","unit","undefined","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","isTeammateCard","teamDataContext","useContext","DataContext","teamData","useTeamData","character","useCharacter","characterSheet","CharacterSheet","characterDispatch","useCharacterReducer","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterContextObj","dataContextObj","Skeleton","minHeight","CharacterContext","CardLight","zIndex","IconButton","_","favorite","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","Header","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","map","i","CharacterCardPico","team","index","Stats","characterEle","characterLevel","constellation","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","py","pr","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","stars","colored","database","DatabaseContext","artifacts","allSlotKeys","k","arts","id","direction","Object","values","getDisplay","basic","n","alignItems","teammateSheet","elementKey","thumbImgSide","transformOrigin","justifyContent","defaultSortKeys","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","sortKeys","t","useTranslation","useState","sortBy","setsortBy","ascending","setascending","allElements","elementalFilter","setelementalFilter","allWeaponTypeKeys","weaponFilter","setweaponFilter","characterSheets","useForceUpdate","favesDirty","setFavesDirty","useEffect","chars","followAny","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","sortConfigs","characterSortConfigs","filterConfigs","characterFilterConfigs","ownedCharacterKeyList","allCharacterKeys","cKey","characterKeyList","filterFunction","weaponType","sort","sortFunction","concat","open","onClose","onChange","autoFocus","e","InputProps","onChangeAsc","md","CharacterBtn","pl","weaponTypeKey","cursor","icon","faQuestionCircle","FieldsDisplay","fields","FieldDisplayList","field","FieldDisplay","ListItem","oldData","canShow","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","v","evalIfFunc","text","toFixed","fixed","emphasize","fieldText","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","formulaTextOverlay","boxShadow","Groups","noWrap","List","borderRadius","shape","overflow","margin","contentDark","main","contentDarker","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","contrastText","dark","elementHandler","handleMultiSelect","ElementToggle","ToggleButtonGroup","exclusive","fontSize","weaponTypeHandler","WeaponToggle","wt","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","createContext","artifactSheets","then","imp","default","tr","strKey","ns","key18","allData","as","mergeData","s","getSlotDesc","setEffectDesc","setNum","setEffectDocument","setEffects","document","hasEnough","this","slots","defIconSrc","icons","set","a","sheets","grouped","entries","forEach","push","artifactSetEffect","setNums","keys","parseInt","sn","length","setHeaderTemplate","flower","circlet","action","st","description","pcNodes","objectKeyValueMap","greaterEq","tally","percent","protectiveCanopy","desc","sections","teamBuff","ffNode","ferventFlames","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","resonanceSheets","sgt","resonanceData","inferInfoMut","premod","atk_","incHeal_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","total","critRate_","weaponSheets","weaponData","passiveDescription","refineIndex","milestoneLevels","lowRarityMilestoneLevels","ambiguousLevel","ambiguousLevelLow","ascsion","iconAwaken","weaponKey","w","getWeaponsOfType","fromEntries","getLevelString","headerTemplate","img","imgAwaken","useCharSelectionCallback","navigate","useNavigate","useMatch","end","params","tab","cb","navTab","newChar","hitMode","reactionMode","equippedArtifacts","objectKeyMap","conditional","bonusStats","enemyOverride","talent","auto","skill","burst","infusionAura","compareData","defaultInitialWeapon","weapons","new","location","updateCharacter","follow","type","statKey","deepClone","team_","newCharKey","charKey","oldCharKey","oldChar","tChar","c","tind","mainStatAssumptionLevel","overrideArt","overrideWeapon","dbDirty","setDbDirty","dbDirtyDeferred","getTeamDataCalc","t1","t2","t3","t4","setTeamDataDirty","invalidateTeamData","cache","_getTeamData","getTeamData","teamBundle","calcData","uiDataForTeam","objectMap","obj","ck","rest","cacheTeamData","getCharDataBundle","char1DataBundle","Promise","all","databundle","artifactSheetsData","dataObjForArtifact","dataObjForCharacter","getData","weaponID","setWeapon","allKeys","arr","len","Set","toggleArr"],"sourceRoot":""}