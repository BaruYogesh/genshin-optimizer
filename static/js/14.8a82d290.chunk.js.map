{"version":3,"sources":["Character/Character.ts","Weapon/Weapon.ts","Assets/Element_Anemo.png","Assets/Assets.ts","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Data/WeaponData.ts","StatDependency.ts","Data/CharacterData.ts","Components/InfoComponent.tsx","Character/CharacterCard.tsx","Character/CharacterDisplay.tsx"],"names":["Character","this","Error","characterKey","character","CharacterDatabase","get","Object","values","equippedArtifacts","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getElementalName","elementalKey","defVal","ElementalData","name","getlevelKeys","keys","LevelsData","getlevelTemplateName","levelKey","getLevelString","characterSheet","weaponSheet","levelOverride","getStatValueWithOverride","getLevel","getIndexFromlevelkey","indexOf","level","getAscension","asend","getTalentFieldValue","field","key","stats","evalIfFunc","hasOverride","statKey","baseStatOverrides","getBaseStatValue","characetSheet","specializeStat","value","Weapon","getWeaponMainStatValWithOverride","weapon","includes","characterStatBase","baseStat","equipArtifacts","artIds","artIdsOnCharacter","allSlotKeys","slotKey","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifactOnSlot","equipArtifactBuild","calculateBuild","artifactSheets","artifacts","mainStatAssumptionLevel","fromEntries","map","art","i","entries","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","mainStatKey","mainStatValue","numStars","Math","max","min","substats","substat","stat","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","length","condStats","resolve","val","dependencies","GetDependencies","modifiers","PreprocessFormulas","formula","mergeStats","modifier","mkey","multiplier","undefined","hitMode","infusionAura","reactionMode","talentLevelKeys","constellation","ascension","statKeys","characterEle","elementKey","weaponType","weaponTypeKey","tlvl","allElements","eleKey","overrides","hasOwnProperty","specializedStatVal","specialStatKey","getTalentStatsAll","s","weaponSubKey","getWeaponSubstatKey","getWeaponSubstatValWithOverride","weaponCond","otherCond","canShow","getLevelName","LevelNameData","getLevelIndex","WeaponLevelKeys","getWeaponMainStatVal","baseStats","main","getWeaponSubstatVal","sub","substatKey","getWeaponTypeName","WeaponTypeData","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","GetFormulaDependency","dependency","Set","Proxy","target","prop","receiver","add","formulaKeyDependency","freeze","Formulas","StatData","InsertDependencies","has","k","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","InfoComponent","pageKey","text","modalTitle","children","useState","loadFromLocalStorage","showInfoModal","setshowInfoModal","Array","isArray","getRandomElementFromArray","displayText","closeModal","infoShown","saveToLocalStorage","show","onHide","size","variant","contentClassName","bg","Header","Title","xs","onClick","icon","faTimes","Body","fallback","className","animation","Footer","faQuestionCircle","CharacterCard","onEdit","onDelete","cardClassName","header","footer","useForceUpdate","forceUpdate","useEffect","registerCharListener","unregisterCharListener","usePromise","getAll","CharacterSheet","WeaponSheet","useMemo","weaponName","weaponMainVal","weaponSubVal","weaponLevelName","weaponPassiveName","passiveName","faEdit","faTrashAlt","src","thumbImg","star","thumbnail","stars","colored","refineIndex","Stat","getStatName","getStatUnit","setEffects","arr","artifactSetName","highestNum","unit","statVal","StatIconEle","toFixed","fixedUnit","as","Link","to","pathname","InfoDisplay","React","lazy","CharacterDisplayCard","toggle","rarity","filterReducer","oldFilter","newFilter","CharacterDisplay","props","charIdToEdit","setcharIdToEdit","sortBy","setsortBy","useReducer","elementalFilter","elementalFilterDispatch","weaponFilter","weaponFilterDispatch","newCharacter","setnewCharacter","scrollRef","useRef","ReactGA","pageview","saved","registerListener","unregisterListener","allCharacterSheets","sortingFunc","ck","save","deleteCharacter","useCallback","a","chararcterSheet","window","confirm","editCharacter","setTimeout","current","scrollIntoView","behavior","cancelEditCharacter","charKeyList","getCharacterKeyList","filter","cKey","sort","b","diff","showEditor","Boolean","ref","Suspense","newBuild","tabName","editable","setCharacterKey","onClose","CharDisplayFooter","type","onChange","lg","md","faPlus","charKey","faLink"],"mappings":"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","file":"static/js/14.8a82d290.chunk.js","sourcesContent":["import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { ICharacter } from \"../Types/character\";\r\nimport { allElements, allSlotKeys, CharacterKey, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = (): string[] => Object.keys(LevelsData)\r\n  static getlevelTemplateName = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getLevelString = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet) => {\r\n    const levelOverride = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n    return Character.getLevel(character.levelKey) === levelOverride ? Character.getlevelTemplateName(character.levelKey) : `Lvl. ${levelOverride}`\r\n  }\r\n  static getIndexFromlevelkey = (levelKey) => Character.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return evalIfFunc(field?.[key], stats)\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getBaseStatValue = (character: ICharacter, characetSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    const { levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return characetSheet.specializeStat.key\r\n    if (statKey === \"specializedStatVal\") return characetSheet.specializeStat.value[Character.getIndexFromlevelkey(levelKey)]\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon, weaponSheet)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return Character.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    if (statKey in characetSheet.baseStat) return characetSheet.baseStat[statKey][Character.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n  static getStatValueWithOverride = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    if (Character.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey: CharacterKey | \"\", artIds: StrictDict<SlotKey, string>) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    const artIdsOnCharacter = character.equippedArtifacts;\r\n\r\n    //swap, by slot\r\n    allSlotKeys.forEach(slotKey => {\r\n      const artNotOnChar = ArtifactDatabase.get(artIds[slotKey])\r\n      if (artNotOnChar?.location === characterKey) return; //it is already equipped\r\n      const artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      const notCharLoc = (artNotOnChar?.location ?? \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifactOnSlot(notCharLoc, slotKey, artOnChar?.id ?? \"\")\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char\r\n    CharacterDatabase.equipArtifactBuild(characterKey, artIds);\r\n  }\r\n  static remove(characterKey) {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return\r\n    Object.values(character.equippedArtifacts).forEach(artid =>\r\n      ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets, mainStatAssumptionLevel = 0) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.createInitialStats(character, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats, artifacts, artifactSheets) => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, initialStats, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach((art: any) => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(stats.mainStatAssumptionLevel, art.numStars * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.value)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return stats\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of (Object.entries(val) as any)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of (Object.entries(modifier) as any))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n\r\n  static createInitialStats = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, infusionAura, reactionMode, talentLevelKeys, constellation, equippedArtifacts, conditionalValues = {}, weapon = { key: \"\" } } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, Character.getStatValueWithOverride(character, characterSheet, weaponSheet, key)]))\r\n    initialStats.characterEle = characterSheet.elementKey;\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = weapon\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n\r\n\r\n    //enemy stuff\r\n    [\"physical\", ...allElements].forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]: any) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n    Character.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats).forEach(s => Character.mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n    if (weaponSubKey) Character.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubstatValWithOverride(character?.weapon, weaponSheet) })\r\n    Character.mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      if (!Conditional.canShow(conditional, initialStats)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      Character.mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n}","import { LevelNameData, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData';\r\nimport WeaponSheet from './WeaponSheet';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey): number => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.main[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.sub?.[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatKey = (weaponSheet: WeaponSheet, defVal = \"\") => (weaponSheet.baseStats?.substatKey || defVal)\r\n\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = (): string[] => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubstatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","const WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20/40\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40/50\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50/60\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60/70\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70/80\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80/90\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0] as any] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","// import characters from\r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20/40\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40/50\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50/60\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60/70\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70/80\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80/90\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterSpecializedStatKey\r\n}","import { faQuestionCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Suspense, useState } from \"react\"\r\nimport { Button, Card, Col, Modal, Row, Spinner } from \"react-bootstrap\"\r\nimport { getRandomElementFromArray, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\"\r\n\r\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }: { pageKey: string, text: Displayable | Displayable[], modalTitle: Displayable, children: JSX.Element }) {\r\n  const [showInfoModal, setshowInfoModal] = useState(loadFromLocalStorage(\"infoShown\")?.[pageKey] ?? true)\r\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\r\n  const closeModal = () => {\r\n    const infoShown = loadFromLocalStorage(\"infoShown\") ?? {}\r\n    infoShown[pageKey] = false\r\n    saveToLocalStorage(\"infoShown\", infoShown)\r\n    setshowInfoModal(false)\r\n  }\r\n  return <>\r\n    <Modal show={showInfoModal} onHide={() => closeModal()} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <Card.Title>{modalTitle}</Card.Title>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button variant=\"danger\" onClick={() => closeModal()} >\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Suspense fallback={<h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>}>\r\n            {children}\r\n          </Suspense>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={() => closeModal()}>\r\n            <span>Close</span>\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"pl-2 py-0 pr-0\">\r\n        <Row>\r\n          <Col><small>{displayText}</small></Col>\r\n          <Col xs=\"auto\">\r\n            <Button size=\"sm\" variant=\"info\" className=\"m-0 py-1\" onClick={() => setshowInfoModal(true)}><FontAwesomeIcon icon={faQuestionCircle} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport Stat from '../Stat';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterSheet from './CharacterSheet';\r\ntype CharacterCardProps = { characterKey: CharacterKey | \"\", onEdit?: (any) => void, onDelete?: (any) => void, cardClassName: string, header?: JSX.Element, bg?: string, footer?: boolean }\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer = false }: CharacterCardProps) {\r\n  const [, forceUpdate] = useForceUpdate()\r\n  useEffect(() => {\r\n    characterKey && CharacterDatabase.registerCharListener(characterKey, forceUpdate)\r\n    return () => { characterKey && CharacterDatabase.unregisterCharListener(characterKey, forceUpdate) }\r\n  }, [characterKey, forceUpdate])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const character = CharacterDatabase.get(characterKey)\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheet = usePromise(character && WeaponSheet.get(character.weapon.key))\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets])\r\n  if (!character || !characterSheet || !weaponSheet || !stats) return null;\r\n\r\n  const { weapon, constellation } = character\r\n  const name = characterSheet.name\r\n  const elementKey = characterSheet.elementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponName = weaponSheet?.name\r\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon, weaponSheet)\r\n  const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponSubVal = Weapon.getWeaponSubstatValWithOverride(weapon, weaponSheet)\r\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {header ? header : <h5><b>{name}</b></h5>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(characterKey)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete(characterKey)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onEdit?.(characterKey)} className={onEdit ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={characterSheet.thumbImg} className={`thumb-big grad-${characterSheet.star}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h3 className=\"mb-0\">{Character.getLevelString(character, characterSheet, weaponSheet)} {`C${constellation}`}</h3>\r\n          <h5 className=\"mb-0\"><Stars stars={characterSheet.star} colored /></h5>\r\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = artifactSheets?.[key].name ?? \"\"\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = stats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      } as any}>Generate Builds</Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faLink, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, useCallback, useEffect, useReducer, useRef, useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Col, Container, Image, Row, Spinner, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { Link } from 'react-router-dom';\r\nimport Assets from '../Assets/Assets';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport InfoComponent from '../Components/InfoComponent';\r\nimport { allElements, CharacterKey } from '../Types/consts';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterSheet from './CharacterSheet';\r\nconst InfoDisplay = React.lazy(() => import('./InfoDisplay'));\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCard = lazy(() => import('./CharacterDisplayCard'))\r\nconst toggle = {\r\n  level: \"Level\",\r\n  rarity: \"Rarity\",\r\n  name: \"Name\"\r\n}\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\nexport default function CharacterDisplay(props) {\r\n  const [charIdToEdit, setcharIdToEdit] = useState(\"\")\r\n  const [sortBy, setsortBy] = useState(() => Object.keys(toggle)[0])\r\n  const [elementalFilter, elementalFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [newCharacter, setnewCharacter] = useState(false)\r\n  const [, forceUpdate] = useForceUpdate()\r\n  const scrollRef = useRef(null as any)\r\n  useEffect(() => {\r\n    ReactGA.pageview('/character')\r\n    const saved = loadFromLocalStorage(\"CharacterDisplay.state\")\r\n    if (saved) {\r\n      const { charIdToEdit, sortBy, elementalFilter, weaponFilter } = saved\r\n      setcharIdToEdit(charIdToEdit)\r\n      setsortBy(sortBy)\r\n      allElements.includes(elementalFilter) && elementalFilterDispatch(elementalFilter)\r\n      Weapon.getWeaponTypeKeys().includes(weaponFilter) && weaponFilterDispatch(weaponFilter)\r\n    }\r\n    CharacterDatabase.registerListener(forceUpdate)\r\n    return () => CharacterDatabase.unregisterListener(forceUpdate)\r\n  }, [forceUpdate])\r\n  const allCharacterSheets: StrictDict<CharacterKey, CharacterSheet> | {} = usePromise(CharacterSheet.getAll()) ?? {}\r\n  const sortingFunc = {\r\n    level: (ck) => Character.getLevel(CharacterDatabase.get(ck)?.levelKey),\r\n    rarity: (ck) => allCharacterSheets[ck]?.star\r\n  }\r\n  useEffect(() => {\r\n    const save = { charIdToEdit, sortBy, elementalFilter, weaponFilter }\r\n    saveToLocalStorage(\"CharacterDisplay.state\", save)\r\n  }, [charIdToEdit, sortBy, elementalFilter, weaponFilter])\r\n  const deleteCharacter = useCallback(async id => {\r\n    const chararcterSheet = await CharacterSheet.get(id)\r\n    if (!window.confirm(`Are you sure you want to remove ${chararcterSheet?.name}?`)) return\r\n    Character.remove(id)\r\n    if (charIdToEdit === id)\r\n      setcharIdToEdit(\"\")\r\n  }, [charIdToEdit, setcharIdToEdit])\r\n\r\n  const editCharacter = useCallback(id => {\r\n    setcharIdToEdit(id)\r\n    setTimeout(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, 500);\r\n  }, [setcharIdToEdit, scrollRef])\r\n\r\n  const cancelEditCharacter = useCallback(() => {\r\n    setcharIdToEdit(\"\")\r\n    setnewCharacter(false)\r\n  }, [setcharIdToEdit])\r\n\r\n  const charKeyList = CharacterDatabase.getCharacterKeyList().filter(cKey => {\r\n    if (elementalFilter && elementalFilter !== allCharacterSheets[cKey]?.elementKey) return false\r\n    if (weaponFilter && weaponFilter !== allCharacterSheets[cKey]?.weaponTypeKey) return false\r\n    return true\r\n  }).sort((a, b) => {\r\n    if (sortBy === \"name\") {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      // names must be equal\r\n      return 0;\r\n    }\r\n    if (sortBy === \"level\") {\r\n      const diff = sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n    } else {\r\n      const diff = sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n    }\r\n  })\r\n  const showEditor = Boolean(charIdToEdit || newCharacter)\r\n  return <Container ref={scrollRef} className=\"mt-2\">\r\n    <InfoComponent\r\n      pageKey=\"characterPage\"\r\n      modalTitle=\"Character Management Page Guide\"\r\n      text={[\"Every character will be tested with in-game numbers for maximum accuracy.\",\r\n        \"You can see the details of the calculations of every number.\",\r\n        \"You need to manually enable auto infusion for characters like Choungyun or Noelle.\",\r\n        \"You can change character constellations in both \\\"Character\\\" tab and in \\\"Talents\\\" tab.\",\r\n        \"Modified character Stats show up in yellow.\"]}\r\n    >\r\n      <InfoDisplay />\r\n    </InfoComponent>\r\n    {/* editor/character detail display */}\r\n    {showEditor ? <Row className=\"mt-2\"><Col>\r\n      <React.Suspense fallback={<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n        <Card.Body><h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3></Card.Body>\r\n      </Card>}>\r\n        <CharacterDisplayCard\r\n          character={undefined}\r\n          newBuild={undefined}\r\n          tabName={undefined}\r\n          editable\r\n          setCharacterKey={editCharacter}\r\n          characterKey={charIdToEdit}\r\n          onClose={cancelEditCharacter}\r\n          footer={<CharDisplayFooter onClose={cancelEditCharacter} characterKey={charIdToEdit} />}\r\n        />\r\n      </React.Suspense>\r\n    </Col></Row> : null}\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              {allElements.map(eleKey =>\r\n                <Button key={eleKey} variant={(!elementalFilter || elementalFilter === eleKey) ? \"success\" : \"primary\"} className=\"py-1 px-2\" onClick={() => elementalFilterDispatch(eleKey)} ><h4 className=\"mb-0\"><Image src={Assets.elements?.[eleKey]} className=\"inline-icon\" /></h4></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {Weapon.getWeaponTypeKeys().map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"primary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}><h4 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h4></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <span>Sort by: </span>\r\n            <ToggleButtonGroup type=\"radio\" name=\"level\" value={sortBy} onChange={setsortBy}>\r\n              {Object.entries(toggle).map(([key, text]) =>\r\n                <ToggleButton key={key} value={key} variant={sortBy === key ? \"success\" : \"primary\"}>{text}</ToggleButton>)}\r\n            </ToggleButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Row className=\"mt-2\">\r\n      {!showEditor && <Col lg={4} md={6} className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n          <Card.Header className=\"pr-2\">\r\n            <span>Add New Character</span>\r\n          </Card.Header>\r\n          <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n            <Row className=\"d-flex flex-row justify-content-center\">\r\n              <Col xs=\"auto\">\r\n                <Button onClick={() => setnewCharacter(true)}>\r\n                  <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>}\r\n      {charKeyList.map(charKey =>\r\n        <Col key={charKey} lg={4} md={6} className=\"mb-2\">\r\n          <CharacterCard\r\n            header={undefined}\r\n            cardClassName=\"h-100\"\r\n            characterKey={charKey}\r\n            onDelete={deleteCharacter}\r\n            onEdit={editCharacter}\r\n            footer\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n  </Container>\r\n}\r\nfunction CharDisplayFooter({ onClose, characterKey }) {\r\n  return <Row>\r\n    <Col>\r\n      <Button variant=\"info\" as={Link} to={{ pathname: \"/flex\", characterKey } as any}><FontAwesomeIcon icon={faLink} /> Share Character</Button>\r\n    </Col>\r\n    <Col xs=\"auto\">\r\n      <Button variant=\"danger\" onClick={onClose}>Close</Button>\r\n    </Col>\r\n  </Row>\r\n}"],"sourceRoot":""}