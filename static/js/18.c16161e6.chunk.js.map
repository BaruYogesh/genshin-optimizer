{"version":3,"sources":["Components/EquipmentDropdown.tsx","Weapon/WeaponCard.tsx","Weapon/WeaponSelection.tsx","Weapon/WeaponDisplay.tsx"],"names":["EquipmentDropdown","location","onEquip","weaponTypeKey","disableUnequip","editable","t","useTranslation","characterSheet","usePromise","CharacterSheet","get","locationName","name","nameWIthIcon","icon","faBriefcase","Toggle","className","Menu","Item","onClick","Divider","onSelect","WeaponCard","weaponId","onEdit","onDelete","cardClassName","bg","footer","database","useContext","DatabaseContext","useState","undefined","databaseWeapon","updateDatabaseWeapon","useEffect","followWeapon","weapon","weaponSheet","key","WeaponSheet","level","ascension","refine","id","weaponType","weaponMainVal","getMainStatValue","toFixed","Stat","fixedUnit","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","weaponLevelName","getLevelString","statMap","passiveName","push","text","Header","src","Assets","weaponTypes","Body","xs","img","rarity","thumbnail","stars","colored","map","statKey","statVal","unit","getStatUnit","StatIcon","getStatName","process","Footer","charKey","setWeaponLocation","variant","size","faEdit","disabled","faTrashAlt","filterReducer","oldFilter","newFilter","WeaponSelectionModal","show","onHide","filter","weaponSheets","getAll","useReducer","weaponFilter","weaponFilterDispatch","weaponIdList","Set","allWeaponKeys","wKey","sort","a","b","contentClassName","allWeaponTypeKeys","faTimes","weaponKey","lg","md","WeaponSelectionButton","setshow","as","ButtonGroup","WeaponDisplayCard","lazy","toggle","WeaponDisplay","props","weaponIdToEdit","setWeaponIdToEdit","Object","keys","sortBy","setsortBy","newCharacter","setnewCharacter","useForceUpdate","forceUpdate","scrollRef","useRef","ReactGA","pageview","saved","dbStorage","charIdToEdit","includes","followAnyWeapon","allWeaponSheets","sortingFunc","_getWeapon","save","set","deleteWeapon","useCallback","i18next","window","confirm","removeWeapon","editCharacter","setTimeout","current","scrollIntoView","behavior","newWeapon","createWeapon","initialWeapon","weapons","dbWeapon","diff","ref","onClose","type","value","onChange","entries","faPlus"],"mappings":"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","file":"static/js/18.c16161e6.chunk.js","sourcesContent":["import { faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport { CharacterKey, WeaponTypeKey } from \"../Types/consts\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\nimport { CharacterSelectionDropdownList } from \"../Character/CharacterSelection\";\r\n\r\nexport default function EquipmentDropdown({ location, onEquip, weaponTypeKey, disableUnequip = false, editable = false }: { location: CharacterKey | \"\", onEquip: (charKey: CharacterKey) => void, weaponTypeKey?: WeaponTypeKey, disableUnequip?: boolean, editable?: boolean }) {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const characterSheet = usePromise(CharacterSheet.get(location), [location])\r\n  const locationName = characterSheet?.name ? characterSheet.nameWIthIcon : <span><FontAwesomeIcon icon={faBriefcase} /> {t`filterLocation.inventory`}</span>\r\n\r\n  return editable ? <Dropdown>\r\n    <Dropdown.Toggle className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {!disableUnequip && <><Dropdown.Item onClick={() => { /* TODO */ }}><FontAwesomeIcon icon={faBriefcase} /> Inventory</Dropdown.Item>\r\n        <Dropdown.Divider /></>}\r\n      <CharacterSelectionDropdownList onSelect={onEquip} weaponTypeKey={weaponTypeKey} />\r\n    </Dropdown.Menu>\r\n  </Dropdown> : locationName\r\n}","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { Button, Card, Col, Image, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport EquipmentDropdown from \"../Components/EquipmentDropdown\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype CharacterCardProps = { weaponId: string, onEdit?: (weaponId: string) => void, onClick?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, cardClassName: string, bg?: string, footer?: boolean, editable?: boolean }\r\nexport default function WeaponCard({ weaponId, onEdit, onDelete, onClick, cardClassName = \"\", bg = \"\", footer = false, editable = false }: CharacterCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseWeapon, updateDatabaseWeapon] = useState(undefined as ICachedWeapon | undefined)\r\n  useEffect(() =>\r\n    weaponId ? database.followWeapon(weaponId, updateDatabaseWeapon) : undefined,\r\n    [weaponId, updateDatabaseWeapon, database])\r\n\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refine, id } = weapon\r\n  const equipOnChar = (charKey: CharacterKey) => database.setWeaponLocation(weaponId, charKey)\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponLevelName = WeaponSheet.getLevelString(weapon)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header>\r\n      <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /> <h5 className=\"d-inline\">{weaponSheet.name}</h5>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onClick?.(weaponId)} className={onClick ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={weaponSheet.img} className={`thumb-big grad-${weaponSheet.rarity}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h5 className=\"mb-0\">Level {weaponLevelName} </h5>\r\n          <h5 >Refinement {refine}</h5>\r\n          <h6 className=\"mb-0\"><Stars stars={weaponSheet.rarity} colored /></h6>\r\n          {/* <h3 className=\"mb-0\"></h3> */}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statMap.map(([statKey, statVal]) => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIcon[statKey]} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n      {process.env.NODE_ENV === \"development\" && <span className=\"text-warning\">{id || `\"\"`} </span>}\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Row>\r\n        <Col >\r\n          <EquipmentDropdown location={weapon?.location} onEquip={equipOnChar} weaponTypeKey={weaponTypeKey} disableUnequip={!!weapon.location} editable={editable} />\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(weaponId)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              disabled={!!weapon.location}\r\n              onClick={() => onDelete(weaponId)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useReducer, useState } from \"react\"\r\nimport { Button, ButtonGroup, Card, Col, Image, Modal, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey } from \"../Types/consts\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean\r\n}\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\nexport function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n  return <Modal show={show} size=\"xl\" contentClassName=\"bg-transparent\" onHide={onHide}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {allWeaponTypeKeys.map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"secondary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}>\r\n                  <h3 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h3></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <Button onClick={onHide} variant=\"danger\"><FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          {weaponIdList.map(weaponKey => {\r\n            const weaponSheet = weaponSheets[weaponKey]\r\n            return <Col key={weaponKey} lg={3} md={4} className=\"mb-2\">\r\n              <Button className=\"w-100 h-100 align-top\" variant=\"darkcontent\" onClick={() => { onHide(); onSelect(weaponKey) }}>\r\n                <Row className=\"h-100\">\r\n                  <Col xs=\"auto\" className=\"pr-0\">\r\n                    <Image src={weaponSheet.img} className={`thumb-big grad-${weaponSheet.rarity}star p-0`} thumbnail />\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponSheet.weaponType]} className=\"inline-icon\" /> {weaponSheet.name}</h5>\r\n                    <h6 className=\"mb-0\"><Stars stars={weaponSheet.rarity} colored /></h6>\r\n                  </Col>\r\n                </Row>\r\n              </Button>\r\n            </Col>\r\n          })}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nexport function WeaponSelectionButton({ weaponSheet, onSelect, filter }: { weaponSheet?: WeaponSheet, onSelect: (wKey: WeaponKey) => void, filter?: (sheet: WeaponSheet) => boolean }) {\r\n  const [show, setshow] = useState(false)\r\n  return <>\r\n    <Button as={ButtonGroup} onClick={() => setshow(true)} className=\"text-nowrap\">{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n    <WeaponSelectionModal show={show} onHide={() => setshow(false)} onSelect={onSelect} filter={filter} />\r\n  </>\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport i18next from 'i18next';\r\nimport React, { lazy, useCallback, useContext, useEffect, useReducer, useRef, useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Col, Container, Image, Row, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport Assets from '../Assets/Assets';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport { dbStorage } from '../Database/DBStorage';\r\nimport { allWeaponTypeKeys, CharacterKey, WeaponKey } from '../Types/consts';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport WeaponCard from './WeaponCard';\r\nimport { WeaponSelectionModal } from './WeaponSelection';\r\nimport WeaponSheet from './WeaponSheet';\r\nimport { initialWeapon } from './WeaponUtil';\r\n// const InfoDisplay = React.lazy(() => import('./InfoDisplay'));\r\n\r\n//lazy load the character display\r\nconst WeaponDisplayCard = lazy(() => import('./WeaponDisplayCard'))\r\nconst toggle = {\r\n  level: \"Level\",\r\n  rarity: \"Rarity\"\r\n} as const\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\nexport default function WeaponDisplay(props) {\r\n  const database = useContext(DatabaseContext)\r\n  const [weaponIdToEdit, setWeaponIdToEdit] = useState(\"\" as CharacterKey | \"\")\r\n  const [sortBy, setsortBy] = useState(() => Object.keys(toggle)[0])\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [newCharacter, setnewCharacter] = useState(false)\r\n  const [, forceUpdate] = useForceUpdate()\r\n  const scrollRef = useRef(null as any)\r\n  useEffect(() => {\r\n    ReactGA.pageview('/weapon')\r\n    const saved = dbStorage.get(\"WeaponDisplay.state\")\r\n    if (saved) {\r\n      const { charIdToEdit, sortBy, weaponFilter } = saved\r\n      setWeaponIdToEdit(charIdToEdit)\r\n      setsortBy(sortBy)\r\n      allWeaponTypeKeys.includes(weaponFilter) && weaponFilterDispatch(weaponFilter)\r\n    }\r\n    return database.followAnyWeapon(forceUpdate)\r\n  }, [forceUpdate, database])\r\n  const allWeaponSheets = usePromise(WeaponSheet.getAll(), []) ?? {}\r\n  const sortingFunc = {\r\n    level: (wKey) => database._getWeapon(wKey)?.level ?? 0,\r\n    rarity: (wKey) => allWeaponSheets[database._getWeapon(wKey)?.key as any]?.rarity\r\n  }\r\n  useEffect(() => {\r\n    const save = { charIdToEdit: weaponIdToEdit, sortBy, weaponFilter }\r\n    dbStorage.set(\"WeaponDisplay.state\", save)\r\n  }, [weaponIdToEdit, sortBy, weaponFilter])\r\n  const deleteWeapon = useCallback(async (key) => {\r\n    const weapon = database._getWeapon(key)\r\n    if (!weapon) return\r\n    const name = i18next.t(`weapon_${weapon.key}_gen:name`)\r\n\r\n    if (!window.confirm(`Are you sure you want to remove ${name}?`)) return\r\n    database.removeWeapon(key)\r\n    if (weaponIdToEdit === key)\r\n      setWeaponIdToEdit(\"\")\r\n  }, [weaponIdToEdit, setWeaponIdToEdit, database])\r\n\r\n  const editCharacter = useCallback(key => {\r\n    setWeaponIdToEdit(key)\r\n    setTimeout(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, 500);\r\n  }, [setWeaponIdToEdit, scrollRef])\r\n\r\n  const newWeapon = useCallback(\r\n    (weaponKey: WeaponKey) => {\r\n      editCharacter(database.createWeapon(initialWeapon(weaponKey)))\r\n    },\r\n    [database, editCharacter])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponFilter && weaponFilter !== allWeaponSheets[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  }).sort((a, b) => {\r\n    if (sortBy === \"level\") {\r\n      const diff = sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n    } else {\r\n      const diff = sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n    }\r\n  })\r\n  return <Container ref={scrollRef} className=\"mt-2\">\r\n    {/* editor/character detail display */}\r\n    {weaponIdToEdit ? <Row className=\"mt-2\"><Col>\r\n      <WeaponDisplayCard\r\n        weaponId={weaponIdToEdit}\r\n        // onDelete={deleteWeapon}\r\n        editable\r\n        footer\r\n        onClose={() => setWeaponIdToEdit(\"\")}\r\n      />\r\n    </Col></Row> : null}\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <Row>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {allWeaponTypeKeys.map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"secondary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}>\r\n                  <h3 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h3></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <span>Sort by: </span>\r\n            <ToggleButtonGroup type=\"radio\" name=\"level\" value={sortBy} onChange={setsortBy}>\r\n              {Object.entries(toggle).map(([key, text]) =>\r\n                <ToggleButton key={key} value={key} variant={sortBy === key ? \"success\" : \"primary\"}>\r\n                  <h6 className=\"mb-0\">{text}</h6>\r\n                </ToggleButton>)}\r\n            </ToggleButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Row className=\"mt-2\">\r\n      {!weaponIdToEdit && <Col lg={4} md={6} className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n          <Card.Header className=\"pr-2\">\r\n            <span>Add New Weapon</span>\r\n          </Card.Header>\r\n          <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n            <Row className=\"d-flex flex-row justify-content-center\">\r\n              <Col xs=\"auto\">\r\n                <Button onClick={() => setnewCharacter(true)}>\r\n                  <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                </Button>\r\n                <WeaponSelectionModal show={newCharacter} onHide={() => setnewCharacter(false)} onSelect={newWeapon} />\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>}\r\n      {weaponIdList.map(weaponId =>\r\n        <Col key={weaponId} lg={4} md={6} className=\"mb-2\">\r\n          <WeaponCard\r\n            weaponId={weaponId}\r\n            // header={undefined}\r\n            cardClassName=\"h-100\"\r\n            // characterKey={charKey}\r\n            onDelete={deleteWeapon}\r\n            onEdit={editCharacter}\r\n            onClick={editCharacter}\r\n            footer\r\n            editable\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n  </Container>\r\n}"],"sourceRoot":""}