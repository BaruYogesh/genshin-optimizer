{"version":3,"sources":["Util/ReactUtil.ts","Artifact/ArtifactSheet.tsx","Character/CharacterSheet.ts","Util/FieldUtil.tsx","Data/ElementalData.ts","StatData.ts","Components/StarDisplay.tsx","Conditional/Conditional.ts","Weapon/WeaponSheet.ts","Components/CustomFormControl.tsx","Components/StatIcon.tsx","Formula.ts","Components/SlotIcon.ts","Data/ArtifactData.ts","Data/ArtifactLookupTable.ts","Artifact/Artifact.tsx","StatConstants.ts","Components/CharacterSelection.tsx","Artifact/ArtifactCard.tsx","Util/UIUtil.ts","Artifact/PercentBadge.tsx","InfoComponent.tsx","Types/artifact.ts","Artifact/imgs/scan_art_main.png","Artifact/imgs/snippet.png","Artifact/UploadDisplay.tsx","Artifact/ArtifactEditor.tsx","Artifact/ArtifactDisplay.tsx","Stat.tsx"],"names":["useForceUpdate","useState","stateDirty","update","useCallback","usePromise","promise","res","setRes","useEffect","pending","then","console","error","undefined","artifactImport","imp","Object","fromEntries","entries","default","map","set","value","ArtifactSheet","promiseSheets","allArtifactSets","sheets","data","this","name","rarity","pieces","icons","setEffects","conditionals","num","stats","deepClone","evalIfFunc","setNum","text","effects","conditional","grouped","forEach","key","sheet","Math","max","push","allRarities","filter","length","charStats","setToSlots","artifactSetEffect","slots","parseInt","keys","charImport","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","isAutoElemental","weaponTypeKey","isMelee","getTalent","talentKey","talent","getTalentStats","split","constell","constellation","getTalentStatsAll","talents","statsArr","talentStats","getDisplayStatKeys","defVal","basicKeys","characterKey","eleKey","elementKey","transReactions","ElementToReactionKeys","includes","Formula","formulas","character","charFormulas","values","formula","field","canShow","genericAvgHit","reactions","startsWith","replace","cardImg","thumbImg","star","constellationName","specializeStat","baseStat","Boolean","get","getAll","modifiersToFields","modifiers","mStatKey","modifier","Stat","getStatName","variant","getStatVariant","reduce","accu","mkey","multiplier","formulaText","i","printStat","toFixed","fixed","fixedUnit","unit","getStatUnit","statsToFields","statVals","statKey","statVal","className","ElementalData","StatIconEle","flat","fieldProcessing","physical","anemo","geo","electro","hydro","pyro","cryo","StatData","characterHP","pretty","const","characterDEF","characterATK","characterEle","characterLevel","weaponATK","baseATK","hp","hp_","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","s","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","ele","hitElements","dendro","PreprocessFormulas","dependencyKeys","debug","initialStats","constData","formulaList","tmp","constModifier","k","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","func","log","assign","hitMoves","move","moveName","clamp","eleName","opt","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","StarIcon","icon","faStar","Stars","stars","colored","Array","_","processed","Promise","all","addConditional","weaponImport","setObj","setNumKey","setNumObj","Conditional","Error","source","findConditionals","obj","callback","condKey","states","state","maxStack","fields","layeredAssignment","artifact","weapon","resolve","conditionalValue","objPathValue","conditionalValues","stacks","stateKey","conditionalStats","objMultiplication","parseConditionalValues","crawlObject","isArray","WeaponSheet","loadWeaponSheet","allWeaponKeys","weaponSheet","build","weaponType","img","passiveName","desc","passiveDescription","description","baseStats","weaponKey","getWeaponsOfType","CustomFormControl","onChange","disabled","float","placeholder","allowEmpty","setstate","setstateDirty","sendChange","parseFunc","parseFloat","aria-label","e","target","onBlur","onKeyDown","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","formulaImport","src","f","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubstatsData","ArtifactSubstatsMinMax","getArrLastElement","min","ArtifactSlotsData","ArtifactSubstatLookupTable","Artifact","numStars","level","substats","errors","allSubstatRolls","total","substat","index","substatRolls","getSubstatRolls","Set","roll","size","rolls","efficiency","getSubstatEfficiency","getStatNameWithPercent","find","some","minimum","rollInfo","low","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accurateValue","sum","cur","getArtifactEfficiency","currentEfficiency","maximumEfficiency","current","totalRolls","artifactId","art","ArtifactDatabase","currentLocation","location","intendedLocation","slotKey","artifactToSwapWithid","CharacterDatabase","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","moveToNewLocation","id","equipArtifactOnSlot","slotName","slotIcon","slotNameWithIcon","slotMainStats","setEffectsObjs","artifactSheets","result","setKey","setEffect","setEffectObj","setStats","condStats","splitArtifactsBySlot","databaseObj","allSlotKeys","mainStatValues","numStar","endsWith","mainStatValue","high","numUpgrades","maxSubstatValues","getSubstatKeys","substatCloseEnough","value1","value2","closeEnoughFloat","closeEnoughInt","ceil","getSubstatRollData","substatKey","substatValue","rollData","table","lookupValue","a","b","clampPercent","artifacts","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","DropDownItem","characterSheet","Item","onClick","ArtifactCard","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","forceUpdateHook","registerArtListener","unregisterArtListener","equipOnChar","equipArtifactOnChar","editable","substatsValidation","mainStatKey","lock","mainStatLevel","mainStatVal","artifactValid","locationName","border","bg","Header","xs","md","slotIcons","thumbnail","slotNames","Body","Title","stat","numRolls","effOpacity","statName","valueString","style","opacity","valid","Footer","Toggle","Menu","Divider","placement","overlay","setLocked","faLock","faLockOpen","faEdit","faTrashAlt","round","PercentBadge","badgeColor","InfoComponent","pageKey","modalTitle","children","loadFromLocalStorage","showInfoModal","setshowInfoModal","getRandomElementFromArray","displayText","closeModal","infoShown","saveToLocalStorage","show","onHide","contentClassName","faTimes","fallback","animation","faQuestionCircle","allMainStatKeys","allSubstats","starColor","r","g","zeroProgress","now","UploadDisplay","setState","setReset","artifactInEditor","fileList","setFileList","fileName","setFileName","image","setImage","scanning","setScanning","otherProgress","setOtherProgress","substatProgress","setSubstatProgress","artSetProgress","setArtSetProgress","texts","setTexts","modalShow","setModalShow","resetText","scanFile","file","rest","fileToURL","urlFile","artifactFromImage","resetState","uploadFiles","files","pasteFunc","clipboardData","window","addEventListener","removeEventListener","alt","Row","ExplainationModal","hide","Col","Button","ReactGA","modalview","Card","lg","ProgressBar","label","Form","File","accept","custom","multiple","Label","Modal","Snippet","href","rel","scan_art_main","uploadDisplayReset","reader","FileReader","onloadend","readAsDataURL","urlToImageData","Image","onload","tempCanvas","document","createElement","tempCtx","getContext","width","height","drawImage","getImageData","imageDataToURL","imageDataObj","canvas","ctx","idata","createImageData","putImageData","toDataURL","starScanning","pixels","d","lastRowNum","rowsWithNumber","y","onStar","x","colorCloseEnough","color1","color2","threshold","intCloseEnough","abs","parseSubstat","matches","getStatNameRaw","match","RegExp","exec","parseMainStatKey","toLowerCase","hammingDistance","parseSetKey","parseSlotKey","parseMainStatvalue","regex","NaN","awaits","linesFromImage","bandPass","region","mode","numStarsText","whiteTexts","substatTexts","artifactSetTexts","guessLevel","nStars","mainSKey","mainSVal","isFloat","testLevel","findIndex","val","isNaN","detectedlevel","nStar","testSlotKey","len","setProgress","tworker","createWorker","logger","progress","status","errorHandler","load","loadLanguage","initialize","imageURL","recognize","rec","terminate","lines","pixelData","options","Uint8ClampedArray","from","top","bot","bw","invert","halfInd","ImageData","ArtifactEditor","artifactIdToEdit","cancelEdit","useReducer","artifactReducer","artifactDispatch","useMemo","isInvalid","reset","newValue","newSheet","pick","available","prefer","setSubstat","editorArt","isDup","getArtifactDatabase","candidate","every","candidateSubstat","dupArtifacts","dupId","checkDuplicate","errMsgs","InputGroup","Dropdown","as","Prepend","namesByMaxRarities","sets","Fragment","ItemText","DropdownButton","Append","title","Text","l","sKey","FormControl","readOnly","mainStatK","OverlayTrigger","Popover","Content","cursor","SubstatInput","Alert","saveArtifact","canClearArtifact","process","rollNum","allowedRolls","rollLabel","rollOffset","rollBadge","Badge","rollArr","indexOf","other","ButtonGroup","v","action","artToSave","confirm","ArtifactDisplayInfo","React","lazy","sortMap","quality","mefficiency","initialFilter","filterArtSetKey","filterStars","filterLevelLow","filterLevelHigh","filterSlotKey","filterMainStatKey","filterSubstats","filterLocation","filterLocked","ascending","sortType","maxNumArtifactsToDisplay","filterReducer","filterInit","initial","ArtifactDisplay","props","filters","filterDispatch","artToEditId","setartToEditId","pageIdex","setpageIdex","scrollRef","useRef","invScrollRef","dbDirty","forceUpdate","deleteArtifact","removeArtifactById","editArtifact","scrollIntoView","behavior","cancelEditArtifact","pageview","registerListener","unregisterListener","locationDisplay","lockedDisplay","artifactDB","filterKey","sortNum","numUnequip","numUnlock","numLock","totalArtNum","numPages","currentPageIndex","artifactsToShow","slice","locationCharacterSheet","Container","ref","faUndo","ToggleButtonGroup","allArtifactRarities","selected","ToggleButton","faCheckSquare","faSquare","faSortAmountDownAlt","faSortAmountUp","CharacterSelection","cid","unequipArtifact","faUserSlash","faTrash","htmlStatsData","getStatNamePretty","expand","getPrintableFormulaStatKeyList","statList","FormulaText","has","printFormula","modifierText","statUnit","o"],"mappings":"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AC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KAC1LI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhDtL,IAAK,CACDiL,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDpL,IAAK,CACD+K,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,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AQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3sBC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ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K,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAA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","file":"static/js/14.80e530af.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>();\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => { pending = false }\r\n  }, [promise])\r\n  return res\r\n}\r\n","import { IArtifactSheet, SetEffectEntry, StatArr, StatDict } from \"../Types/artifact\";\r\nimport { allArtifactSets, allRarities, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  constructor(data: IArtifactSheet) { this.data = data }\r\n\r\n  get name(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slotNames(): Dict<SlotKey, string> { return this.data.pieces }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): StatDict {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectTexts(setNum: SetNum, stats: ICalculatedStats): Displayable {\r\n    let text = this.setEffects[setNum]?.text\r\n    return evalIfFunc(text ?? \"\", stats)\r\n  }\r\n  setEffectConditionals(setNum: SetNum, stats: ICalculatedStats) {\r\n    const effects = this.setEffects[setNum]\r\n    if (effects?.conditional || effects?.conditionals) {\r\n      return {\r\n        ...effects?.conditional && { default: effects?.conditional },\r\n        ...effects?.conditionals && effects?.conditionals\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static namesByMaxRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): [Rarity, [ArtifactSetKey, string][]][] {\r\n    const grouped: Dict<Rarity, [ArtifactSetKey, string][]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push([key, sheet.name])\r\n      else grouped[rarity] = [[key, sheet.name]]\r\n    })\r\n    return allRarities.map(rarity => [rarity, grouped[rarity] ?? []] as [Rarity, [ArtifactSetKey, string][]]).filter(([, group]) => group.length)\r\n  }\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): StatArr {\r\n    let artifactSetEffect: StatArr = []\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && Object.entries(evalIfFunc(value.stats, charStats) ?? {}).forEach(([key, value]) =>\r\n          artifactSetEffect.push({ key, value }))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import Formula from \"../Formula\";\r\nimport { ElementToReactionKeys } from \"../StatData\";\r\nimport { ICharacterSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const charImport = import('../Data/Characters').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>)\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | string): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return this.sheet.elementKey }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get specializeStat() { return this.sheet.specializeStat }\r\n  get baseStat() { return this.sheet.baseStat }\r\n  get talent() { return this.sheet.talent }\r\n  get formula() { return this.sheet.formula }\r\n  get conditionals() { return this.sheet.conditionals }\r\n  isAutoElemental = () => this.sheet.weaponTypeKey === \"catalyst\"\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (talentKey: string) => this.talent[talentKey]\r\n  get hasTalentPage() { return Boolean(Object.keys(this.sheet.talent).length) } //TODO: remove when all chararacter sheets are complete\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalent(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats) => {\r\n    const talents = this.sheet.talent\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n\r\n  getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats || !Object.keys(stats).length) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = this.elementKey\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = this.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (Formula.formulas.character?.[characterKey]) {\r\n      const charFormulas = {}\r\n      Object.entries(Formula.formulas.character[characterKey]).forEach(([talentKey, formulas]: any) => {\r\n        Object.values(formulas as any).forEach((formula: any) => {\r\n          if (!formula.field.canShow(stats)) return\r\n          if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n          if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n          charFormulas[talentKey].push(formula.keys)\r\n        })\r\n      })\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {//TODO: doesnt have character sheet\r\n      //generic average hit parameters.\r\n      const genericAvgHit: string[] = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical\r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      else if (weaponTypeKey === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst\r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions: string[] = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n}\r\n","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier as any ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey as any] * (multiplier as any), 0),\r\n    formulaText: <span>{Object.entries(modifier as any ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}) {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n};\r\n\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].forEach(ele => {\r\n  StatData[`${ele}_crystalize_hit`] = { name: `Crystalize Shield ${hitElements[ele].name} Effective HP`, variant: ele }\r\n  Formulas[`${ele}_crystalize_hit`] = s => s.crystalize_hit * 2.5\r\n})\r\n\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"shattered_hit\", \"crystalize_hit\", \"electro_crystalize_hit\", \"pyro_crystalize_hit\", \"cryo_crystalize_hit\", \"hydro_crystalize_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]: any) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]: any) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]: any) => accu + c[k] * (m as any), 0)\r\n    const dynamicFunc = (s, c) => dynamicModifier.reduce((accu, [k, m]: any) => accu + s[k] * (m as any), 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => {\r\n    addConditional(sheets, \"weapon\");\r\n  }),//attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => {\r\n    addConditional(sheets, \"artifact\")\r\n    //attach metadata prop setNumKey to the conditional\r\n    Object.values(sheets).forEach(setObj =>\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n        if (setNumObj.conditional) (setNumObj.conditional as any).setNumKey = setNumKey // TODO, typechecker says there's no `setNumKey`\r\n        if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach((c: any) => c.setNumKey = setNumKey)\r\n      }))\r\n  })\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","import { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new WeaponSheet(value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>)\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  constructor(weaponSheet: IWeaponSheet) { this.sheet = weaponSheet }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string) => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  get name() { return this.sheet.name }\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  get passiveName() { return this.sheet.passiveName }\r\n  passiveDescription(stats: ICalculatedStats) {\r\n    const desc = this.sheet.passiveDescription\r\n    return evalIfFunc(desc, stats)\r\n  }\r\n  get description() { return this.sheet.description }\r\n  get baseStats() { return this.sheet.baseStats }\r\n  stats = (build: ICalculatedStats): object | false | undefined => evalIfFunc(this.sheet.stats, build)\r\n  get conditionals() { return this.sheet.conditionals }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled = false, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import ICalculatedStats from './Types/ICalculatedStats';\r\nimport { crawlObject, objPathValue } from './Util/Util';\r\n\r\n//Currently only import character formulas, but formulas from other sources should be able to be imported as well.\r\nexport const formulaImport = import('./Data/Characters/formula').then(imp => addFormula(imp.default, \"character\"))\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | undefined> => formulaImport.then(() => objPathValue(Formula.formulas, keys))\r\n}\r\n\r\nfunction addFormula(src, key) {\r\n  Formula.formulas[key] = src\r\n  crawlObject(src, [key], f => typeof f === \"function\", (formula, keys) => {\r\n    formula.keys = keys\r\n  })\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { SlotKey } from '../Types/consts'\r\n\r\nconst SlotIcon: StrictDict<SlotKey, IconDefinition> = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport { CompressMainStatKey, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactStarsData: Dict<Rarity, { subsBaselow: number, subBaseHigh: number, numUpgradesOrUnlocks: number }> = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData: StrictDict<Rarity, StrictDict<CompressMainStatKey, number[]>> = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 12.0, 14.6, 17.3, 19.9, 22.5, 25.2, 27.8, 30.5, 33.1, 35.7, 38.4, 41.0, 43.7, 46.3, 49.0, 51.6, 54.2, 56.9, 59.5, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.1, 23.7, 25.2, 26.7, 28.2, 29.8, 31.3, 32.8, 34.3, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubstatsData: StrictDict<SubstatKey, { [numStars: number]: number[] }> = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubstatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { SubstatKey } from \"../Types/artifact\"\r\n\r\nexport const ArtifactSubstatLookupTable: StrictDict<SubstatKey, { [numStar: number]: { [rounded: string]: number[][] } }> = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubstatsData, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { CompressMainStatKey, IArtifact, MainStatKey, StatDict, Substat, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, CharacterKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey) => slotKey ? ArtifactSlotsData[slotKey].name : \"\"\r\n  static slotIcon = (slotKey: SlotKey) => <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n  static slotNameWithIcon = (slotKey: SlotKey) => {\r\n    let name = Artifact.slotName(slotKey)\r\n    let slotIcon = Artifact.slotIcon(slotKey)\r\n    return <span>{slotIcon} {name}</span>\r\n  }\r\n\r\n  static slotMainStats = (slotKey: SlotKey): MainStatKey[] => ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): Dict<ArtifactSetKey, Dict<SetNum, StatDict>> => {\r\n    let result: Dict<ArtifactSetKey, Dict<SetNum, StatDict>> = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      let setEffect: Dict<SetNum, StatDict> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n        const setStats = evalIfFunc(setEffectObj.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        result[setKey][setNumKey][statKey] = (result[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: Dict<string, IArtifact>): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey, defVal = []) => {\r\n    if (statKey.endsWith(\"_dmg_\") && statKey !== \"physical_dmg_\")\r\n      return ArtifactMainStatsData[numStar][\"ele_dmg_\"]\r\n    return ArtifactMainStatsData[numStar][statKey as CompressMainStatKey] || defVal\r\n  }\r\n\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number | undefined =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } => {\r\n    const data = ArtifactStarsData[rarity]!\r\n    return { low: data.subsBaselow, high: data.subBaseHigh, numUpgrades: data.numUpgradesOrUnlocks }\r\n  }\r\n\r\n  static maxSubstatValues = (statKey: SubstatKey, numStars = maxStar): number => ArtifactSubstatsMinMax[statKey].max[numStars]\r\n  static getSubstatKeys = (): SubstatKey[] => Object.keys(ArtifactSubstatsData) as SubstatKey[]\r\n  static substatCloseEnough = (key: SubstatKey, value1: number, value2: number): boolean => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars: Rarity) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars]!.subBaseHigh + ArtifactStarsData[numStars]!.numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static getSubstatRollData = (substatKey: SubstatKey | \"\", numStars: Rarity) => ArtifactSubstatsData[substatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    if (!numStars || !substatKey || typeof substatValue !== \"number\" || !substatValue) return []\r\n    let rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    if (!rollData.length) return []\r\n\r\n    let table = ArtifactSubstatLookupTable[substatKey][numStars]\r\n    let lookupValue = substatValue.toFixed(1)\r\n\r\n    if (table[lookupValue])\r\n      return table[lookupValue].map(roll => roll.map(i => rollData[i]))\r\n    else return [] // Lookup fails\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state: IArtifact) {\r\n    const { numStars, level, substats } = state, errors: string[] = []\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = key ? Artifact.getSubstatRolls(key, value, numStars) : []\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls?.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            const key = substats[index].key\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    } else {\r\n      // Found valid build, filling missing data\r\n      for (const substat of substats)\r\n        substat.accurateValue = substat.rolls!.reduce((sum, cur) => sum + cur, 0)\r\n      const { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n      state.currentEfficiency = currentEfficiency\r\n      state.maximumEfficiency = maximumEfficiency\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(substats: Substat[], numStars: Rarity, level: number) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let current = substats.reduce((sum, { key, accurateValue }) => sum + (key ? (accurateValue! / ArtifactSubstatsMinMax[key].max[maxStar]) : 0), 0)\r\n    let maximum = current + rollsRemaining\r\n    let currentEfficiency = current * 100 / totalRolls\r\n    let maximumEfficiency = maximum * 100 / totalRolls\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    let setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId: string | undefined, characterKey: CharacterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifactOnSlot(intendedLocation, art.slotKey, art.id)\r\n\r\n    if (currentLocation) {\r\n      CharacterDatabase.equipArtifactOnSlot(currentLocation, slotKey, artifactToSwapWith?.id ?? \"\")\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId: string | undefined) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.equipArtifactOnSlot(location, slotKey, \"\")\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [0,\r\n  17.2, 18.5, 19.9, 21.3, 22.6, 24.6, 26.6, 28.9, 31.4, 34.1,\r\n  37.2, 40.7, 44.4, 48.6, 53.7, 59.1, 64.4, 69.7, 75.1, 80.6,\r\n  86.1, 91.7, 97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n  142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n  215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n  336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n  509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n  742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n  968.6, 991.0, 1013.5, 1036.1, 1066.6, 1090.0, 1115.0, 1141.7, 1171.9, 1202.8,\r\n  1202.8, 1233.9, 1264.7, 1305.7, 1346.1, 1468.9, 1524.0, 1577.0, 1627.6, 1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [0,\r\n  91, 99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n  170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n  320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n  448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n  574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n  733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n  915, 936, 956, 982, 1003, 1017, 1036, 1057, 1075, 1096,\r\n  1114, 1135, 1149, 1170, 1191, 1205, 1224, 1243, 1260, 1277,\r\n  1293, 1308, 1317, 1327, 1336, 1349, 1366, 1384, 1403, 1424,\r\n  1450, 1478, 1507, 1543, 1570, 1580, 1589, 1673, 1682, 1691,\r\n]","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return <>{CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>\r\n    {characterSheet.name}\r\n  </Dropdown.Item>\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { IArtifact, Substat } from '../Types/artifact';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: IArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number }\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }: Data): JSX.Element | null {\r\n  const [, forceUpdateHook] = useForceUpdate()\r\n  useEffect(() => {\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () => { artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook) }\r\n  }, [artifactId, forceUpdateHook])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? ArtifactDatabase.get(artifactId) : undefined))?.setKey))\r\n  const equipOnChar = (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey)\r\n\r\n  const editable = !artifactObj //dont allow edit for flex artifacts\r\n  const art = artifactObj || ArtifactDatabase.get(artifactId);\r\n  const characterSheet = usePromise(CharacterSheet.get(art.location))\r\n  if (!art) return null\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n\r\n  const { id, slotKey, numStars, level, mainStatKey, substats, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.mainStatValue(mainStatKey, numStars, mainStatLevel) ?? \"\"}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = art.maximumEfficiency !== undefined\r\n  const locationName = characterSheet?.name ?? \"Inventory\"\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{sheet?.slotNames[slotKey] ?? \"Unknown Piece Name\"}</b></h6>\r\n          <div>{Artifact.slotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{sheet?.name ?? \"Artifact Set\"}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: Substat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueString(stat.value, Stat.getStatUnit(stat.key))}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{valueString(efficiency, \"eff\")}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} {...{ className: \"float-right\" }} /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"lock-artifact-tip\">Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\" onClick={() => ArtifactDatabase.setLocked(id, !lock)}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","export function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1)\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { faQuestionCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Suspense, useState } from \"react\"\r\nimport { Button, Card, Col, Modal, Row, Spinner } from \"react-bootstrap\"\r\nimport { getRandomElementFromArray, loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\"\r\n\r\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }) {\r\n  const [showInfoModal, setshowInfoModal] = useState(loadFromLocalStorage(\"infoShown\")?.[pageKey] ?? true)\r\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\r\n  const closeModal = () => {\r\n    const infoShown = loadFromLocalStorage(\"infoShown\") ?? {}\r\n    infoShown[pageKey] = false\r\n    saveToLocalStorage(\"infoShown\", infoShown)\r\n    setshowInfoModal(false)\r\n  }\r\n  return <>\r\n    <Modal show={showInfoModal} onHide={() => closeModal()} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <Card.Title>{modalTitle}</Card.Title>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button variant=\"danger\" onClick={() => closeModal()} >\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Suspense fallback={<h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>}>\r\n            {children}\r\n          </Suspense>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={() => closeModal()}>\r\n            <span>Close</span>\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"pl-2 py-0 pr-0\">\r\n        <Row>\r\n          <Col><small>{displayText}</small></Col>\r\n          <Col xs=\"auto\">\r\n            <Button size=\"sm\" variant=\"info\" className=\"m-0 py-1\" onClick={() => setshowInfoModal(true)}><FontAwesomeIcon icon={faQuestionCircle} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}","import { ArtifactSetKey, Rarity, SetNum, SlotKey } from \"./consts\";\r\nimport ICalculatedStats from \"./ICalculatedStats\";\r\nimport IConditional, { IConditionalComplex, IConditionals } from \"./IConditional\";\r\n\r\nexport type IArtifactSheets = StrictDict<ArtifactSetKey, IArtifactSheet>\r\n\r\nexport interface IArtifactSheet {\r\n  name: string,\r\n  rarity: readonly Rarity[],\r\n  pieces: Dict<SlotKey, string>,\r\n  icons: Dict<SlotKey, string>,\r\n  conditionals?: IConditionals,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  text: (Displayable | ((stats: ICalculatedStats) => Displayable)),\r\n  stats?: StatDict | ((arg0: ICalculatedStats) => (StatDict | false))\r\n  conditional?: (IConditional | IConditionalComplex),\r\n  conditionals?: IConditionals,\r\n}\r\n\r\nexport type StatArr = { key: StatKey, value: number }[]\r\nexport type StatDict = Dict<StatKey, number>\r\n\r\nexport interface IArtifact {\r\n  id?: string,\r\n  setKey: ArtifactSetKey,\r\n  numStars: Rarity,\r\n  level: number,\r\n  slotKey: SlotKey,\r\n  mainStatKey: MainStatKey,\r\n  mainStatVal: number,\r\n  substats: Substat[],\r\n  location: string,\r\n\r\n  currentEfficiency?: number,\r\n  maximumEfficiency?: number,\r\n  lock: boolean,\r\n}\r\n\r\nexport interface Substat {\r\n  key: SubstatKey | \"\",\r\n  value: number,\r\n\r\n  rolls?: number[],\r\n  efficiency?: number,\r\n  accurateValue?: number,\r\n}\r\nexport type StatKey = MainStatKey | SubstatKey | ReactionDMGStatKey | MoveDMGStatKey | ElementalRESStatKey | SpecializedStatKey\r\n\r\ntype ElementalRESStatKey = \"physical_res_\" | \"anemo_res_\" | \"geo_res_\" | \"electro_res_\" | \"hydro_res_\" | \"pyro_res_\" | \"cryo_res_\"\r\ntype ReactionDMGStatKey = \"overloaded_dmg_\" | \"shattered_dmg_\" | \"electrocharged_dmg_\" | \"superconduct_dmg_\" | \"swirl_dmg_\" | \"vaporize_dmg_\" | \"melt_dmg_\" | \"burning_dmg_\" | \"crystalize_dmg_\"\r\ntype MoveDMGStatKey = \"normal_dmg_\" | \"charged_dmg_\" | \"skill_dmg_\" | \"burst_dmg_\"\r\n\r\nexport const allMainStatKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"heal_\"] as const\r\nexport const allSubstats = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"def\"] as const\r\n\r\n// TODO: Check if these actually applies\r\ntype SpecializedStatKey = \"charged_critRate_\" | \"powShield_\" | \"incHeal_\"\r\n\r\nexport type MainStatKey = typeof allMainStatKeys[number]\r\nexport type CompressMainStatKey = \"hp\" | \"hp_\" | \"atk\" | \"atk_\" | \"def_\" | \"eleMas\" | \"enerRech_\" | \"critRate_\" | \"critDMG_\" | \"physical_dmg_\" | \"ele_dmg_\" | \"heal_\"\r\nexport type SubstatKey = typeof allSubstats[number]\r\n","export default __webpack_public_path__ + \"static/media/scan_art_main.ab1cfe61.png\";","export default __webpack_public_path__ + \"static/media/snippet.d223e797.png\";","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Form, Modal, ProgressBar, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport Tesseract, { createWorker } from 'tesseract.js';\r\nimport scan_art_main from \"./imgs/scan_art_main.png\";\r\nimport Snippet from \"./imgs/snippet.png\";\r\nimport Stat from '../Stat';\r\nimport { clamp, hammingDistance } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport { allMainStatKeys, IArtifact, MainStatKey, Substat, SubstatKey } from '../Types/artifact';\r\nimport { allArtifactSets, allRarities, allSlotKeys, SlotKey } from '../Types/consts';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\n\r\nconst starColor = { r: 255, g: 204, b: 50 } //#FFCC32\r\nconst zeroProgress = { now: 0, variant: \"\" }\r\n\r\nexport default function UploadDisplay({ setState, setReset, artifactInEditor }) {\r\n  const [fileList, setFileList] = useState([] as { name: string }[])\r\n  const [fileName, setFileName] = useState(\"Click here to Upload Artifact Screenshot File\");\r\n  const [image, setImage] = useState('');\r\n\r\n  const [scanning, setScanning] = useState(false)\r\n  const [otherProgress, setOtherProgress] = useState(zeroProgress);\r\n  const [substatProgress, setSubstatProgress] = useState(zeroProgress);\r\n  const [artSetProgress, setArtSetProgress] = useState(zeroProgress);\r\n  const [texts, setTexts] = useState({} as Dict<keyof IArtifact, Displayable>)\r\n\r\n  const [modalShow, setModalShow] = useState(false)\r\n  const resetText = () => setTexts({})\r\n  const scanFile = useCallback(\r\n    async () => {\r\n      if (!fileList.length) return\r\n      const [file, ...rest] = fileList\r\n      setFileList(rest)\r\n      if (!file) return\r\n      setScanning(true)\r\n      resetText()\r\n      setFileName(file.name)\r\n      const urlFile = await fileToURL(file)\r\n      setImage(urlFile)\r\n      const [artifact, texts] = await artifactFromImage(\r\n        urlFile,\r\n        setOtherProgress,\r\n        setSubstatProgress,\r\n        setArtSetProgress\r\n      )\r\n\r\n      setTexts(texts)\r\n      setState?.(artifact)\r\n    }, [fileList, setState])\r\n\r\n  const resetState = useCallback(\r\n    () => {\r\n      setFileName(\"Click here to Upload Artifact Screenshot File\")\r\n      setImage(\"\")\r\n      setModalShow(false)\r\n      setScanning(false)\r\n\r\n      setOtherProgress(zeroProgress)\r\n      setSubstatProgress(zeroProgress)\r\n      setArtSetProgress(zeroProgress)\r\n      resetText();\r\n      //scan the next file\r\n      scanFile();\r\n    }, [scanFile])\r\n\r\n  const uploadFiles = useCallback(\r\n    (files) => setFileList([...fileList, ...files]), [fileList])\r\n  useEffect(() => {\r\n    const pasteFunc = e =>\r\n      uploadFiles(e.clipboardData.files)\r\n    window.addEventListener('paste', pasteFunc);\r\n    setReset?.(resetState);\r\n    return () =>\r\n      window.removeEventListener('paste', pasteFunc)\r\n  }, [setReset, resetState, uploadFiles])\r\n\r\n  useEffect(() => {\r\n    if (!scanning && !artifactInEditor) scanFile()\r\n  }, [scanning, artifactInEditor, fileList, scanFile])\r\n\r\n  const img = Boolean(image) && <img src={image} className=\"w-100 h-auto\" alt=\"Screenshot to parse for artifact values\" />\r\n  return (<Row>\r\n    <ExplainationModal {...{ modalShow, hide: () => setModalShow(false) }} />\r\n    <Col xs={12} className=\"mb-2\">\r\n      <Row>\r\n        <Col>\r\n          <h6 className=\"mb-0\">Parse Artifact by Uploading Image</h6>\r\n        </Col>\r\n        <Col xs=\"auto\"><Button variant=\"info\" size=\"sm\" onClick={() => {\r\n          setModalShow(true)\r\n          ReactGA.modalview('/artifact/how-to-upload')\r\n        }}>Show Me How!</Button></Col>\r\n      </Row>\r\n    </Col>\r\n    {Boolean(fileList.length) && <Col xs={12}>\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Row>\r\n          <Col className=\"p-1 ml-2\">Screenshots in file-queue: <b>{fileList.length}</b></Col>\r\n          <Col xs=\"auto\"><Button size=\"sm\" variant=\"danger\" onClick={() => setFileList([])}>Clear file-queue</Button></Col>\r\n        </Row>\r\n      </Card>\r\n    </Col>}\r\n    <Col xs={8} lg={image ? 4 : 0}>{img}</Col>\r\n    <Col xs={12} lg={image ? 8 : 12}>\r\n      {scanning && <>\r\n        <div className=\"mb-2\">\r\n          <h6 className=\"mb-0\">{`Scan${artSetProgress.now < 100 ? \"ning\" : \"ned\"} Artifact Set`}</h6>\r\n          <ProgressBar {...artSetProgress} label={`${artSetProgress.now.toFixed(1)}%`} />\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <h6 className=\"mb-0\">{`Scan${substatProgress.now < 100 ? \"ning\" : \"ned\"} Artifact Substat`}</h6>\r\n          <ProgressBar {...substatProgress} label={`${substatProgress.now.toFixed(1)}%`} />\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <h6 className=\"mb-0\">{`Scan${otherProgress.now < 100 ? \"ning\" : \"ned\"} Other`}</h6>\r\n          <ProgressBar {...otherProgress} label={`${otherProgress.now.toFixed(1)}%`} />\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <div>{texts.numStars ?? \"\"}</div>\r\n          <div>{texts.setKey ?? \"\"}</div>\r\n          <div>{texts.slotKey ?? \"\"}</div>\r\n          <div>{texts.mainStatVal ?? \"\"}</div>\r\n          <div>{texts.mainStatKey ?? \"\"}</div>\r\n          <div>{texts.level ?? \"\"}</div>\r\n          <div>{texts.substats ?? \"\"}</div>\r\n        </div>\r\n      </>}\r\n      <Form.File\r\n        type=\"file\"\r\n        className=\"mb-0\"\r\n        label={fileName}\r\n        onChange={e => {\r\n          uploadFiles(e.target.files)\r\n          e.target.value = null//reset the value so the same file can be uploaded again...\r\n        }}\r\n        accept=\"image/*\"\r\n        custom\r\n        multiple\r\n      />\r\n      {Boolean(!image) && <Form.Label className=\"mb-0\">Please Select an Image, or paste a screenshot here (Ctrl+V)</Form.Label>}\r\n    </Col>\r\n  </Row >)\r\n}\r\nfunction ExplainationModal({ modalShow, hide }) {\r\n  return <Modal show={modalShow} onHide={hide} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col><Card.Title>How do Upload Screenshots for parsing</Card.Title></Col>\r\n          <Col xs=\"auto\">\r\n            <Button variant=\"danger\" onClick={hide} >\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col xs={8} md={4}>\r\n            <img alt=\"snippet of the screen to take\" src={Snippet} className=\"w-100 h-auto\" />\r\n          </Col>\r\n          <Col xs={12} md={8}>\r\n            <p>Using screenshots can dramatically decrease the amount of time you manually input in stats on the Genshin Optimizer.</p>\r\n            <h5>Where to snip the screenshot.</h5>\r\n            <p>In game, Open your bag, and navigate to the artifacts tab. Select the artifact you want to scan with Genshin Optimizer. <b>Only artifact from this screen can be scanned.</b></p>\r\n            <h6>Single artifact</h6>\r\n            <p>To take a screenshot, in Windows, the shortcut is <strong>Shift + WindowsKey + S</strong>. Once you selected the region, the image is automatically included in your clipboard.</p>\r\n            <h6>Multiple artifacts</h6>\r\n            <p>To take advantage of batch uploads, you can use a tool like <a href=\"https://picpick.app/\" target=\"_blank\" rel=\"noreferrer\">PicPick</a> to create a macro to easily to screenshot a region to screenshot multiple artifacts at once.</p>\r\n            <h5>What to include in the screenshot.</h5>\r\n            <p>As shown in the Image, starting from the top with the artifact name, all the way to the set name(the text in green). </p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5>Adding Screenshot to Genshin Optimizer</h5>\r\n            <p>At this point, you should have the artifact snippet either saved to your harddrive, or in your clipboard.</p>\r\n            <p className=\"mb-0\">You can click on the box next to \"Browse\" to browse the files in your harddrive for multiple screenshots.</p>\r\n            <p>For single screenshots from the snippets, just press <strong>Ctrl + V</strong> to paste from your clipboard.</p>\r\n            <p>You should be able to see a Preview of your artifact snippet, and after waiting a few seconds, the artifact set and the substats will be filled in in the <b>Artifact Editor</b>.\r\n        </p>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <h5>Finishing the Artifact</h5>\r\n            <p>Unfortunately, computer vision is not 100%. There will always be cases where something is not scanned properly. You should always double check the scanned artifact values! Once the artifact has been filled, Click on <strong>Add Artifact</strong> to finish editing the artifact.</p>\r\n            <img alt=\"main screen after importing stats\" src={scan_art_main} className=\"w-75 h-auto\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"danger\" onClick={hide}>\r\n          <span>Close</span>\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nlet reader = new FileReader()\r\nfunction fileToURL(file): Promise<string> {\r\n  return new Promise(resolve => {\r\n    // let reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      resolve(reader.result as string); // TODO: May not be string\r\n    }\r\n    reader.readAsDataURL(file)\r\n  })\r\n}\r\nfunction urlToImageData(urlFile: string): Promise<ImageData> {\r\n  return new Promise(resolve => {\r\n    let img = new Image();\r\n    img.onload = () =>\r\n      resolve(getImageData(img))\r\n    img.src = urlFile\r\n  })\r\n}\r\n\r\nfunction getImageData(image: HTMLImageElement): ImageData {\r\n  const tempCanvas = document.createElement('canvas'),\r\n    tempCtx = tempCanvas.getContext('2d');\r\n  tempCanvas.width = image.width;\r\n  tempCanvas.height = image.height;\r\n  tempCtx?.drawImage(image, 0, 0, image.width, image.height);\r\n  const imageDataObj = tempCtx?.getImageData(0, 0, image.width, image.height) as ImageData; // TODO: May be undefined\r\n  return imageDataObj\r\n}\r\n\r\nfunction imageDataToURL(imageDataObj: ImageData) {\r\n  // create off-screen canvas element\r\n  let canvas = document.createElement('canvas'),\r\n    ctx = canvas.getContext('2d');\r\n\r\n  canvas.width = imageDataObj.width;\r\n  canvas.height = imageDataObj.height;\r\n\r\n  // create imageData object\r\n  let idata = ctx?.createImageData(imageDataObj.width, imageDataObj.height) as ImageData; // TODO: May be null\r\n\r\n  // set our buffer as source\r\n  idata.data.set(imageDataObj.data);\r\n\r\n  // update canvas with new data\r\n  ctx?.putImageData(idata, 0, 0);\r\n\r\n  let dataUri = canvas.toDataURL(); // produces a PNG file\r\n\r\n  return dataUri\r\n}\r\n\r\nfunction starScanning(pixels: Uint8ClampedArray, width: number, height: number, defVal = 0) {\r\n  let d = pixels, lastRowNum = 0, rowsWithNumber = 0;\r\n  for (let y = 0; y < height; y++) {\r\n    let star = 0, onStar = false;\r\n    for (let x = 0; x < width; x++) {\r\n      let i = (y * width + x) * 4\r\n      let r = d[i], g = d[i + 1], b = d[i + 2];\r\n      if (colorCloseEnough({ r, g, b }, starColor)) {\r\n        if (!onStar) {\r\n          onStar = true\r\n          star++\r\n        }\r\n      } else {\r\n        onStar = false\r\n      }\r\n    }\r\n\r\n    if (lastRowNum !== star) {\r\n      lastRowNum = star\r\n      rowsWithNumber = 1;\r\n    } else if (lastRowNum) {\r\n      rowsWithNumber++\r\n      if (rowsWithNumber >= 10) return lastRowNum\r\n    }\r\n  }\r\n  return defVal\r\n}\r\n\r\nfunction colorCloseEnough(color1, color2, threshold = 5) {\r\n  const intCloseEnough = (a, b) => (Math.abs(a - b) <= threshold)\r\n  return intCloseEnough(color1.r, color2.r) &&\r\n    intCloseEnough(color1.g, color2.g) &&\r\n    intCloseEnough(color1.b, color2.b)\r\n}\r\n\r\nfunction parseSubstat(texts: string[]): Substat[] | null {\r\n  let matches: { value: string | number, unit: string, key: SubstatKey }[] = []\r\n  for (let text of texts) {\r\n    text = text.replace(/^[\\W]+/, \"\").replace(/\\n/, \"\")\r\n    //parse substats\r\n    Artifact.getSubstatKeys().forEach(key => {\r\n      let regex: RegExp\r\n      let unit = Stat.getStatUnit(key)\r\n      let name = Stat.getStatNameRaw(key)\r\n      if (unit === \"%\") regex = new RegExp(name + \"\\\\s*\\\\+\\\\s*(\\\\d+[\\\\.|,]+\\\\d)%\", \"im\");\r\n      else regex = new RegExp(name + \"\\\\s*\\\\+\\\\s*(\\\\d+,\\\\d+|\\\\d+)($|\\\\s)\", \"im\");\r\n      let match = regex.exec(text)\r\n      match && matches.push({ value: match[1].replace(/,/g, \".\").replace(/\\.{2,}/g, \".\"), unit, key })\r\n    })\r\n  }\r\n  matches.forEach((match, i) => {\r\n    if (i >= 4) return;//this shouldn't happen, just in case\r\n    match.value = match.unit === \"%\" ? parseFloat(match.value as string) : parseInt(match.value as string)\r\n  })\r\n  let substats: Substat[] = []\r\n  for (let i = 0; i < 4; i++) {\r\n    if (matches[i]) substats.push({ key: matches[i].key, value: matches[i].value as number })\r\n    else substats.push({ key: \"\", value: 0 })\r\n  }\r\n  return substats\r\n}\r\nfunction parseMainStatKey(texts: string[]): MainStatKey | \"def\" | \"\" {\r\n  for (const text of texts)\r\n    for (const key of allMainStatKeys) {\r\n      if (text.toLowerCase().includes(Stat.getStatNameRaw(key).toLowerCase()))\r\n        return key\r\n      //use fuzzy compare on the ... Bonus texts. heal_ is included.\r\n      if (key.includes(\"_bonu\") && hammingDistance(text.replace(/\\W/g, ''), Stat.getStatNameRaw(key).replace(/\\W/g, '')) <= 1)\r\n        return key\r\n    }\r\n  return \"\"\r\n}\r\nfunction parseSetKey(texts: string[], sheets, defVal = \"\") {\r\n  //parse for sets\r\n  for (const text of texts)\r\n    for (const key of allArtifactSets)\r\n      if (hammingDistance(text.replace(/\\W/g, ''), sheets[key].name.replace(/\\W/g, '')) <= 2)\r\n        return key\r\n}\r\nfunction parseSlotKey(texts: string[]): SlotKey | undefined {\r\n  //parse for slot\r\n  for (const text of texts)\r\n    for (const key of allSlotKeys)\r\n      if (hammingDistance(text.replace(/\\W/g, ''), Artifact.slotName(key).replace(/\\W/g, '')) <= 2)\r\n        return key;\r\n}\r\n// function parseLevel(text) {\r\n//   let regex = /\\+(\\d{1,2})/\r\n//   let match = regex.exec(text)\r\n//   if (match) return parseInt(match[1])\r\n//   return NaN\r\n// }\r\nfunction parseMainStatvalue(texts: string[]): { mainStatValue: number, unit?: string } {\r\n  for (const text of texts) {\r\n    let regex = /(\\d+[,|\\\\.]+\\d)%/\r\n    let match = regex.exec(text)\r\n    if (match) return { mainStatValue: parseFloat(match[1].replace(/,/g, \".\").replace(/\\.{2,}/g, \".\")), unit: \"%\" }\r\n    regex = /(\\d+[,|\\\\.]\\d{3}|\\d{2,3})/\r\n    match = regex.exec(text)\r\n    if (match) return { mainStatValue: parseInt(match[1].replace(/[,|\\\\.]+/g, \"\")) }\r\n  }\r\n  return { mainStatValue: NaN }\r\n}\r\n\r\nasync function artifactFromImage(urlFile: string, setOtherProgress, setSubstatProgress, setArtSetProgress): Promise<[IArtifact, Dict<keyof IArtifact, Displayable>]> {\r\n  const texts = {} as Dict<keyof IArtifact, Displayable>\r\n  const imageDataObj = await urlToImageData(urlFile)\r\n  const awaits = [\r\n    // slotkey, mainStatValue, level\r\n    linesFromImage(bandPass(imageDataObj, [140, 140, 140], [255, 255, 255], { region: \"top\", mode: \"bw\" }), setOtherProgress),\r\n    // substats\r\n    linesFromImage(bandPass(imageDataObj, [30, 50, 80], [160, 160, 160], { region: \"bot\" }), setSubstatProgress),\r\n    // artifact set, look for greenish texts\r\n    linesFromImage(bandPass(imageDataObj, [30, 160, 30], [200, 255, 200], { region: \"bot\", mode: \"bw\" }), setArtSetProgress),\r\n  ]\r\n  let numStars = clamp(starScanning(imageDataObj.data, imageDataObj.width, imageDataObj.height, 5), 3, 5)\r\n  let numStarsText = <span>Detected <span className=\"text-success\">{numStars}</span> Stars.</span>\r\n\r\n  const sheets = await ArtifactSheet.getAll()\r\n  let [whiteTexts, substatTexts, artifactSetTexts] = await Promise.all(awaits)\r\n\r\n  let setKey = parseSetKey(artifactSetTexts.map(x => x.text), sheets)\r\n  let slotKey = parseSlotKey(whiteTexts.map(x => x.text))\r\n  let substats = parseSubstat(substatTexts.map(x => x.text))\r\n  let level = NaN//looks like the level isnt consistently parsed.\r\n  let mainStatKey = parseMainStatKey(whiteTexts.map(x => x.text))\r\n  let { mainStatValue, unit = \"\" } = parseMainStatvalue(whiteTexts.map(x => x.text))\r\n\r\n  const sheet = setKey ? sheets[setKey] : undefined\r\n\r\n  if (mainStatValue)\r\n    texts.mainStatVal = <span>Detected Main Stat value to be <span className=\"text-success\">{mainStatValue}{unit}</span>.</span>\r\n  else\r\n    texts.mainStatVal = <span className=\"text-warning\">Could not detect main stat value.</span>\r\n  //the main stat value is used to distinguish main stats between % and flat\r\n  if (mainStatKey === \"hp\" || mainStatKey === \"def\" || mainStatKey === \"atk\")\r\n    if (unit === \"%\" || (slotKey && Artifact.slotMainStats(slotKey).includes(`${mainStatKey}_` as MainStatKey)))\r\n      mainStatKey = `${mainStatKey}_` as any\r\n  if (slotKey && !Artifact.slotMainStats(slotKey).includes(mainStatKey as any))\r\n    mainStatKey = \"\"\r\n\r\n  if (mainStatKey)\r\n    texts.mainStatKey = <span>Detected main stat: <span className=\"text-success\">{Stat.getStatNameRaw(mainStatKey)}</span></span>\r\n\r\n  if (setKey && numStars)\r\n    if (!sheet?.rarity.includes(numStars)) {\r\n      numStars = sheet?.rarity[0] ?? 4\r\n      numStarsText = <span className=\"text-danger\">Could not detect artifact rarity.</span>\r\n    }\r\n\r\n  //if main stat isnt parsed, then we try to guess it\r\n  if (slotKey && !mainStatKey) {\r\n    let stats = Artifact.slotMainStats(slotKey)\r\n    if (stats.length === 1) {\r\n      mainStatKey = stats[0]\r\n      texts.mainStatKey = <span className=\"text-warning\">Main stat was not successfully detected. Since artifact is of \"{Artifact.slotName(slotKey)}\", main stat: <span className=\"text-danger\">{Stat.getStatName(mainStatKey)}</span>.</span>\r\n    } else {\r\n      stats = stats.filter(stat => {\r\n        if (mainStatValue && unit !== Stat.getStatUnit(stat)) return false\r\n        if (substats && substats.some(substat => substat.key === stat)) return false\r\n        if (mainStatValue && numStars && level && Artifact.mainStatValue(stat, numStars, level) !== mainStatValue) return false\r\n        return true\r\n      });\r\n      if (stats.length > 0) {\r\n        mainStatKey = stats[0]\r\n        texts.mainStatKey = <span className=\"text-warning\">Main stat was not successfully detected. Inferring main stat: <span className=\"text-danger\">{Stat.getStatName(mainStatKey)}</span>.</span>\r\n      }\r\n    }\r\n  }\r\n\r\n  let guessLevel = (nStars, mainSKey, mainSVal) => {\r\n    //if level isn't parsed, then we try to guess it\r\n    let mainStatValues = Artifact.mainStatValues(nStars, mainSKey.includes(\"ele_dmg_\") ? \"ele_dmg_\" : mainSKey)\r\n    if (mainStatValues.length > 0) {\r\n      let isFloat = Stat.getStatUnit(mainSKey) === \"%\"\r\n      let testLevel = mainStatValues.findIndex(val => isFloat ? (Math.abs(mainSVal - val) < 0.1) : (mainSVal === val))\r\n      if (testLevel !== -1) {\r\n        level = testLevel\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  //guess level when we have all the stats\r\n  if (isNaN(level) && numStars && mainStatKey && mainStatValue)\r\n    guessLevel(numStars, mainStatKey, mainStatValue)\r\n  let detectedlevel = !isNaN(level)\r\n  if (!isNaN(level)) texts.level = <span>Detected level: <span className=\"text-success\">{level}</span></span>\r\n\r\n  //try to guess the level when we only have mainStatKey and mainStatValue\r\n  if (isNaN(level) && mainStatKey && mainStatValue) {\r\n    let stars = sheet?.rarity ?? allRarities\r\n    for (const nStar of stars)\r\n      if (guessLevel(nStar, mainStatKey, mainStatValue)) {\r\n        if (sheet?.rarity.includes(nStar) ?? true) {\r\n          numStars = nStar\r\n          numStarsText = <span className=\"text-warning\">Inferred <span className=\"text-success\">{numStars}</span> Stars from Artifact Set.</span>\r\n          break;\r\n        }\r\n      }\r\n  }\r\n  if (!isNaN(level) && !detectedlevel) texts.level = <span className=\"text-warning\">Inferred level: <span className=\"text-danger\">{level}</span></span>\r\n\r\n  //check level validity against numStars\r\n  if (numStars && !isNaN(level))\r\n    if (level > numStars * 4)\r\n      level = NaN\r\n\r\n  //check if the final star values are valid\r\n  numStars = clamp(numStars, 3, 5)\r\n\r\n  //if the level is not parsed at all after all the prevous steps, default it to the highest level of the star value\r\n  if (isNaN(level)) {\r\n    level = numStars * 4\r\n    texts.level = <span className=\"text-warning\">Could not detect artifact level. Default to: <span className=\"text-danger\">{level}</span></span>\r\n  }\r\n\r\n\r\n  //try to infer slotKey if could not be detected.\r\n  if (slotKey) {\r\n    texts.slotKey = <span>Detected slot name <span className=\"text-success\">{Artifact.slotName(slotKey)}</span></span>\r\n  } else if (mainStatKey) {\r\n    //infer slot name from main stat\r\n    let pieces = setKey ? Object.keys(sheet!.slotNames) as SlotKey[] : allSlotKeys\r\n    for (const testSlotKey of pieces) {\r\n      if (Artifact.slotMainStats(testSlotKey).includes(mainStatKey as any)) {\r\n        slotKey = testSlotKey;\r\n        texts.slotKey = <span className=\"text-warning\">Slot name was not successfully detected. Inferring slot name: <span className=\"text-danger\">{Artifact.slotName(slotKey)}</span>.</span>\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  let state: Partial<IArtifact> = {}\r\n  if (!isNaN(level)) state.level = level\r\n  else state.level = 0\r\n\r\n  if (setKey) {\r\n    state.setKey = setKey as any\r\n    texts.setKey = <span>Detected set <span className=\"text-success\">{sheet?.name}</span></span>\r\n  } else {\r\n    texts.setKey = <span className=\"text-danger\">Could not detect artifact set name.</span>\r\n    state.setKey = \"ArchaicPetra\"\r\n  }\r\n\r\n  if (slotKey) {\r\n    state.slotKey = slotKey\r\n  } else {\r\n    texts.slotKey = <span className=\"text-danger\">Could not detect slot name.</span>\r\n    state.slotKey = \"circlet\"\r\n  }\r\n\r\n  if (substats) {\r\n    state.substats = substats\r\n    let len = substats.reduce((accu, substat) => accu + (substat.key ? 1 : 0), 0)\r\n    let { low } = Artifact.rollInfo(numStars)\r\n    if (numStars && len < low)\r\n      texts.substats = <span className=\"text-warning\">Detected {len} substats, but there should be at least {low} substats.</span>\r\n    else\r\n      texts.substats = <span>Detected <span className=\"text-success\">{len}</span> substats.</span>\r\n  } else {\r\n    texts.substats = <span className=\"text-danger\">Could not detect any substats.</span>\r\n    state.substats = []\r\n  }\r\n  for (let i = state.substats!.length; i < 4; i++)\r\n    state.substats.push({ key: \"\", value: 0 })\r\n\r\n  if (numStars) {\r\n    state.numStars = numStars\r\n    texts.numStars = numStarsText\r\n  } else {\r\n    state.numStars = sheet?.rarity[0] ?? 4\r\n  }\r\n  if (mainStatKey) {\r\n    state.mainStatKey = mainStatKey as any\r\n  } else {\r\n    texts.mainStatKey = <span className=\"text-danger\">Could not detect main stat.</span>\r\n    state.mainStatKey = Artifact.slotMainStats(state.slotKey)[0]\r\n  }\r\n\r\n  return [state as IArtifact, texts]\r\n}\r\n\r\nasync function linesFromImage(imageDataObj: ImageData, setProgress): Promise<Tesseract.Line[]> {\r\n  const tworker = createWorker({\r\n    logger: ({ progress, status }) => {\r\n      if (status === \"loading tesseract core\")\r\n        setProgress({ now: progress * 5 + 0, variant: \"danger\" })\r\n      else if (status.includes(\"loading language traineddata\"))\r\n        setProgress({ now: progress * 5 + 5, variant: \"warning\" })\r\n      else if (status.includes(\"initializing api\"))\r\n        setProgress({ now: progress * 5 + 10, variant: \"info\" })\r\n      else if (status === \"recognizing text\")\r\n        setProgress({ now: progress * 85 + 15, variant: \"success\" })\r\n    },\r\n    errorHandler: console.error\r\n  })\r\n  await tworker.load()\r\n  await tworker.loadLanguage('eng')\r\n  await tworker.initialize('eng')\r\n\r\n  const imageURL = imageDataToURL(imageDataObj)\r\n  const rec = await tworker.recognize(imageURL)\r\n  await tworker.terminate()\r\n  return rec.data.lines\r\n}\r\nfunction bandPass(pixelData: ImageData, color1: Color, color2: Color, options: { region?: \"top\" | \"bot\" | \"all\", mode?: \"bw\" | \"color\" | \"invert\" }) {\r\n  const { region = \"all\", mode = \"color\" } = options\r\n  const d = Uint8ClampedArray.from(pixelData.data)\r\n  const top = region === \"top\", bot = region === \"bot\", all = region === \"all\"\r\n  const bw = mode === \"bw\", invert = mode === \"invert\"\r\n  const halfInd = Math.floor(pixelData.width * (pixelData.height / 2) * 4)\r\n  for (let i = 0; i < d.length; i += 4) {\r\n    const r = d[i], g = d[i + 1], b = d[i + 2];\r\n    if ((all || (top && i < halfInd) || (bot && i > halfInd)) &&\r\n      r >= color1[0] && r <= color2[0] &&\r\n      g >= color1[1] && g <= color2[1] &&\r\n      b >= color1[2] && b <= color2[2]) {\r\n      if (bw) d[i] = d[i + 1] = d[i + 2] = 0\r\n      else if (invert) {\r\n        d[i] = 255 - r\r\n        d[i + 1] = 255 - g\r\n        d[i + 2] = 255 - b\r\n      } // else orignal color\r\n    } else {\r\n      d[i] = d[i + 1] = d[i + 2] = 255\r\n    }\r\n  }\r\n  return new ImageData(d, pixelData.width, pixelData.height)\r\n}\r\n\r\ntype Color = [number, number, number] // RGB\r\n","import { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useMemo, useReducer } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Dropdown, DropdownButton, FormControl, InputGroup, OverlayTrigger, Popover, Row } from 'react-bootstrap';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { allSubstats, IArtifact, Substat, SubstatKey } from '../Types/artifact';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport { clamp, deepClone, getRandomElementFromArray, getRandomIntInclusive } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport ArtifactCard from './ArtifactCard';\r\nimport PercentBadge from './PercentBadge';\r\nimport UploadDisplay from './UploadDisplay';\r\nimport { allArtifactSets, Rarity, SlotKey } from '../Types/consts';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport { usePromise } from '../Util/ReactUtil';\r\n\r\nlet uploadDisplayReset\r\nexport default function ArtifactEditor({ artifactIdToEdit, cancelEdit }) {\r\n  const [artifact, artifactDispatch] = useReducer(artifactReducer, undefined)\r\n  const artifactInEditor = useMemo(() => !ArtifactDatabase.isInvalid(artifact), [artifact])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const sheet = artifact ? artifactSheets?.[artifact.setKey] : undefined\r\n\r\n  useEffect(() => {\r\n    if (artifactIdToEdit && artifactIdToEdit !== artifact?.id)\r\n      artifactDispatch({ type: \"overwrite\", artifact: deepClone(ArtifactDatabase.get(artifactIdToEdit)) })\r\n  }, [artifactIdToEdit, artifact?.id])\r\n\r\n  const getUpdloadDisplayReset = reset => uploadDisplayReset = reset\r\n\r\n  const reset = () => {\r\n    cancelEdit?.();\r\n    uploadDisplayReset?.()\r\n    artifactDispatch({ type: \"reset\" })\r\n  }\r\n  const update = (newValue: Partial<IArtifact>) => {\r\n    const newSheet = newValue.setKey ? artifactSheets![newValue.setKey] : sheet!\r\n\r\n    function pick<T>(value: T | undefined, available: readonly T[], prefer?: T): T {\r\n      return (value && available.includes(value)) ? value : (prefer ?? available[0])\r\n    }\r\n\r\n    if (newValue.setKey) {\r\n      newValue.numStars = pick(artifact?.numStars, newSheet.rarity, Math.max(...newSheet.rarity) as Rarity)\r\n      newValue.slotKey = pick(artifact?.slotKey, Object.keys(newSheet.slotNames))\r\n    }\r\n    if (newValue.numStars)\r\n      newValue.level = artifact?.level ?? 0\r\n    if (newValue.level)\r\n      newValue.level = clamp(newValue.level, 0, 4 * (newValue.numStars ?? artifact!.numStars))\r\n    if (newValue.slotKey)\r\n      newValue.mainStatKey = pick(artifact?.mainStatKey, Artifact.slotMainStats(newValue.slotKey))\r\n\r\n    if (newValue.mainStatKey) {\r\n      newValue.substats = [0, 1, 2, 3].map(i =>\r\n        (artifact && artifact.substats[i].key !== newValue.mainStatKey) ? artifact!.substats[i] : { key: \"\", value: 0 })\r\n    }\r\n    artifactDispatch({ type: \"update\", artifact: newValue })\r\n  }\r\n  const setSubstat = (index: number, substat: Substat) => {\r\n    artifactDispatch({ type: \"substat\", index, substat })\r\n  }\r\n\r\n  const { dupId, isDup } = useMemo(() => checkDuplicate(artifact), [artifact])\r\n  const { numStars = 5, level = 0, slotKey = \"flower\" } = artifact ?? {}\r\n  const errMsgs = artifact ? Artifact.substatsValidation(artifact) : []\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header>Artifact Editor</Card.Header>\r\n    <Card.Body>\r\n      <Row>\r\n        {/* Left column */}\r\n        <Col xs={12} lg={6}>\r\n          {/* set & rarity */}\r\n          <InputGroup className=\"w-100 d-flex mb-2\">\r\n            {/* Artifact Set */}\r\n            <Dropdown as={InputGroup.Prepend} className=\"flex-grow-1\">\r\n              <Dropdown.Toggle className=\"w-100\" variant={artifact ? \"success\" : \"primary\"}>\r\n                {sheet?.name ?? \"Artifact Set\"}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                {artifactSheets && ArtifactSheet.namesByMaxRarities(artifactSheets).map(([rarity, sets], i) =>\r\n                  <React.Fragment key={rarity}>\r\n                    {i > 0 && <Dropdown.Divider />}\r\n                    <Dropdown.ItemText>Max Rarity <Stars stars={rarity} /></Dropdown.ItemText>\r\n                    {sets.map(([setKey, name]) =>\r\n                      <Dropdown.Item key={setKey} onClick={() => update({ setKey })}>\r\n                        {name}\r\n                      </Dropdown.Item >)}\r\n                  </React.Fragment>)}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            {/* rarity dropdown */}\r\n            <DropdownButton as={InputGroup.Append} title={artifact ? <Stars stars={numStars} /> : \"Rarity\"} disabled={!sheet} variant={artifact ? \"success\" : \"primary\"}>\r\n              {([5, 4, 3] as Rarity[]).map((numStars, index) => <Dropdown.Item key={index} disabled={!sheet?.rarity.includes(numStars)} onClick={() => update({ numStars })}>\r\n                {<Stars stars={numStars} />}\r\n              </Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </InputGroup>\r\n\r\n          {/* level */}\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Level</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <CustomFormControl value={level} disabled={!sheet} placeholder={`0~${numStars * 4}`} onChange={l => update({ level: l })} />\r\n            <InputGroup.Append>\r\n              <Button onClick={() => update({ level: 0 })} disabled={!sheet || level === 0}>0</Button>\r\n              <Button onClick={() => update({ level: level - 1 })} disabled={!sheet || level === 0}>-</Button>\r\n              <Button onClick={() => update({ level: level + 1 })} disabled={!sheet || level === (numStars * 4)}>+</Button>\r\n              <Button onClick={() => update({ level: numStars * 4 })} disabled={!sheet || level === (numStars * 4)}>{numStars * 4}</Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n\r\n          {/* slot */}\r\n          <InputGroup className=\"mb-2\">\r\n            <DropdownButton\r\n              title={Artifact.slotNameWithIcon(slotKey)}\r\n              disabled={!sheet}\r\n              variant={artifact ? \"success\" : \"primary\"}\r\n              as={InputGroup.Prepend}\r\n            >\r\n              {Object.keys(sheet?.slotNames ?? {}).map((sKey: SlotKey) =>\r\n                <Dropdown.Item key={sKey as any} onClick={() => update({ slotKey: sKey })} >\r\n                  {Artifact.slotNameWithIcon(sKey)}\r\n                </Dropdown.Item>)}\r\n            </DropdownButton>\r\n            <FormControl\r\n              value={sheet?.slotNames[artifact!.slotKey] ?? \"Unknown Piece Name\"}\r\n              disabled\r\n              readOnly\r\n            />\r\n          </InputGroup>\r\n\r\n          {/* main stat */}\r\n          <InputGroup className=\"mb-2\">\r\n            <DropdownButton\r\n              title={<b>{artifact ? Stat.getStatNameWithPercent(artifact.mainStatKey) : \"Main Stat\"}</b>}\r\n              disabled={!sheet}\r\n              variant={artifact ? \"success\" : \"primary\"}\r\n              as={InputGroup.Prepend}\r\n            >\r\n              <Dropdown.ItemText>Select a Main Artifact Stat </Dropdown.ItemText>\r\n              {Artifact.slotMainStats(slotKey).map(mainStatK =>\r\n                <Dropdown.Item key={mainStatK} onClick={() => update({ mainStatKey: mainStatK })} >\r\n                  {Stat.getStatNameWithPercent(mainStatK)}\r\n                </Dropdown.Item>)}\r\n            </DropdownButton>\r\n            <FormControl\r\n              value={artifact ? `${Artifact.mainStatValue(artifact.mainStatKey, numStars, level)}${Stat.getStatUnit(artifact.mainStatKey)}` : \"Main Stat\"}\r\n              disabled\r\n              readOnly\r\n            />\r\n          </InputGroup>\r\n\r\n          {/* Current Substat Efficiency */}\r\n          <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n            <Card.Body className=\"py-1 px-2\">\r\n              <Row>\r\n                <Col className=\"text-center\"><span >Current Substat Efficiency </span></Col>\r\n                <Col xs=\"auto\">\r\n                  <PercentBadge valid={!errMsgs.length} value={errMsgs.length ? \"ERR\" : (artifact?.currentEfficiency ?? 0)} />\r\n                  <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={<Popover id=\"current-efficiency\">\r\n                      <Popover.Title as=\"h5\">Current Substat Efficiency</Popover.Title>\r\n                      <Popover.Content>\r\n                        <span>Every 4 artifact upgrades, you get a substat roll. <strong>Substat Efficiency</strong> calculates how high the substat rolled as a percentage.</span>\r\n                      </Popover.Content>\r\n                    </Popover>}\r\n                  >\r\n                    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n                  </OverlayTrigger>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          {/* Maximum Substat Efficiency */}\r\n          <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n            <Card.Body className=\"py-1 px-2\">\r\n              <Row>\r\n                <Col className=\"text-center\"><span>Maximum Substat Efficiency </span></Col>\r\n                <Col xs=\"auto\">\r\n                  <PercentBadge valid={!errMsgs.length} value={errMsgs.length ? \"ERR\" : (artifact?.maximumEfficiency ?? 0)} />\r\n                  <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={<Popover id=\"max-efficiency\">\r\n                      <Popover.Title as=\"h5\">Maximum Substat Efficiency</Popover.Title>\r\n                      <Popover.Content>\r\n                        <span>The <strong>Maximum Substat Efficiency</strong> of an artifact calculates the efficiency if the remaining upgrades rolled their maximum values.</span>\r\n                      </Popover.Content>\r\n                    </Popover>}\r\n                  >\r\n                    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n                  </OverlayTrigger>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Right column */}\r\n        <Col xs={12} lg={6}>\r\n          {/* substat selections */}\r\n          {[0, 1, 2, 3].map((index) =>\r\n            <SubstatInput key={\"substat\" + index} className=\"mb-2\" {...{ index, artifact, setSubstat }} />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-n2\">\r\n        {/* Image OCR */}\r\n        <Col xs={12} className=\"mb-2\">\r\n          {/* TODO: artifactDispatch not overwrite */}\r\n          <UploadDisplay setState={state => artifactDispatch({ type: \"overwrite\", artifact: state })} setReset={getUpdloadDisplayReset} artifactInEditor={artifactInEditor} />\r\n        </Col>\r\n        {/* Duplicate/Updated/Edit UI */}\r\n        {(dupId || artifact?.id) && <Col xs={12} className=\"mb-2\">\r\n          <Row className=\"d-flex justify-content-around mb-n2\">\r\n            <Col lg={4} md={6} className=\"mb-2\">\r\n              <h6 className=\"text-center\">Artifact Editor Preview</h6>\r\n              <div><ArtifactCard artifactObj={artifact} /></div>\r\n            </Col>\r\n            <Col lg={4} md={6} className=\"mb-2\">\r\n              <h6 className=\"text-center\">{dupId ? `Detected ${isDup ? \"Duplicate\" : \"Upgraded\"} Artifact` : `Before Edit`}</h6>\r\n              <div><ArtifactCard artifactId={dupId || artifact?.id} /></div>\r\n            </Col>\r\n          </Row>\r\n        </Col>}\r\n        {/* Error alert */}\r\n        {Boolean(errMsgs.length) && <Col xs={12} className=\"mb-2\">\r\n          <Alert variant=\"danger\" className=\"py-2 px-3 mb-0 \">{errMsgs.map((e, i) => <div key={i}>{e}</div>)}</Alert>\r\n        </Col>}\r\n      </Row></Card.Body>\r\n    <Card.Footer>\r\n      <Button className=\"mr-2\" onClick={() => { saveArtifact(artifact!, artifact!.id); reset() }} disabled={ArtifactDatabase.isInvalid(artifact) || errMsgs.length} variant={dupId ? \"warning\" : \"primary\"}>\r\n        {artifact?.id ? \"Save Artifact\" : \"Add Artifact\"}\r\n      </Button>\r\n      <Button className=\"mr-2\" disabled={!artifactInEditor} onClick={() => { canClearArtifact() && reset() }} variant=\"success\">Clear</Button>\r\n      {process.env.NODE_ENV === \"development\" && <Button variant=\"info\" onClick={async () => artifactDispatch({ type: \"overwrite\", artifact: await randomizeArtifact() })}>Randomize</Button>}\r\n      {Boolean(dupId) && <Button className=\"float-right\" onClick={() => { saveArtifact(artifact!, dupId); reset() }} disabled={ArtifactDatabase.isInvalid(artifact) || errMsgs.length} variant=\"success\">Update Artifact</Button>}\r\n    </Card.Footer>\r\n  </Card >\r\n}\r\n\r\nfunction SubstatInput({ index, artifact, setSubstat, className }: { index: number, artifact: IArtifact | undefined, setSubstat: (index: number, substat: Substat) => void, className }) {\r\n  const { mainStatKey = \"\", substats = [] } = artifact ?? {}\r\n  const { key = \"\", value = 0, rolls = [], efficiency = 0 } = artifact?.substats[index] ?? {}\r\n\r\n  const accurateValue = rolls.reduce((a, b) => a + b, 0)\r\n  const unit = Stat.getStatUnit(key), rollNum = rolls.length\r\n\r\n  let error: string = \"\", rollData: number[] = [], allowedRolls = 0, rollLabel: Displayable | null = null\r\n\r\n  if (artifact) {\r\n    //account for the rolls it will to fill all 4 substates, +1 for its base roll\r\n    const numStars = artifact.numStars\r\n    const { numUpgrades, high } = Artifact.rollInfo(numStars)\r\n    const maxRollNum = numUpgrades + high - 3;\r\n    allowedRolls = maxRollNum - rollNum\r\n    rollData = Artifact.getSubstatRollData(key, numStars)\r\n  }\r\n  const rollOffset = 7 - rollData.length\r\n\r\n  if (!rollNum && key && value) error = error || `Cannot calculate stat rolls.`\r\n  if (allowedRolls < 0) error = error || `Substat cannot be rolled more than ${allowedRolls + rollNum} times.`\r\n\r\n  if (!error) {\r\n    const rollBadge = <Badge variant={rollNum === 0 ? \"secondary\" : `${rollNum}roll`} className=\"text-darkcontent\">\r\n      {rollNum ? rollNum : \"No\"} Roll{(rollNum > 1 || rollNum === 0) && \"s\"}\r\n    </Badge>\r\n    const rollArr = rolls.map((val, i) =>\r\n      <span key={i} className={`mr-2 text-${rollOffset + rollData.indexOf(val)}roll`}>{valueString(val, unit)}</span>)\r\n\r\n    rollLabel = <Row>\r\n      <Col>{rollBadge} {rollArr}</Col>\r\n      <Col xs=\"auto\">Efficiency: <PercentBadge valid={true} value={efficiency ? efficiency : \"No Stat\"} /></Col>\r\n    </Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className={className}>\r\n    <InputGroup>\r\n      <DropdownButton\r\n        title={Stat.getStatNameWithPercent(key, `Substat ${index + 1}`)}\r\n        disabled={!artifact}\r\n        variant={key ? \"success\" : \"primary\"}\r\n        as={InputGroup.Prepend}\r\n      >\r\n        {Boolean(key) && <Dropdown.Item key={key} onClick={() => setSubstat(index, { key: \"\", value: 0 })}>No Substat</Dropdown.Item>}\r\n        {allSubstats\r\n          .filter(key => mainStatKey !== key && substats.every(other => other.key !== key))\r\n          .map(key =>\r\n            <Dropdown.Item key={key} onClick={() => setSubstat(index, { key, value: 0 })} >\r\n              {Stat.getStatNameWithPercent(key)}\r\n            </Dropdown.Item>\r\n          )}\r\n      </DropdownButton>\r\n      <CustomFormControl\r\n        float={unit === \"%\"}\r\n        placeholder=\"Select a Substat.\"\r\n        value={key ? value : \"\"}\r\n        onChange={(value) => setSubstat(index, { key, value })}\r\n        disabled={!key}\r\n        allowEmpty\r\n      />\r\n      {<ButtonGroup size=\"sm\" as={InputGroup.Append}>\r\n        {rollData.map((v, i) => {\r\n          const newValue = valueString(accurateValue + v, unit)\r\n          return <Button key={i} variant={`${rollOffset + i}roll`} className=\"py-0 text-darkcontent\" disabled={(value && !rollNum) || allowedRolls <= 0} onClick={() => setSubstat(index, { key, value: parseFloat(newValue) })}>{newValue}</Button>\r\n        })}\r\n      </ButtonGroup>}\r\n    </InputGroup>\r\n    <div className=\"p-1\">{error && <Badge variant=\"danger\">ERR</Badge>}{error || rollLabel}</div>\r\n  </Card >\r\n}\r\n\r\ntype ResetMessage = { type: \"reset\" }\r\ntype SubstatMessage = { type: \"substat\", index: number, substat: Substat }\r\ntype OverwriteMessage = { type: \"overwrite\", artifact: IArtifact }\r\ntype UpdateMessage = { type: \"update\", artifact: Partial<IArtifact> }\r\ntype Message = ResetMessage | SubstatMessage | OverwriteMessage | UpdateMessage\r\nexport function artifactReducer(state: IArtifact | undefined, action: Message): IArtifact | undefined {\r\n  switch (action.type) {\r\n    case \"reset\": return\r\n    case \"substat\": {\r\n      const { index, substat } = action\r\n      state!.substats[index] = substat\r\n      return { ...state! }\r\n    }\r\n    case \"overwrite\": return action.artifact\r\n    case \"update\": return { ...state!, ...action.artifact }\r\n  }\r\n}\r\n\r\nfunction checkDuplicate(editorArt: IArtifact | undefined): { dupId?: string, isDup: boolean } {\r\n  if (!editorArt) return { isDup: false }\r\n  const { id, setKey, numStars, level, slotKey, mainStatKey, substats } = editorArt\r\n  if (id) return { isDup: false }\r\n\r\n  //check for a \"upgrade\" or duplicate\r\n  const artifacts = Object.values(ArtifactDatabase.getArtifactDatabase()).filter(candidate =>\r\n    setKey === candidate.setKey &&\r\n    numStars === candidate.numStars &&\r\n    slotKey === candidate.slotKey &&\r\n    mainStatKey === candidate.mainStatKey &&\r\n    level >= candidate.level &&\r\n    candidate.substats.every(candidateSubstat =>\r\n      !candidateSubstat.key || substats.some(substat =>\r\n        substat.key === candidateSubstat.key &&\r\n        substat.value >= candidateSubstat.value\r\n      )))\r\n  if (!artifacts.length) return { isDup: false }\r\n\r\n  const dupArtifacts = artifacts.filter(candidate =>\r\n    level === candidate.level &&\r\n    substats.every(substat =>\r\n      !substat.key || candidate.substats.some(candidateSubstat =>\r\n        substat.key === candidateSubstat.key &&\r\n        substat.value === candidateSubstat.value\r\n      )))\r\n\r\n  const dupId = dupArtifacts[0]?.id! ?? artifacts[0].id!\r\n  return { dupId, isDup: dupArtifacts.length > 0 }\r\n}\r\n\r\nasync function randomizeArtifact(): Promise<IArtifact> {\r\n  const set = getRandomElementFromArray(allArtifactSets)\r\n  const sheet = await ArtifactSheet.get(set)!\r\n  const rarity = getRandomElementFromArray(sheet.rarity)\r\n  const slot = getRandomElementFromArray(Object.keys(sheet.slotNames))\r\n  const mainStatKey = getRandomElementFromArray(Artifact.slotMainStats(slot))\r\n  const level = getRandomIntInclusive(0, rarity * 4)\r\n  const substats: Substat[] = [0, 1, 2, 3].map(i => ({ key: \"\", value: 0 }))\r\n\r\n  const { low, high } = Artifact.rollInfo(rarity)\r\n  const totRolls = Math.floor(level / 4) + getRandomIntInclusive(low, high)\r\n  const numOfInitialSubstats = Math.min(totRolls, 4)\r\n  const numUpgradesOrUnlocks = totRolls - numOfInitialSubstats\r\n\r\n  const RollStat = (substat: SubstatKey): number =>\r\n    getRandomElementFromArray(Artifact.getSubstatRollData(substat, rarity))\r\n\r\n  let remainingSubstats = allSubstats.filter(key => mainStatKey !== key)\r\n  for (const substat of substats.slice(0, numOfInitialSubstats)) {\r\n    substat.key = getRandomElementFromArray(remainingSubstats)\r\n    substat.value = RollStat(substat.key)\r\n    remainingSubstats = remainingSubstats.filter(key => key !== substat.key)\r\n  }\r\n  for (let i = 0; i < numUpgradesOrUnlocks; i++) {\r\n    let substat = getRandomElementFromArray(substats)\r\n    substat.value += RollStat(substat.key as any)\r\n  }\r\n  for (const substat of substats)\r\n    if (substat.key)\r\n      substat.value = parseFloat(valueString(substat.value, Stat.getStatUnit(substat.key)))\r\n\r\n  return {\r\n    setKey: set, numStars: rarity, slotKey: slot, mainStatKey, level, substats, mainStatVal: Artifact.mainStatValue(mainStatKey, rarity, level)!, location: \"\", lock: false\r\n  }\r\n}\r\n\r\nconst saveArtifact = (artifact: IArtifact, id: string | undefined) => {\r\n  const artToSave = deepClone(artifact)\r\n  if (id) {\r\n    const art = ArtifactDatabase.get(id)\r\n    if (art) {\r\n      artToSave.id = art.id\r\n      artToSave.location = art.location\r\n    }\r\n  }\r\n  ArtifactDatabase.update(artToSave)\r\n}\r\nconst canClearArtifact = (): boolean => window.confirm(\"There is an artifact in editor. Are you sure you want to clear the editor?\")\r\n","import { faCheckSquare, faLock, faLockOpen, faSortAmountDownAlt, faSortAmountUp, faSquare, faTrash, faUndo, faUserSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Dropdown, InputGroup, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ReactGA from 'react-ga';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport InfoComponent from '../InfoComponent';\r\nimport Stat from '../Stat';\r\nimport { allMainStatKeys } from '../Types/artifact';\r\nimport { allArtifactRarities, allSlotKeys } from '../Types/consts';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { clamp, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport ArtifactCard from './ArtifactCard';\r\nimport ArtifactEditor from './ArtifactEditor';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\n\r\nconst ArtifactDisplayInfo = React.lazy(() => import('./ArtifactDisplayInfo'));\r\nconst sortMap = {\r\n  quality: \"Quality\",\r\n  level: \"Level\",\r\n  efficiency: \"Current Substat Eff.\",\r\n  mefficiency: \"Maximum Substat Eff.\"\r\n}\r\n\r\nconst initialFilter = () => ({\r\n  filterArtSetKey: \"\",\r\n  filterStars: [3, 4, 5],\r\n  filterLevelLow: 0,\r\n  filterLevelHigh: 20,\r\n  filterSlotKey: \"\",\r\n  filterMainStatKey: \"\",\r\n  filterSubstats: [\"\", \"\", \"\", \"\"],\r\n  filterLocation: \"\",\r\n  filterLocked: \"\",\r\n  ascending: false,\r\n  sortType: Object.keys(sortMap)[0],\r\n  maxNumArtifactsToDisplay: 50\r\n})\r\nfunction filterReducer(state, action) {\r\n  if (action.type === \"reset\") return initialFilter()\r\n  return { ...state, ...action }\r\n}\r\nfunction filterInit(initial = initialFilter()) {\r\n  return { ...initial, ...(loadFromLocalStorage(\"ArtifactDisplay.state\") ?? {}) }\r\n}\r\nexport default function ArtifactDisplay(props) {\r\n  const [filters, filterDispatch] = useReducer(filterReducer, initialFilter(), filterInit)\r\n  const [artToEditId, setartToEditId] = useState(props?.location?.artToEditId)\r\n  const [pageIdex, setpageIdex] = useState(0)\r\n  const scrollRef = useRef(null)\r\n  const invScrollRef = useRef(null)\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const deleteArtifact = useCallback(\r\n    id => {\r\n      const art = ArtifactDatabase.get(id);\r\n      if (art && art.location)\r\n        CharacterDatabase.equipArtifactOnSlot(art.location, art.slotKey, \"\");\r\n      ArtifactDatabase.removeArtifactById(id)\r\n    }, [])\r\n  const editArtifact = useCallback(\r\n    id => {\r\n      setartToEditId(id);\r\n      (scrollRef?.current as any)?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, [])\r\n  const cancelEditArtifact = useCallback(() => setartToEditId(null), [])\r\n\r\n  useEffect(() => {\r\n    ReactGA.pageview('/artifact')\r\n    ArtifactDatabase.registerListener(forceUpdate)\r\n    return () => ArtifactDatabase.unregisterListener(forceUpdate)\r\n  }, [forceUpdate])\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage(\"ArtifactDisplay.state\", filters)\r\n  }, [filters])\r\n\r\n  const { artifacts, totalArtNum, numUnequip, numUnlock, numLock } = useMemo(() => {\r\n    const { filterArtSetKey, filterSlotKey, filterMainStatKey, filterStars, filterLevelLow, filterLevelHigh, filterSubstats = initialFilter().filterSubstats, filterLocation = \"\", filterLocked = \"\", sortType = Object.keys(sortMap)[0], ascending = false } = filters\r\n    const artifactDB = ArtifactDatabase.getArtifactDatabase() || {}\r\n    const artifacts = Object.values(artifactDB).filter(art => {\r\n      if (filterLocked) {\r\n        if (filterLocked === \"locked\" && !art.lock) return false\r\n        if (filterLocked === \"unlocked\" && art.lock) return false\r\n      }\r\n      if (filterLocation === \"Inventory\") {\r\n        if (art.location) return false;\r\n      } else if (filterLocation === \"Equipped\") {\r\n        if (!art.location) return false;\r\n      } else if (filterLocation && filterLocation !== art.location) return false;\r\n\r\n      if (filterArtSetKey && filterArtSetKey !== art.setKey) return false;\r\n      if (filterSlotKey && filterSlotKey !== art.slotKey) return false\r\n      if (filterMainStatKey && filterMainStatKey !== art.mainStatKey) return false\r\n      if (art.level < filterLevelLow || art.level > filterLevelHigh) return false;\r\n      if (!filterStars.includes(art.numStars)) return false;\r\n      for (const filterKey of filterSubstats)\r\n        if (filterKey && !art.substats.some(substat => substat.key === filterKey)) return false;\r\n      return true\r\n    }).sort((a, b) => {\r\n      let sortNum = 0\r\n      switch (sortType) {\r\n        case \"quality\":\r\n          sortNum = a.numStars - b.numStars\r\n          if (sortNum === 0)\r\n            sortNum = a.level - b.level\r\n          break;\r\n        case \"level\":\r\n          sortNum = a.level - b.level\r\n          if (sortNum === 0)\r\n            sortNum = a.numStars - b.numStars\r\n          break;\r\n        case \"efficiency\":\r\n          sortNum = a.currentEfficiency! - b.currentEfficiency!\r\n          break;\r\n        case \"mefficiency\":\r\n          sortNum = a.maximumEfficiency! - b.maximumEfficiency!\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return sortNum * (ascending ? 1 : -1)\r\n    })\r\n    const numUnequip = artifacts.reduce((a, art) => a + (art.location ? 1 : 0), 0)\r\n    const numUnlock = artifacts.reduce((a, art) => a + (art.lock ? 1 : 0), 0)\r\n    const numLock = artifacts.length - numUnlock\r\n\r\n    return { artifacts, totalArtNum: Object.keys(artifactDB)?.length || 0, numUnequip, numUnlock, numLock, ...dbDirty }//use dbDirty to shoo away warnings!\r\n  }, [filters, dbDirty])\r\n\r\n  const { filterArtSetKey, filterSlotKey, filterMainStatKey, filterStars, filterLevelLow, filterLevelHigh, filterSubstats = initialFilter().filterSubstats, maxNumArtifactsToDisplay, filterLocation = \"\", filterLocked = \"\", sortType = Object.keys(sortMap)[0], ascending = false } = filters\r\n\r\n  const { artifactsToShow, numPages, currentPageIndex } = useMemo(() => {\r\n    const numPages = Math.ceil(artifacts.length / maxNumArtifactsToDisplay)\r\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\r\n    return { artifactsToShow: artifacts.slice(currentPageIndex * maxNumArtifactsToDisplay, (currentPageIndex + 1) * maxNumArtifactsToDisplay), numPages, currentPageIndex }\r\n  }, [artifacts, pageIdex, maxNumArtifactsToDisplay])\r\n\r\n  const locationCharacterSheet = usePromise(CharacterSheet.get(filterLocation))\r\n  let locationDisplay\r\n  if (!filterLocation) locationDisplay = <span>Location: Any</span>\r\n  else if (filterLocation === \"Inventory\") locationDisplay = <span>Location: Inventory</span>\r\n  else if (filterLocation === \"Equipped\") locationDisplay = <span>Location: Equipped</span>\r\n  else locationDisplay = <b>{locationCharacterSheet?.name}</b>\r\n\r\n  let lockedDisplay\r\n  if (filterLocked === \"locked\") lockedDisplay = <span><FontAwesomeIcon icon={faLock} /> Locked</span>\r\n  else if (filterLocked === \"unlocked\") lockedDisplay = <span><FontAwesomeIcon icon={faLockOpen} /> Unlocked</span>\r\n  else lockedDisplay = <span>Locked: Any</span>\r\n\r\n  const unequipArtifacts = () =>\r\n    window.confirm(`Are you sure you want to unequip ${numUnequip} artifacts currently equipped on characters?`) &&\r\n    artifacts.map(art => Artifact.unequipArtifact(art.id))\r\n\r\n  const deleteArtifacts = () =>\r\n    window.confirm(`Are you sure you want to delete ${artifacts.length} artifacts?`) &&\r\n    artifacts.map(art => ArtifactDatabase.removeArtifactById(art.id))\r\n\r\n  const lockArtifacts = () =>\r\n    window.confirm(`Are you sure you want to lock ${numLock} artifacts?`) &&\r\n    artifacts.map(art => ArtifactDatabase.setLocked(art.id, true))\r\n\r\n  const unlockArtifacts = () =>\r\n    window.confirm(`Are you sure you want to unlock ${numUnlock} artifacts?`) &&\r\n    artifacts.map(art => ArtifactDatabase.setLocked(art.id, false))\r\n\r\n\r\n  return <Container className=\"mt-2\" >\r\n    <InfoComponent\r\n      pageKey=\"artifactPage\"\r\n      modalTitle=\"Artifact Editing/Management Page Info\"\r\n      text={[\"The maximum efficiency of a 4 star artifact is around 60%.\",\r\n        \"The maximum efficiency of an artifact will usually decrease as you upgrade. It's perfectly normal!\",\r\n        \"Substats with \\\"1\\\"s are the hardest to scan in screenshots.\",\r\n        \"If all your rolls(6) went into a single substat, it will be purple!\",\r\n        \"Click on \\\"Details\\\" when you are upgrading your artifacts in game to scan as you upgrade.\",\r\n        \"You can now upload mutiple artifact screenshots to scan!\"] as any}\r\n    >\r\n      <ArtifactDisplayInfo />\r\n    </InfoComponent>\r\n    <div className=\"mb-2\" ref={scrollRef}>\r\n      <ArtifactEditor\r\n        artifactIdToEdit={artToEditId}\r\n        cancelEdit={cancelEditArtifact}\r\n      />\r\n    </div>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\" ref={invScrollRef}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col><span>Artifact Filter</span></Col>\r\n          <Col xs=\"auto\"><Button size=\"sm\" className=\"ml-2\" variant=\"danger\" onClick={() => filterDispatch({ type: \"reset\" })} ><FontAwesomeIcon icon={faUndo} className=\"fa-fw\" /> Reset Filters</Button></Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-n2\">\r\n          {/* Left half */}\r\n          <Col xs={12} lg={6}>\r\n            {/* Artifact set filter */}\r\n            <Dropdown as={InputGroup.Prepend} className=\"flex-grow-1 mb-2\">\r\n              <Dropdown.Toggle className=\"w-100\" variant={filterArtSetKey ? \"success\" : \"primary\"}>\r\n                {artifactSheets?.[filterArtSetKey]?.name ?? \"Artifact Set\"}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => filterDispatch({ filterArtSetKey: \"\" })}>Unselect</Dropdown.Item>\r\n                {artifactSheets && ArtifactSheet.namesByMaxRarities(artifactSheets).map(([star, sets]) =>\r\n                  <React.Fragment key={star}>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.ItemText>Max Rarity <Stars stars={star} /></Dropdown.ItemText>\r\n                    {sets.map(([key, name]) =>\r\n                      <Dropdown.Item key={key} onClick={() => filterDispatch({ filterArtSetKey: key })}>\r\n                        {name}\r\n                      </Dropdown.Item>)}\r\n                  </React.Fragment>\r\n                )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            {/* Artifact stars filter */}\r\n            <ToggleButtonGroup className=\"w-100 d-flex mb-2\" type=\"checkbox\" as={InputGroup.Append} onChange={(e) => filterDispatch({ filterStars: e })} value={filterStars}>\r\n              {allArtifactRarities.map(star => {\r\n                let selected = filterStars.includes(star)\r\n                return <ToggleButton key={star} value={star} variant={selected ? \"success\" : \"primary\"}><FontAwesomeIcon icon={selected ? faCheckSquare : faSquare} /> <Stars stars={star} /></ToggleButton>\r\n              })}\r\n            </ToggleButtonGroup>\r\n\r\n            {/* Artiface level filter */}\r\n            <InputGroup className=\"mb-2\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><span>Level <span className={`text-${filterLevelLow > 0 ? \"success\" : \"\"}`}>Low</span>/<span className={`text-${filterLevelHigh < 20 ? \"success\" : \"\"}`}>High</span> (Inclusive)</span></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <CustomFormControl\r\n                value={filterLevelLow}\r\n                placeholder={`Min Level`}\r\n                onChange={val => filterDispatch({ filterLevelLow: clamp(val, 0, filterLevelHigh) })}\r\n              />\r\n              <CustomFormControl\r\n                value={filterLevelHigh}\r\n                placeholder={`Max Level`}\r\n                onChange={val => filterDispatch({ filterLevelHigh: clamp(val, filterLevelLow, 20) })}\r\n              />\r\n            </InputGroup>\r\n\r\n            {/* Sort */}\r\n            <ButtonGroup className=\"w-100 d-flex flex-row mb-2\">\r\n              <Dropdown as={ButtonGroup} className=\"flex-grow-1\">\r\n                <Dropdown.Toggle >\r\n                  <span>Sort By: {sortMap[sortType]}</span>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {Object.entries(sortMap).map(([key, name]) =>\r\n                    <Dropdown.Item key={key} onClick={() => filterDispatch({ sortType: key })}>{name}</Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <Button onClick={() => filterDispatch({ ascending: !ascending })} className=\"flex-shrink-1\">\r\n                <FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" /><span> {ascending ? \"Ascending\" : \"Descending\"}</span>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n          {/* Right half */}\r\n          <Col xs={12} lg={6}>\r\n            <Row>\r\n              {/* Left */}\r\n              <Col>\r\n                {/* Artifact Slot */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\">\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterSlotKey ? \"success\" : \"primary\"}>\r\n                    {filterSlotKey ? Artifact.slotNameWithIcon(filterSlotKey) : \"Slot\"}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterSlotKey: \"\" })} >Unselect</Dropdown.Item>\r\n                    {allSlotKeys.map(key =>\r\n                      <Dropdown.Item key={key} onClick={() => filterDispatch({ filterSlotKey: key })} >\r\n                        {Artifact.slotNameWithIcon(key)}\r\n                      </Dropdown.Item>)}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n                {/* Main Stat filter */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\">\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterMainStatKey ? \"success\" : \"primary\"}>\r\n                    {Stat.getStatNameWithPercent(filterMainStatKey, \"Main Stat\")}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterMainStatKey: \"\" })}>Unselect</Dropdown.Item>\r\n                    {allMainStatKeys.map(statKey => <Dropdown.Item key={statKey} onClick={() => filterDispatch({ filterMainStatKey: statKey })} >\r\n                      {Stat.getStatNameWithPercent(statKey)}\r\n                    </Dropdown.Item>)}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                {/* location */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\" >\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterLocation ? \"success\" : \"primary\"} >\r\n                    {locationDisplay}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocation: \"\" })}>Unselect</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocation: \"Inventory\" })}>Inventory</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocation: \"Equipped\" })}>Currently Equipped</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <CharacterSelectionDropdownList onSelect={cid => filterDispatch({ filterLocation: cid })} />\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                {/* locked state */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\" >\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterLocked ? \"success\" : \"primary\"} >\r\n                    {lockedDisplay}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocked: \"\" })}>Any</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocked: \"locked\" })}><span><FontAwesomeIcon icon={faLock} /> Locked</span></Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocked: \"unlocked\" })}><span><FontAwesomeIcon icon={faLockOpen} /> Unlocked</span></Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Col>\r\n              {/* Right */}\r\n              <Col>\r\n                {/* substat filter */}\r\n                {filterSubstats.map((substatKey, index) =>\r\n                  <Dropdown className=\"mb-2\" key={index}>\r\n                    <Dropdown.Toggle id=\"dropdown-basic\" className=\"w-100\" variant={substatKey ? \"success\" : \"primary\"}>\r\n                      {Stat.getStatNameWithPercent(substatKey, `Substat ${index + 1}`)}\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          filterSubstats[index] = \"\"\r\n                          filterDispatch({ filterSubstats })\r\n                        }}\r\n                      >No Substat</Dropdown.Item>\r\n                      {Artifact.getSubstatKeys().filter(key => !filterSubstats.includes(key)).map(key =>\r\n                        <Dropdown.Item key={key}\r\n                          onClick={() => {\r\n                            filterSubstats[index] = key\r\n                            filterDispatch({ filterSubstats })\r\n                          }}\r\n                        >{Stat.getStatNameWithPercent(key)}</Dropdown.Item>\r\n                      )}\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!numUnequip} onClick={unequipArtifacts}><FontAwesomeIcon icon={faUserSlash} /> Unequip Artifacts</Button></Col>\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!artifacts.length} onClick={deleteArtifacts}><FontAwesomeIcon icon={faTrash} /> Delete Artifacts</Button></Col>\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!numLock} onClick={lockArtifacts}><FontAwesomeIcon icon={faLock} /> Lock Artifacts</Button></Col>\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!numUnlock} onClick={unlockArtifacts}><FontAwesomeIcon icon={faLockOpen} /> Unlock Artifacts </Button></Col>\r\n          <Col xs={12} className=\"mt-n2\"><small>Note: the above buttons only applies to <b>filtered artifacts</b></small></Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {numPages > 1 && <ButtonGroup size=\"sm\">\r\n              {[...Array(numPages).keys()].map(i => <Button key={i} className=\"px-3\" variant={currentPageIndex === i ? \"success\" : \"primary\"} onClick={() => setpageIdex(i)} >\r\n                {i === 0 ? \"Page \" : \"\"}{i + 1}\r\n              </Button>)}\r\n            </ButtonGroup>}\r\n          </Col>\r\n          <Col xs=\"auto\"><span className=\"float-right text-right\">Showing <b>{artifactsToShow.length}</b> out of {artifacts.length !== totalArtNum ? `${artifacts.length}/` : \"\"}{totalArtNum} Artifacts</span></Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Row>\r\n      {artifactsToShow.map((art, i) =>\r\n        <Col key={i} lg={4} md={6} className=\"mb-2\">\r\n          <ArtifactCard\r\n            artifactId={art.id}\r\n            onDelete={() => deleteArtifact(art.id)}\r\n            onEdit={() => editArtifact(art.id)}\r\n          />\r\n        </Col>\r\n      )}\r\n    </Row>\r\n    {numPages > 1 && <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body>\r\n        <Row>\r\n          <Col>\r\n            <ButtonGroup size=\"sm\">\r\n              {[...Array(numPages).keys()].map(i => <Button key={i} className=\"px-3\" variant={currentPageIndex === i ? \"success\" : \"primary\"} onClick={() => {\r\n                setpageIdex(i);\r\n                (invScrollRef.current as any)?.scrollIntoView({ behavior: \"smooth\" })\r\n              }} >\r\n                {i === 0 ? \"Page \" : \"\"}{i + 1}\r\n              </Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\"><span className=\"float-right text-right\">Showing <b>{artifactsToShow.length}</b> out of {artifacts.length !== totalArtNum ? `${artifacts.length}/` : \"\"}{totalArtNum} Artifacts</span></Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>}\r\n  </Container >\r\n}","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n};\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].map(ele => FormulaText[`${ele}_crystalize_hit`] = o => <span>250% * {f(o, `crystalize_hit`)}</span>)\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n"],"sourceRoot":""}