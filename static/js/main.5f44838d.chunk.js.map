{"version":3,"sources":["App.js","reportWebVitals.js","index.js","Database/CharacterDatabase.js","Database/ArtifactDatabase.js","StatData.js","Data/ElementalData.js","Stat.js","Util/Util.js","Util/ConditionalsUtil.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/Artifact.js","Database/dbV2KeyMap.js","Database/DatabaseUtil.js","StatConstants.js"],"names":["Home","lazy","ArtifactDisplay","CharacterDisplay","BuildDisplay","Planner","FlexDisplay","SettingsDisplay","DatabaseInitAndVerify","App","className","id","Navbar","bg","variant","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","process","href","target","rel","onClick","ReactGA","outboundLink","label","icon","faPaypal","faPatreon","faDiscord","faCog","fallback","Container","Card","text","Body","Spinner","animation","path","component","Row","Col","xs","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","debug","ReactDOM","render","StrictMode","document","getElementById","CharacterDatabase","this","Error","callback","listener","push","filter","cb","forEach","characterDatabase","characterKey","charListener","char","initiated","isInvalid","levelKey","getCharacterDatabase","deepClone","getCharacterKeyList","Object","keys","getIdList","populateDatebaseFromLocalStorage","localStorage","key","startsWith","split","character","loadFromLocalStorage","emitEvent","update","dchar","saveToLocalStorage","emitCharEvent","get","defVal","remove","removeItem","getArtifactIDFromSlot","slotKey","equippedArtifacts","equipArtifact","art","unequipArtifactOnSlot","equipArtifactBuild","artifactIds","unequipAllArtifacts","values","clearDatabase","artifactDatabase","artIdIndex","artListener","ArtifactDatabase","setKey","numStars","mainStatKey","substats","some","substat","value","getArtifactDatabase","removeArtifactById","removeArtifact","getItem","dart","emitArtEvent","artId","moveToNewLocation","artid","location","setLocked","lock","swapLocations","artA","artB","locA","locB","swapLocationsById","artAid","artBid","StatData","flat","name","default","characterHP","pretty","const","characterDEF","characterATK","characterEle","characterLevel","weaponATK","baseATK","hp","hp_","unit","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","Formulas","s","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","ElementToReactionKeys","physical","anemo","geo","electro","hydro","pyro","cryo","dendro","PreprocessFormulas","dependencyKeys","stats","modifiers","initialStats","constData","formulaList","map","tmp","modifier","constModifier","entries","k","dynamicModifier","constFunc","reduce","accu","m","dynamicFunc","funcIndicator","length","func","console","log","error","formula","assign","hitMoves","move","moveName","clamp","hitElements","ele","eleName","opt","res","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","ElementalData","Stat","getStatName","htmlStatsData","getStatNamePretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","getStatUnit","fixedUnit","printStat","statKey","f","getPrintableFormulaStatKeyList","statList","Set","FormulaText","has","printFormula","modifierText","mkey","multiplier","toFixed","fromEntries","obj","options","statName","statUnit","o","getRandomElementFromArray","array","Math","floor","random","getRandomIntInclusive","min","max","ceil","data","JSON","parse","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","val","low","high","getArrLastElement","arr","clampPercent","strPadLeft","string","pad","Array","join","slice","hammingDistance","str1","str2","dist","toLowerCase","i","j","match","objMultiplication","prop","ConditionalsUtil","conditionals","srcKeyObj","srcKey","srcKey2","find","cond","conditionalNum","index","findIndex","splice","newCond","conditional","fieldName","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","stacks","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","imp","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","Artifact","state","level","rollArr","getSubstatRolls","rolls","undefined","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","maximumEfficiency","errMsgs","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","statKeys","maxPerRoll","getSubstatAllMax","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","getDataImport","getSetKeys","getSetName","getSetsByMaxStarEntries","star","setobj","rarity","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","setNumKey","getArtifactSetEffectsStats","setToSlots","artifactSetEffect","artArr","parseInt","statVal","getSetEffects","setNumKeys","getSetEffectText","charFinalStats","setEffectText","getSetEffectConditional","getSlotKeys","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getMainStatValue","main","includes","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatKey","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","v","reverse","roll","len","artifacts","getConditionalStats","getConditionalProp","getAllArtifactSetEffectsObj","artifactConditionals","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","CurrentDatabaseVersion","dbVersion","getDatabaseVersion","dbKey","dmgMode","rest","buildSetting","mainStat","stat","v2change","statFilters","hitMode","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","artDBJustPopualted","valid","artInSlotId","substatsValidation","keyMapping","endsWith","replace","chars","equippedArt","setDatabaseVersion","createDatabaseObj","artifactDisplay","characterDisplay","buildsDisplay","loadDatabaseObj","charKey","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt"],"mappings":"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","file":"static/js/main.5f44838d.chunk.js","sourcesContent":["import { faDiscord, faPatreon, faPaypal } from '@fortawesome/free-brands-svg-icons';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport ReactGA from 'react-ga';\r\nimport { HashRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { version } from \"../package.json\";\r\nimport './App.scss';\r\nimport './Assets/Image.scss';\r\nimport { DatabaseInitAndVerify } from './Database/DatabaseUtil';\r\n\r\nconst Home = lazy(() => import('./Home/HomeDisplay'))\r\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\r\nconst CharacterDisplay = lazy(() => import('./Character/CharacterDisplay'))\r\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\r\nconst Planner = lazy(() => import('./Planner/PlannerDisplay'))\r\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\r\nconst FlexDisplay = lazy(() => import('./FlexPage/FlexDisplay'))\r\nconst SettingsDisplay = lazy(() => import('./Settings/SettingsDisplay'))\r\nDatabaseInitAndVerify()\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"h-100 d-flex flex-column\">\r\n        <div id=\"content\" className=\"flex-grow-1\">\r\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n            <Navbar.Brand as={Link} to=\"/\">Genshin Optimizer</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link as={Link} to=\"/artifact\">\r\n                  Artifacts</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/character\">Characters</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/build\">Builds</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/tools\">Tools</Nav.Link>\r\n                {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/test\">TEST</Nav.Link>}\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link href={process.env.REACT_APP_PAYPAL_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                  <span><FontAwesomeIcon icon={faPaypal} className=\"fa-fw\" /> PayPal</span>\r\n                </Nav.Link>\r\n                <Nav.Link href={process.env.REACT_APP_PATREON_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                  <span><FontAwesomeIcon icon={faPatreon} className=\"fa-fw\" /> Patreon</span>\r\n                </Nav.Link>\r\n                <Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"discord\" }, () => { })}>\r\n                  <span><FontAwesomeIcon icon={faDiscord} className=\"fa-fw\" /> Discord</span>\r\n                </Nav.Link>\r\n                <Nav.Link as={Link} to=\"/setting\"><FontAwesomeIcon icon={faCog} /></Nav.Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n          <Suspense fallback={<Container>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\r\n              <Card.Body>\r\n                <h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>\r\n              </Card.Body>\r\n            </Card></Container>}>\r\n            <Switch>\r\n              <Route path=\"/artifact\" component={ArtifactDisplay} />\r\n              <Route path=\"/character\" component={CharacterDisplay} />\r\n              <Route path=\"/build\" component={BuildDisplay} />\r\n              <Route path=\"/tools\" component={Planner} />\r\n              {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\r\n              <Route path=\"/setting\" component={SettingsDisplay} />\r\n              <Route path=\"/flex\" component={FlexDisplay} />\r\n              <Route path=\"/\" component={Home} />\r\n              {/* <Route exact path=\"/\" component={Home} /> */}\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n        <Nav id=\"footer\" className=\"bg-dark\">\r\n          <Row className=\"w-100 ml-0 mr-0 mb-2 text-light d-flex justify-content-between\">\r\n            <Col xs={\"auto\"}>\r\n              <span > <small>Genshin Optimizer is not affiliated with or endorsed by miHoYo. </small></span>\r\n            </Col>\r\n            <Col xs={\"auto\"}>\r\n              <span  ><small > Genshin Optimizer Ver:{version} </small></span>\r\n            </Col>\r\n          </Row>\r\n        </Nav>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactGA from 'react-ga';\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID, {\r\n  debug: process.env.NODE_ENV === \"development\"\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static initiated = false\r\n  static characterDatabase = {}\r\n  static listener = []\r\n  static charListener = []\r\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(this.characterDatabase);\r\n  static getCharacterKeyList = () => Object.keys(this.characterDatabase);\r\n  static getIdList = () => Object.keys(this.characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (this.initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\r\n      const [, characterKey] = key.split(\"char_\")\r\n      if (!this.characterDatabase[characterKey]) {\r\n        const character = loadFromLocalStorage(key);\r\n        if (!character) return;\r\n        this.characterDatabase[characterKey] = character;\r\n      }\r\n    })\r\n    this.initiated = true\r\n    this.emitEvent()\r\n    return true\r\n  }\r\n  static update = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    const dchar = deepClone(char)\r\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\r\n    this.characterDatabase[char.characterKey] = dchar;\r\n    this.emitEvent()\r\n    this.emitCharEvent(dchar.characterKey, dchar)\r\n  }\r\n  static get = (characterKey, defVal = null) => this.characterDatabase?.[characterKey] ?? defVal\r\n\r\n  static remove = (characterKey) => {\r\n    delete this.characterDatabase[characterKey];\r\n    localStorage.removeItem(`char_${characterKey}`);\r\n    this.emitEvent()\r\n  }\r\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\r\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\r\n\r\n  static equipArtifact = (characterKey, art) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.update(char)\r\n  }\r\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !slotKey) return\r\n    if (!char?.equippedArtifacts?.[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.update(char)\r\n  }\r\n  static equipArtifactBuild = (characterKey, artifactIds) => {\r\n    const character = this.get(characterKey)\r\n    if (!character) return;\r\n    character.equippedArtifacts = artifactIds\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(this.characterDatabase).forEach(char => {\r\n      char.equippedArtifacts = {}\r\n      this.update(char)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    this.characterDatabase = {}\r\n    this.initiated = false\r\n    this.emitEvent()\r\n  }\r\n  static registerListener(callback) {\r\n    this.listener.push(callback)\r\n  }\r\n  static unregisterListener(callback) {\r\n    this.listener = this.listener.filter(cb => cb !== callback)\r\n  }\r\n  static emitEvent() {\r\n    this.listener.forEach(cb => cb(this.characterDatabase))\r\n  }\r\n  static registerCharListener(characterKey, callback) {\r\n    if (!this.charListener[characterKey]) this.charListener[characterKey] = [callback]\r\n    else this.charListener[characterKey].push(callback)\r\n  }\r\n  static unregisterCharListener(characterKey, callback) {\r\n    this.charListener[characterKey] = this.charListener[characterKey]?.filter(cb => cb !== callback)\r\n  }\r\n  static emitCharEvent(characterKey, char) {\r\n    this.charListener[characterKey]?.forEach(cb => cb(char))\r\n  }\r\n}\r\n","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nconst artListener = {}\r\nvar listener = []\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) throw Error('A static class cannot be instantiated.');\r\n\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey || art.substats?.some(substat => substat.key && !substat.value)\r\n  static getArtifactDatabase = () => artifactDatabase;\r\n  static getIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    this.emitEvent()\r\n    return true\r\n  }\r\n  static get = (id) => artifactDatabase[id] ?? null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static update = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    if (!id) {//if does not have id, generate ID\r\n      do {\r\n        id = `artifact_${artIdIndex++}`\r\n      } while (localStorage.getItem(id) !== null)\r\n      art.id = id\r\n    }\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    this.emitEvent()\r\n    this.emitArtEvent(id, dart)\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n    this.emitEvent()\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location = \"\") => {\r\n    const art = this.get(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.update(art);\r\n  }\r\n  static setLocked = (artid, lock = false) => {\r\n    const art = this.get(artid)\r\n    if (!art || art.lock === lock) return;\r\n    art.lock = lock;\r\n    this.update(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.get(artAid), this.get(artBid))\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(artifactDatabase).forEach(art => {\r\n      art.location = \"\"\r\n      this.update(art)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    artifactDatabase = {}\r\n    initiated = false\r\n    artIdIndex = 1\r\n    this.emitEvent()\r\n  }\r\n  static registerListener(callback) {\r\n    listener.push(callback)\r\n  }\r\n  static unregisterListener(callback) {\r\n    listener = listener.filter(cb => cb !== callback)\r\n  }\r\n  static emitEvent() {\r\n    listener.forEach(cb => cb(artifactDatabase))\r\n  }\r\n  static registerArtListener(id, callback) {\r\n    if (!artListener[id]) artListener[id] = [callback]\r\n    else artListener[id].push(callback)\r\n  }\r\n  static unregisterArtListener(id, callback) {\r\n    artListener[id] = artListener[id]?.filter(cb => cb !== callback)\r\n  }\r\n  static emitArtEvent(id, art) {\r\n    artListener[id]?.forEach(cb => cb(art))\r\n  }\r\n}","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nconst StatData = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\r\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ ele ] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n    })    \r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nfunction objMultiplication(obj, multi) {\r\n  Object.keys(obj).forEach(prop => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance,\r\n  objMultiplication,\r\n  getObjectKeysRecursive\r\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\r\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let max = this.getSubstatAllMax(subStatKey) * len\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      substat.rollArr = rollArr.length > 1 ? rollArr : undefined\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.unequipArtifactOnSlot(location, slotKey)\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","//for DB v2, we changed a bunch of keys.\r\nconst changes = {\r\n  char_ele_key: \"characterEle\",\r\n  char_level: \"characterLevel\",\r\n\r\n  hp_base: \"characterHP\",\r\n  hp_final: \"finalHP\",\r\n  atk_character_base: \"characterATK\",\r\n  atk_base: \"baseATK\",\r\n  atk_final: \"finalATK\",\r\n  atk_weapon: \"weaponATK\",\r\n  def_base: \"characterDEF\",\r\n  def_final: \"finalDEF\",\r\n  phy_dmg_bonus: \"physical_dmg_\",\r\n  phy_res: \"physical_res_\",\r\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\r\n  geo_ele_dmg_bonus: \"geo_dmg_\",\r\n  electro_ele_dmg_bonus: \"electro_dmg_\",\r\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\r\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\r\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\r\n  anemo_ele_res: \"anemo_res_\",\r\n  geo_ele_res: \"geo_res_\",\r\n  electro_ele_res: \"electro_res_\",\r\n  hydro_ele_res: \"hydro_res_\",\r\n  pyro_ele_res: \"pyro_res_\",\r\n  cryo_ele_res: \"cryo_res_\",\r\n  ener_rech: \"enerRech_\",\r\n  crit_rate: \"critRate_\",\r\n  crit_dmg: \"critDMG_\",\r\n  stam: \"stamina\",\r\n  heal_bonu: \"heal_\",\r\n  inc_heal: \"incHeal_\",\r\n  pow_shield: \"powShield_\",\r\n  red_cd: \"cdRed_\",\r\n  skill_cd_red: \"skillCDRed_\",\r\n  burst_cd_red: \"burstCDRed_\",\r\n  all_dmg_bonus: \"dmg_\",\r\n  move_spd: \"moveSPD_\",\r\n  atk_spd: \"atkSPD_\",\r\n  weakspot_dmg: \"weakspotDMG_\",\r\n  stamina_dec: \"staminaDec_\",\r\n  stamina_gliding_dec: \"staminaGlidingDec_\",\r\n  stamina_charged_dec: \"staminaChargedDec_\",\r\n  ele_mas_multi_x: \"eleMasX\",\r\n  ele_mas_multi_y: \"eleMasY\",\r\n  ele_mas_multi_z: \"eleMasZ\",\r\n\r\n  norm_atk_dmg: \"physical_normal_hit\",\r\n  char_atk_dmg: \"physical_charged_hit\",\r\n  plunge_dmg: \"physical_plunging_hit\",\r\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\r\n  char_atk_crit_dmg: \"physical_charged_critHit\",\r\n  plunge_crit_dmg: \"physical_plunging_critHit\",\r\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\r\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\r\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\r\n  norm_atk_dmg_bonus: \"normal_dmg_\",\r\n  char_atk_dmg_bonus: \"charged_dmg_\",\r\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\r\n  skill_dmg_bonus: \"skill_dmg_\",\r\n  burst_dmg_bonus: \"burst_dmg_\",\r\n  norm_atk_crit_rate: \"normal_critRate_\",\r\n  char_atk_crit_rate: \"charged_critRate_\",\r\n  skill_crit_rate: \"skill_critRate_\",\r\n  burst_crit_rate: \"burst_critRate_\",\r\n\r\n  anemo_skill_dmg: \"anemo_skill_hit\",\r\n  anemo_burst_dmg: \"anemo_burst_hit\",\r\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\r\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\r\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\r\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\r\n  geo_skill_dmg: \"geo_skill_hit\",\r\n  geo_burst_dmg: \"geo_burst_hit\",\r\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\r\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\r\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\r\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\r\n  electro_skill_dmg: \"electro_skill_hit\",\r\n  electro_burst_dmg: \"electro_burst_hit\",\r\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\r\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\r\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\r\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\r\n  hydro_skill_dmg: \"hydro_skill_hit\",\r\n  hydro_burst_dmg: \"hydro_burst_hit\",\r\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\r\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\r\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\r\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\r\n  pyro_skill_dmg: \"pyro_skill_hit\",\r\n  pyro_burst_dmg: \"pyro_burst_hit\",\r\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\r\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\r\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\r\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\r\n  cryo_skill_dmg: \"cryo_skill_hit\",\r\n  cryo_burst_dmg: \"cryo_burst_hit\",\r\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\r\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\r\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\r\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\r\n\r\n  phy_dmg: \"physical_hit\",\r\n  phy_crit_dmg: \"physical_critHit\",\r\n  phy_avg_dmg: \"physical_avgHit\",\r\n  anemo_ele_dmg: \"anemo_hit\",\r\n  anemo_ele_crit_dmg: \"anemo_critHit\",\r\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\r\n  geo_ele_dmg: \"geo_hit\",\r\n  geo_ele_crit_dmg: \"geo_critHit\",\r\n  geo_ele_avg_dmg: \"geo_avgHit\",\r\n  electro_ele_dmg: \"electro_hit\",\r\n  electro_ele_crit_dmg: \"electro_critHit\",\r\n  electro_ele_avg_dmg: \"electro_avgHit\",\r\n  hydro_ele_dmg: \"hydro_hit\",\r\n  hydro_ele_crit_dmg: \"hydro_critHit\",\r\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\r\n  pyro_ele_dmg: \"pyro_hit\",\r\n  pyro_ele_crit_dmg: \"pyro_critHit\",\r\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\r\n  cryo_ele_dmg: \"cryo_hit\",\r\n  cryo_ele_crit_dmg: \"cryo_critHit\",\r\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\r\n\r\n  overload_dmg: \"overload_hit\",\r\n  overload_dmg_bonus: \"overload_dmg_\",\r\n  overload_multi: \"overload_multi\",\r\n  electrocharged_dmg: \"electrocharged_hit\",\r\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\r\n  electrocharged_multi: \"electrocharged_multi\",\r\n  superconduct_dmg: \"superconduct_hit\",\r\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\r\n  superconduct_multi: \"superconduct_multi\",\r\n  burning_dmg: \"burning_hit\",\r\n  burning_dmg_bonus: \"burning_dmg_\",\r\n  swirl_dmg: \"swirl_hit\",\r\n  swirl_dmg_bonus: \"swirl_dmg_\",\r\n  swirl_multi: \"swirl_multi\",\r\n  shatter_dmg: \"shattered_hit\",\r\n  shatter_dmg_bonus: \"shattered_dmg_\",\r\n  shatter_multi: \"shattered_multi\",\r\n  crystalize_dmg: \"crystalize_hit\",\r\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\r\n\r\n  melt_dmg_bonus: \"melt_dmg_\",\r\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\r\n\r\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\r\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\r\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\r\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\r\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\r\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\r\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\r\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\r\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\r\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\r\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\r\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\r\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\r\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\r\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\r\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\r\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\r\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\r\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\r\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\r\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\r\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\r\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\r\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\r\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\r\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\r\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\r\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\r\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\r\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\r\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\r\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\r\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\r\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\r\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\r\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\r\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\r\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\r\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\r\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\r\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\r\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\r\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\r\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\r\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\r\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\r\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\r\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\r\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\r\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\r\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\r\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\r\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\r\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\r\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\r\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\r\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\r\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\r\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\r\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\r\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\r\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\r\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\r\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\r\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\r\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\r\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\r\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\r\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\r\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\r\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\r\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\r\n\r\n  enemy_phy_res: \"physical_enemyRes_\",\r\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\r\n  enemy_phy_immunity: \"physical_enemyImmunity\",\r\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\r\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\r\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\r\n  geo_enemy_ele_res: \"geo_enemyRes_\",\r\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\r\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\r\n  electro_enemy_ele_res: \"electro_enemyRes_\",\r\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\r\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\r\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\r\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\r\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\r\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\r\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\r\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\r\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\r\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\r\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\r\n\r\n  ele_mas: \"eleMas\",\r\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\r\n\r\n  enemy_level_multi: \"enemyLevel_multi\",\r\n  enemy_level: \"enemyLevel\"\r\n}\r\n/*\r\nconst same = [\r\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\r\n]\r\n\r\nconst removed = [\r\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\r\n]\r\n\r\nconst aded = [\r\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\r\n]\r\n*/\r\n\r\n//renamed dmgMode to hitMode\r\nconst dmgModeToHitMode = {\r\n  avg_dmg: \"avgHit\",\r\n  dmg: \"hit\",\r\n  crit_dmg: \"critHit\"\r\n}\r\nexport { changes, dmgModeToHitMode }","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./ArtifactDatabase\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\n\r\nconst CurrentDatabaseVersion = 2\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  const dbVersion = getDatabaseVersion()\r\n  //edit the data before the database is populated\r\n  if (dbVersion < 2) {\r\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\r\n      const character = loadFromLocalStorage(key);\r\n      const { characterKey, equippedArtifacts = {} } = character\r\n      const dbKey = `char_${characterKey}`\r\n      if (localStorage.getItem(dbKey) === null) {\r\n        //if there is no character saved, create a new character\r\n        const { id, name, dmgMode, ...rest } = character\r\n        if (Array.isArray(rest?.buildSetting?.mainStat))\r\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\r\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\r\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\r\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\r\n        saveToLocalStorage(dbKey, rest)\r\n        //equip to the new character\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = characterKey\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      } else {\r\n        //if the character does exist, \"move\" the artifacts equipped to inventory\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = \"\"\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      }\r\n      //delete the old database\r\n      localStorage.removeItem(key)\r\n    })\r\n    //reset the ArtifactDisplay keys\r\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\r\n    if (ArtifactDisplayState) {\r\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\r\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\r\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\r\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\r\n    }\r\n  }\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n\r\n  Object.values(deepClone(ArtifactDatabase.getArtifactDatabase())).forEach(art => {\r\n    let valid = true\r\n\r\n    //verify the linking of artifacts and characters\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.get(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 1) {\r\n      //generate artifact efficiency again for artifacts\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n\r\n      //there was a bug that saved the numStars as strings. convert to number.\r\n      if (typeof art.numStars === \"string\") {\r\n        art.numStars = parseInt(art.numStars)\r\n        valid = false\r\n      }\r\n\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 2) {\r\n      if (art.mainStatKey in v2change) {\r\n        art.mainStatKey = v2change[art.mainStatKey]\r\n        valid = false\r\n      }\r\n      art?.substats?.forEach((obj, i) => {\r\n        if (obj.key in v2change) {\r\n          art.substats[i].key = v2change[obj.key]\r\n          valid = false\r\n        }\r\n      })\r\n    }\r\n\r\n    //Update any invalid artifacts in DB\r\n    if (!valid) ArtifactDatabase.update(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    const { characterKey } = character\r\n    //verify character database equipment validity\r\n    if (!character.equippedArtifacts) {\r\n      character.equippedArtifacts = {}\r\n      valid = false\r\n    }\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.get(artid)\r\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 1) {\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.hitMode) {\r\n        character.hitMode = \"hit\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    //update any invalid characters in DB\r\n    if (!valid) CharacterDatabase.update(character)\r\n  })\r\n  setDatabaseVersion(CurrentDatabaseVersion)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nfunction createDatabaseObj() {\r\n  const characterDatabase = CharacterDatabase.getCharacterDatabase()\r\n  const artifactDatabase = ArtifactDatabase.getArtifactDatabase()\r\n  const artifactDisplay = loadFromLocalStorage(\"ArtifactDisplay.state\") ?? {}\r\n  const characterDisplay = loadFromLocalStorage(\"CharacterDisplay.state\") ?? {}\r\n  const buildsDisplay = loadFromLocalStorage(\"BuildsDisplay.state\") ?? {}\r\n\r\n  return {\r\n    version: getDatabaseVersion(),\r\n    characterDatabase,\r\n    artifactDatabase,\r\n    artifactDisplay,\r\n    characterDisplay,\r\n    buildsDisplay,\r\n  }\r\n}\r\n\r\nfunction loadDatabaseObj({ version = 0, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay, }) {\r\n  clearDatabase()\r\n  //load from obj charDB,artDB\r\n  Object.entries(characterDatabase).forEach(([charKey, char]) => saveToLocalStorage(`char_${charKey}`, char))\r\n  Object.entries(artifactDatabase).forEach(([id, art]) => saveToLocalStorage(id, art))\r\n  //override version\r\n  setDatabaseVersion(version)\r\n  saveToLocalStorage(\"ArtifactDisplay.state\", artifactDisplay)\r\n  saveToLocalStorage(\"CharacterDisplay.state\", characterDisplay)\r\n  saveToLocalStorage(\"BuildsDisplay.state\", buildsDisplay)\r\n\r\n  DatabaseInitAndVerify()\r\n}\r\nfunction clearDatabase() {\r\n  //delete all characters and artifacts\r\n  Object.keys(localStorage).filter(key => key.startsWith(\"char_\") || key.startsWith(\"artifact_\")).forEach(id =>\r\n    localStorage.removeItem(id))\r\n  localStorage.removeItem(\"db_ver\")\r\n  localStorage.removeItem(\"ArtifactDisplay.state\")\r\n  localStorage.removeItem(\"CharacterDisplay.state\")\r\n  localStorage.removeItem(\"BuildsDisplay.state\")\r\n  //clear the database to validate again\r\n  CharacterDatabase.clearDatabase()\r\n  ArtifactDatabase.clearDatabase()\r\n}\r\nexport {\r\n  DatabaseInitAndVerify,\r\n  createDatabaseObj,\r\n  loadDatabaseObj,\r\n  clearDatabase,\r\n  CurrentDatabaseVersion\r\n};\r\n","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [ \"pyro\" ] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [ \"physical\" ] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [ \"electro\" ] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [ \"cryo\" ] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [ \"pyro\", \"hydro\", \"electro\", \"cryo\" ] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [ 0,\r\n  17.2,  18.5,  19.9,  21.3,  22.6,  24.6,  26.6,  28.9,  31.4,  34.1,\r\n  37.2,  40.7,  44.4,  48.6,  53.7,  59.1,  64.4,  69.7,  75.1,  80.6,\r\n  86.1,  91.7,  97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n 142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n 215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n 336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n 509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n 742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n 968.6, 991.0,1013.5,1036.1,1066.6,1090.0,1115.0,1141.7,1171.9,1202.8,\r\n1202.8,1233.9,1264.7,1305.7,1346.1,1468.9,1524.0,1577.0,1627.6,1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [ 0,\r\n  91,  99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n 170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n 320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n 448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n 574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n 733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n 915, 936, 956, 982,1003,1017,1036,1057,1075,1096,\r\n1114,1135,1149,1170,1191,1205,1224,1243,1260,1277,\r\n1293,1308,1317,1327,1336,1349,1366,1384,1403,1424,\r\n1450,1478,1507,1543,1570,1580,1589,1673,1682,1691,\r\n]"],"sourceRoot":""}