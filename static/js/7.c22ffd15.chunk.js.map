{"version":3,"sources":["Assets/icon_bow.png","Assets/Assets.ts","Assets/icon_catalyst.png","Assets/icon_claymore.png","Assets/icon_polearm.png","Assets/icon_sword.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/Character/LocationName.tsx","Components/ToggleButton/WeaponToggle.tsx","Util/SortByFilters.ts","Components/SortByButton.tsx","Artifact/ArtifactCard.tsx","Artifact/PercentBadge.tsx","Components/Weapon/WeaponSelectionModal.tsx","Weapon/WeaponCard.tsx","Components/ToggleButton/ElementToggle.tsx","Util/CharacterSort.ts","Components/Character/CharacterSelectionModal.tsx","Weapon/WeaponStatsCard.tsx","Weapon/WeaponDisplayCard.tsx","Components/FormulaCalcCard.tsx","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx"],"names":["Assets","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","LocationName","location","t","useTranslation","characterSheet","usePromise","CharacterSheet","get","component","name","nameWIthIcon","sx","verticalAlign","WeaponToggle","value","onChange","props","cb","useCallback","e","newVal","exclusive","allWeaponTypeKeys","map","wt","src","size","SortByFilters","sortby","ascending","options","Sort","a","b","filterOption","aV","getValue","bV","localeCompare","diff","tieBreaker","SortByButton","sortKeys","onChangeAsc","title","i18nKey","key","selected","disabled","onClick","startIcon","icon","faSortAmountDownAlt","faSortAmountUp","className","allSubstatFilter","Set","allSubstats","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","effFilter","database","useContext","DatabaseContext","useState","undefined","databaseArtifact","updateDatabaseArtifact","useEffect","followArt","sheet","ArtifactSheet","_getArt","setKey","editable","localDatabase","art","id","lock","slotKey","rarity","level","mainStatKey","substats","exclude","mainStatLevel","Math","max","min","levelVariant","floor","mainStatVal","color","valueStringWithUnit","Artifact","mainStatValue","Stat","getStatUnit","getArtifactEfficiency","currentEfficiency","maxEfficiency","artifactValid","slotName","getSlotName","slotDesc","getSlotDesc","slotDescTooltip","placement","faInfoCircle","setEffects","setDescTooltip","Object","keys","setNumKey","variant","setNum","setEffectDesc","fallback","width","height","minHeight","display","flexDirection","py","alignItems","label","pl","flexGrow","updateArt","container","flexWrap","item","getStatName","stars","colored","xs","md","image","slotIcons","pt","pb","stat","i","numRolls","rolls","length","rollColor","clamp","efficiency","effOpacity","statName","mr","opacity","has","my","valid","mb","flexShrink","inventory","charKey","setArtLocation","faEdit","arrow","faBan","faChartLine","faTrashAlt","PercentBadge","toFixed","badgeColor","text","WeaponSelectionModal","show","onHide","onSelect","filter","propWeaponFilter","weaponFilter","weaponSheets","WeaponSheet","getAll","setWeaponfilter","weaponIdList","allWeaponKeys","wKey","weaponType","sort","open","onClose","spacing","weaponKey","weaponSheet","lg","img","px","large","WeaponCard","weaponId","canEquip","databaseWeapon","updateDatabaseWeapon","followWeapon","weapon","cs","weaponTypeKey","actionWrapperFunc","children","equipOnChar","setWeaponLocation","ascension","refinement","weaponMainVal","getMainStatValue","fixedUnit","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","statMap","passiveName","push","imgAwaken","condition","wrapper","avatar","fontSize","titleTypographyProps","action","updateWeapon","ascensionMaxLevel","alignContent","mt","statKey","statVal","unit","StatIcon","noUnselect","ElementToggle","allElements","ele","lineHeight","uncoloredEleIcons","characterSortOptions","characterSheets","new","ck","_getChar","star","defaultSortKeys","CharacterSelectionModal","newFirst","useMemo","sortBy","setsortBy","setascending","elementalFilter","setelementalFilter","setweaponFilter","sortOptions","characterKeyList","allCharacterKeys","cKey","elementKey","characterKey","CharacterBtn","character","equippedWeapon","_getWeapon","artifactSheets","stats","Character","calculateBuild","thumbImg","getLevelString","constellation","tlvl","auto","skillBoost","skill","burstBoost","burst","WeaponStatsCard","statsVals","s","fields","statsToFields","CardDark","CardContent","Typography","FieldDisplay","field","WeaponDisplayCard","propWeaponId","charData","footer","useForceUpdate","databaseToken","onDatabaseUpdate","buildContextObj","buildContext","weaponDispatch","newWeapon","setLevel","findIndex","ascenML","setAscension","lowerAscension","build","newBuild","equippedBuild","refineIndex","ws","initialWeaponFilter","showModal","setshowModal","CardLight","Grid","k","ButtonGroup","Button","DropdownButton","MenuItem","Divider","Array","bgcolor","palette","contentLight","main","CustomNumberInput","startAdornment","inputProps","textAlign","ambiguousLevel","milestoneLevels","lv","as","lvlstr","Lock","LockOpen","CloseButton","SwapBtn","onChangeId","substatKey","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","sections","document","Box","gap","maxWidth","minWidth","borderRadius","description","process","SqBadge","gutterBottom","passiveDescription","Provider","compareBuild","setCompareBuild","atk","DocumentDisplay","CharacterDropdownButton","setShow","close","clickHandler","weapons","dbWeapon","SwapHoriz","ModalWrapper","ImgIcon","sm","FormulaCalcCard","sheets","expanded","setexpanded","toggle","ExpandButton","expand","aria-expanded","aria-label","ExpandMore","Collapse","in","timeout","unmountOnExit","CalculationDisplay","displayStatKeys","getDisplayStatKeys","Skeleton","entries","sectionKey","header","getFormulaTargetsDisplayHeading","characterEle","fieldIndex","isArray","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","reverse","Boolean","Accordion","AccordionSummary","expandIcon","printStat","AccordionDetails","subKey","formula","Formula","formulaField","fieldText","getTalentFieldValue","fieldVariant","fieldFormulaText","fieldFixed","fieldUnit","fieldFormula","fieldFormulaDependency","fieldValue","CharacterArtifactPane","history","useHistory","statKeys","edit","artid","pathname","artToEditId","followAnyArt","equipArts","window","confirm","equippedArtifacts","equipArtifacts","unequipArts","objectFromKeyMap","allSlotKeys","StatDisplayComponent","statsDisplayKeys","SolidToggleButtonGroup","v","ToggleButton","Card","p","warning","dark","setToSlots","setNumKeyArr","SetEffectDisplay","CharacterOverviewPane","characterDispatch","useCharacterReducer","CardMedia","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","getTalentOfKey","constellationName","cursor","MainStatsCards","additionalKeys","editStatKeys","otherStatKeys","forEach","miscStatkeys","resetString","statBreakpoint","specializedStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","specializedStatUnit","displayNewBuildProps","StatDisplayCard","content","columnSpacing","rowSpacing","StatDisplay","justifyContent","editContent","characterStatKeys","defVal","round","getBase","StatInput","placeholder","getStatNameRaw","bonusStats","defaultValue","percent","onValueChange","type","onReset","getStatNameWithPercent","setedit","faSave","CharacterTalentPane","ReactionDisplay","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","style","onClickTitle","ReactionComponents","superconduct_hit","sKey","electro","cryo","electrocharged_hit","hydro","overloaded_hit","pyro","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","BootstrapTooltip","faQuestionCircle","crystalize_hit","crystalizeEleToDisplay","charEleKey","eleInterArr","ElementToReactionKeys","includes","Ele","anemo","geo","talentLimits","talent","actionWrapeprFunc","CardActionArea","levelBoost","talentLvlKey","fullWidth","newTalentLevelKey","talentStats","getTalentStats","talentStatsFields","statsEle","talentSheet","ConditionalWrapper","TabPanel","current","other","role","hidden","aria-labelledby","CharacterDisplayCard","setCharacterKey","propNewBuild","tabName","initialCharacter","followChar","deepClone","tab","settab","onTab","CharSelectDropdown","Tabs","Tab","HeaderIconDisplay","contentDark","ThumbSide","thumbImgSide","ElementalData","talents","eleKey"],"mappings":"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","file":"static/js/7.c22ffd15.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon_bow.7ceaa8e2.png\";","import bow from './icon_bow.png'\r\nimport catalyst from './icon_catalyst.png'\r\nimport claymore from './icon_claymore.png'\r\nimport polearm from './icon_polearm.png'\r\nimport sword from './icon_sword.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nconst Assets = {\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/icon_catalyst.db078b7b.png\";","export default __webpack_public_path__ + \"static/media/icon_claymore.63b1abb8.png\";","export default __webpack_public_path__ + \"static/media/icon_polearm.e5f4a2a1.png\";","export default __webpack_public_path__ + \"static/media/icon_sword.619c9c2d.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\n\r\nexport default function LocationName({ location }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t`inventory`}</span>}\r\n  </Typography>\r\n\r\n}","import { ToggleButton } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey | \"\") => void\r\n  value: WeaponTypeKey | \"\"\r\n}\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allWeaponTypeKeys} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}","\r\ninterface SortOption {\r\n  getValue: (id: string) => number | string\r\n  tieBreaker?: string\r\n}\r\nexport interface SortOptions { [key: string]: SortOption }\r\n\r\n\r\nexport default function SortByFilters(sortby: string, ascending: boolean, options: SortOptions) {\r\n  function Sort(a: string, b: string, ascending: boolean, filterOption: SortOption,) {\r\n    const aV = filterOption.getValue(a)\r\n    const bV = filterOption.getValue(b)\r\n    let diff = 0\r\n    if (typeof aV === \"string\" && typeof bV === \"string\")\r\n      diff = aV.localeCompare(bV)\r\n    else\r\n      diff = ((bV as number) - (aV as number))\r\n    return (ascending ? -1 : 1) * diff\r\n  }\r\n  return (a: string, b: string) => {\r\n    if (!options[sortby]) return 0\r\n    const filterOption = options[sortby]\r\n    let diff = Sort(a, b, ascending, filterOption)\r\n    if (!diff && filterOption.tieBreaker && options[filterOption.tieBreaker])\r\n      diff = Sort(a, b, ascending, options[filterOption.tieBreaker])\r\n    return diff\r\n  }\r\n}\r\n","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\r\n\r\ntype SortByButtonProps = ButtonGroupProps & {\r\n  sortKeys: string[]\r\n  value: string\r\n  onChange: (value: string) => void\r\n  ascending: boolean\r\n  onChangeAsc: (value: boolean) => void\r\n}\r\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\r\nexport default function SortByButton({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: SortByButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <ButtonGroup {...props} >\r\n    <DropdownButton title={<Trans t={t} i18nKey=\"sortByFormat\" value={t(`sortMap.${value}`) as any}>Sort By: {{ value: t(`sortMap.${value}`) }}</Trans>}>\r\n      {sortKeys.map(key =>\r\n        <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\r\n      {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\r\n    </Button>\r\n  </ButtonGroup>\r\n}","import { faBan, faChartLine, faEdit, faInfoCircle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Lock, LockOpen } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardActions, CardContent, CardMedia, Chip, Grid, IconButton, Skeleton, Tooltip, Typography } from '@mui/material';\r\nimport React, { Suspense, useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport BootstrapTooltip from '../Components/BootstrapTooltip';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton';\r\nimport LocationName from '../Components/Character/LocationName';\r\nimport ColorText from '../Components/ColoredText';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { database as localDatabase, DatabaseContext } from '../Database/Database';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport Stat from '../Stat';\r\nimport { allSubstats, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { valueStringWithUnit } from '../Util/UIUtil';\r\nimport { clamp } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport SlotNameWithIcon from './Component/SlotNameWIthIcon';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: ICachedArtifact, onEdit?: (string) => void, onDelete?: (string) => void, mainStatAssumptionLevel?: number, effFilter?: Set<SubstatKey> }\r\nconst allSubstatFilter = new Set(allSubstats)\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter }: Data): JSX.Element | null {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseArtifact, updateDatabaseArtifact] = useState(undefined as ICachedArtifact | undefined)\r\n  useEffect(() =>\r\n    artifactId ? database.followArt(artifactId, updateDatabaseArtifact) : undefined,\r\n    [artifactId, updateDatabaseArtifact, database])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? database._getArt(artifactId) : undefined))?.setKey), [artifactObj, artifactId])\r\n  const equipOnChar = (charKey: CharacterKey | \"\") => database.setArtLocation(artifactId!, charKey)\r\n\r\n  const editable = !artifactObj && database === localDatabase // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? databaseArtifact\r\n  if (!art) return null\r\n\r\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude, location = \"\" } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  const mainStatVal = <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{valueStringWithUnit(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, Stat.getStatUnit(mainStatKey))}</ColorText>\r\n  const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\r\n  const artifactValid = maxEfficiency !== 0\r\n  const slotName = sheet?.getSlotName(slotKey) || \"Unknown Piece Name\"\r\n  const slotDesc = sheet?.getSlotDesc(slotKey)\r\n  const slotDescTooltip = slotDesc && <BootstrapTooltip placement=\"top\" title={<Typography>{slotDesc}</Typography>}>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n  const setEffects = sheet?.setEffects\r\n  const setDescTooltip = sheet && setEffects && <BootstrapTooltip placement=\"top\" title={\r\n    <span>\r\n      {Object.keys(setEffects).map(setNumKey => <span key={setNumKey}>\r\n        <Typography variant=\"h6\"><SqBadge color=\"success\">{t(`setEffectNum`, { setNum: setNumKey })}</SqBadge></Typography>\r\n        <Typography>{sheet.setEffectDesc(setNumKey as any)}</Typography>\r\n      </span>)}\r\n    </span>\r\n  }>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <CardContent className={`grad-${rarity}star`} sx={{ py: 1 }}>\r\n        <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={levelVariant as any} />\r\n          <Typography sx={{ pl: 1, flexGrow: 1 }}>{slotName} {slotDescTooltip}</Typography>\r\n          <IconButton color=\"primary\" disabled={!editable} onClick={() => database.updateArt({ lock: !lock }, id)}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>\r\n        </Box>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item flexGrow={1}>\r\n            <Typography color=\"text.secondary\" variant=\"body2\">\r\n              <SlotNameWithIcon slotKey={slotKey} />\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {Stat.getStatName(mainStatKey)}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <strong>{mainStatVal}</strong>\r\n            </Typography>\r\n            <Stars stars={rarity} colored />\r\n            {/* {process.env.NODE_ENV === \"development\" && <Typography color=\"common.black\">{id || `\"\"`} </Typography>} */}\r\n          </Grid>\r\n          <Grid item xs={3} md={4}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={sheet?.slotIcons[slotKey] ?? \"\"}\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardContent sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\", pt: 1, pb: 0 }}>\r\n        {substats.map((stat: ICachedSubstat, i) => {\r\n          if (!stat.value) return null\r\n          const numRolls = stat.rolls?.length ?? 0\r\n          const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n          const efficiency = stat.efficiency ?? 0\r\n          const effOpacity = 0.3 + (efficiency / 100) * 0.7\r\n          const statName = Stat.getStatName(stat.key)\r\n          return (<Box key={i} sx={{ display: \"flex\" }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <SqBadge color={(numRolls ? rollColor : \"error\") as any} sx={{ mr: 1 }}><strong>{numRolls ? numRolls : \"?\"}</strong></SqBadge>\r\n              <Typography color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">{statName}{`+${valueStringWithUnit(stat.value, Stat.getStatUnit(stat.key))}`}</Typography>\r\n            </Box>\r\n            <Typography sx={{ opacity: effOpacity }}>{stat.key && effFilter.has(stat.key) ? valueStringWithUnit(efficiency, \"eff\") : \"-\"}</Typography>\r\n          </Box>)\r\n        })}\r\n        <Box sx={{ display: \"flex\", my: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.curSubEff`}</Typography>\r\n          <PercentBadge value={currentEfficiency} valid={artifactValid} />\r\n        </Box>\r\n        {currentEfficiency !== maxEfficiency && <Box sx={{ display: \"flex\", mb: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.maxSubEff`}</Typography>\r\n          <PercentBadge value={maxEfficiency} valid={artifactValid} />\r\n        </Box>}\r\n        <Box flexGrow={1} />\r\n        <Typography color=\"success.main\">{sheet?.name ?? \"Artifact Set\"} {setDescTooltip}</Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item xs=\"auto\" flexShrink={1}>\r\n            {editable ?\r\n              <CharacterDropdownButton size=\"small\" inventory value={location} onChange={equipOnChar} /> : <LocationName location={location} />}\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n          {editable && <Grid item xs=\"auto\">\r\n            <ButtonGroup sx={{ height: \"100%\" }}>\r\n              {!!onEdit && <Button color=\"info\" onClick={() => onEdit(id)} size=\"small\">\r\n                <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n              </Button>}\r\n              <Tooltip title={<Typography>{t`excludeArtifactTip`}</Typography>} placement=\"top\" arrow>\r\n                <Button onClick={() => database.updateArt({ exclude: !exclude }, id)} color={exclude ? \"error\" : \"success\"} size=\"small\">\r\n                  <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\r\n                </Button>\r\n              </Tooltip>\r\n              {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={lock}>\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n              </Button>}\r\n            </ButtonGroup>\r\n          </Grid>}\r\n        </Grid>\r\n      </CardActions>\r\n    </CardLight >\r\n  </Suspense>\r\n}\r\n","import SqBadge from '../Components/SqBadge';\r\nimport { clamp } from '../Util/Util';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`roll${clamp(Math.floor(value * 0.05) + 1, 1, 6)}`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"error\"\r\n  return <SqBadge color={badgeColor} >{text}</SqBadge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey | \"\">(propWeaponFilter ?? \"\")\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter(propWeaponFilter), [propWeaponFilter])\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.img} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, CardHeader, Grid, IconButton, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useEffect, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton'\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false }: WeaponCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseWeapon, updateDatabaseWeapon] = useState(undefined as ICachedWeapon | undefined)\r\n  useEffect(() =>\r\n    weaponId ? database.followWeapon(weaponId, updateDatabaseWeapon) : undefined,\r\n    [weaponId, updateDatabaseWeapon, database])\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => onClick?.(weaponId)} sx={{ height: \"100%\" }}>{children}</CardActionArea>,\r\n    [onClick, weaponId],\r\n  )\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.setWeaponLocation(weaponId, charKey), [database, weaponId],)\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <div className={`grad-${weaponSheet.rarity}star`} >\r\n          <CardHeader title={weaponSheet.name} avatar={<ImgIcon sx={{ fontSize: \"2em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />} titleTypographyProps={{ variant: \"h6\" }}\r\n            action={!onClick && <IconButton color=\"primary\" onClick={() => database.updateWeapon({ lock: !lock }, id)}>\r\n              {lock ? <Lock /> : <LockOpen />}\r\n            </IconButton>} />\r\n          <Grid container sx={{ flexWrap: \"nowrap\", pl: 2 }}>\r\n            <Grid item flexGrow={1}>\r\n              <Typography component=\"span\" variant=\"h4\">Lv. {level}</Typography>\r\n              <Typography component=\"span\" variant=\"h4\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n              <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n              <Typography><Stars stars={weaponSheet.rarity} colored /></Typography>\r\n            </Grid>\r\n            {/* use flex-end here to align the image to the bottom. */}\r\n            <Grid item container xs={4} alignContent=\"flex-end\">\r\n              <Box\r\n                component=\"img\"\r\n                src={img}\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                sx={{ mt: \"auto\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <CardContent>\r\n          {statMap.map(([statKey, statVal]) => {\r\n            let unit = Stat.getStatUnit(statKey)\r\n            return <Box key={statKey} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[statKey]} {Stat.getStatName(statKey)}</Typography>\r\n              <Typography>{statVal + unit}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n        {/* grow to fill the 100% heigh */}\r\n        <Box flexGrow={1} />\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container sx={{ flexWrap: \"nowrap\" }} >\r\n            <Grid item xs=\"auto\" flexShrink={1}>\r\n              {canEquip ? <CharacterDropdownButton size=\"small\" noUnselect inventory value={location} onChange={equipOnChar} filter={filter} /> : <LocationName location={location} />}\r\n            </Grid>\r\n            <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n            <Grid item xs=\"auto\">\r\n              <ButtonGroup sx={{ height: \"100%\" }}>\r\n                {!!onEdit && <Button color=\"info\" size=\"small\" onClick={() => onEdit(id)} >\r\n                  <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n                </Button>}\r\n                {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n                </Button>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n      </CardLight>\r\n    </ConditionalWrapper>\r\n  </Suspense>\r\n}","import { Box, ToggleButton } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport { uncoloredEleIcons } from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey | \"\") => void\r\n  value: ElementKey | \"\"\r\n}\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allElements} {...props}>\r\n    {allElements.map(ele => <ToggleButton key={ele} value={ele} >\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{uncoloredEleIcons[ele]}</Box>\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}\r\n","import CharacterSheet from \"../Character/CharacterSheet\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { SortOptions } from \"./SortByFilters\";\r\nexport const sortKeys = [\"level\", \"rarity\", \"name\"]\r\nexport default function characterSortOptions(database: ArtCharDatabase, characterSheets: StrictDict<CharacterKey, CharacterSheet>): SortOptions {\r\n  return {\r\n    new: {\r\n      getValue: (ck) => database._getChar(ck as CharacterKey) ? 0 : 1,\r\n      tieBreaker: \"name\"\r\n    },\r\n    name: {\r\n      getValue: (ck) => ck,\r\n    },\r\n    level: {\r\n      getValue: (ck) => database._getChar(ck as CharacterKey)?.level ?? 0,\r\n      tieBreaker: \"rarity\"\r\n    },\r\n    rarity: {\r\n      getValue: (ck) => characterSheets?.[ck]?.star,\r\n      tieBreaker: \"level\"\r\n    }\r\n  }\r\n}","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\";\r\nimport { useContext, useMemo, useState } from \"react\";\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Character from '../../Character/Character';\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey, WeaponTypeKey } from \"../../Types/consts\";\r\nimport characterSortOptions from \"../../Util/CharacterSort\";\r\nimport SortByFilters from \"../../Util/SortByFilters\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport CardLight from \"../Card/CardLight\";\r\nimport CloseButton from \"../CloseButton\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport ModalWrapper from \"../ModalWrapper\";\r\nimport SortByButton from \"../SortByButton\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { Stars } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ElementToggle from \"../ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\";\r\n\r\nconst defaultSortKeys = [\"level\", \"rarity\", \"name\"]\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const sortKeys = useMemo(() => newFirst ? [\"new\", ...defaultSortKeys] : defaultSortKeys, [newFirst])\r\n  const database = useContext(DatabaseContext)\r\n\r\n  const [sortBy, setsortBy] = useState(sortKeys[0])\r\n  const [ascending, setascending] = useState(false)\r\n  const [elementalFilter, setelementalFilter] = useState<ElementKey | \"\">(\"\")\r\n  const [weaponFilter, setweaponFilter] = useState<WeaponTypeKey | \"\">(\"\")\r\n\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n\r\n  const sortOptions = useMemo(() => characterSheets && characterSortOptions(database, characterSheets), [database, characterSheets])\r\n  const characterKeyList = useMemo(() => characterSheets && sortOptions ? [...new Set(allCharacterKeys)].filter(cKey => filter(database._getChar(cKey), characterSheets[cKey])).filter(cKey => {\r\n    if (elementalFilter && elementalFilter !== characterSheets?.[cKey]?.elementKey) return false\r\n    if (weaponFilter && weaponFilter !== characterSheets?.[cKey]?.weaponTypeKey) return false\r\n    return true\r\n  }).sort(SortByFilters(sortBy, ascending, sortOptions) as (a: CharacterKey, b: CharacterKey) => number) : [],\r\n    [database, characterSheets, filter, elementalFilter, weaponFilter, sortBy, ascending, sortOptions])\r\n\r\n  if (!characterSheets) return null\r\n  return <ModalWrapper open={show} onClose={onHide} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1} >\r\n          <Grid item>\r\n            <WeaponToggle sx={{ height: \"100%\" }} onChange={setweaponFilter} value={weaponFilter} size=\"small\" />\r\n          </Grid>\r\n          <Grid item flexGrow={1}>\r\n            <ElementToggle sx={{ height: \"100%\" }} onChange={setelementalFilter} value={elementalFilter} size=\"small\" />\r\n          </Grid>\r\n\r\n          <Grid item flexGrow={1} />\r\n\r\n          <Grid item >\r\n            <SortByButton sx={{ height: \"100%\" }}\r\n              sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\r\n              ascending={ascending} onChangeAsc={setascending} />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={6} md={4} lg={3} >\r\n          <CharacterBtn key={characterKey} characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n        </Grid>)}\r\n      </Grid></CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CharacterBtn({ onClick, characterKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const character = database._getChar(characterKey)\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const weapon = character?.equippedWeapon ? database._getWeapon(character.equippedWeapon) : undefined\r\n  const weaponSheet = usePromise(weapon ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets, database])\r\n  if (!characterSheet) return null\r\n  const rarity = characterSheet.star\r\n  return <CardActionArea onClick={onClick} >\r\n    <CardLight sx={{ display: \"flex\", alignItems: \"center\" }}  >\r\n      <Box component=\"img\" src={characterSheet.thumbImg} sx={{ width: 130, height: \"auto\" }} className={`grad-${rarity}star`} />\r\n      <Box sx={{ pl: 1 }}>\r\n        <Typography><strong>{characterSheet.name}</strong></Typography>\r\n        {stats && character ? <>\r\n          <Typography variant=\"h6\"> {characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <ImgIcon src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} />{` `}{Character.getLevelString(character)}</Typography>\r\n          <Typography >\r\n            <SqBadge color=\"success\">{`C${character.constellation}`}</SqBadge>{` `}\r\n            <SqBadge color=\"secondary\"><strong >{stats.tlvl.auto + 1}</strong></SqBadge>{` `}\r\n            <SqBadge color={stats.skillBoost ? \"info\" : \"secondary\"}><strong >{stats.tlvl.skill + 1}</strong></SqBadge>{` `}\r\n            <SqBadge color={stats.burstBoost ? \"info\" : \"secondary\"}><strong >{stats.tlvl.burst + 1}</strong></SqBadge>\r\n          </Typography>\r\n        </> : <>\r\n          <Typography variant=\"h6\"><SqBadge color=\"primary\">NEW</SqBadge></Typography>\r\n        </>}\r\n        <small><Stars stars={characterSheet.star} colored /></small>\r\n      </Box>\r\n    </CardLight>\r\n  </CardActionArea >\r\n}","import { CardContent, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../Components/FieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nexport default function WeaponStatsCard({ title, statsVals = {}, stats }: { title: Displayable, statsVals?: object, stats: ICalculatedStats }) {\r\n  if ((Object.keys(statsVals) as string[]).filter(s => s !== \"modifiers\").length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <CardDark sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Typography>{title}</Typography>\r\n    </CardContent>\r\n    <FieldDisplayList>\r\n      {fields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ColorText from \"../Components/ColoredText\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/LevelData\"\r\nimport { database as localDatabase, DatabaseContext } from \"../Database/Database\"\r\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\nimport WeaponStatsCard from \"./WeaponStatsCard\"\r\n\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  charData?: {\r\n    character: ICachedCharacter,\r\n    characterSheet: CharacterSheet,\r\n    equippedBuild?: ICalculatedStats\r\n    newBuild?: ICalculatedStats\r\n    characterDispatch: (any) => void\r\n  }\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  charData,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  const buildContextObj = useContext(buildContext)\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(propWeaponId!)!,\r\n    [propWeaponId, databaseToken, database])\r\n  const { key, level, refinement, ascension, lock } = weapon\r\n  const { location = \"\", id } = weapon as Partial<ICachedWeapon>\r\n  const weaponSheet: WeaponSheet | undefined = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  useEffect(() =>\r\n    propWeaponId ? database.followWeapon(propWeaponId, onDatabaseUpdate) : undefined,\r\n    [propWeaponId, onDatabaseUpdate, database])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const build = { ...(charData ? (charData.newBuild ?? charData.equippedBuild) : { weapon: { refineIndex: refinement - 1, level, ascension } }) } as any\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container spacing={1}>\r\n            <Grid item >\r\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n              <ButtonGroup>\r\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n                <DropdownButton title={`Refinement ${refinement}`}>\r\n                  <MenuItem>Select Weapon Refinement</MenuItem>\r\n                  <Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </MenuItem>)}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item >\r\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n                <CustomNumberInputButtonGroupWrapper >\r\n                  <CustomNumberInput onChange={setLevel} value={level}\r\n                    startAdornment=\"Lvl. \"\r\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                  />\r\n                </CustomNumberInputButtonGroupWrapper>\r\n                <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n                <DropdownButton title={\"Select Level\"} >\r\n                  {milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    const selected = lv === level && as === ascension\r\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                  })}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n                {lock ? \"Locked\" : \"Unlocked\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!!onClose && <Grid item  >\r\n          <CloseButton onClick={onClose} />\r\n        </Grid>}\r\n        {!!charData && database === localDatabase && <Grid item >\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, charData.character.key)} />\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      {(() => {\r\n        if (!weaponSheet) return null\r\n        const substatKey = weaponSheet.getSubStatKey()\r\n        const weaponDisplayMainVal = weaponSheet.getMainStatValue(level, ascension)\r\n        const weaponDisplaySubVal = weaponSheet.getSubStatValue(level, ascension)\r\n        const weaponPassiveName = weaponSheet.passiveName\r\n        const weaponBonusStats = weaponSheet.stats(build)\r\n        const sections = weaponSheet.document\r\n        return <Box display=\"flex\" gap={{ xs: 1, md: 1.5, lg: 2 }} >\r\n          <Box sx={{ maxWidth: 256 }} flexShrink={1} minWidth=\"25%\">\r\n            <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            <Typography><small>{weaponSheet.description}</small></Typography>\r\n          </Box>\r\n          <Box sx={{ mb: -1 }} flexGrow={1} >\r\n            <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {WeaponSheet.getLevelString(weapon)} {weaponPassiveName && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\r\n            <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n            <Typography variant=\"subtitle1\">{weaponPassiveName}</Typography>\r\n            <Typography gutterBottom>{weaponPassiveName && weaponSheet.passiveDescription(build)}</Typography>\r\n            {build && <buildContext.Provider value={charData ? buildContextObj : { equippedBuild: build, newBuild: undefined, compareBuild: false, setCompareBuild: undefined }}>\r\n              <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: substatKey ? weaponDisplaySubVal : undefined }} stats={build} />\r\n              <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            </buildContext.Provider>}\r\n            {charData && sections ? (() => {\r\n              const { equippedBuild, newBuild } = charData\r\n              const characterKey = (newBuild ? newBuild : equippedBuild)?.characterKey as CharacterKey | undefined\r\n              return !!characterKey && < DocumentDisplay  {...{ sections, equippedBuild, newBuild, characterKey }} />\r\n            })() : null}\r\n          </Box>\r\n        </Box>\r\n      })()}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}","import { ExpandMore } from \"@mui/icons-material\"\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, Collapse, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo, useState } from \"react\"\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../Character/CharacterUtil\"\r\nimport Formula from \"../Formula\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat, { FormulaDisplay } from \"../Stat\"\r\nimport { GetDependencies } from \"../StatDependency\"\r\nimport { ArtifactSetKey } from \"../Types/consts\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardLight from \"./Card/CardLight\"\r\nimport ColorText from \"./ColoredText\"\r\nimport ExpandButton from \"./ExpandButton\"\r\n\r\nexport default function FormulaCalcCard({ sheets }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n}) {\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <Typography>Formulas {\"&\"} Calculations</Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">Expand to see every formula and all their calculations.</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <ExpandButton\r\n            expand={expanded}\r\n            onClick={toggle}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMore />\r\n          </ExpandButton>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <CalculationDisplay sheets={sheets} build={build} />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nfunction CalculationDisplay({ sheets, build }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  build: ICalculatedStats\r\n}) {\r\n  const displayStatKeys = useMemo(() => build && Character.getDisplayStatKeys(build, sheets), [build, sheets])\r\n  if (!build) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\r\n    {Object.entries(displayStatKeys).map(([sectionKey, fields]: [string, any]) => {\r\n      const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build.characterEle)\r\n      return <CardDark key={sectionKey} sx={{ mb: 1 }}>\r\n        <CardContent sx={{ pb: 1 }}>\r\n          <Typography variant=\"h6\">{header}</Typography>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          {fields.map((field, fieldIndex) => {\r\n            if (Array.isArray(field))\r\n              return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} />\r\n            else if (typeof field === \"string\") {//simple statKey field\r\n              const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, [field]), build?.modifiers).reverse()\r\n              return Boolean(subFormulaKeys.length) && <Accordion sx={{ bgcolor: \"contentLight.main\" }} key={fieldIndex}>\r\n                <AccordionSummary expandIcon={<ExpandMore />}>\r\n                  <Typography>{Stat.printStat(field, build)}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  {subFormulaKeys.map(subKey =>\r\n                    <Typography key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></Typography>\r\n                  )}\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            }\r\n            return null\r\n          })}\r\n        </CardContent>\r\n      </CardDark>\r\n    })}\r\n  </Suspense>\r\n}\r\n\r\nfunction FormulaCalculationField({ fieldKeys, build }: { fieldKeys: string[], build: ICalculatedStats }) {\r\n  const formula = usePromise(Formula.get(fieldKeys), [fieldKeys])\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const fieldFixed = Character.getTalentFieldValue(formulaField, \"fixed\", build) ?? 0\r\n  const fieldUnit = Character.getTalentFieldValue(formulaField, \"unit\", build) ?? \"\"\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.(fieldFixed)\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Accordion sx={{ bgcolor: \"contentLight.main\" }}>\r\n    <AccordionSummary expandIcon={<ExpandMore />}>\r\n      <Typography><Box color={`${fieldVariant}.main`} component=\"strong\">{fieldText}</Box> <ColorText color=\"info\">{fieldValue}{fieldUnit}</ColorText></Typography>\r\n    </AccordionSummary>\r\n    <AccordionDetails>\r\n      <Typography><Box color={`${fieldVariant}.main`} component=\"strong\">{fieldText}</Box> <ColorText color=\"info\">{fieldValue}</ColorText> = <small>{fieldFormulaText}</small></Typography>\r\n      {subFormulaKeys.map(subKey =>\r\n        <Typography key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></Typography>\r\n      )}\r\n    </AccordionDetails>\r\n  </Accordion>\r\n}","import { Button, Card, CardContent, Divider, Grid, ToggleButton, Typography } from '@mui/material';\r\nimport { useCallback, useContext, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { buildContext } from '../../Build/Build';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport SolidToggleButtonGroup from '../../Components/SolidToggleButtonGroup';\r\nimport { database as localDatabase, DatabaseContext } from '../../Database/Database';\r\nimport useForceUpdate from '../../ReactHooks/useForceUpdate';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport { allSlotKeys, ArtifactSetKey } from '../../Types/consts';\r\nimport { objectFromKeyMap } from '../../Util/Util';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n  character: ICachedCharacter,\r\n}\r\nfunction CharacterArtifactPane({ sheets, character, character: { key: characterKey } }: CharacterArtifactPaneProps) {\r\n  const { newBuild, equippedBuild, compareBuild, setCompareBuild } = useContext(buildContext)\r\n  const database = useContext(DatabaseContext)\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = (newBuild ? newBuild : equippedBuild)\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => stats && Character.getDisplayStatKeys(stats, sheets), [stats, sheets])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  // TODO: We can also listen only to equipped artifacts\r\n  const [, updateArt] = useForceUpdate()\r\n  useEffect(() => database.followAnyArt(updateArt))\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && database.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n  }, [characterKey, newBuild, database])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    database.equipArtifacts(characterKey, objectFromKeyMap(allSlotKeys, () => \"\"))\r\n  }, [characterKey, database])\r\n  if (!stats) return null\r\n  return <>\r\n    <CardLight sx={{ mb: 1 }}>\r\n      <CardContent>\r\n        <StatDisplayComponent {...{ sheets, character, equippedBuild: (newBuild && !compareBuild) ? undefined : equippedBuild, newBuild, statsDisplayKeys: statKeys }} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            {newBuild ? <Button onClick={equipArts} className=\"mr-2\">Equip artifacts</Button> : (database === localDatabase && <Button color=\"error\" onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n          </Grid>\r\n          <Grid item>\r\n            {/* Compare against new build toggle */}\r\n            {!!newBuild && <SolidToggleButtonGroup exclusive value={compareBuild} onChange={(e, v) => setCompareBuild?.(v)} size=\"small\">\r\n              <ToggleButton value={false} >\r\n                <small>Show New artifact Stats</small>\r\n              </ToggleButton>\r\n              <ToggleButton value={true} >\r\n                <small>Compare against equipped artifacts</small>\r\n              </ToggleButton>\r\n            </SolidToggleButtonGroup>}\r\n          </Grid>\r\n          <Grid item flexGrow={1}></Grid>\r\n          <Grid item>{!!mainStatAssumptionLevel && <Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card>}</Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </CardLight>\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={6} md={4} >\r\n        <CardLight sx={{ height: \"100%\" }} ><CardContent sx={{ height: \"100%\" }}><Grid container spacing={2} flexDirection=\"column\" height=\"100%\" >\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n            <Grid item key={setKey}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>{artifactSheets?.[setKey].name ?? \"\"}</Typography>\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterKey }} />)}\r\n            </Grid>\r\n          )}\r\n        </Grid></CardContent></CardLight>\r\n      </Grid>\r\n      {allSlotKeys.map(slotKey =>\r\n        !!stats?.equippedArtifacts?.[slotKey] && <Grid item xs={6} md={4} key={stats?.equippedArtifacts?.[slotKey]} >\r\n          <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Badge, Box, Button, CardContent, CardMedia, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport { Stars } from \"../../Components/StarDisplay\";\r\nimport StatDisplay from \"../../Components/StatDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../../Stat\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport { characterStatKeys } from \"../../Util/StatUtil\";\r\nimport WeaponDisplayCard from \"../../Weapon/WeaponDisplayCard\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  character: ICachedCharacter\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, character, character: { constellation, key: characterKey } }: CharacterOverviewPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const { tlvl } = build\r\n  const elementKey = build.characterEle\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  return <Grid container spacing={1}>\r\n    <Grid item xs={12} md={3}  >\r\n      {/* Image card with star and name and level */}\r\n      <CardLight >\r\n        <CardMedia src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\r\n        <CardContent>\r\n          <Typography variant=\"h5\" >{characterSheet.name} <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} /> {StatIcon[elementKey]} </Typography>\r\n          <Typography><Stars stars={characterSheet.star} colored /></Typography>\r\n          <Typography variant=\"subtitle1\">Lvl. {Character.getLevelString(character)}</Typography>\r\n          <Grid container spacing={1}>\r\n            {[\"auto\", \"skill\", \"burst\"].map(tKey =>\r\n              <Grid item xs={4} key={tKey}>\r\n                <Badge badgeContent={tlvl[tKey] + 1} color={((tKey === \"skill\" && build.skillBoost) || (tKey === \"burst\" && build.burstBoost)) ? \"info\" : \"secondary\"}\r\n                  overlap=\"circular\"\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  sx={{\r\n                    \"& > .MuiBadge-badge\": {\r\n                      fontSize: \"1.25em\",\r\n                      padding: \".25em .4em\",\r\n                      borderRadius: \".5em\",\r\n                      lineHeight: 1,\r\n                      height: \"1.25em\"\r\n                    }\r\n                  }}>\r\n                  <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, build.characterEle)?.img} width=\"100%\" height=\"auto\" />\r\n                </Badge>\r\n              </Grid>)}\r\n          </Grid>\r\n          <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\r\n          <Grid container spacing={1}>\r\n            {[...Array(6).keys()].map(i =>\r\n              <Grid item xs={4} key={i}>\r\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i + 1}`, build.characterEle)?.img}\r\n                  sx={{\r\n                    cursor: \"pointer\",\r\n                    ...(constellation > i ? {} : { filter: \"brightness(50%)\" })\r\n                  }}\r\n                  width=\"100%\" height=\"auto\"\r\n                  onClick={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardLight>\r\n    </Grid>\r\n    <Grid item xs={12} md={9} sx={{\r\n      \"> div:not(:last-child)\": { mb: 1 }\r\n    }} >\r\n      <WeaponDisplayCard {...{ charData: { character, characterSheet, equippedBuild, newBuild, characterDispatch }, weaponId: character.equippedWeapon }} />\r\n      <MainStatsCards {...{ characterSheet, character, equippedBuild, newBuild }} />\r\n    </Grid>\r\n  </Grid >\r\n}\r\nconst EDIT = \"Edit Stats\"\r\nconst EXIT = \"EXIT\"\r\n\r\nconst additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\nconst displayStatKeys = [\"characterATK\", \"finalATK\", \"finalHP\", \"finalDEF\"]\r\ndisplayStatKeys.push(...additionalKeys)\r\nconst editStatKeys = [\"hp\", \"hp_\", \"def\", \"def_\", \"atk\", \"atk_\"]\r\neditStatKeys.push(...additionalKeys)\r\nconst otherStatKeys: any[] = [];\r\n\r\n[\"physical\", ...allElements].forEach(ele => {\r\n  otherStatKeys.push(`${ele}_dmg_`)\r\n  otherStatKeys.push(`${ele}_res_`)\r\n})\r\notherStatKeys.push(\"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\")\r\n\r\nconst miscStatkeys = [\r\n  \"normal_dmg_\", \"normal_critRate_\",\r\n  \"charged_dmg_\", \"charged_critRate_\",\r\n  \"plunging_dmg_\", \"plunging_critRate_\",\r\n  \"skill_dmg_\", \"skill_critRate_\",\r\n  \"burst_dmg_\", \"burst_critRate_\",\r\n  \"dmg_\", \"electrocharged_dmg_\",\r\n  \"vaporize_dmg_\", \"swirl_dmg_\",\r\n  \"moveSPD_\", \"atkSPD_\",\r\n  \"weakspotDMG_\",\r\n]\r\n\r\nconst resetString = {\r\n  \"characterATK\": \"Override Base ATK\",\r\n  \"characterHP\": \"Override Base HP\",\r\n  \"characterDEF\": \"Override Base DEF\"\r\n}\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nconst statBreakpoint = {\r\n  xs: 12, sm: 6, md: 6, lg: 4,\r\n} as const\r\n\r\n\r\nfunction MainStatsCards({ characterSheet, character, character: { key: characterKey, level, ascension }, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n\r\n  const specializedStatKey = characterSheet.getSpecializedStat(character.ascension)\r\n  const specializedStatVal = characterSheet.getSpecializedStatVal(character.ascension)\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild }\r\n\r\n  return <>\r\n    <StatDisplayCard\r\n      title=\"Main Stats\"\r\n      content={<Grid container columnSpacing={{ xs: 2, lg: 3 }} rowSpacing={1}>\r\n        {displayStatKeys.map(statKey => <Grid item key={statKey} {...statBreakpoint} >\r\n          <StatDisplay statKey={statKey} {...displayNewBuildProps} />\r\n        </Grid>)}\r\n        <Grid item {...statBreakpoint} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n          <span><b>Specialized:</b> <span>{specializedStatKey && StatIcon[specializedStatKey]} {Stat.getStatName(specializedStatKey)}</span></span>\r\n          <span >{`${specializedStatVal.toFixed(Stat.fixedUnit(specializedStatKey))}${specializedStatUnit}`}</span>\r\n        </Grid>\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {characterStatKeys.map(statKey => {\r\n          const defVal = Math.round(characterSheet.getBase(statKey, level, ascension))\r\n          return <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {resetString[statKey]}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? defVal}\r\n              defaultValue={defVal}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n              onReset={() => characterDispatch({ type: \"resetStats\", statKey })}\r\n            />\r\n          </Grid>\r\n        })}\r\n        {editStatKeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatNameWithPercent(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Other Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey => <Grid item {...statBreakpoint} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Grid>)}\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? (statKey === \"stamina\" ? 100 : 0)}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              defaultValue={statKey === \"stamina\" ? 100 : undefined}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Misc Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey => <Grid item {...statBreakpoint} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Grid>)}\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n  </>\r\n}\r\nfunction StatDisplayCard({ title, content, editContent }) {\r\n  const [edit, setedit] = useState(false)\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n        <Button size=\"small\" color={edit ? \"error\" : \"info\"} onClick={() => setedit(!edit)} >\r\n          <span><FontAwesomeIcon icon={edit ? faSave : faEdit} /> {edit ? EXIT : EDIT}</span>\r\n        </Button>\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      {edit ? editContent : content}\r\n    </CardContent>\r\n  </CardLight>\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\";\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport BootstrapTooltip from \"../../Components/BootstrapTooltip\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport ConditionalWrapper from \"../../Components/ConditionalWrapper\";\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../Components/DropdownMenu/DropdownButton\";\r\nimport FieldDisplay, { FieldDisplayList } from \"../../Components/FieldDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n}\r\nexport default function CharacterTalentPane({ characterSheet, character, character: { ascension, constellation, key: characterKey } }: CharacterTalentPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <>\r\n    <ReactionDisplay characterSheet={characterSheet} />\r\n    <Grid container spacing={1} sx={{ mb: 1 }}>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Grid item key={tKey} xs={12} md={6} lg={4} >\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>)}\r\n      {!!characterSheet.getTalentOfKey(\"sprint\", build?.characterEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Grid>}\r\n      {!!characterSheet.getTalentOfKey(\"passive\", build?.characterEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"passive\"\r\n          subtitle=\"Passive\"\r\n        />\r\n      </Grid>}\r\n    </Grid>\r\n    <Grid container spacing={1}>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalentOfKey(tKey, build?.characterEle)) return null\r\n        return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} >\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n    <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography>\r\n    <Grid container spacing={1}>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Grid item key={i} xs={12} md={4}\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet }: { characterSheet: CharacterSheet }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <CardLight sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Grid item key={key}><Ele stats={build} /></Grid>\r\n        })}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"superconduct.main\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.cryo} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"electrocharged.main\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.hydro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"overloaded.main\" >{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.pyro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} {StatIcon.pyro} + {StatIcon.anemo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} {StatIcon.electro}+{StatIcon.anemo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} {StatIcon.cryo} + {StatIcon.anemo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} {StatIcon.hydro} + {StatIcon.anemo}</span>\r\n} as const\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={swirlEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Box>\r\n  </CardDark>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <BootstrapTooltip placement=\"top\" title={<Typography>Claymores, Plunging Attacks and <ColorText color=\"geo\">Geo DMG</ColorText></Typography>}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <ColorText color=\"shattered\">{Stat.getStatName(sKey)} {StatIcon.hydro}+{StatIcon.cryo}+ <ColorText color=\"physical\"><small>Heavy Attack{information} </small></ColorText> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></ColorText>\r\n  </CardContent></CardDark>\r\n}\r\nconst crystalizeEleToDisplay = {\r\n  \"default\": <ColorText color=\"crystalize\">{Stat.getStatName(\"crystalize_hit\")} {StatIcon.electro}/{StatIcon.hydro}/{StatIcon.pyro}/{StatIcon.cryo}+{StatIcon.geo}</ColorText>,\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_crystalize_hit\")} {StatIcon.pyro}+{StatIcon.geo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_crystalize_hit\")} {StatIcon.electro}+{StatIcon.geo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_crystalize_hit\")} {StatIcon.cryo}+{StatIcon.geo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_crystalize_hit\")} {StatIcon.hydro}+{StatIcon.geo}</span>\r\n} as const\r\nfunction CrystalizeCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(crystalizeEleToDisplay)[0])\r\n  const sKey = ele === \"default\" ? \"crystalize_hit\" : `${ele}_crystalize_hit`\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={crystalizeEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(crystalizeEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Box>\r\n  </CardDark>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { talent, ascension, key: characterKey }, characterDispatch, talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const actionWrapeprFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\r\n    [onClickTitle],\r\n  )\r\n\r\n  if (!build) return null\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    const talentLvlKey = talent[talentKey] + levelBoost\r\n    const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n      talent[tKey] = newTalentLevelKey\r\n      characterDispatch({ talent })\r\n    }\r\n    header = <>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <DropdownButton fullWidth title={`Talent Lv. ${talentLvlKey}`} color={levelBoost ? \"info\" : \"primary\"}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <MenuItem key={i} selected={talent[talentKey] === (i + 1)} disabled={talent[talentKey] === (i + 1)} onClick={() => setTalentLevel(talentKey, i + 1)}>Talent Lv. {i + levelBoost + 1}</MenuItem>)}\r\n        </DropdownButton>\r\n      </CardContent>\r\n      <Divider />\r\n    </>\r\n\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const talentStatsFields = talentStats && statsToFields(talentStats, build)\r\n  const statsEle = talentStatsFields && !!talentStatsFields.length &&\r\n    <FieldDisplayList >\r\n      {talentStatsFields.map((field, i) =>\r\n        <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, build.characterEle)\r\n  const sections = talentSheet?.sections\r\n\r\n  return <CardLight sx={{ height: \"100%\" }}>\r\n    {header}\r\n    <CardContent>\r\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item>\r\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\r\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </ConditionalWrapper>\r\n      {/* Display document sections */}\r\n      {sections ? <DocumentDisplay {...{ sections, characterKey, equippedBuild, newBuild }} /> : null}\r\n      {statsEle}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Button, ButtonGroup, Card, CardContent, Divider, Grid, MenuItem, Skeleton, Tab, Tabs, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport { buildContext } from '../Build/Build';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport { CharacterSelectionModal } from '../Components/Character/CharacterSelectionModal';\r\nimport ThumbSide from '../Components/Character/ThumbSide';\r\nimport CloseButton from '../Components/CloseButton';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from '../Components/CustomNumberInput';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport { EnemyExpandCard } from '../Components/EnemyEditor';\r\nimport FormulaCalcCard from '../Components/FormulaCalcCard';\r\nimport { DamageOptionsCard } from '../Components/HitModeEditor';\r\nimport ImgIcon from '../Components/Image/ImgIcon';\r\nimport ElementalData from '../Data/ElementalData';\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from '../Data/LevelData';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport useCharacterReducer from '../ReactHooks/useCharacterReducer';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { ICachedCharacter } from '../Types/character';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { clamp, deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { initialCharacter } from './CharacterUtil';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  value: string;\r\n  current: string | boolean;\r\n}\r\n\r\nfunction TabPanel({ children, current, value, ...other }: TabPanelProps) {\r\n  if (value !== current) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== current}\r\n      id={`simple-tabpanel-${value}`}\r\n      aria-labelledby={`simple-tab-${value}`}\r\n      {...other}\r\n    >\r\n      {children}\r\n    </div>\r\n  </Suspense>\r\n}\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey, setCharacterKey, footer, newBuild: propNewBuild, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [compareBuild, setCompareBuild] = useState(false)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  // TODO: We probably don't need to fetch all sheets,\r\n  // though this wouldn't affect the performance currently.\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  const character = useMemo(() =>\r\n    databaseToken && (database._getChar(characterKey) ?? initialCharacter(characterKey)),\r\n    [characterKey, databaseToken, database])\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(character.equippedWeapon),\r\n    [character.equippedWeapon, databaseToken, database])\r\n\r\n  const characterSheet = characterSheets?.[characterKey]\r\n  const weaponSheet = weapon ? weaponSheets?.[weapon.key] : undefined\r\n  const sheets = characterSheet && weaponSheet && artifactSheets && { characterSheet, weaponSheet, artifactSheets }\r\n\r\n  useEffect(() => {\r\n    return database.followChar(characterKey, onDatabaseUpdate)\r\n  }, [characterKey, onDatabaseUpdate, database])\r\n\r\n  useEffect(() => database.followWeapon(character.equippedWeapon, onDatabaseUpdate),\r\n    [character.equippedWeapon, onDatabaseUpdate, database])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return undefined\r\n    return deepClone(propNewBuild)\r\n  }, [propNewBuild])\r\n\r\n  // set initial state to false, because it fails to check validity of the tab values on 1st load\r\n  const [tab, settab] = useState<string | boolean>(tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\"))\r\n\r\n  const onTab = useCallback((e, v) => settab(v), [settab])\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => databaseToken && characterSheet && weaponSheet && artifactSheets &&\r\n    Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel),\r\n    [databaseToken, character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel, database])\r\n\r\n  // main CharacterDisplayCard\r\n  return <CardDark >\r\n    <buildContext.Provider value={{ newBuild, equippedBuild, compareBuild, setCompareBuild }}>\r\n      <CardContent sx={{\r\n        \"> div:not(:last-child)\": { mb: 1 },\r\n      }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item flexGrow={1}>\r\n            <CharSelectDropdown characterSheet={characterSheet} character={character} setCharacterKey={setCharacterKey} />\r\n          </Grid>\r\n          {!!mainStatAssumptionLevel && <Grid item><Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card></Grid>}\r\n          {!!onClose && <Grid item>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>}\r\n        </Grid>\r\n        <CardLight>\r\n          <Tabs\r\n            onChange={onTab}\r\n            value={tab}\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab value=\"character\" label=\"Character\" />\r\n            {!!newBuild && <Tab value=\"newartifacts\" label=\"New Artifacts\" />}\r\n            <Tab value=\"artifacts\" label={newBuild ? \"Current Artifacts\" : \"Artifacts\"} />\r\n            <Tab value=\"talent\" label=\"Talents\" />\r\n          </Tabs>\r\n        </CardLight>\r\n        <DamageOptionsCard character={character} />\r\n        {!!sheets && <FormulaCalcCard sheets={sheets} />}\r\n        <EnemyExpandCard character={character} />\r\n\r\n        {/* Character Panel */}\r\n        {characterSheet && <TabPanel value=\"character\" current={tab}>\r\n          <CharacterOverviewPane characterSheet={characterSheet} character={character} />\r\n        </TabPanel >}\r\n        {/* Artifacts Panel */}\r\n        {sheets && <buildContext.Provider value={{ newBuild: undefined, equippedBuild, compareBuild, setCompareBuild }}>\r\n          <TabPanel value=\"artifacts\" current={tab} >\r\n            <CharacterArtifactPane sheets={sheets} character={character} />\r\n          </TabPanel >\r\n        </buildContext.Provider>}\r\n        {/* new build panel */}\r\n        {newBuild && sheets && <TabPanel value=\"newartifacts\" current={tab} >\r\n          <CharacterArtifactPane sheets={sheets} character={character} />\r\n        </TabPanel >}\r\n        {/* talent panel */}\r\n        {characterSheet && <TabPanel value=\"talent\" current={tab}>\r\n          <CharacterTalentPane characterSheet={characterSheet} character={character} />\r\n        </TabPanel >}\r\n      </CardContent>\r\n      {!!footer && <Divider />}\r\n      {footer && <CardContent sx={{ py: 1 }}>\r\n        {footer}\r\n      </CardContent>}\r\n    </buildContext.Provider>\r\n  </CardDark>\r\n}\r\n\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  character: ICachedCharacter\r\n  disabled?: boolean\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, character, character: { key: characterKey, elementKey = \"anemo\", level = 1, ascension = 0 }, disabled, setCharacterKey }: CharSelectDropdownProps) {\r\n  const [showModal, setshowModal] = useState(false)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <ImgIcon src={characterSheet.thumbImg} sx={{ mr: 1 }} />\r\n    {characterSheet.name}\r\n  </span> : <span>Select a Character</span>\r\n  const setLevel = useCallback((level) => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    characterDispatch({ level, ascension })\r\n  }, [characterDispatch])\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\r\n    else characterDispatch({ ascension: lowerAscension })\r\n  }, [characterDispatch, ascension, level])\r\n  return <>{!disabled ? <>\r\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacterKey} />\r\n    <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n      <Button disabled={!setCharacterKey} onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? \"Select a Character\"}</Button>\r\n      {characterSheet?.sheet && \"talents\" in characterSheet?.sheet && <DropdownButton title={ElementalData[elementKey].name}>\r\n        {Object.keys(characterSheet.sheet.talents).map(eleKey =>\r\n          <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\r\n            <strong>{ElementalData[eleKey].name}</strong></MenuItem>)}\r\n      </DropdownButton>}\r\n      <CustomNumberInputButtonGroupWrapper >\r\n        <CustomNumberInput onChange={setLevel} value={level}\r\n          startAdornment=\"Lvl. \"\r\n          inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n          sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n          disabled={!characterSheet} />\r\n      </CustomNumberInputButtonGroupWrapper>\r\n      <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level) || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n      <DropdownButton title={\"Select Level\"} disabled={!characterSheet}>\r\n        {milestoneLevels.map(([lv, as]) => {\r\n          const sameLevel = lv === ascensionMaxLevel[as]\r\n          const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n          const selected = lv === level && as === ascension\r\n          return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n        })}\r\n      </DropdownButton>\r\n    </ButtonGroup>\r\n  </> : <Typography variant=\"h6\">{HeaderIconDisplay} {characterSheet && Character.getLevelString(character)}</Typography>}</>\r\n}"],"sourceRoot":""}