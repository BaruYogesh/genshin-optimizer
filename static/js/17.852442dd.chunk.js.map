{"version":3,"sources":["Character/CharacterInventory.tsx","Character/CharacterDisplay.tsx","Character/CharacterRouter.tsx","Components/Card/CardLight.tsx","Components/Card/CardDark.tsx","Components/DropdownMenu/DropdownButton.tsx","Character/Character.ts","Components/StarDisplay.tsx","Assets/icon_bow.png","Assets/Assets.ts","Assets/icon_catalyst.png","Assets/icon_claymore.png","Assets/icon_polearm.png","Assets/icon_sword.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/CloseButton.tsx","Components/ModalWrapper.tsx","Components/SolidToggleButtonGroup.tsx","ReactHooks/useSheets.tsx","ReactHooks/useForceUpdate.tsx","Components/ConditionalWrapper.tsx","ProcessFormula.ts","Components/ToggleButton/WeaponToggle.tsx","StatDependency.ts","ReactHooks/useCharSelectionCallback.tsx","Util/SortByFilters.ts","Components/SortByButton.tsx","ReactHooks/useCharacter.tsx","Character/CharacterCard.tsx","Components/Character/CharacterSelectionModal.tsx","Util/CharacterSort.ts","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/InfoComponent.tsx","../node_modules/@mui/material/internal/svg-icons/Cancel.js","../node_modules/@mui/material/Chip/chipClasses.js","../node_modules/@mui/material/Chip/Chip.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js"],"names":["initialState","sortType","characterSortKeys","ascending","weaponType","element","filterReducer","state","action","filterInit","initial","dbStorage","get","CharacterInventory","props","database","useContext","DatabaseContext","useReducer","stateDisplatch","useState","newCharacter","setnewCharacter","useForceUpdate","dbDirty","forceUpdate","useEffect","ReactGA","pageview","followAnyChar","characterSheets","usePromise","CharacterSheet","getAll","set","deleteCharacter","useCallback","cKey","a","chararcterSheet","name","i18next","t","window","confirm","removeChar","editCharacter","useCharSelectionCallback","sortConfigs","useMemo","characterSortConfigs","filterConfigs","characterFilterConfigs","charKeyList","_getCharKeys","filter","filterFunction","sort","sortFunction","Box","my","display","flexDirection","gap","CardDark","sx","p","Grid","container","spacing","item","WeaponToggle","height","onChange","value","size","flexGrow","ElementToggle","SortByButton","sortKeys","onChangeAsc","fallback","xs","Skeleton","variant","width","minHeight","sm","md","lg","CardContent","Typography","textAlign","CharacterSelectionModal","newFirst","show","onHide","onSelect","justifyContent","alignItems","Button","onClick","borderRadius","icon","faPlus","className","map","charKey","CharacterCard","characterKey","footer","Divider","py","px","component","Link","to","pathname","startIcon","faCalculator","color","faLink","faTrash","InfoDisplay","React","lazy","CharacterDisplayCard","CharacterDisplay","history","useHistory","useParams","allCharacterKeys","includes","InfoComponent","pageKey","modalTitle","text","Suspense","onClose","push","CharDisplayFooter","CloseButton","large","CharacterRouter","match","useRouteMatch","path","CardLight","styled","Card","backgroundColor","theme","palette","contentLight","main","contentDark","DropdownButton","title","children","id","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","endIcon","aria-controls","aria-haspopup","aria-expanded","undefined","MenuListProps","Character","this","Error","initialStats","sheets","elementKey","characterEle","conditionalValues","key","Object","entries","Conditional","conditionals","character","conditional","maxStack","canShow","mergeCalculatedStats","resolve","stats","tlvl","activeCharacter","resonance","parseConditionalValues","conditionalValue","keys","condStats","teamStats","forEach","tstats","tChar","_getChar","artifacts","fromEntries","equippedArtifacts","artid","_getArt","calculateBuildWithConditionalsWithoutArtifacts","calculateBuildwithArtifact","artifactSheets","val","Number","isNaN","getLevelString","level","ascensionMaxLevel","ascension","getTalentFieldValue","field","defVal","evalIfFunc","hasBonusStats","statKey","bonusStats","getStatValueWithBonus","overrideStatKeys","characterBaseStats","calculateBuild","mainStatAssumptionLevel","calculatePreBuild","finalStatProcess","createInitialStats","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","values","art","mainStatKey","mainStatValue","rarity","Math","max","min","substats","substat","mergeStats","artifact","createInitialStatsWithoutConds","weaponSheets","hitMode","infusionAura","reactionMode","talent","constellation","equippedWeapon","team","characterSheet","weapon","_getWeapon","defaultInitialWeapon","weaponTypeKey","weaponSheet","overrideStats","s","additionalStats","characterLevel","characterHP","getBase","characterDEF","characterATK","refineIndex","refinement","partyBuff","partyAllModifiers","partyOnlyModifiers","partyActiveModifiers","specialStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","weaponATK","getMainStatValue","weaponSubKey","getSubStatKey","getSubStatValue","tCharKey","x","allTeam","allTeamStats","tStats","tindex","_","i","getDisplayStatKeys","eleKey","basicKeys","isAutoElemental","transReactions","ElementToReactionKeys","charFormulas","talentSheet","getTalent","addFormula","fields","formula","parseSection","section","talentKey","sections","formKey","document","length","setKey","num","artifactSheet","setEffects","setNum","parseInt","StarIcon","faStar","Stars","stars","colored","Array","Assets","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","useTranslation","minWidth","ScrollModal","Modal","overflow","paddingTop","paddingBottom","ModalContainer","Container","padding","pointerEvents","ModalWrapper","containerProps","SolidToggleButtonGroup","ToggleButtonGroup","shouldForwardProp","prop","baseColor","selectedColor","contrastText","dark","useSheets","Promise","all","WeaponSheet","then","stateDirty","update","ConditionalWrapper","condition","wrapper","falseWrapper","PreprocessFormulas","GetDependencies","modifiers","preprocessedStats","addPreModValues","mod","k","premod","modStatsFormula","mods","targets","context","modStatsFunc","Formula","computeModifier","modStats","b","relevantMod","dependencyKeys","ui","premodFormulaList","postmodFormulaList","getStage","StatData","default","Formulas","processTeam","beforePreprocess","preprocessed","tPartyModifiers","mergeModifiers","index","teamFormula","modFormula","partyAllFormula","partyOnlyFormula","partyActiveFormula","numStages","const","cb","e","newVal","exclusive","allWeaponTypeKeys","wt","src","GetFormulaDependency","dependency","Set","Proxy","target","receiver","add","toString","formulaKeyDependency","freeze","baseStat","found","dependencies","InsertDependencies","flatMap","dep","has","getCurrent","sortby","configs","Sort","config","aV","getValue","bV","localeCompare","filterOption","diff","tieBreaker","filterOptions","obj","every","optionKey","optionVal","i18nKey","selected","disabled","faSortAmountDownAlt","faSortAmountUp","useCharacter","updateCharacter","followChar","build","artifactChildren","weaponChildren","onClickHeader","onClickHandler","actionWrapperFunc","Header","Weapon","weaponId","ArtifactDisplay","Stats","autoBoost","skillBoost","burstBoost","position","content","left","top","opacity","backgroundImage","bannerImg","backgroundPosition","backgroundSize","flexShrink","maxWidth","alignSelf","zIndex","thumbImg","mt","label","flexWrap","textShadow","whiteSpace","auto","skill","burst","mainVal","toFixed","Stat","fixedUnit","subKey","subVal","levelName","passiveName","alignContent","img","lineHeight","mr","getStatName","getStatUnit","slotKey","slotIcons","getStatNameWithPercent","unit","statVal","StatIcon","defaultSortKeys","sortBy","setsortBy","setascending","elementalFilter","setelementalFilter","weaponFilter","setweaponFilter","characterKeyList","CharacterBtn","pl","new","ck","SolidColoredToggleButton","ToggleButton","allElements","ele","fontSize","uncoloredEleIcons","showInfoModal","setshowInfoModal","isArray","getRandomElementFromArray","displayText","closeModal","infoShown","faQuestionCircle","ns","key18","createSvgIcon","_jsx","d","getChipUtilityClass","slot","generateUtilityClass","chipClasses","generateUtilityClasses","_excluded","ChipRoot","overridesResolver","styles","ownerState","clickable","onDelete","avatar","capitalize","deleteIcon","root","deletable","deleteIconColor","alpha","primary","_extends","fontFamily","typography","pxToRem","transition","transitions","create","cursor","outline","textDecoration","border","verticalAlign","boxSizing","disabledOpacity","marginLeft","marginRight","mode","grey","avatarColorPrimary","avatarColorSecondary","secondary","avatarSmall","WebkitTapHighlightColor","margin","focusVisible","selectedOpacity","focusOpacity","userSelect","hoverOpacity","boxShadow","shadows","hover","focus","iconSmall","deleteIconSmall","ChipLabel","textOverflow","paddingLeft","paddingRight","isDeleteKeyboardEvent","keyboardEvent","Chip","inProps","ref","useThemeProps","avatarProp","clickableProp","ComponentProp","deleteIconProp","iconProp","onKeyDown","onKeyUp","other","_objectWithoutPropertiesLoose","chipRef","handleRef","useForkRef","handleDeleteIconClick","stopPropagation","small","ButtonBase","classes","slots","composeClasses","useUtilityClasses","moreProps","focusVisibleClassName","disableRipple","customClasses","clsx","CancelIcon","_jsxs","as","preventDefault","current","blur","getCardActionAreaUtilityClass","cardActionAreaClasses","CardActionAreaRoot","focusHighlight","CardActionAreaFocusHighlight","right","bottom","duration","short","CardActionArea"],"mappings":"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","file":"static/js/17.852442dd.chunk.js","sourcesContent":["import { faCalculator, faLink, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Box, Button, CardContent, Divider, Grid, Skeleton, Typography } from '@mui/material';\r\nimport i18next from 'i18next';\r\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useReducer, useState } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport { Link } from 'react-router-dom';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport { CharacterSelectionModal } from '../Components/Character/CharacterSelectionModal';\r\nimport SortByButton from '../Components/SortByButton';\r\nimport ElementToggle from '../Components/ToggleButton/ElementToggle';\r\nimport WeaponToggle from '../Components/ToggleButton/WeaponToggle';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport { dbStorage } from '../Database/DBStorage';\r\nimport useCharSelectionCallback from '../ReactHooks/useCharSelectionCallback';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { CharacterKey, ElementKey, WeaponTypeKey } from '../Types/consts';\r\nimport { characterFilterConfigs, characterSortConfigs, characterSortKeys } from '../Util/CharacterSort';\r\nimport { filterFunction, sortFunction } from '../Util/SortByFilters';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nconst initialState = () => ({\r\n  sortType: characterSortKeys[0],\r\n  ascending: false,\r\n  weaponType: \"\" as WeaponTypeKey | \"\",\r\n  element: \"\" as ElementKey | \"\",\r\n})\r\nexport type stateType = ReturnType<typeof initialState>\r\n\r\nfunction filterReducer(state: stateType, action): stateType {\r\n  return { ...state, ...action }\r\n}\r\nfunction filterInit(initial = initialState()): stateType {\r\n  return { ...initial, ...(dbStorage.get(\"CharacterDisplay.state\") ?? {}) }\r\n}\r\n\r\nexport default function CharacterInventory(props) {\r\n  const database = useContext(DatabaseContext)\r\n  const [state, stateDisplatch] = useReducer(filterReducer, initialState(), filterInit)\r\n  const [newCharacter, setnewCharacter] = useState(false)\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  //set follow, should run only once\r\n  useEffect(() => {\r\n    ReactGA.pageview('/character')\r\n    return database.followAnyChar(forceUpdate)\r\n  }, [forceUpdate, database])\r\n\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  //save to db\r\n  useEffect(() => {\r\n    dbStorage.set(\"CharacterDisplay.state\", state)\r\n  }, [state])\r\n\r\n  const deleteCharacter = useCallback(async (cKey: CharacterKey) => {\r\n    const chararcterSheet = await CharacterSheet.get(cKey)\r\n    let name = chararcterSheet?.name\r\n    //use translated string\r\n    if (typeof name === \"object\")\r\n      name = i18next.t(`char_${cKey}_gen:name`)\r\n\r\n    if (!window.confirm(`Are you sure you want to remove ${name}?`)) return\r\n    database.removeChar(cKey)\r\n  }, [database])\r\n\r\n  const editCharacter = useCharSelectionCallback()\r\n\r\n  const { element, weaponType } = state\r\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\r\n  const filterConfigs = useMemo(() => characterSheets && characterFilterConfigs(characterSheets), [characterSheets])\r\n  const charKeyList = useMemo(() => sortConfigs && filterConfigs && dbDirty &&\r\n    database._getCharKeys().filter(filterFunction({ element, weaponType }, filterConfigs))\r\n      .sort(sortFunction(state.sortType, state.ascending, sortConfigs)),\r\n    [dbDirty, database, sortConfigs, state.sortType, state.ascending, element, filterConfigs, weaponType])\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    <CardDark sx={{ p: 2 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => stateDisplatch({ weaponType })} value={state.weaponType} size=\"small\" />\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <ElementToggle sx={{ height: \"100%\" }} onChange={element => stateDisplatch({ element })} value={state.element} size=\"small\" />\r\n        </Grid>\r\n        <Grid item >\r\n          <SortByButton sx={{ height: \"100%\" }}\r\n            sortKeys={characterSortKeys} value={state.sortType} onChange={sortType => stateDisplatch({ sortType })}\r\n            ascending={state.ascending} onChangeAsc={ascending => stateDisplatch({ ascending })} />\r\n        </Grid>\r\n      </Grid>\r\n    </CardDark>\r\n    <Grid container spacing={1}>\r\n      <Suspense fallback={<Grid item xs={12}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 5000 }} /></Grid>}>\r\n        <Grid item xs={12} sm={6} md={4} lg={3} >\r\n          <CardDark sx={{ height: \"100%\", minHeight: 400, width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n            <CardContent>\r\n              <Typography sx={{ textAlign: \"center\" }}>Add New Character</Typography>\r\n            </CardContent>\r\n            <CharacterSelectionModal newFirst show={newCharacter} onHide={() => setnewCharacter(false)} onSelect={editCharacter} />\r\n            <Box sx={{\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n            >\r\n              <Button onClick={() => setnewCharacter(true)} sx={{\r\n                borderRadius: \"1em\"\r\n              }}>\r\n                <Typography variant=\"h1\"><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></Typography>\r\n              </Button>\r\n            </Box>\r\n          </CardDark>\r\n        </Grid>\r\n        {!!charKeyList && charKeyList.map(charKey =>\r\n          <Grid item key={charKey} xs={12} sm={6} md={4} lg={3} >\r\n            <CharacterCard\r\n              characterKey={charKey}\r\n              onClick={editCharacter}\r\n              footer={<><Divider /><Grid container spacing={1} sx={{ py: 1, px: 2 }}>\r\n                <Grid item>\r\n                  <Button size=\"small\" component={Link} to={{\r\n                    pathname: \"/build\",\r\n                    characterKey: charKey\r\n                  } as any} startIcon={<FontAwesomeIcon icon={faCalculator} />}>Build</Button>\r\n                </Grid>\r\n                <Grid item flexGrow={1}>\r\n                  <Button size=\"small\" color=\"info\" component={Link} to={{ pathname: \"/flex\", characterKey: charKey } as any}\r\n                    startIcon={<FontAwesomeIcon icon={faLink} />}>Share</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button size=\"small\" color=\"error\" startIcon={<FontAwesomeIcon icon={faTrash} />} onClick={() => deleteCharacter(charKey)}>Delete</Button>\r\n                </Grid>\r\n              </Grid></>}\r\n            />\r\n          </Grid>)}\r\n      </Suspense>\r\n    </Grid>\r\n  </Box>\r\n}\r\n","import { faCalculator, faLink } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Box, Button, Grid, Skeleton } from '@mui/material';\r\nimport React, { lazy } from 'react';\r\nimport { Redirect, useHistory, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport CloseButton from '../Components/CloseButton';\r\nimport InfoComponent from '../Components/InfoComponent';\r\nimport { allCharacterKeys, CharacterKey } from '../Types/consts';\r\nconst InfoDisplay = React.lazy(() => import('./InfoDisplay'));\r\nconst CharacterDisplayCard = lazy(() => import('./CharacterDisplayCard'))\r\nexport default function CharacterDisplay() {\r\n  const history = useHistory()\r\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\r\n  const invalidKey = !allCharacterKeys.includes(characterKey as any ?? \"\")\r\n  if (invalidKey)\r\n    return <Redirect to=\"/character\" />\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    <InfoComponent\r\n      pageKey=\"characterPage\"\r\n      modalTitle=\"Character Page Guide\"\r\n      text={[\"Every character will be tested with in-game numbers for maximum accuracy.\",\r\n        \"You can see the details of the calculations of every number.\",\r\n        \"You need to manually enable auto infusion for characters like Choungyun or Noelle.\",\r\n        \"You can change character constellations in both \\\"Character\\\" tab and in \\\"Talents\\\" tab.\",\r\n        \"Modified character Stats are bolded.\"]}\r\n    >\r\n      <InfoDisplay />\r\n    </InfoComponent>\r\n    {characterKey && <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n      <CharacterDisplayCard characterKey={characterKey} onClose={() => history.push(\"/character\")}\r\n        footer={<CharDisplayFooter onClose={() => history.push(\"/character\")} characterKey={characterKey} />}\r\n      />\r\n    </React.Suspense>}\r\n  </Box>\r\n}\r\nfunction CharDisplayFooter({ onClose, characterKey }) {\r\n  return <Grid container spacing={1}>\r\n    <Grid item>\r\n      <Button component={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      } as any}\r\n        startIcon={<FontAwesomeIcon icon={faCalculator} />}\r\n      >Generate Builds</Button>\r\n    </Grid>\r\n    <Grid item flexGrow={1}>\r\n      <Button color=\"info\" component={Link} to={{ pathname: \"/flex\", characterKey } as any}\r\n        startIcon={<FontAwesomeIcon icon={faLink} />}\r\n      >Share Character</Button>\r\n    </Grid>\r\n    <Grid item xs=\"auto\">\r\n      <CloseButton large onClick={onClose} />\r\n    </Grid>\r\n  </Grid>\r\n}\r\n","import { Route, Switch, useRouteMatch } from \"react-router\";\r\nimport CharacterInventory from \"./CharacterInventory\";\r\nimport CharacterDisplay from \"./CharacterDisplay\";\r\n\r\nexport default function CharacterRouter() {\r\n  let match = useRouteMatch();\r\n  return < Switch >\r\n    <Route path={`${match.path}/:characterKey`}>\r\n      <CharacterDisplay />\r\n    </Route>\r\n    <Route path={match.path}>\r\n      <CharacterInventory />\r\n    </Route>\r\n  </Switch >\r\n}","import { Card, styled } from \"@mui/material\";\r\n\r\nconst CardLight = styled(Card)(({ theme }) => ({\r\n  backgroundColor: theme.palette.contentLight.main\r\n}));\r\n\r\nexport default CardLight","import { Card, styled } from \"@mui/material\";\r\n\r\nconst CardDark = styled(Card)(({ theme }) => ({\r\n  backgroundColor: theme.palette.contentDark.main\r\n}));\r\n\r\nexport default CardDark","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Button, ButtonProps, Menu, Skeleton } from \"@mui/material\";\r\nimport { Suspense, useCallback, useState } from \"react\";\r\n\r\nexport type DropdownButtonProps = Omit<ButtonProps, \"title\"> & {\r\n  title: React.ReactNode,\r\n  id?: string,\r\n  children: React.ReactNode\r\n}\r\nexport default function DropdownButton({ title, children, id = \"dropdownbtn\", ...props }: DropdownButtonProps) {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget),\r\n    [setAnchorEl],\r\n  )\r\n  const handleClose = useCallback(\r\n    () => setAnchorEl(null),\r\n    [setAnchorEl],\r\n  )\r\n\r\n  return <Suspense fallback={<Button endIcon={<KeyboardArrowDown />}{...props}><Skeleton width={50} /></Button>} >\r\n    <Button\r\n      {...props}\r\n      id={id}\r\n      aria-controls=\"basic-menu\"\r\n      aria-haspopup=\"true\"\r\n      aria-expanded={open ? 'true' : undefined}\r\n      onClick={handleClick}\r\n      endIcon={<KeyboardArrowDown />}\r\n    >\r\n      {title}\r\n    </Button>\r\n    <Menu\r\n      id=\"basic-menu\"\r\n      anchorEl={anchorEl}\r\n      open={open}\r\n      onClose={handleClose}\r\n      MenuListProps={{\r\n        'aria-labelledby': id,\r\n      }}\r\n      onClick={handleClose}\r\n    >\r\n      {/* set Skeleton to be really high so the taller dropdowns can still be placed properly... */}\r\n      <Suspense fallback={<Skeleton width=\"100%\" height=\"1000\" />}>\r\n        {children}\r\n      </Suspense>\r\n    </Menu>\r\n  </Suspense>\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport finalStatProcess from \"../ProcessFormula\";\r\nimport { Sheets } from \"../ReactHooks/useSheets\";\r\nimport { ElementToReactionKeys } from \"../StatData\";\r\nimport { ICachedArtifact, StatKey } from \"../Types/artifact\";\r\nimport { DocumentSection, ICachedCharacter } from \"../Types/character\";\r\nimport { ArtifactSetKey, SlotKey } from \"../Types/consts\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { characterBaseStats, mergeCalculatedStats, mergeStats, overrideStatKeys } from \"../Util/StatUtil\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport { defaultInitialWeapon } from \"../Weapon/WeaponUtil\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getLevelString = (character: ICachedCharacter): string =>\r\n    `${character.level}/${ascensionMaxLevel[character.ascension]}`\r\n\r\n  static getTalentFieldValue = (field: IFieldDisplay, key: keyof IFieldDisplay, stats = {}, defVal = \"\"): any => {\r\n    if (!field[key]) return defVal\r\n    return evalIfFunc(field[key] as any, stats!)\r\n  }\r\n\r\n  static hasBonusStats = (character: ICachedCharacter, statKey): boolean => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasBonusStats(character, \"hp\") || Character.hasBonusStats(character, \"hp_\") || Character.hasBonusStats(character, \"characterHP\")\r\n    if (statKey === \"finalDEF\")\r\n      return Character.hasBonusStats(character, \"def\") || Character.hasBonusStats(character, \"def_\") || Character.hasBonusStats(character, \"characterDEF\")\r\n    if (statKey === \"finalATK\")\r\n      return Character.hasBonusStats(character, \"atk\") || Character.hasBonusStats(character, \"atk_\") || Character.hasBonusStats(character, \"characterATK\")\r\n    return character?.bonusStats ? (statKey in character.bonusStats) : false;\r\n  }\r\n\r\n  static getStatValueWithBonus = (character: ICachedCharacter, statKey: string) => {\r\n    if (overrideStatKeys.includes(statKey))\r\n      return character.bonusStats?.[statKey] ?? characterBaseStats(character)[statKey] ?? 0\r\n    else\r\n      return character.bonusStats?.[statKey] ?? 0\r\n  }\r\n\r\n  static calculateBuild = (character: ICachedCharacter, database: ArtCharDatabase, sheets: Sheets, mainStatAssumptionLevel = 0): ICalculatedStats => {\r\n    const initialStats = this.calculatePreBuild(character, database, sheets, mainStatAssumptionLevel)\r\n    return finalStatProcess(initialStats)\r\n  }\r\n  static calculatePreBuild = (character: ICachedCharacter, database: ArtCharDatabase, sheets: Sheets, mainStatAssumptionLevel = 0): ICalculatedStats => {\r\n    const artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, database._getArt(artid)]))\r\n    const initialStats = Character.createInitialStats(character, database, sheets)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    Character.calculateBuildwithArtifact(initialStats, artifacts, sheets.artifactSheets)\r\n    return initialStats\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (stats: ICalculatedStats, artifacts: Dict<SlotKey, ICachedArtifact>, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>): ICalculatedStats => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    const artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, stats, setToSlots)\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] ?? 0) + Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(stats.mainStatAssumptionLevel ?? 20, art.rarity * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    mergeStats(stats, artifactSetEffectsStats)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      if (!Conditional.canShow(conditional, stats)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      mergeCalculatedStats(stats, condStats)\r\n    })\r\n    return stats\r\n  }\r\n\r\n  static createInitialStatsWithoutConds = (character: ICachedCharacter, database: ArtCharDatabase, sheets: Sheets, activeCharacter = true): ICalculatedStats => {\r\n    const { characterSheets, weaponSheets } = sheets\r\n    const { key: characterKey, bonusStats = {}, elementKey, level, ascension, hitMode, infusionAura, reactionMode, talent,\r\n      constellation, equippedArtifacts, conditionalValues = {}, equippedWeapon, team } = character\r\n    const characterSheet = characterSheets[characterKey]\r\n    const weapon = database._getWeapon(equippedWeapon) ?? defaultInitialWeapon(characterSheet.weaponTypeKey) // need to ensure all characters have a weapon\r\n    const weaponSheet = weaponSheets[weapon.key]\r\n    const overrideStats = Object.fromEntries(Object.entries(bonusStats).filter(([s]) => overrideStatKeys.includes(s)))\r\n    const additionalStats = Object.fromEntries(Object.entries(bonusStats).filter(([s]) => !overrideStatKeys.includes(s)))\r\n    //generate the initalStats obj with data from Character\r\n    let initialStats = characterBaseStats(character)\r\n    initialStats.characterKey = characterKey\r\n    initialStats.characterLevel = level\r\n    initialStats.characterHP = characterSheet.getBase(\"characterHP\", level, ascension)\r\n    initialStats.characterDEF = characterSheet.getBase(\"characterDEF\", level, ascension)\r\n    initialStats.characterATK = characterSheet.getBase(\"characterATK\", level, ascension)\r\n    initialStats.characterEle = characterSheet.elementKey ?? elementKey ?? \"anemo\";\r\n    initialStats.hitMode = hitMode;\r\n    if (infusionAura)\r\n      initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = Object.fromEntries(Object.entries(talent ?? {}).map(([key, value]) => [key, value - 1])) as any;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = { key: weapon.key, refineIndex: weapon.refinement - 1 }\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n    initialStats.team = team\r\n    initialStats = { ...initialStats, ...overrideStats }\r\n    mergeStats(initialStats, additionalStats)\r\n\r\n    initialStats.partyBuff = {}\r\n    // This stores any party stats from this character.\r\n    initialStats.partyAllModifiers = {}\r\n    initialStats.partyOnlyModifiers = {}\r\n    initialStats.partyActiveModifiers = {}\r\n\r\n    //add specialized stat\r\n    const specialStatKey = characterSheet.getSpecializedStat(ascension)\r\n    if (specialStatKey) {\r\n      const specializedStatVal = characterSheet.getSpecializedStatVal(ascension)\r\n      mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n    }\r\n\r\n    //add stats from weapons\r\n    const weaponATK = weaponSheet.getMainStatValue(weapon.level, weapon.ascension)\r\n    initialStats.weaponATK = weaponATK\r\n    const weaponSubKey = weaponSheet.getSubStatKey()\r\n    if (weaponSubKey) mergeStats(initialStats, { [weaponSubKey]: weaponSheet.getSubStatValue(weapon.level, weapon.ascension) })\r\n    mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n    initialStats.activeCharacter = activeCharacter\r\n\r\n    // Team stuff\r\n    if (activeCharacter) {\r\n      // initiate Team stats.\r\n      initialStats.teamStats = team.map(tCharKey => {\r\n        if (!tCharKey) return null\r\n        const tChar = database._getChar(tCharKey)\r\n        if (!tChar) return null\r\n        // Empty teammate's team in calculation to stop recursion\r\n        const x = tChar.team\r\n        tChar.team = [\"\", \"\", \"\"] // Whatever this is, we're sooooooo not supposed to edit ICharacter objects in-place like this.\r\n        const stats = Character.createInitialStatsWithoutConds(tChar, database, sheets, false)\r\n        tChar.team = x\r\n        return stats\r\n      }) as ICalculatedStats[\"teamStats\"]\r\n\r\n      const allTeam = [characterKey, ...initialStats.team]\r\n      const allTeamStats = [initialStats, ...initialStats.teamStats]\r\n      initialStats.teamStats.forEach((tStats, tindex) => {\r\n        if (!tStats) return\r\n        tStats.team = allTeam.filter((_, i) => i !== (tindex + 1)) as ICalculatedStats[\"team\"]\r\n        tStats.teamStats = allTeamStats.filter((_, i) => i !== (tindex + 1)) as ICalculatedStats[\"teamStats\"]\r\n      });\r\n    }\r\n\r\n    Object.entries(initialStats).forEach(([key, val]) => {\r\n      if (Number.isNaN(val)) debugger\r\n    })\r\n    return initialStats\r\n  }\r\n\r\n  static createInitialStats = (character: ICachedCharacter, database: ArtCharDatabase, sheets: Sheets): ICalculatedStats => {\r\n    //generate the initalStats obj with data from Character\r\n    const initialStats = Character.createInitialStatsWithoutConds(character, database, sheets)\r\n    this.calculateBuildWithConditionalsWithoutArtifacts(initialStats, database, sheets)\r\n\r\n    return initialStats\r\n  }\r\n  static calculateBuildWithConditionalsWithoutArtifacts(initialStats: ICalculatedStats, database: ArtCharDatabase, sheets: Sheets) {\r\n    const { characterKey, characterEle: elementKey, conditionalValues = {} } = initialStats\r\n    // Handle maxStack:0 conditionals on the character. This is mainly skill boosts.\r\n    Object.entries(Conditional.conditionals.character?.[characterKey === \"Traveler\" ? `Traveler_${elementKey}` : characterKey] ?? {}).map(([cKey, conditional]) =>\r\n      !(\"states\" in conditional) && conditional.maxStack === 0 && Conditional.canShow(conditional, initialStats)\r\n      && mergeCalculatedStats(initialStats, Conditional.resolve(conditional, initialStats).stats))\r\n    // Add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    // Handle resonance autoconditionals on the context of the character\r\n    initialStats.activeCharacter && Object.entries(Conditional.conditionals.resonance ?? {}).map(([cKey, conditional]) =>\r\n      !(\"states\" in conditional) && conditional.maxStack === 0 && Conditional.canShow(conditional, initialStats)\r\n      && mergeCalculatedStats(initialStats, Conditional.resolve(conditional, initialStats).stats))\r\n\r\n    // Handle conditionals.\r\n    Conditional.parseConditionalValues(conditionalValues, (conditional, conditionalValue, keys) => {\r\n      // Ignore artifact conditionals.\r\n      if (conditional.keys![0] === \"artifact\") return\r\n      //Ignore resonance on non-active character\r\n      if (conditional.keys![0] === \"resonance\" && !initialStats.activeCharacter) return\r\n      if (!Conditional.canShow(conditional, initialStats)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      mergeCalculatedStats(initialStats, condStats)\r\n    })\r\n    // Handle Teammate's conditional\r\n    if (initialStats.activeCharacter) {\r\n      initialStats.teamStats.forEach(tstats => {\r\n        if (!tstats) return\r\n        // Calculate Teammate's build with artifacts, since the manual step of calculating artifacts is skipped in the builder path.\r\n        const tChar = database._getChar(tstats.characterKey)\r\n        if (!tChar) return\r\n        const artifacts = Object.fromEntries(Object.entries(tChar.equippedArtifacts).map(([key, artid]) => [key, database._getArt(artid)]))\r\n        this.calculateBuildWithConditionalsWithoutArtifacts(tstats, database, sheets)\r\n        Character.calculateBuildwithArtifact(tstats, artifacts, sheets.artifactSheets)\r\n      })\r\n    }\r\n    Object.entries(initialStats).forEach(([key, val]) => {\r\n      if (Number.isNaN(val)) debugger\r\n    })\r\n    return initialStats\r\n  }\r\n\r\n  static getDisplayStatKeys = (stats: ICalculatedStats, sheets: Sheets) => {\r\n    const eleKey = stats.characterEle\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`] as StatKey[]\r\n    const characterSheet = sheets.characterSheets[stats.characterKey]\r\n    const weaponSheet = sheets.weaponSheets[stats.weapon.key]\r\n    const isAutoElemental = characterSheet.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = [...ElementToReactionKeys[eleKey]]\r\n    const weaponTypeKey = characterSheet.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    const charFormulas = {}\r\n    const talentSheet = characterSheet.getTalent(eleKey)\r\n    const addFormula = (fields: IFieldDisplay[], key: string) => fields.forEach(field => {\r\n      if (!field.formula || !field?.canShow?.(stats)) return\r\n      if (!charFormulas[key]) charFormulas[key] = []\r\n      charFormulas[key].push((field.formula as any).keys)\r\n    })\r\n    const parseSection = (section: DocumentSection, key: string) => {\r\n      //conditional\r\n      if (section.conditional && Conditional.canShow(section.conditional, stats)) {\r\n        const { fields } = Conditional.resolve(section.conditional, stats)\r\n        fields && addFormula(fields, key)\r\n      }\r\n      //fields\r\n      if (section.fields) addFormula(section.fields, key)\r\n    }\r\n    talentSheet && Object.entries(talentSheet.sheets).forEach(([talentKey, { sections }]) =>\r\n      sections.forEach(section => parseSection(section, `talentKey_${talentKey}`)))\r\n\r\n    const formKey = `weapon_${stats.weapon.key}`\r\n    weaponSheet.document && weaponSheet.document.map(section => parseSection(section, formKey))\r\n\r\n    stats.setToSlots && Object.entries(stats.setToSlots).map(([setKey, slots]) => [setKey, slots.length]).forEach(([setKey, num]) => {\r\n      const artifactSheet: ArtifactSheet = sheets.artifactSheets[setKey]\r\n      if (!artifactSheet) return\r\n      Object.entries(artifactSheet.setEffects).forEach(([setNum, { document }]) => {\r\n        if (num < parseInt(setNum)) return\r\n        document && document.map(section => parseSection(section, `artifact_${setKey}_${setNum}`))\r\n      })\r\n    })\r\n    return { basicKeys, ...charFormulas, transReactions }\r\n  }\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Typography } from '@mui/material'\r\nimport { Rarity } from '../Types/consts'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\r\n  <Typography color={colored ? \"warning.main\" : undefined} component=\"span\">\r\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n  </Typography>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon_bow.7ceaa8e2.png\";","import bow from './icon_bow.png'\r\nimport catalyst from './icon_catalyst.png'\r\nimport claymore from './icon_claymore.png'\r\nimport polearm from './icon_polearm.png'\r\nimport sword from './icon_sword.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nconst Assets = {\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/icon_catalyst.db078b7b.png\";","export default __webpack_public_path__ + \"static/media/icon_claymore.63b1abb8.png\";","export default __webpack_public_path__ + \"static/media/icon_polearm.e5f4a2a1.png\";","export default __webpack_public_path__ + \"static/media/icon_sword.619c9c2d.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { Close } from \"@mui/icons-material\";\r\nimport { Button, ButtonProps } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\ntype CloseButtonProps = ButtonProps & {\r\n  large?: boolean\r\n}\r\nexport default function CloseButton({ large = false, ...props }: CloseButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  if (large)\r\n    return <Button color=\"error\" startIcon={<Close />} {...props} >{t`close`}</Button>\r\n  return <Button color=\"error\" sx={{ p: 1, minWidth: 0 }} {...props} >\r\n    <Close />\r\n  </Button>\r\n}","import { CardContent, Container, ContainerProps, Modal, ModalProps, Skeleton, styled } from \"@mui/material\"\r\nimport { Suspense } from \"react\"\r\nimport CardLight from \"./Card/CardLight\"\r\n\r\nconst ScrollModal = styled(Modal)(({ theme }) => ({\r\n  overflow: \"scroll\",\r\n  paddingTop: theme.spacing(2),\r\n  paddingBottom: theme.spacing(2),\r\n\r\n}))\r\nconst ModalContainer = styled(Container)(({ theme }) => ({\r\n  padding: 0,\r\n  minHeight: \"100%\",\r\n  display: \"flex\", flexDirection: \"column\", justifyContent: \"center\",\r\n  pointerEvents: \"none\",\r\n  \"& > *\": {\r\n    pointerEvents: \"auto\"\r\n  }\r\n}))\r\n\r\ntype ModalWrapperProps = ModalProps & {\r\n  containerProps?: ContainerProps\r\n}\r\nexport default function ModalWrapper({ children, containerProps, ...props }: ModalWrapperProps) {\r\n  return <ScrollModal {...props}>\r\n    <ModalContainer {...containerProps}>\r\n      <Suspense fallback={<CardLight><CardContent><Skeleton variant=\"rectangular\" width=\"100%\" height={300} /></CardContent></CardLight>}>\r\n        {children}\r\n      </Suspense>\r\n    </ModalContainer>\r\n  </ScrollModal>\r\n}","import { ButtonProps, styled, ToggleButtonGroup, ToggleButtonGroupProps } from \"@mui/material\";\r\n\r\nexport type SolidToggleButtonGroupProps = SolidToggleButtonGroupPropsPartial & ToggleButtonGroupProps\r\ntype SolidToggleButtonGroupPropsPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\n\r\nconst SolidToggleButtonGroup = styled(ToggleButtonGroup, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\r\n})<SolidToggleButtonGroupPropsPartial>(({ theme, baseColor = \"primary\", selectedColor = \"success\" }) => ({\r\n  '& .MuiToggleButtonGroup-grouped': {\r\n    '&': {\r\n      backgroundColor: theme.palette[baseColor].main,\r\n      color: theme.palette[baseColor].contrastText,\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: theme.palette[baseColor].dark,\r\n    },\r\n    '&.Mui-selected': {\r\n      backgroundColor: theme.palette[selectedColor].main,\r\n      color: theme.palette[selectedColor].contrastText,\r\n    },\r\n    '&.Mui-selected:hover': {\r\n      backgroundColor: theme.palette[selectedColor].dark,\r\n    },\r\n    '&.Mui-disabled': {\r\n      backgroundColor: theme.palette[baseColor].dark,\r\n    },\r\n    '&.Mui-selected.Mui-disabled': {\r\n      backgroundColor: theme.palette[selectedColor].dark,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default SolidToggleButtonGroup","import { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport { ArtifactSetKey, CharacterKey, WeaponKey } from \"../Types/consts\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport usePromise from \"./usePromise\";\r\n\r\nexport type Sheets = { characterSheets: Record<CharacterKey, CharacterSheet>, weaponSheets: Record<WeaponKey, WeaponSheet>, artifactSheets: Record<ArtifactSetKey, ArtifactSheet> }\r\nexport default function useSheets() {\r\n  return usePromise(getSheets(), [])\r\n}\r\n\r\nexport function getSheets() {\r\n  return Promise.all([CharacterSheet.getAll(), WeaponSheet.getAll(), ArtifactSheet.getAll()])\r\n    .then(([characterSheets, weaponSheets, artifactSheets]) => ({ characterSheets, weaponSheets, artifactSheets }))\r\n}","import { useCallback, useState } from \"react\"\r\n\r\nexport default function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  falseWrapper?: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\r\n}","import Formula from \"./Formula\"\r\nimport { Formulas, StatData } from \"./StatData\"\r\nimport { GetDependencies } from \"./StatDependency\"\r\nimport { ICalculatedStats, Modifier } from \"./Types/stats\"\r\nimport { mergeCalculatedStats, mergeModifiers, mergeStats } from \"./Util/StatUtil\"\r\n\r\nexport default function finalStatProcess(stats): ICalculatedStats {\r\n  let dependencies = GetDependencies(stats, stats?.modifiers)\r\n  const { initialStats: preprocessedStats, formula } = PreprocessFormulas(dependencies, stats)\r\n  formula(preprocessedStats)\r\n  return { ...stats, ...preprocessedStats }\r\n}\r\n\r\nfunction addPreModValues(stats: ICalculatedStats, mod: Modifier) {\r\n  if (!mod || !stats) return\r\n  Object.keys(mod).forEach(k => {\r\n    if (!stats.premod) stats.premod = {}\r\n    stats.premod[k] = stats?.premod?.[k] ?? stats[k]\r\n  })\r\n}\r\n\r\nfunction modStatsFormula(stats: ICalculatedStats, mods: Modifier, targets: (s: ICalculatedStats) => (ICalculatedStats | null)[], context: \"partyAll\" | \"partyOnly\" | \"partyActive\") {\r\n  if (!mods || !Object.keys(mods).length) return () => null\r\n  const modStatsFunc = Formula.computeModifier(stats, mods)\r\n  return (s: ICalculatedStats) => {\r\n    const modStats = modStatsFunc(s);\r\n    // Use mergeCalculatedStats here to allow the application to s.partyBuff\r\n    mergeCalculatedStats(s, { [context]: modStats })\r\n    targets(s).forEach(b => {\r\n      if (!b) return\r\n      addPreModValues(b, mods)\r\n    })\r\n  }\r\n}\r\nfunction relevantMod(dependencyKeys: string[], modifiers: Modifier) {\r\n  return Object.fromEntries(Object.entries(modifiers)\r\n    .filter(([key]) => dependencyKeys.includes(key)) // Keep only relevant keys\r\n  )\r\n}\r\ntype KeyedFormula = [string, (s: ICalculatedStats) => number]\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nexport function PreprocessFormulas(dependencyKeys: string[], stats: ICalculatedStats, ui = true) {\r\n  const { modifiers = {} } = stats, initialStats = {} as ICalculatedStats\r\n  const premodFormulaList: KeyedFormula[] = [], postmodFormulaList: KeyedFormula[] = []\r\n  for (const key of dependencyKeys) {\r\n    switch (getStage(key)) {\r\n      case 0: initialStats[key] = stats[key] ?? StatData[key]?.default ?? 0; break // Stat\r\n      case 1: initialStats[key] = Formulas[key]!(initialStats); break // Const Formula\r\n      case 2: premodFormulaList.push([key, Formulas[key]!]); break // Premod\r\n      case 3:  // Premod + Postmod\r\n        premodFormulaList.push([key, Formulas[key]!])\r\n        postmodFormulaList.push([key, Formulas[key]!])\r\n        break\r\n      case 4: postmodFormulaList.push([key, Formulas[key]!]); break // Postmod\r\n    }\r\n  }\r\n\r\n  initialStats.activeCharacter = stats.activeCharacter\r\n  initialStats.partyBuff = stats.partyBuff\r\n\r\n  let processTeam = (s: ICalculatedStats) => { }\r\n  if (stats.activeCharacter) {\r\n    const beforePreprocess = [...stats.teamStats]\r\n    const preprocessed: [ICalculatedStats | null, undefined | ((s: ICalculatedStats) => void)][] = stats.teamStats.map(t => {\r\n      if (!t) return [null, undefined]\r\n      if (!ui) { // if in builder, prune irrelevant mods to depdencies\r\n        t.partyAllModifiers = relevantMod(dependencyKeys, t.partyAllModifiers)\r\n        t.partyOnlyModifiers = relevantMod(dependencyKeys, t.partyOnlyModifiers)\r\n        t.partyActiveModifiers = relevantMod(dependencyKeys, t.partyActiveModifiers)\r\n      }\r\n      const tPartyModifiers = {} as Modifier\r\n      mergeModifiers(tPartyModifiers, t.partyAllModifiers)\r\n      mergeModifiers(tPartyModifiers, t.partyOnlyModifiers)\r\n      mergeModifiers(tPartyModifiers, t.partyActiveModifiers)\r\n      const tprocessKeys = GetDependencies(stats, tPartyModifiers, ui ? undefined : Object.keys(tPartyModifiers))\r\n      const { initialStats: tStats, formula: tFormula } = PreprocessFormulas(tprocessKeys, t, ui)\r\n      return [tStats, tFormula]\r\n    })\r\n    initialStats.teamStats = preprocessed.map(([stats]) => stats) as ICalculatedStats['teamStats']\r\n    const team = [initialStats, ...initialStats.teamStats]\r\n    initialStats.teamStats.forEach((t, i) => {\r\n      if (!t) return\r\n      t.teamStats = team.filter((_, index) => index !== i + 1) as ICalculatedStats['teamStats']\r\n    })\r\n    const teamFormula = preprocessed.map(([_, formula]) => formula)\r\n    processTeam = (s: ICalculatedStats) => {\r\n      s.teamStats = s.teamStats.map((t, i) => {\r\n        if (!t) return t\r\n        teamFormula[i]!(t)\r\n        return { ...beforePreprocess[i]!, ...t }\r\n      }) as ICalculatedStats['teamStats']\r\n    }\r\n  }\r\n\r\n  const modFormula = Formula.computeModifier(stats, relevantMod(dependencyKeys, modifiers))\r\n  const partyAllFormula = modStatsFormula(stats, relevantMod(dependencyKeys, stats.partyAllModifiers), (s) => [s, ...s.teamStats], \"partyAll\")\r\n  const partyOnlyFormula = modStatsFormula(stats, relevantMod(dependencyKeys, stats.partyOnlyModifiers), (s) => s.teamStats, \"partyOnly\")\r\n  const partyActiveFormula = modStatsFormula(stats, relevantMod(dependencyKeys, stats.partyActiveModifiers), (s) => [s], \"partyActive\")\r\n\r\n  return {\r\n    initialStats: initialStats as ICalculatedStats,\r\n    formula: (s: ICalculatedStats) => {\r\n      premodFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n\r\n      const modStats = Formula.computeModifier(s, s.modifiers)(s) // late-binding modifiers (arts mod)\r\n      mergeStats(modStats, modFormula(s))\r\n      modifiers && addPreModValues(s, modifiers)\r\n      s.modifiers && addPreModValues(s, s.modifiers)\r\n\r\n      // Calculate & apply modStats.\r\n      partyAllFormula(s)\r\n      partyOnlyFormula(s)\r\n      partyActiveFormula(s)\r\n\r\n      processTeam(s)\r\n\r\n      // Apply modifiers\r\n      mergeCalculatedStats(s, modStats)\r\n      mergeStats(s, { modifiers })\r\n\r\n      if (s.activeCharacter || ui)\r\n        postmodFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n    }\r\n  }\r\n}\r\nexport const numStages = 5\r\nexport function getStage(key: string): number {\r\n  if (!(key in Formulas)) return 0 // Stat\r\n  if (StatData[key]?.const) return 1 // Const\r\n  // Premod (doesn't exist right now)\r\n  if (key === \"finalATK\" || key === \"finalDEF\" || key === \"finalHP\") return 3 // Premod + Postmod\r\n  return 4 // Postmod\r\n}","import { ToggleButton } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey | \"\") => void\r\n  value: WeaponTypeKey | \"\"\r\n}\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allWeaponTypeKeys} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}","import Formula from \"./Formula\"\r\nimport { getStage, numStages } from \"./ProcessFormula\"\r\nimport { Formulas, StatData } from \"./StatData\"\r\nimport { IBaseStat } from \"./Types/character\"\r\nimport { Modifier } from \"./Types/stats\"\r\n\r\n// Generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula: (s) => number) {\r\n  const dependency: Set<string> = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop.toString()) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.entries(Formulas).map(([key, value]) => [key, GetFormulaDependency(value)])\r\n)) as Dict<string, string[]>\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(baseStat: IBaseStat, modifiers: Modifier = {}, keys = Object.keys(StatData)): Dependencies {\r\n  const found = new Set<string>()\r\n  const dependencies = [...Array(numStages)].map(_ => new Set<string>())\r\n  keys.forEach(key => InsertDependencies(baseStat, key, modifiers, dependencies, found))\r\n  return dependencies.flatMap(dep => [...dep])\r\n}\r\nfunction InsertDependencies(baseStat: IBaseStat, key: string, modifiers: Modifier, dependencies: Set<string>[], found: Set<string>) {\r\n  if (found.has(key)) return\r\n  found.add(key)\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(baseStat, k, modifiers, dependencies, found));\r\n  (modifiers[key] ?? []).forEach(path => Formula.getCurrent(path, baseStat)[1].forEach(k =>\r\n    InsertDependencies(baseStat, k, modifiers, dependencies, found)))\r\n  dependencies[getStage(key)].add(key)\r\n}\r\n\r\ntype Dependencies = string[]\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\n/**\r\n * Basically a history hook to go to the dedicated character page.\r\n * @returns \r\n */\r\nexport default function useCharSelectionCallback() {\r\n  const history = useHistory()\r\n  const cb = useCallback(\r\n    (characterKey: CharacterKey) => history.push(`/character/${characterKey}`),\r\n    [history],\r\n  )\r\n  return cb\r\n}","type SortConfig<T> = {\r\n  getValue: (id: T) => number | string\r\n  tieBreaker?: string\r\n}\r\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\r\n\r\nexport function sortFunction<Keys extends string, T>(sortby: string, ascending: boolean, configs: SortConfigs<Keys, T>) {\r\n  function Sort(a: T, b: T, ascending: boolean, config: SortConfig<T>) {\r\n    const aV = config.getValue(a)\r\n    const bV = config.getValue(b)\r\n    let diff = 0\r\n    if (typeof aV === \"string\" && typeof bV === \"string\")\r\n      diff = aV.localeCompare(bV)\r\n    else\r\n      diff = ((bV as number) - (aV as number))\r\n    return (ascending ? -1 : 1) * diff\r\n  }\r\n  return (a: T, b: T) => {\r\n    if (!configs[sortby]) return 0\r\n    const filterOption = configs[sortby]\r\n    let diff = Sort(a, b, ascending, filterOption)\r\n    if (!diff && filterOption.tieBreaker && configs[filterOption.tieBreaker])\r\n      diff = Sort(a, b, ascending, configs[filterOption.tieBreaker])\r\n    return diff\r\n  }\r\n}\r\n\r\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\r\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\r\nexport function filterFunction<Keys extends string, T>(filterOptions: Record<Keys, any>, filterConfigs: FilterConfigs<Keys, T>) {\r\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any](obj, optionVal))\r\n}","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\r\n\r\ntype SortByButtonProps = ButtonGroupProps & {\r\n  sortKeys: string[]\r\n  value: string\r\n  onChange: (value: string) => void\r\n  ascending: boolean\r\n  onChangeAsc: (value: boolean) => void\r\n}\r\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\r\nexport default function SortByButton({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: SortByButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <ButtonGroup {...props} >\r\n    <DropdownButton title={<Trans t={t} i18nKey=\"sortByFormat\" value={t(`sortMap.${value}`) as any}>Sort By: {{ value: t(`sortMap.${value}`) }}</Trans>}>\r\n      {sortKeys.map(key =>\r\n        <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\r\n      {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\r\n    </Button>\r\n  </ButtonGroup>\r\n}","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const database = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database._getChar(characterKey))\r\n  useEffect(() => updateCharacter(database._getChar(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.followChar(characterKey, updateCharacter) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}","import { Box, CardActionArea, CardContent, Chip, Grid, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport ConditionalWrapper from '../Components/ConditionalWrapper';\r\nimport ImgIcon from '../Components/Image/ImgIcon';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport StatIcon from '../Components/StatIcon';\r\nimport { ascensionMaxLevel } from '../Data/LevelData';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport useCharacter from '../ReactHooks/useCharacter';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport useSheets, { Sheets } from '../ReactHooks/useSheets';\r\nimport Stat from '../Stat';\r\nimport { CharacterKey, SlotKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { ICachedWeapon } from '../Types/weapon';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey | \"\",\r\n  onClick?: (characterKey: CharacterKey) => void,\r\n  onClickHeader?: (characterKey: CharacterKey) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  footer?: Displayable,\r\n  build?: ICalculatedStats\r\n}\r\nexport default function CharacterCard({ build, characterKey, artifactChildren, weaponChildren, onClick, onClickHeader, footer }: CharacterCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const character = useCharacter(characterKey)\r\n  const sheets = useSheets()\r\n  const characterSheet = sheets?.characterSheets[characterKey] as CharacterSheet | undefined\r\n  const stats = useMemo(() => build ?? (character && sheets && Character.calculateBuild(character, database, sheets)), [build, character, sheets, database])\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n  if (!character || !characterSheet || !stats) return null;\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n        <Header characterSheet={characterSheet} stats={stats} onClick={!onClick ? onClickHeader : undefined} />\r\n        <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n          {sheets && <Weapon weaponId={character.equippedWeapon} sheets={sheets.weaponSheets} />}\r\n          {weaponChildren}\r\n          {/* will grow to fill the 100% height */}\r\n          <Box flexGrow={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n            <ArtifactDisplay stats={stats} />\r\n            {artifactChildren}\r\n          </Box>\r\n          <Stats stats={stats} />\r\n        </CardContent>\r\n      </ConditionalWrapper>\r\n      {footer}\r\n    </CardLight>\r\n  </Suspense>\r\n}\r\nfunction Header({ onClick, characterSheet, stats: { characterKey, tlvl, characterLevel, ascension, constellation, characterEle, autoBoost, skillBoost, burstBoost } }:\r\n  { onClick?: (characterKey: CharacterKey) => void, characterSheet: CharacterSheet, stats: ICalculatedStats }) {\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterSheet.thumbImg}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} />\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n            <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n            <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item>\r\n            <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tlvl.auto + 1}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tlvl.skill + 1}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tlvl.burst + 1}</strong>} />\r\n          </Grid>\r\n        </Grid>\r\n        <Typography mt={1} ><Stars stars={characterSheet.rarity} colored /></Typography>\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\nfunction Weapon({ weaponId, sheets }: { weaponId: string, sheets: Sheets[\"weaponSheets\"] }) {\r\n  const database = useContext(DatabaseContext)\r\n  const weapon = database._getWeapon(weaponId)\r\n  if (!weapon) return null;\r\n  const weaponSheet = sheets[weapon.key]\r\n  const { level, ascension } = weapon\r\n  const name = weaponSheet?.name\r\n  const mainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const subKey = weaponSheet.getSubStatKey()\r\n  const subVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(subKey))\r\n  const levelName = WeaponSheet.getLevelString(weapon as ICachedWeapon)\r\n  const passiveName = weaponSheet?.passiveName\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.img}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\"><strong>{name}</strong></Typography>\r\n        <Typography whiteSpace=\"nowrap\" lineHeight={1}>\r\n          <SqBadge color=\"primary\" sx={{ mr: 1 }}>Lv. {levelName}</SqBadge>\r\n          {passiveName && <SqBadge color=\"info\"> Refinement {weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\">ATK: {mainVal}</Typography>\r\n        {passiveName && <Typography variant=\"subtitle2\" lineHeight={1}>{Stat.getStatName(subKey)}: {subVal}{Stat.getStatUnit(subKey)}</Typography>}\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction ArtifactDisplay({ stats }: { stats?: ICalculatedStats }) {\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n  const database = useContext(DatabaseContext)\r\n  if (!artifactSheets || !stats) return null\r\n  const { equippedArtifacts } = stats\r\n  return <Grid container spacing={1} >\r\n    {Object.entries(equippedArtifacts ?? {} as Dict<SlotKey, string>).map(([key, id]) => {\r\n      const art = database._getArt(id)\r\n      if (!art) return null\r\n      const { setKey, slotKey, mainStatKey } = art\r\n      return <Grid item key={key} flexGrow={1}>\r\n        <Chip color=\"secondary\" sx={{ width: \"100%\" }} icon={<ImgIcon src={artifactSheets?.[setKey].slotIcons[slotKey]} size={2.5} />}\r\n          label={<span>{Stat.getStatNameWithPercent(mainStatKey)}</span>} />\r\n      </Grid>\r\n    })}\r\n  </Grid>\r\n}\r\nfunction Stats({ stats }: { stats: ICalculatedStats }) {\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {statkeys.map(statKey => {\r\n      let unit = Stat.getStatUnit(statKey)\r\n      let statVal = stats[statKey]\r\n      return <Box sx={{ display: \"flex\" }} key={statKey}>\r\n        <Typography flexGrow={1}><strong>{StatIcon[statKey]} {Stat.getStatName(statKey)}</strong></Typography>\r\n        <Typography>\r\n          {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        </Typography>\r\n      </Box>\r\n    })}\r\n  </Box>\r\n}","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\";\r\nimport { useContext, useMemo, useState } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Character from '../../Character/Character';\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport useSheets from \"../../ReactHooks/useSheets\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey, WeaponTypeKey } from \"../../Types/consts\";\r\nimport { characterFilterConfigs, characterSortConfigs } from \"../../Util/CharacterSort\";\r\nimport { filterFunction, sortFunction } from \"../../Util/SortByFilters\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport CardLight from \"../Card/CardLight\";\r\nimport CloseButton from \"../CloseButton\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport ModalWrapper from \"../ModalWrapper\";\r\nimport SortByButton from \"../SortByButton\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { Stars } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ElementToggle from \"../ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\";\r\n\r\nconst defaultSortKeys = [\"level\", \"rarity\", \"name\"]\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const sortKeys = useMemo(() => newFirst ? [\"new\", ...defaultSortKeys] : defaultSortKeys, [newFirst])\r\n  const database = useContext(DatabaseContext)\r\n\r\n  const [sortBy, setsortBy] = useState(sortKeys[0])\r\n  const [ascending, setascending] = useState(false)\r\n  const [elementalFilter, setelementalFilter] = useState<ElementKey | \"\">(\"\")\r\n  const [weaponFilter, setweaponFilter] = useState<WeaponTypeKey | \"\">(\"\")\r\n\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n\r\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\r\n  const filterConfigs = useMemo(() => characterSheets && characterFilterConfigs(characterSheets), [characterSheets])\r\n  const characterKeyList = useMemo(() => (characterSheets && sortConfigs && filterConfigs) ?\r\n    [...new Set(allCharacterKeys)].filter(cKey => filter(database._getChar(cKey), characterSheets[cKey]))\r\n      .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter }, filterConfigs))\r\n      .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number) : [],\r\n    [database, characterSheets, filter, elementalFilter, weaponFilter, sortBy, ascending, sortConfigs, filterConfigs])\r\n\r\n  if (!characterSheets) return null\r\n  return <ModalWrapper open={show} onClose={onHide} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1} >\r\n          <Grid item>\r\n            <WeaponToggle sx={{ height: \"100%\" }} onChange={setweaponFilter} value={weaponFilter} size=\"small\" />\r\n          </Grid>\r\n          <Grid item flexGrow={1}>\r\n            <ElementToggle sx={{ height: \"100%\" }} onChange={setelementalFilter} value={elementalFilter} size=\"small\" />\r\n          </Grid>\r\n\r\n          <Grid item flexGrow={1} />\r\n\r\n          <Grid item >\r\n            <SortByButton sx={{ height: \"100%\" }}\r\n              sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\r\n              ascending={ascending} onChangeAsc={setascending} />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={6} md={4} lg={3} >\r\n          <CharacterBtn key={characterKey} characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n        </Grid>)}\r\n      </Grid></CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CharacterBtn({ onClick, characterKey }: { onClick: () => void, characterKey: CharacterKey }) {\r\n  const sheets = useSheets()\r\n  const database = useContext(DatabaseContext)\r\n  const character = database._getChar(characterKey)\r\n  const characterSheet = sheets?.characterSheets[characterKey]\r\n  const stats = useMemo(() => character && sheets && Character.calculateBuild(character, database, sheets), [character, sheets, database])\r\n  if (!characterSheet) return null\r\n  const rarity = characterSheet.rarity\r\n  return <CardActionArea onClick={onClick} >\r\n    <CardLight sx={{ display: \"flex\", alignItems: \"center\" }}  >\r\n      <Box component=\"img\" src={characterSheet.thumbImg} sx={{ width: 130, height: \"auto\" }} className={`grad-${rarity}star`} />\r\n      <Box sx={{ pl: 1 }}>\r\n        <Typography><strong>{characterSheet.name}</strong></Typography>\r\n        {stats && character ? <>\r\n          <Typography variant=\"h6\"> {characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <ImgIcon src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} />{` `}{Character.getLevelString(character)}</Typography>\r\n          <Typography >\r\n            <SqBadge color=\"success\">{`C${character.constellation}`}</SqBadge>{` `}\r\n            <SqBadge color=\"secondary\"><strong >{stats.tlvl.auto + 1}</strong></SqBadge>{` `}\r\n            <SqBadge color={stats.skillBoost ? \"info\" : \"secondary\"}><strong >{stats.tlvl.skill + 1}</strong></SqBadge>{` `}\r\n            <SqBadge color={stats.burstBoost ? \"info\" : \"secondary\"}><strong >{stats.tlvl.burst + 1}</strong></SqBadge>\r\n          </Typography>\r\n        </> : <>\r\n          <Typography variant=\"h6\"><SqBadge color=\"primary\">NEW</SqBadge></Typography>\r\n        </>}\r\n        <small><Stars stars={rarity} colored /></small>\r\n      </Box>\r\n    </CardLight>\r\n  </CardActionArea >\r\n}","import CharacterSheet from \"../Character/CharacterSheet\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\r\nexport const characterSortKeys = [\"level\", \"rarity\", \"name\"]\r\nexport type CharacterSortKey = typeof characterSortKeys[number]\r\n\r\nexport function characterSortConfigs(database: ArtCharDatabase, characterSheets: Record<CharacterKey, CharacterSheet>): SortConfigs<CharacterSortKey, CharacterKey> {\r\n  return {\r\n    new: {\r\n      getValue: (ck) => database._getChar(ck as CharacterKey) ? 0 : 1,\r\n      tieBreaker: \"name\"\r\n    },\r\n    name: {\r\n      getValue: (ck) => ck,\r\n    },\r\n    level: {\r\n      getValue: (ck) => database._getChar(ck as CharacterKey)?.level ?? 0,\r\n      tieBreaker: \"rarity\"\r\n    },\r\n    rarity: {\r\n      getValue: (ck) => characterSheets?.[ck]?.rarity,\r\n      tieBreaker: \"level\"\r\n    }\r\n  }\r\n}\r\n\r\nexport function characterFilterConfigs(characterSheets: Record<CharacterKey, CharacterSheet>): FilterConfigs<\"element\" | \"weaponType\", CharacterKey> {\r\n  return {\r\n    element: (ck, filter) => !filter || (filter === characterSheets?.[ck]?.elementKey),\r\n    weaponType: (ck, filter) => !filter || (filter === characterSheets?.[ck]?.weaponTypeKey),\r\n  }\r\n}","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\r\n\r\ntype SolidColoredToggleButtonPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\r\n\r\n\r\nconst SolidColoredToggleButton = styled(ToggleButton, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\r\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"primary\", selectedColor = \"success\" }) => ({\r\n  '&': {\r\n    backgroundColor: theme.palette[baseColor].main,\r\n    color: theme.palette[baseColor].contrastText,\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: theme.palette[selectedColor].main,\r\n    color: theme.palette[selectedColor].contrastText,\r\n  },\r\n  '&.Mui-selected:hover': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n  '&.Mui-disabled': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected.Mui-disabled': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n}));\r\n\r\nexport default SolidColoredToggleButton","import { Box, ToggleButtonGroup } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\r\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport { uncoloredEleIcons } from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey | \"\") => void\r\n  value: ElementKey | \"\"\r\n}\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <ToggleButtonGroup exclusive onChange={cb} value={value || allElements} {...props}>\r\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} >\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{uncoloredEleIcons[ele]}</Box>\r\n    </SolidColoredToggleButton>)}\r\n  </ToggleButtonGroup>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Button, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useState } from \"react\"\r\nimport { dbStorage } from \"../Database/DBStorage\"\r\nimport { getRandomElementFromArray } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CloseButton from \"./CloseButton\"\r\nimport ModalWrapper from \"./ModalWrapper\"\r\nimport { Translate } from \"./Translate\"\r\n\r\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }: { pageKey: string, text: Displayable | Displayable[], modalTitle: Displayable, children: JSX.Element }) {\r\n  const [showInfoModal, setshowInfoModal] = useState(dbStorage.get(\"infoShown\")?.[pageKey] ?? true)\r\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\r\n  const closeModal = () => {\r\n    const infoShown = dbStorage.get(\"infoShown\") ?? {}\r\n    infoShown[pageKey] = false\r\n    dbStorage.set(\"infoShown\", infoShown)\r\n    setshowInfoModal(false)\r\n  }\r\n  return <CardDark >\r\n    <Grid container>\r\n      <Grid item flexGrow={1}>\r\n        <Typography variant=\"caption\" pl={1} >\r\n          {displayText}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs=\"auto\">\r\n        <Button size=\"small\" color=\"info\" variant=\"contained\" onClick={() => setshowInfoModal(true)} startIcon={<FontAwesomeIcon icon={faQuestionCircle} />}>\r\n          <Translate ns=\"ui\" key18=\"info\" />\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n    <ModalWrapper containerProps={{ maxWidth: \"xl\" }} open={showInfoModal} onClose={() => closeModal()} >\r\n      <CardDark >\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{modalTitle}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={closeModal} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\r\n            {children}\r\n          </Suspense>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent sx={{ py: 1 }}>\r\n          <CloseButton large onClick={closeModal} />\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper >\r\n  </CardDark>\r\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorPrimary', 'colorSecondary', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(color)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIconOutlinedColor${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\n\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconOutlinedColor${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], variant === 'outlined' && styles[`outlined${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return _extends({\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    }),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: theme.palette[ownerState.color].main,\n    color: theme.palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.palette[ownerState.color].dark\n    }\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: theme.shadows[1]\n  }\n}, ownerState.clickable && ownerState.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette[ownerState.color].dark\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n  color: theme.palette[ownerState.color].main,\n  border: `1px solid ${alpha(theme.palette[ownerState.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: alpha(theme.palette[ownerState.color].main, 0.7),\n    '&:hover, &:active': {\n      color: theme.palette[ownerState.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, ownerState.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n\n  const {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const small = size === 'small';\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n\n  const ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  let deleteIcon = null;\n\n  if (onDelete) {\n    const customClasses = clsx(color !== 'default' && (variant === 'outlined' ? classes[`deleteIconOutlinedColor${capitalize(color)}`] : classes[`deleteIconColor${capitalize(color)}`]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  let avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n\n  let icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  const {\n    children,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;"],"sourceRoot":""}