{"version":3,"sources":["Components/StarDisplay.tsx","Assets/Weapon-class-bow-icon.png","Assets/Assets.ts","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Character/Character.ts","Character/CharacterSelection.tsx","StatDependency.ts","Character/CharacterUtil.tsx","../node_modules/react-bootstrap/esm/ToastContext.js","../node_modules/react-bootstrap/esm/ToastHeader.js","../node_modules/react-bootstrap/esm/ToastBody.js","../node_modules/react-bootstrap/esm/Toast.js","FlexPage/CodingUtil.ts","FlexPage/Schemas.ts","FlexPage/FlexUtil.ts","FlexPage/FlexDisplay.tsx"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","Assets","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","Character","this","Error","getElementalName","elementalKey","ElementalData","name","getLevelString","character","level","ascensionMaxLevel","ascension","getTalentFieldValue","field","key","stats","defVal","evalIfFunc","hasOverride","statKey","bonusStats","getStatValueWithBonus","characterBaseStats","calculateBuild","database","characterSheet","weaponSheet","artifactSheets","mainStatAssumptionLevel","artifacts","Object","fromEntries","entries","equippedArtifacts","artid","_getArt","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","values","forEach","art","mainStatKey","mainStatValue","rarity","Math","max","min","substats","substat","value","mergeStats","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","length","condStats","resolve","val","id","dependencies","GetDependencies","modifiers","PreprocessFormulas","preprocessedStats","formula","characterKey","elementKey","hitMode","infusionAura","reactionMode","talent","constellation","equippedWeapon","weapon","_getWeapon","defaultInitialWeapon","weaponTypeKey","characterLevel","characterHP","getBase","characterDEF","characterATK","characterEle","weaponType","tlvl","refineIndex","refinement","specialStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","getTalentStatsAll","s","weaponATK","getMainStatValue","weaponSubKey","getSubStatKey","getSubStatValue","weaponCond","otherCond","canShow","getDisplayStatKeys","eleKey","basicKeys","isAutoElemental","push","transReactions","ElementToReactionKeys","includes","charFormulas","talentSheet","getTalent","addFormula","fields","parseSection","section","sheets","talentKey","sections","formKey","document","num","artifactSheet","setEffects","setNum","CharacterSelectionDropdownList","onSelect","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","getAll","_getCharKeys","filter","cKey","sort","DropDownItem","get","Item","onClick","nameWIthIcon","CharSelectionButton","useState","show","setshow","HeaderIconDisplay","src","thumbImg","roundedCircle","disabled","CharacterSelectionModal","onHide","toggle","filterReducer","oldFilter","newFilter","sortBy","setsortBy","useReducer","elementalFilter","elementalFilterDispatch","weaponFilter","weaponFilterDispatch","sortingFunc","ck","_getChar","star","characterKeyList","Set","allCharacterKeys","a","b","diff","size","contentClassName","bg","text","Header","xs","allElements","variant","uncoloredEleIcons","allWeaponTypeKeys","type","onChange","faTimes","Body","CharacterBtn","undefined","WeaponSheet","useMemo","lg","md","thumbnail","auto","skill","burst","StatIcon","GetFormulaDependency","dependency","Proxy","target","prop","receiver","add","toString","formulaKeyDependency","freeze","Formulas","baseStat","StatData","found","numStages","InsertDependencies","flatMap","dep","has","k","path","Formula","getCurrent","getStage","getFormulaTargetsDisplayHeading","startsWith","subkey","split","getTalentOfKey","initialCharacter","objectFromKeyMap","allSlotKeys","buildSettings","initialBuildSettings","ToastContext","React","createContext","onClose","_excluded","ToastHeader","forwardRef","_ref","ref","bsPrefix","closeLabel","closeButton","children","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","context","handleClick","useEventCallback","e","createElement","_extends","classNames","CloseButton","label","displayName","defaultProps","createWithBsPrefix","Toast","_ref$transition","transition","Transition","Fade","_ref$show","_ref$animation","animation","_ref$delay","delay","_ref$autohide","autohide","delayRef","useRef","onCloseRef","useEffect","current","autohideTimeout","useTimeout","autohideToast","autohideFunc","useCallback","set","toastContext","hasAnimation","toast","role","Provider","in","unmountOnExit","assign","ToastBody","decode","string","schema","stream","BlockStream","result","decodeItem","end","encodeItem","data","pathItem","encode","uint","uintToString","encodeLength","encodeUInt","match","encodeString","schemas","defaultSchema","item","join","encodeArray","default","encodeObject","keySchema","valueSchema","items","encodeSparse","error","decodeLength","stringToUInt","take","decodeUInt","decodeString","unused","decodeArray","decodeObject","decodeSparse","number","remainder","floor","String","fromCharCode","padEnd","multiplier","code","charCodeAt","offset","count","slice","float","replace","parseFloat","array","other","object","sparse","optional","list","defaultValue","indexOf","index","fixed","stat","artifactSet","allArtifactSets","slot","allHitModes","allReactionModes","element","factor","endsWith","crawlObject","c","isArray","pathvalues","last","pop","next","artifactV2","numStars","slotKey","lock","weaponV2","levelKey","overrideMainVal","overrideSubVal","lvla","findIndex","maxLevel","addAsc","characterV2","overrideLevel","talentLevelKeys","baseStatOverrides","reserved","isAscended","levelString","weaponLevel","flexV2","artifactV3","location","raritySlotKey","weaponV3","ascensionRefine","levelDiff","characterV3","ascensionConstellation","flexV3","characters","weapons","createFlexObj","parseFlexObj","parameters","v","decoded","newCharacterKey","toLowerCase","storage","SandboxStorage","setString","ArtCharDatabase","parseFlexObjV2","d","charKey","parseFlexObjV3","FlexDisplay","useLocation","searchStr","search","flexResult","substring","to","Database","Display","flexObj","window","scrollTo","settoast","url","href","Container","style","position","top","right","Card","InputGroup","Prepend","Button","navigator","clipboard","writeText","then","catch","console","faLink","Form","Control","readOnly","select","CharacterDisplayCard"],"mappings":"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","file":"static/js/16.48e33fcf.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Rarity } from '../Types/consts'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","import bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nconst Assets = {\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { ArtifactSetKey, ElementKey, SlotKey } from \"../Types/consts\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { characterBaseStats, mergeStats } from \"../Util/StatUtil\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport { defaultInitialWeapon } from \"../Weapon/WeaponUtil\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey: ElementKey | \"physical\"): string =>\r\n    ElementalData[elementalKey].name\r\n  static getLevelString = (character: ICachedCharacter): string =>\r\n    `${character.level}/${ascensionMaxLevel[character.ascension]}`\r\n\r\n  static getTalentFieldValue = (field: IFieldDisplay, key: keyof IFieldDisplay, stats = {}, defVal = \"\"): any => {\r\n    if (!field[key]) return defVal\r\n    return evalIfFunc(field[key] as any, stats!)\r\n  }\r\n\r\n  static hasOverride = (character: ICachedCharacter, statKey): boolean => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\")\r\n    if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\")\r\n    if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\")\r\n    return character?.bonusStats ? (statKey in character.bonusStats) : false;\r\n  }\r\n\r\n  static getStatValueWithBonus = (character: ICachedCharacter, statKey: string) => {\r\n    return character.bonusStats?.[statKey] ?? characterBaseStats(character)[statKey] ?? 0\r\n  }\r\n\r\n  static calculateBuild = (character: ICachedCharacter, database: ArtCharDatabase, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, mainStatAssumptionLevel = 0): ICalculatedStats => {\r\n    const artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, database._getArt(artid)]))\r\n    const initialStats = Character.createInitialStats(character, database, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats: ICalculatedStats, artifacts: Dict<SlotKey, ICachedArtifact>, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>): ICalculatedStats => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    const artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, initialStats, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(stats.mainStatAssumptionLevel, art.rarity * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    mergeStats(stats, artifactSetEffectsStats)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      mergeStats(stats, condStats)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats, stats?.modifiers)\r\n    const { initialStats: preprocessedStats, formula } = PreprocessFormulas(dependencies, stats)\r\n    formula(preprocessedStats)\r\n    return { ...stats, ...preprocessedStats }\r\n  }\r\n\r\n  static createInitialStats = (character: ICachedCharacter, database: ArtCharDatabase, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    const { key: characterKey, bonusStats = {}, elementKey, level, ascension, hitMode, infusionAura, reactionMode, talent, constellation, equippedArtifacts, conditionalValues = {}, equippedWeapon } = character\r\n    const weapon = database._getWeapon(equippedWeapon) ?? defaultInitialWeapon(characterSheet.weaponTypeKey) // need to ensure all characters have a weapon\r\n\r\n    //generate the initalStats obj with data from Character \r\n    const initialStats = characterBaseStats(character)\r\n    mergeStats(initialStats, bonusStats)\r\n    initialStats.characterKey = characterKey\r\n    initialStats.characterLevel = level\r\n    initialStats.characterHP = characterSheet.getBase(\"hp\", level, ascension)\r\n    initialStats.characterDEF = characterSheet.getBase(\"def\", level, ascension)\r\n    initialStats.characterATK = characterSheet.getBase(\"atk\", level, ascension)\r\n    initialStats.characterEle = characterSheet.elementKey ?? elementKey ?? \"anemo\";\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = Object.fromEntries(Object.entries(talent ?? {}).map(([key, value]) => [key, value - 1])) as any;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = { key: weapon.key, refineIndex: weapon.refinement - 1 }\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n\r\n    //add specialized stat\r\n    const specialStatKey = characterSheet.getSpecializedStat(ascension)\r\n    if (specialStatKey) {\r\n      const specializedStatVal = characterSheet.getSpecializedStatVal(ascension)\r\n      mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n    }\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats, initialStats.characterEle).forEach(s => mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponATK = weaponSheet.getMainStatValue(weapon.level, weapon.ascension)\r\n    initialStats.weaponATK = weaponATK\r\n    const weaponSubKey = weaponSheet.getSubStatKey()\r\n    if (weaponSubKey) mergeStats(initialStats, { [weaponSubKey]: weaponSheet.getSubStatValue(weapon.level, weapon.ascension) })\r\n    mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      if (keys[0] === \"character\" && keys[3] === \"talents\" && keys[4] !== elementKey) return //fix for Traveler, make sure conditionals match element.\r\n      if (!Conditional.canShow(conditional, initialStats)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n\r\n  static getDisplayStatKeys = (stats: ICalculatedStats, { characterSheet, weaponSheet, artifactSheets }: { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet> }) => {\r\n    const eleKey = stats.characterEle\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = characterSheet.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = characterSheet.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    const charFormulas = {}\r\n    const talentSheet = characterSheet.getTalent(eleKey)\r\n    const addFormula = (fields, key) => fields.forEach(field => {\r\n      if (!field.formula || !field?.canShow?.(stats)) return\r\n      if (!charFormulas[key]) charFormulas[key] = []\r\n      charFormulas[key].push((field.formula as any).keys)\r\n    })\r\n    const parseSection = (section, key) => {\r\n      //conditional\r\n      if (section.conditional && Conditional.canShow(section.conditional, stats)) {\r\n        const { fields }: { fields?: Array<IFieldDisplay> } = Conditional.resolve(section.conditional, stats, null)\r\n        fields && addFormula(fields, key)\r\n      }\r\n      //fields\r\n      if (section.fields) addFormula(section.fields, key)\r\n    }\r\n    talentSheet && Object.entries(talentSheet.sheets).forEach(([talentKey, { sections }]) => {\r\n      if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n      sections.forEach(section => parseSection(section, `talentKey_${talentKey}`))\r\n    })\r\n\r\n    const formKey = `weapon_${stats.weapon.key}`\r\n    weaponSheet.document && weaponSheet.document.map(section => parseSection(section, formKey))\r\n\r\n    stats.setToSlots && Object.entries(stats.setToSlots).map(([setKey, slots]) => [setKey, slots.length]).forEach(([setKey, num]) => {\r\n      const artifactSheet = artifactSheets[setKey] as ArtifactSheet\r\n      if (!artifactSheet) return\r\n      Object.entries(artifactSheet.setEffects).forEach(([setNum, { document }]) => {\r\n        if (num < parseInt(setNum)) return\r\n        document && document.map(section => parseSection(section, `artifact_${setKey}_${setNum}`))\r\n      })\r\n    })\r\n\r\n    return { basicKeys, ...charFormulas, transReactions }\r\n  }\r\n}","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo, useReducer, useState } from \"react\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Image, Modal, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Assets from \"../Assets/Assets\";\r\nimport { Stars } from \"../Components/StarDisplay\";\r\nimport StatIcon, { uncoloredEleIcons } from \"../Components/StatIcon\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport usePromise from \"../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allCharacterKeys, allElements, allWeaponTypeKeys, CharacterKey, WeaponTypeKey } from \"../Types/consts\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport Character from './Character';\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\n\r\nexport function CharacterSelectionDropdownList({ onSelect, weaponTypeKey }: { onSelect: (ckey: CharacterKey) => void, weaponTypeKey?: WeaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  return <>{database._getCharKeys().filter(cKey =>\r\n    weaponTypeKey ? (characterSheets?.[cKey]?.weaponTypeKey === weaponTypeKey) : true\r\n  ).sort().map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>{characterSheet.nameWIthIcon}</Dropdown.Item>\r\n}\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\nexport function CharSelectionButton({ characterSheet, onSelect, filter }: { characterSheet?: CharacterSheet, onSelect?: (cKey: CharacterKey) => void, filter?: characterFilter }) {\r\n  const [show, setshow] = useState(false)\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <Image src={characterSheet.thumbImg} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {characterSheet.name} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  return <>\r\n    <Button disabled={!onSelect} onClick={() => setshow(true)} >{HeaderIconDisplay}</Button>\r\n    <CharacterSelectionModal show={show} onHide={() => setshow(false)} onSelect={onSelect} filter={filter} />\r\n  </>\r\n}\r\n\r\nconst toggle = {\r\n  rarity: \"Rarity\",\r\n  level: \"Level\",\r\n  name: \"Name\"\r\n} as const\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true }: CharacterSelectionModalProps) {\r\n  const database = useContext(DatabaseContext)\r\n\r\n  const [sortBy, setsortBy] = useState(() => Object.keys(toggle)[0])\r\n  const [elementalFilter, elementalFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n\r\n  const sortingFunc = {\r\n    level: (ck) => database._getChar(ck)?.level ?? 0,\r\n    rarity: (ck) => characterSheets?.[ck]?.star,\r\n    name: (ck) => characterSheets?.[ck]?.name\r\n  }\r\n\r\n  const characterKeyList = !characterSheets ? [] : [...new Set(allCharacterKeys)].filter(cKey => filter(database._getChar(cKey), characterSheets[cKey])).filter(cKey => {\r\n    if (elementalFilter && elementalFilter !== characterSheets?.[cKey]?.elementKey) return false\r\n    if (weaponFilter && weaponFilter !== characterSheets?.[cKey]?.weaponTypeKey) return false\r\n    return true\r\n  }).sort((a, b) => {\r\n    if (sortBy === \"name\") {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      // names must be equal\r\n      return 0;\r\n    }\r\n    if (sortBy === \"level\") {\r\n      const diff = sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n    } else {\r\n      const diff = sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n    }\r\n  })\r\n\r\n  if (!characterSheets) return null\r\n  return <Modal show={show} size=\"xl\" contentClassName=\"bg-transparent\" onHide={onHide}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              {allElements.map(eleKey => <Button key={eleKey} variant={(!elementalFilter || elementalFilter === eleKey) ? eleKey : \"secondary\"} className=\"py-1 px-2 text-white\" onClick={() => elementalFilterDispatch(eleKey)} >\r\n                <h3 className=\"mb-0\">{uncoloredEleIcons[eleKey]}</h3>\r\n              </Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {allWeaponTypeKeys.map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"secondary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}>\r\n                  <h3 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h3></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <span>Sort by: </span>\r\n            <ToggleButtonGroup type=\"radio\" name=\"level\" value={sortBy} onChange={setsortBy}>\r\n              {Object.entries(toggle).map(([key, text]) =>\r\n                <ToggleButton key={key} value={key} variant={sortBy === key ? \"success\" : \"primary\"}>\r\n                  <h6 className=\"mb-0\">{text}</h6>\r\n                </ToggleButton>)}\r\n            </ToggleButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <Button onClick={onHide} variant=\"danger\"><FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body><Row>\r\n        {characterKeyList.map(characterKey => <CharacterBtn key={characterKey} characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />)}\r\n      </Row></Card.Body>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nfunction CharacterBtn({ onClick, characterKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const character = database._getChar(characterKey)\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const weapon = character?.equippedWeapon ? database._getWeapon(character.equippedWeapon) : undefined\r\n  const weaponSheet = usePromise(weapon ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets, database])\r\n  if (!characterSheet) return null\r\n  return <Col key={characterKey} lg={3} md={4} className=\"mb-2\">\r\n    <Button className=\"w-100\" variant=\"darkcontent\" onClick={onClick}>\r\n      <h5>{characterSheet.name}</h5>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={characterSheet.thumbImg} className={`thumb-big grad-${characterSheet.star}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          {stats && character ? <>\r\n            <h5 className=\"mb-0\">Lv. {Character.getLevelString(character)} {`C${character.constellation}`}</h5>\r\n            <h6 className=\"mb-0\">\r\n              <Badge variant=\"secondary\"><strong className=\"mx-1\">{stats.tlvl.auto + 1}</strong></Badge>{` `}\r\n              <Badge variant=\"secondary\"><strong className=\"mx-1\">{stats.tlvl.skill + 1}</strong></Badge>{` `}\r\n              <Badge variant=\"secondary\"><strong className=\"mx-1\">{stats.tlvl.burst + 1}</strong></Badge>\r\n            </h6>\r\n          </> : <>\r\n            <h4><Badge variant=\"primary\">NEW</Badge></h4>\r\n          </>}\r\n          <h6 className=\"mb-0\"><Stars stars={characterSheet.star} colored /></h6>\r\n          <h3 className=\"mb-0\">{characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <Image src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n        </Col>\r\n      </Row>\r\n    </Button>\r\n  </Col>\r\n}","import Formula from \"./Formula\"\r\nimport { Formulas, getStage, numStages, StatData } from \"./StatData\"\r\nimport { IBaseStat } from \"./Types/character\"\r\nimport { Modifier } from \"./Types/stats\"\r\n\r\n// Generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula: (s) => number) {\r\n  const dependency: Set<string> = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop.toString()) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.entries(Formulas).map(([key, value]) => [key, GetFormulaDependency(value)])\r\n)) as Dict<string, string[]>\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(baseStat: IBaseStat, modifiers: Modifier = {}, keys = Object.keys(StatData)): Dependencies {\r\n  const found = new Set<string>()\r\n  const dependencies = [...Array(numStages)].map(_ => new Set<string>())\r\n  keys.forEach(key => InsertDependencies(baseStat, key, modifiers, dependencies, found))\r\n  return dependencies.flatMap(dep => [...dep])\r\n}\r\nfunction InsertDependencies(baseStat: IBaseStat, key: string, modifiers: Modifier, dependencies: Set<string>[], found: Set<string>) {\r\n  if (found.has(key)) return\r\n  found.add(key)\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(baseStat, k, modifiers, dependencies, found));\r\n  (modifiers[key] ?? []).forEach(path => Formula.getCurrent(path, baseStat)[1].forEach(k =>\r\n    InsertDependencies(baseStat, k, modifiers, dependencies, found)))\r\n  dependencies[getStage(key)].add(key)\r\n}\r\n\r\ntype Dependencies = string[]\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n","import { Badge } from \"react-bootstrap\"\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\"\r\nimport { initialBuildSettings } from \"../Build/BuildSetting\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { allSlotKeys, ArtifactSetKey, CharacterKey, ElementKey } from \"../Types/consts\"\r\nimport { objectFromKeyMap } from \"../Util/Util\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport CharacterSheet from \"./CharacterSheet\"\r\n\r\nexport function getFormulaTargetsDisplayHeading(key: string, { characterSheet, weaponSheet, artifactSheets }: { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet> }, eleKey: ElementKey = \"anemo\") {\r\n  if (key === \"basicKeys\") return \"Basic Stats\"\r\n  else if (key === \"genericAvgHit\") return \"Generic Optimization Values\"\r\n  else if (key === \"transReactions\") return \"Transformation Reaction\"\r\n  else if (key.startsWith(\"talentKey_\")) {\r\n    const subkey = key.split(\"talentKey_\")[1]\r\n    return (characterSheet?.getTalentOfKey(subkey, eleKey)?.name ?? subkey)\r\n  } else if (key.startsWith(\"weapon_\")) {\r\n    const subkey = key.split(\"weapon_\")[1]\r\n    return (weaponSheet?.name ?? subkey)\r\n  } else if (key.startsWith(\"artifact_\")) {\r\n    const [, setKey, num] = key.split('_')\r\n    return <span>{artifactSheets[setKey]?.name} <Badge variant=\"success\">{num}-Set</Badge></span>\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key, // the game character this is based off\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: objectFromKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    conditionalValues: {},\r\n    bonusStats: {},\r\n    buildSettings: initialBuildSettings(),\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n  }\r\n}","import React from 'react'; // TODO: check\n\nvar ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose: function onClose() {}\n});\nexport default ToastContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"closeLabel\", \"closeButton\", \"className\", \"children\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nvar defaultProps = {\n  closeLabel: 'Close',\n  closeButton: true\n};\nvar ToastHeader = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      closeLabel = _ref.closeLabel,\n      closeButton = _ref.closeButton,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  var context = useContext(ToastContext);\n  var handleClick = useEventCallback(function (e) {\n    if (context && context.onClose) {\n      context.onClose(e);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(bsPrefix, className)\n  }), children, closeButton && /*#__PURE__*/React.createElement(CloseButton, {\n    label: closeLabel,\n    onClick: handleClick,\n    className: \"ml-2 mb-1\",\n    \"data-dismiss\": \"toast\"\n  }));\n});\nToastHeader.displayName = 'ToastHeader';\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('toast-body');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\"];\nimport React, { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Fade from './Fade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nvar Toast = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$transition = _ref.transition,\n      Transition = _ref$transition === void 0 ? Fade : _ref$transition,\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? true : _ref$show,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? true : _ref$animation,\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 3000 : _ref$delay,\n      _ref$autohide = _ref.autohide,\n      autohide = _ref$autohide === void 0 ? false : _ref$autohide,\n      onClose = _ref.onClose,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose);\n  useEffect(function () {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  var autohideTimeout = useTimeout();\n  var autohideToast = !!(autohide && show);\n  var autohideFunc = useCallback(function () {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(function () {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  var toastContext = useMemo(function () {\n    return {\n      onClose: onClose\n    };\n  }, [onClose]);\n  var hasAnimation = !!(Transition && animation);\n  var toast = /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(bsPrefix, className, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: toastContext\n  }, hasAnimation && Transition ? /*#__PURE__*/React.createElement(Transition, {\n    in: show,\n    unmountOnExit: true\n  }, toast) : toast);\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","// @ts-nocheck\r\n// The *type* of these data are in schema and so are unknown at compile time.\r\n// Type annotation here will only amount to adding `any` everywhere\r\n\r\n/// Schema keys\r\n/// Common {\r\n///   encode?: A function that transform encoding object into the specified format\r\n///   decode?: A function that transform object in the specified format into the decoded object\r\n/// }\r\n///\r\n/// UInt: { type: \"uint\",\r\n///   length?: number of bytes, uses variable-length format if not set,\r\n/// }\r\n/// String: { type: \"string\" }\r\n/// Array: { type: \"array\",\r\n///   schemas?: Array of schemas, in the same order as the item,\r\n///   defaultSchema?: Default schema for when `schemas[i]` is `null`,\r\n/// }\r\n/// Object: { type: \"object\",\r\n///   schemas: A key-schema dictionary. All keys are encoded\r\n///   default: default value if the object[key] doesn't exist\r\n/// }\r\n/// Sparse: { type: \"sparse\",\r\n///   keys?: A list of permitted keys, `null` if all keys are permitted,\r\n///   keySchema: Common schema for keys,\r\n///   valueSchema: Common schema for values,\r\n/// }\r\n\r\nexport function encode(data, schema) {\r\n  return encodeItem(data, schema, null)\r\n}\r\nexport function decode(string, schema) {\r\n  const stream = new BlockStream(string)\r\n  const result = decodeItem(stream, schema, null)\r\n  stream.end()\r\n  return result\r\n}\r\n\r\nfunction encodeItem(data, schema, pathItem) {\r\n  try {\r\n    if (schema.encode)\r\n      data = schema.encode(data)\r\n    switch (schema.type) {\r\n      case \"uint\": return encodeUInt(data, schema)\r\n      case \"string\": return encodeString(data, schema)\r\n      case \"array\": return encodeArray(data, schema)\r\n      case \"object\": return encodeObject(data, schema)\r\n      case \"sparse\": return encodeSparse(data, schema)\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\nfunction decodeItem(stream, schema, pathItem) {\r\n  try {\r\n    let result\r\n    switch (schema.type) {\r\n      case \"uint\": result = decodeUInt(stream, schema); break\r\n      case \"string\": result = decodeString(stream, schema); break\r\n      case \"array\": result = decodeArray(stream, schema); break\r\n      case \"object\": result = decodeObject(stream, schema); break\r\n      case \"sparse\": result = decodeSparse(stream, schema); break\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n    if (schema.decode)\r\n      return schema.decode(result)\r\n    return result\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\n\r\nfunction encodeSparse(data, schema) {\r\n  const { keySchema, keys, valueSchema } = schema\r\n  const items = Object.entries(data).filter(([key]) => keys?.includes(key) ?? true)\r\n\r\n  return encodeLength(items.length) + items.map(([key, value]) =>\r\n    encodeItem(key, keySchema, key) + encodeItem(value, valueSchema, key)\r\n  ).join('')\r\n}\r\nfunction decodeSparse(stream, schema) {\r\n  const { keys, keySchema, valueSchema } = schema\r\n  const length = decodeLength(stream)\r\n\r\n  return Object.fromEntries([...new Array(length)].map(() => {\r\n    const key = decodeItem(stream, keySchema, null)\r\n    const value = decodeItem(stream, valueSchema, key)\r\n    return [key, value]\r\n  }).filter(([key]) => keys?.includes(key) ?? true))\r\n}\r\n\r\nfunction encodeObject(data, schema: { schemas: any[], default: any }) {\r\n  const { schemas = [] } = schema\r\n  return Object.entries(schemas).map(([key, schema]) =>\r\n    encodeItem(key in data ? data[key] : schema.default, schema, key)\r\n  ).join('')\r\n}\r\nfunction decodeObject(stream, schema) {\r\n  const { schemas = [] } = schema\r\n  return Object.fromEntries(Object.entries(schemas).map(([key, schema]) =>\r\n    [key, decodeItem(stream, schema, key)]\r\n  ))\r\n}\r\n\r\nfunction encodeArray(data, schema) {\r\n  const { schemas = [], defaultSchema } = schema\r\n  return encodeLength(data.length) + data.map((item, i) =>\r\n    encodeItem(item, schemas[i] ?? defaultSchema, i)\r\n  ).join('')\r\n}\r\nfunction decodeArray(stream, schema) {\r\n  const { schemas = [], defaultSchema } = schema, length = decodeLength(stream)\r\n  return [...new Array(length)].map((unused, i) =>\r\n    decodeItem(stream, schemas[i] ?? defaultSchema, i))\r\n}\r\n\r\nfunction encodeString(string, schema) {\r\n  if (!string.match(/^[a-z0-9\\-_]*$/i))\r\n    throw new Error(`Cannot encode string ${string}: not alphanumeric or -_`)\r\n  return encodeLength(string.length) + string\r\n}\r\nfunction decodeString(stream, schema) {\r\n  const string = stream.take(decodeLength(stream))\r\n  if (!string.match(/^[a-z0-9\\-_]*$/i))\r\n    throw new Error(`Cannot decode string ${string}: not alphanumeric or -_`)\r\n  return string\r\n}\r\n\r\nfunction encodeUInt(uint, schema) {\r\n  const string = uintToString(uint, schema.length)\r\n  return schema.length ? string : (encodeLength(string.length) + string)\r\n}\r\nfunction decodeUInt(stream, schema) {\r\n  let length = schema.length || decodeLength(stream)\r\n  return stringToUInt(stream.take(length))\r\n}\r\n\r\n// Keep the length low. We might want to reserve high bits for later extension.\r\nfunction encodeLength(length) {\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return uintToString(length, 1)\r\n}\r\nfunction decodeLength(stream) {\r\n  let length = stringToUInt(stream.take(1))\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return length\r\n}\r\n\r\nexport function uintToString(number, length = 0) {\r\n  if (number < 0) throw new Error(`Cannot encode negative number ${number}`)\r\n\r\n  var string = \"\"\r\n  while (number > 0) {\r\n    const remainder = number % 64\r\n    number = Math.floor(number / 64)\r\n    if (remainder < 10) // 0-9\r\n      string += String.fromCharCode(remainder + 48 - 0)\r\n    else if (remainder < 36) // a-z\r\n      string += String.fromCharCode(remainder + 97 - 10)\r\n    else if (remainder < 62) // A-Z\r\n      string += String.fromCharCode(remainder + 65 - 36)\r\n    else if (remainder === 62) // -\r\n      string += \"-\"\r\n    else if (remainder === 63) // _\r\n      string += \"_\"\r\n  }\r\n\r\n  if (!length)\r\n    return string\r\n\r\n  if (string.length > length)\r\n    throw new Error(`Cannot encode uint ${number}: value too large`)\r\n  return string.padEnd(length, \"0\")\r\n}\r\nexport function stringToUInt(string) {\r\n  let result = 0, multiplier = 1\r\n\r\n  for (let i = 0; i < string.length; i++) {\r\n    let code = string.charCodeAt(i)\r\n\r\n    if (48 <= code && code < 58) // 0-9\r\n      result += multiplier * (code - 48 + 0)\r\n    else if (97 <= code && code < 123) // a-z\r\n      result += multiplier * (code - 97 + 10)\r\n    else if (65 <= code && code < 91) // A-Z\r\n      result += multiplier * (code - 65 + 36)\r\n    else if (string[i] === '-')\r\n      result += multiplier * 62\r\n    else if (string[i] === '_')\r\n      result += multiplier * 63\r\n    else throw new Error(`Cannot parse UInt from \"${string}\", which contains \"${String.fromCharCode(code)}\"`)\r\n\r\n    multiplier *= 64\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nclass BlockStream {\r\n  string: string\r\n  offset: number\r\n  constructor(string) {\r\n    this.string = string\r\n    this.offset = 0\r\n  }\r\n  take(count) {\r\n    if (this.offset + count > this.string.length)\r\n      throw new Error(`Cannot take ${count} items from ${this.string.slice(this.offset)}`)\r\n\r\n    const result = this.string.slice(this.offset, this.offset + count)\r\n    this.offset += count\r\n    return result\r\n  }\r\n  end() {\r\n    if (this.string.length !== this.offset)\r\n      throw new Error(`Unused string ${this.string.slice(this.offset)}`)\r\n  }\r\n}\r\n","import { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport { allSlotKeys, allElements, allArtifactSets, allHitModes, allReactionModes, allCharacterKeys, CharacterKey } from \"../Types/consts\"\r\nimport { crawlObject } from \"../Util/Util\"\r\nimport { uintToString, stringToUInt } from \"./CodingUtil\"\r\n\r\n// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nconst stats = [\r\n  \"\", \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n  \"physical_dmg_\", \"anemo_dmg_\", \"cryo_dmg_\", \"dendro_dmg_\", \"electro_dmg_\", \"geo_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\",\r\n] as const\r\n\r\n// Common schemas\r\n\r\nconst uint = (length) => ({ type: \"uint\", length })\r\nconst float = {\r\n  type: \"string\",\r\n  encode: (value) => value.toString().replace(/\\./g, '_'),\r\n  decode: (string) => parseFloat(string.replace(/_/g, '.')),\r\n}\r\nconst string = { type: \"string\" }\r\nconst array = (defaultSchema, other = {}) => ({ type: \"array\", defaultSchema, ...other })\r\nconst object = (schemas, other = {}) => ({ type: \"object\", schemas, ...other })\r\nconst sparse = (keySchema, valueSchema, keys = null) => ({ type: \"sparse\", keys, keySchema, valueSchema })\r\n\r\n// Util schema\r\n\r\nconst optional = (list, defaultValue: any = undefined, length = 1) => ({\r\n  type: \"uint\", length,\r\n  encode: item => list.indexOf(item) + 1,\r\n  decode: index => list[index - 1] ?? defaultValue,\r\n})\r\nconst fixed = (list, length = 1) => ({\r\n  type: \"uint\", length,\r\n  encode: (item) => list.indexOf(item),\r\n  decode: (index) => list[index],\r\n})\r\nconst stat = fixed(stats)\r\nconst artifactSet = fixed(allArtifactSets)\r\nconst slot = fixed(allSlotKeys)\r\nconst characterKey = fixed(allCharacterKeys)\r\nconst hitMode = fixed(allHitModes)\r\nconst reactionMode = fixed([null, ...allReactionModes])\r\nconst element = optional(allElements, '')\r\n\r\n// Complex schema\r\n\r\nconst substat = object({\r\n  key: stat,\r\n  value: uint(2),\r\n}, {\r\n  encode: ({ key, value }) => {\r\n    let factor = key.endsWith(\"_\") ? 10 : 1 // one decimal place for percentage\r\n    return { key, value: value * factor }\r\n  },\r\n  decode: ({ key, value }) => {\r\n    let factor = key.endsWith(\"_\") ? 10 : 1 // one decomal place for percentage\r\n    return { key, value: value / factor }\r\n  }\r\n})\r\nconst conditionalValues = array(object({\r\n  path: array(string), value: array(string)\r\n}), {\r\n  encode: (conditionalValues) => {\r\n    let result: { path, value }[] = []\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (value, path) => {\r\n      result.push({ path, value: value.map(item => item.toString()) })\r\n    })\r\n    result.filter(({ path }) => {\r\n      switch (path[0]) {\r\n        case \"character\":\r\n          path[0] = \"c\"\r\n          path[1] = uintToString(allCharacterKeys.indexOf(path[1]))\r\n          break\r\n        case \"weapon\":\r\n          path[0] = \"w\"\r\n          break\r\n        case \"artifact\":\r\n          path[0] = \"a\"\r\n          path[1] = uintToString(allArtifactSets.indexOf(path[1]))\r\n          break\r\n        default: return false\r\n      }\r\n      return true\r\n    })\r\n    return result\r\n  },\r\n  decode: (pathvalues) => {\r\n    const conditionalValues = { weapon: {}, artifact: {}, character: {} }\r\n    for (const { path, value } of pathvalues) {\r\n      switch (path[0]) {\r\n        case \"c\":\r\n          path[0] = \"character\"\r\n          path[1] = allCharacterKeys[stringToUInt(path[1])]\r\n          break\r\n        case \"w\":\r\n          path[0] = \"weapon\"\r\n          break\r\n        case \"a\":\r\n          path[0] = \"artifact\"\r\n          path[1] = allArtifactSets[stringToUInt(path[1])]\r\n          break\r\n        default:\r\n          continue\r\n      }\r\n      const last = path.pop()\r\n      let current = conditionalValues\r\n      for (const key of path) {\r\n        const next = current[key] ?? {}\r\n        current[key] = next\r\n        current = next\r\n      }\r\n      value[0] = parseFloat(value[0])\r\n      current[last] = value\r\n    }\r\n    return conditionalValues\r\n  }\r\n})\r\n\r\n// V2\r\n\r\nconst artifactV2 = object({\r\n  setKey: artifactSet,\r\n  numStars: uint(1),\r\n  level: uint(2),\r\n  mainStatKey: stat,\r\n  slotKey: slot,\r\n  substats: array(substat)\r\n}, {\r\n  decode: art => {\r\n    art.id = \"\"\r\n    art.lock = false\r\n    return art\r\n  }\r\n})\r\nconst weaponV2 = object({\r\n  key: string,\r\n  levelKey: string,\r\n  refineIndex: uint(1),\r\n  overrideMainVal: float,\r\n  overrideSubVal: float,\r\n}, {\r\n  decode: object => {\r\n    const levelKey = object.levelKey\r\n    delete object.levelKey\r\n    delete object.overrideMainVal\r\n    delete object.overrideSubVal\r\n    const [, lvla] = levelKey.split(\"L\")\r\n    const level = parseInt(lvla)\r\n    const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n    const addAsc = lvla.includes(\"A\")\r\n    if (level < 0 || level > 90 || ascension < 0) {\r\n      object.level = 1\r\n      object.ascension = 0\r\n    } else {\r\n      object.level = level\r\n      object.ascension = ascension + (addAsc ? 1 : 0)\r\n    }\r\n    return object\r\n  }\r\n})\r\nconst characterV2 = object({\r\n  characterKey,\r\n  hitMode,\r\n  reactionMode,\r\n  constellation: uint(1),\r\n  overrideLevel: uint(2),\r\n  levelKey: string,\r\n  infusionAura: element,\r\n  talentLevelKeys: object({ auto: uint(1), skill: uint(1), burst: uint(1) }),\r\n  baseStatOverrides: sparse(string, float),\r\n  weapon: weaponV2,\r\n  conditionalValues,\r\n  reserved: array(uint(1)),\r\n}, {\r\n  decode: (value) => {\r\n    const isAscended = value.levelKey.slice(-1) === \"A\"\r\n    const levelString = isAscended ? value.levelKey.slice(1, -1) : value.levelKey.slice(1)\r\n    value.level = parseInt(levelString)\r\n    switch (value.level) {\r\n      case 1: value.ascension = 0; break\r\n      case 20: value.ascension = 0; break\r\n      case 40: value.ascension = 1; break\r\n      case 50: value.ascension = 2; break\r\n      case 60: value.ascension = 3; break\r\n      case 70: value.ascension = 4; break\r\n      case 80: value.ascension = 5; break\r\n      case 90: value.ascension = 6; break\r\n    }\r\n    if (isAscended) {\r\n      value.ascension += 1\r\n    }\r\n    if (value.baseStatOverrides.characterLevel) {\r\n      value.level = value.baseStatOverrides.characterLevel\r\n      delete value.baseStatOverrides.characterLevel\r\n    }\r\n    if (value.baseStatOverrides.weaponLevel) {\r\n      value.weapon.level = value.baseStatOverrides.weaponLevel\r\n      delete value.baseStatOverrides.weaponLevel\r\n    }\r\n    if (value.overrideLevel) {\r\n      value.level = value.overrideLevel\r\n    }\r\n    delete value.overrideLevel\r\n    delete value.levelKey\r\n\r\n    if (value.characterKey === \"Traveler\") {\r\n      value.elementKey = allElements[value.reserved[0] - 1] ?? \"anemo\"\r\n    }\r\n    delete value.reserved\r\n    return value\r\n  },\r\n})\r\n\r\nconst flexV2 = object({\r\n  artifacts: array(artifactV2),\r\n  character: characterV2,\r\n})\r\n\r\n// V3\r\n\r\nconst artifactV3 = object({\r\n  setKey: artifactSet,\r\n  // numStars\r\n  level: uint(2),\r\n  // slotKey\r\n  mainStatKey: stat,\r\n  substats: array(substat),\r\n  location: optional(allCharacterKeys),\r\n\r\n  // Mixed\r\n  raritySlotKey: uint(1),\r\n}, {\r\n  encode: value => {\r\n    value.raritySlotKey = allSlotKeys.indexOf(value.slotKey) * 8 + value.rarity\r\n    return value\r\n  },\r\n  decode: value => {\r\n    value.rarity = value.raritySlotKey % 8\r\n    value.slotKey = allSlotKeys[(value.raritySlotKey - value.rarity) / 8]\r\n    return value\r\n  }\r\n})\r\nconst weaponV3 = object({\r\n  key: string,\r\n  // level, ascension, refinement\r\n  location: optional(allCharacterKeys),\r\n\r\n  // Mixed\r\n  ascensionRefine: uint(1),\r\n  levelDiff: uint(1),\r\n}, {\r\n  encode: object => {\r\n    object.ascensionRefine = object.ascension * 8 + object.refinement\r\n    object.levelDiff = ascensionMaxLevel[object.ascension] - object.level\r\n    return object\r\n  },\r\n  decode: object => {\r\n    object.refinement = object.ascensionRefine % 8\r\n    object.ascension = (object.ascensionRefine - object.refinement) / 8\r\n    object.level = ascensionMaxLevel[object.ascension] - object.levelDiff\r\n    return object\r\n  }\r\n})\r\nconst characterV3 = object({\r\n  key: characterKey,\r\n  // level, ascension\r\n  hitMode,\r\n  // elementKey\r\n  reactionMode,\r\n  conditionalValues,\r\n  bonusStats: sparse(string, float),\r\n  talent: object({ auto: uint(1), skill: uint(1), burst: uint(1) }),\r\n  infusionAura: element,\r\n  // constellation\r\n\r\n  // Mixed\r\n  levelDiff: uint(1),\r\n  ascensionConstellation: uint(1),\r\n  reserved: array(uint(1)),\r\n}, {\r\n  encode: (value) => {\r\n    value.levelDiff = ascensionMaxLevel[value.ascension] - value.level\r\n    value.ascensionConstellation = value.ascension * 8 + value.constellation\r\n\r\n    if ((value.characterKey as CharacterKey) !== \"Traveler\") value.reserved = []\r\n    else value.reserved = [allElements.indexOf(value.elementKey)]\r\n\r\n    return value\r\n  },\r\n  decode: (value) => {\r\n    value.constellation = value.ascensionConstellation % 8\r\n    value.ascension = (value.ascensionConstellation - value.constellation) / 8\r\n    value.level = ascensionMaxLevel[value.ascension] - value.levelDiff\r\n\r\n    if ((value.characterKey as CharacterKey) === \"Traveler\")\r\n      value.elementKey = allElements[value.reserved[0]] ?? \"anemo\"\r\n    return value\r\n  },\r\n})\r\n\r\nconst flexV3 = object({\r\n  characters: array(characterV3),\r\n  artifacts: array(artifactV3),\r\n  weapons: array(weaponV3),\r\n})\r\n\r\nexport const schemas = {\r\n  flexV2, flexV3\r\n}\r\n// For testing purpose only, no need to maintain strict ordering\r\nexport const constants = {\r\n  reactionModes: [null, ...allReactionModes], stats\r\n}\r\n","import { ArtCharDatabase } from \"../Database/Database\";\r\nimport { SandboxStorage } from \"../Database/DBStorage\";\r\nimport { IArtifact } from \"../Types/artifact\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { decode, encode } from \"./CodingUtil\";\r\nimport { schemas } from \"./Schemas\";\r\n\r\nexport function createFlexObj(characterKey: CharacterKey, database: ArtCharDatabase): string | null {\r\n  const character = database._getChar(characterKey)\r\n  if (!character) return null;\r\n\r\n  const weapon = database._getWeapon(character.equippedWeapon)!\r\n  const artifacts = Object.values(character.equippedArtifacts)\r\n    .filter(art => art)\r\n    .map(id => database._getArt(id)!)\r\n\r\n  try {\r\n    return \"v=3&d=\" + encode({ characters: [character], weapons: [weapon], artifacts }, schemas.flexV3)\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${(error as any).path?.reverse() ?? []}: ${error}`)\r\n    return null\r\n  }\r\n}\r\n\r\nexport function parseFlexObj(string: string): [ArtCharDatabase, CharacterKey, number] | undefined {\r\n  const parameters = Object.fromEntries(string.split('&').map(s => s.split('=')))\r\n\r\n  try {\r\n    switch (parseInt(parameters.v)) {\r\n      case 2: return [...parseFlexObjV2(parameters.d), 2]\r\n      case 3: return [...parseFlexObjV3(parameters.d), 3]\r\n      default: return\r\n    }\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${(error as any).path?.reverse() ?? []}: ${error}`)\r\n    return\r\n  }\r\n}\r\n\r\nfunction parseFlexObjV2(string: string): [ArtCharDatabase, CharacterKey] {\r\n  const schema = schemas.flexV2\r\n  const decoded = decode(string, schema) as { character: any, artifacts: IArtifact[] }\r\n  const { character, artifacts } = decoded, newCharacterKey = character.characterKey, characterKey = newCharacterKey.toLowerCase() as CharacterKey\r\n  character.characterKey = characterKey\r\n\r\n  const storage = new SandboxStorage()\r\n  // DON'T CHANGE THIS.\r\n  // Flex v2 (decoding) scheme won't be updated even when newer\r\n  // db versions come along. So the object created from the url\r\n  // will remain a valid dbv7. The actual migration happens\r\n  // together with the validation down below.\r\n  storage.setString(\"db_ver\", \"7\")\r\n\r\n  storage.set(`char_${characterKey}`, character)\r\n  artifacts.forEach((artifact, i) => {\r\n    artifact.location = characterKey\r\n    storage.set(`artifact_${i + 1}`, artifact)\r\n  })\r\n\r\n  const database = new ArtCharDatabase(storage) // Validate storage\r\n\r\n  if (!database._getChar(newCharacterKey))\r\n    throw new Error(`Invalid flex object`)\r\n  return [database, newCharacterKey]\r\n}\r\n\r\nfunction parseFlexObjV3(string: string): [ArtCharDatabase, CharacterKey] {\r\n  const schema = schemas.flexV3\r\n  const { characters, artifacts, weapons } = decode(string, schema) as { characters: { key: CharacterKey }[], artifacts: any[], weapons: any[] }\r\n  const charKey = characters[0].key\r\n\r\n  const storage = new SandboxStorage()\r\n  // DON'T CHANGE THIS.\r\n  // Flex v3 (decoding) scheme won't be updated even when newer\r\n  // db versions come along. So the object created from the url\r\n  // will remain a valid dbv11. The actual migration happens\r\n  // together with the validation down below.\r\n  storage.setString(\"db_ver\", \"11\")\r\n\r\n  characters.forEach(character => storage.set(`char_${character.key}`, character))\r\n  artifacts.forEach((artifact, i) => storage.set(`artifact_${i}`, artifact))\r\n  weapons.forEach((weapon, i) => storage.set(`weapon_${i}`, weapon))\r\n\r\n  const database = new ArtCharDatabase(storage) // Validate storage\r\n\r\n  if (!database._getChar(charKey as any))\r\n    throw new Error(`Invalid flex object`)\r\n  return [database, charKey]\r\n}\r\n","import { Alert, Button, Card, Container, Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport '../StatDependency'\r\nimport { createFlexObj, parseFlexObj } from \"./FlexUtil\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useContext, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function FlexDisplay() {\r\n  const location = useLocation()\r\n  const database = useContext(DatabaseContext)\r\n  const searchStr = location.search\r\n  if (searchStr) {\r\n    const flexResult = parseFlexObj(searchStr.substring(1))\r\n    if (!flexResult) return <Redirect to={`/`} />\r\n    const [database, charKey, version] = flexResult\r\n    if (version !== 3)\r\n      return <Redirect to={`/flex?${createFlexObj(charKey, database)}`} />\r\n    return <DatabaseContext.Provider value={database}><Display characterKey={charKey} /></DatabaseContext.Provider>\r\n  } else {\r\n    const characterKey = (location as any).characterKey\r\n    if (!characterKey) return <Redirect to={`/`} />\r\n    const flexObj = createFlexObj(characterKey, database)\r\n    if (!flexObj) return <Redirect to={`/`} />\r\n    window.scrollTo(0, 0)//sometimes the window isnt scrolled to the top on redirect.\r\n    return <Redirect to={`/flex?${flexObj}`} />\r\n  }\r\n}\r\nfunction Display({ characterKey }) {\r\n  const [toast, settoast] = useState(false)\r\n  const url = window.location.href\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(url).then(() => settoast(true)).catch(console.error)\r\n  }\r\n  const isUpToDate = false\r\n  return <Container className=\"my-2\">\r\n    <Toast onClose={() => settoast(false)} show={toast} delay={3000} autohide style={{\r\n      position: 'absolute',\r\n      top: 50,\r\n      right: 50,\r\n    }}>\r\n      <Toast.Header><b className=\"mr-auto\">Genshin Optimizer</b></Toast.Header>\r\n      <Toast.Body>URL copied to clipboard.</Toast.Body>\r\n    </Toast>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <InputGroup className=\"mb-0\">\r\n          <InputGroup.Prepend>\r\n            <Button onClick={copyToClipboard}>\r\n              <span><FontAwesomeIcon icon={faLink} /> Copy URL to clipboard</span>\r\n            </Button>\r\n          </InputGroup.Prepend>\r\n          <Form.Control readOnly value={window.location.href} onClick={e => e.target.select()} />\r\n        </InputGroup>\r\n        {isUpToDate && <Alert variant=\"warning\" className=\"py-2 mt-2 mb-0\">This URL is generated on an older database version of Genshin Optimizer. The character data below might not be displayed as intended.</Alert>}\r\n      </Card.Body>\r\n    </Card>\r\n    <CharacterDisplayCard characterKey={characterKey} />\r\n  </Container>\r\n}"],"sourceRoot":""}