{"version":3,"sources":["StatData.js","Weapon/Weapon.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.js","Components/CustomFormControl.js","StatDependency.js","Data/WeaponData.js","Components/ConditionalSelector.js","Database/dbV2KeyMap.js","Database/DatabaseUtil.js","Data/CharacterData.js","Components/StatIcon.js","StatConstants.js","Components/CharacterSelection.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Character/StatInput.js","Components/StatDisplay.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Components/WIPComponent.js","Character/CharacterDisplay/StatDisplayComponent.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","FlexPage/FlexDisplay.js","Util/FlexUtil.js","Stat.js","Util/Util.js","Character/Character.js","Database/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Util/ConditionalsUtil.js","Database/ArtifactDatabase.js","Data/ElementalData.js"],"names":["StatData","flat","name","default","characterHP","pretty","const","characterDEF","characterATK","characterEle","characterLevel","weaponATK","baseATK","hp","hp_","unit","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","variant","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","Formulas","s","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","ElementToReactionKeys","physical","anemo","geo","electro","hydro","pyro","cryo","dendro","PreprocessFormulas","dependencyKeys","stats","debug","modifiers","initialStats","constData","formulaList","map","key","tmp","modifier","constModifier","Object","entries","filter","k","dynamicModifier","constFunc","reduce","accu","m","dynamicFunc","funcIndicator","length","func","console","log","error","formula","forEach","assign","hitMoves","move","moveName","clamp","hitElements","ele","eleName","opt","res","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","getWeaponsOfType","weaponType","fromEntries","getWeaponTypeName","WeaponTypeData","getWeaponTypeKeys","keys","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","objMultiplication","Assets","elements","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","icon","faStar","Stars","stars","colored","className","Array","_","i","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","GetFormulaDependency","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","GetDependencies","dependencies","InsertDependencies","has","then","imp","ConditionalSelector","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","CurrentDatabaseVersion","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","startsWith","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","buildSetting","mainStat","stat","v2change","statFilters","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","update","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","setDatabaseVersion","version","createDatabaseObj","characterDatabase","artifactDatabase","artifactDisplay","characterDisplay","buildsDisplay","loadDatabaseObj","clearDatabase","charKey","char","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","CharacterSpecializedStatKey","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","ElementalData","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","a","b","Character","getName","ReactionToggle","reactionMode","setReactionMode","charEleKey","getElementalKey","includes","defaultValue","val","src","HitModeToggle","setHitMode","CalculationDisplay","build","getDisplayStatKeys","finalStats","talentKey","fields","header","getTalentName","bg","Header","Body","field","fieldIndex","subFormulaKeys","Stat","getPrintableFormulaStatKeyList","reverse","Boolean","as","Card","eventKey","printStat","Collapse","subKey","printFormula","talentField","getTalentField","sectionIndex","fieldText","getTalentFieldValue","fieldVariant","fieldFormulaText","fieldFormula","fieldFormulaDependency","fieldValue","toFixed","ContextAwareToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","DamageOptionsAndCalculation","setState","setOverride","newBuild","equippedBuild","xs","r","Button","href","rel","xl","getStatValueWithOverride","getStatNameRaw","getBaseStatValue","getElementalKeys","eleKey","immunityStatKey","elementImmunity","prependEle","StatInput","percent","restProps","Prepend","Text","Append","undefined","placement","overlay","style","pointerEvents","faUndo","DisplayStatDiff","label","oldVal","fixed","diff","oldText","diffText","StatDisplay","editable","invalid","getStatUnit","fixedUnit","getStatName","labelVariant","hasOverride","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","maximumEfficiency","lock","currentEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","artifactValid","every","sstat","rolls","equipOnChar","equipArtifactOnChar","border","md","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Title","getSetName","numRolls","efficiency","effOpacity","statName","opacity","Footer","Divider","ckey","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","WIPComponent","StatDisplayComponent","statsDisplayKeys","cardbg","JSON","stringify","CharacterArtifactPane","artifacts","artifactsAssumeFull","statKeys","hasTalentPage","Row","Col","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","getConditionalNum","getConditionalStats","conditionalElement","cnum","state","setStateArtifactConditional","Badge","getSetEffectText","getSlotKeys","find","CharacterOverviewPane","constellation","setConstellation","editLevel","setEditLevel","elementKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","getStar","InputGroup","getLevel","OverlayTrigger","Tooltip","faSave","getConstellationName","getConstellationImg","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","mkey","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","conditionalStats","conditionalEle","faQuoteLeft","DropdownButton","star","arr","Dropdown","ItemText","faGavel","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getStatNameWithPercent","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","sKey","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","faQuestionCircle","cursor","eleInterArr","Ele","modifiersToFields","mStatKey","formulaText","statsToFields","statVal","talentLimits","talentLevelKeys","autoInfused","otherProps","infuseBtn","isAutoInfusable","getElementalName","talentLvlKey","talentLvlKeyRaw","levelBoost","getTalentLevelBoost","newTalentLevelKey","stateTalentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","FieldDisplay","index","getTalentImg","Subtitle","getTalentDocument","section","talentText","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","compareAgainstEquipped","formulaTextOverlay","fieldVal","fixedVal","fieldEquippedVal","CustomMenu","React","forwardRef","ref","labeledBy","minWidth","aria-labelledby","Children","toArray","child","CharacterDisplayCard","forceUpdateComponent","setCharacterKey","getInitialState","getIntialWeapon","updateCharacter","setLevelKey","baseStatOverrides","Promise","all","getCharacterDataImport","getDataImport","deepClone","prevProps","footer","onClose","tabName","flexArts","calculateBuild","HeaderIconDisplay","getThumb","commonPaneProps","u","ButtonGroup","DropdownToggle","getAllCharacterKeys","getlevelNames","getlevelKeys","lvlKey","faTimes","Tab","Container","defaultActiveKey","mountOnEnter","unmountOnExit","Nav","Link","Content","Pane","Component","initialState","auto","TestDisplay","useLocation","searchStr","search","dbv","overrideLevel","tlvl","characterkey","databaseVersion","parseFlexObj","urlon","parse","substring","Display","to","flexObj","createFlexObj","window","scrollTo","toast","settoast","url","isUpToDate","Toast","show","delay","autohide","position","top","right","navigator","clipboard","writeText","faLink","Form","Control","readOnly","select","htmlStatsData","f","expand","statList","FormulaText","modifierText","options","statUnit","o","getRandomElementFromArray","array","random","getRandomIntInclusive","min","max","ceil","data","setItem","closeEnoughFloat","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","formulaDB","getCDataObj","formulaKey","tk","remove","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","elementalKey","getElementalKeysWithoutPhysical","constellationName","getTitles","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","constIndex","talent","talents","talentBoost","boostEntry","document","getTalentDocumentSections","getTalentStatsAll","statsArr","getTalentConditional","sections","tempCond","isAutoElemental","infusable","basicKeys","transReactions","charFormulas","genericAvgHit","reactions","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","mergeStats","overrides","hasOwnProperty","specialStatKey","weaponSubKey","initiated","isInvalid","getIdList","split","dchar","unequipArtifactOnSlot","equipArtifactBuild","unequipAllArtifacts","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artIdIndex","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid"],"mappings":"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","file":"static/js/12.7db8ac85.chunk.js","sourcesContent":["import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nconst StatData = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\r\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nimport { objMultiplication } from '../Util/Util.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    stats = stats(refineIndex)\r\n    if (stacks !== 1) objMultiplication(stats, stacks)\r\n    return stats\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  let displayValue = value\r\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\r\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\r\n  const props = {\r\n    type: \"number\",\r\n    className: \"hide-appearance\",\r\n    placeholder,\r\n    value: displayValue,\r\n    disabled,\r\n    onChange: (e) => {\r\n      let value = e.target.value;\r\n      if (float) {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\r\n        else value = parseFloat(value) || 0\r\n      } else {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\r\n        else value = parseInt(value) || 0\r\n      }\r\n      onValueChange?.(value);\r\n    },\r\n    onFocus: () => setFocus(true),\r\n    onBlur: () => setFocus(false),\r\n  }\r\n  return <FormControl {...props} aria-label=\"custom-input\" />\r\n}\r\nexport default CustomFormControl;","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","//for DB v2, we changed a bunch of keys.\r\nconst changes = {\r\n  char_ele_key: \"characterEle\",\r\n  char_level: \"characterLevel\",\r\n\r\n  hp_base: \"characterHP\",\r\n  hp_final: \"finalHP\",\r\n  atk_character_base: \"characterATK\",\r\n  atk_base: \"baseATK\",\r\n  atk_final: \"finalATK\",\r\n  atk_weapon: \"weaponATK\",\r\n  def_base: \"characterDEF\",\r\n  def_final: \"finalDEF\",\r\n  phy_dmg_bonus: \"physical_dmg_\",\r\n  phy_res: \"physical_res_\",\r\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\r\n  geo_ele_dmg_bonus: \"geo_dmg_\",\r\n  electro_ele_dmg_bonus: \"electro_dmg_\",\r\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\r\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\r\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\r\n  anemo_ele_res: \"anemo_res_\",\r\n  geo_ele_res: \"geo_res_\",\r\n  electro_ele_res: \"electro_res_\",\r\n  hydro_ele_res: \"hydro_res_\",\r\n  pyro_ele_res: \"pyro_res_\",\r\n  cryo_ele_res: \"cryo_res_\",\r\n  ener_rech: \"enerRech_\",\r\n  crit_rate: \"critRate_\",\r\n  crit_dmg: \"critDMG_\",\r\n  stam: \"stamina\",\r\n  heal_bonu: \"heal_\",\r\n  inc_heal: \"incHeal_\",\r\n  pow_shield: \"powShield_\",\r\n  red_cd: \"cdRed_\",\r\n  skill_cd_red: \"skillCDRed_\",\r\n  burst_cd_red: \"burstCDRed_\",\r\n  all_dmg_bonus: \"dmg_\",\r\n  move_spd: \"moveSPD_\",\r\n  atk_spd: \"atkSPD_\",\r\n  weakspot_dmg: \"weakspotDMG_\",\r\n  stamina_dec: \"staminaDec_\",\r\n  stamina_gliding_dec: \"staminaGlidingDec_\",\r\n  stamina_charged_dec: \"staminaChargedDec_\",\r\n  ele_mas_multi_x: \"eleMasX\",\r\n  ele_mas_multi_y: \"eleMasY\",\r\n  ele_mas_multi_z: \"eleMasZ\",\r\n\r\n  norm_atk_dmg: \"physical_normal_hit\",\r\n  char_atk_dmg: \"physical_charged_hit\",\r\n  plunge_dmg: \"physical_plunging_hit\",\r\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\r\n  char_atk_crit_dmg: \"physical_charged_critHit\",\r\n  plunge_crit_dmg: \"physical_plunging_critHit\",\r\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\r\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\r\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\r\n  norm_atk_dmg_bonus: \"normal_dmg_\",\r\n  char_atk_dmg_bonus: \"charged_dmg_\",\r\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\r\n  skill_dmg_bonus: \"skill_dmg_\",\r\n  burst_dmg_bonus: \"burst_dmg_\",\r\n  norm_atk_crit_rate: \"normal_critRate_\",\r\n  char_atk_crit_rate: \"charged_critRate_\",\r\n  skill_crit_rate: \"skill_critRate_\",\r\n  burst_crit_rate: \"burst_critRate_\",\r\n\r\n  anemo_skill_dmg: \"anemo_skill_hit\",\r\n  anemo_burst_dmg: \"anemo_burst_hit\",\r\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\r\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\r\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\r\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\r\n  geo_skill_dmg: \"geo_skill_hit\",\r\n  geo_burst_dmg: \"geo_burst_hit\",\r\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\r\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\r\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\r\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\r\n  electro_skill_dmg: \"electro_skill_hit\",\r\n  electro_burst_dmg: \"electro_burst_hit\",\r\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\r\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\r\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\r\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\r\n  hydro_skill_dmg: \"hydro_skill_hit\",\r\n  hydro_burst_dmg: \"hydro_burst_hit\",\r\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\r\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\r\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\r\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\r\n  pyro_skill_dmg: \"pyro_skill_hit\",\r\n  pyro_burst_dmg: \"pyro_burst_hit\",\r\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\r\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\r\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\r\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\r\n  cryo_skill_dmg: \"cryo_skill_hit\",\r\n  cryo_burst_dmg: \"cryo_burst_hit\",\r\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\r\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\r\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\r\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\r\n\r\n  phy_dmg: \"physical_hit\",\r\n  phy_crit_dmg: \"physical_critHit\",\r\n  phy_avg_dmg: \"physical_avgHit\",\r\n  anemo_ele_dmg: \"anemo_hit\",\r\n  anemo_ele_crit_dmg: \"anemo_critHit\",\r\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\r\n  geo_ele_dmg: \"geo_hit\",\r\n  geo_ele_crit_dmg: \"geo_critHit\",\r\n  geo_ele_avg_dmg: \"geo_avgHit\",\r\n  electro_ele_dmg: \"electro_hit\",\r\n  electro_ele_crit_dmg: \"electro_critHit\",\r\n  electro_ele_avg_dmg: \"electro_avgHit\",\r\n  hydro_ele_dmg: \"hydro_hit\",\r\n  hydro_ele_crit_dmg: \"hydro_critHit\",\r\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\r\n  pyro_ele_dmg: \"pyro_hit\",\r\n  pyro_ele_crit_dmg: \"pyro_critHit\",\r\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\r\n  cryo_ele_dmg: \"cryo_hit\",\r\n  cryo_ele_crit_dmg: \"cryo_critHit\",\r\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\r\n\r\n  overload_dmg: \"overload_hit\",\r\n  overload_dmg_bonus: \"overload_dmg_\",\r\n  overload_multi: \"overload_multi\",\r\n  electrocharged_dmg: \"electrocharged_hit\",\r\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\r\n  electrocharged_multi: \"electrocharged_multi\",\r\n  superconduct_dmg: \"superconduct_hit\",\r\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\r\n  superconduct_multi: \"superconduct_multi\",\r\n  burning_dmg: \"burning_hit\",\r\n  burning_dmg_bonus: \"burning_dmg_\",\r\n  swirl_dmg: \"swirl_hit\",\r\n  swirl_dmg_bonus: \"swirl_dmg_\",\r\n  swirl_multi: \"swirl_multi\",\r\n  shatter_dmg: \"shattered_hit\",\r\n  shatter_dmg_bonus: \"shattered_dmg_\",\r\n  shatter_multi: \"shattered_multi\",\r\n  crystalize_dmg: \"crystalize_hit\",\r\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\r\n\r\n  melt_dmg_bonus: \"melt_dmg_\",\r\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\r\n\r\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\r\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\r\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\r\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\r\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\r\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\r\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\r\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\r\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\r\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\r\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\r\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\r\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\r\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\r\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\r\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\r\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\r\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\r\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\r\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\r\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\r\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\r\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\r\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\r\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\r\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\r\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\r\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\r\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\r\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\r\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\r\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\r\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\r\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\r\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\r\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\r\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\r\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\r\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\r\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\r\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\r\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\r\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\r\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\r\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\r\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\r\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\r\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\r\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\r\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\r\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\r\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\r\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\r\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\r\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\r\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\r\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\r\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\r\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\r\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\r\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\r\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\r\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\r\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\r\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\r\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\r\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\r\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\r\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\r\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\r\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\r\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\r\n\r\n  enemy_phy_res: \"physical_enemyRes_\",\r\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\r\n  enemy_phy_immunity: \"physical_enemyImmunity\",\r\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\r\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\r\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\r\n  geo_enemy_ele_res: \"geo_enemyRes_\",\r\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\r\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\r\n  electro_enemy_ele_res: \"electro_enemyRes_\",\r\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\r\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\r\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\r\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\r\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\r\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\r\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\r\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\r\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\r\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\r\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\r\n\r\n  ele_mas: \"eleMas\",\r\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\r\n\r\n  enemy_level_multi: \"enemyLevel_multi\",\r\n  enemy_level: \"enemyLevel\"\r\n}\r\n/*\r\nconst same = [\r\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\r\n]\r\n\r\nconst removed = [\r\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\r\n]\r\n\r\nconst aded = [\r\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\r\n]\r\n*/\r\n\r\n//renamed dmgMode to hitMode\r\nconst dmgModeToHitMode = {\r\n  avg_dmg: \"avgHit\",\r\n  dmg: \"hit\",\r\n  crit_dmg: \"critHit\"\r\n}\r\nexport { changes, dmgModeToHitMode }","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./ArtifactDatabase\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\r\nimport { loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\n\r\nconst CurrentDatabaseVersion = 2\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  const dbVersion = getDatabaseVersion()\r\n  //edit the data before the database is populated\r\n  if (dbVersion < 2) {\r\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\r\n      const character = loadFromLocalStorage(key);\r\n      const { characterKey, equippedArtifacts = {} } = character\r\n      const dbKey = `char_${characterKey}`\r\n      if (localStorage.getItem(dbKey) === null) {\r\n        //if there is no character saved, create a new character\r\n        const { id, name, dmgMode, ...rest } = character\r\n        if (Array.isArray(rest?.buildSetting?.mainStat))\r\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\r\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\r\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\r\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\r\n        saveToLocalStorage(dbKey, rest)\r\n        //equip to the new character\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = characterKey\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      } else {\r\n        //if the character does exist, \"move\" the artifacts equipped to inventory\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = \"\"\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      }\r\n      //delete the old database\r\n      localStorage.removeItem(key)\r\n    })\r\n    //reset the ArtifactDisplay keys\r\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\r\n    if (ArtifactDisplayState) {\r\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\r\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\r\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\r\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\r\n    }\r\n  }\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n\r\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\r\n    let valid = true\r\n\r\n    //verify the linking of artifacts and characters\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.get(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 1) {\r\n      //generate artifact efficiency again for artifacts\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n\r\n      //there was a bug that saved the numStars as strings. convert to number.\r\n      if (typeof art.numStars === \"string\") {\r\n        art.numStars = parseInt(art.numStars)\r\n        valid = false\r\n      }\r\n\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 2) {\r\n      if (art.mainStatKey in v2change) {\r\n        art.mainStatKey = v2change[art.mainStatKey]\r\n        valid = false\r\n      }\r\n      art?.substats?.forEach((obj, i) => {\r\n        if (obj.key in v2change) {\r\n          art.substats[i].key = v2change[obj.key]\r\n          valid = false\r\n        }\r\n      })\r\n    }\r\n\r\n    //Update any invalid artifacts in DB\r\n    if (!valid) ArtifactDatabase.update(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    const { characterKey } = character\r\n    //verify character database equipment validity\r\n    if (!character.equippedArtifacts) {\r\n      character.equippedArtifacts = {}\r\n      valid = false\r\n    }\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.get(artid)\r\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 1) {\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.hitMode) {\r\n        character.hitMode = \"hit\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    //update any invalid characters in DB\r\n    if (!valid) CharacterDatabase.update(character)\r\n  })\r\n  setDatabaseVersion(CurrentDatabaseVersion)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nfunction createDatabaseObj() {\r\n  const characterDatabase = CharacterDatabase.getCharacterDatabase()\r\n  const artifactDatabase = ArtifactDatabase.getArtifactDatabase()\r\n  const artifactDisplay = loadFromLocalStorage(\"ArtifactDisplay.state\") ?? {}\r\n  const characterDisplay = loadFromLocalStorage(\"CharacterDisplay.state\") ?? {}\r\n  const buildsDisplay = loadFromLocalStorage(\"BuildsDisplay.state\") ?? {}\r\n\r\n  return {\r\n    version: getDatabaseVersion(),\r\n    characterDatabase,\r\n    artifactDatabase,\r\n    artifactDisplay,\r\n    characterDisplay,\r\n    buildsDisplay,\r\n  }\r\n}\r\n\r\nfunction loadDatabaseObj({ version = 0, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay, }) {\r\n  clearDatabase()\r\n  //load from obj charDB,artDB\r\n  Object.entries(characterDatabase).forEach(([charKey, char]) => saveToLocalStorage(`char_${charKey}`, char))\r\n  Object.entries(artifactDatabase).forEach(([id, art]) => saveToLocalStorage(id, art))\r\n  //override version\r\n  setDatabaseVersion(version)\r\n  saveToLocalStorage(\"ArtifactDisplay.state\", artifactDisplay)\r\n  saveToLocalStorage(\"CharacterDisplay.state\", characterDisplay)\r\n  saveToLocalStorage(\"BuildsDisplay.state\", buildsDisplay)\r\n\r\n  DatabaseInitAndVerify()\r\n}\r\nfunction clearDatabase() {\r\n  //delete all characters and artifacts\r\n  Object.keys(localStorage).filter(key => key.startsWith(\"char_\") || key.startsWith(\"artifact_\")).forEach(id =>\r\n    localStorage.removeItem(id))\r\n  localStorage.removeItem(\"db_ver\")\r\n  localStorage.removeItem(\"ArtifactDisplay.state\")\r\n  localStorage.removeItem(\"CharacterDisplay.state\")\r\n  localStorage.removeItem(\"BuildsDisplay.state\")\r\n  //clear the database to validate again\r\n  CharacterDatabase.clearDatabase()\r\n  ArtifactDatabase.clearDatabase()\r\n}\r\nexport {\r\n  DatabaseInitAndVerify,\r\n  createDatabaseObj,\r\n  loadDatabaseObj,\r\n  clearDatabase,\r\n  CurrentDatabaseVersion\r\n};\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [ \"pyro\" ] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [ \"physical\" ] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [ \"electro\" ] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [ \"cryo\" ] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [ \"pyro\", \"hydro\", \"electro\", \"cryo\" ] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [ 0,\r\n  17.2,  18.5,  19.9,  21.3,  22.6,  24.6,  26.6,  28.9,  31.4,  34.1,\r\n  37.2,  40.7,  44.4,  48.6,  53.7,  59.1,  64.4,  69.7,  75.1,  80.6,\r\n  86.1,  91.7,  97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n 142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n 215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n 336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n 509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n 742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n 968.6, 991.0,1013.5,1036.1,1066.6,1090.0,1115.0,1141.7,1171.9,1202.8,\r\n1202.8,1233.9,1264.7,1305.7,1346.1,1468.9,1524.0,1577.0,1627.6,1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [ 0,\r\n  91,  99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n 170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n 320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n 448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n 574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n 733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n 915, 936, 956, 982,1003,1017,1036,1057,1075,1096,\r\n1114,1135,1149,1170,1191,1205,1224,1243,1260,1277,\r\n1293,1308,1317,1327,1336,1349,1366,1384,1403,1424,\r\n1450,1478,1507,1543,1570,1580,1589,1673,1682,1691,\r\n]","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\r\n  reactionMode === null && (reactionMode = \"none\")\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\r\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ character, character: { characterKey }, build }) {\r\n  return <div>\r\n    {Object.entries(Character.getDisplayStatKeys(build.finalStats)).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n      return <Card bg=\"darkcontent\" text=\"lightfont\" key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              //simple statKey field\r\n              if (typeof field === \"string\") {\r\n                const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, [field]), build?.finalStats?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build.finalStats)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              //fields\r\n              const talentField = Character.getTalentField(build.finalStats, field.talentKey, field.sectionIndex, field.fieldIndex)\r\n              const fieldText = Character.getTalentFieldValue(talentField, \"text\", build.finalStats)\r\n              const fieldVariant = Character.getTalentFieldValue(talentField, \"variant\", build.finalStats)\r\n              const fieldFormulaText = Character.getTalentFieldValue(talentField, \"formulaText\", build.finalStats)\r\n              const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(talentField, \"formula\", build.finalStats, [])\r\n              if (!fieldFormula || !fieldFormulaDependency) return null\r\n              const fieldValue = fieldFormula?.(build.finalStats)?.toFixed?.()\r\n              const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, fieldFormulaDependency), build?.finalStats?.modifiers).reverse()\r\n              return <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                  <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                  <Card.Body className=\"p-2\">\r\n                    <div className=\"mb-n2\">\r\n                      <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n                      {subFormulaKeys.map(subKey =>\r\n                        <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} >\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { hitMode }, setState, setOverride, newBuild, equippedBuild }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Accordion>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Options</span>\r\n            <small>Expand below to edit enemy details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* TODO reaction interaction UI */}\r\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"1\">\r\n        <Card.Body>\r\n          <Row className=\"mb-2\"><Col>\r\n            <Button variant=\"warning\" >\r\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                To get the specific resistance values of enemies, please visit the wiki.\r\n          </a>\r\n            </Button >\r\n          </Col></Row>\r\n          <Row>\r\n            <Col xs={12} xl={6} className=\"mb-2\">\r\n              <StatInput\r\n                name={<b>Enemy Level</b>}\r\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\r\n              />\r\n            </Col>\r\n            {Character.getElementalKeys().map(eleKey => {\r\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                <StatInput\r\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  placeholder={Stat.getStatNameRaw(statKey)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                  onValueChange={(val) => setOverride?.(statKey, val)}\r\n                  disabled={elementImmunity}\r\n                />\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n\r\n    <Card bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Formulas</span>\r\n            <small>Expand below to see calculation details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"2\">\r\n        <Card.Body className=\"p-2\">\r\n          <CalculationDisplay character={character} build={build} />\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n}\r\nexport {\r\n  HitModeToggle,\r\n  ReactionToggle,\r\n};\r\n\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\r\n  let val, oldVal, fixed, unit, variant;\r\n  let label = \"\"\r\n  if (typeof statKey === \"string\") {//basic statKey\r\n    if (newBuild && equippedBuild) {//comparable\r\n      //newbuild -> val\r\n      //equippedbuild ->old\r\n      val = newBuild?.finalStats?.[statKey] ?? 0\r\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\r\n    } else {\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      //build ->val\r\n      val = build?.finalStats?.[statKey] ?? 0\r\n      //statvaluewith override -> old\r\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n      oldVal === invalid && (oldVal = undefined)\r\n      if (statKey === \"finalHP\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n      else if (statKey === \"finalDEF\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n      else if (statKey === \"finalATK\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n    }\r\n    unit = Stat.getStatUnit(statKey)\r\n    fixed = Stat.fixedUnit(statKey)\r\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n  } else {//from character sheet\r\n    const build = newBuild ? newBuild : equippedBuild\r\n    const { talentKey, sectionIndex, fieldIndex } = statKey\r\n    const field = Character.getTalentField(build.finalStats, talentKey, sectionIndex, fieldIndex)\r\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", build.finalStats)\r\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build.finalStats)}</span>\r\n    fixed = Character.getTalentFieldValue(field, \"fixed\", build.finalStats, 0)\r\n    val = Character.getTalentFieldValue(field, \"formula\", build.finalStats)?.[0]?.(build.finalStats)\r\n    if (newBuild && equippedBuild) {//comparable\r\n      oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n    }\r\n  }\r\n\r\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Character from '../Character/Character';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\r\n  if (!art) return null;\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charKey) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charKey)\r\n    forceUpdate?.()\r\n  }\r\n\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency?.toFixed(2) ?? currentEfficiency + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency?.toFixed(2) ?? maximumEfficiency + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location, \"Inventory\")}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.update(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip>Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import React from 'react';\r\nimport { Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport Stat from \"../../Stat\";\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from './DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState, setOverride, artifacts }) {\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(build.finalStats)\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  return <>\r\n    {Character.hasTalentPage(characterKey) && <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>}\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body>\r\n            <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, build, forceUpdate, setState, setOverride, editable }} />\r\n          </Card.Body>\r\n          {newBuild ? <Card.Footer>\r\n            <Button onClick={() => {\r\n              Character.equipArtifacts(characterKey, newBuild.artifactIds)\r\n              forceUpdate?.()\r\n            }}>Equip All artifacts to current character</Button>\r\n            {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n          </Card.Footer> : null}\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {artifacts ?\r\n            Artifact.getSlotKeys().map(slotKey => {\r\n              const art = artifacts.find(art => art.slotKey === slotKey)\r\n              return art ? <Col sm={6} lg={4} key={slotKey} className=\"mb-2\">\r\n                <ArtifactCard artifactObj={art} />\r\n              </Col> : null\r\n            }) : Artifact.getSlotKeys().map(slotKey =>\r\n              build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n                <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n              </Col> : null\r\n            )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl onValueChange={(val) => setOverride(\"characterLevel\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"characterLevel\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build?.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  const { editable, character, setOverride, equippedBuild, newBuild } = props\r\n\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = []\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\r\n                  onValueChange={(value) => setOverride(\"specializedStatVal\", value)} />\r\n                {isPercentSpecialStatSelect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from 'react';\r\nimport { useState } from \"react\";\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from \"./DamageOptionsAndCalculation\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey }, newBuild, equippedBuild }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build?.finalStats} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : {\r\n      text: Stat.getStatName(statKey),\r\n      variant: Stat.getStatVariant(statKey),\r\n      value: statVal,\r\n      fixed: Stat.fixedUnit(statKey),\r\n      unit: Stat.getStatUnit(statKey)\r\n    }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, talentLevelKeys, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => setState(state => {\r\n        const stateTalentLevelKeys = state.talentLevelKeys || {}\r\n        stateTalentLevelKeys[tKey] = newTalentLevelKey\r\n        return { talentLevelKeys: stateTalentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  const talentStats = Character.getTalentStats(characterKey, talentKey, build.finalStats)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(build.finalStats)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(build.finalStats)\r\n        let fields = section.fields ?? []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(build.finalStats)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character: { compareAgainstEquipped, }, field, index, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(build.finalStats)\r\n  if (!field) return null\r\n\r\n  const fieldText = Character.getTalentFieldValue(field, \"text\", build.finalStats)\r\n  const fieldVariant = Character.getTalentFieldValue(field, \"variant\", build.finalStats)\r\n\r\n  const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build.finalStats)\r\n  const formulaTextOverlay = fieldFormulaText ? <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>{fieldFormulaText}</Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger> : null\r\n\r\n  let fieldVal = null\r\n  if (field.value)\r\n    fieldVal = Character.getTalentFieldValue(field, \"value\", build.finalStats)\r\n  else if (field.formula)\r\n    fieldVal = Character.getTalentFieldValue(field, \"formula\", build.finalStats)?.[0]?.(build.finalStats)\r\n\r\n  let fixedVal = field.fixed || 0\r\n  const unit = Character.getTalentFieldValue(field, \"unit\", build.finalStats)\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild.finalStats)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../Database/DatabaseUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = CharacterDisplayCard.getInitialState()\r\n    const { characterKey, character } = props\r\n    if (characterKey) {\r\n      const char = CharacterDatabase.get(characterKey) ?? { characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.state = { ...this.state, ...char }\r\n    } else if (character) {\r\n      this.state = { ...this.state, ...character }\r\n    }\r\n  }\r\n\r\n  static initialState = {\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    hitMode: \"hit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => deepClone(CharacterDisplayCard.initialState)\r\n  //UI will not update if the character is updated in DB. Components will have to call this to update this UI.\r\n  forceUpdateComponent = () => {\r\n    if (this.state.characterKey)\r\n      this.setState(CharacterDatabase.get(this.state.characterKey))\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setCharacterKey = (characterKey) => {\r\n    let state = CharacterDisplayCard.getInitialState()\r\n    let char = CharacterDatabase.get(characterKey)\r\n    if (char) state = { ...state, ...char }\r\n    else {\r\n      state = { ...state, characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.updateCharacter(this.state)\r\n    }\r\n    this.setState(state)\r\n    this.props?.setCharacterKey?.(characterKey)\r\n  }\r\n\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  updateCharacter(state) {\r\n    state = deepClone(state)\r\n    delete state.compareAgainstEquipped\r\n    CharacterDatabase.update(state)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.characterKey !== this.props.characterKey && this.props.characterKey !== this.state.characterKey)\r\n      this.setCharacterKey(this.props.characterKey)\r\n    if (this.props.editable && this.state.characterKey) {\r\n      //save this.state as character to character db.\r\n      this.updateCharacter(this.state)\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose, tabName } = this.props\r\n    const character = this.state\r\n    //transfer the hitmode/reactions over \r\n    if (newBuild?.finalStats) {\r\n      newBuild = deepClone(newBuild)\r\n      newBuild.finalStats.hitMode = character.hitMode;\r\n      newBuild.finalStats.reactionMode = character.reactionMode;\r\n    }\r\n\r\n    const { characterKey, levelKey, compareAgainstEquipped, artifacts: flexArts } = character\r\n    const equippedBuild = Character.calculateBuild(character)\r\n    const HeaderIconDisplay = characterKey ? <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span> : <span>Select a Character</span>\r\n    const commonPaneProps = { character, newBuild, equippedBuild: !newBuild || compareAgainstEquipped ? equippedBuild : undefined, editable, setState: u => this.setState(u), setOverride: this.setOverride, forceUpdate: this.forceUpdateComponent }\r\n    if (flexArts) commonPaneProps.artifacts = flexArts//from flex\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"} className=\"mr-auto\">\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown as={ButtonGroup}>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(character, \"characterLevel\")}</span>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          {Boolean(onClose) && <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {Boolean(characterKey) && <Card.Body>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {(process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)) ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled>Talents <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\">Talents</Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n            {!flexArts && <Nav.Item>\r\n              <WIPComponent>\r\n                <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n              </WIPComponent>\r\n            </Nav.Item>}\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setConstellation={this.setConstellation}\r\n                {...commonPaneProps}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>}\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import { Alert, Button, Card, Container, Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { CurrentDatabaseVersion, DatabaseInitAndVerify } from '../Database/DatabaseUtil';\r\nimport '../StatDependency'\r\nimport urlon from 'urlon'\r\nimport { createFlexObj, parseFlexObj } from \"../Util/FlexUtil\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TestDisplay() {\r\n  const location = useLocation()\r\n  const searchStr = location.search\r\n  if (searchStr) {\r\n    const character = parseFlexObj(urlon.parse(searchStr.substring(1)))\r\n    return <Display character={character} />\r\n  } else {\r\n    const characterKey = location.characterKey\r\n    if (!characterKey) return <Redirect to={`/`} />\r\n    DatabaseInitAndVerify()\r\n    const flexObj = createFlexObj(characterKey)\r\n    if (!flexObj) return <Redirect to={`/`} />\r\n    window.scrollTo(0, 0)//sometimes the window isnt scolled to the top on redirect.\r\n    return <Redirect to={`/flex?${urlon.stringify(flexObj)}`} />\r\n  }\r\n}\r\nfunction Display({ character }) {\r\n  const [toast, settoast] = useState(false)\r\n  const url = window.location.href\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(url)\r\n    settoast(true)\r\n  }\r\n  const { databaseVersion = 0 } = character\r\n  const isUpToDate = databaseVersion < CurrentDatabaseVersion\r\n  return <Container className=\"my-2\">\r\n    <Toast onClose={() => settoast(false)} show={toast} delay={3000} autohide style={{\r\n      position: 'absolute',\r\n      top: 50,\r\n      right: 50,\r\n    }}>\r\n      <Toast.Header><b className=\"mr-auto\">Genshin Optimizer</b></Toast.Header>\r\n      <Toast.Body>URL copied to clipboard.</Toast.Body>\r\n    </Toast>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <InputGroup className=\"mb-0\">\r\n          <InputGroup.Prepend>\r\n            <Button onClick={copyToClipboard}>\r\n              <span><FontAwesomeIcon icon={faLink} /> Copy URL to clipboard</span>\r\n            </Button>\r\n          </InputGroup.Prepend>\r\n          <Form.Control readOnly value={window.location.href} onClick={e => e.target.select()} />\r\n        </InputGroup>\r\n        {isUpToDate && <Alert variant=\"warning\" className=\"py-2 mt-2 mb-0\">This URL is generated on an older database version of Genshin Optimizer. The character data below might not be displayed as intended.</Alert>}\r\n      </Card.Body>\r\n    </Card>\r\n    <CharacterDisplayCard character={character} />\r\n  </Container>\r\n}","import ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { CurrentDatabaseVersion } from \"../Database/DatabaseUtil\";\r\nimport { deepClone } from \"./Util\";\r\n\r\nexport function createFlexObj(characterKey) {\r\n  const character = deepClone(CharacterDatabase.get(characterKey))\r\n  if (!character) return null\r\n  const { levelKey, hitMode, reactionMode, artifactConditionals, baseStatOverrides, weapon, talentLevelKeys, autoInfused, talentConditionals, constellation, overrideLevel } = character\r\n  const artifacts = []\r\n  const dbv = CurrentDatabaseVersion\r\n  Object.values(character.equippedArtifacts).forEach(id => {\r\n    const art = deepClone(ArtifactDatabase.get(id))\r\n    if (!art) return\r\n    const { level, numStars, mainStatKey, setKey, slotKey, substats } = art\r\n    artifacts.push({ level, numStars, mainStatKey, setKey, slotKey, substats: Object.fromEntries(substats.map(({ key, value }) => [key, value])) })\r\n\r\n  });\r\n  const { auto, skill, burst } = talentLevelKeys\r\n\r\n  return { dbv, characterKey, levelKey, hitMode, reactionMode, artifactConditionals, baseStatOverrides, weapon, autoInfused, talentConditionals, constellation, overrideLevel, artifacts, tlvl: [auto, skill, burst] }\r\n}\r\n\r\nexport function parseFlexObj(character) {\r\n  const { dbv, characterKey, levelKey, hitMode, reactionMode, artifactConditionals, baseStatOverrides, weapon, autoInfused, talentConditionals, constellation, overrideLevel, tlvl, artifacts } = character\r\n  const characterkey = character.characterKey\r\n  character.artifacts.forEach(art => {\r\n    art.location = characterkey\r\n    art.substats = Object.entries(art.substats).map(([key, value]) => ({ key, value }))\r\n  });\r\n  const [auto, skill, burst] = tlvl\r\n  return {\r\n    databaseVersion: dbv,\r\n    characterKey, levelKey, hitMode, reactionMode, artifactConditionals, baseStatOverrides, weapon, autoInfused, talentConditionals, constellation, overrideLevel,\r\n    talentLevelKeys: { auto, skill, burst }, artifacts\r\n  }\r\n}\r\n\r\n","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} + {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ ele ] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n    })    \r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nfunction objMultiplication(obj, multi) {\r\n  Object.keys(obj).forEach(prop => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance,\r\n  objMultiplication,\r\n  getObjectKeysRecursive\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentDocumentSections = (stats, talentKey) =>\r\n    this.getTalentDocument(stats.characterKey, talentKey).map(section => typeof section === \"function\" ? section(stats) : section)\r\n\r\n  static getTalentField = (stats, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\r\n    if (!stats) return defVal\r\n    const field = this.getTalentDocumentSections(stats, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\r\n    if (!field) return defVal\r\n    return typeof field === \"function\" ? field(stats) : field\r\n  }\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return typeof field?.[key] === \"function\" ? field[key](stats) : field[key]\r\n  }\r\n\r\n  static getTalentStats = (charKey, talentKey, stats, defVal = null) => {\r\n    const talentStats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof talentStats === \"function\")\r\n      return talentStats(stats)\r\n    return talentStats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, stats) => {\r\n    const talents = this.getCDataObj(charKey)?.talent || {}\r\n    const statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(charKey, talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (stats, talentKey, conditionalKey, defVal = null) => {\r\n    const sections = this.getTalentDocumentSections(stats, talentKey)\r\n    let cond = null\r\n    for (const section of sections) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(stats)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  //look up the formula, and generate the formulaPath to send to worker.\r\n  static getFormulaPath(characterKey, talentKey, formula) {\r\n    const formulaDB = this.getCDataObj(characterKey)?.formula\r\n    if (!formulaDB) return\r\n    let formulaKey\r\n    if (talentKey === \"auto\") {\r\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\r\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\r\n        if (formulaKey) {\r\n          talentKey = tk\r\n          break;\r\n        }\r\n      }\r\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\r\n    if (!formulaKey) return\r\n    return { characterKey, talentKey, formulaKey }\r\n  }\r\n\r\n\r\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\r\n\r\n  static getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    const isAutoElemental = Character.isAutoElemental(characterKey)\r\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    if (!isAutoElemental)\r\n      basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (this.hasTalentPage(characterKey)) {\r\n      const charFormulas = {}\r\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\r\n        Character.getTalentDocumentSections(stats, talentKey)?.forEach((section, sectionIndex) =>\r\n          section?.fields?.forEach((field, fieldIndex) => {\r\n            const hasFormula = field?.formula || this.getTalentField(stats, talentKey, sectionIndex, fieldIndex)?.formula\r\n            if (!hasFormula) return\r\n            if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n            charFormulas[talentKey].push({ talentKey, sectionIndex, fieldIndex })\r\n          })))\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {\r\n      //generic average hit parameters.\r\n      const genericAvgHit = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical \r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\r\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst \r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    if (!character) return {}\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    initialStats.characterEle = this.getElementalKey(characterKey);\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.talentConditionals = talentConditionals\r\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, initialStats).forEach(s => this.mergeStats(initialStats, s))\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      const conditional = Character.getTalentConditional(initialStats, talentKey, conditionalKey)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    return initialStats\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\r\n  static getIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\r\n      let [, characterKey] = key.split(\"char_\")\r\n      if (!characterDatabase[characterKey]) {\r\n        let character = loadFromLocalStorage(key);\r\n        if (!character) return;\r\n        characterDatabase[characterKey] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static update = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    const dchar = deepClone(char)\r\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\r\n    characterDatabase[char.characterKey] = dchar;\r\n  }\r\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\r\n\r\n  static remove = (characterKey) => {\r\n    delete characterDatabase[characterKey];\r\n    localStorage.removeItem(`char_${characterKey}`);\r\n  }\r\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\r\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\r\n\r\n  static equipArtifact = (characterKey, art) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.update(char)\r\n  }\r\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !slotKey) return\r\n    if (!char?.equippedArtifacts?.[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.update(char)\r\n  }\r\n  static equipArtifactBuild = (characterKey, artifactIds) => {\r\n    const character = this.get(characterKey)\r\n    if (!character) return;\r\n    character.equippedArtifacts = artifactIds\r\n    CharacterDatabase.update(character);\r\n  }\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(characterDatabase).forEach(char => {\r\n      char.equippedArtifacts = {}\r\n      this.update(char)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    characterDatabase = {}\r\n    initiated = false\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\r\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let max = this.getSubstatAllMax(subStatKey) * len\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static get = (id) => artifactDatabase[id] ?? null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static update = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    if (!id) {//if does not have id, generate ID\r\n      do {\r\n        id = `artifact_${artIdIndex++}`\r\n      } while (localStorage.getItem(id) !== null)\r\n      art.id = id\r\n    }\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.get(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.update(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.get(artAid), this.get(artBid))\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(artifactDatabase).forEach(art => {\r\n      art.location = \"\"\r\n      this.update(art)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    artifactDatabase = {}\r\n    initiated = false\r\n    artIdIndex = 1\r\n  }\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData"],"sourceRoot":""}