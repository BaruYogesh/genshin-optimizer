{"version":3,"file":"static/js/93.3a9dc083.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactSetSlotTooltip.tsx","Components/BootstrapTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/Character/CharacterSelectionModal.tsx","Components/ConditionalWrapper.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","DataContext.tsx","Data/Artifacts/ArtifactSheet.tsx","Data/Resonance.tsx","Data/Weapons/WeaponSheet.tsx","ReactHooks/useCharSelectionCallback.tsx","Util/CharacterUtil.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useTeamData.tsx"],"sourcesContent":["import { Box, Typography } from '@mui/material';\r\nimport Assets from '../../Assets/Assets';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport KeyMap, { cacheValueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allElementsWithPhy, SlotKey } from '../../Types/consts';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon, { uncoloredEleIcons } from '../StatIcon';\r\nimport ArtifactSetSlotTooltip from './ArtifactSetSlotTooltip';\r\n\r\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\r\n  const artifactSheet = usePromise(art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\r\n  // Blank artifact slot icon\r\n  if (!art || !artifactSheet)\r\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"70%\", height: \"70%\",\r\n            left: \"50%\", top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            opacity: 0.7\r\n          }}\r\n          component=\"img\"\r\n          src={Assets.slot[key]}\r\n        />\r\n      </Box>\r\n    </CardDark>\r\n\r\n  // Actual artifact icon + info\r\n  const { mainStatKey, rarity, level, mainStatVal } = art\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ?? \"secondary\"\r\n\r\n  return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\r\n    <ArtifactSetSlotTooltip slotKey={key} sheet={artifactSheet}>\r\n      <Box\r\n        component=\"img\"\r\n        className={`grad-${rarity}star`}\r\n        src={artifactSheet.slotIcons[key]}\r\n        maxWidth=\"100%\"\r\n        maxHeight=\"100%\"\r\n      />\r\n    </ArtifactSetSlotTooltip>\r\n    <Typography sx={{ position: \"absolute\", lineHeight: 1, pointerEvents: \"none\" }} variant=\"subtitle2\"><SqBadge color={levelVariant as any}>+{level}</SqBadge></Typography>\r\n    <Typography variant='h6' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, }}>\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{cacheValueString(mainStatVal, KeyMap.unit(mainStatKey))}{KeyMap.unit(mainStatKey)} {KeyMap.getStr(mainStatKey)}</Typography>} disableInteractive>\r\n        <SqBadge color={color} sx={{ p: 0.25 }}>{element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}</SqBadge>\r\n      </BootstrapTooltip>\r\n    </Typography>\r\n  </CardDark>\r\n}\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport { SlotKey } from \"../../Types/consts\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\r\n\r\ntype Data = {\r\n  slotKey: SlotKey,\r\n  sheet: ArtifactSheet | undefined,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function ArtifactSetSlotTooltip({ slotKey, sheet, children }: Data) {\r\n  const fallback = <Box>\r\n    <Skeleton variant=\"text\" width={100} />\r\n    <Skeleton variant=\"text\" width={100} />\r\n  </Box>\r\n  const title = <Suspense fallback={fallback}>\r\n    <Box>\r\n      <Typography><strong>{sheet?.name}</strong></Typography>\r\n      <Typography>{artifactSlotIcon(slotKey)} {sheet?.getSlotName?.(slotKey)}</Typography>\r\n    </Box>\r\n  </Suspense>\r\n\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 500,\r\n  },\r\n}));\r\nexport default BootstrapTooltip\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useContext, useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = database._getWeapon(weaponId)\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.img}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\r\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\r\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\r\n          <WeaponStat node={UIData.get(input.weapon.main)} />\r\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n        </Typography>\r\n\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <SqBadge color=\"secondary\">{StatIcon[node.info.key]} {val}</SqBadge>\r\n}\r\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { DataContext, dataContextObj, TeamData } from '../../DataContext';\r\nimport { uiInput as input } from '../../Formula';\r\nimport KeyMap from '../../KeyMap';\r\nimport CharacterCardPico from './CharacterCardPico';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\r\nimport { range } from '../../Util/Util';\r\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\r\nimport CardLight from '../Card/CardLight';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport { NodeFieldDisplay } from '../FieldDisplay';\r\nimport SqBadge from '../SqBadge';\r\nimport { Stars } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\r\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey | \"\",\r\n  onClick?: (characterKey: CharacterKey, tab: string) => void,\r\n  onClickHeader?: (characterKey: CharacterKey, tab: string) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  characterChildren?: Displayable,\r\n  footer?: Displayable,\r\n  isTeammateCard?: boolean,\r\n}\r\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, footer, isTeammateCard }: CharacterCardProps) {\r\n  const { teamData: teamDataContext } = useContext(DataContext)\r\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\r\n  const { character, characterSheet, target: data } = teamData?.[characterKey] ?? {}\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey, \"overview\"), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!teamData || !character || !characterSheet || !data) return null;\r\n  const dataContextObj: dataContextObj = {\r\n    character,\r\n    data,\r\n    characterSheet,\r\n    mainStatAssumptionLevel: 0,\r\n    teamData,\r\n    characterDispatch\r\n  }\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <DataContext.Provider value={dataContextObj}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\r\n          <IconButton sx={{ p: 0.5 }} onClick={event => characterDispatch({ favorite: !character.favorite })}>\r\n            {character.favorite ? <Favorite /> : <FavoriteBorder />}\r\n          </IconButton>\r\n        </Box>\r\n        <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n          <Header onClick={!onClick ? onClickHeader : undefined} />\r\n          <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n            <Artifacts />\r\n            {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\r\n              <Grid item xs={1} height=\"100%\">\r\n                <WeaponCardPico weaponId={character.equippedWeapon} />\r\n              </Grid>\r\n              {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} index={i} /></Grid>)}\r\n            </Grid>}\r\n            {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\r\n            {!isTeammateCard && <Stats />}\r\n            {weaponChildren}\r\n            {artifactChildren}\r\n            {characterChildren}\r\n          </CardContent>\r\n        </ConditionalWrapper>\r\n        {footer}\r\n      </CardLight>\r\n    </DataContext.Provider>\r\n  </Suspense>\r\n}\r\nfunction Header({ onClick }: { onClick?: (characterKey: CharacterKey, tab: string) => void }) {\r\n  const { data, characterSheet } = useContext(DataContext)\r\n  const characterKey = data.get(input.charKey).value as CharacterKey\r\n  const characterEle = data.get(input.charEle).value as ElementKey\r\n  const characterLevel = data.get(input.lvl).value\r\n  const constellation = data.get(input.constellation).value\r\n  const ascension = data.get(input.asc).value\r\n  const autoBoost = data.get(input.bonus.auto).value\r\n  const skillBoost = data.get(input.bonus.skill).value\r\n  const burstBoost = data.get(input.bonus.burst).value\r\n\r\n  const tAuto = data.get(input.total.auto).value\r\n  const tSkill = data.get(input.total.skill).value\r\n  const tBurst = data.get(input.total.burst).value\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey, \"overview\")} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterSheet.thumbImg}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n            <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n            <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item>\r\n            <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\r\n          </Grid>\r\n        </Grid>\r\n        <Typography mt={1} ><Stars stars={characterSheet.rarity} colored /></Typography>\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\nfunction Artifacts() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifacts = useMemo(() =>\r\n    allSlotKeys.map(k => [k, database._getArt(data.get(input.art[k].id).value ?? \"\")]),\r\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\r\n\r\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\r\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\r\n      <Grid item key={key} xs={1}>\r\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\r\n      </Grid>\r\n    )}\r\n  </Grid>\r\n}\r\n\r\nfunction Stats() {\r\n  const { data } = useContext(DataContext)\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    {data.get(input.special).info.key && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\r\n      {StatIcon[data.get(input.special).info.key!]}\r\n      <Typography>{KeyMap.get(data.get(input.special).info.key!)}</Typography>\r\n    </Box>}\r\n  </Box>\r\n}\r\n","import { Box, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense } from 'react';\r\nimport Assets from '../../Assets/Assets';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { CharacterKey } from '../../Types/consts';\r\n\r\nexport default function CharacterCardPico({ characterKey = \"\", index = -1 }: { characterKey: CharacterKey | \"\", index?: number }) {\r\n  const teammateSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const character = useCharacter(characterKey)\r\n  if (teammateSheet && character) {\r\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\r\n    </Suspense>\r\n\r\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <BootstrapTooltip placement=\"top\" title={title}>\r\n        <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\r\n          <Box\r\n            component=\"img\"\r\n            src={teammateSheet.thumbImgSide}\r\n            maxWidth=\"100%\"\r\n            maxHeight=\"100%\"\r\n            sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\r\n          />\r\n        </Box>\r\n      </BootstrapTooltip>\r\n      <Typography variant='subtitle1' sx={{ position: \"absolute\", lineHeight: 1, pointerEvents: \"none\" }}>\r\n        <SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge>\r\n      </Typography>\r\n      <Typography variant='subtitle1' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, pointerEvents: \"none\" }}>\r\n        <SqBadge color=\"secondary\" >C{character.constellation}</SqBadge>\r\n      </Typography>\r\n    </CardDark>\r\n  } else {\r\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\r\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\r\n    </CardDark>\r\n  }\r\n}\r\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, IconButton, Typography } from \"@mui/material\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport { uiInput as input } from \"../../Formula\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport useForceUpdate from \"../../ReactHooks/useForceUpdate\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport useTeamData from \"../../ReactHooks/useTeamData\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey, WeaponTypeKey } from \"../../Types/consts\";\r\nimport { characterFilterConfigs, characterSortConfigs } from \"../../Util/CharacterSort\";\r\nimport { filterFunction, sortFunction } from \"../../Util/SortByFilters\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport CardLight from \"../Card/CardLight\";\r\nimport CloseButton from \"../CloseButton\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport ModalWrapper from \"../ModalWrapper\";\r\nimport SortByButton from \"../SortByButton\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { Stars } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ElementToggle from \"../ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\";\r\n\r\nconst defaultSortKeys = [\"level\", \"rarity\", \"name\"]\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const sortKeys = useMemo(() => newFirst ? [\"new\", ...defaultSortKeys] : defaultSortKeys, [newFirst])\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  const [sortBy, setsortBy] = useState(sortKeys[0])\r\n  const [ascending, setascending] = useState(false)\r\n  const [elementalFilter, setelementalFilter] = useState<ElementKey | \"\">(\"\")\r\n  const [weaponFilter, setweaponFilter] = useState<WeaponTypeKey | \"\">(\"\")\r\n\r\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\r\n\r\n  const [favesDirty, setFavesDirty] = useForceUpdate()\r\n  useEffect(() => database.followAnyChar(setFavesDirty), [database, setFavesDirty])\r\n\r\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\r\n  const filterConfigs = useMemo(() => characterSheets && favesDirty && characterFilterConfigs(database, characterSheets), [favesDirty, database, characterSheets])\r\n  const ownedCharacterKeyList = useMemo(() => characterSheets ? [...new Set(allCharacterKeys)].filter(cKey => filter(database._getChar(cKey), characterSheets[cKey])) : [], [database, characterSheets, filter])\r\n  const characterKeyList = useMemo(() => (characterSheets && sortConfigs && filterConfigs) ?\r\n    ownedCharacterKeyList\r\n      .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"yes\" }, filterConfigs))\r\n      .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      .concat(\r\n        ownedCharacterKeyList\r\n          .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"no\" }, filterConfigs))\r\n          .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      )\r\n    : [],\r\n    [characterSheets, elementalFilter, weaponFilter, sortBy, ascending, sortConfigs, filterConfigs, ownedCharacterKeyList])\r\n\r\n  if (!characterSheets) return null\r\n  return <ModalWrapper open={show} onClose={onHide} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1} >\r\n          <Grid item>\r\n            <WeaponToggle sx={{ height: \"100%\" }} onChange={setweaponFilter} value={weaponFilter} size=\"small\" />\r\n          </Grid>\r\n          <Grid item flexGrow={1}>\r\n            <ElementToggle sx={{ height: \"100%\" }} onChange={setelementalFilter} value={elementalFilter} size=\"small\" />\r\n          </Grid>\r\n\r\n          <Grid item flexGrow={1} />\r\n\r\n          <Grid item >\r\n            <SortByButton sx={{ height: \"100%\" }}\r\n              sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\r\n              ascending={ascending} onChangeAsc={setascending} />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={6} md={4} lg={3} >\r\n          <CharacterBtn key={characterKey} characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n        </Grid>)}\r\n      </Grid></CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CharacterBtn({ onClick, characterKey }: { onClick: () => void, characterKey: CharacterKey, }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const teamData = useTeamData(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const favorite = database._getChar(characterKey)?.favorite\r\n  const { target: data } = teamData?.[characterKey] ?? {}\r\n  if (!characterSheet) return null\r\n  const rarity = characterSheet.rarity\r\n  return <Box>\r\n    {favorite !== undefined && <Box display=\"flex\" position=\"absolute\" alignSelf=\"start\" zIndex={1}>\r\n      <IconButton sx={{ p: 0.5 }} onClick={() => characterDispatch({ favorite: !favorite })}>\r\n        {favorite ? <Favorite /> : <FavoriteBorder />}\r\n      </IconButton>\r\n    </Box>}\r\n    <CardActionArea onClick={onClick} >\r\n      <CardLight sx={{ display: \"flex\", alignItems: \"center\" }}  >\r\n        <Box component=\"img\" src={characterSheet.thumbImg} sx={{ width: 130, height: \"auto\" }} className={`grad-${rarity}star`} />\r\n        <Box sx={{ pl: 1 }}>\r\n          <Typography><strong>{characterSheet.name}</strong></Typography>\r\n          {data ? <>\r\n            <Typography variant=\"h6\"> {characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <ImgIcon src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} />{` `}{CharacterSheet.getLevelString(data.get(input.lvl).value, data.get(input.asc).value)}</Typography>\r\n            <Typography >\r\n              <SqBadge color=\"success\">{`C${data.get(input.constellation).value}`}</SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.auto).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.auto).value}</strong></SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.skill).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.skill).value}</strong></SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.burst).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.burst).value}</strong></SqBadge>\r\n            </Typography>\r\n          </> : <>\r\n            <Typography variant=\"h6\"><SqBadge color=\"primary\">NEW</SqBadge></Typography>\r\n          </>}\r\n          <small><Stars stars={rarity} colored /></small>\r\n        </Box>\r\n      </CardLight>\r\n    </CardActionArea >\r\n  </Box>\r\n}\r\n","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  falseWrapper?: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TooltipProps } from \"@mui/material\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\n\r\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\r\n  className?: string,\r\n}\r\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\r\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\nexport default QuestionTooltip\r\n","import { Groups } from \"@mui/icons-material\";\r\nimport { Box, List, ListItem, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { DataContext } from \"../DataContext\";\r\nimport { NodeDisplay } from \"../Formula/api\";\r\nimport KeyMap, { valueString } from \"../KeyMap\";\r\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport ColorText from \"./ColoredText\";\r\nimport QuestionTooltip from \"./QuestionTooltip\";\r\nimport StatIcon from \"./StatIcon\";\r\n\r\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\r\n  return <FieldDisplayList sx={{ m: 0 }}>\r\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\r\n  if (!canShow) return null\r\n  if (\"node\" in field) {\r\n    const node = data.get(field.node)\r\n    if (node.isEmpty) return null\r\n    if (oldData) {\r\n      const oldNode = oldData.get(field.node)\r\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\r\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\r\n    }\r\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\r\n  }\r\n  return <BasicFieldDisplay field={field} component={component} />\r\n}\r\n\r\nfunction BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\r\n  const { data } = useContext(DataContext)\r\n  const v = evalIfFunc(field.value, data)\r\n  const variant = evalIfFunc(field.variant, data)\r\n  const text = field.text && <span>{field.text}</span>\r\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\r\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport function NodeFieldDisplay({ node, oldValue, suffix, component }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType }) {\r\n  if (node.isEmpty) return null\r\n\r\n  suffix = suffix && <span>{suffix}</span>\r\n  const icon = node.info.key && StatIcon[node.info.key]\r\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\r\n  const isTeamBuff = node.info.isTeamBuff\r\n  const fieldFormulaText = node.formula\r\n  let fieldVal = \"\" as Displayable\r\n  if (oldValue) {\r\n    const diff = node.value - oldValue\r\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\r\n  } else fieldVal = valueString(node.value, node.unit)\r\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip title={<Typography>{fieldFormulaText}</Typography>} />\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\r\n    <Typography sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >{fieldVal}{formulaTextOverlay}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));\r\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\r\n\r\ntype SolidColoredToggleButtonPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\r\n\r\n\r\nconst SolidColoredToggleButton = styled(ToggleButton, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\r\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"secondary\", selectedColor = \"success\" }) => ({\r\n  '&': {\r\n    backgroundColor: theme.palette[baseColor].main,\r\n    color: theme.palette[baseColor].contrastText,\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: theme.palette[selectedColor].main,\r\n    color: theme.palette[selectedColor].contrastText,\r\n  },\r\n  '&.Mui-selected:hover': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n  '&.Mui-disabled': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected.Mui-disabled': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n}));\r\n\r\nexport default SolidColoredToggleButton\r\n","import { Box, ToggleButtonGroup } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\r\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport { uncoloredEleIcons } from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey | \"\") => void\r\n  value: ElementKey | \"\"\r\n}\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <ToggleButtonGroup exclusive onChange={cb} value={value || allElements} {...props}>\r\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} >\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{uncoloredEleIcons[ele]}</Box>\r\n    </SolidColoredToggleButton>)}\r\n  </ToggleButtonGroup>\r\n}\r\n","import { ToggleButton } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey | \"\") => void\r\n  value: WeaponTypeKey | \"\"\r\n}\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allWeaponTypeKeys} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}","import { Box, Typography } from '@mui/material';\r\nimport { useContext, useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponNameTooltip from './WeaponNameTooltip';\r\n\r\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = database._getWeapon(weaponId)\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n\r\n  const tooltipAddl = <Box>\r\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\r\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\r\n  </Box>\r\n\r\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\r\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.img}\r\n          maxWidth=\"100%\"\r\n          maxHeight=\"100%\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </WeaponNameTooltip>\r\n    </Box>\r\n    <Typography variant='subtitle1' sx={{ position: \"absolute\", lineHeight: 1, pointerEvents: \"none\" }}>\r\n      <SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge>\r\n    </Typography>\r\n    {weaponSheet.hasRefinement && <Typography variant='subtitle1' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, pointerEvents: \"none\" }}>\r\n      <SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge>\r\n    </Typography>}\r\n  </CardDark>\r\n}\r\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <Typography>{StatIcon[node.info.key]} {val}</Typography>\r\n}\r\n","import { Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\ntype Data = {\r\n  sheet: WeaponSheet,\r\n  addlText?: any,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\r\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\r\n    {addlText}\r\n  </Suspense>\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { createContext } from \"react\"\r\nimport CharacterSheet from \"./Data/Characters/CharacterSheet\"\r\nimport { UIData } from \"./Formula/uiData\"\r\nimport { ICachedCharacter } from \"./Types/character\"\r\nimport { CharacterKey } from \"./Types/consts\"\r\nimport { ICachedWeapon } from \"./Types/weapon\"\r\nimport WeaponSheet from \"./Data/Weapons/WeaponSheet\"\r\nimport { characterReducerAction } from \"./ReactHooks/useCharacterReducer\";\r\nexport type TeamData = Partial<Record<CharacterKey, {\r\n  target: UIData\r\n  buffs: Dict<CharacterKey, UIData>\r\n  character: ICachedCharacter\r\n  weapon: ICachedWeapon\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet,\r\n}>>\r\nexport type dataContextObj = {\r\n  character: ICachedCharacter\r\n  characterSheet: CharacterSheet\r\n  data: UIData\r\n  oldData?: UIData\r\n  mainStatAssumptionLevel: number\r\n  teamData: TeamData\r\n  characterDispatch: (action: characterReducerAction) => void\r\n}\r\n\r\n// If using this context without a Provider, then stuff will crash...\r\n// In theory, none of the components that uses this context should work without a provider...\r\nexport const DataContext = createContext({} as dataContextObj)\r\n","import { ArtifactSlotKey } from \"pipeline\";\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport SqBadge from \"../../Components/SqBadge\";\r\nimport { Translate } from \"../../Components/Translate\";\r\nimport { input } from \"../../Formula\";\r\nimport { mergeData } from \"../../Formula/api\";\r\nimport { Data } from \"../../Formula/type\";\r\nimport { UIData } from \"../../Formula/uiData\";\r\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey } from \"../../Types/consts\";\r\nimport { DocumentSection, IDocumentHeader } from \"../../Types/sheet\";\r\nimport { st } from \"../SheetUtil\";\r\n\r\n// TODO: remove typecasting once all sheets populated\r\nconst artifactSheets = import(\".\").then(imp => imp.default)\r\n\r\nexport interface IArtifactSheet {\r\n  name: string, // only to stored the English name for OCR, otherwise, should come from localization pipeline\r\n  rarity: readonly ArtifactRarity[],\r\n  icons: Dict<SlotKey, string>,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  document: DocumentSection[],\r\n}\r\n\r\n\r\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\nconst allData = artifactSheets.then(as => mergeData(Object.values(as).map(s => s.data)))\r\nexport class ArtifactSheet {\r\n  readonly sheet: IArtifactSheet\r\n  readonly key: ArtifactSetKey\r\n  readonly data: Data\r\n  constructor(setKey: ArtifactSetKey, sheet: IArtifactSheet, data: Data) {\r\n    this.sheet = sheet\r\n    this.key = setKey\r\n    this.data = data\r\n  }\r\n\r\n  get name() { return tr(this.key, \"setName\") }\r\n  get defIconSrc() {\r\n    const slotKey = this.slots[0]\r\n    if (!this.slotIcons[slotKey]) return undefined\r\n    return this.slotIcons[slotKey]\r\n  }\r\n  get defIcon() { return <ImgIcon src={this.defIconSrc} sx={{ fontSize: \"1.5em\" }} /> }\r\n  /**\r\n   * @deprecated use src directly\r\n   */\r\n  get nameWithIcon() {\r\n    const slotKey = this.slots[0]\r\n    return <span><ImgIcon src={this.slotIcons[slotKey]} /> {tr(this.key, \"setName\")}</span>\r\n  }\r\n\r\n  //This is only for OCR, because we only scan in english right now.\r\n  get nameRaw(): string { return this.sheet.name }\r\n  get rarity(): readonly ArtifactRarity[] { return this.sheet.rarity }\r\n  get slots(): SlotKey[] {\r\n    switch (this.key) {\r\n      case \"PrayersForDestiny\":\r\n      case \"PrayersForIllumination\":\r\n      case \"PrayersForWisdom\":\r\n      case \"PrayersToSpringtime\": return [\"circlet\"]\r\n      default: return [...allSlotKeys]\r\n    }\r\n  }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.sheet.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.sheet.setEffects }\r\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\r\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\r\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\r\n  setEffectDocument = (setNum: SetNum) => this.sheet.setEffects[setNum]?.document\r\n\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set ? artifactSheets.then(a => a[set]) : undefined }\r\n  static get getAll() { return artifactSheets }\r\n  static get getAllData() { return allData }\r\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<ArtifactRarity, ArtifactSetKey[]> {\r\n    const grouped: Dict<ArtifactRarity, ArtifactSetKey[]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as ArtifactRarity\r\n      if (grouped[rarity]) grouped[rarity]!.push(key)\r\n      else grouped[rarity] = [key]\r\n    })\r\n    return grouped\r\n  }\r\n\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, data: UIData) {\r\n    const artifactSetEffect: Partial<Record<ArtifactSetKey, SetNum[]>> = {}\r\n    Object.entries(sheets).forEach(([setKey, sheet]) => {\r\n      const setNums = (Object.keys(sheet.setEffects).map(k => parseInt(k)) as SetNum[]).filter(sn => sheet.hasEnough(sn, data))\r\n      if (setNums.length) artifactSetEffect[setKey] = setNums\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n  hasEnough = (setNum: SetNum, data: UIData) => (data.get(input.artSet[this.key]).value ?? 0) >= setNum\r\n}\r\nexport const setHeaderTemplate = (setKey: ArtifactSetKey, icons: Partial<Record<ArtifactSlotKey, string>>): ((setNum: SetNum) => IDocumentHeader) => {\r\n  const tr = (strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\n  return (setNum: SetNum) => ({\r\n    title: tr(\"setName\"),\r\n    icon: <ImgIcon size={2} sx={{ m: -1 }} src={icons.flower ?? icons.circlet ?? \"\"} />,\r\n    action: <SqBadge color=\"success\">{st(`${setNum}set`)}</SqBadge>,\r\n    description: tr(`setEffects.${setNum}`)\r\n  })\r\n}\r\n","import StatIcon from \"../Components/StatIcon\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { tally } from \"../Formula\";\r\nimport { inferInfoMut } from \"../Formula/api\";\r\nimport { UIData } from \"../Formula/uiData\";\r\nimport { equal, greaterEq, min, percent, sum } from \"../Formula/utils\";\r\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\r\nimport { DocumentSection } from \"../Types/sheet\";\r\nimport { objectKeyValueMap } from \"../Util/Util\";\r\nimport { condReadNode, sgt, st } from \"./SheetUtil\";\r\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\r\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\r\n\r\ntype IResonance = {\r\n  name: Displayable,\r\n  desc: Displayable,\r\n  icon: Displayable,\r\n  canShow: (data: UIData) => boolean\r\n  sections: DocumentSection[]\r\n}\r\n\r\n// Protective Canopy\r\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`,\r\ngreaterEq(sum(...allElementsWithPhy.map(i => min(1, tally[i]))), 4, percent(0.15))])\r\n\r\nconst protectiveCanopy: IResonance = {\r\n  name: tr(\"ProtectiveCanopy.name\"),\r\n  desc: tr(\"ProtectiveCanopy.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\r\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: Object.values(pcNodes).map(node => ({ node }))\r\n  }]\r\n}\r\n\r\n// Fervent Flames\r\nconst ffNode = greaterEq(tally.pyro, 2, percent(0.25))\r\nconst ferventFlames: IResonance = {\r\n  name: tr(\"FerventFlames.name\"),\r\n  desc: tr(\"FerventFlames.desc\"),\r\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.cryo\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: ffNode\r\n    }]\r\n  }]\r\n}\r\n\r\n// Soothing Waters\r\nconst swNode = greaterEq(tally.hydro, 2, percent(0.25))\r\nconst soothingWaters: IResonance = {\r\n  name: tr(\"SoothingWater.name\"),\r\n  desc: tr(\"SoothingWater.desc\"),\r\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.pyro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: swNode\r\n    }]\r\n  }]\r\n}\r\n\r\n//ShatteringIce\r\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\r\nconst condSI = condReadNode(condSIPath)\r\nconst siNode = greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15)))\r\nconst shatteringIce: IResonance = {\r\n  name: tr(\"ShatteringIce.name\"),\r\n  desc: tr(\"ShatteringIce.desc\"),\r\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.electro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSIPath,\r\n    value: condSI,\r\n    name: trm(\"ShatteringIce.cond\"),\r\n    header: {\r\n      title: tr(\"ShatteringIce.name\"),\r\n      icon: StatIcon.cryo,\r\n    },\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: siNode\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// High Voltage\r\nconst highVoltage: IResonance = {\r\n  name: tr(\"HighVoltage.name\"),\r\n  desc: tr(\"HighVoltage.desc\"),\r\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.hydro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}\r\n\r\n// Impetuous Winds\r\nconst iwNodeStam = greaterEq(tally.anemo, 2, percent(-0.15))\r\nconst iwNodeMove = greaterEq(tally.anemo, 2, percent(0.1))\r\nconst iwNodeCD = greaterEq(tally.anemo, 2, percent(-0.05))\r\nconst impetuousWinds: IResonance = {\r\n  name: tr(\"ImpetuousWinds.name\"),\r\n  desc: tr(\"ImpetuousWinds.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      node: iwNodeStam\r\n    }, {\r\n      node: iwNodeMove\r\n    }, {\r\n      node: iwNodeCD\r\n    }]\r\n  }]\r\n}\r\n\r\n// Enduring Rock\r\nconst condERPath = [\"resonance\", \"EnduringRock\"]\r\nconst condER = condReadNode(condERPath)\r\nconst erNodeshield_ = greaterEq(tally.geo, 2, percent(0.15))\r\nconst erNodeDMG_ = greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15)))\r\nconst erNodeRes_ = greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2)))\r\nconst enduringRock: IResonance = {\r\n  name: tr(\"EnduringRock.name\"),\r\n  desc: tr(\"EnduringRock.desc\"),\r\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"EnduringRock.desc\"),\r\n    fields: [{\r\n      node: erNodeshield_\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condERPath,\r\n    value: condER,\r\n    header: {\r\n      title: tr(\"EnduringRock.name\"),\r\n      icon: StatIcon.geo,\r\n    },\r\n    name: st(\"protectedByShield\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: erNodeDMG_\r\n        }, {\r\n          node: erNodeRes_\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 15,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\nexport const resonanceSheets: IResonance[] = [\r\n  protectiveCanopy,\r\n  ferventFlames,\r\n  soothingWaters,\r\n  shatteringIce,\r\n  highVoltage,\r\n  impetuousWinds,\r\n  enduringRock,\r\n]\r\n\r\nexport const resonanceData = inferInfoMut({\r\n  premod: {\r\n    ...pcNodes,\r\n    atk_: ffNode,\r\n    incHeal_: swNode,\r\n    staminaDec_: iwNodeStam,\r\n    moveSPD_: iwNodeMove,\r\n    cdRed_: iwNodeCD,\r\n    shield_: erNodeshield_,\r\n    all_dmg_: erNodeDMG_,\r\n    geo_enemyRes_: erNodeRes_,\r\n  },\r\n  total: {\r\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\r\n    critRate_: siNode\r\n  }\r\n})\r\n","import type { WeaponData } from 'pipeline';\r\nimport ImgIcon from '../../Components/Image/ImgIcon';\r\nimport SqBadge from '../../Components/SqBadge';\r\nimport { Translate } from '../../Components/Translate';\r\nimport { input } from '../../Formula';\r\nimport { Data } from '../../Formula/type';\r\nimport { Rarity, WeaponKey, WeaponTypeKey } from '../../Types/consts';\r\nimport { DocumentSection, IDocumentHeader } from '../../Types/sheet';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, lowRarityMilestoneLevels, milestoneLevels } from '../LevelData';\r\n\r\nconst weaponSheets = import('.').then(imp => imp.default)\r\n\r\nexport interface IWeaponSheet {\r\n  icon: string,\r\n  iconAwaken: string,\r\n  document: DocumentSection[],\r\n}\r\n\r\nexport default class WeaponSheet {\r\n  readonly key: WeaponKey;\r\n  readonly sheet: IWeaponSheet;\r\n  readonly data: Data;\r\n  readonly rarity: Rarity;\r\n  readonly weaponType: WeaponTypeKey;\r\n  constructor(key: WeaponKey, weaponSheet: IWeaponSheet, weaponData: WeaponData, data: Data) {\r\n    this.rarity = weaponData.rarity\r\n    this.weaponType = weaponData.weaponType\r\n    this.key = key\r\n    this.sheet = weaponSheet\r\n    this.data = data\r\n  }\r\n  static get = (weaponKey: WeaponKey | \"\"): Promise<WeaponSheet> | undefined => weaponKey ? weaponSheets.then(w => w[weaponKey]) : undefined\r\n  static get getAll() { return weaponSheets }\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([_, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICachedWeapon): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  get hasRefinement() { return this.rarity > 2 }\r\n  get passiveName() { return this.hasRefinement ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (refineIndex: number) => this.hasRefinement ? this.tr(`passiveDescription.${refineIndex}`) : \"\"\r\n  get img() { return this.sheet.icon }\r\n  get imgAwaken() { return this.sheet.iconAwaken }\r\n  get document() { return this.sheet.document }\r\n  get milestoneLevels(): Array<[number, number]> {\r\n    if (this.hasRefinement) return milestoneLevels as any\r\n    else return lowRarityMilestoneLevels as any\r\n  }\r\n  ambiguousLevel(level: number) {\r\n    if (this.hasRefinement) return ambiguousLevel(level)\r\n    else return ambiguousLevelLow(level)\r\n  }\r\n}\r\nexport const headerTemplate = (weaponKey: WeaponKey, img: string, imgAwaken: string, action?: Displayable): IDocumentHeader => {\r\n  const tr = (strKey: string) => <Translate ns={`weapon_${weaponKey}_gen`} key18={strKey} />\r\n  return {\r\n    title: tr(`passiveName`),\r\n    icon: data => <ImgIcon size={2} sx={{ m: -1 }} src={data.get(input.weapon.asc).value < 2 ? img : imgAwaken} />,\r\n    action: action && <SqBadge color=\"success\">{action}</SqBadge>,\r\n    description: data => tr(`passiveDescription.${data.get(input.weapon.refineIndex).value}`)\r\n  }\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { useNavigate, useMatch } from \"react-router\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { initialCharacter } from \"../Util/CharacterUtil\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { defaultInitialWeapon } from \"../Util/WeaponUtil\";\r\n\r\n/**\r\n * Basically a history hook to go to the dedicated character page. Will create the character if it doesn't exist.\r\n * @returns\r\n */\r\nexport default function useCharSelectionCallback() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const navigate = useNavigate()\r\n  // Used to maintain the previous tab, if there is one\r\n  let { params: { tab = \"\" } } = useMatch({ path: \"/character/:charKey/:tab\", end: false }) ?? { params: { tab: \"\" } }\r\n  const cb = useCallback(\r\n    async (characterKey: CharacterKey) => {\r\n      const character = database._getChar(characterKey)\r\n      let navTab = tab\r\n      // Create a new character + weapon, with linking if char isnt in db.\r\n      if (!character) {\r\n        const newChar = initialCharacter(characterKey)\r\n        database.updateChar(newChar)\r\n        const characterSheet = await CharacterSheet.get(characterKey)\r\n        if (!characterSheet) return\r\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\r\n        const weaponId = database.createWeapon(weapon)\r\n        database.setWeaponLocation(weaponId, characterKey)\r\n        // If we are navigating to a new character,\r\n        // redirect to Overview, regardless of previous tab.\r\n        // Trying to enforce a certain UI flow when building new characters\r\n        navTab = \"\"\r\n      }\r\n      navigate(`/character/${characterKey}/${navTab}`)\r\n    },\r\n    [navigate, database, tab],\r\n  )\r\n  return cb\r\n}\r\n","import { initialBuildSettings } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/BuildSetting\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { allSlotKeys, CharacterKey } from \"../Types/consts\"\r\nimport { objectKeyMap } from \"./Util\"\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key, // the game character this is based off\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: \"\",\r\n    equippedArtifacts: objectKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    conditional: {},\r\n    bonusStats: {},\r\n    enemyOverride: {},\r\n    buildSettings: initialBuildSettings(),\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n    team: [\"\", \"\", \"\"],\r\n    compareData: false,\r\n    favorite: false,\r\n  }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database._getChar(characterKey))\r\n  useEffect(() => updateCharacter(database._getChar(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.followChar(characterKey, updateCharacter) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { deepClone } from \"../Util/Util\";\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerenemyOverrideAction = {\r\n  type: \"enemyOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"enemyOverride\": {\r\n        const character = database._getChar(characterKey)!\r\n        const enemyOverride = character.enemyOverride\r\n        const { statKey, value } = action\r\n        if (enemyOverride[statKey] === value) break\r\n        database.updateChar({ ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\r\n        break\r\n      }\r\n      case \"editStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey, value } = action\r\n\r\n        const bonusStats = deepClone(character.bonusStats)\r\n\r\n        if (bonusStats[statKey] === value) break\r\n        if (!value) delete bonusStats[statKey]\r\n        else bonusStats[statKey] = value\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { team } = character\r\n\r\n        const { index, charKey: newCharKey } = action\r\n        const oldCharKey = team[index]\r\n        team[index] = newCharKey\r\n\r\n        // move the old char to \"inventory\"\r\n        if (oldCharKey) {\r\n          const oldChar = database._getChar(oldCharKey)\r\n          if (oldChar) database.updateChar({ ...oldChar, team: [\"\", \"\", \"\"] })\r\n        }\r\n\r\n        // unequip new char from its old teammates\r\n        if (newCharKey) {\r\n          const newChar = database._getChar(newCharKey)\r\n          if (newChar) {\r\n            newChar.team.forEach(t => {\r\n              if (!t) return\r\n              const tChar = database._getChar(t)\r\n              tChar && database.updateChar({ ...tChar, team: tChar.team.map(c => c === newCharKey ? \"\" : c) as ICachedCharacter[\"team\"] })\r\n            })\r\n          }\r\n        }\r\n\r\n        // equip new char to new teammates\r\n        team.forEach((t, tind) => {\r\n          if (!t) return\r\n          const newChar = database._getChar(t)\r\n          if (newChar) database.updateChar({ ...newChar, team: [characterKey, ...team].filter((_, i) => i !== tind + 1) as ICachedCharacter[\"team\"] })\r\n        })\r\n\r\n        // update src character\r\n        database.updateChar({ ...character, team })\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\r\n  }, [characterKey, database])\r\n\r\n}\r\n","import { useContext, useEffect, useMemo } from \"react\";\r\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { resonanceData } from \"../Data/Resonance\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\r\nimport { TeamData } from \"../DataContext\";\r\nimport { common } from \"../Formula\";\r\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, uiDataForTeam } from \"../Formula/api\";\r\nimport { Data } from \"../Formula/type\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectMap } from \"../Util/Util\";\r\nimport useForceUpdate from \"./useForceUpdate\";\r\nimport usePromise from \"./usePromise\";\r\n\r\ntype TeamDataBundle = {\r\n  team: CharacterKey[],\r\n  teamData: Dict<CharacterKey, Data[]>\r\n  teamBundle: Dict<CharacterKey, CharBundle>\r\n}\r\n\r\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[]): TeamData | undefined {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n  const teamDataBundle = usePromise(getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt), [dbDirty, characterKey, database, mainStatAssumptionLevel, overrideArt])\r\n\r\n  const { team = [], teamData, teamBundle } = teamDataBundle ?? {}\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.followChar(characterKey, setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.followAnyArt(setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  const [t1, t2, t3, t4] = team\r\n  useEffect(() =>\r\n    t1 ? database.followChar(t1, setDbDirty) : undefined,\r\n    [t1, setDbDirty, database])\r\n  useEffect(() =>\r\n    t2 ? database.followChar(t2, setDbDirty) : undefined,\r\n    [t2, setDbDirty, database])\r\n  useEffect(() =>\r\n    t3 ? database.followChar(t3, setDbDirty) : undefined,\r\n    [t3, setDbDirty, database])\r\n  useEffect(() =>\r\n    t4 ? database.followChar(t4, setDbDirty) : undefined,\r\n    [t4, setDbDirty, database])\r\n\r\n  const calcData = useMemo(() => {\r\n    return teamData && uiDataForTeam(teamData, characterKey as CharacterKey)\r\n  }, [teamData, characterKey])\r\n  const data = useMemo(() => {\r\n    if (!calcData || !teamBundle) return\r\n    return objectMap(calcData, (obj, ck) => {\r\n      const { data: _, ...rest } = teamBundle[ck]!\r\n      return { ...obj, ...rest }\r\n    })\r\n  }, [calcData, teamBundle])\r\n\r\n  return data\r\n}\r\n\r\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[]):\r\n  Promise<TeamDataBundle | undefined> {\r\n  if (!characterKey) return\r\n  const char1DataBundle = await getCharDataBundle(database, characterKey, mainStatAssumptionLevel, overrideArt)\r\n  if (!char1DataBundle) return\r\n  const team: CharacterKey[] = [characterKey]\r\n  const teamBundle = { [characterKey]: char1DataBundle }\r\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\r\n\r\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\r\n    if (!ck) return\r\n    const databundle = await getCharDataBundle(database, ck)\r\n    if (!databundle) return\r\n    team.push(ck)\r\n    teamBundle[ck] = databundle\r\n    teamData[ck] = databundle.data\r\n  }))\r\n\r\n  return { team, teamData, teamBundle }\r\n}\r\ntype CharBundle = {\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  data: Data[]\r\n}\r\nasync function getCharDataBundle(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[])\r\n  : Promise<CharBundle | undefined> {\r\n  if (!characterKey) return\r\n  const character = database._getChar(characterKey)\r\n  if (!character) return\r\n  const weapon = database._getWeapon(character.equippedWeapon)\r\n  if (!weapon) return\r\n  const characterSheet = await CharacterSheet.get(characterKey)\r\n  const weaponSheet = await WeaponSheet.get(weapon.key)\r\n  const artifactSheetsData = await ArtifactSheet.getAllData\r\n  if (!characterSheet || !weaponSheet || !artifactSheetsData) return\r\n  const artifacts = (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database._getArt(a))).filter(a => a) as ICachedArtifact[]\r\n  const data = [\r\n    ...artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)),\r\n    dataObjForCharacter(character),\r\n    characterSheet.getData(character.elementKey),\r\n    dataObjForWeapon(weapon),\r\n    weaponSheet.data,\r\n    artifactSheetsData,\r\n    common, // NEED TO PUT THIS AT THE END\r\n    resonanceData,\r\n  ]\r\n  return { character, weapon, characterSheet, weaponSheet, data }\r\n}\r\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","mainStatVal","levelVariant","Math","floor","max","element","allElementsWithPhy","ele","includes","color","sheet","className","slotIcons","maxWidth","maxHeight","lineHeight","pointerEvents","variant","bottom","right","placement","title","cacheValueString","KeyMap","disableInteractive","p","uncoloredEleIcons","StatIcon","ArtifactSetSlotTooltip","children","fallback","Suspense","name","artifactSlotIcon","getSlotName","BootstrapTooltip","styled","props","arrow","classes","popper","theme","tooltipClasses","palette","common","black","backgroundColor","WeaponFullCard","weaponId","weapon","useContext","DatabaseContext","database","_getWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","img","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","val","valueString","value","unit","undefined","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","footer","isTeammateCard","teamDataContext","DataContext","teamData","useTeamData","character","characterSheet","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterDispatch","useCharacterReducer","dataContextObj","mainStatAssumptionLevel","Skeleton","minHeight","CardLight","zIndex","IconButton","event","favorite","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","Header","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","map","i","CharacterCardPico","team","index","Stats","characterEle","characterLevel","constellation","ascension","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","py","pr","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","stars","colored","artifacts","allSlotKeys","k","_getArt","id","direction","Object","values","getDisplay","basic","n","alignItems","teammateSheet","CharacterSheet","useCharacter","elementKey","thumbImgSide","transformOrigin","justifyContent","defaultSortKeys","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","sortKeys","useState","sortBy","setsortBy","ascending","setascending","elementalFilter","setelementalFilter","weaponFilter","setweaponFilter","characterSheets","useForceUpdate","favesDirty","setFavesDirty","useEffect","followAnyChar","sortConfigs","characterSortConfigs","filterConfigs","characterFilterConfigs","ownedCharacterKeyList","Set","allCharacterKeys","cKey","_getChar","characterKeyList","filterFunction","weaponType","sort","sortFunction","concat","open","onClose","onChange","onChangeAsc","md","CharacterBtn","pl","weaponTypeKey","falseWrapper","cursor","icon","faQuestionCircle","FieldsDisplay","fields","FieldDisplayList","m","field","FieldDisplay","ListItem","oldData","canShow","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","v","evalIfFunc","text","toFixed","fixed","fieldText","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","formulaTextOverlay","Groups","List","borderRadius","shape","overflow","margin","contentDark","main","contentDarker","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","contrastText","dark","ElementToggle","cb","e","newVal","ToggleButtonGroup","exclusive","allElements","fontSize","WeaponToggle","allWeaponTypeKeys","wt","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","createContext","artifactSheets","then","imp","default","tr","strKey","ns","key18","allData","as","mergeData","s","getSlotDesc","setEffectDesc","setNum","setEffectDocument","setEffects","document","hasEnough","this","slots","defIconSrc","icons","set","a","sheets","grouped","entries","forEach","push","artifactSetEffect","setNums","keys","parseInt","sn","length","setHeaderTemplate","flower","circlet","action","st","description","pcNodes","objectKeyValueMap","greaterEq","sum","min","tally","percent","protectiveCanopy","desc","sections","teamBuff","ffNode","ferventFlames","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","resonanceSheets","sgt","resonanceData","inferInfoMut","premod","atk_","incHeal_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","total","critRate_","weaponSheets","weaponData","passiveDescription","refineIndex","iconAwaken","milestoneLevels","lowRarityMilestoneLevels","ambiguousLevel","ambiguousLevelLow","weaponKey","w","getWeaponsOfType","fromEntries","getLevelString","headerTemplate","imgAwaken","useCharSelectionCallback","navigate","useNavigate","useMatch","end","params","tab","navTab","newChar","hitMode","reactionMode","equippedArtifacts","objectKeyMap","conditional","bonusStats","enemyOverride","buildSettings","initialBuildSettings","talent","auto","skill","burst","infusionAura","compareData","updateChar","defaultInitialWeapon","createWeapon","setWeaponLocation","updateCharacter","followChar","type","statKey","deepClone","newCharKey","charKey","oldCharKey","oldChar","t","tChar","c","tind","_","overrideArt","dbDirty","setDbDirty","teamDataBundle","getTeamData","teamBundle","followAnyArt","t1","t2","t3","t4","calcData","uiDataForTeam","objectMap","obj","ck","rest","getCharDataBundle","char1DataBundle","Promise","all","databundle","artifactSheetsData","dataObjForArtifact","dataObjForCharacter","getData"],"sourceRoot":""}