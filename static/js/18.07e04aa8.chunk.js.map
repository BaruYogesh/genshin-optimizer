{"version":3,"sources":["Components/InfoComponent.tsx","Character/CharacterCard.tsx","Character/CharacterDisplay.tsx"],"names":["InfoComponent","pageKey","text","modalTitle","children","useState","loadFromLocalStorage","showInfoModal","setshowInfoModal","Array","isArray","getRandomElementFromArray","displayText","closeModal","infoShown","saveToLocalStorage","show","onHide","size","variant","contentClassName","bg","Header","Title","xs","onClick","icon","faTimes","Body","fallback","className","animation","Footer","faQuestionCircle","CharacterCard","characterKey","onEdit","onDelete","cardClassName","header","footer","useForceUpdate","forceUpdate","useEffect","CharacterDatabase","registerCharListener","unregisterCharListener","artifactSheets","usePromise","ArtifactSheet","getAll","character","get","characterSheet","CharacterSheet","weaponSheet","WeaponSheet","weapon","key","stats","useMemo","Character","calculateBuild","constellation","name","elementKey","characterEle","weaponTypeKey","weaponName","weaponMainVal","Weapon","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubstatKey","weaponSubVal","getWeaponSubstatValWithOverride","weaponLevelName","getLevelName","levelKey","weaponPassiveName","passiveName","faEdit","faTrashAlt","src","thumbImg","star","thumbnail","getLevelString","stars","colored","Assets","elements","weaponTypes","refineIndex","Stat","getStatName","getStatUnit","Object","entries","setEffects","setToSlots","map","arr","artifactSetName","highestNum","Math","max","statKey","unit","statVal","StatIconEle","toFixed","fixedUnit","as","Link","to","pathname","InfoDisplay","React","lazy","CharacterDisplayCard","toggle","level","rarity","filterReducer","oldFilter","newFilter","CharacterDisplay","props","charIdToEdit","setcharIdToEdit","keys","sortBy","setsortBy","useReducer","elementalFilter","elementalFilterDispatch","weaponFilter","weaponFilterDispatch","newCharacter","setnewCharacter","scrollRef","useRef","ReactGA","pageview","saved","allElements","includes","getWeaponTypeKeys","registerListener","unregisterListener","allCharacterSheets","sortingFunc","ck","getLevel","save","deleteCharacter","useCallback","id","a","chararcterSheet","i18next","t","window","confirm","remove","editCharacter","setTimeout","current","scrollIntoView","behavior","cancelEditCharacter","charKeyList","getCharacterKeyList","filter","cKey","sort","b","diff","showEditor","Boolean","ref","Suspense","undefined","newBuild","tabName","editable","setCharacterKey","onClose","CharDisplayFooter","eleKey","weaponType","type","value","onChange","lg","md","faPlus","charKey","faLink"],"mappings":"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","file":"static/js/18.07e04aa8.chunk.js","sourcesContent":["import { faQuestionCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Suspense, useState } from \"react\"\r\nimport { Button, Card, Col, Modal, Row, Spinner } from \"react-bootstrap\"\r\nimport { getRandomElementFromArray, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\"\r\n\r\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }: { pageKey: string, text: Displayable | Displayable[], modalTitle: Displayable, children: JSX.Element }) {\r\n  const [showInfoModal, setshowInfoModal] = useState(loadFromLocalStorage(\"infoShown\")?.[pageKey] ?? true)\r\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\r\n  const closeModal = () => {\r\n    const infoShown = loadFromLocalStorage(\"infoShown\") ?? {}\r\n    infoShown[pageKey] = false\r\n    saveToLocalStorage(\"infoShown\", infoShown)\r\n    setshowInfoModal(false)\r\n  }\r\n  return <>\r\n    <Modal show={showInfoModal} onHide={() => closeModal()} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <Card.Title>{modalTitle}</Card.Title>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button variant=\"danger\" onClick={() => closeModal()} >\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Suspense fallback={<h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>}>\r\n            {children}\r\n          </Suspense>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={() => closeModal()}>\r\n            <span>Close</span>\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"pl-2 py-0 pr-0\">\r\n        <Row>\r\n          <Col><small>{displayText}</small></Col>\r\n          <Col xs=\"auto\">\r\n            <Button size=\"sm\" variant=\"info\" className=\"m-0 py-1\" onClick={() => setshowInfoModal(true)}><FontAwesomeIcon icon={faQuestionCircle} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport Stat from '../Stat';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterSheet from './CharacterSheet';\r\ntype CharacterCardProps = { characterKey: CharacterKey | \"\", onEdit?: (any) => void, onDelete?: (any) => void, cardClassName: string, header?: JSX.Element, bg?: string, footer?: boolean }\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer = false }: CharacterCardProps) {\r\n  const [, forceUpdate] = useForceUpdate()\r\n  useEffect(() => {\r\n    characterKey && CharacterDatabase.registerCharListener(characterKey, forceUpdate)\r\n    return () => { characterKey && CharacterDatabase.unregisterCharListener(characterKey, forceUpdate) }\r\n  }, [characterKey, forceUpdate])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const character = CharacterDatabase.get(characterKey)\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheet = usePromise(character && WeaponSheet.get(character.weapon.key))\r\n  const stats = useMemo(() => character && characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets), [character, characterSheet, weaponSheet, artifactSheets])\r\n  if (!character || !characterSheet || !weaponSheet || !stats) return null;\r\n\r\n  const { weapon, constellation } = character\r\n  const name = characterSheet.name\r\n  const elementKey = stats.characterEle\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponName = weaponSheet?.name\r\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon, weaponSheet)\r\n  const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponSubVal = Weapon.getWeaponSubstatValWithOverride(weapon, weaponSheet)\r\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {header ? header : <h5><b>{name}</b></h5>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(characterKey)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete(characterKey)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onEdit?.(characterKey)} className={onEdit ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={characterSheet.thumbImg} className={`thumb-big grad-${characterSheet.star}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h3 className=\"mb-0\">{Character.getLevelString(character, characterSheet, weaponSheet)} {`C${constellation}`}</h3>\r\n          <h5 className=\"mb-0\"><Stars stars={characterSheet.star} colored /></h5>\r\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = artifactSheets?.[key].name ?? \"\"\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = stats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      } as any}>Generate Builds</Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faLink, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, useCallback, useEffect, useReducer, useRef, useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Col, Container, Image, Row, Spinner, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { Link } from 'react-router-dom';\r\nimport Assets from '../Assets/Assets';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport InfoComponent from '../Components/InfoComponent';\r\nimport { allElements, CharacterKey } from '../Types/consts';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport i18next from 'i18next';\r\nconst InfoDisplay = React.lazy(() => import('./InfoDisplay'));\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCard = lazy(() => import('./CharacterDisplayCard'))\r\nconst toggle = {\r\n  level: \"Level\",\r\n  rarity: \"Rarity\",\r\n  name: \"Name\"\r\n}\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\nexport default function CharacterDisplay(props) {\r\n  const [charIdToEdit, setcharIdToEdit] = useState(\"\")\r\n  const [sortBy, setsortBy] = useState(() => Object.keys(toggle)[0])\r\n  const [elementalFilter, elementalFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [newCharacter, setnewCharacter] = useState(false)\r\n  const [, forceUpdate] = useForceUpdate()\r\n  const scrollRef = useRef(null as any)\r\n  useEffect(() => {\r\n    ReactGA.pageview('/character')\r\n    const saved = loadFromLocalStorage(\"CharacterDisplay.state\")\r\n    if (saved) {\r\n      const { charIdToEdit, sortBy, elementalFilter, weaponFilter } = saved\r\n      setcharIdToEdit(charIdToEdit)\r\n      setsortBy(sortBy)\r\n      allElements.includes(elementalFilter) && elementalFilterDispatch(elementalFilter)\r\n      Weapon.getWeaponTypeKeys().includes(weaponFilter) && weaponFilterDispatch(weaponFilter)\r\n    }\r\n    CharacterDatabase.registerListener(forceUpdate)\r\n    return () => CharacterDatabase.unregisterListener(forceUpdate)\r\n  }, [forceUpdate])\r\n  const allCharacterSheets: StrictDict<CharacterKey, CharacterSheet> | {} = usePromise(CharacterSheet.getAll()) ?? {}\r\n  const sortingFunc = {\r\n    level: (ck) => Character.getLevel(CharacterDatabase.get(ck)?.levelKey),\r\n    rarity: (ck) => allCharacterSheets[ck]?.star\r\n  }\r\n  useEffect(() => {\r\n    const save = { charIdToEdit, sortBy, elementalFilter, weaponFilter }\r\n    saveToLocalStorage(\"CharacterDisplay.state\", save)\r\n  }, [charIdToEdit, sortBy, elementalFilter, weaponFilter])\r\n  const deleteCharacter = useCallback(async id => {\r\n    const chararcterSheet = await CharacterSheet.get(id)\r\n    let name = chararcterSheet?.name\r\n    //use translated string\r\n    if (typeof name === \"object\")\r\n      name = i18next.t(`char_${id}_gen:name`)\r\n\r\n    if (!window.confirm(`Are you sure you want to remove ${name}?`)) return\r\n    Character.remove(id)\r\n    if (charIdToEdit === id)\r\n      setcharIdToEdit(\"\")\r\n  }, [charIdToEdit, setcharIdToEdit])\r\n\r\n  const editCharacter = useCallback(id => {\r\n    setcharIdToEdit(id)\r\n    setTimeout(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, 500);\r\n  }, [setcharIdToEdit, scrollRef])\r\n\r\n  const cancelEditCharacter = useCallback(() => {\r\n    setcharIdToEdit(\"\")\r\n    setnewCharacter(false)\r\n  }, [setcharIdToEdit])\r\n\r\n  const charKeyList = CharacterDatabase.getCharacterKeyList().filter(cKey => {\r\n    if (elementalFilter && elementalFilter !== allCharacterSheets[cKey]?.elementKey) return false\r\n    if (weaponFilter && weaponFilter !== allCharacterSheets[cKey]?.weaponTypeKey) return false\r\n    return true\r\n  }).sort((a, b) => {\r\n    if (sortBy === \"name\") {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      // names must be equal\r\n      return 0;\r\n    }\r\n    if (sortBy === \"level\") {\r\n      const diff = sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n    } else {\r\n      const diff = sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n    }\r\n  })\r\n  const showEditor = Boolean(charIdToEdit || newCharacter)\r\n  return <Container ref={scrollRef} className=\"mt-2\">\r\n    <InfoComponent\r\n      pageKey=\"characterPage\"\r\n      modalTitle=\"Character Management Page Guide\"\r\n      text={[\"Every character will be tested with in-game numbers for maximum accuracy.\",\r\n        \"You can see the details of the calculations of every number.\",\r\n        \"You need to manually enable auto infusion for characters like Choungyun or Noelle.\",\r\n        \"You can change character constellations in both \\\"Character\\\" tab and in \\\"Talents\\\" tab.\",\r\n        \"Modified character Stats show up in yellow.\"]}\r\n    >\r\n      <InfoDisplay />\r\n    </InfoComponent>\r\n    {/* editor/character detail display */}\r\n    {showEditor ? <Row className=\"mt-2\"><Col>\r\n      <React.Suspense fallback={<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n        <Card.Body><h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3></Card.Body>\r\n      </Card>}>\r\n        <CharacterDisplayCard\r\n          character={undefined}\r\n          newBuild={undefined}\r\n          tabName={undefined}\r\n          editable\r\n          setCharacterKey={editCharacter}\r\n          characterKey={charIdToEdit}\r\n          onClose={cancelEditCharacter}\r\n          footer={<CharDisplayFooter onClose={cancelEditCharacter} characterKey={charIdToEdit} />}\r\n        />\r\n      </React.Suspense>\r\n    </Col></Row> : null}\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              {allElements.map(eleKey =>\r\n                <Button key={eleKey} variant={(!elementalFilter || elementalFilter === eleKey) ? \"success\" : \"primary\"} className=\"py-1 px-2\" onClick={() => elementalFilterDispatch(eleKey)} ><h4 className=\"mb-0\"><Image src={Assets.elements?.[eleKey]} className=\"inline-icon\" /></h4></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {Weapon.getWeaponTypeKeys().map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"primary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}><h4 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h4></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <span>Sort by: </span>\r\n            <ToggleButtonGroup type=\"radio\" name=\"level\" value={sortBy} onChange={setsortBy}>\r\n              {Object.entries(toggle).map(([key, text]) =>\r\n                <ToggleButton key={key} value={key} variant={sortBy === key ? \"success\" : \"primary\"}>{text}</ToggleButton>)}\r\n            </ToggleButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Row className=\"mt-2\">\r\n      {!showEditor && <Col lg={4} md={6} className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n          <Card.Header className=\"pr-2\">\r\n            <span>Add New Character</span>\r\n          </Card.Header>\r\n          <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n            <Row className=\"d-flex flex-row justify-content-center\">\r\n              <Col xs=\"auto\">\r\n                <Button onClick={() => setnewCharacter(true)}>\r\n                  <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>}\r\n      {charKeyList.map(charKey =>\r\n        <Col key={charKey} lg={4} md={6} className=\"mb-2\">\r\n          <CharacterCard\r\n            header={undefined}\r\n            cardClassName=\"h-100\"\r\n            characterKey={charKey}\r\n            onDelete={deleteCharacter}\r\n            onEdit={editCharacter}\r\n            footer\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n  </Container>\r\n}\r\nfunction CharDisplayFooter({ onClose, characterKey }) {\r\n  return <Row>\r\n    <Col>\r\n      <Button variant=\"info\" as={Link} to={{ pathname: \"/flex\", characterKey } as any}><FontAwesomeIcon icon={faLink} /> Share Character</Button>\r\n    </Col>\r\n    <Col xs=\"auto\">\r\n      <Button variant=\"danger\" onClick={onClose}>Close</Button>\r\n    </Col>\r\n  </Row>\r\n}"],"sourceRoot":""}