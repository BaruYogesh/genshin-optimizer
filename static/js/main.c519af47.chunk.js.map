{"version":3,"sources":["i18n.ts","Artifact/ArtifactSheet.tsx","Util/KeyPathUtil.ts","Character/CharacterSheet.ts","Weapon/WeaponSheet.tsx","Components/StatIcon.tsx","Types/consts.ts","StatConstants.ts","Settings/SettingsDisplay.tsx","Components/LoadingCard.tsx","App.tsx","reportWebVitals.ts","index.tsx","Stat.tsx","Data/CharacterData.ts","StatData.ts","Database/utils.ts","Database/DataManager.ts","Database/migration.ts","Database/Database.ts","Data/ArtifactData.ts","Artifact/Artifact.ts","Util/StatUtil.ts","Database/validation.ts","Types/artifact.ts","Formula.ts","Components/Translate.tsx","Util/ReactUtil.ts","Data/ElementalData.ts","Util/Util.ts","Util/FieldUtil.tsx","Conditional/Conditional.ts"],"names":["languageCodeList","i18n","use","Backend","initReactI18next","LanguageDetector","init","debug","process","fallbackLng","ns","defaultNS","load","returnEmptyString","backend","loadPath","interpolation","escapeValue","artifactImport","then","imp","Object","fromEntries","entries","default","map","set","value","ArtifactSheet","promiseSheets","allArtifactSets","sheets","tr","setKey","strKey","key18","data","key","getSlotName","slotKey","getSlotDesc","setEffectDesc","setNum","setEffectDocument","setEffects","document","this","name","rarity","deepClone","allSlotKeys","icons","conditionals","num","stats","evalIfFunc","grouped","forEach","sheet","Math","max","push","filter","charStats","setToSlots","artifactSetEffect","slots","parseInt","length","mergeStats","keys","KeyPath","prefix","path","Proxy","get","partial","symbol","toString","resolve","base","reduce","current","expCurve","expCurveJSON","charImport","a","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","getBase","statKey","level","ascensionLvl","baseStat","baseStatCurve","ascensions","props","getSpecializedStat","find","k","getSpecializedStatVal","Stat","getStatUnit","isMelee","weaponTypeKey","getTalent","eleKey","talent","talents","getTalentOfKey","talentKey","getTalentStats","split","constell","constellation","getTalentStatsAll","statsArr","talentStats","cardImg","thumbImg","star","elementKey","undefined","constellationName","getAll","weaponImport","weaponKey","WeaponSheet","loadWeaponSheet","allWeaponKeys","weaponSheet","passiveDescription","getSubStatKey","weapon","refineIndex","build","getMainStatValue","ascension","mainStat","type","curve","addStats","getSubStatValue","subStat","weaponType","img","getWeaponsOfType","getLevelString","ascensionMaxLevel","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","critRate_","faDice","critDMG_","faDiceD20","enerRech_","faSync","heal_","faFirstAid","StatIconEle","icon","className","allHitModes","allReactionModes","allRarities","allArtifactRarities","allElements","allWeaponTypeKeys","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","elemental","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","multi","variants","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","pyro","hydro","melt","cryo","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","SettingsDisplay","t","useTranslation","useForceUpdate","forceUpdate","ReactGA","pageview","bg","text","Header","i18nKey","Body","LanguageCard","DownloadCard","UploadCard","variant","LanguageDropdown","nativeLanguages","onSetLanguage","lang","changeLanguage","currentLang","languages","Toggle","language","Menu","Item","onClick","copyToClipboard","navigator","clipboard","writeText","JSON","stringify","database","exportStorage","alert","numChar","_getCharKeys","numArt","_getArts","downloadValid","Boolean","xs","md","count","Footer","disabled","JSONstr","filename","contentType","window","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","confirm","clear","deleteDatabase","file","cb","reader","FileReader","onload","result","readAsText","dataObj","useState","setdata","setfilename","error","parse","characterDatabase","artifactDatabase","e","dataValid","File","label","onChange","files","readFile","custom","accept","style","minHeight","obj","importStorage","replaceDatabase","LoadingCard","useSuspense","ready","Card","Trans","Spinner","animation","Home","lazy","ArtifactDisplay","CharacterDisplay","BuildDisplay","Planner","FlexDisplay","AppInner","id","Navbar","expand","Brand","as","Link","to","aria-controls","Collapse","Nav","rel","outboundLink","faPaypal","faPatreon","faDiscord","faCog","fallback","Container","component","Row","Col","values","version","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","getElementById","Error","getStatName","defVal","htmlStatsData","StatData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","unit","fixedUnit","printStat","premod","f","getPrintableFormulaStatKeyList","statList","modifiers","Set","FormulaText","has","ModFormula","formula","usePromise","Formula","field","formulaText","FormulaDisplay","modifierText","join","options","statName","statUnit","printValue","toFixed","o","enemyLevel_multi","heal_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_hit","ele","move","res","reaction","baseMulti","milestoneLevels","characterStatBase","stamina","flat","const","characterEle","characterLevel","weaponATK","dmg_","critHit_base_multi","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaSprintDec_","staminaGlidingDec_","staminaChargedDec_","transformative_level_multi","crystalize_multi","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","s","ElementToReactionKeys","physical","anemo","geo","electro","dendro","PreprocessFormulas","dependencyKeys","initialStats","preModFormulaList","getStage","x","modFormula","computeModifier","includes","postModFormulaList","func","modStats","moveName","clamp","eleName","opt","typeName","getDBVersion","storage","getItem","setDBVersion","setItem","string","removeItem","save","remove","DataManager","listeners","anyListeners","callback","listener","allKeys","migrate","report","migrated","state","Array","isArray","elementalFilter","weaponFilter","startsWith","buildSetting","artifactsAssumeFull","ascending","setFilters","useLockedArts","buildSettings","mainStatAssumptionLevel","mainStatKeys","migrateV2ToV3","traveler","characterKey","requireUpdate","location","migrateV3ToV4","levelKey","lvla","findIndex","maxLevel","addAsc","baseStatOverrides","migrateV4ToV5","character","migrateV5ToV6","Database","arts","chars","flex","validateDBCharacter","validateFlexCharacter","equippedArtifacts","slot","validateDBArtifact","artifact","validateFlexArtifact","art","extractFlexArtifact","char","follow","followAny","newChar","oldChar","saveChar","newArt","candidate","getRandomInt","size","generateRandomArtID","oldArt","lock","saveArt","artKey","newCharKey","oldCharKey","oldArtKey","newArts","oldArts","setLocation","extractFlexCharacter","artifactDisplay","characterDisplay","buildsDisplay","newDatabase","removeAll","shared","localStorage","ArtifactSubstatRollData","1","low","high","numUpgrades","2","3","4","5","ArtifactSlotsData","flower","plume","sands","goblet","circlet","Artifact","numStars","substats","errors","allSubstatRolls","total","substat","index","substatRolls","getSubstatRolls","roll","rolls","efficiency","getSubstatEfficiency","some","minimum","rollInfo","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accu","totalRolls","sum","emptySlotCount","matchedSlotCount","unusedFilterCount","currentEfficiency","maxEfficiency","maxSubstatRollEfficiency","slotName","slotMainStats","setEffectsObjs","artifactSheets","setObj","setEffect","setNumKey","entry","setStats","Conditional","parseConditionalValues","conditionalValues","conditional","conditionalValue","condStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","endsWith","ArtifactMainStatsData","mainStatValue","ArtifactStarsData","maxSubstatValues","substatKey","ArtifactSubstatsData","allSubstats","getSubstatKeys","ceil","getSubstatRollData","v","substatValue","rollData","ArtifactSubstatLookupTable","round","i","b","clampPercent","artifacts","val","paths","mainStatKey","min","mainStatVal","weightedEfficiency","NaN","validated","allMainStatKeys","_","validateSubstats","hitMode","reactionMode","talentLevelKeys","infusionAura","maxLvl","auto","statFilters","optimizationTarget","useEquippedArts","formulaImport","formulas","stat","modifier","objs","getCurrent","objPathValue","components","Translate","children","textKey","textObj","returnObjects","T","TransWrapper","Para","li","parent","trans","stateDirty","update","useCallback","promise","dependencies","setRes","useEffect","pending","console","getRandomElementFromArray","array","random","getRandomIntInclusive","loadFromLocalStorage","saveToLocalStorage","strPadLeft","pad","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","prop","layeredAssignment","arr","deletePropPath","tempPath","lastKey","objClearEmpties","crawlObject","validate","arg","statsToFields","statVals","statVal","canShow","fixed","fieldProcessing","processed","Promise","all","addConditional","source","findConditionals","condKey","states","maxStack","fields","stacks","stateKey","conditionalStats","c"],"mappings":"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","file":"static/js/main.c519af47.chunk.js","sourcesContent":["import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n// Probably a way to auto-populate this.\r\nexport const languageCodeList = [\r\n  \"chs\",\r\n  \"cht\",\r\n  \"de\",\r\n  \"en\",\r\n  \"es\",\r\n  \"fr\",\r\n  \"id\",\r\n  \"ja\",\r\n  \"ko\",\r\n  \"pt\",\r\n  \"ru\",\r\n  \"th\",\r\n  \"vi\"\r\n];\r\n\r\n/**\r\n * @see: https://www.i18next.com/translation-function/essentials\r\n * @see: https://react.i18next.com/latest/using-with-hooks\r\n */\r\ni18n\r\n  // load translation using http ->\r\n  // see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // Configure localization.\r\n  .init({\r\n    debug: process.env.NODE_ENV === \"development\",\r\n    // Use English strings by default, if the current language does not include\r\n    // the specified string.\r\n    fallbackLng: 'en',\r\n    // fallbackLng: 'dev', // Switch to this to force the fallback value on missing strings.\r\n\r\n    // List all translation namespaces.\r\n    ns: [\r\n      \"artifact\",\r\n      \"home\",\r\n      \"languages\",\r\n      \"settings\",\r\n      \"ui\",\r\n    ],\r\n    // Specify the default namespace.\r\n    defaultNS: \"ui\",\r\n\r\n    // Only use the language code, skipping the region code.\r\n    // For example, en-US becomes simply en.\r\n    load: 'languageOnly',\r\n\r\n    // allow an empty value to count as invalid (by default is true)\r\n    returnEmptyString: false,\r\n\r\n    backend: process.env.NODE_ENV === \"development\" ? {\r\n      // Path to load localization data from.\r\n      loadPath: 'genshin-optimizer/locales/{{lng}}/{{ns}}.json',\r\n    } : {\r\n      // Path to load localization data from.\r\n      loadPath: 'locales/{{lng}}/{{ns}}.json',\r\n    },\r\n    interpolation: {\r\n      escapeValue: false,//react does interlopation already\r\n    }\r\n  });\r\n\r\nexport default i18n;","import { Translate } from \"../Components/Translate\";\r\nimport { IArtifactSheet, SetEffectEntry } from \"../Types/artifact\";\r\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { BonusStats, ICalculatedStats } from \"../Types/stats\";\r\nimport { mergeStats } from \"../Util/StatUtil\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value, set)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  readonly key: ArtifactSetKey\r\n  constructor(data: IArtifactSheet, setKey: ArtifactSetKey) {\r\n    this.data = data\r\n    this.key = setKey\r\n  }\r\n\r\n  get name() { return tr(this.key, \"setName\") }\r\n\r\n  //This is only for OCR, because we only scan in english right now.\r\n  get nameRaw(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slots(): SlotKey[] {\r\n    switch (this.key) {\r\n      case \"PrayersForDestiny\":\r\n      case \"PrayersForIllumination\":\r\n      case \"PrayersForWisdom\":\r\n      case \"PrayersToSpringtime\": return [\"circlet\"]\r\n      default: return deepClone(allSlotKeys) as any\r\n    }\r\n  }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\r\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): BonusStats {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\r\n  setEffectDocument = (setNum: SetNum) => this.data.setEffects[setNum]?.document\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<Rarity, ArtifactSetKey[]> {\r\n    const grouped: Dict<Rarity, ArtifactSetKey[]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push(key)\r\n      else grouped[rarity] = [key]\r\n    })\r\n    return grouped\r\n  }\r\n\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): BonusStats {\r\n    const artifactSetEffect: BonusStats = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && mergeStats(artifactSetEffect, evalIfFunc(value.stats, charStats))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","export function KeyPath<Base, Value = Base>(prefix: string[] = []): PartialPath<Base, Value> {\r\n  const path = () => path.keys\r\n  path.keys = prefix\r\n\r\n  return new Proxy(path, {\r\n    get: (partial, symbol) => KeyPath([...partial.keys, symbol.toString()])\r\n  }) as any\r\n}\r\nexport function resolve<Base, Value>(base: Base, path: Path<Base, Value>): Value {\r\n  return path.reduce((current, key) => current?.[key], base as any)\r\n}\r\nexport function assign<Base, Value>(base: Base, path: Path<Base, Value>, value: Value) {\r\n  path.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, base as any)\r\n}\r\n\r\ntype PartialPath<Base, Value> = {\r\n  [key in keyof Value]: PartialPath<Base, Value[key]> & (() => Path<Base, Value>)\r\n}\r\n// eslint-disable-next-line\r\nexport type Path<Base, Value> = string[]","import { ICharacterSheet, TalentSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey } from \"../Types/consts\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport { CharacterExpCurveData } from \"pipeline\";\r\nimport expCurveJSON from './expCurve_gen.json'\r\nimport Stat from '../Stat'\r\n\r\nconst expCurve = expCurveJSON as CharacterExpCurveData\r\n\r\nexport const charImport = import('../Data/Characters').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>\r\n})\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | \"\"): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return \"elementKey\" in this.sheet ? this.sheet.elementKey : undefined }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get isAutoElemental() { return this.sheet.weaponTypeKey === \"catalyst\" }\r\n  getBase = (statKey: \"hp\" | \"def\" | \"atk\", level = 1, ascensionLvl = 0) =>\r\n    this.sheet.baseStat[statKey] * (expCurve[this.sheet.baseStatCurve[statKey] as any])[level] + this.sheet.ascensions[ascensionLvl].props[statKey]\r\n  getSpecializedStat = (ascensionLvl = 0): string | undefined => Object.keys(this.sheet.ascensions[ascensionLvl].props).find(k => k !== \"hp\" && k !== \"def\" && k !== \"atk\")\r\n  getSpecializedStatVal = (ascensionLvl = 0): number => {\r\n    const statKey = this.getSpecializedStat(ascensionLvl)\r\n    if (!statKey) return 0\r\n    const value = this.sheet.ascensions[ascensionLvl].props[statKey] ?? 0\r\n    if (Stat.getStatUnit(statKey) === \"%\") return value * 100\r\n    return value\r\n  }\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (eleKey: ElementKey = \"anemo\"): TalentSheet | undefined => {\r\n    if (\"talent\" in this.sheet) return this.sheet.talent\r\n    else return this.sheet.talents[eleKey]\r\n  }\r\n  getTalentOfKey = (talentKey: string, eleKey: ElementKey = \"anemo\") => this.getTalent(eleKey)?.sheets[talentKey]\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalentOfKey(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats, eleKey: ElementKey = \"anemo\") => {\r\n    const talents = this.getTalent(eleKey)?.sheets\r\n    if (!talents) return []\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n}\r\n","import { WeaponExpCurveData } from 'pipeline';\r\nimport { Translate } from '../Components/Translate'\r\nimport { ascensionMaxLevel } from '../Data/CharacterData';\r\nimport Stat from '../Stat';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\nimport expCurveJSON from './expCurve_gen.json'\r\nconst expCurve = expCurveJSON as WeaponExpCurveData\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(async imp => {\r\n  await import('../Data/formula') // TODO: remove this once we can ensure that formula is properly initiated everytime the weapon sheets are loaded\r\n  return Object.fromEntries(Object.entries(imp.default).map(([weaponKey, value]) =>\r\n    [weaponKey, new WeaponSheet(weaponKey, value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>\r\n})\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  key: WeaponKey;\r\n  constructor(key: string, weaponSheet: IWeaponSheet) {\r\n    this.key = key as WeaponKey\r\n    this.sheet = weaponSheet\r\n  }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICharacter[\"weapon\"]): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  //when there is no substat, assume there is no passive. \r\n  get passiveName() { return this.getSubStatKey() ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (stats: ICalculatedStats) => this.getSubStatKey() ? this.tr(`passiveDescription.${stats.weapon.refineIndex}`) : \"\"\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  stats = (build: ICalculatedStats): object | undefined => evalIfFunc(this.sheet.stats, build) || {}\r\n  get conditionals() { return this.sheet.conditionals }\r\n  get document() { return this.sheet.document }\r\n  getMainStatValue = (level = 1, ascension = 0) => {\r\n    const { type, base, curve } = this.sheet.mainStat\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatValue = (level = 1, ascension = 0) => {\r\n    if (!this.sheet.subStat) return 0\r\n    let { type, base, curve } = this.sheet.subStat\r\n    if (Stat.getStatUnit(type) === \"%\") base = base * 100\r\n    return base * expCurve[curve][level] + (this.sheet.ascension[ascension]?.addStats?.[type] ?? 0)\r\n  }\r\n  getSubStatKey = () => this.sheet.subStat?.type ?? \"\"\r\n}\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nexport const allHitModes = [\"hit\", \"avgHit\", \"critHit\"] as const\r\nexport const allReactionModes = [\"hydro_vaporize\", \"pyro_vaporize\", \"pyro_melt\", \"cryo_melt\",] as const\r\nexport const allArtifactSetCount = [1, 2, 3, 4, 5] as const\r\nexport const allRarities = [5, 4, 3, 2, 1] as const\r\nexport const allArtifactRarities = [5, 4, 3] as const\r\nexport const allSlotKeys = [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"] as const\r\nexport const allElements = ['anemo', 'geo', 'electro', 'hydro', 'pyro', 'cryo'] as const\r\nexport const allWeaponTypeKeys = ['sword', 'claymore', 'polearm', 'bow', 'catalyst'] as const\r\nexport const allArtifactSets = [\r\n  \"Adventurer\", \"ArchaicPetra\", \"Berserker\", \"BlizzardStrayer\", \"BloodstainedChivalry\",\r\n  \"BraveHeart\", \"CrimsonWitchOfFlames\", \"DefendersWill\", \"Gambler\", \"GladiatorsFinale\",\r\n  \"HeartOfDepth\", \"Instructor\", \"Lavawalker\", \"LuckyDog\", \"MaidenBeloved\",\r\n  \"MartialArtist\", \"NoblesseOblige\", \"PrayersForDestiny\", \"PrayersForIllumination\", \"PrayersForWisdom\",\r\n  \"PrayersToSpringtime\", \"ResolutionOfSojourner\", \"RetracingBolide\", \"Scholar\", \"TheExile\",\r\n  \"ThunderingFury\", \"Thundersoother\", \"TinyMiracle\", \"TravelingDoctor\", \"ViridescentVenerer\",\r\n  \"WanderersTroupe\", \"TenacityOfTheMillelith\", \"PaleFlame\", \"EmblemOfSeveredFate\", \"ShimenawasReminiscence\",\r\n] as const\r\nexport const allCharacterKeys = [\r\n  \"albedo\", \"amber\", \"barbara\", \"beidou\", \"bennett\", \"chongyun\", \"diluc\", \"diona\", \"fischl\", \"ganyu\",\r\n  \"hutao\", \"jean\", \"kaeya\", \"keqing\", \"klee\", \"lisa\", \"mona\", \"ningguang\", \"noelle\", \"qiqi\",\r\n  \"razor\", \"sucrose\", \"tartaglia\", \"traveler\", \"traveler\", \"venti\", \"xiao\", \"xiangling\", \"xingqiu\", \"xinyan\",\r\n  \"zhongli\", \"rosaria\", \"yanfei\", \"eula\", \"kaedeharakazuha\", \"kamisatoayaka\"\r\n] as const\r\nexport const allWeaponKeys = [\r\n  \"DullBlade\", \"SilverSword\", \"CoolSteel\", \"DarkIronSword\", \"FilletBlade\", \"HarbingerOfDawn\", \"SkyriderSword\",\r\n  \"TravelersHandySword\", \"BlackcliffLongsword\", \"FavoniusSword\", \"IronSting\", \"LionsRoar\", \"PrimordialJadeCutter\",\r\n  \"PrototypeRancour\", \"RoyalLongsword\", \"SacrificialSword\", \"TheAlleyFlash\", \"TheBlackSword\", \"TheFlute\",\r\n  \"SwordOfDescension\", \"FesteringDesire\", \"AquilaFavonia\", \"SkywardBlade\", \"SummitShaper\", \"WasterGreatsword\",\r\n  \"OldMercsPal\", \"BloodtaintedGreatsword\", \"DebateClub\", \"FerrousShadow\", \"Quartz\", \"SkyriderGreatsword\",\r\n  \"WhiteIronGreatsword\", \"BlackcliffSlasher\", \"FavoniusGreatsword\", \"LithicBlade\", \"PrototypeAminus\", \"Rainslasher\",\r\n  \"RoyalGreatsword\", \"SerpentSpine\", \"TheBell\", \"Whiteblind\", \"SacrificialGreatsword\", \"SnowTombedStarsilver\",\r\n  \"SkywardPride\", \"WolfsGravestone\", \"TheUnforged\", \"BeginnersProtector\", \"IronPoint\", \"BlackTassel\", \"Halberd\",\r\n  \"WhiteTassel\", \"BlackcliffPole\", \"CrescentPike\", \"Deathmatch\", \"DragonsBane\", \"LithicSpear\", \"PrototypeGrudge\",\r\n  \"FavoniusLance\", \"RoyalSpear\", \"DragonspineSpear\", \"VortexVanquisher\", \"PrimordialJadeWingedSpear\", \"StaffOfHoma\",\r\n  \"SkywardSpine\", \"HuntersBow\", \"SeasonedHuntersBow\", \"EbonyBow\", \"Messenger\", \"RavenBow\", \"RecurveBow\",\r\n  \"SharpshootersOath\", \"Slingshot\", \"TheStringless\", \"AlleyHunter\", \"BlackcliffWarbow\", \"CompoundBow\",\r\n  \"FavoniusWarbow\", \"PrototypeCrescent\", \"RoyalBow\", \"Rust\", \"SacrificialBow\", \"TheViridescentHunt\", \"SkywardHarp\",\r\n  \"AmosBow\", \"ElegyForTheEnd\", \"WindblumeOde\", \"ApprenticesNotes\", \"PocketGrimoire\", \"DullBlade\", \"EmeraldOrb\", //TODO: AmberCatalyst => DullBlade, replace with another weaponKey\r\n  \"MagicGuide\", \"OtherworldlyStory\", \"ThrillingTalesOfDragonSlayers\", \"TwinNephrite\", \"BlackcliffAgate\",\r\n  \"FavoniusCodex\", \"MappaMare\", \"PrototypeMalice\", \"RoyalGrimoire\", \"SacrificialFragments\", \"SolarPearl\", \"TheWidsith\",\r\n  \"WineAndSong\", \"EyeOfPerception\", \"Frostbearer\", \"LostPrayerToTheSacredWinds\", \"SkywardAtlas\", \"MemoryOfDust\",\r\n  \"SongOfBrokenPines\", \"DodocoTales\", \"MitternachtsWaltz\", \"FreedomSworn\", \"AmenomaKageuchi\", \"MistsplitterReforged\",\r\n  \"KatsuragikiriNagamasa\", \"KitainCrossSpear\", \"ThunderingPulse\", \"Hamayumi\", \"HakushinRing\",\r\n] as const\r\nexport const characterSpecializedStatKeys = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"] as const\r\n\r\nexport type HitModeKey = typeof allHitModes[number]\r\nexport type ReactionModeKey = typeof allReactionModes[number]\r\nexport type SetNum = typeof allArtifactSetCount[number]\r\nexport type Rarity = typeof allRarities[number]\r\nexport type SlotKey = typeof allSlotKeys[number]\r\nexport type ElementKey = typeof allElements[number]\r\nexport type ArtifactSetKey = typeof allArtifactSets[number]\r\nexport type CharacterKey = typeof allCharacterKeys[number]\r\nexport type WeaponKey = typeof allWeaponKeys[number]\r\nexport type WeaponTypeKey = typeof allWeaponTypeKeys[number]\r\nexport type CharacterSpecializedStatKey = typeof characterSpecializedStatKeys[number]","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\n\r\n// https://github.com/Dimbreath/GenshinData/blob/72c9112a7c5e8e5014f61009a1a2764e266aeab7/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//   or if the permalink is dead,\r\n// https://github.com/Dimbreath/GenshinData/blob/master/ExcelBinOutput/ElementCoeffExcelConfigData.json\r\n//\r\n// PlayerElementLevelCo\r\nexport const transformativeReactionLevelMultipliers = [-1.0, // lvl 0\r\n  17.165606, 18.535048, 19.904854, 21.274902, 22.6454, 24.649612, 26.640642, 28.868587, 31.36768, 34.143345, 37.201, 40.66, 44.446667, 48.56352, 53.74848, 59.081898, 64.420044, 69.72446, 75.12314, 80.58478, 86.11203, 91.70374, 97.24463, 102.812645, 108.40956, 113.20169, 118.102905, 122.97932, 129.72733, 136.29291, 142.67085, 149.02902, 155.41699, 161.8255, 169.10631, 176.51808, 184.07274, 191.70952, 199.55692, 207.38205, 215.3989, 224.16566, 233.50217, 243.35057, 256.06308, 268.5435, 281.52606, 295.01364, 309.0672, 323.6016, 336.75754, 350.5303, 364.4827, 378.61917, 398.6004, 416.39825, 434.387, 452.95105, 472.60623, 492.8849, 513.56854, 539.1032, 565.51056, 592.53876, 624.4434, 651.47015, 679.4968, 707.79407, 736.67145, 765.64026, 794.7734, 824.67737, 851.1578, 877.74207, 914.2291, 946.74677, 979.4114, 1011.223, 1044.7917, 1077.4437, 1109.9976, 1142.9766, 1176.3695, 1210.1844, 1253.8357, 1288.9528, 1325.4841, 1363.4569, 1405.0974, 1446.8535]\r\n// PlayerShieldLevelCo\r\nexport const crystalizeLevelMultipliers = [-1.0, // lvl 0\r\n  91.1791, 98.707664, 106.23622, 113.76477, 121.29332, 128.82188, 136.35042, 143.87898, 151.40752, 158.93608, 169.99149, 181.07625, 192.19037, 204.0482, 215.939, 227.86275, 247.68594, 267.5421, 287.4312, 303.82642, 320.22522, 336.62762, 352.31927, 368.01093, 383.70255, 394.43237, 405.18146, 415.94992, 426.73764, 437.5447, 450.6, 463.7003, 476.84558, 491.1275, 502.55457, 514.0121, 531.4096, 549.9796, 568.5849, 584.9965, 605.67035, 626.3862, 646.0523, 665.7556, 685.4961, 700.8394, 723.3331, 745.8653, 768.4357, 786.79193, 809.5388, 832.32904, 855.16266, 878.0396, 899.4848, 919.362, 946.0396, 974.7642, 1003.5786, 1030.077, 1056.635, 1085.2463, 1113.9244, 1149.2587, 1178.0648, 1200.2238, 1227.6603, 1257.243, 1284.9174, 1314.7529, 1342.6652, 1372.7524, 1396.321, 1427.3124, 1458.3745, 1482.3358, 1511.9109, 1541.5493, 1569.1537, 1596.8143, 1622.4197, 1648.074, 1666.3761, 1684.6782, 1702.9803, 1726.1047, 1754.6715, 1785.8666, 1817.1375, 1851.0603]\r\n","import { useState } from \"react\"\r\nimport { Alert, Badge, Button, Card, Col, Container, Dropdown, Form, Row } from \"react-bootstrap\"\r\nimport ReactGA from 'react-ga'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport { database } from \"../Database/Database\"\r\nimport { languageCodeList } from \"../i18n\"\r\nimport { useForceUpdate } from \"../Util/ReactUtil\"\r\n\r\nexport default function SettingsDisplay() {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const [, forceUpdate] = useForceUpdate()\r\n  ReactGA.pageview('/setting')\r\n\r\n  return <Container>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n      <Card.Header><Trans t={t} i18nKey=\"title\" /></Card.Header>\r\n      <Card.Body>\r\n        <LanguageCard />\r\n        <DownloadCard forceUpdate={forceUpdate} />\r\n        <UploadCard forceUpdate={forceUpdate} />\r\n      </Card.Body>\r\n    </Card>\r\n  </Container >\r\n}\r\n\r\nfunction LanguageCard() {\r\n  const { t } = useTranslation();\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header>{t(\"settings:languageCard.selectLanguage\")} <Badge variant=\"warning\">{t(\"ui:underConstruction\")}</Badge></Card.Header>\r\n    <Card.Body>\r\n      <LanguageDropdown />\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nconst nativeLanguages = {\r\n  \"chs\": \"中文 正体字\",\r\n  \"cht\": \"中文 繁體字\",\r\n  \"de\": \"Deutsch\",\r\n  \"en\": \"English\",\r\n  \"es\": \"español\",\r\n  \"fr\": \"français\",\r\n  \"id\": \"Bahasa Indonesia\",\r\n  \"ja\": \"日本語\",\r\n  \"ko\": \"한국어\",\r\n  \"pt\": \"Português\",\r\n  \"ru\": \"Русский язык\",\r\n  \"th\": \"ภาษาไทย\",\r\n  \"vi\": \"Tiếng Việt\"\r\n}\r\nexport function LanguageDropdown() {\r\n  const { t, i18n } = useTranslation([\"ui\", \"settings\"]);\r\n  const onSetLanguage = (lang) => () => i18n.changeLanguage(lang);\r\n  const currentLang = i18n.languages[0];\r\n  return <Dropdown className=\"flex-grow-1 mb-2\">\r\n    <Dropdown.Toggle className=\"w-100\" variant=\"primary\">\r\n      {t('settings:languageCard.languageFormat', { language: t(`languages:${currentLang}`) })}\r\n    </Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {languageCodeList.map((lang) => <Dropdown.Item key={lang} onClick={onSetLanguage(lang)}><Trans i18nKey={`languages:${lang}`} />{lang !== currentLang ? ` (${nativeLanguages[lang]})` : \"\"}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\nfunction download(JSONstr, filename = \"data.json\") {\r\n  const contentType = \"application/json;charset=utf-8\"\r\n  if (window?.navigator?.msSaveOrOpenBlob as any) { // TODO: Function is always defined, do we want to call it instead?\r\n    const blob = new Blob([decodeURIComponent(encodeURI(JSONstr))], { type: contentType })\r\n    navigator.msSaveOrOpenBlob(blob, filename)\r\n  } else {\r\n    const a = document.createElement('a');\r\n    a.download = filename\r\n    a.href = `data:${contentType},${encodeURIComponent(JSONstr)}`\r\n    a.target = \"_blank\"\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n  }\r\n}\r\n\r\nfunction deleteDatabase(t) {\r\n  if (!window.confirm(t(\"settings:dialog.delete-database\"))) return\r\n  database.clear()\r\n}\r\nfunction copyToClipboard() {\r\n  navigator.clipboard.writeText(JSON.stringify(database.exportStorage()))\r\n  alert(\"Copied database to clipboard.\")\r\n}\r\nfunction DownloadCard({ forceUpdate }) {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  const numChar = database._getCharKeys().length\r\n  const numArt = database._getArts().length\r\n  const downloadValid = Boolean(numChar || numArt)\r\n  const deleteDB = () => {\r\n    deleteDatabase(t);\r\n    forceUpdate()\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-3\">\r\n    <Card.Header><Trans t={t} i18nKey=\"downloadCard.databaseDownload\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"downloadCard.charsStored\" count={numChar}><b>{{ count: numChar }}</b> Characters Stored</Trans></h6></Col>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"downloadCard.artisStored\" count={numArt}><b>{{ count: numArt }}</b> Artifacts Stored</Trans></h6></Col>\r\n      </Row>\r\n      <small><Trans t={t} i18nKey=\"downloadCard.databaseDisclaimer\" /></small>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Row>\r\n        <Col xs=\"auto\"><Button disabled={!downloadValid} onClick={() => download(JSON.stringify(database.exportStorage()))}><Trans t={t} i18nKey=\"downloadCard.button.download\" /></Button></Col>\r\n        <Col ><Button disabled={!downloadValid} variant=\"info\" onClick={copyToClipboard}><Trans t={t} i18nKey=\"downloadCard.button.copy\" /></Button></Col>\r\n        <Col xs=\"auto\"><Button disabled={!downloadValid} variant=\"danger\" onClick={deleteDB} ><Trans t={t} i18nKey=\"downloadCard.button.delete\" /></Button></Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>\r\n}\r\nasync function readFile(file, cb) {\r\n  if (!file) return\r\n  const reader = new FileReader()\r\n  reader.onload = () => {\r\n    cb(reader.result)\r\n  }\r\n  reader.readAsText(file)\r\n}\r\nfunction replaceDatabase(obj, cb = () => { }) {\r\n  if (!window.confirm(\"Are you sure you want to replace your database? All existing characters and artifacts will be deleted before replacement.\")) return\r\n  database.importStorage(obj)\r\n  cb()\r\n}\r\nfunction UploadCard({ forceUpdate }) {\r\n  const { t } = useTranslation([\"ui\", \"settings\"]);\r\n  const [data, setdata] = useState(\"\")\r\n  const [filename, setfilename] = useState(\"\")\r\n  let error = \"\"\r\n  let numChar, numArt, dataObj\r\n  if (data) {\r\n    try {\r\n      dataObj = JSON.parse(data)\r\n      const { characterDatabase, artifactDatabase } = dataObj\r\n      numChar = Object.keys(characterDatabase).length\r\n      numArt = Object.keys(artifactDatabase).length\r\n    } catch (e) {\r\n      error = `Invalid JSON: ${e}`\r\n    }\r\n  }\r\n  const dataValid = Boolean(numChar || numArt)\r\n  const replaceDB = () => {\r\n    replaceDatabase(dataObj)\r\n    setdata(\"\")\r\n    setfilename(\"\")\r\n    forceUpdate()\r\n  }\r\n  const onUpload = e => {\r\n    const file = e.target.files[0]\r\n    e.target.value = null//reset the value so the same file can be uploaded again...\r\n    if (file) setfilename(file.name)\r\n    readFile(file, setdata)\r\n  }\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header><Trans t={t} i18nKey=\"settings:uploadCard.title\" /></Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Form.File\r\n          className=\"mb-2\"\r\n          label={filename ? filename : <Trans t={t} i18nKey=\"settings:uploadCard.hint\" />}\r\n          onChange={onUpload}\r\n          custom\r\n          accept=\".json\"\r\n        />\r\n        <h6><Trans t={t} i18nKey=\"settings:uploadCard.hintPaste\" /></h6>\r\n        <textarea className=\"w-100 text-monospace\" value={data} onChange={e => setdata(e.target.value)} style={{ minHeight: \"10em\" }} />\r\n      </Row>\r\n      {dataValid && <Row>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"settings:uploadCard.numChar\" /> <b>{numChar}</b></h6></Col>\r\n        <Col xs={12} md={6}><h6><Trans t={t} i18nKey=\"settings:uploadCard.numArt\" /> <b>{numArt}</b></h6></Col>\r\n      </Row>}\r\n      {Boolean(data && (error || !dataValid)) && <Alert variant=\"danger\">{error ? error : \"Unable to parse character & artifact data from file.\"}</Alert>}\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Button variant={dataValid ? \"success\" : \"danger\"} disabled={!dataValid} onClick={replaceDB}><Trans t={t} i18nKey=\"settings:uploadCard.replaceDatabase\" /></Button>\r\n    </Card.Footer>\r\n  </Card>\r\n}","import { Card, Spinner } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nexport default function LoadingCard() {\r\n  const { t, ready } = useTranslation(\"ui\", { useSuspense: false });\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mt-2\">\r\n    <Card.Body>\r\n      <h3 className=\"text-center\">{ready ? <Trans t={t} i18nKey=\"ui:loading\" /> : \"Loading...\"}<Spinner animation=\"border\" variant=\"primary\" /></h3>\r\n    </Card.Body>\r\n  </Card>\r\n}","import { faDiscord, faPatreon, faPaypal } from '@fortawesome/free-brands-svg-icons';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ReactGA from 'react-ga';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { HashRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { version } from \"../package.json\";\r\nimport './App.scss';\r\nimport './Assets/Image.scss';\r\nimport LoadingCard from './Components/LoadingCard';\r\nimport './Database/Database';\r\nimport './i18n';\r\nimport { LanguageDropdown } from './Settings/SettingsDisplay';\r\n\r\nconst Home = lazy(() => import('./Home/HomeDisplay'))\r\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\r\nconst CharacterDisplay = lazy(() => import('./Character/CharacterDisplay'))\r\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\r\nconst Planner = lazy(() => import('./Planner/PlannerDisplay'))\r\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\r\nconst FlexDisplay = lazy(() => import('./FlexPage/FlexDisplay'))\r\nconst SettingsDisplay = lazy(() => import('./Settings/SettingsDisplay'))\r\n\r\nfunction App() {\r\n  return <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n    <AppInner />\r\n  </Suspense>\r\n}\r\nfunction AppInner() {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <HashRouter>\r\n    <div className=\"h-100 d-flex flex-column\" id=\"mainContainer\">\r\n      <div id=\"content\" className=\"flex-grow-1\">\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand as={Link} to=\"/\"><Trans t={t} i18nKey=\"pageTitle\">Genshin Optimizer</Trans></Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link as={Link} to=\"/artifact\"><Trans t={t} i18nKey=\"ui:tabs.artifacts\">Artifacts</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/character\"><Trans t={t} i18nKey=\"ui:tabs.characters\">Character</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/build\"><Trans t={t} i18nKey=\"ui:tabs.builds\">Builds</Trans></Nav.Link>\r\n              <Nav.Link as={Link} to=\"/tools\"><Trans t={t} i18nKey=\"ui:tabs.tools\">Tools</Trans></Nav.Link>\r\n              {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/test\">TEST</Nav.Link>}\r\n            </Nav>\r\n            <Nav>\r\n              {process.env.NODE_ENV === \"development\" && <LanguageDropdown />}\r\n              <Nav.Link href={process.env.REACT_APP_PAYPAL_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPaypal} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.paypal\">PayPal</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_PATREON_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faPatreon} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.patreon\">Patreon</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"discord\" }, () => { })}>\r\n                <span><FontAwesomeIcon icon={faDiscord} className=\"fa-fw\" /> <Trans t={t} i18nKey=\"ui:social.discord\">Discord</Trans></span>\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/setting\"><FontAwesomeIcon icon={faCog} /></Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Suspense fallback={<Container><LoadingCard /></Container>}>\r\n          <Switch>\r\n            <Route path=\"/artifact\" component={ArtifactDisplay} />\r\n            <Route path=\"/character\" component={CharacterDisplay} />\r\n            <Route path=\"/build\" component={BuildDisplay} />\r\n            <Route path=\"/tools\" component={Planner} />\r\n            {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\r\n            <Route path=\"/setting\" component={SettingsDisplay} />\r\n            <Route path=\"/flex\" component={FlexDisplay} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n      <Nav id=\"footer\" className=\"bg-dark\">\r\n        <Row className=\"w-100 ml-0 mr-0 mb-2 text-light d-flex justify-content-between\">\r\n          <Col xs={\"auto\"}>\r\n            <span><small><Trans t={t} i18nKey=\"ui:rightsDisclaimer\">Genshin Optimizer is not affiliated with or endorsed by miHoYo.</Trans></small></span>\r\n          </Col>\r\n          <Col xs={\"auto\"}>\r\n            <span><small ><Trans t={t} i18nKey=\"ui:appVersion\" values={{ version: version }}>Genshin Optimizer Version: {{ version }}</Trans></small></span>\r\n          </Col>\r\n        </Row>\r\n      </Nav>\r\n    </div>\r\n  </HashRouter>\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID as any, {\r\n  // debug: process.env.NODE_ENV === \"development\"\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(undefined);\r\n","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\nimport { usePromise } from \"./Util/ReactUtil\";\r\nimport { evalIfFunc } from \"./Util/Util\";\r\nimport Formula from \"./Formula\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats, premod = false) =>\r\n    f({ stats, expand: false, premod }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nconst ModFormula = ({ path, stats }) => {\r\n  const formula = usePromise(Formula.get(path), [path]) as any\r\n  if (!formula?.field?.formulaText) return null\r\n  const ret = evalIfFunc(formula.field.formulaText, stats) as JSX.Element\r\n  return ret\r\n}\r\nexport function FormulaDisplay({ statKey, stats, modifiers = {}, expand = true }) {\r\n  if (modifiers[statKey]) {\r\n    const modifierText = (modifiers?.[statKey] ?? []).map(path =>\r\n      <span key={path.join()}> + <ModFormula path={path} stats={stats} /></span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand, premod: true })}{modifierText} </span>\r\n    else\r\n      return <span>{f({ stats, premod: true }, statKey)}{modifierText} </span>\r\n  }\r\n\r\n  if (typeof FormulaText?.[statKey] === \"function\")\r\n    return FormulaText[statKey]({ stats, expand })\r\n  else return null\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true, premod = false } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  const value = (premod ? stats?.premod?.[statKey] : undefined) ?? stats?.[statKey]\r\n  const printValue = value?.toFixed?.(fixedUnit) || value\r\n  const debug = process.env.NODE_ENV === \"development\" ? <code className=\"text-warning\"> {statKey}</code> : null\r\n  return <span className=\"text-nowrap\"><b>{statName}</b>{debug} <span className=\"text-info\">{printValue}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>16 * {f(o, \"eleMas\")} / ( 2000 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n};\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].map(ele => FormulaText[`${ele}_crystalize_hit`] = o => <span>250% * {f(o, `crystalize_hit`)}</span>)\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","// import characters from\r\n\r\nconst ascensionMaxLevel = [20, 40, 50, 60, 70, 80, 90] as const\r\n\r\nconst milestoneLevels = [\r\n  [90, 6],\r\n  [80, 6],\r\n  [80, 5],\r\n  [70, 5],\r\n  [70, 4],\r\n  [60, 4],\r\n  [60, 3],\r\n  [50, 3],\r\n  [50, 2],\r\n  [40, 2],\r\n  [40, 1],\r\n  [20, 1],\r\n  [20, 0],\r\n  [1, 0]\r\n] as const\r\n\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n} as const\r\n\r\nexport {\r\n  ascensionMaxLevel,\r\n  characterStatBase,\r\n  milestoneLevels\r\n}","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\nimport { ICalculatedStats } from \"./Types/stats\";\r\nimport { mergeStats } from \"./Util/StatUtil\";\r\nimport Formula from \"./Formula\";\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaSprintDec_: { name: \"Sprinting Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas: Dict<string, (s: ICalculatedStats) => number> = {\r\n  // Basic Stats\r\n  baseATK: (s) => s.characterATK + s.weaponATK,\r\n  finalATK: (s) => s.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s) => s.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s) => s.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s) => (100 + s.characterLevel) / ((100 + s.characterLevel) + (100 + s.enemyLevel) * (1 - s.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s) => transformativeReactionLevelMultipliers[s.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 1600 * s.eleMas / (2000 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s) => crystalizeLevelMultipliers[s.characterLevel],\r\n  crystalize_hit: (s) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * s.crystalize_multi,\r\n};\r\n\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].forEach(ele => {\r\n  StatData[`${ele}_crystalize_hit`] = { name: `Crystalize Shield ${hitElements[ele].name} Effective HP`, variant: ele }\r\n  Formulas[`${ele}_crystalize_hit`] = s => s.crystalize_hit * 2.5\r\n})\r\n\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"shattered_hit\", \"crystalize_hit\", \"electro_crystalize_hit\", \"pyro_crystalize_hit\", \"cryo_crystalize_hit\", \"hydro_crystalize_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s) => s[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s) => s[`${ele}_${move}_hit_base_multi`] * s.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s) => multi * s.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * s[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * s[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\ntype KeyedFormula = [string, (s: ICalculatedStats) => number]\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys: string[], stats: ICalculatedStats) {\r\n  const { modifiers = {} } = stats, initialStats = {} as ICalculatedStats\r\n\r\n  const preModFormulaList = dependencyKeys.map(key => {\r\n    if (getStage(key) !== 0)\r\n      return [\"\", () => 0] as KeyedFormula\r\n\r\n    if (key in Formulas)\r\n      return [key, Formulas[key]] as KeyedFormula\r\n    initialStats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n    return [\"\", () => 0] as KeyedFormula\r\n  }).filter(x => x[0])\r\n\r\n  const modFormula = Formula.computeModifier(stats, Object.fromEntries(Object.entries(modifiers)\r\n    .filter(([key]) => dependencyKeys.includes(key)) // Keep only relevant keys\r\n  ))\r\n\r\n  const postModFormulaList = dependencyKeys.map(key => {\r\n    if (getStage(key) !== 1)\r\n      return [\"\", () => 0] as KeyedFormula\r\n\r\n    const func = Formulas[key]!\r\n\r\n    if (StatData[key]?.const) {\r\n      initialStats[key] = func(initialStats)\r\n      return [\"\", () => 0] as KeyedFormula\r\n    }\r\n\r\n    return [key, func] as KeyedFormula\r\n  }).filter(x => x[0])\r\n\r\n  return {\r\n    initialStats: initialStats as ICalculatedStats,\r\n    formula: (s: ICalculatedStats) => {\r\n      preModFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n\r\n      const modStats = Formula.computeModifier(s, s.modifiers)(s) // late-binding modifiers (arts mod)\r\n      mergeStats(modStats, modFormula(s))\r\n      s.premod = Object.fromEntries(Object.keys(modifiers).map(key => [key, s[key]]))\r\n      // Apply modifiers\r\n      mergeStats(s, modStats)\r\n      mergeStats(s, { modifiers })\r\n\r\n      postModFormulaList.forEach(([key, formula]) => s[key] = formula(s))\r\n    }\r\n  }\r\n}\r\nexport function getStage(key: string): number {\r\n  return ((key in Formulas) && key !== \"baseATK\" && key !== \"finalATK\" && key !== \"finalHP\" && key !== \"finalDEF\")\r\n    ? 1 // postmod\r\n    : 0 // premod\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","export function getDBVersion(storage: Storage) {\r\n  return parseInt(storage.getItem('db_ver') ?? '0')\r\n}\r\nexport function setDBVersion(storage: Storage, version: number) {\r\n  storage.setItem('db_ver', version.toString())\r\n}\r\n\r\nexport function load(storage: Storage, key: string): any | undefined {\r\n  const string = storage.getItem(key)\r\n  if (!string) return undefined\r\n  try {\r\n    return JSON.parse(string)\r\n  } catch {\r\n    storage.removeItem(key)\r\n    return undefined\r\n  }\r\n}\r\nexport function save(storage: Storage, key: string, value: any) {\r\n  storage.setItem(key, JSON.stringify(value))\r\n}\r\nexport function remove(storage: Storage, key: string) {\r\n  storage.removeItem(key)\r\n}\r\n","export class DataManager<Key extends string | number, Value> {\r\n    static readonly allKeys = {} as const\r\n\r\n    data: Dict<Key, Value> = {}\r\n    listeners: Dict<Key, Callback<Value | undefined>[]> = {}\r\n    anyListeners: Callback<Key | typeof DataManager.allKeys>[] = []\r\n\r\n    followAny(callback: Callback<Key | typeof DataManager.allKeys>): () => void {\r\n        this.anyListeners.push(callback)\r\n        return () => {\r\n            this.anyListeners = this.anyListeners.filter(cb => cb !== callback)\r\n        }\r\n    }\r\n    follow(key: Key, callback: Callback<Value | undefined>) {\r\n        const value = this.get(key)\r\n        callback(value)\r\n        if (this.listeners[key]) this.listeners[key]!.push(callback)\r\n        else this.listeners[key] = [callback]\r\n        return () => {\r\n            this.listeners[key] = this.listeners[key]?.filter(cb => cb !== callback)\r\n            if (!this.listeners[key]?.length) delete this.listeners[key]\r\n        }\r\n    }\r\n\r\n    get keys() { return Object.keys(this.data) }\r\n    get values() { return Object.values(this.data) }\r\n    get(key: Key): Value | undefined { return this.data[key] }\r\n    set(key: Key, value: Value) {\r\n        this.data[key] = value\r\n\r\n        this.listeners[key]?.forEach(cb => cb(value))\r\n        this.anyListeners.forEach(cb => cb(key))\r\n    }\r\n    remove(key: Key) {\r\n        delete this.data[key]\r\n\r\n        this.listeners[key]?.forEach(cb => cb(undefined))\r\n        this.anyListeners.forEach(cb => cb(key))\r\n        delete this.listeners[key]\r\n    }\r\n    removeAll() {\r\n        this.data = {}\r\n\r\n        Object.values(this.listeners).forEach(listeners => listeners.forEach(listener => listener(undefined)))\r\n        this.anyListeners.forEach(listener => listener(DataManager.allKeys))\r\n        this.listeners = {}\r\n        this.anyListeners = []\r\n    }\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg) => void\r\n","import { ascensionMaxLevel } from \"../Data/CharacterData\"\r\nimport { getDBVersion, load, save, setDBVersion } from \"./utils\"\r\n\r\nconst currentDBVersion = 6\r\n\r\nexport function migrate(storage: Storage): { migrated: boolean } {\r\n  const version = getDBVersion(storage)\r\n  const report = { migrated: false }\r\n\r\n  if (version > currentDBVersion)\r\n    throw new Error(\"Database is not supported\")\r\n\r\n  if (version < 3) migrateV2ToV3(storage)\r\n  if (version < 4) migrateV3ToV4(storage)\r\n  if (version < 5) migrateV4ToV5(storage)\r\n  if (version < 6) migrateV5ToV6(storage)\r\n\r\n  if (version < currentDBVersion) {\r\n    report.migrated = true\r\n  }\r\n\r\n  setDBVersion(storage, currentDBVersion)\r\n\r\n  return report\r\n}\r\n/// v4.0.0 - v4.23.2\r\nfunction migrateV2ToV3(storage: Storage) {\r\n  const state = load(storage, \"CharacterDisplay.state\")\r\n  if (state) {\r\n    if (Array.isArray(state.elementalFilter)) state.elementalFilter = \"\"\r\n    if (Array.isArray(state.weaponFilter)) state.weaponFilter = \"\"\r\n    save(storage, \"CharacterDisplay.state\", state)\r\n  }\r\n\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = load(storage, key)\r\n      if (!value) continue\r\n      if (value.buildSetting) {\r\n        const { artifactsAssumeFull = false, ascending = false, mainStat = [\"\", \"\", \"\"], setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }], useLockedArts = false } = value.buildSetting ?? {}\r\n        value.buildSettings = { mainStatAssumptionLevel: artifactsAssumeFull ? 20 : 0, ascending, mainStatKeys: mainStat, setFilters, useLockedArts }\r\n      }\r\n\r\n      save(storage, key, value)\r\n    }\r\n  }\r\n}\r\n/// v5.0.0 - v5.7.15\r\nfunction migrateV3ToV4(storage: Storage) { // \r\n  // Convert anemo traveler to traveler, and remove geo traveler\r\n  const traveler = load(storage, \"char_traveler_anemo\")\r\n  // Deletion of old travelers are handled during validation\r\n\r\n  if (traveler) {\r\n    traveler.elementKey = \"anemo\"\r\n    traveler.characterKey = \"traveler\"\r\n    save(storage, \"char_traveler\", traveler)\r\n  }\r\n\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"artifact_\")) {\r\n      const value = load(storage, key)\r\n      let requireUpdate = false\r\n      if (value.location === \"traveler_anemo\") {\r\n        value.location = \"traveler\"\r\n        requireUpdate = true\r\n      } else if (value.location === \"traveler_geo\") {\r\n        value.location = \"\"\r\n        requireUpdate = true\r\n      }\r\n\r\n      if (requireUpdate)\r\n        save(storage, key, value)\r\n    }\r\n  }\r\n}\r\n/// v5.8.0 - v5.11.5\r\nfunction migrateV4ToV5(storage: Storage) {\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const value = load(storage, key)\r\n\r\n      const levelKey = value.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        value.level = 1\r\n        value.ascension = 0\r\n      } else {\r\n        value.level = level\r\n        value.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n\r\n      // TODO: Remove this once we validate baseStatOverrides\r\n      delete value.baseStatOverrides?.characterLevel\r\n      delete value.baseStatOverrides?.characterHP\r\n      delete value.baseStatOverrides?.characterATK\r\n      delete value.baseStatOverrides?.characterDEF\r\n\r\n      save(storage, key, value)\r\n    }\r\n  }\r\n}\r\n\r\n// v5.12.0 - Present\r\nfunction migrateV5ToV6(storage: Storage) {\r\n  for (const key in storage) {\r\n    if (key.startsWith(\"char_\")) {\r\n      const character = load(storage, key)\r\n\r\n      //migrate character weapon levels\r\n      const levelKey = character.weapon.levelKey ?? \"L1\"\r\n      const [, lvla] = levelKey.split(\"L\")\r\n      const level = parseInt(lvla)\r\n      const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n      const addAsc = lvla.includes(\"A\")\r\n      if (level < 0 || level > 90 || ascension < 0) {\r\n        character.weapon.level = 1\r\n        character.weapon.ascension = 0\r\n      } else {\r\n        character.weapon.level = level\r\n        character.weapon.ascension = ascension + (addAsc ? 1 : 0)\r\n      }\r\n      save(storage, key, character)\r\n    }\r\n  }\r\n}\r\n","import { IArtifact, IFlexArtifact } from \"../Types/artifact\";\r\nimport { ICharacter, IFlexCharacter } from \"../Types/character\";\r\nimport { allSlotKeys, CharacterKey, SlotKey } from \"../Types/consts\";\r\nimport { deepClone, getRandomInt } from \"../Util/Util\";\r\nimport { load, save, remove, getDBVersion, setDBVersion } from \"./utils\";\r\nimport { DataManager } from \"./DataManager\";\r\nimport { migrate } from \"./migration\";\r\nimport { validateFlexArtifact, validateDBCharacter, validateDBArtifact, extractFlexArtifact, validateFlexCharacter, extractFlexCharacter } from \"./validation\";\r\n\r\nexport class Database {\r\n  storage: Storage\r\n  arts = new DataManager<string, IArtifact>()\r\n  chars = new DataManager<CharacterKey, ICharacter>()\r\n\r\n  private constructor(storage: Storage) {\r\n    this.storage = storage\r\n\r\n    const { migrated } = migrate(storage)\r\n\r\n    // Load into memory and verify database integrity\r\n    for (const key in storage) {\r\n      if (key.startsWith(\"char_\")) {\r\n        const flex = validateDBCharacter(load(storage, key), key)\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          remove(storage, key)\r\n          continue\r\n        }\r\n        const character = validateFlexCharacter(flex)\r\n        // Use relations from artifact\r\n        character.equippedArtifacts = Object.fromEntries(allSlotKeys.map(slot => [slot, \"\"])) as any\r\n\r\n        this.chars.set(flex.characterKey, character)\r\n        // Save migrated version back to db\r\n        if (migrated) save(this.storage, `char_${flex.characterKey}`, flex)\r\n      }\r\n    }\r\n\r\n    for (const key in storage) {\r\n      if (key.startsWith(\"artifact_\")) {\r\n        const flex = validateDBArtifact(load(storage, key), key)\r\n        if (!flex) {\r\n          // Non-recoverable\r\n          remove(storage, key)\r\n          continue\r\n        }\r\n\r\n        // Update relations\r\n        const { location, slotKey } = flex\r\n        if (location && this.chars.data[location]?.equippedArtifacts[slotKey] === \"\") {\r\n          this.chars.data[location]!.equippedArtifacts[slotKey] = key // equiped on `location`\r\n        } else flex.location = \"\"\r\n\r\n        const { artifact } = validateFlexArtifact(flex)\r\n\r\n        this.arts.set(artifact.id, artifact)\r\n        // Save migrated version back to db\r\n        if (migrated) save(this.storage, key, flex)\r\n      }\r\n    }\r\n  }\r\n\r\n  private saveArt(key: string, art: IArtifact) {\r\n    save(this.storage, key, extractFlexArtifact(art))\r\n    this.arts.set(key, art)\r\n  }\r\n  private saveChar(key: CharacterKey, char: ICharacter) {\r\n    save(this.storage, `char_${key}`, char)\r\n    this.chars.set(key, char)\r\n  }\r\n  // TODO: Make theses `_` functions private once we migrate to use `followXXX`,\r\n  // or de-underscored it if we decide that these are to stay\r\n  _getArt(key: string) { return this.arts.get(key) }\r\n  _getChar(key: CharacterKey | \"\") { return key ? this.chars.get(key) : undefined }\r\n  _getArts() { return this.arts.values }\r\n  _getCharKeys(): CharacterKey[] { return this.chars.keys }\r\n\r\n  followChar(key: CharacterKey, cb: Callback<ICharacter>): (() => void) | undefined { return this.chars.follow(key, cb) }\r\n  followArt(key: string, cb: Callback<IArtifact>): (() => void) | undefined {\r\n    if (this.arts.get(key) !== undefined)\r\n      return this.arts.follow(key, cb)\r\n    cb(undefined)\r\n  }\r\n  followAnyChar(cb: (key: string | {}) => void): (() => void) | undefined { return this.chars.followAny(cb) }\r\n  followAnyArt(cb: (key: CharacterKey | {}) => void): (() => void) | undefined { return this.arts.followAny(cb) }\r\n\r\n  /**\r\n   * **Caution**: This does not update `equippedArtifacts`, use `equipArtifacts` instead\r\n   */\r\n  updateChar(value: ICharacter): void {\r\n    const newChar = deepClone(value), key = newChar.characterKey, oldChar = this.chars.get(key)\r\n\r\n    if (oldChar) {\r\n      newChar.equippedArtifacts = oldChar.equippedArtifacts\r\n    } else {\r\n      newChar.equippedArtifacts = Object.fromEntries(allSlotKeys.map(slot => ([slot, \"\"]))) as any\r\n    }\r\n\r\n    this.saveChar(key, newChar)\r\n  }\r\n  /**\r\n   * **Caution** This does not update `location` and `lock`, use `setLocation` or `lockArtifact` instead\r\n   */\r\n  updateArt(value: IArtifact): string {\r\n    const newArt = deepClone(value)\r\n    const key = newArt.id || generateRandomArtID(new Set(Object.keys(this.arts.data)))\r\n    const oldArt = this.arts.get(key)\r\n\r\n    if (!newArt.id)\r\n      newArt.id = key\r\n\r\n    if (oldArt) {\r\n      newArt.location = oldArt.location\r\n      newArt.lock = oldArt.lock\r\n    } else {\r\n      newArt.location = \"\"\r\n      newArt.lock = false\r\n    }\r\n\r\n    this.saveArt(key, newArt)\r\n    if (newArt.location)\r\n      this.chars.set(newArt.location, deepClone(this.chars.get(newArt.location)!))\r\n    return key\r\n  }\r\n  removeChar(key: CharacterKey) {\r\n    const char = this.chars.get(key)\r\n    if (!char) return\r\n\r\n    for (const artKey of Object.values(char.equippedArtifacts)) {\r\n      if (!artKey) continue\r\n      const art = this.arts.get(artKey)!\r\n      art.location = \"\"\r\n      this.saveArt(artKey, art)\r\n    }\r\n    remove(this.storage, `char_${key}`)\r\n    this.chars.remove(key)\r\n  }\r\n  removeArt(key: string) {\r\n    const art = this.arts.get(key)\r\n    if (!art) return\r\n\r\n    const charKey = art.location\r\n    if (charKey) {\r\n      const char = this.chars.get(charKey)!\r\n      char.equippedArtifacts[art.slotKey] = \"\"\r\n      this.saveChar(charKey, char)\r\n    }\r\n    remove(this.storage, key)\r\n    this.arts.remove(key)\r\n  }\r\n  setLocation(artKey: string, newCharKey: CharacterKey | \"\") {\r\n    const newArt = deepClone(this.arts.get(artKey))\r\n    if (!newArt) return\r\n\r\n    const slot = newArt.slotKey, oldCharKey = newArt.location\r\n    const newChar = newCharKey ? deepClone(this.chars.get(newCharKey))! : undefined\r\n    const oldChar = oldCharKey ? deepClone(this.chars.get(oldCharKey))! : undefined\r\n    newArt.location = newCharKey\r\n    if (oldChar) oldChar.equippedArtifacts[slot] = \"\"\r\n\r\n    if (newChar) {\r\n      const oldArtKey = newChar?.equippedArtifacts[slot] ?? \"\"\r\n      const oldArt = oldArtKey ? deepClone(this.arts.get(oldArtKey))! : undefined\r\n      newChar.equippedArtifacts[slot] = newArt.id!\r\n\r\n      if (oldChar && oldArt) {\r\n        oldChar.equippedArtifacts[slot] = oldArt.id!\r\n        oldArt.location = oldChar.characterKey\r\n      } else if (oldArt) oldArt.location = \"\"\r\n\r\n      if (oldArt) this.saveArt(oldArtKey, oldArt)\r\n    }\r\n\r\n    this.saveArt(artKey, newArt)\r\n    if (newCharKey) this.saveChar(newCharKey, newChar!)\r\n    if (oldCharKey) this.saveChar(oldCharKey, oldChar!)\r\n  }\r\n  equipArtifacts(charKey: CharacterKey, newArts: StrictDict<SlotKey, string>) {\r\n    const char = this.chars.get(charKey)\r\n    if (!char) return\r\n\r\n    const oldArts = char.equippedArtifacts\r\n    for (const [slot, newArt] of Object.entries(newArts)) {\r\n      if (newArt) this.setLocation(newArt, charKey)\r\n      else if (oldArts[slot]) this.setLocation(oldArts[slot], \"\")\r\n    }\r\n  }\r\n  lockArtifact(key: string, lock = true) {\r\n    const art = this.arts.get(key)\r\n    if (!art || art.lock === lock) return\r\n\r\n    art.lock = lock\r\n    this.saveArt(key, art)\r\n  }\r\n\r\n  exportStorage() {\r\n    const characterDatabase = Object.fromEntries(Object.entries(this.chars.data).map(([key, value]) =>\r\n      [key, extractFlexCharacter(value)]))\r\n    const artifactDatabase = Object.fromEntries(Object.entries(this.arts.data).map(([key, value]) =>\r\n      [key, extractFlexArtifact(value)]))\r\n    const version = getDBVersion(this.storage)\r\n    const artifactDisplay = load(this.storage, \"ArtifactDisplay.state\") ?? {}\r\n    const characterDisplay = load(this.storage, \"CharacterDisplay.state\") ?? {}\r\n    const buildsDisplay = load(this.storage, \"BuildsDisplay.state\") ?? {}\r\n\r\n    return {\r\n      version,\r\n      characterDatabase,\r\n      artifactDatabase,\r\n      artifactDisplay,\r\n      characterDisplay,\r\n      buildsDisplay,\r\n    }\r\n  }\r\n\r\n  importStorage({ version, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay }: DatabaseObj) {\r\n    this.clear()\r\n    const storage = this.storage\r\n\r\n    Object.entries(characterDatabase).forEach(([charKey, char]) => save(storage, `char_${charKey}`, char))\r\n    Object.entries(artifactDatabase).forEach(([id, art]) => save(storage, id, art))\r\n    //override version\r\n    setDBVersion(storage, version)\r\n    save(storage, \"ArtifactDisplay.state\", artifactDisplay)\r\n    save(storage, \"CharacterDisplay.state\", characterDisplay)\r\n    save(storage, \"BuildsDisplay.state\", buildsDisplay)\r\n\r\n    const newDatabase = new Database(storage)\r\n    this.arts = newDatabase.arts\r\n    this.chars = newDatabase.chars\r\n  }\r\n\r\n  clear() {\r\n    const storage = this.storage\r\n    Object.keys(storage)\r\n      .filter(key => key.startsWith(\"char_\") || key.startsWith(\"artifact_\"))\r\n      .forEach(id => remove(storage, id))\r\n    remove(storage, \"db_ver\")\r\n    remove(storage, \"ArtifactDisplay.state\")\r\n    remove(storage, \"CharacterDisplay.state\")\r\n    remove(storage, \"BuildsDisplay.state\")\r\n\r\n    this.arts.removeAll()\r\n    this.chars.removeAll()\r\n  }\r\n\r\n  static shared = new Database(localStorage)\r\n}\r\n\r\ntype DatabaseObj = {\r\n  version: number,\r\n  characterDatabase: Dict<CharacterKey, IFlexCharacter>\r\n  artifactDatabase: Dict<string, IFlexArtifact>\r\n  artifactDisplay: any\r\n  characterDisplay: any\r\n  buildsDisplay: any\r\n}\r\n\r\n/// Get a random integer (converted to string) that is not in `keys`\r\nfunction generateRandomArtID(keys: Set<string>): string {\r\n  let candidate = \"\"\r\n  do {\r\n    candidate = `artifact_${getRandomInt(1, 2 * (keys.size + 1))}`\r\n  } while (keys.has(candidate))\r\n  return candidate\r\n}\r\n\r\ntype Callback<Arg> = (arg: Arg | undefined) => void\r\n\r\nexport const database = Database.shared\r\n","import { MainStatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactSubstatRollData: StrictDict<Rarity, { low: number, high: number, numUpgrades: number }> = {\r\n  1: { low: 0, high: 0, numUpgrades: 1 },\r\n  2: { low: 0, high: 1, numUpgrades: 2 },\r\n  3: { low: 1, high: 2, numUpgrades: 3 },\r\n  4: { low: 2, high: 3, numUpgrades: 4 },\r\n  5: { low: 3, high: 4, numUpgrades: 5 }\r\n};\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: readonly MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatRollData as ArtifactStarsData,\r\n};\r\n","import { ArtifactSlotsData, ArtifactStarsData } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { allSubstats, IArtifact, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, allRarities } from '../Types/consts';\r\nimport { BonusStats, ICalculatedStats } from '../Types/stats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\nimport { ArtifactSetEffects } from '../Types/Build';\r\nimport { mergeStats } from '../Util/StatUtil';\r\nimport ArtifactMainStatsData from './artifact_main_gen.json'\r\nimport ArtifactSubstatsData from './artifact_sub_gen.json'\r\nimport ArtifactSubstatLookupTable from './artifact_sub_rolls_gen.json'\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey): string =>\r\n    ArtifactSlotsData[slotKey].name\r\n  static slotMainStats = (slotKey: SlotKey): readonly MainStatKey[] =>\r\n    ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): ArtifactSetEffects => {\r\n    const result: ArtifactSetEffects = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      const setEffect: Dict<SetNum, BonusStats> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, entry]) => {\r\n        const setStats = evalIfFunc(entry.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      mergeStats(result[setKey][setNumKey], condStats)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: IArtifact[]): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, databaseObj.filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey): readonly number[] => {\r\n    if (statKey.endsWith('_')) // TODO: % CONVERSION\r\n      return ArtifactMainStatsData[numStar][statKey].map(k => k * 100)\r\n    return ArtifactMainStatsData[numStar][statKey]\r\n  }\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } =>\r\n    ArtifactStarsData[rarity]\r\n\r\n  static maxSubstatValues = (substatKey: SubstatKey, numStars = maxStar): number => {\r\n    if (substatKey.endsWith(\"_\")) // TODO: % CONVERSION\r\n      return Math.max(...ArtifactSubstatsData[numStars][substatKey]) * 100\r\n    return Math.max(...ArtifactSubstatsData[numStars][substatKey])\r\n  }\r\n\r\n  static maxSubstatRollEfficiency = Object.fromEntries(allRarities.map(rarity =>\r\n    [rarity, Math.max(...allSubstats.map(substat =>\r\n      Artifact.maxSubstatValues(substat, rarity) /\r\n      Artifact.maxSubstatValues(substat, maxStar)))]))\r\n  static getSubstatKeys = (): readonly SubstatKey[] =>\r\n    allSubstats\r\n  static totalPossibleRolls = (numStars: Rarity): number =>\r\n    ArtifactStarsData[numStars].high + ArtifactStarsData[numStars].numUpgrades\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4)\r\n  static getSubstatRollData = (substatKey: SubstatKey, numStars: Rarity) => {\r\n    if (substatKey.endsWith(\"_\")) // TODO: % CONVERSION\r\n      return ArtifactSubstatsData[numStars][substatKey].map(v => v * 100)\r\n    return ArtifactSubstatsData[numStars][substatKey]\r\n  }\r\n\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    const rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    const table = ArtifactSubstatLookupTable[numStars][substatKey]\r\n    const lookupValue = Math.round(substatKey.endsWith('_')\r\n      ? (substatValue * 10) // TODO: % CONVERSION\r\n      : substatValue)\r\n    return table[lookupValue]?.map(roll => roll.map(i => rollData[i])) ?? []\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state: IArtifact): string[] {\r\n    const { numStars, level, substats } = state, errors: string[] = []\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = key ? Artifact.getSubstatRolls(key, value, numStars) : []\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls?.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            const key = substats[index].key\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(artifact: IArtifact, filter: Set<SubstatKey>): { currentEfficiency: number, maxEfficiency: number } {\r\n    const { substats, numStars, level } = artifact\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    const totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    const current = substats.filter(({ key }) => key && filter.has(key)).reduce((sum, { rolls, efficiency }) => sum + ((efficiency ?? 0) * (rolls?.length ?? 0)), 0)\r\n\r\n    const rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    const emptySlotCount = substats.filter(s => !s.key).length\r\n    const matchedSlotCount = substats.filter(s => s.key && filter.has(s.key)).length\r\n    const unusedFilterCount = filter.size - matchedSlotCount\r\n    let maximum\r\n    if (emptySlotCount && unusedFilterCount) maximum = current + Artifact.maxSubstatRollEfficiency[numStars] * rollsRemaining // Rolls into good empty slot\r\n    else if (matchedSlotCount) maximum = current + Artifact.maxSubstatRollEfficiency[numStars] * (rollsRemaining - emptySlotCount) // Rolls into existing matched slot\r\n    else maximum = current // No possible roll\r\n\r\n    const currentEfficiency = current / totalRolls\r\n    const maxEfficiency = maximum / totalRolls\r\n    return { currentEfficiency, maxEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    const setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}\r\n","import { BonusStats, Modifier } from \"../Types/stats\"\r\n\r\nexport function mergeStats(initialStats: BonusStats, stats: BonusStats | undefined) {\r\n  if (!stats) return\r\n  return Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [key, paths] of (Object.entries(val as Modifier))) {\r\n        initialStats.modifiers[key] = initialStats.modifiers[key] ?? []\r\n        initialStats.modifiers[key].push(...paths)\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport { ascensionMaxLevel } from \"../Data/CharacterData\";\r\nimport Stat from \"../Stat\";\r\nimport { allMainStatKeys, allSubstats, IArtifact, IFlexArtifact, IFlexSubstat, Substat } from \"../Types/artifact\";\r\nimport { ICharacter, IFlexCharacter } from \"../Types/character\";\r\nimport { allArtifactSets, allCharacterKeys, allElements, allHitModes, allRarities, allReactionModes, allSlotKeys, allWeaponKeys } from \"../Types/consts\";\r\n\r\n/// Returns the closest (not necessarily valid) artifact, including errors as necessary\r\nexport function validateFlexArtifact(flex: IFlexArtifact): { artifact: IArtifact, errors: string[] } {\r\n    const { id, location, lock, setKey, slotKey, numStars, mainStatKey } = flex\r\n    const level = Math.round(Math.min(Math.max(0, flex.level), numStars >= 3 ? numStars * 4 : 4))\r\n    const mainStatVal = Artifact.mainStatValue(mainStatKey, numStars, level)!\r\n\r\n    const errors: string[] = []\r\n    const substats: Substat[] = flex.substats.map(substat => ({ ...substat, rolls: [], weightedEfficiency: NaN }))\r\n    const validated: IArtifact = { id, setKey, location, slotKey, lock, mainStatKey, numStars, level, substats, mainStatVal }\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n        const { key, value } = substat\r\n        if (!key) return\r\n\r\n        const substatRolls = Artifact.getSubstatRolls(key, value, numStars)\r\n\r\n        if (substatRolls.length) {\r\n            const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n            if (possibleLengths.size !== 1)\r\n                allSubstatRolls.push({ index, substatRolls })\r\n            else {\r\n                total += substatRolls[0].length\r\n                substat.rolls = substatRolls[0]\r\n                substat.efficiency = substat.rolls.reduce((a, b) => a + b) / Artifact.maxSubstatValues(key) * 100 / substatRolls[0].length\r\n            }\r\n        } else if (substat.key) {\r\n            substat.rolls = []\r\n            substat.efficiency = NaN\r\n            errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n        }\r\n    })\r\n\r\n    if (substats.some((substat) => !substat.key)) {\r\n        let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n        if (substat)\r\n            errors.push(`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`)\r\n    }\r\n\r\n    if (errors.length) return { artifact: validated, errors }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n        if (rolls.length === allSubstatRolls.length) {\r\n            if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n                minimumMaxRolls = maxRolls\r\n                for (const { index, roll } of rolls) {\r\n                    const key = substats[index].key\r\n                    if (!key) continue\r\n                    substats[index].rolls = roll\r\n                    substats[index].efficiency = roll.reduce((a, b) => a + b) / Artifact.maxSubstatValues(key) * 100 / roll.length\r\n                }\r\n            }\r\n\r\n            return\r\n        }\r\n\r\n        const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n        for (const roll of substatRolls) {\r\n            rolls.push({ index, roll })\r\n            tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n            rolls.pop()\r\n        }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n        // No build found\r\n        const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n        if (total < minimum)\r\n            errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n        else {\r\n            errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n        }\r\n    }\r\n\r\n    return { artifact: validated, errors }\r\n}\r\n/// Returns the closest flex artifact, or undefined if it's not recoverable\r\nexport function validateDBArtifact(obj: any, key: string): IFlexArtifact | undefined {\r\n    if (typeof obj !== \"object\") return\r\n\r\n    let {\r\n        setKey, numStars, level, slotKey, mainStatKey, substats, location, lock,\r\n    } = obj ?? {}\r\n\r\n    if (!allArtifactSets.includes(setKey) ||\r\n        !allSlotKeys.includes(slotKey) ||\r\n        !allMainStatKeys.includes(mainStatKey) ||\r\n        !allRarities.includes(numStars) ||\r\n        typeof level !== \"number\" || level < 0 || level > 20)\r\n        return // non-recoverable\r\n\r\n    substats = validateSubstats(substats)\r\n    lock = !!lock\r\n    level = Math.round(level)\r\n    if (!allCharacterKeys.includes(location)) location = \"\"\r\n    return { id: key, setKey, numStars, level, slotKey, mainStatKey, substats, location, lock }\r\n}\r\n/// Return a new flex artifact from given artifact. All extra keys are removed\r\nexport function extractFlexArtifact(artifact: IArtifact): IFlexArtifact {\r\n    const { id, setKey, numStars, level, slotKey, mainStatKey, substats, location, lock } = artifact\r\n    return { id, setKey, numStars, level, slotKey, mainStatKey, substats: substats.map(substat => ({ key: substat.key, value: substat.value })), location, lock }\r\n}\r\nfunction validateSubstats(obj: any): IFlexSubstat[] {\r\n    if (!Array.isArray(obj))\r\n        return new Array(4).map(_ => ({ key: \"\", value: NaN }))\r\n    const substats = obj.map(({ key = undefined, value = undefined }) => {\r\n        if (!allSubstats.includes(key))\r\n            return { key: \"\", value: NaN }\r\n        return { key, value: typeof value === \"number\" && isFinite(value) ? value : NaN }\r\n    })\r\n    while (substats.length !== 4)\r\n        substats.push({ key: \"\", value: NaN })\r\n\r\n    return substats\r\n}\r\n/// Returns the closest character\r\nexport function validateFlexCharacter(flex: IFlexCharacter): ICharacter {\r\n    // TODO: Add more validations to make sure the returned value is a \"valid\" character\r\n    return {\r\n        ...flex,\r\n        equippedArtifacts: Object.fromEntries(allSlotKeys.map(slot => [slot, \"\"])) as any\r\n    }\r\n}\r\n/// Returns the closest flex character, or undefined if it's not recoverable\r\nexport function validateDBCharacter(obj: any, key: string): IFlexCharacter | undefined {\r\n    if (typeof obj !== \"object\") return\r\n\r\n    let {\r\n        characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n        baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n    } = obj\r\n\r\n    if (key !== `char_${characterKey}` ||\r\n        !allCharacterKeys.includes(characterKey) ||\r\n        typeof level !== \"number\" || level < 0 || level > 90 ||\r\n        typeof weapon !== \"object\" || !allWeaponKeys.includes(weapon.key))\r\n        return // non-recoverable\r\n\r\n    if (!allHitModes.includes(hitMode)) hitMode = \"avgHit\"\r\n    if (characterKey !== \"traveler\") elementKey = undefined\r\n    else if (!allElements.includes(elementKey)) elementKey = \"anemo\"\r\n    if (!allReactionModes.includes(reactionMode)) reactionMode = null\r\n    if (!allElements.includes(infusionAura)) infusionAura = \"\"\r\n    if (typeof constellation !== \"number\" && constellation < 0 && constellation > 6) constellation = 0\r\n    if (typeof ascension !== \"number\" ||\r\n        !(ascension in ascensionMaxLevel) ||\r\n        level > ascensionMaxLevel[ascension] ||\r\n        level < (ascensionMaxLevel[ascension - 1] ?? 0))\r\n        ascension = ascensionMaxLevel.findIndex(maxLvl => level <= maxLvl)\r\n    if (typeof talentLevelKeys !== \"object\") talentLevelKeys = { auto: 0, skill: 0, burst: 0 }\r\n    else {\r\n        let { auto = 0, skill = 0, burst = 0 } = talentLevelKeys\r\n        if (typeof auto !== \"number\" || auto < 0 || auto > 15) auto = 0\r\n        if (typeof skill !== \"number\" || skill < 0 || skill > 15) skill = 0\r\n        if (typeof burst !== \"number\" || burst < 0 || burst > 15) burst = 0\r\n        talentLevelKeys = { auto, skill, burst }\r\n    }\r\n    {\r\n        let { key, level, ascension, refineIndex } = weapon\r\n        if (typeof level !== \"number\" || level < 1 || level > 90) level = 1\r\n        if (typeof ascension !== \"number\" || ascension < 0 || ascension > 6) ascension = 0\r\n        if (typeof refineIndex !== \"number\" || refineIndex < 0 || refineIndex > 5) refineIndex = 0\r\n        weapon = { key, level, ascension, refineIndex }\r\n    }\r\n    {\r\n        if (typeof buildSettings !== \"object\") buildSettings = {}\r\n        let { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending } = buildSettings ?? {}\r\n        if (!Array.isArray(setFilters)) setFilters = [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }]\r\n        if (typeof statFilters !== \"object\") statFilters = {}\r\n        if (!Array.isArray(mainStatKeys)) mainStatKeys = [\"\", \"\", \"\"]\r\n        if (!optimizationTarget) optimizationTarget = \"finalAtk\"\r\n        if (typeof mainStatAssumptionLevel !== \"number\" || mainStatAssumptionLevel < 0 || mainStatAssumptionLevel > 20)\r\n            mainStatAssumptionLevel = 0\r\n        useLockedArts = !!useLockedArts\r\n        useEquippedArts = !!useEquippedArts\r\n        ascending = !!ascending\r\n        buildSettings = { setFilters, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useLockedArts, useEquippedArts, ascending }\r\n    }\r\n\r\n    // TODO: validate baseStatOverrides, conditionalValues\r\n    return {\r\n        characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n        baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n    }\r\n}\r\n/// Return a new flex character from given character. All extra keys are removed\r\nexport function extractFlexCharacter(char: ICharacter): IFlexCharacter {\r\n    const {\r\n        characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n        baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n    } = char\r\n    return {\r\n        characterKey, level, ascension, hitMode, elementKey, reactionMode, conditionalValues,\r\n        baseStatOverrides, weapon, talentLevelKeys, infusionAura, constellation, buildSettings,\r\n    }\r\n}","import { ArtifactSetKey, CharacterKey, ElementKey, Rarity, SetNum, SlotKey } from \"./consts\";\r\nimport { BonusStats, BasicStats } from \"./stats\";\r\nimport { IConditionals } from \"./IConditional\";\r\nimport { DocumentSection } from \"./character\";\r\n\r\nexport type IArtifactSheets = StrictDict<ArtifactSetKey, IArtifactSheet>\r\n\r\nexport interface IArtifactSheet {\r\n  name: string,//only to stored the endlish name for OCR, otherwise, should come from localization pipeline\r\n  rarity: readonly Rarity[],\r\n  icons: Dict<SlotKey, string>,\r\n  conditionals?: IConditionals,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  stats?: BonusStats | ((stats: BasicStats) => BonusStats)\r\n  document?: DocumentSection[],\r\n}\r\n\r\nexport interface IFlexArtifact {\r\n  id: string\r\n  setKey: ArtifactSetKey\r\n  numStars: Rarity\r\n  level: number,\r\n  slotKey: SlotKey,\r\n  mainStatKey: MainStatKey,\r\n  substats: IFlexSubstat[],\r\n\r\n  location: CharacterKey | \"\",\r\n  lock: boolean,\r\n}\r\nexport interface IArtifact extends IFlexArtifact {\r\n  mainStatVal?: number,\r\n  substats: Substat[],\r\n\r\n  location: CharacterKey | \"\",\r\n  lock: boolean,\r\n}\r\n\r\nexport interface IFlexSubstat {\r\n  key: SubstatKey | \"\"\r\n  value: number\r\n}\r\nexport interface Substat extends IFlexSubstat {\r\n  rolls?: number[],\r\n  efficiency?: number,\r\n}\r\nexport type StatKey = MainStatKey | SubstatKey | ReactionDMGStatKey | MoveDMGStatKey | ElementalRESStatKey | ElementalEnemyRESStatKey | SpecializedStatKey\r\n\r\ntype ElementalRESStatKey = `${ElementKey | \"physical\"}_res_`\r\ntype ElementalEnemyRESStatKey = `${ElementKey | \"physical\"}_enemyRes_`\r\ntype ReactionDMGStatKey = \"overloaded_dmg_\" | \"shattered_dmg_\" | \"electrocharged_dmg_\" | \"superconduct_dmg_\" | \"swirl_dmg_\" | \"vaporize_dmg_\" | \"melt_dmg_\" | \"burning_dmg_\" | \"crystalize_dmg_\"\r\ntype MoveDMGStatKey = \"normal_dmg_\" | \"charged_dmg_\" | \"skill_dmg_\" | \"burst_dmg_\"\r\n\r\nexport const allMainStatKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"heal_\"] as const\r\nexport const allSubstats = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"def\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\",] as const\r\n\r\n// TODO: Check if these actually applies\r\ntype SpecializedStatKey = \"normal_critRate_\" | \"charged_critRate_\" | \"plunging_dmg_\" | \"powShield_\" | \"enemyDEFRed_\" | \"skillCDRed_\" | \"incHeal_\" | \"weakspotDMG_\" | \"dmg_\" | \"moveSPD_\" | \"staminaDec_\" | \"atkSPD_\" | \"cdRed_\" | \"finalHP\" | \"finalATK\" | \"finalDEF\"\r\n\r\nexport type MainStatKey = typeof allMainStatKeys[number]\r\nexport type SubstatKey = typeof allSubstats[number]\r\n","import { FormulaItem, IBaseStat } from './Types/character';\r\nimport { BonusStats, ICalculatedStats, Modifier } from './Types/stats';\r\nimport { resolve } from './Util/KeyPathUtil';\r\nimport { objPathValue } from './Util/Util';\r\n\r\nexport const formulaImport = import('./Data/formula').then(imp => {\r\n  Formula.formulas = imp.default\r\n  return imp.default\r\n})\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | object | undefined> => formulaImport.then(formulas => objPathValue(formulas, keys))\r\n  static computeModifier(stat: IBaseStat, modifier: Modifier | undefined): (s: ICalculatedStats) => BonusStats {\r\n    if (!modifier) return () => ({})\r\n\r\n    const objs = Object.entries(modifier).map(([key, formulas]) =>\r\n      [key, formulas.map(path => Formula.getCurrent(path, stat)[0])] as [string, ((s: ICalculatedStats) => number)[]])\r\n\r\n    return s => Object.fromEntries(objs.map(([key, formulas]) =>\r\n      [key, formulas.reduce((a, formula) => a + formula(s), 0)]))\r\n  }\r\n  static getCurrent(path: string[], stat: IBaseStat): FormulaItem {\r\n    return resolve<any, (stat: IBaseStat) => FormulaItem>(Formula.formulas, path)(stat)\r\n  }\r\n}\r\n","import { Trans, useTranslation } from \"react-i18next\"\r\nconst components = {\r\n  anemo: <span className=\"text-anemo\" />,\r\n  geo: <span className=\"text-geo\" />,\r\n  cryo: <span className=\"text-cryo\" />,\r\n  hydro: <span className=\"text-hydro\" />,\r\n  pyro: <span className=\"text-pyro\" />,\r\n  electro: <span className=\"text-electro\" />,\r\n}\r\n\r\nexport function Translate({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  const textObj = values ? t(textKey, values, { returnObjects: true }) as any : t(textKey, { returnObjects: true }) as any\r\n  if (typeof textObj === \"string\") return children ? <Trans i18nKey={textKey} t={t} components={components} values={values} >{children}</Trans> : <Trans i18nKey={textKey} t={t} components={components} values={values} />\r\n  return <T key18={textKey} obj={textObj} t={t} values={values} />\r\n}\r\n/**this is used cause the `components` prop mess with tag interpolation. */\r\nexport function TransWrapper({ ns, key18, values, children }: { ns: string, key18: string, values?: any, children?: any }) {\r\n  const { t } = useTranslation(ns)\r\n  const textKey = `${ns}:${key18}`\r\n  return <Trans i18nKey={textKey} t={t} values={values} >{children}</Trans>\r\n}\r\nfunction Para({ children }: { children?: JSX.Element }) {\r\n  return <p className=\"mb-0\">{children}</p>\r\n}\r\n\r\nfunction T({ key18, obj, li, t, values }: { key18: string, obj: any, li?: boolean, t, values?: any }) {\r\n  if (typeof obj === \"string\") return <Trans i18nKey={key18} components={components} parent={Para} t={t} values={values} />\r\n  if (Array.isArray(obj))\r\n    return <ul className=\"mb-2\">\r\n      <T key18={key18} obj={{ ...obj }} li t={t} values={values} />\r\n    </ul>\r\n  return Object.entries(obj).map(([key, val]) => {\r\n    if (val === \"<br/>\") return <div key={key as any} className=\"mb-2\" />\r\n\r\n    if (typeof val === \"object\") return <T key={key as any} key18={`${key18}.${key as any}`} obj={val} t={t} values={values} />\r\n    if (typeof val === \"string\") {\r\n      const trans = <Trans key={key as any} i18nKey={`${key18}.${key}`} components={components} parent={Para} t={t} values={values} />\r\n      return li ? <li key={key as any}>{trans}</li> : trans\r\n    }\r\n    return null\r\n  }) as any\r\n}","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined, dependencies: any[]): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>(undefined);\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => {\r\n      pending = false\r\n      setRes(undefined)\r\n    }\r\n  }, dependencies)// eslint-disable-line react-hooks/exhaustive-deps\r\n  return res\r\n}\r\n","import { ElementKey } from \"../Types/consts\"\r\n\r\nconst ElementalData: StrictDict<ElementKey | \"physical\", { name: string }> = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","export const getRandomElementFromArray = <T>(array: readonly T[]): T => array[Math.floor(Math.random() * array.length)];\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nexport function getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n}\r\nexport function getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport const loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nexport const saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nexport const deepClone = <T>(obj: T): T =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nexport const clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nexport const getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nexport const clamp01 = (val) => clamp(val, 0, 1)\r\nexport const clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nexport function strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nexport function hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nexport function objMultiplication(obj, multi) {\r\n  if (multi === 1) return obj\r\n  Object.keys(obj).forEach((prop: any) => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n  return obj\r\n}\r\n\r\n//assign obj.[keys...] = value\r\nexport function layeredAssignment(obj, keys: string[], value) {\r\n  keys.reduce((accu, key, i, arr) => {\r\n    if (i === arr.length - 1) return (accu[key] = value)\r\n    if (!accu[key]) accu[key] = {}\r\n    return accu[key]\r\n  }, obj)\r\n  return obj\r\n}\r\n//get the value in a nested object, giving array of path\r\nexport function objPathValue(obj: object, keys: string[]) {\r\n  return keys.reduce((a, k) => a?.[k], obj)\r\n}\r\n//delete the value denoted by the path. Will also delete empty objects as well.\r\nexport function deletePropPath(obj, path) {\r\n  const tempPath = [...path]\r\n  const lastKey = tempPath.pop()\r\n  const objPathed = objPathValue(obj, tempPath)\r\n  delete objPathed[lastKey];\r\n}\r\n\r\nexport function objClearEmpties(o) {\r\n  for (const k in o) {\r\n    if (typeof o[k] !== \"object\") continue\r\n    objClearEmpties(o[k])\r\n    if (!Object.keys(o[k]).length) delete o[k];\r\n  }\r\n}\r\nexport function crawlObject(obj, keys, validate, cb) {\r\n  if (validate(obj)) cb(obj, keys)\r\n  else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => crawlObject(val, [...keys, key], validate, cb))\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nexport const getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\n\r\nexport function evalIfFunc<T, X>(value: T | ((arg: X) => T), arg: X): T {\r\n  return typeof value === \"function\" ? (value as any)(arg) : value\r\n}","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\n\r\nexport default function statsToFields(statVals, stats = {}): IFieldDisplay[] {\r\n  return Object.entries(statVals).filter(([statKey]) => statKey !== \"modifiers\").map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal as number,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => addConditional(sheets, \"weapon\")), //attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => addConditional(sheets, \"artifact\")) //attach artifact conditionals to Conditional\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow?.(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n"],"sourceRoot":""}