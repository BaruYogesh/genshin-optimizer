{"version":3,"sources":["Artifact/ArtifactSheet.tsx","Character/CharacterSheet.ts","Util/FieldUtil.tsx","Data/ElementalData.ts","StatData.ts","Components/StarDisplay.tsx","Conditional/Conditional.ts","Weapon/WeaponSheet.ts","Components/CustomFormControl.tsx","Components/StatIcon.tsx","Formula.ts","Components/SlotIcon.ts","Data/ArtifactData.ts","Data/ArtifactLookupTable.ts","Artifact/Artifact.tsx","StatConstants.ts","Components/CharacterSelection.tsx","Util/UIUtil.ts","Artifact/ArtifactCard.tsx","Artifact/PercentBadge.tsx","Components/InfoComponent.tsx","Types/artifact.ts","Artifact/imgs/scan_art_main.png","Artifact/imgs/snippet.png","Util/BorrowManager.ts","Artifact/UploadDisplay.tsx","Artifact/ArtifactEditor.tsx","Artifact/ArtifactDisplay.tsx","Stat.tsx","Util/ReactUtil.ts"],"names":["artifactImport","then","imp","Object","fromEntries","entries","default","map","set","value","ArtifactSheet","promiseSheets","allArtifactSets","sheets","data","this","name","rarity","pieces","icons","setEffects","conditionals","num","stats","deepClone","evalIfFunc","setNum","text","effects","conditional","grouped","forEach","key","sheet","Math","max","push","allRarities","filter","length","charStats","setToSlots","artifactSetEffect","slots","parseInt","keys","charImport","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","isAutoElemental","weaponTypeKey","isMelee","getTalent","talentKey","talent","getTalentStats","split","constell","constellation","getTalentStatsAll","talents","statsArr","talentStats","getDisplayStatKeys","defVal","basicKeys","characterKey","eleKey","elementKey","transReactions","ElementToReactionKeys","includes","Formula","formulas","character","charFormulas","values","formula","field","canShow","genericAvgHit","reactions","startsWith","replace","cardImg","thumbImg","star","constellationName","specializeStat","baseStat","Boolean","get","undefined","getAll","modifiersToFields","modifiers","mStatKey","modifier","Stat","getStatName","variant","getStatVariant","reduce","accu","mkey","multiplier","formulaText","i","printStat","toFixed","fixed","fixedUnit","unit","getStatUnit","statsToFields","statVals","statKey","statVal","className","ElementalData","StatIconEle","flat","fieldProcessing","physical","anemo","geo","electro","hydro","pyro","cryo","StatData","characterHP","pretty","const","characterDEF","characterATK","characterEle","characterLevel","weaponATK","baseATK","hp","hp_","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","s","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","ele","hitElements","dendro","PreprocessFormulas","dependencyKeys","debug","initialStats","constData","formulaList","tmp","constModifier","k","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","func","console","log","error","assign","hitMoves","move","moveName","clamp","eleName","opt","res","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","StarIcon","icon","faStar","Stars","stars","colored","Array","_","processed","Promise","all","addConditional","weaponImport","setObj","setNumKey","setNumObj","Conditional","Error","source","findConditionals","obj","callback","condKey","states","state","maxStack","fields","layeredAssignment","artifact","weapon","resolve","conditionalValue","objPathValue","conditionalValues","stacks","stateKey","conditionalStats","objMultiplication","parseConditionalValues","crawlObject","isArray","WeaponSheet","loadWeaponSheet","allWeaponKeys","weaponSheet","build","weaponType","img","passiveName","desc","passiveDescription","description","baseStats","weaponKey","getWeaponsOfType","CustomFormControl","onChange","disabled","float","placeholder","allowEmpty","useState","setstate","stateDirty","setstateDirty","sendChange","useCallback","parseFunc","parseFloat","useEffect","aria-label","e","target","onBlur","onKeyDown","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","formulaImport","src","f","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubstatsData","ArtifactSubstatsMinMax","getArrLastElement","min","ArtifactSlotsData","ArtifactSubstatLookupTable","Artifact","numStars","level","substats","errors","allSubstatRolls","total","substat","index","substatRolls","getSubstatRolls","Set","roll","size","rolls","efficiency","getSubstatEfficiency","getStatNameWithPercent","find","some","minimum","rollInfo","low","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accurateValue","sum","cur","getArtifactEfficiency","currentEfficiency","maximumEfficiency","current","totalRolls","artifactId","art","ArtifactDatabase","currentLocation","location","intendedLocation","slotKey","artifactToSwapWithid","CharacterDatabase","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","moveToNewLocation","id","equipArtifactOnSlot","slotName","slotIcon","slotNameWithIcon","slotMainStats","setEffectsObjs","artifactSheets","result","setKey","setEffect","setEffectObj","setStats","condStats","splitArtifactsBySlot","databaseObj","allSlotKeys","mainStatValues","numStar","endsWith","mainStatValue","high","numUpgrades","maxSubstatValues","getSubstatKeys","substatCloseEnough","value1","value2","closeEnoughFloat","closeEnoughInt","ceil","getSubstatRollData","substatKey","substatValue","rollData","table","lookupValue","a","b","clampPercent","artifacts","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","DropDownItem","characterSheet","usePromise","Item","onClick","valueString","round","ArtifactCard","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","useForceUpdate","forceUpdateHook","registerArtListener","unregisterArtListener","equipOnChar","equipArtifactOnChar","editable","substatsValidation","mainStatKey","lock","mainStatLevel","mainStatVal","artifactValid","locationName","border","bg","Header","xs","md","slotIcons","thumbnail","slotNames","Body","Title","stat","numRolls","effOpacity","statName","style","opacity","valid","Footer","Toggle","Menu","Divider","placement","overlay","setLocked","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","badgeColor","InfoComponent","pageKey","modalTitle","children","loadFromLocalStorage","showInfoModal","setshowInfoModal","getRandomElementFromArray","displayText","closeModal","infoShown","saveToLocalStorage","show","onHide","contentClassName","faTimes","fallback","animation","faQuestionCircle","allMainStatKeys","allSubstats","BorrowManager","init","deinit","refCount","box","starColor","r","g","schedulers","language","scheduler","createScheduler","promises","fill","worker","createWorker","errorHandler","load","loadLanguage","initialize","addWorker","any","_language","terminate","UploadDisplay","setState","setReset","artifactInEditor","modalShow","setModalShow","useReducer","queueReducer","outstanding","dispatchQueue","firstProcessed","firstOutstanding","processingImageURL","imageURL","processingResult","image","texts","fileName","numProcessing","processingCurrent","slice","processEntry","removeCurrent","uploadFiles","files","file","clearQueue","pasteFunc","clipboardData","window","addEventListener","removeEventListener","alt","Row","ExplainationModal","hide","Col","Button","ReactGA","modalview","Card","process","lg","ProgressBar","animated","now","Form","File","label","accept","custom","multiple","Label","Modal","Snippet","href","rel","scan_art_main","queue","message","entry","fileToURL","ocr","ocrResult","findBestArtifact","rarities","parseSetKeys","artifactSetTexts","parseSlotKeys","whiteTexts","parseSubstats","substatTexts","parseMainStatKeys","parseMainStatValues","uploadDisplayReset","reader","FileReader","onloadend","readAsDataURL","urlToImageData","urlFile","Image","onload","canvas","document","createElement","context","getContext","width","height","drawImage","getImageData","imageToImageData","imageDataToCanvas","imageData","putImageData","halfHeight","bottomOpts","rectangle","top","left","awaits","textsFromImage","bandPass","mode","region","parseRarities","options","borrow","addJob","rec","lines","line","textSetKeys","slotKeys","mainStatKeys","relevantSetKey","bestScore","bestArtifacts","rarityRates","allArtifactRarities","score","count","mainStatScore","has","relevantMainStatValues","numStarsString","rarityIndividualScore","setKeys","rarityScore","minimumMainStatValue","findIndex","mainStatValScore","chosen","every","other","add","unknownText","detectedText","addText","available","recommended","v","ambiguousText","inferredText","getStatNameRaw","results","hammingDistance","pixels","d","lastRowNum","rowsWithNumber","y","onStar","x","colorCloseEnough","color1","color2","threshold","intCloseEnough","abs","toLowerCase","regex","match","exec","matches","RegExp","pixelData","Uint8ClampedArray","from","bot","bw","invert","halfInd","ImageData","ArtifactEditor","artifactIdToEdit","cancelEdit","artifactReducer","artifactDispatch","useMemo","isInvalid","databaseArtifact","reset","update","newValue","newSheet","pick","prefer","setSubstat","editorArt","isDup","getArtifactDatabase","candidate","candidateSubstat","dupArtifacts","dupId","checkDuplicate","errMsgs","InputGroup","Dropdown","as","Prepend","namesByMaxRarities","sets","Fragment","ItemText","DropdownButton","Append","title","Text","l","sKey","FormControl","readOnly","mainStatK","OverlayTrigger","Popover","Content","cursor","SubstatInput","Alert","saveArtifact","canClearArtifact","rollNum","allowedRolls","rollLabel","rollOffset","rollBadge","Badge","rollArr","val","indexOf","ButtonGroup","action","artToSave","confirm","InfoDisplay","React","lazy","sortMap","quality","mefficiency","initialFilter","filterArtSetKey","filterStars","filterLevelLow","filterLevelHigh","filterSlotKey","filterMainStatKey","filterSubstats","filterLocation","filterLocked","ascending","sortType","maxNumArtifactsToDisplay","filterReducer","filterInit","initial","ArtifactDisplay","props","filters","filterDispatch","artToEditId","setartToEditId","pageIdex","setpageIdex","scrollRef","useRef","invScrollRef","dbDirty","forceUpdate","deleteArtifact","removeArtifactById","editArtifact","scrollIntoView","behavior","cancelEditArtifact","pageview","registerListener","unregisterListener","locationDisplay","lockedDisplay","artifactDB","filterKey","sortNum","numUnequip","numUnlock","numLock","totalArtNum","numPages","currentPageIndex","artifactsToShow","locationCharacterSheet","Container","ref","faUndo","ToggleButtonGroup","selected","ToggleButton","faCheckSquare","faSquare","faSortAmountDownAlt","faSortAmountUp","CharacterSelection","cid","unequipArtifact","faUserSlash","faTrash","htmlStatsData","getStatNamePretty","expand","getPrintableFormulaStatKeyList","statList","FormulaText","printFormula","modifierText","statUnit","o","promise","setRes","pending"],"mappings":"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AC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhD7L,IAAK,CACDwL,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriD3L,IAAK,CACDsL,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriD1L,KAAM,CACFqL,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,KAC/KI,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3sBC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,E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EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,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","file":"static/js/14.13c26fbe.chunk.js","sourcesContent":["import { IArtifactSheet, SetEffectEntry, StatArr, StatDict } from \"../Types/artifact\";\r\nimport { allArtifactSets, allRarities, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  constructor(data: IArtifactSheet) { this.data = data }\r\n\r\n  get name(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slotNames(): Dict<SlotKey, string> { return this.data.pieces }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): StatDict {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectTexts(setNum: SetNum, stats: ICalculatedStats): Displayable {\r\n    let text = this.setEffects[setNum]?.text\r\n    return evalIfFunc(text ?? \"\", stats)\r\n  }\r\n  setEffectConditionals(setNum: SetNum, stats: ICalculatedStats) {\r\n    const effects = this.setEffects[setNum]\r\n    if (effects?.conditional || effects?.conditionals) {\r\n      return {\r\n        ...effects?.conditional && { default: effects?.conditional },\r\n        ...effects?.conditionals && effects?.conditionals\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static namesByMaxRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): [Rarity, [ArtifactSetKey, string][]][] {\r\n    const grouped: Dict<Rarity, [ArtifactSetKey, string][]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push([key, sheet.name])\r\n      else grouped[rarity] = [[key, sheet.name]]\r\n    })\r\n    return allRarities.map(rarity => [rarity, grouped[rarity] ?? []] as [Rarity, [ArtifactSetKey, string][]]).filter(([, group]) => group.length)\r\n  }\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): StatArr {\r\n    let artifactSetEffect: StatArr = []\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && Object.entries(evalIfFunc(value.stats, charStats) ?? {}).forEach(([key, value]) =>\r\n          artifactSetEffect.push({ key, value }))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import Formula from \"../Formula\";\r\nimport { ElementToReactionKeys } from \"../StatData\";\r\nimport { ICharacterSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const charImport = import('../Data/Characters').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>)\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | \"\"): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return this.sheet.elementKey }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get specializeStat() { return this.sheet.specializeStat }\r\n  get baseStat() { return this.sheet.baseStat }\r\n  get talent() { return this.sheet.talent }\r\n  get formula() { return this.sheet.formula }\r\n  get conditionals() { return this.sheet.conditionals }\r\n  isAutoElemental = () => this.sheet.weaponTypeKey === \"catalyst\"\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (talentKey: string) => this.talent[talentKey]\r\n  get hasTalentPage() { return Boolean(Object.keys(this.sheet.talent).length) } //TODO: remove when all chararacter sheets are complete\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalent(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats) => {\r\n    const talents = this.sheet.talent\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n\r\n  getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats || !Object.keys(stats).length) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = this.elementKey\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = this.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (Formula.formulas.character?.[characterKey]) {\r\n      const charFormulas = {}\r\n      Object.entries(Formula.formulas.character[characterKey]).forEach(([talentKey, formulas]: any) => {\r\n        Object.values(formulas as any).forEach((formula: any) => {\r\n          if (!formula.field.canShow(stats)) return\r\n          if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n          if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n          charFormulas[talentKey].push(formula.keys)\r\n        })\r\n      })\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {//TODO: doesnt have character sheet\r\n      //generic average hit parameters.\r\n      const genericAvgHit: string[] = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical\r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      else if (weaponTypeKey === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst\r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions: string[] = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n}\r\n","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier as any ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey as any] * (multiplier as any), 0),\r\n    formulaText: <span>{Object.entries(modifier as any ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}) {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n};\r\n\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].forEach(ele => {\r\n  StatData[`${ele}_crystalize_hit`] = { name: `Crystalize Shield ${hitElements[ele].name} Effective HP`, variant: ele }\r\n  Formulas[`${ele}_crystalize_hit`] = s => s.crystalize_hit * 2.5\r\n})\r\n\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"shattered_hit\", \"crystalize_hit\", \"electro_crystalize_hit\", \"pyro_crystalize_hit\", \"cryo_crystalize_hit\", \"hydro_crystalize_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]: any) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]: any) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]: any) => accu + c[k] * (m as any), 0)\r\n    const dynamicFunc = (s, c) => dynamicModifier.reduce((accu, [k, m]: any) => accu + s[k] * (m as any), 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => {\r\n    addConditional(sheets, \"weapon\");\r\n  }),//attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => {\r\n    addConditional(sheets, \"artifact\")\r\n    //attach metadata prop setNumKey to the conditional\r\n    Object.values(sheets).forEach(setObj =>\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n        if (setNumObj.conditional) (setNumObj.conditional as any).setNumKey = setNumKey // TODO, typechecker says there's no `setNumKey`\r\n        if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach((c: any) => c.setNumKey = setNumKey)\r\n      }))\r\n  })\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","import { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new WeaponSheet(value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>)\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  constructor(weaponSheet: IWeaponSheet) { this.sheet = weaponSheet }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string) => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  get name() { return this.sheet.name }\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  get passiveName() { return this.sheet.passiveName }\r\n  passiveDescription(stats: ICalculatedStats) {\r\n    const desc = this.sheet.passiveDescription\r\n    return evalIfFunc(desc, stats)\r\n  }\r\n  get description() { return this.sheet.description }\r\n  get baseStats() { return this.sheet.baseStats }\r\n  stats = (build: ICalculatedStats): object | false | undefined => evalIfFunc(this.sheet.stats, build)\r\n  get conditionals() { return this.sheet.conditionals }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled = false, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import ICalculatedStats from './Types/ICalculatedStats';\r\nimport { crawlObject, objPathValue } from './Util/Util';\r\n\r\n//Currently only import character formulas, but formulas from other sources should be able to be imported as well.\r\nexport const formulaImport = import('./Data/Characters/formula').then(imp => addFormula(imp.default, \"character\"))\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | undefined> => formulaImport.then(() => objPathValue(Formula.formulas, keys))\r\n}\r\n\r\nfunction addFormula(src, key) {\r\n  Formula.formulas[key] = src\r\n  crawlObject(src, [key], f => typeof f === \"function\", (formula, keys) => {\r\n    formula.keys = keys\r\n  })\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { SlotKey } from '../Types/consts'\r\n\r\nconst SlotIcon: StrictDict<SlotKey, IconDefinition> = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport { CompressMainStatKey, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactStarsData: Dict<Rarity, { subsBaselow: number, subBaseHigh: number, numUpgradesOrUnlocks: number }> = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData: StrictDict<Rarity, StrictDict<CompressMainStatKey, number[]>> = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 12.0, 14.6, 17.3, 19.9, 22.5, 25.2, 27.8, 30.5, 33.1, 35.7, 38.4, 41.0, 43.7, 46.3, 49.0, 51.6, 54.2, 56.9, 59.5, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.1, 23.7, 25.2, 26.7, 28.2, 29.8, 31.3, 32.8, 34.3, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubstatsData: StrictDict<SubstatKey, { [numStars: number]: number[] }> = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubstatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { SubstatKey } from \"../Types/artifact\"\r\n\r\nexport const ArtifactSubstatLookupTable: StrictDict<SubstatKey, { [numStar: number]: { [rounded: string]: number[][] } }> = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubstatsData, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { CompressMainStatKey, IArtifact, MainStatKey, StatDict, Substat, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, CharacterKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey) => slotKey ? ArtifactSlotsData[slotKey].name : \"\"\r\n  static slotIcon = (slotKey: SlotKey) => <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n  static slotNameWithIcon = (slotKey: SlotKey) => {\r\n    let name = Artifact.slotName(slotKey)\r\n    let slotIcon = Artifact.slotIcon(slotKey)\r\n    return <span>{slotIcon} {name}</span>\r\n  }\r\n\r\n  static slotMainStats = (slotKey: SlotKey): MainStatKey[] => ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): Dict<ArtifactSetKey, Dict<SetNum, StatDict>> => {\r\n    let result: Dict<ArtifactSetKey, Dict<SetNum, StatDict>> = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      let setEffect: Dict<SetNum, StatDict> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n        const setStats = evalIfFunc(setEffectObj.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        result[setKey][setNumKey][statKey] = (result[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: Dict<string, IArtifact>): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey, defVal = []) => {\r\n    if (statKey.endsWith(\"_dmg_\") && statKey !== \"physical_dmg_\")\r\n      return ArtifactMainStatsData[numStar][\"ele_dmg_\"]\r\n    return ArtifactMainStatsData[numStar][statKey as CompressMainStatKey] || defVal\r\n  }\r\n\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number | undefined =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } => {\r\n    const data = ArtifactStarsData[rarity]!\r\n    return { low: data.subsBaselow, high: data.subBaseHigh, numUpgrades: data.numUpgradesOrUnlocks }\r\n  }\r\n\r\n  static maxSubstatValues = (statKey: SubstatKey, numStars = maxStar): number => ArtifactSubstatsMinMax[statKey].max[numStars]\r\n  static getSubstatKeys = (): SubstatKey[] => Object.keys(ArtifactSubstatsData) as SubstatKey[]\r\n  static substatCloseEnough = (key: SubstatKey, value1: number, value2: number): boolean => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars: Rarity) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars]!.subBaseHigh + ArtifactStarsData[numStars]!.numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static getSubstatRollData = (substatKey: SubstatKey | \"\", numStars: Rarity) => ArtifactSubstatsData[substatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    if (!numStars || !substatKey || typeof substatValue !== \"number\" || !substatValue) return []\r\n    let rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    if (!rollData.length) return []\r\n\r\n    let table = ArtifactSubstatLookupTable[substatKey][numStars]\r\n    let lookupValue = substatValue.toFixed(1)\r\n\r\n    if (table[lookupValue])\r\n      return table[lookupValue].map(roll => roll.map(i => rollData[i]))\r\n    else return [] // Lookup fails\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state: IArtifact) {\r\n    const { numStars, level, substats } = state, errors: string[] = []\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = key ? Artifact.getSubstatRolls(key, value, numStars) : []\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls?.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            const key = substats[index].key\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    } else {\r\n      // Found valid build, filling missing data\r\n      for (const substat of substats)\r\n        substat.accurateValue = substat.rolls!.reduce((sum, cur) => sum + cur, 0)\r\n      const { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n      state.currentEfficiency = currentEfficiency\r\n      state.maximumEfficiency = maximumEfficiency\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(substats: Substat[], numStars: Rarity, level: number) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let current = substats.reduce((sum, { key, accurateValue }) => sum + (key ? (accurateValue! / ArtifactSubstatsMinMax[key].max[maxStar]) : 0), 0)\r\n    let maximum = current + rollsRemaining\r\n    let currentEfficiency = current * 100 / totalRolls\r\n    let maximumEfficiency = maximum * 100 / totalRolls\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    let setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId: string | undefined, characterKey: CharacterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifactOnSlot(intendedLocation, art.slotKey, art.id)\r\n\r\n    if (currentLocation) {\r\n      CharacterDatabase.equipArtifactOnSlot(currentLocation, slotKey, artifactToSwapWith?.id ?? \"\")\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId: string | undefined) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.equipArtifactOnSlot(location, slotKey, \"\")\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [0,\r\n  17.2, 18.5, 19.9, 21.3, 22.6, 24.6, 26.6, 28.9, 31.4, 34.1,\r\n  37.2, 40.7, 44.4, 48.6, 53.7, 59.1, 64.4, 69.7, 75.1, 80.6,\r\n  86.1, 91.7, 97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n  142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n  215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n  336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n  509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n  742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n  968.6, 991.0, 1013.5, 1036.1, 1066.6, 1090.0, 1115.0, 1141.7, 1171.9, 1202.8,\r\n  1202.8, 1233.9, 1264.7, 1305.7, 1346.1, 1468.9, 1524.0, 1577.0, 1627.6, 1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [0,\r\n  91, 99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n  170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n  320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n  448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n  574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n  733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n  915, 936, 956, 982, 1003, 1017, 1036, 1057, 1075, 1096,\r\n  1114, 1135, 1149, 1170, 1191, 1205, 1224, 1243, 1260, 1277,\r\n  1293, 1308, 1317, 1327, 1336, 1349, 1366, 1384, 1403, 1424,\r\n  1450, 1478, 1507, 1543, 1570, 1580, 1589, 1673, 1682, 1691,\r\n]","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return <>{CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>\r\n    {characterSheet.name}\r\n  </Dropdown.Item>\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","export function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1)\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { IArtifact, Substat } from '../Types/artifact';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: IArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number }\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }: Data): JSX.Element | null {\r\n  const [, forceUpdateHook] = useForceUpdate()\r\n  useEffect(() => {\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () => { artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook) }\r\n  }, [artifactId, forceUpdateHook])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? ArtifactDatabase.get(artifactId) : undefined))?.setKey))\r\n  const equipOnChar = (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey)\r\n\r\n  const editable = !artifactObj // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? ArtifactDatabase.get(artifactId);\r\n  const characterSheet = usePromise(CharacterSheet.get(art?.location ?? \"\"))\r\n  if (!art) return null\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n\r\n  const { id, slotKey, numStars, level, mainStatKey, substats, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.mainStatValue(mainStatKey, numStars, mainStatLevel) ?? \"\"}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = art.maximumEfficiency !== undefined\r\n  const locationName = characterSheet?.name ?? \"Inventory\"\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{sheet?.slotNames[slotKey] ?? \"Unknown Piece Name\"}</b></h6>\r\n          <div>{Artifact.slotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{sheet?.name ?? \"Artifact Set\"}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: Substat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueString(stat.value, Stat.getStatUnit(stat.key))}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{valueString(efficiency, \"eff\")}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} {...{ className: \"float-right\" }} /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"lock-artifact-tip\">Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\" onClick={() => ArtifactDatabase.setLocked(id, !lock)}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { faQuestionCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Suspense, useState } from \"react\"\r\nimport { Button, Card, Col, Modal, Row, Spinner } from \"react-bootstrap\"\r\nimport { getRandomElementFromArray, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\"\r\n\r\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }: { pageKey: string, text: Displayable | Displayable[], modalTitle: Displayable, children: JSX.Element }) {\r\n  const [showInfoModal, setshowInfoModal] = useState(loadFromLocalStorage(\"infoShown\")?.[pageKey] ?? true)\r\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\r\n  const closeModal = () => {\r\n    const infoShown = loadFromLocalStorage(\"infoShown\") ?? {}\r\n    infoShown[pageKey] = false\r\n    saveToLocalStorage(\"infoShown\", infoShown)\r\n    setshowInfoModal(false)\r\n  }\r\n  return <>\r\n    <Modal show={showInfoModal} onHide={() => closeModal()} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <Card.Title>{modalTitle}</Card.Title>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button variant=\"danger\" onClick={() => closeModal()} >\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Suspense fallback={<h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>}>\r\n            {children}\r\n          </Suspense>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={() => closeModal()}>\r\n            <span>Close</span>\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"pl-2 py-0 pr-0\">\r\n        <Row>\r\n          <Col><small>{displayText}</small></Col>\r\n          <Col xs=\"auto\">\r\n            <Button size=\"sm\" variant=\"info\" className=\"m-0 py-1\" onClick={() => setshowInfoModal(true)}><FontAwesomeIcon icon={faQuestionCircle} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}","import { ArtifactSetKey, CharacterKey, Rarity, SetNum, SlotKey } from \"./consts\";\r\nimport ICalculatedStats from \"./ICalculatedStats\";\r\nimport IConditional, { IConditionalComplex, IConditionals } from \"./IConditional\";\r\n\r\nexport type IArtifactSheets = StrictDict<ArtifactSetKey, IArtifactSheet>\r\n\r\nexport interface IArtifactSheet {\r\n  name: string,\r\n  rarity: readonly Rarity[],\r\n  pieces: Dict<SlotKey, string>,\r\n  icons: Dict<SlotKey, string>,\r\n  conditionals?: IConditionals,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  text: (Displayable | ((stats: ICalculatedStats) => Displayable)),\r\n  stats?: StatDict | ((arg0: ICalculatedStats) => (StatDict | false))\r\n  conditional?: (IConditional | IConditionalComplex),\r\n  conditionals?: IConditionals,\r\n}\r\n\r\nexport type StatArr = { key: StatKey, value: number }[]\r\nexport type StatDict = Dict<StatKey, number>\r\n\r\nexport interface IArtifact {\r\n  id?: string,\r\n  setKey: ArtifactSetKey,\r\n  numStars: Rarity,\r\n  level: number,\r\n  slotKey: SlotKey,\r\n  mainStatKey: MainStatKey,\r\n  mainStatVal: number,\r\n  substats: Substat[],\r\n  location: CharacterKey | \"\",\r\n\r\n  currentEfficiency?: number,\r\n  maximumEfficiency?: number,\r\n  lock: boolean,\r\n}\r\n\r\nexport interface Substat {\r\n  key: SubstatKey | \"\",\r\n  value: number,\r\n\r\n  rolls?: number[],\r\n  efficiency?: number,\r\n  accurateValue?: number,\r\n}\r\nexport type StatKey = MainStatKey | SubstatKey | ReactionDMGStatKey | MoveDMGStatKey | ElementalRESStatKey | SpecializedStatKey\r\n\r\ntype ElementalRESStatKey = \"physical_res_\" | \"anemo_res_\" | \"geo_res_\" | \"electro_res_\" | \"hydro_res_\" | \"pyro_res_\" | \"cryo_res_\"\r\ntype ReactionDMGStatKey = \"overloaded_dmg_\" | \"shattered_dmg_\" | \"electrocharged_dmg_\" | \"superconduct_dmg_\" | \"swirl_dmg_\" | \"vaporize_dmg_\" | \"melt_dmg_\" | \"burning_dmg_\" | \"crystalize_dmg_\"\r\ntype MoveDMGStatKey = \"normal_dmg_\" | \"charged_dmg_\" | \"skill_dmg_\" | \"burst_dmg_\"\r\n\r\nexport const allMainStatKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"heal_\"] as const\r\nexport const allSubstats = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"def\"] as const\r\n\r\n// TODO: Check if these actually applies\r\ntype SpecializedStatKey = \"charged_critRate_\" | \"powShield_\" | \"incHeal_\"\r\n\r\nexport type MainStatKey = typeof allMainStatKeys[number]\r\nexport type CompressMainStatKey = \"hp\" | \"hp_\" | \"atk\" | \"atk_\" | \"def_\" | \"eleMas\" | \"enerRech_\" | \"critRate_\" | \"critDMG_\" | \"physical_dmg_\" | \"ele_dmg_\" | \"heal_\"\r\nexport type SubstatKey = typeof allSubstats[number]\r\n","export default __webpack_public_path__ + \"static/media/scan_art_main.ab1cfe61.png\";","export default __webpack_public_path__ + \"static/media/snippet.d223e797.png\";","export class BorrowManager<T> {\r\n  data: Dict<string, { value: T, refCount: number }> = {}\r\n  init: (key: string) => T\r\n  deinit: (key: string, value: T) => void\r\n\r\n  constructor(init: (key: string) => T, deinit: (key: string, value: T) => void) {\r\n    this.init = init\r\n    this.deinit = deinit\r\n  }\r\n\r\n  /**\r\n   * Borrow the object corresponding to `key`, creating the object as necessary.\r\n   * The borrowing ends when `callback`'s promise is fulfilled.\r\n   * When the last borrowing ends, `deinit` the object.\r\n   *\r\n   * Do not use `arg` after the `callback`'s promise is fulfilled.\r\n   */\r\n  async borrow<R>(key: string, callback: (arg: T) => Promise<R>): Promise<R> {\r\n    if (!this.data[key]) {\r\n      this.data[key] = { value: this.init(key), refCount: 0 }\r\n    }\r\n\r\n    const box = this.data[key]!\r\n    box.refCount += 1\r\n    const result = await callback(box.value)\r\n    box.refCount -= 1\r\n    if (!box.refCount) {\r\n      // Last user. Cleaning up\r\n      delete this.data[key]\r\n      this.deinit(key, box.value)\r\n    }\r\n    return result\r\n  }\r\n}","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { Button, Card, Col, Form, Modal, ProgressBar, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { createScheduler, createWorker, RecognizeResult, Scheduler } from 'tesseract.js';\r\nimport scan_art_main from \"./imgs/scan_art_main.png\";\r\nimport Snippet from \"./imgs/snippet.png\";\r\nimport Stat from '../Stat';\r\nimport { clamp, hammingDistance } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport { allMainStatKeys, allSubstats, IArtifact, MainStatKey, Substat, SubstatKey } from '../Types/artifact';\r\nimport { allArtifactRarities, allArtifactSets, allSlotKeys, ArtifactSetKey, Rarity, SlotKey } from '../Types/consts';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport { usePromise } from '../Util/ReactUtil';\r\nimport { BorrowManager } from '../Util/BorrowManager';\r\n\r\nconst starColor = { r: 255, g: 204, b: 50 } //#FFCC32\r\nconst maxProcessingCount = 3, maxProcessedCount = 16, workerCount = 2\r\n\r\nconst schedulers = new BorrowManager(async (language): Promise<Scheduler> => {\r\n  const scheduler = createScheduler()\r\n  const promises = Array(workerCount).fill(0).map(async _ => {\r\n    const worker = createWorker({\r\n      errorHandler: console.error\r\n    })\r\n\r\n    await worker.load()\r\n    await worker.loadLanguage(language)\r\n    await worker.initialize(language)\r\n    scheduler.addWorker(worker)\r\n  })\r\n\r\n  await Promise.any(promises)\r\n  return scheduler\r\n}, (_language, value) => {\r\n  value.then(value => value.terminate())\r\n})\r\n\r\nexport default function UploadDisplay({ setState, setReset, artifactInEditor }) {\r\n  const [modalShow, setModalShow] = useState(false)\r\n\r\n  const [{ processed, outstanding }, dispatchQueue] = useReducer(queueReducer, { processed: [], outstanding: [] })\r\n  const firstProcessed = processed[0] as ProcessedEntry | undefined\r\n  const firstOutstanding = outstanding[0] as OutstandingEntry | undefined\r\n\r\n  const processingImageURL = usePromise(firstOutstanding?.imageURL)\r\n  const processingResult = usePromise(firstOutstanding?.result)\r\n\r\n  const remaining = processed.length + outstanding.length\r\n\r\n  const image = firstProcessed?.imageURL ?? processingImageURL\r\n  const { artifact, texts } = firstProcessed ?? {}\r\n  const fileName = firstProcessed?.fileName ?? firstOutstanding?.fileName ?? \"Click here to upload Artifact screenshot files\"\r\n\r\n  useEffect(() => {\r\n    if (!artifactInEditor && artifact)\r\n      setState(artifact)\r\n  }, [artifactInEditor, artifact, setState])\r\n\r\n  useEffect(() => {\r\n    const numProcessing = Math.min(maxProcessedCount - processed.length, maxProcessingCount, outstanding.length)\r\n    const processingCurrent = numProcessing && !outstanding[0].result\r\n    outstanding.slice(0, numProcessing).forEach(processEntry)\r\n    if (processingCurrent)\r\n      dispatchQueue({ type: \"processing\" })\r\n  }, [processed.length, outstanding])\r\n\r\n  useEffect(() => {\r\n    if (processingResult)\r\n      dispatchQueue({ type: \"processed\", ...processingResult })\r\n  }, [processingResult, dispatchQueue])\r\n\r\n  const removeCurrent = useCallback(() => dispatchQueue({ type: \"pop\" }), [dispatchQueue])\r\n  const uploadFiles = useCallback((files: FileList) =>\r\n    dispatchQueue({ type: \"upload\", files: [...files].map(file => ({ file, fileName: file.name })) }), [dispatchQueue])\r\n  const clearQueue = useCallback(() => dispatchQueue({ type: \"clear\" }), [dispatchQueue])\r\n\r\n  useEffect(() => {\r\n    const pasteFunc = e => uploadFiles(e.clipboardData.files)\r\n    window.addEventListener('paste', pasteFunc);\r\n    setReset?.(removeCurrent);\r\n    return () =>\r\n      window.removeEventListener('paste', pasteFunc)\r\n  }, [setReset, removeCurrent, uploadFiles])\r\n\r\n  const img = image && <img src={image} className=\"w-100 h-auto\" alt=\"Screenshot to parse for artifact values\" />\r\n  return (<Row>\r\n    <ExplainationModal {...{ modalShow, hide: () => setModalShow(false) }} />\r\n    <Col xs={12} className=\"mb-2\">\r\n      <Row>\r\n        <Col>\r\n          <h6 className=\"mb-0\">Parse Artifact by Uploading Image</h6>\r\n        </Col>\r\n        <Col xs=\"auto\"><Button variant=\"info\" size=\"sm\" onClick={() => {\r\n          setModalShow(true)\r\n          ReactGA.modalview('/artifact/how-to-upload')\r\n        }}>Show Me How!</Button></Col>\r\n      </Row>\r\n    </Col>\r\n    {remaining > 0 && <Col xs={12}>\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Row>\r\n          <Col className=\"p-1 ml-2\">Screenshots in file-queue: <b>{remaining}</b>{process.env.NODE_ENV === \"development\" &&\r\n            ` (Debug: Processed ${processed.length}/${maxProcessedCount}, Processing: ${outstanding.filter(entry => entry.result).length}/${maxProcessingCount}, Outstanding: ${outstanding.length})`}</Col>\r\n          <Col xs=\"auto\"><Button size=\"sm\" variant=\"danger\" onClick={clearQueue}>Clear file-queue</Button></Col>\r\n        </Row>\r\n      </Card>\r\n    </Col>}\r\n    <Col xs={8} lg={image ? 4 : 0}>{img}</Col>\r\n    <Col xs={12} lg={image ? 8 : 12}>\r\n      {!firstProcessed && firstOutstanding &&\r\n        <div className=\"mb-2\">\r\n          <h6 className=\"mb-0\">Scanning current artifact</h6>\r\n          <ProgressBar animated now={100} />\r\n        </div>}\r\n      <Form.File\r\n        type=\"file\"\r\n        className=\"mb-0\"\r\n        label={fileName}\r\n        onChange={e => {\r\n          uploadFiles(e.target.files)\r\n          e.target.value = null // reset the value so the same file can be uploaded again...\r\n        }}\r\n        accept=\"image/*\"\r\n        custom\r\n        multiple\r\n      />\r\n      {texts && <div className=\"mb-2\">\r\n        <div>{texts.slotKey}</div>\r\n        <div>{texts.mainStatKey}</div>\r\n        <div>{texts.mainStatVal}</div>\r\n        <div>{texts.numStars}</div>\r\n        <div>{texts.level}</div>\r\n        <div>{texts.substats}</div>\r\n        <div>{texts.setKey}</div>\r\n      </div>}\r\n      {Boolean(!image) && <Form.Label className=\"mb-0\">Please Select an Image, or paste a screenshot here (Ctrl+V)</Form.Label>}\r\n    </Col>\r\n  </Row >)\r\n}\r\nfunction ExplainationModal({ modalShow, hide }) {\r\n  return <Modal show={modalShow} onHide={hide} size=\"xl\" variant=\"success\" contentClassName=\"bg-transparent\">\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col><Card.Title>How do Upload Screenshots for parsing</Card.Title></Col>\r\n          <Col xs=\"auto\">\r\n            <Button variant=\"danger\" onClick={hide} >\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col xs={8} md={4}>\r\n            <img alt=\"snippet of the screen to take\" src={Snippet} className=\"w-100 h-auto\" />\r\n          </Col>\r\n          <Col xs={12} md={8}>\r\n            <p>Using screenshots can dramatically decrease the amount of time you manually input in stats on the Genshin Optimizer.</p>\r\n            <h5>Where to snip the screenshot.</h5>\r\n            <p>In game, Open your bag, and navigate to the artifacts tab. Select the artifact you want to scan with Genshin Optimizer. <b>Only artifact from this screen can be scanned.</b></p>\r\n            <h6>Single artifact</h6>\r\n            <p>To take a screenshot, in Windows, the shortcut is <strong>Shift + WindowsKey + S</strong>. Once you selected the region, the image is automatically included in your clipboard.</p>\r\n            <h6>Multiple artifacts</h6>\r\n            <p>To take advantage of batch uploads, you can use a tool like <a href=\"https://picpick.app/\" target=\"_blank\" rel=\"noreferrer\">PicPick</a> to create a macro to easily to screenshot a region to screenshot multiple artifacts at once.</p>\r\n            <h5>What to include in the screenshot.</h5>\r\n            <p>As shown in the Image, starting from the top with the artifact name, all the way to the set name(the text in green). </p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5>Adding Screenshot to Genshin Optimizer</h5>\r\n            <p>At this point, you should have the artifact snippet either saved to your harddrive, or in your clipboard.</p>\r\n            <p className=\"mb-0\">You can click on the box next to \"Browse\" to browse the files in your harddrive for multiple screenshots.</p>\r\n            <p>For single screenshots from the snippets, just press <strong>Ctrl + V</strong> to paste from your clipboard.</p>\r\n            <p>You should be able to see a Preview of your artifact snippet, and after waiting a few seconds, the artifact set and the substats will be filled in in the <b>Artifact Editor</b>.\r\n        </p>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <h5>Finishing the Artifact</h5>\r\n            <p>Unfortunately, computer vision is not 100%. There will always be cases where something is not scanned properly. You should always double check the scanned artifact values! Once the artifact has been filled, Click on <strong>Add Artifact</strong> to finish editing the artifact.</p>\r\n            <img alt=\"main screen after importing stats\" src={scan_art_main} className=\"w-75 h-auto\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"danger\" onClick={hide}>\r\n          <span>Close</span>\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nconst queueReducer = (queue: Queue, message: UploadMessage | ProcessingMessage | ProcessedMessage | PopMessage | ClearMessage): Queue => {\r\n  switch (message.type) {\r\n    case \"upload\": return { processed: queue.processed, outstanding: [...queue.outstanding, ...message.files] }\r\n    case \"processing\": // Processing `outstanding` head. Refresh\r\n      return { processed: queue.processed, outstanding: [...queue.outstanding] }\r\n    case \"processed\":\r\n      if (queue.outstanding[0].file === message.file)\r\n        return { processed: [...queue.processed, message.result], outstanding: queue.outstanding.slice(1) }\r\n      return queue // Not in the list, ignored\r\n    case \"pop\": return { processed: queue.processed.slice(1), outstanding: queue.outstanding }\r\n    case \"clear\": return { processed: [], outstanding: [] }\r\n  }\r\n}\r\n\r\nfunction processEntry(entry: OutstandingEntry) {\r\n  if (entry.result) return\r\n\r\n  const { file, fileName } = entry\r\n  entry.imageURL = fileToURL(file)\r\n  entry.result = entry.imageURL.then(async imageURL => {\r\n    const sheets = await ArtifactSheet.getAll()\r\n    const ocrResult = await ocr(imageURL)\r\n\r\n    const [artifact, texts] = findBestArtifact(\r\n      sheets, ocrResult.rarities,\r\n      parseSetKeys(ocrResult.artifactSetTexts, sheets),\r\n      parseSlotKeys(ocrResult.whiteTexts),\r\n      parseSubstats(ocrResult.substatTexts),\r\n      parseMainStatKeys(ocrResult.whiteTexts),\r\n      parseMainStatValues(ocrResult.whiteTexts)\r\n    )\r\n\r\n    return { file, result: { fileName, imageURL, artifact, texts } }\r\n  })\r\n}\r\n\r\nconst fileToURL = (file: File): Promise<string> => new Promise(resolve => {\r\n  const reader = new FileReader()\r\n  reader.onloadend = ({ target }) =>\r\n    resolve(target!.result as string)\r\n  reader.readAsDataURL(file)\r\n})\r\nconst urlToImageData = (urlFile: string): Promise<ImageData> => new Promise(resolve => {\r\n  const img = new Image()\r\n  img.onload = ({ target }) =>\r\n    resolve(imageToImageData(target as HTMLImageElement))\r\n  img.src = urlFile\r\n})\r\nfunction imageToImageData(image: HTMLImageElement): ImageData {\r\n  const canvas = document.createElement('canvas'), context = canvas.getContext('2d')!\r\n  canvas.width = image.width\r\n  canvas.height = image.height\r\n  context.drawImage(image, 0, 0, image.width, image.height)\r\n  return context.getImageData(0, 0, image.width, image.height) as ImageData // TODO: May be undefined\r\n}\r\nfunction imageDataToCanvas(imageData: ImageData) {\r\n  // create off-screen canvas element\r\n  const canvas = document.createElement('canvas')\r\n  canvas.width = imageData.width\r\n  canvas.height = imageData.height\r\n\r\n  // update canvas with new data\r\n  canvas.getContext('2d')!.putImageData(imageData, 0, 0)\r\n  return canvas // produces a PNG file\r\n}\r\n\r\nasync function ocr(imageURL: string): Promise<{ artifactSetTexts: string[], substatTexts: string[], whiteTexts: string[], rarities: Set<Rarity> }> {\r\n  const imageData = await urlToImageData(imageURL)\r\n\r\n  const width = imageData.width, halfHeight = Math.floor(imageData.height / 2)\r\n  const bottomOpts = { rectangle: { top: halfHeight, left: 0, width, height: halfHeight } }\r\n\r\n  const awaits = [\r\n    textsFromImage(bandPass(imageData, [140, 140, 140], [255, 255, 255], { mode: \"bw\", region: \"top\" })), // slotkey, mainStatValue, level\r\n    textsFromImage(bandPass(imageData, [30, 50, 80], [160, 160, 160], { region: \"bot\" }), bottomOpts), // substats\r\n    textsFromImage(bandPass(imageData, [30, 160, 30], [200, 255, 200], { mode: \"bw\", region: \"bot\" }), bottomOpts), // artifact set, look for greenish texts\r\n  ]\r\n\r\n  const rarities = parseRarities(imageData.data, imageData.width, imageData.height)\r\n  const [whiteTexts, substatTexts, artifactSetTexts] = await Promise.all(awaits)\r\n  return { whiteTexts, substatTexts, artifactSetTexts, rarities }\r\n}\r\nasync function textsFromImage(imageData: ImageData, options: object | undefined = undefined): Promise<string[]> {\r\n  const canvas = imageDataToCanvas(imageData)\r\n  const rec = await schedulers.borrow(\"eng\", async (scheduler) =>\r\n    await (await scheduler).addJob(\"recognize\", canvas, options) as RecognizeResult)\r\n  return rec.data.lines.map(line => line.text)\r\n}\r\n\r\nexport function findBestArtifact(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarities: Set<number>, textSetKeys: Set<ArtifactSetKey>, slotKeys: Set<SlotKey>, substats: Substat[], mainStatKeys: Set<MainStatKey>, mainStatValues: { mainStatValue: number, unit?: string }[]): [IArtifact, Dict<keyof IArtifact, Displayable>] {\r\n  const relevantSetKey = [...new Set<ArtifactSetKey>([...textSetKeys, \"Adventurer\", \"ArchaicPetra\"])]\r\n\r\n  let bestScore = -1, bestArtifacts: IArtifact[] = [{\r\n    setKey: \"Adventurer\", numStars: 3, level: 0, slotKey: \"flower\", mainStatKey: \"hp\", mainStatVal: 430, substats: [],\r\n    location: \"\", lock: false,\r\n  }]\r\n\r\n  // Rate each rarity\r\n  const rarityRates: Dict<Rarity, number> = Object.fromEntries(allArtifactRarities.map(rarity => {\r\n    let score = 0\r\n    if (textSetKeys.size) {\r\n      const count = [...textSetKeys].reduce((count, set) => count + (sheets[set].rarity.includes(rarity) ? 1 : 0), 0)\r\n      score += count / textSetKeys.size\r\n    }\r\n    if (substats.length) {\r\n      const count = substats.reduce((count, substat) =>\r\n        count + (Artifact.getSubstatRolls(substat.key as SubstatKey, substat.value, rarity).length ? 1 : 0), 0)\r\n      score += count / substats.length * 2\r\n    }\r\n    return [rarity, score]\r\n  }))\r\n\r\n  // Test all *probable* combinations\r\n  for (const slotKey of allSlotKeys) {\r\n    for (const mainStatKey of Artifact.slotMainStats(slotKey)) {\r\n      const mainStatScore = (slotKeys.has(slotKey) ? 1 : 0) + (mainStatKeys.has(mainStatKey) ? 1 : 0)\r\n      const relevantMainStatValues = mainStatValues\r\n        .filter(value => value.unit !== \"%\" || Stat.getStatUnit(mainStatKey) === \"%\") // Ignore \"%\" text if key isn't \"%\"\r\n        .map(value => value.mainStatValue)\r\n\r\n      for (const [numStarsString, rarityIndividualScore] of Object.entries(rarityRates)) {\r\n        const numStars = parseInt(numStarsString) as Rarity\r\n        const setKeys = relevantSetKey.filter(setKey => sheets[setKey].rarity.includes(numStars))\r\n        const rarityScore = mainStatScore + rarityIndividualScore\r\n\r\n        if (rarityScore + 2 < bestScore) continue // Early bail out\r\n\r\n        for (const minimumMainStatValue of relevantMainStatValues) {\r\n          const values = Artifact.mainStatValues(numStars, mainStatKey)\r\n          const level = Math.max(0, values.findIndex(level => level >= minimumMainStatValue))\r\n          const mainStatVal = values[level]\r\n          const mainStatValScore = rarityScore + (mainStatVal === minimumMainStatValue ? 1 : 0)\r\n\r\n          for (const setKey of setKeys) {\r\n            const score = mainStatValScore + (textSetKeys.has(setKey) ? 1 : 0)\r\n            if (score >= bestScore) {\r\n              if (score > bestScore) bestArtifacts = []\r\n              bestScore = score\r\n              bestArtifacts.push({\r\n                setKey, numStars, level, slotKey, mainStatKey, mainStatVal, substats: [], location: \"\", lock: false\r\n              })\r\n            }\r\n          }\r\n        }\r\n        if (rarityScore >= bestScore) {\r\n          const level = 0, mainStatVal = Artifact.mainStatValue(mainStatKey, numStars, 0)!\r\n          for (const setKey of setKeys) {\r\n            const score = rarityScore + (textSetKeys.has(setKey) ? 1 : 0)\r\n\r\n            if (score > bestScore) bestArtifacts = []\r\n            bestScore = score\r\n            bestArtifacts.push({\r\n              setKey, numStars, level, slotKey, mainStatKey, mainStatVal, substats: [], location: \"\", lock: false\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const texts = {} as Dict<keyof IArtifact, Displayable>\r\n  const chosen = {\r\n    setKey: new Set(), numStars: new Set(), level: new Set(), slotKey: new Set(), mainStatKey: new Set(), mainStatVal: new Set(),\r\n  } as Dict<keyof IArtifact, Set<string>>\r\n\r\n  const result = bestArtifacts[0]\r\n  result.substats = substats.filter((substat, i) =>\r\n    substat.key !== result.mainStatKey &&\r\n    substats.slice(0, i).every(other => other.key !== substat.key))\r\n  for (let i = result.substats.length; i < 4; i++)\r\n    result.substats.push({ key: \"\", value: 0 })\r\n\r\n  for (const other of bestArtifacts) {\r\n    chosen.setKey!.add(other.setKey)\r\n    chosen.numStars!.add(other.numStars as any)\r\n    chosen.level!.add(other.level as any)\r\n    chosen.slotKey!.add(other.slotKey)\r\n    chosen.mainStatKey!.add(other.mainStatKey)\r\n  }\r\n\r\n  function unknownText<T>(value: T, name: Displayable, text: (arg: T) => Displayable) {\r\n    return <>Unknown {name} : Set to <span className=\"text-danger\">{text(value)}</span></>\r\n  }\r\n  function ambiguousText<T>(value: T, available: T[], name: Displayable, text: (arg: T) => Displayable) {\r\n    return <>Ambiguous {name} <span className=\"text-danger\">{text(value)}</span> : May also be {\r\n      available.filter(v => v !== value).map((value, index) => <><b>{index > 0 ? \"/\" : \"\"}</b><span className=\"text-warning\">{text(value)}</span></>)}</>\r\n  }\r\n  function detectedText<T>(value: T, name: Displayable, text: (arg: T) => Displayable) {\r\n    return <>Detected {name} <span className=\"text-success\">{text(value)}</span></>\r\n  }\r\n  function inferredText<T>(value: T, name: Displayable, text: (arg: T) => Displayable) {\r\n    return <>Inferred {name} <span className=\"text-warning\">{text(value)}</span></>\r\n  }\r\n\r\n  function addText(key: keyof IArtifact, available: Set<any>, name: Displayable, text: (value) => Displayable) {\r\n    const recommended = new Set([...chosen[key]!].filter(value => available.has(value)))\r\n    if (recommended.size > 1)\r\n      texts[key] = ambiguousText(result[key], [...available], name, text)\r\n    else if (recommended.size === 1)\r\n      texts[key] = detectedText(result[key], name, text)\r\n    else if (chosen[key]!.size > 1)\r\n      texts[key] = unknownText(result[key], name, text)\r\n    else\r\n      texts[key] = inferredText(result[key], name, text)\r\n  }\r\n\r\n  addText(\"setKey\", textSetKeys, \"Set\", (value) => sheets[value].name)\r\n  addText(\"numStars\", rarities, \"Rarity\", (value) => <>{value} {value !== 1 ? \"Stars\" : \"Star\"}</>)\r\n  addText(\"slotKey\", slotKeys, \"Slot\", (value) => <>{Artifact.slotName(value)}</>)\r\n  addText(\"mainStatKey\", mainStatKeys, \"Main Stat\", (value) => <>{Stat.getStatNameRaw(value)}</>)\r\n  texts.substats = <>{result.substats.filter(substat => substat.key !== \"\").map((substat, i) =>\r\n    <div key={i}>{detectedText(substat, \"Sub Stat\", (value) => <>{Stat.getStatNameRaw(value.key)}+{value.value}{Stat.getStatUnit(value.key) === \"%\" ? \"%\" : \"\"}</>)}</div>)\r\n  }</>\r\n\r\n  const unit = Stat.getStatUnit(result.mainStatKey)\r\n  if (mainStatValues.find(value => value.mainStatValue === result.mainStatVal)) {\r\n    texts.level = detectedText(result.level, \"Level\", (value) => \"+\" + value)\r\n    texts.mainStatVal = detectedText(result.mainStatVal, \"Main Stat value\", (value) => <>{valueString(value, unit)}{unit === \"%\" ? \"%\" : \"\"}</>)\r\n  } else {\r\n    texts.level = unknownText(result.level, \"Level\", (value) => \"+\" + value)\r\n    texts.mainStatVal = unknownText(result.mainStatVal, \"Main Stat value\", (value) => <>{valueString(value, unit)}{unit === \"%\" ? \"%\" : \"\"}</>)\r\n  }\r\n\r\n  return [result, texts]\r\n}\r\n\r\nfunction parseSetKeys(texts: string[], sheets): Set<ArtifactSetKey> {\r\n  const results = new Set<ArtifactSetKey>([])\r\n  for (const text of texts)\r\n    for (const key of allArtifactSets)\r\n      if (hammingDistance(text.replace(/\\W/g, ''), sheets[key].name.replace(/\\W/g, '')) <= 2)\r\n        results.add(key)\r\n  return results\r\n}\r\nfunction parseRarities(pixels: Uint8ClampedArray, width: number, height: number): Set<Rarity> {\r\n  let d = pixels, lastRowNum = 0, rowsWithNumber = 0;\r\n  const results = new Set<Rarity>([])\r\n  for (let y = 0; y < height; y++) {\r\n    let star = 0, onStar = false;\r\n    for (let x = 0; x < width; x++) {\r\n      let i = (y * width + x) * 4\r\n      let r = d[i], g = d[i + 1], b = d[i + 2];\r\n      if (colorCloseEnough({ r, g, b }, starColor)) {\r\n        if (!onStar) {\r\n          onStar = true\r\n          star++\r\n        }\r\n      } else {\r\n        onStar = false\r\n      }\r\n    }\r\n\r\n    if (lastRowNum !== star) {\r\n      lastRowNum = star\r\n      rowsWithNumber = 1;\r\n    } else if (lastRowNum) {\r\n      rowsWithNumber++\r\n      if (rowsWithNumber >= 10) results.add(clamp(lastRowNum, 3, 5) as Rarity)\r\n    }\r\n  }\r\n  return results\r\n}\r\nfunction colorCloseEnough(color1, color2, threshold = 5) {\r\n  const intCloseEnough = (a, b) => (Math.abs(a - b) <= threshold)\r\n  return intCloseEnough(color1.r, color2.r) &&\r\n    intCloseEnough(color1.g, color2.g) &&\r\n    intCloseEnough(color1.b, color2.b)\r\n}\r\nfunction parseSlotKeys(texts: string[]): Set<SlotKey> {\r\n  const results = new Set<SlotKey>()\r\n  for (const text of texts)\r\n    for (const key of allSlotKeys)\r\n      if (hammingDistance(text.replace(/\\W/g, ''), Artifact.slotName(key).replace(/\\W/g, '')) <= 2)\r\n        results.add(key)\r\n  return results\r\n}\r\nfunction parseMainStatKeys(texts: string[]): Set<MainStatKey> {\r\n  const results = new Set<MainStatKey>([])\r\n  for (const text of texts)\r\n    for (const key of allMainStatKeys) {\r\n      if (text.toLowerCase().includes(Stat.getStatNameRaw(key).toLowerCase()))\r\n        results.add(key)\r\n      //use fuzzy compare on the ... Bonus texts. heal_ is included.\r\n      if (key.includes(\"_bonu\") && hammingDistance(text.replace(/\\W/g, ''), Stat.getStatNameRaw(key).replace(/\\W/g, '')) <= 1)\r\n        results.add(key)\r\n    }\r\n  return results\r\n}\r\nfunction parseMainStatValues(texts: string[]): { mainStatValue: number, unit?: string }[] {\r\n  const results: { mainStatValue: number, unit?: string }[] = []\r\n  for (const text of texts) {\r\n    let regex = /(\\d+[,|\\\\.]+\\d)%/\r\n    let match = regex.exec(text)\r\n    if (match) results.push({ mainStatValue: parseFloat(match[1].replace(/,/g, \".\").replace(/\\.{2,}/g, \".\")), unit: \"%\" })\r\n    regex = /(\\d+[,|\\\\.]\\d{3}|\\d{2,3})/\r\n    match = regex.exec(text)\r\n    if (match) results.push({ mainStatValue: parseInt(match[1].replace(/[,|\\\\.]+/g, \"\")) })\r\n  }\r\n  return results\r\n}\r\nfunction parseSubstats(texts: string[]): Substat[] {\r\n  const matches: Substat[] = []\r\n  for (let text of texts) {\r\n    text = text.replace(/^[\\W]+/, \"\").replace(/\\n/, \"\")\r\n    //parse substats\r\n    allSubstats.forEach(key => {\r\n      const name = Stat.getStatNameRaw(key)\r\n      const regex = Stat.getStatUnit(key) === \"%\" ?\r\n        new RegExp(name + \"\\\\s*\\\\+\\\\s*(\\\\d+[\\\\.|,]+\\\\d)%\", \"im\") :\r\n        new RegExp(name + \"\\\\s*\\\\+\\\\s*(\\\\d+,\\\\d+|\\\\d+)($|\\\\s)\", \"im\")\r\n      const match = regex.exec(text)\r\n      if (match)\r\n        matches.push({ key, value: parseFloat(match[1].replace(/,/g, \".\").replace(/\\.{2,}/g, \".\")) })\r\n    })\r\n  }\r\n  return matches\r\n}\r\n\r\nfunction bandPass(pixelData: ImageData, color1: Color, color2: Color, options: { region?: \"top\" | \"bot\" | \"all\", mode?: \"bw\" | \"color\" | \"invert\" }) {\r\n  const { region = \"all\", mode = \"color\" } = options\r\n  const d = Uint8ClampedArray.from(pixelData.data)\r\n  const top = region === \"top\", bot = region === \"bot\", all = region === \"all\"\r\n  const bw = mode === \"bw\", invert = mode === \"invert\"\r\n  const halfInd = Math.floor(pixelData.width * (pixelData.height / 2) * 4)\r\n  for (let i = 0; i < d.length; i += 4) {\r\n    const r = d[i], g = d[i + 1], b = d[i + 2];\r\n    if ((all || (top && i < halfInd) || (bot && i > halfInd)) &&\r\n      r >= color1[0] && r <= color2[0] &&\r\n      g >= color1[1] && g <= color2[1] &&\r\n      b >= color1[2] && b <= color2[2]) {\r\n      if (bw) d[i] = d[i + 1] = d[i + 2] = 0\r\n      else if (invert) {\r\n        d[i] = 255 - r\r\n        d[i + 1] = 255 - g\r\n        d[i + 2] = 255 - b\r\n      } // else orignal color\r\n    } else {\r\n      d[i] = d[i + 1] = d[i + 2] = 255\r\n    }\r\n  }\r\n  return new ImageData(d, pixelData.width, pixelData.height)\r\n}\r\n\r\ntype ProcessedEntry = {\r\n  fileName: string, imageURL: string, artifact: IArtifact, texts: Dict<keyof IArtifact, Displayable>\r\n}\r\ntype OutstandingEntry = {\r\n  file: File, fileName: string, imageURL?: Promise<string>, result?: Promise<{ file: File, result: ProcessedEntry }>\r\n}\r\ntype Queue = { processed: ProcessedEntry[], outstanding: OutstandingEntry[] }\r\ntype UploadMessage = { type: \"upload\", files: OutstandingEntry[] }\r\ntype ProcessingMessage = { type: \"processing\" }\r\ntype ProcessedMessage = { type: \"processed\", file: File, result: ProcessedEntry }\r\ntype PopMessage = { type: \"pop\" }\r\ntype ClearMessage = { type: \"clear\" }\r\ntype Color = [number, number, number] // RGB\r\n","import { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useMemo, useReducer } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Dropdown, DropdownButton, FormControl, InputGroup, OverlayTrigger, Popover, Row } from 'react-bootstrap';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { allSubstats, IArtifact, Substat, SubstatKey } from '../Types/artifact';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport { clamp, deepClone, getRandomElementFromArray, getRandomIntInclusive } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport ArtifactCard from './ArtifactCard';\r\nimport PercentBadge from './PercentBadge';\r\nimport UploadDisplay from './UploadDisplay';\r\nimport { allArtifactSets, Rarity, SlotKey } from '../Types/consts';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport { usePromise } from '../Util/ReactUtil';\r\n\r\nlet uploadDisplayReset\r\nexport default function ArtifactEditor({ artifactIdToEdit, cancelEdit }) {\r\n  const [artifact, artifactDispatch] = useReducer(artifactReducer, undefined)\r\n  const artifactInEditor = useMemo(() => !ArtifactDatabase.isInvalid(artifact), [artifact])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const sheet = artifact ? artifactSheets?.[artifact.setKey] : undefined\r\n\r\n  useEffect(() => {\r\n    if (artifactIdToEdit && artifactIdToEdit !== artifact?.id) {\r\n      const databaseArtifact = ArtifactDatabase.get(artifactIdToEdit)\r\n      if (databaseArtifact) {\r\n        artifactDispatch({ type: \"overwrite\", artifact: deepClone(databaseArtifact) })\r\n      }\r\n    }\r\n  }, [artifactIdToEdit, artifact?.id])\r\n\r\n  const getUpdloadDisplayReset = reset => uploadDisplayReset = reset\r\n\r\n  const reset = () => {\r\n    cancelEdit?.();\r\n    uploadDisplayReset?.()\r\n    artifactDispatch({ type: \"reset\" })\r\n  }\r\n  const update = (newValue: Partial<IArtifact>) => {\r\n    const newSheet = newValue.setKey ? artifactSheets![newValue.setKey] : sheet!\r\n\r\n    function pick<T>(value: T | undefined, available: readonly T[], prefer?: T): T {\r\n      return (value && available.includes(value)) ? value : (prefer ?? available[0])\r\n    }\r\n\r\n    if (newValue.setKey) {\r\n      newValue.numStars = pick(artifact?.numStars, newSheet.rarity, Math.max(...newSheet.rarity) as Rarity)\r\n      newValue.slotKey = pick(artifact?.slotKey, Object.keys(newSheet.slotNames))\r\n    }\r\n    if (newValue.numStars)\r\n      newValue.level = artifact?.level ?? 0\r\n    if (newValue.level)\r\n      newValue.level = clamp(newValue.level, 0, 4 * (newValue.numStars ?? artifact!.numStars))\r\n    if (newValue.slotKey)\r\n      newValue.mainStatKey = pick(artifact?.mainStatKey, Artifact.slotMainStats(newValue.slotKey))\r\n\r\n    if (newValue.mainStatKey) {\r\n      newValue.substats = [0, 1, 2, 3].map(i =>\r\n        (artifact && artifact.substats[i].key !== newValue.mainStatKey) ? artifact!.substats[i] : { key: \"\", value: 0 })\r\n    }\r\n    artifactDispatch({ type: \"update\", artifact: newValue })\r\n  }\r\n  const setSubstat = (index: number, substat: Substat) => {\r\n    artifactDispatch({ type: \"substat\", index, substat })\r\n  }\r\n\r\n  const { dupId, isDup } = useMemo(() => checkDuplicate(artifact), [artifact])\r\n  const { numStars = 5, level = 0, slotKey = \"flower\" } = artifact ?? {}\r\n  const errMsgs = artifact ? Artifact.substatsValidation(artifact) : []\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header>Artifact Editor</Card.Header>\r\n    <Card.Body>\r\n      <Row>\r\n        {/* Left column */}\r\n        <Col xs={12} lg={6}>\r\n          {/* set & rarity */}\r\n          <InputGroup className=\"w-100 d-flex mb-2\">\r\n            {/* Artifact Set */}\r\n            <Dropdown as={InputGroup.Prepend} className=\"flex-grow-1\">\r\n              <Dropdown.Toggle className=\"w-100\" variant={artifact ? \"success\" : \"primary\"}>\r\n                {sheet?.name ?? \"Artifact Set\"}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                {artifactSheets && ArtifactSheet.namesByMaxRarities(artifactSheets).map(([rarity, sets], i) =>\r\n                  <React.Fragment key={rarity}>\r\n                    {i > 0 && <Dropdown.Divider />}\r\n                    <Dropdown.ItemText>Max Rarity <Stars stars={rarity} /></Dropdown.ItemText>\r\n                    {sets.map(([setKey, name]) =>\r\n                      <Dropdown.Item key={setKey} onClick={() => update({ setKey })}>\r\n                        {name}\r\n                      </Dropdown.Item >)}\r\n                  </React.Fragment>)}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            {/* rarity dropdown */}\r\n            <DropdownButton as={InputGroup.Append} title={artifact ? <Stars stars={numStars} /> : \"Rarity\"} disabled={!sheet} variant={artifact ? \"success\" : \"primary\"}>\r\n              {([5, 4, 3] as Rarity[]).map((numStars, index) => <Dropdown.Item key={index} disabled={!sheet?.rarity.includes(numStars)} onClick={() => update({ numStars })}>\r\n                {<Stars stars={numStars} />}\r\n              </Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </InputGroup>\r\n\r\n          {/* level */}\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Level</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <CustomFormControl value={level} disabled={!sheet} placeholder={`0~${numStars * 4}`} onChange={l => update({ level: l })} />\r\n            <InputGroup.Append>\r\n              <Button onClick={() => update({ level: 0 })} disabled={!sheet || level === 0}>0</Button>\r\n              <Button onClick={() => update({ level: level - 1 })} disabled={!sheet || level === 0}>-</Button>\r\n              <Button onClick={() => update({ level: level + 1 })} disabled={!sheet || level === (numStars * 4)}>+</Button>\r\n              <Button onClick={() => update({ level: numStars * 4 })} disabled={!sheet || level === (numStars * 4)}>{numStars * 4}</Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n\r\n          {/* slot */}\r\n          <InputGroup className=\"mb-2\">\r\n            <DropdownButton\r\n              title={Artifact.slotNameWithIcon(slotKey)}\r\n              disabled={!sheet}\r\n              variant={artifact ? \"success\" : \"primary\"}\r\n              as={InputGroup.Prepend}\r\n            >\r\n              {Object.keys(sheet?.slotNames ?? {}).map((sKey: SlotKey) =>\r\n                <Dropdown.Item key={sKey as any} onClick={() => update({ slotKey: sKey })} >\r\n                  {Artifact.slotNameWithIcon(sKey)}\r\n                </Dropdown.Item>)}\r\n            </DropdownButton>\r\n            <FormControl\r\n              value={sheet?.slotNames[artifact!.slotKey] ?? \"Unknown Piece Name\"}\r\n              disabled\r\n              readOnly\r\n            />\r\n          </InputGroup>\r\n\r\n          {/* main stat */}\r\n          <InputGroup className=\"mb-2\">\r\n            <DropdownButton\r\n              title={<b>{artifact ? Stat.getStatNameWithPercent(artifact.mainStatKey) : \"Main Stat\"}</b>}\r\n              disabled={!sheet}\r\n              variant={artifact ? \"success\" : \"primary\"}\r\n              as={InputGroup.Prepend}\r\n            >\r\n              <Dropdown.ItemText>Select a Main Artifact Stat </Dropdown.ItemText>\r\n              {Artifact.slotMainStats(slotKey).map(mainStatK =>\r\n                <Dropdown.Item key={mainStatK} onClick={() => update({ mainStatKey: mainStatK })} >\r\n                  {Stat.getStatNameWithPercent(mainStatK)}\r\n                </Dropdown.Item>)}\r\n            </DropdownButton>\r\n            <FormControl\r\n              value={artifact ? `${Artifact.mainStatValue(artifact.mainStatKey, numStars, level)}${Stat.getStatUnit(artifact.mainStatKey)}` : \"Main Stat\"}\r\n              disabled\r\n              readOnly\r\n            />\r\n          </InputGroup>\r\n\r\n          {/* Current Substat Efficiency */}\r\n          <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n            <Card.Body className=\"py-1 px-2\">\r\n              <Row>\r\n                <Col className=\"text-center\"><span >Current Substat Efficiency </span></Col>\r\n                <Col xs=\"auto\">\r\n                  <PercentBadge valid={!errMsgs.length} value={errMsgs.length ? \"ERR\" : (artifact?.currentEfficiency ?? 0)} />\r\n                  <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={<Popover id=\"current-efficiency\">\r\n                      <Popover.Title as=\"h5\">Current Substat Efficiency</Popover.Title>\r\n                      <Popover.Content>\r\n                        <span>Every 4 artifact upgrades, you get a substat roll. <strong>Substat Efficiency</strong> calculates how high the substat rolled as a percentage.</span>\r\n                      </Popover.Content>\r\n                    </Popover>}\r\n                  >\r\n                    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n                  </OverlayTrigger>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          {/* Maximum Substat Efficiency */}\r\n          <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n            <Card.Body className=\"py-1 px-2\">\r\n              <Row>\r\n                <Col className=\"text-center\"><span>Maximum Substat Efficiency </span></Col>\r\n                <Col xs=\"auto\">\r\n                  <PercentBadge valid={!errMsgs.length} value={errMsgs.length ? \"ERR\" : (artifact?.maximumEfficiency ?? 0)} />\r\n                  <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={<Popover id=\"max-efficiency\">\r\n                      <Popover.Title as=\"h5\">Maximum Substat Efficiency</Popover.Title>\r\n                      <Popover.Content>\r\n                        <span>The <strong>Maximum Substat Efficiency</strong> of an artifact calculates the efficiency if the remaining upgrades rolled their maximum values.</span>\r\n                      </Popover.Content>\r\n                    </Popover>}\r\n                  >\r\n                    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n                  </OverlayTrigger>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Right column */}\r\n        <Col xs={12} lg={6}>\r\n          {/* substat selections */}\r\n          {[0, 1, 2, 3].map((index) =>\r\n            <SubstatInput key={\"substat\" + index} className=\"mb-2\" {...{ index, artifact, setSubstat }} />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-n2\">\r\n        {/* Image OCR */}\r\n        <Col xs={12} className=\"mb-2\">\r\n          {/* TODO: artifactDispatch not overwrite */}\r\n          <UploadDisplay setState={state => artifactDispatch({ type: \"overwrite\", artifact: state })} setReset={getUpdloadDisplayReset} artifactInEditor={artifactInEditor} />\r\n        </Col>\r\n        {/* Duplicate/Updated/Edit UI */}\r\n        {(dupId || artifact?.id) && <Col xs={12} className=\"mb-2\">\r\n          <Row className=\"d-flex justify-content-around mb-n2\">\r\n            <Col lg={4} md={6} className=\"mb-2\">\r\n              <h6 className=\"text-center\">Artifact Editor Preview</h6>\r\n              <div><ArtifactCard artifactObj={artifact} /></div>\r\n            </Col>\r\n            <Col lg={4} md={6} className=\"mb-2\">\r\n              <h6 className=\"text-center\">{dupId ? `Detected ${isDup ? \"Duplicate\" : \"Upgraded\"} Artifact` : `Before Edit`}</h6>\r\n              <div><ArtifactCard artifactId={dupId || artifact?.id} /></div>\r\n            </Col>\r\n          </Row>\r\n        </Col>}\r\n        {/* Error alert */}\r\n        {Boolean(errMsgs.length) && <Col xs={12} className=\"mb-2\">\r\n          <Alert variant=\"danger\" className=\"py-2 px-3 mb-0 \">{errMsgs.map((e, i) => <div key={i}>{e}</div>)}</Alert>\r\n        </Col>}\r\n      </Row></Card.Body>\r\n    <Card.Footer>\r\n      <Button className=\"mr-2\" onClick={() => { saveArtifact(artifact!, artifact!.id); reset() }} disabled={ArtifactDatabase.isInvalid(artifact) || errMsgs.length} variant={dupId ? \"warning\" : \"primary\"}>\r\n        {artifact?.id ? \"Save Artifact\" : \"Add Artifact\"}\r\n      </Button>\r\n      <Button className=\"mr-2\" disabled={!artifactInEditor} onClick={() => { canClearArtifact() && reset() }} variant=\"success\">Clear</Button>\r\n      {process.env.NODE_ENV === \"development\" && <Button variant=\"info\" onClick={async () => artifactDispatch({ type: \"overwrite\", artifact: await randomizeArtifact() })}>Randomize</Button>}\r\n      {Boolean(dupId) && <Button className=\"float-right\" onClick={() => { saveArtifact(artifact!, dupId); reset() }} disabled={ArtifactDatabase.isInvalid(artifact) || errMsgs.length} variant=\"success\">Update Artifact</Button>}\r\n    </Card.Footer>\r\n  </Card >\r\n}\r\n\r\nfunction SubstatInput({ index, artifact, setSubstat, className }: { index: number, artifact: IArtifact | undefined, setSubstat: (index: number, substat: Substat) => void, className }) {\r\n  const { mainStatKey = \"\", substats = [] } = artifact ?? {}\r\n  const { key = \"\", value = 0, rolls = [], efficiency = 0 } = artifact?.substats[index] ?? {}\r\n\r\n  const accurateValue = rolls.reduce((a, b) => a + b, 0)\r\n  const unit = Stat.getStatUnit(key), rollNum = rolls.length\r\n\r\n  let error: string = \"\", rollData: number[] = [], allowedRolls = 0, rollLabel: Displayable | null = null\r\n\r\n  if (artifact) {\r\n    //account for the rolls it will to fill all 4 substates, +1 for its base roll\r\n    const numStars = artifact.numStars\r\n    const { numUpgrades, high } = Artifact.rollInfo(numStars)\r\n    const maxRollNum = numUpgrades + high - 3;\r\n    allowedRolls = maxRollNum - rollNum\r\n    rollData = Artifact.getSubstatRollData(key, numStars)\r\n  }\r\n  const rollOffset = 7 - rollData.length\r\n\r\n  if (!rollNum && key && value) error = error || `Cannot calculate stat rolls.`\r\n  if (allowedRolls < 0) error = error || `Substat cannot be rolled more than ${allowedRolls + rollNum} times.`\r\n\r\n  if (!error) {\r\n    const rollBadge = <Badge variant={rollNum === 0 ? \"secondary\" : `${rollNum}roll`} className=\"text-darkcontent\">\r\n      {rollNum ? rollNum : \"No\"} Roll{(rollNum > 1 || rollNum === 0) && \"s\"}\r\n    </Badge>\r\n    const rollArr = rolls.map((val, i) =>\r\n      <span key={i} className={`mr-2 text-${rollOffset + rollData.indexOf(val)}roll`}>{valueString(val, unit)}</span>)\r\n\r\n    rollLabel = <Row>\r\n      <Col>{rollBadge} {rollArr}</Col>\r\n      <Col xs=\"auto\">Efficiency: <PercentBadge valid={true} value={efficiency ? efficiency : \"No Stat\"} /></Col>\r\n    </Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className={className}>\r\n    <InputGroup>\r\n      <DropdownButton\r\n        title={Stat.getStatNameWithPercent(key, `Substat ${index + 1}`)}\r\n        disabled={!artifact}\r\n        variant={key ? \"success\" : \"primary\"}\r\n        as={InputGroup.Prepend}\r\n      >\r\n        {Boolean(key) && <Dropdown.Item key={key} onClick={() => setSubstat(index, { key: \"\", value: 0 })}>No Substat</Dropdown.Item>}\r\n        {allSubstats\r\n          .filter(key => mainStatKey !== key && substats.every(other => other.key !== key))\r\n          .map(key =>\r\n            <Dropdown.Item key={key} onClick={() => setSubstat(index, { key, value: 0 })} >\r\n              {Stat.getStatNameWithPercent(key)}\r\n            </Dropdown.Item>\r\n          )}\r\n      </DropdownButton>\r\n      <CustomFormControl\r\n        float={unit === \"%\"}\r\n        placeholder=\"Select a Substat.\"\r\n        value={key ? value : \"\"}\r\n        onChange={(value) => setSubstat(index, { key, value })}\r\n        disabled={!key}\r\n        allowEmpty\r\n      />\r\n      {<ButtonGroup size=\"sm\" as={InputGroup.Append}>\r\n        {rollData.map((v, i) => {\r\n          const newValue = valueString(accurateValue + v, unit)\r\n          return <Button key={i} variant={`${rollOffset + i}roll`} className=\"py-0 text-darkcontent\" disabled={(value && !rollNum) || allowedRolls <= 0} onClick={() => setSubstat(index, { key, value: parseFloat(newValue) })}>{newValue}</Button>\r\n        })}\r\n      </ButtonGroup>}\r\n    </InputGroup>\r\n    <div className=\"p-1\">{error && <Badge variant=\"danger\">ERR</Badge>}{error || rollLabel}</div>\r\n  </Card >\r\n}\r\n\r\ntype ResetMessage = { type: \"reset\" }\r\ntype SubstatMessage = { type: \"substat\", index: number, substat: Substat }\r\ntype OverwriteMessage = { type: \"overwrite\", artifact: IArtifact }\r\ntype UpdateMessage = { type: \"update\", artifact: Partial<IArtifact> }\r\ntype Message = ResetMessage | SubstatMessage | OverwriteMessage | UpdateMessage\r\nexport function artifactReducer(state: IArtifact | undefined, action: Message): IArtifact | undefined {\r\n  switch (action.type) {\r\n    case \"reset\": return\r\n    case \"substat\": {\r\n      const { index, substat } = action\r\n      state!.substats[index] = substat\r\n      return { ...state! }\r\n    }\r\n    case \"overwrite\": return action.artifact\r\n    case \"update\": return { ...state!, ...action.artifact }\r\n  }\r\n}\r\n\r\nfunction checkDuplicate(editorArt: IArtifact | undefined): { dupId?: string, isDup: boolean } {\r\n  if (!editorArt) return { isDup: false }\r\n  const { id, setKey, numStars, level, slotKey, mainStatKey, substats } = editorArt\r\n  if (id) return { isDup: false }\r\n\r\n  //check for a \"upgrade\" or duplicate\r\n  const artifacts = Object.values(ArtifactDatabase.getArtifactDatabase()).filter(candidate =>\r\n    setKey === candidate.setKey &&\r\n    numStars === candidate.numStars &&\r\n    slotKey === candidate.slotKey &&\r\n    mainStatKey === candidate.mainStatKey &&\r\n    level >= candidate.level &&\r\n    candidate.substats.every(candidateSubstat =>\r\n      !candidateSubstat.key || substats.some(substat =>\r\n        substat.key === candidateSubstat.key &&\r\n        substat.value >= candidateSubstat.value\r\n      )))\r\n  if (!artifacts.length) return { isDup: false }\r\n\r\n  const dupArtifacts = artifacts.filter(candidate =>\r\n    level === candidate.level &&\r\n    substats.every(substat =>\r\n      !substat.key || candidate.substats.some(candidateSubstat =>\r\n        substat.key === candidateSubstat.key &&\r\n        substat.value === candidateSubstat.value\r\n      )))\r\n\r\n  const dupId = dupArtifacts[0]?.id! ?? artifacts[0].id!\r\n  return { dupId, isDup: dupArtifacts.length > 0 }\r\n}\r\n\r\nasync function randomizeArtifact(): Promise<IArtifact> {\r\n  const set = getRandomElementFromArray(allArtifactSets)\r\n  const sheet = await ArtifactSheet.get(set)!\r\n  const rarity = getRandomElementFromArray(sheet.rarity)\r\n  const slot = getRandomElementFromArray(Object.keys(sheet.slotNames))\r\n  const mainStatKey = getRandomElementFromArray(Artifact.slotMainStats(slot))\r\n  const level = getRandomIntInclusive(0, rarity * 4)\r\n  const substats: Substat[] = [0, 1, 2, 3].map(i => ({ key: \"\", value: 0 }))\r\n\r\n  const { low, high } = Artifact.rollInfo(rarity)\r\n  const totRolls = Math.floor(level / 4) + getRandomIntInclusive(low, high)\r\n  const numOfInitialSubstats = Math.min(totRolls, 4)\r\n  const numUpgradesOrUnlocks = totRolls - numOfInitialSubstats\r\n\r\n  const RollStat = (substat: SubstatKey): number =>\r\n    getRandomElementFromArray(Artifact.getSubstatRollData(substat, rarity))\r\n\r\n  let remainingSubstats = allSubstats.filter(key => mainStatKey !== key)\r\n  for (const substat of substats.slice(0, numOfInitialSubstats)) {\r\n    substat.key = getRandomElementFromArray(remainingSubstats)\r\n    substat.value = RollStat(substat.key)\r\n    remainingSubstats = remainingSubstats.filter(key => key !== substat.key)\r\n  }\r\n  for (let i = 0; i < numUpgradesOrUnlocks; i++) {\r\n    let substat = getRandomElementFromArray(substats)\r\n    substat.value += RollStat(substat.key as any)\r\n  }\r\n  for (const substat of substats)\r\n    if (substat.key)\r\n      substat.value = parseFloat(valueString(substat.value, Stat.getStatUnit(substat.key)))\r\n\r\n  return {\r\n    setKey: set, numStars: rarity, slotKey: slot, mainStatKey, level, substats, mainStatVal: Artifact.mainStatValue(mainStatKey, rarity, level)!, location: \"\", lock: false\r\n  }\r\n}\r\n\r\nconst saveArtifact = (artifact: IArtifact, id: string | undefined) => {\r\n  const artToSave = deepClone(artifact)\r\n  if (id) {\r\n    const art = ArtifactDatabase.get(id)\r\n    if (art) {\r\n      artToSave.id = art.id\r\n      artToSave.location = art.location\r\n    }\r\n  }\r\n  ArtifactDatabase.update(artToSave)\r\n}\r\nconst canClearArtifact = (): boolean => window.confirm(\"There is an artifact in editor. Are you sure you want to clear the editor?\")\r\n","import { faCheckSquare, faLock, faLockOpen, faSortAmountDownAlt, faSortAmountUp, faSquare, faTrash, faUndo, faUserSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Dropdown, InputGroup, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ReactGA from 'react-ga';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport InfoComponent from '../Components/InfoComponent';\r\nimport Stat from '../Stat';\r\nimport { allMainStatKeys } from '../Types/artifact';\r\nimport { allArtifactRarities, allSlotKeys } from '../Types/consts';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { clamp, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport ArtifactCard from './ArtifactCard';\r\nimport ArtifactEditor from './ArtifactEditor';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\n\r\nconst InfoDisplay = React.lazy(() => import('./InfoDisplay'));\r\nconst sortMap = {\r\n  quality: \"Quality\",\r\n  level: \"Level\",\r\n  efficiency: \"Current Substat Eff.\",\r\n  mefficiency: \"Maximum Substat Eff.\"\r\n}\r\n\r\nconst initialFilter = () => ({\r\n  filterArtSetKey: \"\",\r\n  filterStars: [3, 4, 5],\r\n  filterLevelLow: 0,\r\n  filterLevelHigh: 20,\r\n  filterSlotKey: \"\",\r\n  filterMainStatKey: \"\",\r\n  filterSubstats: [\"\", \"\", \"\", \"\"],\r\n  filterLocation: \"\",\r\n  filterLocked: \"\",\r\n  ascending: false,\r\n  sortType: Object.keys(sortMap)[0],\r\n  maxNumArtifactsToDisplay: 50\r\n})\r\nfunction filterReducer(state, action) {\r\n  if (action.type === \"reset\") return initialFilter()\r\n  return { ...state, ...action }\r\n}\r\nfunction filterInit(initial = initialFilter()) {\r\n  return { ...initial, ...(loadFromLocalStorage(\"ArtifactDisplay.state\") ?? {}) }\r\n}\r\nexport default function ArtifactDisplay(props) {\r\n  const [filters, filterDispatch] = useReducer(filterReducer, initialFilter(), filterInit)\r\n  const [artToEditId, setartToEditId] = useState(props?.location?.artToEditId)\r\n  const [pageIdex, setpageIdex] = useState(0)\r\n  const scrollRef = useRef(null)\r\n  const invScrollRef = useRef(null)\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n  const deleteArtifact = useCallback(\r\n    id => {\r\n      const art = ArtifactDatabase.get(id);\r\n      if (art && art.location)\r\n        CharacterDatabase.equipArtifactOnSlot(art.location, art.slotKey, \"\");\r\n      ArtifactDatabase.removeArtifactById(id)\r\n    }, [])\r\n  const editArtifact = useCallback(\r\n    id => {\r\n      setartToEditId(id);\r\n      (scrollRef?.current as any)?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, [])\r\n  const cancelEditArtifact = useCallback(() => setartToEditId(null), [])\r\n\r\n  useEffect(() => {\r\n    ReactGA.pageview('/artifact')\r\n    ArtifactDatabase.registerListener(forceUpdate)\r\n    return () => ArtifactDatabase.unregisterListener(forceUpdate)\r\n  }, [forceUpdate])\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage(\"ArtifactDisplay.state\", filters)\r\n  }, [filters])\r\n\r\n  const { artifacts, totalArtNum, numUnequip, numUnlock, numLock } = useMemo(() => {\r\n    const { filterArtSetKey, filterSlotKey, filterMainStatKey, filterStars, filterLevelLow, filterLevelHigh, filterSubstats = initialFilter().filterSubstats, filterLocation = \"\", filterLocked = \"\", sortType = Object.keys(sortMap)[0], ascending = false } = filters\r\n    const artifactDB = ArtifactDatabase.getArtifactDatabase() || {}\r\n    const artifacts = Object.values(artifactDB).filter(art => {\r\n      if (filterLocked) {\r\n        if (filterLocked === \"locked\" && !art.lock) return false\r\n        if (filterLocked === \"unlocked\" && art.lock) return false\r\n      }\r\n      if (filterLocation === \"Inventory\") {\r\n        if (art.location) return false;\r\n      } else if (filterLocation === \"Equipped\") {\r\n        if (!art.location) return false;\r\n      } else if (filterLocation && filterLocation !== art.location) return false;\r\n\r\n      if (filterArtSetKey && filterArtSetKey !== art.setKey) return false;\r\n      if (filterSlotKey && filterSlotKey !== art.slotKey) return false\r\n      if (filterMainStatKey && filterMainStatKey !== art.mainStatKey) return false\r\n      if (art.level < filterLevelLow || art.level > filterLevelHigh) return false;\r\n      if (!filterStars.includes(art.numStars)) return false;\r\n      for (const filterKey of filterSubstats)\r\n        if (filterKey && !art.substats.some(substat => substat.key === filterKey)) return false;\r\n      return true\r\n    }).sort((a, b) => {\r\n      let sortNum = 0\r\n      switch (sortType) {\r\n        case \"quality\":\r\n          sortNum = a.numStars - b.numStars\r\n          if (sortNum === 0)\r\n            sortNum = a.level - b.level\r\n          break;\r\n        case \"level\":\r\n          sortNum = a.level - b.level\r\n          if (sortNum === 0)\r\n            sortNum = a.numStars - b.numStars\r\n          break;\r\n        case \"efficiency\":\r\n          sortNum = a.currentEfficiency! - b.currentEfficiency!\r\n          break;\r\n        case \"mefficiency\":\r\n          sortNum = a.maximumEfficiency! - b.maximumEfficiency!\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return sortNum * (ascending ? 1 : -1)\r\n    })\r\n    const numUnequip = artifacts.reduce((a, art) => a + (art.location ? 1 : 0), 0)\r\n    const numUnlock = artifacts.reduce((a, art) => a + (art.lock ? 1 : 0), 0)\r\n    const numLock = artifacts.length - numUnlock\r\n\r\n    return { artifacts, totalArtNum: Object.keys(artifactDB)?.length || 0, numUnequip, numUnlock, numLock, ...dbDirty }//use dbDirty to shoo away warnings!\r\n  }, [filters, dbDirty])\r\n\r\n  const { filterArtSetKey, filterSlotKey, filterMainStatKey, filterStars, filterLevelLow, filterLevelHigh, filterSubstats = initialFilter().filterSubstats, maxNumArtifactsToDisplay, filterLocation = \"\", filterLocked = \"\", sortType = Object.keys(sortMap)[0], ascending = false } = filters\r\n\r\n  const { artifactsToShow, numPages, currentPageIndex } = useMemo(() => {\r\n    const numPages = Math.ceil(artifacts.length / maxNumArtifactsToDisplay)\r\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\r\n    return { artifactsToShow: artifacts.slice(currentPageIndex * maxNumArtifactsToDisplay, (currentPageIndex + 1) * maxNumArtifactsToDisplay), numPages, currentPageIndex }\r\n  }, [artifacts, pageIdex, maxNumArtifactsToDisplay])\r\n\r\n  const locationCharacterSheet = usePromise(CharacterSheet.get(filterLocation))\r\n  let locationDisplay\r\n  if (!filterLocation) locationDisplay = <span>Location: Any</span>\r\n  else if (filterLocation === \"Inventory\") locationDisplay = <span>Location: Inventory</span>\r\n  else if (filterLocation === \"Equipped\") locationDisplay = <span>Location: Equipped</span>\r\n  else locationDisplay = <b>{locationCharacterSheet?.name}</b>\r\n\r\n  let lockedDisplay\r\n  if (filterLocked === \"locked\") lockedDisplay = <span><FontAwesomeIcon icon={faLock} /> Locked</span>\r\n  else if (filterLocked === \"unlocked\") lockedDisplay = <span><FontAwesomeIcon icon={faLockOpen} /> Unlocked</span>\r\n  else lockedDisplay = <span>Locked: Any</span>\r\n\r\n  const unequipArtifacts = () =>\r\n    window.confirm(`Are you sure you want to unequip ${numUnequip} artifacts currently equipped on characters?`) &&\r\n    artifacts.map(art => Artifact.unequipArtifact(art.id))\r\n\r\n  const deleteArtifacts = () =>\r\n    window.confirm(`Are you sure you want to delete ${artifacts.length} artifacts?`) &&\r\n    artifacts.map(art => ArtifactDatabase.removeArtifactById(art.id))\r\n\r\n  const lockArtifacts = () =>\r\n    window.confirm(`Are you sure you want to lock ${numLock} artifacts?`) &&\r\n    artifacts.map(art => ArtifactDatabase.setLocked(art.id, true))\r\n\r\n  const unlockArtifacts = () =>\r\n    window.confirm(`Are you sure you want to unlock ${numUnlock} artifacts?`) &&\r\n    artifacts.map(art => ArtifactDatabase.setLocked(art.id, false))\r\n\r\n\r\n  return <Container className=\"mt-2\" >\r\n    <InfoComponent\r\n      pageKey=\"artifactPage\"\r\n      modalTitle=\"Artifact Editing/Management Page Info\"\r\n      text={[\"The maximum efficiency of a 4 star artifact is around 60%.\",\r\n        \"The maximum efficiency of an artifact will usually decrease as you upgrade. It's perfectly normal!\",\r\n        \"Substats with \\\"1\\\"s are the hardest to scan in screenshots.\",\r\n        \"If all your rolls(6) went into a single substat, it will be purple!\",\r\n        \"Click on \\\"Details\\\" when you are upgrading your artifacts in game to scan as you upgrade.\",\r\n        \"You can now upload mutiple artifact screenshots to scan!\"]}\r\n    >\r\n      <InfoDisplay />\r\n    </InfoComponent>\r\n    <div className=\"mb-2\" ref={scrollRef}>\r\n      <ArtifactEditor\r\n        artifactIdToEdit={artToEditId}\r\n        cancelEdit={cancelEditArtifact}\r\n      />\r\n    </div>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\" ref={invScrollRef}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col><span>Artifact Filter</span></Col>\r\n          <Col xs=\"auto\"><Button size=\"sm\" className=\"ml-2\" variant=\"danger\" onClick={() => filterDispatch({ type: \"reset\" })} ><FontAwesomeIcon icon={faUndo} className=\"fa-fw\" /> Reset Filters</Button></Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-n2\">\r\n          {/* Left half */}\r\n          <Col xs={12} lg={6}>\r\n            {/* Artifact set filter */}\r\n            <Dropdown as={InputGroup.Prepend} className=\"flex-grow-1 mb-2\">\r\n              <Dropdown.Toggle className=\"w-100\" variant={filterArtSetKey ? \"success\" : \"primary\"}>\r\n                {artifactSheets?.[filterArtSetKey]?.name ?? \"Artifact Set\"}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => filterDispatch({ filterArtSetKey: \"\" })}>Unselect</Dropdown.Item>\r\n                {artifactSheets && ArtifactSheet.namesByMaxRarities(artifactSheets).map(([star, sets]) =>\r\n                  <React.Fragment key={star}>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.ItemText>Max Rarity <Stars stars={star} /></Dropdown.ItemText>\r\n                    {sets.map(([key, name]) =>\r\n                      <Dropdown.Item key={key} onClick={() => filterDispatch({ filterArtSetKey: key })}>\r\n                        {name}\r\n                      </Dropdown.Item>)}\r\n                  </React.Fragment>\r\n                )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            {/* Artifact stars filter */}\r\n            <ToggleButtonGroup className=\"w-100 d-flex mb-2\" type=\"checkbox\" as={InputGroup.Append} onChange={(e) => filterDispatch({ filterStars: e })} value={filterStars}>\r\n              {allArtifactRarities.map(star => {\r\n                let selected = filterStars.includes(star)\r\n                return <ToggleButton key={star} value={star} variant={selected ? \"success\" : \"primary\"}><FontAwesomeIcon icon={selected ? faCheckSquare : faSquare} /> <Stars stars={star} /></ToggleButton>\r\n              })}\r\n            </ToggleButtonGroup>\r\n\r\n            {/* Artiface level filter */}\r\n            <InputGroup className=\"mb-2\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><span>Level <span className={`text-${filterLevelLow > 0 ? \"success\" : \"\"}`}>Low</span>/<span className={`text-${filterLevelHigh < 20 ? \"success\" : \"\"}`}>High</span> (Inclusive)</span></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <CustomFormControl\r\n                value={filterLevelLow}\r\n                placeholder={`Min Level`}\r\n                onChange={val => filterDispatch({ filterLevelLow: clamp(val, 0, filterLevelHigh) })}\r\n              />\r\n              <CustomFormControl\r\n                value={filterLevelHigh}\r\n                placeholder={`Max Level`}\r\n                onChange={val => filterDispatch({ filterLevelHigh: clamp(val, filterLevelLow, 20) })}\r\n              />\r\n            </InputGroup>\r\n\r\n            {/* Sort */}\r\n            <ButtonGroup className=\"w-100 d-flex flex-row mb-2\">\r\n              <Dropdown as={ButtonGroup} className=\"flex-grow-1\">\r\n                <Dropdown.Toggle >\r\n                  <span>Sort By: {sortMap[sortType]}</span>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {Object.entries(sortMap).map(([key, name]) =>\r\n                    <Dropdown.Item key={key} onClick={() => filterDispatch({ sortType: key })}>{name}</Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <Button onClick={() => filterDispatch({ ascending: !ascending })} className=\"flex-shrink-1\">\r\n                <FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" /><span> {ascending ? \"Ascending\" : \"Descending\"}</span>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n          {/* Right half */}\r\n          <Col xs={12} lg={6}>\r\n            <Row>\r\n              {/* Left */}\r\n              <Col>\r\n                {/* Artifact Slot */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\">\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterSlotKey ? \"success\" : \"primary\"}>\r\n                    {filterSlotKey ? Artifact.slotNameWithIcon(filterSlotKey) : \"Slot\"}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterSlotKey: \"\" })} >Unselect</Dropdown.Item>\r\n                    {allSlotKeys.map(key =>\r\n                      <Dropdown.Item key={key} onClick={() => filterDispatch({ filterSlotKey: key })} >\r\n                        {Artifact.slotNameWithIcon(key)}\r\n                      </Dropdown.Item>)}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n                {/* Main Stat filter */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\">\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterMainStatKey ? \"success\" : \"primary\"}>\r\n                    {Stat.getStatNameWithPercent(filterMainStatKey, \"Main Stat\")}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterMainStatKey: \"\" })}>Unselect</Dropdown.Item>\r\n                    {allMainStatKeys.map(statKey => <Dropdown.Item key={statKey} onClick={() => filterDispatch({ filterMainStatKey: statKey })} >\r\n                      {Stat.getStatNameWithPercent(statKey)}\r\n                    </Dropdown.Item>)}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                {/* location */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\" >\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterLocation ? \"success\" : \"primary\"} >\r\n                    {locationDisplay}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocation: \"\" })}>Unselect</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocation: \"Inventory\" })}>Inventory</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocation: \"Equipped\" })}>Currently Equipped</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <CharacterSelectionDropdownList onSelect={cid => filterDispatch({ filterLocation: cid })} />\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                {/* locked state */}\r\n                <Dropdown className=\"flex-grow-1 mb-2\" >\r\n                  <Dropdown.Toggle className=\"w-100\" variant={filterLocked ? \"success\" : \"primary\"} >\r\n                    {lockedDisplay}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocked: \"\" })}>Any</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocked: \"locked\" })}><span><FontAwesomeIcon icon={faLock} /> Locked</span></Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => filterDispatch({ filterLocked: \"unlocked\" })}><span><FontAwesomeIcon icon={faLockOpen} /> Unlocked</span></Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Col>\r\n              {/* Right */}\r\n              <Col>\r\n                {/* substat filter */}\r\n                {filterSubstats.map((substatKey, index) =>\r\n                  <Dropdown className=\"mb-2\" key={index}>\r\n                    <Dropdown.Toggle id=\"dropdown-basic\" className=\"w-100\" variant={substatKey ? \"success\" : \"primary\"}>\r\n                      {Stat.getStatNameWithPercent(substatKey, `Substat ${index + 1}`)}\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          filterSubstats[index] = \"\"\r\n                          filterDispatch({ filterSubstats })\r\n                        }}\r\n                      >No Substat</Dropdown.Item>\r\n                      {Artifact.getSubstatKeys().filter(key => !filterSubstats.includes(key)).map(key =>\r\n                        <Dropdown.Item key={key}\r\n                          onClick={() => {\r\n                            filterSubstats[index] = key\r\n                            filterDispatch({ filterSubstats })\r\n                          }}\r\n                        >{Stat.getStatNameWithPercent(key)}</Dropdown.Item>\r\n                      )}\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!numUnequip} onClick={unequipArtifacts}><FontAwesomeIcon icon={faUserSlash} /> Unequip Artifacts</Button></Col>\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!artifacts.length} onClick={deleteArtifacts}><FontAwesomeIcon icon={faTrash} /> Delete Artifacts</Button></Col>\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!numLock} onClick={lockArtifacts}><FontAwesomeIcon icon={faLock} /> Lock Artifacts</Button></Col>\r\n          <Col xs={6} lg={3} className=\"mb-2\"><Button className=\"w-100\" variant=\"danger\" disabled={!numUnlock} onClick={unlockArtifacts}><FontAwesomeIcon icon={faLockOpen} /> Unlock Artifacts </Button></Col>\r\n          <Col xs={12} className=\"mt-n2\"><small>Note: the above buttons only applies to <b>filtered artifacts</b></small></Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {numPages > 1 && <ButtonGroup size=\"sm\">\r\n              {[...Array(numPages).keys()].map(i => <Button key={i} className=\"px-3\" variant={currentPageIndex === i ? \"success\" : \"primary\"} onClick={() => setpageIdex(i)} >\r\n                {i === 0 ? \"Page \" : \"\"}{i + 1}\r\n              </Button>)}\r\n            </ButtonGroup>}\r\n          </Col>\r\n          <Col xs=\"auto\"><span className=\"float-right text-right\">Showing <b>{artifactsToShow.length}</b> out of {artifacts.length !== totalArtNum ? `${artifacts.length}/` : \"\"}{totalArtNum} Artifacts</span></Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n    <Row>\r\n      {artifactsToShow.map((art, i) =>\r\n        <Col key={i} lg={4} md={6} className=\"mb-2\">\r\n          <ArtifactCard\r\n            artifactId={art.id}\r\n            onDelete={() => deleteArtifact(art.id)}\r\n            onEdit={() => editArtifact(art.id)}\r\n          />\r\n        </Col>\r\n      )}\r\n    </Row>\r\n    {numPages > 1 && <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body>\r\n        <Row>\r\n          <Col>\r\n            <ButtonGroup size=\"sm\">\r\n              {[...Array(numPages).keys()].map(i => <Button key={i} className=\"px-3\" variant={currentPageIndex === i ? \"success\" : \"primary\"} onClick={() => {\r\n                setpageIdex(i);\r\n                (invScrollRef.current as any)?.scrollIntoView({ behavior: \"smooth\" })\r\n              }} >\r\n                {i === 0 ? \"Page \" : \"\"}{i + 1}\r\n              </Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\"><span className=\"float-right text-right\">Showing <b>{artifactsToShow.length}</b> out of {artifacts.length !== totalArtNum ? `${artifacts.length}/` : \"\"}{totalArtNum} Artifacts</span></Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>}\r\n  </Container >\r\n}","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n};\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].map(ele => FormulaText[`${ele}_crystalize_hit`] = o => <span>250% * {f(o, `crystalize_hit`)}</span>)\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>();\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => { pending = false }\r\n  }, [promise])\r\n  return res\r\n}\r\n"],"sourceRoot":""}