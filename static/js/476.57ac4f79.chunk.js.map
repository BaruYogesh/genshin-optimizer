{"version":3,"file":"static/js/476.57ac4f79.chunk.js","mappings":"2NAEMA,GAAmBC,EAAAA,EAAAA,KAAO,gBAAGC,EAAH,EAAGA,UAAcC,GAAjB,mBAC9B,SAAC,KAAD,kBAAaA,GAAb,IAAoBC,OAAK,EAACC,QAAS,CAAEC,OAAQJ,QADtBD,EAEtB,kBAAGM,EAAH,EAAGA,MAAH,mCACMC,EAAAA,EAAAA,OAAyB,CAC9BC,MAAOF,EAAMG,QAAQC,OAAOC,SAF7B,sBAIMJ,EAAAA,EAAAA,SAA2B,CAChCK,gBAAiBN,EAAMG,QAAQC,OAAOC,MACtCE,SAAU,MANX,KASH,O,4RCHaC,GAAkBd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,EAAkB,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CAC/DM,gBAAiBN,EAAMG,QAAQO,QAAQC,KACvCC,WAAY,gBACZ,UAAW,CACTN,gBAAiBN,EAAMG,QAAQO,QAAQG,MAEzC,gBAAiB,CACfP,gBAAiBN,EAAMG,QAAQO,QAAQG,MAEzC,iBAAkB,CAChBP,gBAAiBN,EAAMG,QAAQO,QAAQG,UAIrCC,GAAUpB,EAAAA,EAAAA,IAAOqB,EAAAA,EAAPrB,EAAe,kBAAgB,CAC7CY,gBAD6B,EAAGN,MACTG,QAAQO,QAAQC,KACvCK,QAAS,EACTC,SAAU,SACV,IAAO,CACLC,MAAO,OACPC,OAAQ,YAKL,SAASC,EAAT,GAA0I,IAA3FC,EAA0F,EAA1FA,SAAoEzB,GAAsB,EAAhF0B,cAAgF,EAAjEC,mBAAiE,EAA7CC,oBAA6C,aAC9I,OAAO,SAACV,GAAD,gBAASQ,eAAa,EAACC,oBAAkB,EAACC,oBAAkB,GAAK5B,GAAjE,aAAyEyB,KAGnE,SAASI,EAAT,GAAuG,IAAD,IAAzEC,MAAAA,OAAyE,MAAjE,EAAiE,EAA9DC,EAA8D,EAA9DA,SAA8D,IAApDC,SAAAA,OAAoD,aAAlCC,MAAAA,OAAkC,SAAhBjC,GAAgB,YACnH,GAA4BkC,EAAAA,EAAAA,UAASJ,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAYC,EAAAA,EAAAA,UAAQ,kBAAMP,EAAQQ,WAAaC,WAAU,CAACT,IAC1DU,GAASC,EAAAA,EAAAA,cACb,WACEb,EAASI,GACTG,GAAS,KAEX,CAACP,EAAUI,EAAQG,IAEfO,GAAUD,EAAAA,EAAAA,cACd,WACEN,GAAS,KAEX,CAACA,KAEHQ,EAAAA,EAAAA,YAAU,kBAAMV,EAAUN,KAAQ,CAACA,EAAOM,IAC1C,IAAMW,GAAgBH,EAAAA,EAAAA,cAAY,SAAAI,GAAC,OAAIZ,EAAUG,EAAUS,EAAEC,OAAOnB,QAAU,KAAI,CAACM,EAAWG,IACxFW,GAAYN,EAAAA,EAAAA,cAAY,SAAAI,GAAC,MAAc,UAAVA,EAAEG,KAAmBR,MAAU,CAACA,IACnE,OAAO,SAAC/B,GAAD,QACLkB,MAAQO,IAAYF,EAAU,GAAKA,EACnC,aAAW,eACXiB,KAAK,SACLC,WAAY,CAAEC,KAAMrB,EAAQ,GAAM,GAClCF,SAAUgB,EACVJ,OAAQA,EACRE,QAASA,EACTb,SAAUA,EACVuB,UAAWL,GACPlD,M,wSCvDO,SAASwD,EAAT,GAA4F,IAA7DC,EAA4D,EAA5DA,YAA4D,IAA/CzB,SAAAA,OAA+C,SACxG,OAA+C,IAA3C0B,OAAOC,KAAKF,EAAYG,QAAQC,QAAgB,SAAUJ,GACrD,SAACK,EAAD,CAA2BL,YAAaA,EAAazB,SAAUA,IAC7D,SAAUyB,GACZ,SAACM,EAAD,CAA8BN,YAAaA,EAAazB,SAAUA,KAElE,SAACgC,EAAD,CAA6BP,YAAaA,EAAazB,SAAUA,IAO5E,SAAS8B,EAAT,GAA+F,IAA1DL,EAAyD,EAAzDA,YAAazB,EAA4C,EAA5CA,SAChD,GAA+CiC,EAAAA,EAAAA,YAAWC,EAAAA,GAAlDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,kBAAmBC,EAAtC,EAAsCA,KAChCC,GAAiB1B,EAAAA,EAAAA,cAAY,SAAC2B,GAClC,IAAMC,GAAoBC,EAAAA,EAAAA,IAAUN,EAAUV,aAC1Cc,GACFG,EAAAA,EAAAA,IAAkBF,EAAmBf,EAAYkB,KAAMJ,IAEvDK,EAAAA,EAAAA,IAAeJ,EAAmBf,EAAYkB,MAEhDP,EAAkB,CAAEX,YAAae,MAChC,CAACf,EAAaU,EAAWC,IAEtBS,EAAmBR,EAAKS,IAAIrB,EAAY3B,OAAOA,MACrD,UAAuB4B,OAAOqB,QAAQtB,EAAYG,QAAQ,GAA1D,GAAOoB,EAAP,KACMC,EAAQC,EADd,KAC+BC,MACzBC,EAAWC,EAAY5B,EAAY0B,MAEzC,OAAO,UAAChE,EAAA,EAAD,CAAQmE,WAAS,EAACC,KAAK,QAAQC,GAAI,CAAEC,aAAc,GAAKnF,MAAOuE,EAAmB,UAAY,UAAWa,QAAS,kBAAMpB,EAAeO,OAAmBc,EAAYX,IAAWhD,SAAUA,EAAU4D,UAAWf,GAAmB,SAACgB,EAAA,EAAD,KAAe,SAACC,EAAA,EAAD,IAAlP,UACJV,EADI,IACOH,KAOhB,SAASlB,EAAT,GAAqG,IAA7DN,EAA4D,EAA5DA,YAAazB,EAA+C,EAA/CA,SACnD,GAA+CiC,EAAAA,EAAAA,YAAWC,EAAAA,GAAlDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,kBAAmBC,EAAtC,EAAsCA,KAChCC,GAAiB1B,EAAAA,EAAAA,cAAY,SAAC2B,GAClC,IAAMC,GAAoBC,EAAAA,EAAAA,IAAUN,EAAUV,aAC1Cc,GACFG,EAAAA,EAAAA,IAAkBF,EAAmBf,EAAYkB,KAAMJ,IAEvDK,EAAAA,EAAAA,IAAeJ,EAAmBf,EAAYkB,MAEhDP,EAAkB,CAAEX,YAAae,MAChC,CAACf,EAAaU,EAAWC,IAEtBS,EAAmBR,EAAKS,IAAIrB,EAAY3B,OAAOA,MAC/CiE,EAAQlB,EAAmBpB,EAAYG,OAAOiB,QAAoBc,EAClEV,EAAQc,EAAQb,EAAca,EAAMZ,OAAQ,SAACa,EAAA,EAAD,CAAS1F,MAAM,YAAf,wBAC5C8E,EAAWC,EAAY5B,EAAY0B,MAEzC,OAAO,UAACc,EAAA,EAAD,CAAgBX,WAAS,EAACC,KAAK,QAAQC,GAAI,CAAEC,aAAc,GAAKnF,MAAOuE,EAAmB,UAAY,UAAWqB,OAAO,4BAAOd,EAAP,IAAkBH,KAAejD,SAAUA,EAAnK,WACL,SAACmE,EAAA,EAAD,CAAUT,QAAS,kBAAMpB,KAAkB8B,UAAWL,EAAO/D,UAAW+D,EAAxE,UACE,4CAEF,SAACM,EAAA,EAAD,IACC3C,OAAOqB,QAAQtB,EAAYG,QAAQ0C,KAAI,+BAAEtB,EAAF,KAAYuB,EAAZ,YACtC,SAACJ,EAAA,EAAD,CAAyBT,QAAS,kBAAMpB,EAAeU,IAAWoB,SAAUvB,IAAqBG,EAAUhD,SAAU6C,IAAqBG,EAA1I,SAAsJuB,EAAGpB,MAA1IH,SAOrB,SAAShB,EAAT,GAAmG,IAA5DP,EAA2D,EAA3DA,YAAazB,EAA8C,EAA9CA,SAClD,GAA+CiC,EAAAA,EAAAA,YAAWC,EAAAA,GAAlDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,kBAAmBC,EAAtC,EAAsCA,KAChCC,GAAiB1B,EAAAA,EAAAA,cAAY,SAAC+B,EAAyBJ,GAC3D,IAAMC,GAAoBC,EAAAA,EAAAA,IAAUN,EAAUV,aAC1Cc,GACFG,EAAAA,EAAAA,IAAkBF,EAAmBG,EAAMJ,IAE3CK,EAAAA,EAAAA,IAAeJ,EAAmBG,GAEpCP,EAAkB,CAAEX,YAAae,MAChC,CAACL,EAAWC,IAEf,OAAO,SAACoC,EAAA,EAAD,CAAalB,WAAS,EAACmB,YAAY,WAAWC,kBAAgB,EAACpG,MAAM,YAArE,SACJoD,OAAOqB,QAAQtB,EAAYG,QAAQ0C,KAAI,YAAqB,IAAD,eAAlBtB,EAAkB,KAARuB,EAAQ,KACpD1B,EAAmBR,EAAKS,IAAIyB,EAAGzE,OAAOA,MACtC6E,EAAa9B,IAAqBG,EACxC,OAAO,SAAC7D,EAAA,EAAD,CACLb,MAAOqG,EAAa,UAAY,UAChC3E,SAAUA,EACVsD,WAAS,EAETI,QAAS,kBAAMpB,EAAeiC,EAAG5B,KAAME,OAAmBc,EAAYX,IACtEO,KAAK,QACLK,UAAWe,GAAa,SAACd,EAAA,EAAD,KAAe,SAACC,EAAA,EAAD,IACvCN,GAAI,CAAEC,aAAc,GARf,SAUJJ,EAAYkB,EAAGpB,OANXH,QAYb,SAAS4B,EAAUC,GACjB,MAAwB,kBAATA,EAIjB,SAAS3B,EAAc4B,GACrB,IAAKA,EAAW,MAAO,GAEvB,IAAIC,EAAa,UACbC,EAAYF,EAOhB,OANIA,GAAaF,EAAUE,IACrBA,EAAU9G,MAAMM,QAClByG,EAAaD,EAAU9G,MAAMM,MAC7B0G,GAAY,0BAAOF,EAAU9G,MAAMyB,aAGhC,SAACuE,EAAA,EAAD,CAASR,GAAI,CAAEyB,GAAI,IAAO3G,MAAOyG,EAAjC,SAA8CC,IAIvD,SAAS3B,EAAYD,GACnB,GAAIwB,EAAUxB,GAAW,CACvB,IAAMjC,EAAMiC,EAASpF,MAAMkH,MACrBC,EAAK/B,EAASpF,MAAMmH,GACpBC,EAAShC,EAASpF,MAAMoH,OAC9B,OAAO,SAACC,EAAA,EAAD,CAAWF,GAAIA,EAAID,MAAO/D,EAAKiE,OAAQA,EAAQE,UAAQ,IAEhE,OAAOlC,EC7HM,SAASmC,EAAT,GAA6G,IAEtHC,EAFuC/D,EAA8E,EAA9EA,YAA8E,IAAjEgE,WAAAA,OAAiE,aAA7CC,SAAAA,OAA6C,SACjHrD,GAASJ,EAAAA,EAAAA,YAAWC,EAAAA,GAApBG,KAER,GAAI,SAAUZ,EAAa,CAAC,IAAD,EACnBkE,EAAUtD,EAAKS,IAAIrB,EAAY3B,OAAOA,MAC5C0F,EAASG,IAAO,UAAIlE,EAAYG,OAAO+D,UAAvB,aAAI,EAA6BH,aAEjDA,EAAS9D,OAAO0D,OAAO3D,EAAYG,QAAQgE,SAAQ,SAAA7B,GAEjD,OADiB1B,EAAKS,IAAIiB,EAAMjE,OAAOA,MACrBiE,EAAMyB,OAAS,MAGrC,OAAO,UAACK,EAAA,EAAD,aACHC,EAAAA,EAAAA,IAAWL,EAAYhE,KAAgB,SAACsE,EAAD,CAAeC,OAAQvE,EAAYuE,OAAQN,SAAUA,KAC9F,SAACO,EAAA,EAAD,CAAazC,GAAI,CAAE0C,EAAG,EAAG,eAAgB,CAAEC,GAAI,IAA/C,UACE,SAAC3E,EAAD,CAAqBC,YAAaA,MAEnC+D,IAAU,SAAC,KAAD,CAAeA,OAAQA,O,eChBvB,SAASY,EAAT,GAAkH,IAAvFC,EAAsF,EAAtFA,SAAUC,EAA4E,EAA5EA,aAA4E,IAA9DZ,SAAAA,OAA8D,aAA5CD,WAAAA,OAA4C,SACtHpD,GAASJ,EAAAA,EAAAA,YAAWC,EAAAA,GAApBG,KACR,IAAKgE,EAASxE,OAAQ,OAAO,KAC7B,IAAM0E,EAAkBF,EAAS/B,KAAI,SAACkC,EAAGC,GAEvC,OAAID,EAAEE,UAAYrE,EAAKS,IAAI0D,EAAEE,SAAS5G,OAElCwG,IAAiBE,EAAEG,SAF8B,MAG9C,SAACC,EAAD,CAAgBC,QAASL,EAAWd,SAAUA,EAAUD,WAAYA,GAAnCgB,MACvCK,QAAO,SAAAN,GAAC,OAAIA,KACf,OAAKD,EAAgB1E,QACd,SAACkF,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,IAAK,EAAhD,SAAoDX,IADvB,KAItC,SAASK,EAAT,GAA8L,IAApKC,EAAmK,EAAnKA,QAAmK,IAA1JnB,SAAAA,OAA0J,aAAxID,WAAAA,OAAwI,SAC3L,MAAI,WAAYoB,GACP,SAACM,EAAD,CAAsBN,QAASA,EAASnB,SAAUA,EAAUD,WAAYA,IACtE,WAAYoB,GACd,SAACtB,EAAD,CAAoB9D,YAAaoF,EAASnB,SAAUA,EAAUD,WAAYA,KAE1E,SAAC2B,EAAD,CAAoBP,QAASA,IAIxC,SAASM,EAAT,GAAoL,IAApJN,EAAmJ,EAAnJA,QAASnB,EAA0I,EAA1IA,SAAUD,EAAgI,EAAhIA,WACjD,OAAO,UAACI,EAAA,EAAD,aACHC,EAAAA,EAAAA,IAAWL,EAAYoB,IAAYA,EAAQb,SAC3C,SAACD,EAAD,CAAeC,OAAQa,EAAQb,OAAQN,SAAUA,EAAU2B,YAAuC,IAA1BR,EAAQrB,OAAO3D,UAEzF,SAAC,KAAD,CAAe2D,OAAQqB,EAAQrB,YAInC,SAAS4B,EAAT,GAAsE,IAAxCP,EAAuC,EAAvCA,QACpBxE,GAASJ,EAAAA,EAAAA,YAAWC,EAAAA,GAApBG,KACR,OAAO,0BACJyD,EAAAA,EAAAA,IAAWe,EAAQS,KAAMjF,KAIvB,SAAS0D,EAAT,GAA6K,IAApJC,EAAmJ,EAAnJA,OAAQN,EAA2I,EAA3IA,SAAU2B,EAAiI,EAAjIA,YACxChF,GAASJ,EAAAA,EAAAA,YAAWC,EAAAA,GAApBG,KACFkF,EAAwBvB,EAAxBuB,KAAMrD,EAAkB8B,EAAlB9B,MAAOsD,EAAWxB,EAAXwB,OACnBD,GAAOzB,EAAAA,EAAAA,IAAWyB,EAAMlF,GACxB,IAAMoF,GAAe/B,IAAYI,EAAAA,EAAAA,IAAWE,EAAOyB,YAAapF,GAC1DqF,EAAehC,EAAWxB,GAAQ,4BAAOA,EAAP,KAAc,SAACyD,EAAA,EAAD,CAAazD,OAAO,SAAC0D,EAAA,EAAD,UAAaH,SACvF,OAAO,iCACL,SAACI,EAAA,EAAD,CAAYC,OAAQP,EAAMrD,MAAOwD,EAAcF,OAAQA,EAAQO,qBAAsB,CAAEC,QAAS,gBAC9FX,IAAe,SAAChD,EAAA,EAAD,S,oTCpDrB,EALwB,SAAC,GAAD,IAAGtG,EAAH,EAAGA,UAAcC,GAAjB,mBACtB,SAACH,EAAA,GAAD,gBAAkBoK,UAAU,OAAUjK,GAAtC,IAA6CD,UAAWA,EAAxD,UACE,SAACgJ,EAAA,EAAD,CAAKmB,UAAU,OAAO1E,GAAI,CAAE2E,OAAQ,QAApC,UAA8C,SAAC,IAAD,CAAiBZ,KAAMa,EAAAA,Y,WCE1D,SAASC,EAAT,GAAiE,IAAxC7C,EAAuC,EAAvCA,OACtC,OAAO,SAAC8C,EAAD,CAAkB9E,GAAI,CAAE+E,EAAG,GAA3B,SACJ/C,EAAOlB,KAAI,SAACkE,EAAO/B,GAAR,OAAc,SAACgC,EAAD,CAAsBD,MAAOA,EAAON,UAAWQ,EAAAA,IAA5BjC,QAIjD,SAASgC,EAAT,GAAsG,IAA9ED,EAA6E,EAA7EA,MAAON,EAAsE,EAAtEA,UAC7B,GAA0BjG,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BG,EAAR,EAAQA,KAAMsG,EAAd,EAAcA,QAEd,KADgBnI,EAAAA,EAAAA,UAAQ,2CAAMgI,QAAN,IAAMA,GAAN,UAAMA,EAAO9B,eAAb,aAAM,OAAA8B,EAAiBnG,UAAvB,WAAsC,CAACmG,EAAOnG,IACxD,OAAO,KACrB,GAAI,SAAUmG,EAAO,CACnB,IAAMI,EAAOvG,EAAKS,IAAI0F,EAAMI,MAC5B,GAAIA,EAAKC,QAAS,OAAO,KACzB,GAAIF,EAAS,CACX,IAAMG,EAAUH,EAAQ7F,IAAI0F,EAAMI,MAC5BG,EAAWD,EAAQD,QAAU,EAAIC,EAAQhJ,MAC/C,OAAO,SAACkJ,EAAD,CAAkBJ,KAAMA,EAAMG,SAAUA,EAAUE,OAAQT,EAAMU,WAAYhB,UAAWA,IAE3F,OAAO,SAACc,EAAD,CAAkBJ,KAAMA,EAAMK,OAAQT,EAAMU,WAAYhB,UAAWA,IAEjF,OAAO,SAACiB,EAAD,CAAmBX,MAAOA,EAAON,UAAWA,IAGrD,SAASiB,EAAT,GAAgH,IAAD,EAAlFX,EAAkF,EAAlFA,MAAON,EAA2E,EAA3EA,UAC1B7F,GAASJ,EAAAA,EAAAA,YAAWC,EAAAA,GAApBG,KACFE,GAAIuD,EAAAA,EAAAA,IAAW0C,EAAM1I,MAAOuC,GAC5B2F,GAAUlC,EAAAA,EAAAA,IAAW0C,EAAMR,QAAS3F,GACpCiF,EAAOkB,EAAMlB,OAAQ,0BAAOkB,EAAMlB,OAClC2B,EAAST,EAAMU,aAAc,0BAAOV,EAAMU,aAChD,OAAO,UAACnC,EAAA,EAAD,CAAKzH,MAAM,OAAOkE,GAAI,CAAEwD,QAAS,OAAQoC,eAAgB,gBAAiBlC,IAAK,GAAKgB,UAAWA,EAA/F,WACL,UAACN,EAAA,EAAD,CAAYtJ,MAAK,UAAK0J,EAAL,SAAqBxE,GAAI,CAAEwD,QAAS,OAAQE,IAAK,EAAGmC,WAAY,UAAjF,UAA8F/B,EAAM2B,MACpG,UAACrB,EAAA,EAAD,WAA2B,kBAANrF,EAAP,UAAwBA,EAAE+G,eAA1B,aAAwB,OAAA/G,EAAYiG,EAAMe,OAAShH,EAAGiG,EAAMgB,WAIvE,SAASR,EAAT,GAAiK,IAArIJ,EAAoI,EAApIA,KAAMG,EAA8H,EAA9HA,SAAUE,EAAoH,EAApHA,OAAQf,EAA4G,EAA5GA,UACzD,GAAIU,EAAKC,QAAS,OAAO,KAEzBI,EAASA,IAAU,0BAAOA,IAC1B,IAAM1B,EAAOqB,EAAKa,KAAKtI,KAAOuI,EAAAA,EAASd,EAAKa,KAAKtI,KAC3CwI,EAAYf,EAAKa,KAAKtI,IAAMyI,EAAAA,GAAAA,IAAWhB,EAAKa,KAAKtI,KAAO,GACxD0I,EAAajB,EAAKa,KAAKI,WACvBC,EAAmBlB,EAAKmB,QAC1BC,EAAW,GACf,GAAIjB,EAAU,CACZ,IAAMkB,EAAOrB,EAAK9I,MAAQiJ,EAC1BiB,GAAW,6BAAOE,EAAAA,EAAAA,IAAYnB,EAAUH,EAAKY,MAAOS,EAAO,MAAUA,GAAQ,MAAS,UAAC,IAAD,CAAW3L,MAAO2L,EAAO,EAAI,UAAY,QAAzC,cAAoDA,EAAO,EAAI,IAAM,IAAIC,EAAAA,EAAAA,IAAYD,EAAMrB,EAAKY,SAAqB,WACtMQ,GAAWE,EAAAA,EAAAA,IAAYtB,EAAK9I,MAAO8I,EAAKY,MAC/C,IAAMW,IAAuBvB,EAAKmB,UAAW,SAAC,EAAD,CAAiB7F,OAAO,SAAC0D,EAAA,EAAD,UAAakC,MAClF,OAAO,UAAC/C,EAAA,EAAD,CAAKzH,MAAM,OAAOkE,GAAI,CAAEwD,QAAS,OAAQoC,eAAgB,gBAAiBlC,IAAK,GAAKgB,UAAWA,EAA/F,WACL,UAACN,EAAA,EAAD,CAAYtJ,MAAK,UAAKsK,EAAKa,KAAKzB,QAAf,SAA+BxE,GAAI,CAAEwD,QAAS,OAAQE,IAAK,EAAGmC,WAAY,UAA3F,YAA0GQ,IAAc,SAACO,EAAA,EAAD,IAAY7C,EAAMoC,EAAWV,MACrJ,UAACrB,EAAA,EAAD,CAAYpE,GAAI,CAAEwD,QAAS,OAAQE,IAAK,EAAGmC,WAAY,UAAvD,UAAqEW,EAAUG,QAI5E,IAAM7B,GAAmBxK,EAAAA,EAAAA,IAAOuM,EAAAA,EAAPvM,EAAa,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CAC3DqF,aAAcrF,EAAMkM,MAAM7G,aAC1BpE,SAAU,SACVkL,OAAQ,EACR,wCAAyC,CACvC7L,gBAAiBN,EAAMG,QAAQiM,YAAYzL,MAE7C,uCAAwC,CACtCL,gBAAiBN,EAAMG,QAAQkM,cAAc1L,W,sHC7DjD,IALoB,SAAC,GAAD,IAAGhB,EAAH,EAAGA,UAAcC,GAAjB,mBAClB,SAAC,KAAD,gBAAkBiK,UAAU,OAAUjK,GAAtC,IAA6CD,UAAWA,EAAxD,UACE,SAAC,IAAD,CAAKmK,UAAU,OAAO1E,GAAI,CAAE2E,OAAQ,QAApC,UAA8C,SAAC,IAAD,CAAiBZ,KAAMmD,EAAAA,a,yDCiB5DxI,GAAcyI,E,SAAAA,eAAc,K,ieCK1B,SAASC,EAAT,GAIiB,IAAD,IAHnBC,EAGmB,EAH7BC,SAG6B,IAF7BC,OAAAA,OAE6B,SAD7BC,EAC6B,EAD7BA,QAEQ3I,GAASJ,EAAAA,EAAAA,YAAWC,EAAAA,GAApBG,KAEA4I,GAAahJ,EAAAA,EAAAA,YAAWiJ,EAAAA,GAAxBD,SACFE,GAASC,EAAAA,EAAAA,GAAUP,GACzB,SAAwFM,QAAxF,IAAwFA,EAAAA,EAAU,GAAlG,IAAQhK,IAAAA,OAAR,MAAc,GAAd,MAAkBkK,MAAAA,OAAlB,MAA0B,EAA1B,MAA6BC,WAAAA,QAA7B,MAA0C,EAA1C,OAA6CC,UAAAA,QAA7C,OAAyD,EAAzD,GAA4DC,GAA5D,EAA4DA,KAA5D,KAAkEC,SAAAA,QAAlE,OAA6E,GAA7E,GAAiFC,GAAjF,EAAiFA,GAC3EC,IAAcC,EAAAA,EAAAA,GAAWC,EAAAA,EAAAA,IAAgB1K,GAAM,CAACA,IAEhD2K,IAAiBlL,EAAAA,EAAAA,cAAY,SAACmL,GAClCd,EAASe,aAAaD,EAAWlB,KAChC,CAACA,EAAcI,IAEZgB,IAAWrL,EAAAA,EAAAA,cAAY,SAAAyK,GAC3BA,GAAQa,EAAAA,EAAAA,IAAMb,EAAO,EAAG,IACxB,IAAME,EAAYY,EAAAA,GAAAA,WAA4B,SAAAC,GAAO,OAAIf,GAASe,KAClEN,GAAe,CAAET,MAAAA,EAAOE,UAAAA,MACvB,CAACO,KAEEO,IAAezL,EAAAA,EAAAA,cAAY,WAC/B,IAAM0L,EAAiBH,EAAAA,GAAAA,WAA4B,SAAAC,GAAO,OAAc,KAAVf,GAAgBA,IAAUe,KACtDN,GAA9BP,KAAce,EAA+B,CAAEf,UAAWA,GAAY,GACtD,CAAEA,UAAWe,MAChC,CAACR,GAAgBP,GAAWF,IAEzBkB,IAAiBX,EAAAA,EAAAA,GAAWH,GAAWe,EAAAA,EAAAA,IAAmBf,SAAY9H,EAAW,CAAC8H,KAClFgB,GAAeF,GAAiB,SAACG,GAAD,OAAQA,EAAGC,aAAeJ,GAAeK,oBAAgBjJ,EACzFkJ,GAAsBN,IAAkBA,GAAeK,cAEvDE,IAAclM,EAAAA,EAAAA,cAAY,SAACmM,GAAD,OAAgCrB,IAAMT,EAAS+B,kBAAkBtB,GAAIqB,KAAU,CAAC9B,EAAUS,KACpH5E,IAASlG,EAAAA,EAAAA,cACb,SAACqM,GAAD,OAAwBA,EAAGL,iBAAH,OAAqBjB,SAArB,IAAqBA,QAArB,EAAqBA,GAAagB,cAC1D,CAAChB,KAGH,IAAkCzL,EAAAA,EAAAA,WAAS,GAA3C,iBAAOgN,GAAP,MAAkBC,GAAlB,MACMC,GAAM7B,GAAY,EAAZ,OAAgBI,SAAhB,IAAgBA,QAAhB,EAAgBA,GAAayB,IAA7B,OAAmCzB,SAAnC,IAAmCA,QAAnC,EAAmCA,GAAa0B,WAG5DvM,EAAAA,EAAAA,YAAU,WACR,GAAK6K,IAAgBG,IAAkBH,GAAYxK,OAAZ,OAAoBgK,QAApB,IAAoBA,OAApB,EAAoBA,EAAQhK,MAC/DwK,GAAY2B,QAAU,IAAMjC,EAAQ,IAAME,GAAY,GAAI,CAC5D,cAA2BgC,EAAAA,GAAAA,GAA3B,GAAOlC,EAAP,KAAcE,EAAd,KACAO,GAAe,CAAET,MAAAA,EAAOE,UAAAA,OAEzB,CAACI,GAAaR,EAAQW,GAAgBT,EAAOE,KAGhD,IAAMiC,IAAehN,EAAAA,EAAAA,UAAQ,kBAAMmL,IAAeR,IAAUsC,EAAAA,EAAAA,IAAc,CAAC9B,GAAYtJ,MAAMqL,EAAAA,EAAAA,IAAiBvC,OAAW,CAACQ,GAAaR,IACvI,OAAO,SAAC,IAAD,CAAcwC,OAAQ9C,EAAcG,QAASA,EAAS4C,eAAgB,CAAEjP,SAAU,MAAlF,UAA0F,UAAC,IAAD,YAC/F,SAAC,IAAD,CAAsBkP,KAAMX,GAAWY,OAAQ,kBAAMX,IAAa,IAAQY,SAAU,SAAAC,GAAC,OAAIlC,GAAe,CAAE3K,IAAK6M,KAAMlH,OAAQ2F,GAAcA,aAAcI,MACzJ,SAAC,IAAD,UACGlB,IAAe6B,KAAgB,UAAC,KAAD,CAAMS,WAAS,EAACC,QAAS,IAAzB,WAC9B,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,UAAC,KAAD,CAAMJ,WAAS,EAACC,QAAS,IAAzB,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,UACE,SAAC,IAAD,CAAKnG,UAAU,MAAMoG,IAAKlB,GAAKrP,UAAS,eAAU4N,GAAY2B,OAAtB,QAAoC9J,GAAI,CAAE7E,SAAU,IAAKW,MAAO,OAAQC,OAAQ,OAAQkE,aAAc,QAEhJ,SAAC,KAAD,CAAM0K,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,UACE,SAAC,IAAD,WAAY,2BAAQ1C,GAAYlE,wBAItC,UAAC,KAAD,CAAM0G,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAG7K,GAAI,CAAEwD,QAAS,OAAQC,cAAe,SAAUC,IAAK,GAA/E,WACE,UAAC,IAAD,CAAKF,QAAQ,OAAOE,IAAK,EAAGqH,SAAS,OAAOnF,eAAe,gBAA3D,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAQ1F,QAAS,kBAAMyJ,IAAa,IAApC,0BAA6CxB,SAA7C,IAA6CA,QAA7C,EAA6CA,GAAaxI,YAA1D,QAAkE,qBACtD,OAAXwI,SAAW,IAAXA,QAAA,EAAAA,GAAa6C,iBAAiB,UAAC,IAAD,CAAgBtK,MAAK,qBAAgBoH,IAArC,WAC7B,SAAC,IAAD,wCACA,SAAC,IAAD,KACC,OAAImD,MAAM,GAAG9M,QAAQ2C,KAAI,SAAAnD,GAAG,OAC3B,SAAC,IAAD,CAAoBuC,QAAS,kBAAMoI,GAAe,CAAER,WAAYnK,EAAM,KAAMiD,SAAUkH,KAAgBnK,EAAM,EAAInB,SAAUsL,KAAgBnK,EAAM,EAAhJ,8BACiBA,EAAM,IADRA,aAKhB,OAAJkB,QAAI,IAAJA,GAAA,UAAAA,EAAMS,IAAI4L,EAAAA,GAAAA,gBAAV,eAA0B5O,SAAS,SAAC,IAAD,CAAe8M,cAAejB,GAAYgB,WAAYgC,WAAY,SAAAjD,GAAE,OAAIT,EAAS+B,kBAAkBtB,EAAIrJ,EAAKS,IAAI4L,EAAAA,GAAAA,SAAe5O,cAErK,UAAC,IAAD,CAAKkH,QAAQ,OAAOE,IAAK,EAAGqH,SAAS,OAAOnF,eAAe,gBAA3D,WACE,UAAC,IAAD,CAAa5F,GAAI,CAAEoL,QAAS,SAAAC,GAAC,OAAIA,EAAEtQ,QAAQuQ,aAAa/P,OAAxD,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAmBgB,SAAUkM,GAAUnM,MAAOuL,EAC5C0D,eAAe,OACf1N,WAAY,CAAE2N,IAAK,EAAGC,IAAK,GAAIzL,GAAI,CAAE0L,UAAW,WAChD1L,GAAI,CAAElE,MAAO,OAAQC,OAAQ,OAAQ4P,GAAI,OAG5CxD,KAAe,SAAC,IAAD,CAAQnI,GAAI,CAAE2L,GAAI,GAAKnP,UAAW2L,GAAYyD,eAAe/D,GAAQ3H,QAAS2I,GAA9E,UAA4F,mCAAWF,EAAAA,GAAkBZ,SACxII,KAAe,SAAC,IAAD,CAAgBzH,MAAO,eAAvB,SACbyH,GAAY0D,gBAAgB/K,KAAI,YAAe,IAAD,eAAZgL,EAAY,KAARC,EAAQ,KAEvCC,EADYF,IAAOnD,EAAAA,GAAkBoD,GACnB,cAAUD,GAAV,cAAwBA,EAAxB,YAA8BnD,EAAAA,GAAkBoD,IAClEnL,EAAWkL,IAAOjE,GAASkE,IAAOhE,GACxC,OAAO,SAAC,IAAD,CAA8BnH,SAAUA,EAAUpE,SAAUoE,EAAUV,QAAS,kBAAMoI,GAAe,CAAET,MAAOiE,EAAI/D,UAAWgE,KAA5H,SAAoIC,GAApI,UAAkBF,EAAlB,YAAwBC,aAKrC,SAAC,IAAD,CAAQjR,MAAM,QAAQoF,QAAS,kBAAMgI,IAAMT,EAASe,aAAa,CAAER,MAAOA,IAAQE,KAAK9H,UAAW4H,IAAO,SAAC,IAAD,KAAW,SAAC,IAAD,IAApH,SACGA,GAAO,SAAW,iBAGvB,SAAC,IAAD,WAAY,SAAC,IAAD,CAAOiE,MAAO9D,GAAY2B,YACtC,SAAC,IAAD,CAAYtF,QAAQ,YAApB,UAAgC,4BAAS2D,GAAY+D,iBACrD,SAAC,IAAD,CAAYC,cAAY,EAAxB,SAA0BhE,GAAY+D,aAAe/D,GAAYiE,mBAAmBpC,GAAa1K,IAAI4L,EAAAA,GAAAA,OAAAA,aAA0B5O,UAC/H,UAAC,IAAD,CAAKkH,QAAQ,OAAOC,cAAc,SAASC,IAAK,EAAhD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAYhD,MAAO,aAAc6D,qBAAsB,CAAEC,QAAS,gBAClE,SAAC,IAAD,KACA,SAAC,KAAD,UACG,CAAC0G,EAAAA,GAAAA,OAAAA,KAAmBA,EAAAA,GAAAA,OAAAA,IAAkBA,EAAAA,GAAAA,OAAAA,MAAmBpK,KAAI,SAACsE,EAAMnC,GACnE,IAAMoJ,EAAIrC,GAAa1K,IAAI8F,GAC3B,OAAIiH,EAAEhH,UAAYgH,EAAE/P,MAAc,MAC3B,SAAC,KAAD,CAAmC8I,KAAMiH,EAAG3H,UAAWQ,EAAAA,IAAhCmH,EAAEpG,KAAKtI,aAI1CkB,GAAQsJ,GAAYmE,WAAY,SAAC,IAAD,CAAiBzJ,SAAUsF,GAAYmE,sBAK/E/E,GAAUW,KAAM,SAAC,IAAD,CAAalI,GAAI,CAAEuM,GAAI,GAAvB,UACf,UAAC,KAAD,CAAM9B,WAAS,EAAf,WACE,SAAC,KAAD,CAAME,MAAI,EAAC6B,SAAU,EAArB,UACE,SAAC,IAAD,CAAyBC,YAAU,EAACC,WAAS,EAACpQ,MAAO2L,GAAU1L,SAAU+M,GAAahG,OAAQA,SAE7FkE,IAAW,SAAC,KAAD,CAAMmD,MAAI,EAAV,UAAW,SAAC,IAAD,CAAagC,OAAK,EAACzM,QAASsH,kB,6PCrJ9C,SAASoF,EAAT,GAA2H,IAAlGzB,EAAiG,EAAjGA,WAAY/B,EAAqF,EAArFA,cAC1C3B,GAAahJ,EAAAA,EAAAA,YAAWiJ,EAAAA,GAAxBD,SACR,GAAwB/K,EAAAA,EAAAA,WAAS,GAAjC,eAAO2N,EAAP,KAAawC,EAAb,KAEMC,EAAQ,kBAAMD,GAAQ,IAEtBE,EAAe,SAAC7E,GACpBiD,EAAWjD,GACX4E,KAGIE,GAAe5E,EAAAA,EAAAA,GAAWC,EAAAA,EAAAA,OAAoB,IAE9C4E,EAAexF,EAASyF,QAAQ/O,KAAKmF,QAAO,SAAA6J,GAAS,IAAD,EAClDC,EAAW3F,EAAS4F,WAAWF,GACrC,QAAKC,KACDhE,GAAiBA,KAAa,OAAK4D,QAAL,IAAKA,GAAL,UAAKA,EAAeI,EAASzP,YAA7B,aAAK,EAA8BwL,gBAKvE,OAAO,iCACL,SAAC,IAAD,CAAQrO,MAAM,OAAOoF,QAnBV,kBAAM2M,GAAQ,IAmBWzM,WAAW,SAAC,IAAD,IAA/C,0BACA,SAAC,IAAD,CAAc+J,KAAME,EAAM7C,QAASsF,EAAnC,UACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAa9M,GAAI,CAAEuM,GAAI,GAAvB,UACE,UAAC,KAAD,CAAM9B,WAAS,EAAf,WACE,SAAC,KAAD,CAAME,MAAI,EAAC6B,SAAU,EAArB,UACE,UAAC,IAAD,CAAYhI,QAAQ,KAApB,UAA0B4E,GAAgB,SAAC,IAAD,CAAS0B,IAAKwC,EAAAA,EAAAA,YAAmBlE,KAAqB,KAAhG,qBAEF,SAAC,KAAD,CAAMuB,MAAI,EAAV,UACE,SAAC,IAAD,CAAazK,QAAS4M,YAI5B,SAAC,IAAD,KACA,SAAC,IAAD,WACE,SAAC,KAAD,CAAMrC,WAAS,EAACC,QAAS,EAAzB,SACGuC,EAAanM,KAAI,SAAAwG,GAAQ,OACxB,SAAC,KAAD,CAAMqD,MAAI,EAAgBC,GAAI,EAAGC,GAAI,EAAG0C,GAAI,EAAGC,GAAI,EAAnD,UACE,SAAC,IAAD,CACElG,SAAUA,EACVpH,QAAS6M,KAHGzF,oB,gDCnD9B,KAAemG,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,uIACD,a,+CCFJ,KAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,+FACD,yB,gDCFJ,KAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,4EACD","sources":["Components/BootstrapTooltip.tsx","Components/CustomNumberInput.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/InfoTooltip.tsx","DataContext.tsx","PageWeapon/WeaponEditor.tsx","PageWeapon/WeaponSwapBtn.tsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/SwapHoriz.js"],"sourcesContent":["import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 500,\r\n  },\r\n}));\r\nexport default BootstrapTooltip\r\n","import { Button, ButtonProps, InputBase, InputProps, styled } from '@mui/material'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\ntype props = Omit<InputProps, \"onChange\"> & {\r\n  value?: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  allowEmpty?: boolean,\r\n}\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  transition: \"all 0.5s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-focused\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}))\r\n\r\nconst Wrapper = styled(Button)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  padding: 0,\r\n  overflow: \"hidden\",\r\n  \"div\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n}))\r\n\r\n// wrap the Input with this when using the input in a buttongroup\r\nexport function CustomNumberInputButtonGroupWrapper({ children, disableRipple, disableFocusRipple, disableTouchRipple, ...props }: ButtonProps) {\r\n  return <Wrapper disableRipple disableFocusRipple disableTouchRipple {...props}>{children}</Wrapper>\r\n}\r\n\r\nexport default function CustomNumberInput({ value = 0, onChange, disabled = false, float = false, ...props }: props) {\r\n  const [number, setNumber] = useState(value)\r\n  const [focused, setFocus] = useState(false)\r\n  const parseFunc = useMemo(() => float ? parseFloat : parseInt, [float],)\r\n  const onBlur = useCallback(\r\n    () => {\r\n      onChange(number)\r\n      setFocus(false)\r\n    },\r\n    [onChange, number, setFocus],\r\n  )\r\n  const onFocus = useCallback(\r\n    () => {\r\n      setFocus(true)\r\n    },\r\n    [setFocus],\r\n  )\r\n  useEffect(() => setNumber(value), [value, setNumber]) // update value on value change\r\n  const onInputChange = useCallback(e => setNumber(parseFunc(e.target.value) || 0), [setNumber, parseFunc],)\r\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && onBlur(), [onBlur],)\r\n  return <StyledInputBase\r\n    value={(focused && !number) ? \"\" : number}\r\n    aria-label=\"custom-input\"\r\n    type=\"number\"\r\n    inputProps={{ step: float ? 0.1 : 1 }}\r\n    onChange={onInputChange}\r\n    onBlur={onBlur}\r\n    onFocus={onFocus}\r\n    disabled={disabled}\r\n    onKeyDown={onKeyDOwn}\r\n    {...props}\r\n  />\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, ButtonGroup, Divider, MenuItem } from '@mui/material';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { DataContext } from '../../DataContext';\r\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\r\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\r\nimport DropdownButton from '../DropdownMenu/DropdownButton';\r\nimport SqBadge from '../SqBadge';\r\nimport { Translate } from '../Translate';\r\n\r\ninterface ConditionalSelectorProps {\r\n  conditional: DocumentConditional,\r\n  disabled?: boolean,\r\n}\r\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\r\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\r\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else if (\"path\" in conditional) {\r\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  }\r\n}\r\n\r\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\r\n  const { character, characterDispatch, data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const [stateKey, st] = Object.entries(conditional.states)[0]\r\n  const badge = getStateBadge(st.name)\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n    {condName} {badge}\r\n  </Button>\r\n}\r\n\r\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\r\n  const { character, characterDispatch, data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\r\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\r\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\r\n      <span>Not Active</span>\r\n    </MenuItem>\r\n    <Divider />\r\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\r\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n\r\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalMultiple\r\n}\r\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\r\n  const { character, characterDispatch, data } = useContext(DataContext)\r\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [character, characterDispatch])\r\n\r\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\r\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\r\n      const conditionalValue = data.get(st.value).value\r\n      const isSelected = conditionalValue === stateKey\r\n      return <Button\r\n        color={isSelected ? \"success\" : \"primary\"}\r\n        disabled={disabled}\r\n        fullWidth\r\n        key={stateKey}\r\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\r\n        size=\"small\"\r\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\r\n        sx={{ borderRadius: 0 }}\r\n      >\r\n        {getCondName(st.name)}\r\n      </Button>\r\n    })}\r\n  </ButtonGroup>\r\n}\r\n\r\nfunction isElement(disp: Displayable): disp is JSX.Element {\r\n  return (typeof disp !== \"string\")\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\r\n  if (!stateName) return \"\"\r\n\r\n  let badgeColor = \"primary\"\r\n  let badgeText = stateName\r\n  if (stateName && isElement(stateName)) {\r\n    if (stateName.props.color) {\r\n      badgeColor = stateName.props.color\r\n      badgeText = <span>{stateName.props.children}</span>\r\n    }\r\n  }\r\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getCondName(condName: Displayable): Displayable {\r\n  if (isElement(condName)) {\r\n    const key = condName.props.key18\r\n    const ns = condName.props.ns\r\n    const values = condName.props.values\r\n    return <Translate ns={ns} key18={key} values={values} useBadge />\r\n  }\r\n  return condName\r\n}\r\n","import { CardContent } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../../DataContext\"\r\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\r\nimport { evalIfFunc } from \"../../Util/Util\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport { HeaderDisplay } from \"../DocumentDisplay\"\r\nimport FieldsDisplay from \"../FieldDisplay\"\r\nimport ConditionalSelector from \"./ConditionalSelector\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: DocumentConditional,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n  hideDesc?: boolean,\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  let fields\r\n  if (\"path\" in conditional) {\r\n    const condVal = data.get(conditional.value).value\r\n    fields = condVal && conditional.states[condVal]?.fields\r\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    fields = Object.values(conditional.states).flatMap(state => {\r\n      const stateVal = data.get(state.value).value\r\n      return stateVal ? state.fields : []\r\n    })\r\n  }\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\r\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\r\n      <ConditionalSelector conditional={conditional} />\r\n    </CardContent>\r\n    {fields && <FieldsDisplay fields={fields} />}\r\n  </CardDark>\r\n}\r\n","import { Box, CardHeader, Divider, Typography } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../DataContext\"\r\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\r\nimport FieldsDisplay from \"./FieldDisplay\"\r\nimport InfoTooltip from \"./InfoTooltip\"\r\n\r\ntype DocumentDisplayProps = {\r\n  sections: DocumentSection[],\r\n  teamBuffOnly?: boolean,\r\n  hideDesc?: boolean,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n}\r\n\r\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  if (!sections.length) return null\r\n  const sectionDisplays = sections.map((s, i) => {\r\n    // If we can't show this section, return null\r\n    if (s.canShow && !data.get(s.canShow).value ) return null\r\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\r\n    if (teamBuffOnly && !s.teamBuff) return null\r\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  }).filter(s => s)\r\n  if (!sectionDisplays.length) return null\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\r\n}\r\n\r\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  if (\"fields\" in section) {\r\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else if (\"states\" in section) {\r\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else /* if (\"text\" in section) */ {\r\n    return <TextSectionDisplay section={section} />\r\n  }\r\n}\r\n\r\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, section) && section.header &&\r\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\r\n    }\r\n    <FieldsDisplay fields={section.fields} />\r\n  </CardDark>\r\n}\r\n\r\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\r\n  const { data } = useContext(DataContext)\r\n  return <div>\r\n    {evalIfFunc(section.text, data)}\r\n  </div>\r\n}\r\n\r\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  const { data } = useContext(DataContext)\r\n  let { icon, title, action } = header\r\n  icon = evalIfFunc(icon, data)\r\n  const description = !hideDesc && evalIfFunc(header.description, data)\r\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\r\n  return <>\r\n    <CardHeader avatar={icon} title={displayTitle} action={action} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n    {!hideDivider && <Divider />}\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TooltipProps } from \"@mui/material\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\n\r\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\r\n  className?: string,\r\n}\r\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\r\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\nexport default QuestionTooltip\r\n","import { Groups } from \"@mui/icons-material\";\r\nimport { Box, List, ListItem, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { DataContext } from \"../DataContext\";\r\nimport { NodeDisplay } from \"../Formula/api\";\r\nimport KeyMap, { valueString } from \"../KeyMap\";\r\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport ColorText from \"./ColoredText\";\r\nimport QuestionTooltip from \"./QuestionTooltip\";\r\nimport StatIcon from \"./StatIcon\";\r\n\r\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\r\n  return <FieldDisplayList sx={{ m: 0 }}>\r\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\r\n  if (!canShow) return null\r\n  if (\"node\" in field) {\r\n    const node = data.get(field.node)\r\n    if (node.isEmpty) return null\r\n    if (oldData) {\r\n      const oldNode = oldData.get(field.node)\r\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\r\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\r\n    }\r\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\r\n  }\r\n  return <BasicFieldDisplay field={field} component={component} />\r\n}\r\n\r\nfunction BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\r\n  const { data } = useContext(DataContext)\r\n  const v = evalIfFunc(field.value, data)\r\n  const variant = evalIfFunc(field.variant, data)\r\n  const text = field.text && <span>{field.text}</span>\r\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\r\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport function NodeFieldDisplay({ node, oldValue, suffix, component }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType }) {\r\n  if (node.isEmpty) return null\r\n\r\n  suffix = suffix && <span>{suffix}</span>\r\n  const icon = node.info.key && StatIcon[node.info.key]\r\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\r\n  const isTeamBuff = node.info.isTeamBuff\r\n  const fieldFormulaText = node.formula\r\n  let fieldVal = \"\" as Displayable\r\n  if (oldValue) {\r\n    const diff = node.value - oldValue\r\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\r\n  } else fieldVal = valueString(node.value, node.unit)\r\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip title={<Typography>{fieldFormulaText}</Typography>} />\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\r\n    <Typography sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >{fieldVal}{formulaTextOverlay}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));\r\n","\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TooltipProps } from \"@mui/material\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\n\r\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\r\n  className?: string,\r\n}\r\nconst InfoTooltip = ({ className, ...props }: ITooltipProps) =>\r\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faInfoCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\nexport default InfoTooltip\r\n","import { createContext } from \"react\"\r\nimport CharacterSheet from \"./Data/Characters/CharacterSheet\"\r\nimport { UIData } from \"./Formula/uiData\"\r\nimport { ICachedCharacter } from \"./Types/character\"\r\nimport { CharacterKey } from \"./Types/consts\"\r\nimport { ICachedWeapon } from \"./Types/weapon\"\r\nimport WeaponSheet from \"./Data/Weapons/WeaponSheet\"\r\nimport { characterReducerAction } from \"./ReactHooks/useCharacterReducer\";\r\nexport type TeamData = Partial<Record<CharacterKey, {\r\n  target: UIData\r\n  buffs: Dict<CharacterKey, UIData>\r\n  character: ICachedCharacter\r\n  weapon: ICachedWeapon\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet,\r\n}>>\r\nexport type dataContextObj = {\r\n  character: ICachedCharacter\r\n  characterSheet: CharacterSheet\r\n  data: UIData\r\n  oldData?: UIData\r\n  mainStatAssumptionLevel: number\r\n  teamData: TeamData\r\n  characterDispatch: (action: characterReducerAction) => void\r\n}\r\n\r\n// If using this context without a Provider, then stuff will crash...\r\n// In theory, none of the components that uses this context should work without a provider...\r\nexport const DataContext = createContext({} as dataContextObj)\r\n","import { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel, lowRarityMilestoneLevels } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { DataContext } from \"../DataContext\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponSwapBtn from \"./WeaponSwapBtn\"\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponEditor({\r\n  weaponId: propWeaponId,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const { data } = useContext(DataContext)\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = useWeapon(propWeaponId)\r\n  const { key = \"\", level = 0, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\r\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  //check the levels when switching from a 5* to a 1*, for example.\r\n  useEffect(() => {\r\n    if (!weaponSheet || !weaponDispatch || weaponSheet.key !== weapon?.key) return\r\n    if (weaponSheet.rarity <= 2 && (level > 70 || ascension > 4)) {\r\n      const [level, ascension] = lowRarityMilestoneLevels[0]\r\n      weaponDispatch({ level, ascension })\r\n    }\r\n  }, [weaponSheet, weapon, weaponDispatch, level, ascension])\r\n\r\n\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <ModalWrapper open={!!propWeaponId} onClose={onClose} containerProps={{ maxWidth: \"md\" }}><CardLight>\r\n    <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n    <CardContent >\r\n      {weaponSheet && weaponUIData && <Grid container spacing={1.5}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Grid container spacing={1.5}>\r\n            <Grid item xs={6} sm={12}>\r\n              <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            </Grid>\r\n            <Grid item xs={6} sm={12}>\r\n              <Typography><small>{weaponSheet.description}</small></Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n            <ButtonGroup>\r\n              <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n              {weaponSheet?.hasRefinement && <DropdownButton title={`Refinement ${refinement}`}>\r\n                <MenuItem>Select Weapon Refinement</MenuItem>\r\n                <Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </MenuItem>)}\r\n              </DropdownButton>}\r\n            </ButtonGroup>\r\n            {data?.get(input.charKey)?.value && <WeaponSwapBtn weaponTypeKey={weaponSheet.weaponType} onChangeId={id => database.setWeaponLocation(id, data.get(input.charKey).value as CharacterKey)} />}\r\n          </Box>\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n            <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n              <CustomNumberInputButtonGroupWrapper >\r\n                <CustomNumberInput onChange={setLevel} value={level}\r\n                  startAdornment=\"Lv. \"\r\n                  inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                  sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                />\r\n              </CustomNumberInputButtonGroupWrapper>\r\n              {weaponSheet && <Button sx={{ pl: 1 }} disabled={!weaponSheet.ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>}\r\n              {weaponSheet && <DropdownButton title={\"Select Level\"} >\r\n                {weaponSheet.milestoneLevels.map(([lv, as]) => {\r\n                  const sameLevel = lv === ascensionMaxLevel[as]\r\n                  const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                  const selected = lv === level && as === ascension\r\n                  return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                })}\r\n              </DropdownButton>}\r\n            </ButtonGroup>\r\n\r\n            <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n              {lock ? \"Locked\" : \"Unlocked\"}\r\n            </Button>\r\n          </Box>\r\n          <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n          <Typography variant=\"subtitle1\"><strong>{weaponSheet.passiveName}</strong></Typography>\r\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\r\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n            <CardDark >\r\n              <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n              <Divider />\r\n              <FieldDisplayList>\r\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\r\n                  const n = weaponUIData.get(node)\r\n                  if (n.isEmpty || !n.value) return null\r\n                  return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\r\n                })}\r\n              </FieldDisplayList>\r\n            </CardDark>\r\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight ></ModalWrapper>\r\n}\r\n","import { SwapHoriz } from \"@mui/icons-material\"\r\nimport { Button, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useContext, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport { WeaponTypeKey } from \"../Types/consts\"\r\nimport WeaponCard from \"./WeaponCard\"\r\n\r\nexport default function WeaponSwapBtn({ onChangeId, weaponTypeKey }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.99 11 3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\"\n}), 'SwapHoriz');"],"names":["BootstrapTooltip","styled","className","props","arrow","classes","popper","theme","tooltipClasses","color","palette","common","black","backgroundColor","maxWidth","StyledInputBase","InputBase","primary","main","transition","dark","Wrapper","Button","padding","overflow","width","height","CustomNumberInputButtonGroupWrapper","children","disableRipple","disableFocusRipple","disableTouchRipple","CustomNumberInput","value","onChange","disabled","float","useState","number","setNumber","focused","setFocus","parseFunc","useMemo","parseFloat","parseInt","onBlur","useCallback","onFocus","useEffect","onInputChange","e","target","onKeyDOwn","key","type","inputProps","step","onKeyDown","ConditionalSelector","conditional","Object","keys","states","length","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","DataContext","character","characterDispatch","data","setConditional","v","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","entries","stateKey","badge","getStateBadge","name","condName","getCondName","fullWidth","size","sx","borderRadius","onClick","undefined","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","title","MenuItem","selected","Divider","map","st","ButtonGroup","orientation","disableElevation","isSelected","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","flatMap","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","p","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","Box","display","flexDirection","gap","FieldsSectionDisplay","TextSectionDisplay","hideDivider","text","icon","action","description","displayTitle","InfoTooltip","Typography","CardHeader","avatar","titleTypographyProps","variant","placement","component","cursor","faQuestionCircle","FieldsDisplay","FieldDisplayList","m","field","FieldDisplay","ListItem","oldData","node","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","justifyContent","alignItems","toFixed","fixed","unit","info","StatIcon","fieldText","KeyMap","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","valueString","formulaTextOverlay","Groups","List","shape","margin","contentDark","contentDarker","faInfoCircle","createContext","WeaponEditor","propWeaponId","weaponId","footer","onClose","database","DatabaseContext","weapon","useWeapon","level","refinement","ascension","lock","location","id","weaponSheet","usePromise","WeaponSheet","weaponDispatch","newWeapon","updateWeapon","setLevel","clamp","ascensionMaxLevel","ascenML","setAscension","lowerAscension","characterSheet","CharacterSheet","weaponFilter","ws","weaponType","weaponTypeKey","initialWeaponFilter","equipOnChar","charKey","setWeaponLocation","cs","showModal","setshowModal","img","imgAwaken","rarity","lowRarityMilestoneLevels","weaponUIData","computeUIData","dataObjForWeapon","open","containerProps","show","onHide","onSelect","k","container","spacing","item","xs","sm","src","flexWrap","hasRefinement","Array","input","onChangeId","bgcolor","t","contentLight","startAdornment","min","max","textAlign","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","stars","passiveName","gutterBottom","passiveDescription","n","document","py","flexGrow","noUnselect","inventory","large","WeaponSwapBtn","setShow","close","clickHandler","weaponSheets","weaponIdList","weapons","wKey","dbWeapon","_getWeapon","Assets","md","lg","createSvgIcon","_jsx","d"],"sourceRoot":""}