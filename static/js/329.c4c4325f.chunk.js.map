{"version":3,"file":"static/js/329.c4c4325f.chunk.js","mappings":"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","sources":["Components/BootstrapTooltip.tsx","Components/Character/CharacterDropdownButton.tsx","Components/CustomNumberInput.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/FieldDisplay.tsx","DataContext.tsx","PageWeapon/WeaponDisplayCard.tsx","../node_modules/@mui/icons-material/esm/Groups.js","../node_modules/@mui/icons-material/esm/SwapHoriz.js"],"sourcesContent":["import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 500,\r\n  },\r\n}));\r\nexport default BootstrapTooltip\r\n","import { BusinessCenter, Replay } from \"@mui/icons-material\";\r\nimport { Divider, ListItemIcon, MenuItem, Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport DropdownButton, { DropdownButtonProps } from \"../DropdownMenu/DropdownButton\";\r\nimport ThumbSide from \"./ThumbSide\";\r\n\r\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  value: CharacterKey | \"\"\r\n  onChange: (ck: CharacterKey | \"\") => void\r\n  filter?: (cs: CharacterSheet, ck: CharacterKey) => boolean\r\n  inventory?: boolean\r\n  noUnselect?: boolean,\r\n  unSelectText?: Displayable,\r\n  unSelectIcon?: Displayable,\r\n}\r\n\r\nexport default function CharacterDropdownButton({ value, onChange, unSelectText, unSelectIcon, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\r\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\r\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck], ck)).sort()\r\n  return <DropdownButton\r\n    {...props}\r\n    title={characterSheet?.name ?? (inventory ? t`inventory` : (unSelectText ?? t`unselect`))}\r\n    color={value ? \"success\" : \"primary\"}\r\n    startIcon={characterSheet?.thumbImg ? <ThumbSide src={characterSheet.thumbImgSide} /> : (inventory ? <BusinessCenter /> : (unSelectIcon ?? <Replay />))}>\r\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <BusinessCenter />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`inventory`}\r\n      </Typography>\r\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <Replay />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`unselect`}\r\n      </Typography>\r\n    </MenuItem>)}\r\n    {!noUnselect && <Divider key=\"div\" />}\r\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value)}\r\n  </DropdownButton >\r\n}\r\n\r\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\r\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\") {\r\n  return characterKeys.map(characterKey =>\r\n    <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\r\n      <ListItemIcon>\r\n        <ThumbSide src={characterSheets[characterKey]?.thumbImgSide} />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {characterSheets?.[characterKey]?.name}\r\n      </Typography>\r\n    </MenuItem>)\r\n}\r\n","import { Button, ButtonProps, InputBase, InputProps, styled } from '@mui/material'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\ntype props = Omit<InputProps, \"onChange\"> & {\r\n  value?: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  allowEmpty?: boolean,\r\n}\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  transition: \"all 0.5s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-focused\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}))\r\n\r\nconst Wrapper = styled(Button)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  padding: 0,\r\n  overflow: \"hidden\",\r\n  \"div\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n}))\r\n\r\n// wrap the Input with this when using the input in a buttongroup\r\nexport function CustomNumberInputButtonGroupWrapper({ children, disableRipple, disableFocusRipple, disableTouchRipple, ...props }: ButtonProps) {\r\n  return <Wrapper disableRipple disableFocusRipple disableTouchRipple {...props}>{children}</Wrapper>\r\n}\r\n\r\nexport default function CustomNumberInput({ value = 0, onChange, disabled = false, float = false, ...props }: props) {\r\n  const [number, setNumber] = useState(value)\r\n  const [focused, setFocus] = useState(false)\r\n  const parseFunc = useMemo(() => float ? parseFloat : parseInt, [float],)\r\n  const onBlur = useCallback(\r\n    () => {\r\n      onChange(number)\r\n      setFocus(false)\r\n    },\r\n    [onChange, number, setFocus],\r\n  )\r\n  const onFocus = useCallback(\r\n    () => {\r\n      setFocus(true)\r\n    },\r\n    [setFocus],\r\n  )\r\n  useEffect(() => setNumber(value), [value, setNumber]) // update value on value change\r\n  const onInputChange = useCallback(e => setNumber(parseFunc(e.target.value) || 0), [setNumber, parseFunc],)\r\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && onBlur(), [onBlur],)\r\n  return <StyledInputBase\r\n    value={(focused && !number) ? \"\" : number}\r\n    aria-label=\"custom-input\"\r\n    type=\"number\"\r\n    inputProps={{ step: float ? 0.1 : 1 }}\r\n    onChange={onInputChange}\r\n    onBlur={onBlur}\r\n    onFocus={onFocus}\r\n    disabled={disabled}\r\n    onKeyDown={onKeyDOwn}\r\n    {...props}\r\n  />\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, Divider, MenuItem } from '@mui/material';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport DropdownButton from '../DropdownMenu/DropdownButton';\r\nimport SqBadge from '../SqBadge';\r\nimport { DataContext } from '../../DataContext';\r\nimport IConditional from '../../Types/IConditional';\r\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, disabled = false, }:\r\n  { conditional: IConditional, conditionalValue?: string, disabled?: boolean }) {\r\n  const { character, characterDispatch } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  if (Object.keys(conditional.states).length === 1) {\r\n    const [stateKey, st] = Object.entries(conditional.states)[0]\r\n    const badge = st.name && <SqBadge color={\"success\"}>{st.name}</SqBadge>\r\n    return <Button fullWidth size=\"small\" onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n      {conditional.name} {badge}\r\n    </Button>\r\n  } else {//complex conditional\r\n    const state = conditionalValue ? conditional.states[conditionalValue] : undefined\r\n    const badge = state?.name && <SqBadge color={state ? \"success\" : \"secondary\"}>{state ? state.name : \"Not Active\"}</SqBadge>\r\n    return <DropdownButton fullWidth size=\"small\" title={<span>{conditional.name} {badge}</span>} disabled={disabled}>\r\n      <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\r\n        <span>Not Active</span>\r\n      </MenuItem>\r\n      <Divider />\r\n      {Object.entries(conditional.states).map(([stateKey, st]) =>\r\n        <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\r\n    </DropdownButton>\r\n  }\r\n}\r\n","import { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { CardContent, CardHeader, Divider, ListItem, Typography } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext, dataContextObj } from \"../../DataContext\"\r\nimport { Data } from \"../../Formula/type\"\r\nimport { data as dataNode } from '../../Formula/utils'\r\nimport IConditional from \"../../Types/IConditional\"\r\nimport { evalIfFunc } from \"../../Util/Util\"\r\nimport BootstrapTooltip from \"../BootstrapTooltip\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../FieldDisplay\"\r\nimport ConditionalSelector from \"./ConditionalSelector\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  hideHeader?: boolean,\r\n  hideDesc?: boolean,\r\n  fieldContext?: dataContextObj\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false, fieldContext }: ConditionalDisplayProps) {\r\n  const dataContext = useContext(DataContext)\r\n  const { data } = dataContext\r\n  // TODO: as Data\r\n  const canShow = conditional.canShow ? !!(fieldContext ? data.get(dataNode(conditional.canShow, { target: fieldContext.data.data[0] } as Data)).value : data.get(conditional.canShow).value) : true\r\n  if (!canShow) return null\r\n  const condVal = data.get(conditional.value).value\r\n\r\n  const description = !hideDesc && evalIfFunc(conditional.description, data)\r\n  let { icon, title, action } = conditional.header ?? {}\r\n  icon = evalIfFunc(icon, data)\r\n  const fields = condVal && conditional.states[condVal]?.fields\r\n  const displayTitle = hideDesc ? title : title && <BootstrapTooltip placement=\"top\" title={<Typography>{description}</Typography>}>\r\n    <span>{title} <FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n  return <CardDark>\r\n    {!hideHeader && conditional.header && <CardHeader avatar={icon} title={displayTitle} action={action} titleTypographyProps={{ variant: \"subtitle2\" }} />}\r\n    {!hideHeader && conditional.header && <Divider />}\r\n    {!!conditional.name && <CardContent>\r\n      <ConditionalSelector\r\n        conditional={conditional}\r\n        conditionalValue={condVal} />\r\n    </CardContent>}\r\n    {fields &&\r\n      <FieldDisplayList sx={{ m: 0 }}>\r\n        {fields.map((field, i) => <FieldDisplay key={i} field={field} fieldContext={fieldContext} component={ListItem} />)}\r\n      </FieldDisplayList>\r\n    }\r\n  </CardDark>\r\n}\r\n","import { Box, CardHeader, ListItem, Divider, CardContent } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../DataContext\"\r\nimport { DocumentSection } from \"../Types/sheet\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\nexport default function DocumentDisplay({ sections, teamBuffOnly }: { sections: DocumentSection[], teamBuffOnly?: boolean }) {\r\n  if (!sections.length) return null\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sections.map((s, i) => <SectionDisplay section={s} key={i} teamBuffOnly={teamBuffOnly} />)}</Box>\r\n}\r\n\r\nfunction SectionDisplay({ section, teamBuffOnly }: { section: DocumentSection, teamBuffOnly?: boolean }) {\r\n  const { data } = useContext(DataContext)\r\n  if (section.canShow && !section.canShow(data)) return null\r\n  if (teamBuffOnly && !section.teamBuff && !section.conditional?.teamBuff) return null\r\n  const talentText = evalIfFunc(section.text, data)\r\n  const description = evalIfFunc(section.fieldsDescription, data)\r\n  const fields = section.fields ?? []\r\n  let { icon, title, action } = section.fieldsHeader ?? {}\r\n  icon = evalIfFunc(icon, data)\r\n  return <>\r\n    {!teamBuffOnly && talentText && <div>{talentText}</div>}\r\n    {(!teamBuffOnly || section.teamBuff) && <CardDark>\r\n      {teamBuffOnly && talentText && <CardContent>{talentText}</CardContent>}\r\n      {section.fieldsHeader && <CardHeader avatar={icon} title={title} action={action} titleTypographyProps={{ variant: \"subtitle2\" }} />}\r\n      {section.fieldsHeader && <Divider />}\r\n      {teamBuffOnly && description && <CardContent>{description}</CardContent>}\r\n      {fields.length > 0 && <FieldDisplayList>\r\n        {fields?.map?.((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\r\n      </FieldDisplayList>}\r\n    </CardDark>}\r\n    {!!section.conditional && (!teamBuffOnly || section.conditional.teamBuff) && <ConditionalDisplay conditional={section.conditional} hideDesc={!teamBuffOnly} />}\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, List, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { DataContext, dataContextObj } from \"../DataContext\";\r\nimport { NodeDisplay } from \"../Formula/api\";\r\nimport KeyMap, { valueString } from \"../KeyMap\";\r\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\nimport ColorText from \"./ColoredText\";\r\nimport StatIcon from \"./StatIcon\";\r\nimport { data as dataNode } from '../Formula/utils'\r\nimport { Data } from \"../Formula/type\";\r\nimport { Groups } from \"@mui/icons-material\";\r\n\r\nexport default function FieldDisplay({ field, fieldContext, component }: { field: IFieldDisplay, fieldContext?: dataContextObj, component?: React.ElementType }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\r\n  if (!canShow) return null\r\n  if (\"node\" in field) {\r\n    // TODO: remove as Data\r\n    const node = fieldContext ? data.get(dataNode(field.node, { target: fieldContext.data.data[0] } as Data)) : data.get(field.node)\r\n    if (node.isEmpty) return null\r\n    if (oldData) {\r\n      const oldNode = fieldContext ? oldData.get(dataNode(field.node, { target: fieldContext.oldData!.data[0] } as Data)) : oldData.get(field.node)\r\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\r\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\r\n    }\r\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\r\n  }\r\n  return <BasicFieldDisplay field={field} component={component} />\r\n}\r\n\r\nfunction BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\r\n  const { data } = useContext(DataContext)\r\n  const v = evalIfFunc(field.value, data)\r\n  const variant = evalIfFunc(field.variant, data)\r\n  const text = field.text && <span>{field.text}</span>\r\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\r\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport function NodeFieldDisplay({ node, oldValue, suffix, component }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType }) {\r\n  if (node.isEmpty) return null\r\n\r\n  suffix = suffix && <span>{suffix}</span>\r\n  const icon = node.info.key && StatIcon[node.info.key]\r\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\r\n  const isTeamBuff = node.info.isTeamBuff\r\n  const fieldFormulaText = node.formula\r\n  let fieldVal = \"\" as Displayable\r\n  if (oldValue) {\r\n    const diff = node.value - oldValue\r\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\r\n  } else fieldVal = valueString(node.value, node.unit)\r\n  const formulaTextOverlay = !!node.formula && <BootstrapTooltip placement=\"top\" title={<Typography>{fieldFormulaText}</Typography>}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\r\n    <Typography sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >{fieldVal}{formulaTextOverlay}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));\r\n","import { createContext } from \"react\"\r\nimport CharacterSheet from \"./Data/Characters/CharacterSheet\"\r\nimport { UIData } from \"./Formula/uiData\"\r\nimport { ICachedCharacter } from \"./Types/character\"\r\nimport { CharacterKey } from \"./Types/consts\"\r\nimport { ICachedWeapon } from \"./Types/weapon\"\r\nimport WeaponSheet from \"./Data/Weapons/WeaponSheet\"\r\nimport { characterReducerAction } from \"./ReactHooks/useCharacterReducer\";\r\nexport type TeamData = Partial<Record<CharacterKey, {\r\n  target: UIData\r\n  buffs: Dict<CharacterKey, UIData>\r\n  character: ICachedCharacter\r\n  weapon: ICachedWeapon\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet,\r\n}>>\r\nexport type dataContextObj = {\r\n  character: ICachedCharacter\r\n  characterSheet: CharacterSheet\r\n  data: UIData\r\n  oldData?: UIData\r\n  mainStatAssumptionLevel: number\r\n  teamData: TeamData\r\n  characterDispatch: (action: characterReducerAction) => void\r\n}\r\n\r\n// If using this context without a Provider, then stuff will crash...\r\n// In theory, none of the components that uses this context should work without a provider...\r\nexport const DataContext = createContext({} as dataContextObj)\r\n","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ColorText from \"../Components/ColoredText\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel, lowRarityMilestoneLevels } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { DataContext } from \"../DataContext\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const { data } = useContext(DataContext)\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = useWeapon(propWeaponId)\r\n  const { key = \"\", level = 0, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\r\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  //check the levels when switching from a 5* to a 1*, for example.\r\n  useEffect(() => {\r\n    if (!weaponSheet || !weaponDispatch || weaponSheet.key !== weapon?.key) return\r\n    if (weaponSheet.rarity <= 2 && (level > 70 || ascension > 4)) {\r\n      const [level, ascension] = lowRarityMilestoneLevels[0]\r\n      weaponDispatch({ level, ascension })\r\n    }\r\n  }, [weaponSheet, weapon, weaponDispatch, level, ascension])\r\n\r\n\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container spacing={1}>\r\n            <Grid item >\r\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n              <ButtonGroup>\r\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n                {weaponSheet?.hasRefinement && <DropdownButton title={`Refinement ${refinement}`}>\r\n                  <MenuItem>Select Weapon Refinement</MenuItem>\r\n                  <Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </MenuItem>)}\r\n                </DropdownButton>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item >\r\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n                <CustomNumberInputButtonGroupWrapper >\r\n                  <CustomNumberInput onChange={setLevel} value={level}\r\n                    startAdornment=\"Lvl. \"\r\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                  />\r\n                </CustomNumberInputButtonGroupWrapper>\r\n                {weaponSheet && <Button sx={{ pl: 1 }} disabled={!weaponSheet.ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>}\r\n                {weaponSheet && <DropdownButton title={\"Select Level\"} >\r\n                  {weaponSheet.milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    const selected = lv === level && as === ascension\r\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                  })}\r\n                </DropdownButton>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n                {lock ? \"Locked\" : \"Unlocked\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!!onClose && <Grid item  >\r\n          <CloseButton onClick={onClose} />\r\n        </Grid>}\r\n        <Grid item >\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, data.get(input.charKey).value as CharacterKey)} />\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      {weaponSheet && weaponUIData && <Grid container spacing={1.5}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Grid container spacing={1.5}>\r\n            <Grid item xs={6} sm={12}>\r\n              <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            </Grid>\r\n            <Grid item xs={6} sm={12}>\r\n              <Typography><small>{weaponSheet.description}</small></Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9}>\r\n          <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {weapon && WeaponSheet.getLevelString(weapon)} {weaponSheet.rarity > 2 && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\r\n          <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n          <Typography variant=\"subtitle1\">{weaponSheet.passiveName}</Typography>\r\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\r\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n            <CardDark >\r\n              <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n              <Divider />\r\n              <FieldDisplayList>\r\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\r\n                  const n = weaponUIData.get(node)\r\n                  if (n.isEmpty || !n.value) return null\r\n                  return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\r\n                })}\r\n              </FieldDisplayList>\r\n            </CardDark>\r\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>}\r\n    </CardContent>\r\n    {\r\n      footer && id && <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n          </Grid>\r\n          {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n        </Grid>\r\n      </CardContent>\r\n    }\r\n  </CardLight >\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12.75c1.63 0 3.07.39 4.24.9 1.08.48 1.76 1.56 1.76 2.73V18H6v-1.61c0-1.18.68-2.26 1.76-2.73 1.17-.52 2.61-.91 4.24-.91zM4 13c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm1.13 1.1c-.37-.06-.74-.1-1.13-.1-.99 0-1.93.21-2.78.58C.48 14.9 0 15.62 0 16.43V18h4.5v-1.61c0-.83.23-1.61.63-2.29zM20 13c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4 3.43c0-.81-.48-1.53-1.22-1.85-.85-.37-1.79-.58-2.78-.58-.39 0-.76.04-1.13.1.4.68.63 1.46.63 2.29V18H24v-1.57zM12 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3z\"\n}), 'Groups');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.99 11 3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\"\n}), 'SwapHoriz');"],"names":["BootstrapTooltip","styled","className","props","arrow","classes","popper","theme","tooltipClasses","color","palette","common","black","backgroundColor","maxWidth","CharacterDropdownButton","value","onChange","unSelectText","unSelectIcon","inventory","noUnselect","filter","t","useTranslation","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","characterSheet","characterKeys","_getCharKeys","ck","sort","title","name","startIcon","thumbImg","src","thumbImgSide","onClick","selected","disabled","variant","noWrap","CharacterMenuItemArray","selectedCharacterKey","map","characterKey","StyledInputBase","InputBase","primary","main","transition","dark","Wrapper","Button","padding","overflow","width","height","CustomNumberInputButtonGroupWrapper","children","disableRipple","disableFocusRipple","disableTouchRipple","CustomNumberInput","float","useState","number","setNumber","focused","setFocus","parseFunc","useMemo","parseFloat","parseInt","onBlur","useCallback","onFocus","useEffect","onInputChange","e","target","onKeyDOwn","key","type","inputProps","step","onKeyDown","ConditionalSelector","conditional","conditionalValue","DataContext","character","characterDispatch","setConditional","v","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","Object","keys","states","length","entries","stateKey","st","badge","SqBadge","fullWidth","size","undefined","CheckBox","CheckBoxOutlineBlank","state","DropdownButton","MenuItem","Divider","ConditionalDisplay","hideHeader","hideDesc","fieldContext","data","canShow","get","dataNode","condVal","description","evalIfFunc","header","icon","action","fields","displayTitle","placement","Typography","faInfoCircle","CardDark","CardHeader","avatar","titleTypographyProps","CardContent","FieldDisplay","sx","m","field","i","component","ListItem","DocumentDisplay","sections","teamBuffOnly","Box","display","flexDirection","gap","s","SectionDisplay","section","teamBuff","talentText","text","fieldsDescription","fieldsHeader","oldData","node","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","justifyContent","alignItems","toFixed","fixed","unit","info","StatIcon","fieldText","KeyMap","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","valueString","formulaTextOverlay","cursor","faQuestionCircle","FieldDisplayList","List","borderRadius","shape","margin","contentDark","contentDarker","createContext","WeaponDisplayCard","propWeaponId","weaponId","footer","onClose","weapon","useWeapon","level","refinement","ascension","lock","location","id","weaponSheet","WeaponSheet","weaponTypeKey","weaponType","weaponDispatch","newWeapon","updateWeapon","setLevel","clamp","ascensionMaxLevel","ascenML","setAscension","lowerAscension","weaponFilter","ws","initialWeaponFilter","equipOnChar","charKey","setWeaponLocation","cs","showModal","setshowModal","img","imgAwaken","rarity","lowRarityMilestoneLevels","weaponUIData","computeUIData","dataObjForWeapon","py","container","spacing","item","flexGrow","show","onHide","onSelect","k","hasRefinement","Array","bgcolor","contentLight","startAdornment","min","max","textAlign","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","SwapBtn","onChangeId","input","xs","sm","process","stars","passiveName","gutterBottom","passiveDescription","n","document","large","setShow","close","clickHandler","weaponSheets","weaponIdList","weapons","wKey","dbWeapon","_getWeapon","open","Assets","md","lg","createSvgIcon","_jsx","d"],"sourceRoot":""}