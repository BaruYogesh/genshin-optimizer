{"version":3,"sources":["Components/EquipmentDropdown.tsx","Character/CharacterUtil.tsx","Weapon/WeaponCard.tsx","Weapon/WeaponSelection.tsx","TestPage/TestDisplay.tsx"],"names":["EquipmentDropdown","location","onEquip","weaponTypeKey","disableUnequip","editable","t","useTranslation","characterSheet","usePromise","CharacterSheet","get","locationName","name","nameWIthIcon","icon","faBriefcase","Toggle","className","Menu","Item","onClick","Divider","onSelect","getFormulaTargetsDisplayHeading","key","weaponSheet","artifactSheets","eleKey","startsWith","subkey","split","getTalentOfKey","setKey","num","variant","initialCharacter","level","ascension","hitMode","reactionMode","equippedArtifacts","Object","fromEntries","allSlotKeys","map","sKey","equippedWeapon","conditionalValues","baseStatOverrides","buildSettings","initialBuildSettings","talent","auto","skill","burst","infusionAura","constellation","WeaponCard","weaponId","onEdit","onDelete","cardClassName","bg","footer","database","useContext","DatabaseContext","useState","undefined","databaseWeapon","updateDatabaseWeapon","useEffect","followWeapon","weapon","WeaponSheet","refine","id","weaponType","weaponMainVal","getMainStatValue","toFixed","Stat","fixedUnit","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","weaponLevelName","getLevelString","statMap","passiveName","push","text","Header","src","Assets","weaponTypes","Body","xs","img","rarity","thumbnail","stars","colored","statKey","statVal","unit","getStatUnit","StatIcon","getStatName","process","Footer","charKey","setWeaponLocation","size","faEdit","disabled","faTrashAlt","filterReducer","oldFilter","newFilter","WeaponSelectionModal","show","onHide","filter","weaponSheets","getAll","useReducer","weaponFilter","weaponFilterDispatch","weaponIdList","Set","allWeaponKeys","wKey","sort","a","b","contentClassName","allWeaponTypeKeys","faTimes","weaponKey","lg","md","WeaponSelectionButton","setshow","as","ButtonGroup","TestDisplay","characterKey","tabName"],"mappings":"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","file":"static/js/16.bad46880.chunk.js","sourcesContent":["import { faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport { CharacterKey, WeaponTypeKey } from \"../Types/consts\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\nimport { CharacterSelectionDropdownList } from \"../Character/CharacterSelection\";\r\n\r\nexport default function EquipmentDropdown({ location, onEquip, weaponTypeKey, disableUnequip = false, editable = false }: { location: CharacterKey | \"\", onEquip: (charKey: CharacterKey) => void, weaponTypeKey?: WeaponTypeKey, disableUnequip?: boolean, editable?: boolean }) {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const characterSheet = usePromise(CharacterSheet.get(location), [location])\r\n  const locationName = characterSheet?.name ? characterSheet.nameWIthIcon : <span><FontAwesomeIcon icon={faBriefcase} /> {t`filterLocation.inventory`}</span>\r\n\r\n  return editable ? <Dropdown>\r\n    <Dropdown.Toggle className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {!disableUnequip && <><Dropdown.Item onClick={() => { /* TODO */ }}><FontAwesomeIcon icon={faBriefcase} /> Inventory</Dropdown.Item>\r\n        <Dropdown.Divider /></>}\r\n      <CharacterSelectionDropdownList onSelect={onEquip} weaponTypeKey={weaponTypeKey} />\r\n    </Dropdown.Menu>\r\n  </Dropdown> : locationName\r\n}","import { Badge } from \"react-bootstrap\"\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\"\r\nimport { initialBuildSettings } from \"../Build/BuildSetting\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { allSlotKeys, ArtifactSetKey, CharacterKey, ElementKey } from \"../Types/consts\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport CharacterSheet from \"./CharacterSheet\"\r\n\r\nexport function getFormulaTargetsDisplayHeading(key: string, { characterSheet, weaponSheet, artifactSheets }: { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet> }, eleKey: ElementKey = \"anemo\") {\r\n  if (key === \"basicKeys\") return \"Basic Stats\"\r\n  else if (key === \"genericAvgHit\") return \"Generic Optimization Values\"\r\n  else if (key === \"transReactions\") return \"Transformation Reaction\"\r\n  else if (key.startsWith(\"talentKey_\")) {\r\n    const subkey = key.split(\"talentKey_\")[1]\r\n    return (characterSheet?.getTalentOfKey(subkey, eleKey)?.name ?? subkey)\r\n  } else if (key.startsWith(\"weapon_\")) {\r\n    const subkey = key.split(\"weapon_\")[1]\r\n    return (weaponSheet?.name ?? subkey)\r\n  } else if (key.startsWith(\"artifact_\")) {\r\n    const [, setKey, num] = key.split('_')\r\n    return <span>{artifactSheets[setKey]?.name} <Badge variant=\"success\">{num}-Set</Badge></span>\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key, // the game character this is based off\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])) as any,\r\n    equippedWeapon: \"\",\r\n    conditionalValues: {},\r\n    baseStatOverrides: {}, // overriding the baseStat\r\n    buildSettings: initialBuildSettings(),\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n  }\r\n}","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { Button, Card, Col, Image, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport EquipmentDropdown from \"../Components/EquipmentDropdown\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype CharacterCardProps = { weaponId: string, onEdit?: (weaponId: string) => void, onClick?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, cardClassName: string, bg?: string, footer?: boolean, editable?: boolean }\r\nexport default function WeaponCard({ weaponId, onEdit, onDelete, onClick, cardClassName = \"\", bg = \"\", footer = false, editable = false }: CharacterCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseWeapon, updateDatabaseWeapon] = useState(undefined as ICachedWeapon | undefined)\r\n  useEffect(() =>\r\n    weaponId ? database.followWeapon(weaponId, updateDatabaseWeapon) : undefined,\r\n    [weaponId, updateDatabaseWeapon, database])\r\n\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refine, id } = weapon\r\n  const equipOnChar = (charKey: CharacterKey) => database.setWeaponLocation(weaponId, charKey)\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponLevelName = WeaponSheet.getLevelString(weapon)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header>\r\n      <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /> <h5 className=\"d-inline\">{weaponSheet.name}</h5>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onClick?.(weaponId)} className={onClick ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={weaponSheet.img} className={`thumb-big grad-${weaponSheet.rarity}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h5 className=\"mb-0\">Level {weaponLevelName} </h5>\r\n          <h5 >Refinement {refine}</h5>\r\n          <h6 className=\"mb-0\"><Stars stars={weaponSheet.rarity} colored /></h6>\r\n          {/* <h3 className=\"mb-0\"></h3> */}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statMap.map(([statKey, statVal]) => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIcon[statKey]} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n      {process.env.NODE_ENV === \"development\" && <span className=\"text-warning\">{id || `\"\"`} </span>}\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Row>\r\n        <Col >\r\n          <EquipmentDropdown location={weapon?.location} onEquip={equipOnChar} weaponTypeKey={weaponTypeKey} disableUnequip={!!weapon.location} editable={editable} />\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(weaponId)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              disabled={!!weapon.location}\r\n              onClick={() => onDelete(weaponId)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useReducer, useState } from \"react\"\r\nimport { Button, ButtonGroup, Card, Col, Image, Modal, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey } from \"../Types/consts\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean\r\n}\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\nexport function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n  return <Modal show={show} size=\"xl\" contentClassName=\"bg-transparent\" onHide={onHide}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {allWeaponTypeKeys.map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"secondary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}>\r\n                  <h3 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h3></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <Button onClick={onHide} variant=\"danger\"><FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          {weaponIdList.map(weaponKey => {\r\n            const weaponSheet = weaponSheets[weaponKey]\r\n            return <Col key={weaponKey} lg={3} md={4} className=\"mb-2\">\r\n              <Button className=\"w-100 h-100 align-top\" variant=\"darkcontent\" onClick={() => { onHide(); onSelect(weaponKey) }}>\r\n                <Row className=\"h-100\">\r\n                  <Col xs=\"auto\" className=\"pr-0\">\r\n                    <Image src={weaponSheet.img} className={`thumb-big grad-${weaponSheet.rarity}star p-0`} thumbnail />\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponSheet.weaponType]} className=\"inline-icon\" /> {weaponSheet.name}</h5>\r\n                    <h6 className=\"mb-0\"><Stars stars={weaponSheet.rarity} colored /></h6>\r\n                  </Col>\r\n                </Row>\r\n              </Button>\r\n            </Col>\r\n          })}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nexport function WeaponSelectionButton({ weaponSheet, onSelect, filter }: { weaponSheet?: WeaponSheet, onSelect: (wKey: WeaponKey) => void, filter?: (sheet: WeaponSheet) => boolean }) {\r\n  const [show, setshow] = useState(false)\r\n  return <>\r\n    <Button as={ButtonGroup} onClick={() => setshow(true)} className=\"text-nowrap\">{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n    <WeaponSelectionModal show={show} onHide={() => setshow(false)} onSelect={onSelect} filter={filter} />\r\n  </>\r\n}","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nexport default function TestDisplay() {\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterKey=\"Traveler\" tabName=\"talent\" />\r\n  </Container>\r\n}\r\n"],"sourceRoot":""}