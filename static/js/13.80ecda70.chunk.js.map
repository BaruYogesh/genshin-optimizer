{"version":3,"sources":["Components/CustomFormControl.tsx","Components/FieldDisplay.tsx","../node_modules/react-bootstrap/esm/Tooltip.js","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","../node_modules/react-bootstrap/esm/InputGroup.js","Weapon/WeaponStatsCard.tsx","Weapon/WeaponDisplayCard.tsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"names":["CustomFormControl","value","onChange","className","disabled","float","placeholder","allowEmpty","max","min","useState","state","setState","sendChange","useCallback","undefined","parseFunc","parseFloat","parseInt","useEffect","toString","aria-label","type","e","target","onBlur","onKeyDown","key","FieldDisplay","field","index","useContext","buildContext","newBuild","equippedBuild","compareBuild","build","canShow","useMemo","fixedVal","fixed","fieldVal","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","toFixed","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","id","icon","faQuestionCircle","style","cursor","unit","Item","variant","_excluded","Tooltip","React","forwardRef","_ref","ref","bsPrefix","children","arrowProps","props","popper","show","_objectWithoutPropertiesLoose","useBootstrapPrefix","primaryPlacement","split","createElement","_extends","role","classNames","defaultProps","displayName","ConditionalSelector","conditional","conditionalValue","setConditional","name","stats","conditionalNum","conditionalStateKey","states","Object","values","text","evalIfFunc","maxStack","badge","Badge","Dropdown","Toggle","size","whiteSpace","Menu","onClick","entries","map","i","stateKey","condial","Fragment","Array","keys","v","stack","Button","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","fieldClassName","Conditional","resolve","conditionalStats","fields","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","conditionalValues","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","DocumentDisplay","sections","section","talentText","length","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","hasValidation","_ref$as","as","InputGroupWithExtras","Text","Radio","Checkbox","Append","Prepend","WeaponStatsCard","title","statsVals","WeaponDisplayCard","propWeaponId","weaponId","charData","footer","onClose","database","DatabaseContext","useForceUpdate","databaseToken","onDatabaseUpdate","buildContextObj","weapon","_getWeapon","level","refine","ascension","location","weaponSheet","usePromise","WeaponSheet","get","weaponTypeKey","weaponType","followWeapon","weaponDispatch","newWeapon","updateWeapon","setLevel","clamp","ascensionMaxLevel","findIndex","ascenML","setAscension","lowerAscension","refineIndex","characterSheet","CharacterSheet","weaponFilter","ws","Row","Col","ButtonGroup","WeaponSelection","onSelect","k","filter","ItemText","Divider","xs","ambiguousLevel","milestoneLevels","lv","lvlstr","faTimes","localDatabase","SwapBtn","onChangeId","setWeaponLocation","character","Body","substatKey","getSubStatKey","weaponDisplayMainVal","getMainStatValue","weaponDisplaySubVal","getSubStatValue","weaponPassiveName","passiveName","weaponBonusStats","document","md","lg","Image","src","img","rarity","thumbnail","description","process","getLevelString","stars","passiveDescription","Provider","setCompareBuild","atk","Footer","EquipmentDropdown","onEquip","cKey","disableUnequip","setShow","close","clickHandler","weaponSheets","getAll","weaponIdList","weapons","wKey","dbWeapon","faExchangeAlt","Modal","contentClassName","onHide","Assets","weaponTypes","WeaponCard","cardClassName","active","ListGroupItem","action","handleClick","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","href","horizontal","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav"],"mappings":"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","file":"static/js/13.80ecda70.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\ntype props = {\r\n  value: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  className?: string\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  placeholder?: string,\r\n  allowEmpty?: boolean,\r\n  max?: string | number,\r\n  min?: string | number,\r\n}\r\nexport default function CustomFormControl({ value, onChange, className = \"\", disabled = false, float = false, placeholder, allowEmpty = false, max, min }: props) {\r\n  const [state, setState] = useState(\"\")\r\n  const sendChange = useCallback(\r\n    () => {\r\n      if (allowEmpty && state === \"\") return onChange(undefined)\r\n      if (state === \"\") return onChange(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state))\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setState(value?.toString() ?? \"\"), [value, setState]) // update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className={`hide-appearance ${className}`}\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={(e: any) => setState(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={(e: any) => e.key === \"Enter\" && sendChange()}\r\n    max={max}\r\n    min={min}\r\n  />\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { buildContext } from \"../Build/Build\";\r\nimport Character from \"../Character/Character\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\n\r\nexport default function FieldDisplay({ field, index, className = \"p-2\" }: { field: IFieldDisplay, index: number, className?: string }) {\r\n  const { newBuild, equippedBuild, compareBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild)\r\n  const canShow = useMemo(() => build ? field?.canShow?.(build) : false, [field, build])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", build)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      //compareAgainstEquipped\r\n      if (compareBuild && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareBuild, fixedVal, equippedBuild, field, build])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", build), [field, build])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", build), [field, build])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip id=\"field-formula\">{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, build])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", build), [field, build])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"placement\", \"className\", \"style\", \"children\", \"arrowProps\", \"popper\", \"show\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  placement: 'right'\n};\nvar Tooltip = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      placement = _ref.placement,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      arrowProps = _ref.arrowProps,\n      _ = _ref.popper,\n      _2 = _ref.show,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n\n  var _ref2 = (placement == null ? void 0 : placement.split('-')) || [],\n      primaryPlacement = _ref2[0];\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    style: style,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, \"bs-tooltip-\" + primaryPlacement)\n  }, props), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"arrow\"\n  }, arrowProps)), /*#__PURE__*/React.createElement(\"div\", {\n    className: bsPrefix + \"-inner\"\n  }, children));\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled?: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial]: any, i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n          <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setConditional([0])}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n            <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n              {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n            </Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n        <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { useCallback, useContext, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\r\nimport IConditional from \"../Types/IConditional\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  characterDispatch: (any) => void,//TODO: characterDispatch type\r\n  fieldClassName?: string\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, characterDispatch, fieldClassName }: ConditionalDisplayProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    if (!stats) return\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else if (conditional.keys)\r\n      layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats, characterDispatch])\r\n\r\n  if (!canShow || !stats) return null\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} field={field} className={fieldClassName} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","import { useContext } from \"react\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport { DocumentSection } from \"../Types/character\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport ConditionalDisplay from \"./ConditionalDisplay\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\n\r\ntype SkillDisplayCardProps = {\r\n  sections: DocumentSection[],\r\n  characterDispatch: (any) => void,\r\n}\r\nexport default function DocumentDisplay({ sections, characterDispatch }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  return <div className=\"w-100\">{sections?.map((section, i) => {\r\n    if (!section.canShow!(build)) return null\r\n    const talentText = evalIfFunc(section.text, build)\r\n    const fields = section.fields ?? []\r\n    return <div className=\"my-2\" key={\"section\" + i}>\r\n      <div>\r\n        <div className=\"mb-2\">{talentText}</div>\r\n        {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n          {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} field={field} />)}\r\n        </ListGroup>}\r\n      </div>\r\n      {!!section.conditional && <ConditionalDisplay conditional={section.conditional} characterDispatch={characterDispatch} />}\r\n    </div>\r\n  })}</div>\r\n}\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"bsPrefix\", \"size\", \"hasValidation\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      hasValidation = _ref.hasValidation,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, hasValidation && 'has-validation')\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport FieldDisplay from \"../Components/FieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nexport default function WeaponStatsCard({ title, statsVals = {}, stats }: { title: Displayable, statsVals?: object, stats: ICalculatedStats }) {\r\n  if ((Object.keys(statsVals ?? {}) as any).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay key={i} index={i} field={field} className=\"px-3 py-2\" />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","import { faExchangeAlt, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport { Badge, Button, ButtonGroup, Card, Col, Dropdown, Image, InputGroup, Modal, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport EquipmentDropdown from \"../Components/EquipmentDropdown\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/CharacterData\"\r\nimport { DatabaseContext, database as localDatabase } from \"../Database/Database\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { useForceUpdate, usePromise } from \"../Util/ReactUtil\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport { WeaponSelectionButton } from \"./WeaponSelection\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\nimport WeaponStatsCard from \"./WeaponStatsCard\"\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  charData?: {\r\n    character: ICachedCharacter,\r\n    characterSheet: CharacterSheet,\r\n    equippedBuild?: ICalculatedStats\r\n    newBuild?: ICalculatedStats\r\n    characterDispatch: (any) => void\r\n  }\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  charData,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  const buildContextObj = useContext(buildContext)\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(propWeaponId!)!,\r\n    [propWeaponId, databaseToken, database])\r\n  const { key, level, refine, ascension } = weapon\r\n  const { location = \"\", id } = weapon as Partial<ICachedWeapon>\r\n  const weaponSheet: WeaponSheet | undefined = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  useEffect(() =>\r\n    propWeaponId ? database.followWeapon(propWeaponId, onDatabaseUpdate) : undefined,\r\n    [propWeaponId, onDatabaseUpdate, database])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const build = { ...(charData ? (charData.newBuild ?? charData.equippedBuild) : { weapon: { refineIndex: refine - 1, level, ascension } }) } as any\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"mb-n2\">\r\n            <Col className=\"mb-2\">\r\n              <InputGroup >\r\n                <ButtonGroup as={InputGroup.Prepend}>\r\n                  <WeaponSelectionButton weaponSheet={weaponSheet} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} />\r\n                  <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle as={Button}>Refinement {refine}</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.ItemText>\r\n                        <span>Select Weapon Refinement</span>\r\n                      </Dropdown.ItemText>\r\n                      <Dropdown.Divider />\r\n                      {[...Array(5).keys()].map(key =>\r\n                        <Dropdown.Item key={key} onClick={() => weaponDispatch({ refine: key + 1 })}>\r\n                          {`Refinement ${key + 1}`}\r\n                        </Dropdown.Item>)}\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </ButtonGroup>\r\n              </InputGroup>\r\n            </Col>\r\n            <Col className=\"mb-2\" xs=\"auto\">\r\n              <InputGroup >\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text><strong>Lvl. </strong></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <InputGroup.Append>\r\n                  <CustomFormControl placeholder={undefined} onChange={setLevel} value={level} min={1} max={90} />\r\n                </InputGroup.Append>\r\n                <ButtonGroup as={InputGroup.Append}>\r\n                  <Button disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n                  <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle as={Button}>Select Level</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                      {milestoneLevels.map(([lv, as]) => {\r\n                        const sameLevel = lv === ascensionMaxLevel[as]\r\n                        const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                        return <Dropdown.Item key={`${lv}/${as}`} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</Dropdown.Item>\r\n                      })}\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </ButtonGroup>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {!!onClose && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n        {!!charData && database === localDatabase && <Col xs=\"auto\">\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, charData.character.key)} />\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      {(() => {\r\n        if (!weaponSheet) return null\r\n        const substatKey = weaponSheet.getSubStatKey()\r\n        const weaponDisplayMainVal = weaponSheet.getMainStatValue(level, ascension)\r\n        const weaponDisplaySubVal = weaponSheet.getSubStatValue(level, ascension)\r\n        const weaponPassiveName = weaponSheet.passiveName\r\n        const weaponBonusStats = weaponSheet.stats(build)\r\n        const sections = weaponSheet.document\r\n\r\n        return <Row className=\"mb-n2\">\r\n          <Col xs={12} md={3} lg={4}>\r\n            <Image src={weaponSheet.img} className={`w-100 h-auto grad-${weaponSheet.rarity}star`} thumbnail />\r\n            <small>{weaponSheet.description}</small>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"mb-0\">{process.env.NODE_ENV === \"development\" && <span className=\"text-warning\">{id || `\"\"`} </span>}{weaponSheet.name} Lv. {WeaponSheet.getLevelString(weapon)} {weaponPassiveName && <Badge variant=\"info\">Refinement {refine}</Badge>}</h5>\r\n            <div className=\"mb-2\"><Stars stars={weaponSheet.rarity} /></div>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <div className=\"mb-2\">{weaponPassiveName && weaponSheet.passiveDescription(build)}</div>\r\n            {build && <buildContext.Provider value={charData ? buildContextObj : { equippedBuild: build, newBuild: undefined, compareBuild: false, setCompareBuild: undefined }}>\r\n              <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: substatKey ? weaponDisplaySubVal : undefined }} stats={build} />\r\n              <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            </buildContext.Provider>}\r\n            {charData && sections ? (() => {\r\n              const { equippedBuild, newBuild, characterDispatch } = charData\r\n              return < DocumentDisplay  {...{ sections, equippedBuild, newBuild, characterDispatch }} />\r\n            })() : null}\r\n          </Col>\r\n        </Row>\r\n      })()}\r\n    </Card.Body>\r\n    {footer && id && <Card.Footer><Row>\r\n      <Col><EquipmentDropdown location={location} onEquip={cKey => database.setWeaponLocation(id, cKey)} weaponTypeKey={weaponSheet?.weaponType} disableUnequip={!!weapon.location} disabled={database === localDatabase} /></Col>\r\n      {!!onClose && <Col xs=\"auto\"><Button variant=\"danger\" onClick={onClose}>Close</Button></Col>}\r\n    </Row></Card.Footer>}\r\n  </Card>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button variant=\"info\" onClick={open} ><FontAwesomeIcon icon={faExchangeAlt} /> SWAP WEAPON</Button>\r\n    <Modal show={show} size=\"xl\" contentClassName=\"bg-transparent\" onHide={close}>\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>{weaponTypeKey ? <Image src={Assets.weaponTypes[weaponTypeKey]} className=\"inline-icon\" /> : null} <h5 className=\"mb-0 d-inline\">Swap Weapon</h5></Col>\r\n            <Col xs=\"auto\">\r\n              <Button onClick={close} variant=\"danger\"><FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            {weaponIdList.map(weaponId =>\r\n              <Col key={weaponId} lg={4} md={6} className=\"mb-2\">\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  // header={undefined}\r\n                  cardClassName=\"h-100\"\r\n                  // characterKey={charKey}\r\n                  onClick={clickHandler}\r\n                  footer\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Modal></>\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"onClick\"];\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // eslint-disable-next-line no-nested-ternary\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;"],"sourceRoot":""}