{"version":3,"sources":["Components/StarDisplay.tsx","Assets/Weapon-class-bow-icon.png","Assets/Assets.ts","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Character/Character.ts","Character/CharacterSelection.tsx","Components/EquipmentDropdown.tsx","StatDependency.ts","Weapon/WeaponUtil.ts","Character/CharacterUtil.tsx","Weapon/WeaponCard.tsx","Weapon/WeaponSelection.tsx","../node_modules/react-bootstrap/esm/ToastContext.js","../node_modules/react-bootstrap/esm/ToastHeader.js","../node_modules/react-bootstrap/esm/ToastBody.js","../node_modules/react-bootstrap/esm/Toast.js","FlexPage/CodingUtil.ts","FlexPage/Schemas.ts","FlexPage/FlexUtil.ts","FlexPage/FlexDisplay.tsx"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","Assets","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","Character","this","Error","getElementalName","elementalKey","ElementalData","name","getLevelString","character","level","ascensionMaxLevel","ascension","getTalentFieldValue","field","key","stats","defVal","evalIfFunc","hasOverride","statKey","baseStatOverrides","getBaseStatValue","characetSheet","weaponSheet","includes","characterStatBase","getStatValueWithOverride","characterSheet","calculateBuild","database","artifactSheets","mainStatAssumptionLevel","artifacts","Object","fromEntries","entries","equippedArtifacts","artid","_getArt","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","values","forEach","art","mainStatKey","mainStatValue","rarity","Math","max","min","substats","substat","value","mergeStats","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","length","condStats","resolve","val","id","dependencies","GetDependencies","modifiers","PreprocessFormulas","preprocessedStats","formula","characterKey","elementKey","hitMode","infusionAura","reactionMode","talent","constellation","equippedWeapon","weapon","_getWeapon","defaultInitialWeapon","weaponTypeKey","statKeys","characterHP","getBase","characterDEF","characterATK","characterLevel","characterEle","weaponType","tlvl","refineIndex","refine","allElements","eleKey","overrides","hasOwnProperty","specialStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","getTalentStatsAll","s","weaponATK","getMainStatValue","weaponSubKey","getSubStatKey","getSubStatValue","weaponCond","otherCond","canShow","getDisplayStatKeys","basicKeys","isAutoElemental","push","transReactions","ElementToReactionKeys","charFormulas","talentSheet","getTalent","addFormula","fields","parseSection","section","sheets","talentKey","sections","formKey","document","num","artifactSheet","setEffects","setNum","CharacterSelectionDropdownList","onSelect","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","getAll","_getCharKeys","filter","cKey","sort","DropDownItem","get","Item","onClick","nameWIthIcon","CharSelectionButton","useState","show","setshow","HeaderIconDisplay","src","thumbImg","roundedCircle","as","ButtonGroup","CharacterSelectionModal","onHide","toggle","filterReducer","oldFilter","newFilter","sortBy","setsortBy","useReducer","elementalFilter","elementalFilterDispatch","weaponFilter","weaponFilterDispatch","sortingFunc","ck","_getChar","star","characterKeyList","Set","allCharacterKeys","a","b","diff","size","contentClassName","bg","text","Header","xs","variant","uncoloredEleIcons","allWeaponTypeKeys","type","onChange","faTimes","Body","lg","md","thumbnail","auto","skill","burst","StatIcon","EquipmentDropdown","location","onEquip","disableUnequip","editable","t","useTranslation","locationName","faBriefcase","Toggle","Menu","Divider","GetFormulaDependency","dependency","Proxy","target","prop","receiver","add","toString","formulaKeyDependency","freeze","Formulas","baseStat","StatData","found","InsertDependencies","flatMap","dep","has","k","path","Formula","getCurrent","getStage","initialWeapon","defaultInitialWeaponKey","getFormulaTargetsDisplayHeading","startsWith","subkey","split","getTalentOfKey","initialCharacter","allSlotKeys","sKey","buildSettings","initialBuildSettings","WeaponCard","weaponId","onEdit","onDelete","cardClassName","footer","undefined","databaseWeapon","updateDatabaseWeapon","useEffect","followWeapon","WeaponSheet","weaponMainVal","toFixed","Stat","fixedUnit","weaponSubVal","weaponLevelName","statMap","passiveName","img","statVal","unit","getStatUnit","getStatName","process","Footer","charKey","setWeaponLocation","faEdit","disabled","faTrashAlt","WeaponSelectionModal","weaponSheets","weaponIdList","allWeaponKeys","wKey","weaponKey","WeaponSelectionButton","ToastContext","React","createContext","onClose","_excluded","ToastHeader","forwardRef","_ref","ref","bsPrefix","closeLabel","closeButton","children","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","context","handleClick","useEventCallback","e","createElement","_extends","classNames","CloseButton","label","displayName","defaultProps","createWithBsPrefix","Toast","_ref$transition","transition","Transition","Fade","_ref$show","_ref$animation","animation","_ref$delay","delay","_ref$autohide","autohide","delayRef","useRef","onCloseRef","current","autohideTimeout","useTimeout","autohideToast","autohideFunc","useCallback","set","toastContext","useMemo","hasAnimation","toast","role","Provider","in","unmountOnExit","assign","ToastBody","decode","string","schema","stream","BlockStream","result","decodeItem","end","encodeItem","data","pathItem","encode","uint","uintToString","encodeLength","encodeUInt","match","encodeString","schemas","defaultSchema","item","join","encodeArray","default","encodeObject","keySchema","valueSchema","items","encodeSparse","error","decodeLength","stringToUInt","take","decodeUInt","decodeString","unused","decodeArray","decodeObject","decodeSparse","number","remainder","floor","String","fromCharCode","padEnd","multiplier","code","charCodeAt","offset","count","slice","float","replace","parseFloat","array","other","object","sparse","optional","list","defaultValue","indexOf","index","fixed","stat","artifactSet","allArtifactSets","slot","allHitModes","allReactionModes","element","factor","endsWith","crawlObject","c","isArray","pathvalues","last","pop","next","artifactV2","numStars","slotKey","lock","weaponV2","levelKey","overrideMainVal","overrideSubVal","lvla","findIndex","maxLevel","addAsc","characterV2","overrideLevel","talentLevelKeys","reserved","isAscended","levelString","weaponLevel","flexV2","artifactV3","raritySlotKey","weaponV3","ascensionRefine","levelDiff","characterV3","ascensionConstellation","flexV3","characters","weapons","createFlexObj","parseFlexObj","parameters","v","decoded","newCharacterKey","toLowerCase","storage","SandboxStorage","setString","ArtCharDatabase","parseFlexObjV2","d","parseFlexObjV3","FlexDisplay","useLocation","searchStr","search","flexResult","substring","to","Database","Display","flexObj","window","scrollTo","settoast","url","href","Container","style","position","top","right","Card","InputGroup","Prepend","Button","navigator","clipboard","writeText","faLink","Form","Control","readOnly","select","CharacterDisplayCard"],"mappings":"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","file":"static/js/11.bbee725b.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Rarity } from '../Types/consts'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","import bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nconst Assets = {\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { ascensionMaxLevel, characterStatBase } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allElements, ArtifactSetKey, ElementKey, SlotKey } from \"../Types/consts\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\nimport { mergeStats } from \"../Util/StatUtil\";\r\nimport { defaultInitialWeapon } from \"../Weapon/WeaponUtil\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey: ElementKey | \"physical\"): string =>\r\n    ElementalData[elementalKey].name\r\n  static getLevelString = (character: ICachedCharacter): string =>\r\n    `${character.level}/${ascensionMaxLevel[character.ascension]}`\r\n\r\n  static getTalentFieldValue = (field: IFieldDisplay, key: keyof IFieldDisplay, stats = {}, defVal = \"\"): any => {\r\n    if (!field[key]) return defVal\r\n    return evalIfFunc(field[key] as any, stats!)\r\n  }\r\n\r\n  static hasOverride = (character: ICachedCharacter, statKey): boolean => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\")\r\n    if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\")\r\n    if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\")\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getBaseStatValue = (character: ICachedCharacter, characetSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string): number => {\r\n    if (statKey === \"enemyLevel\") return character.level\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    return 0\r\n  }\r\n  static getStatValueWithOverride = (character: ICachedCharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string) => {\r\n    if (Character.hasOverride(character, statKey)) return character.baseStatOverrides?.[statKey] ?? 0\r\n    else return Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)\r\n  }\r\n\r\n  static calculateBuild = (character: ICachedCharacter, database: ArtCharDatabase, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, mainStatAssumptionLevel = 0): ICalculatedStats => {\r\n    const artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, database._getArt(artid)]))\r\n    const initialStats = Character.createInitialStats(character, database, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats: ICalculatedStats, artifacts: Dict<SlotKey, ICachedArtifact>, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>): ICalculatedStats => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    const artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, initialStats, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(stats.mainStatAssumptionLevel, art.rarity * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    mergeStats(stats, artifactSetEffectsStats)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey, setNumKey]) => {\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      mergeStats(stats, condStats)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats, stats?.modifiers)\r\n    const { initialStats: preprocessedStats, formula } = PreprocessFormulas(dependencies, stats)\r\n    formula(preprocessedStats)\r\n    return { ...stats, ...preprocessedStats }\r\n  }\r\n\r\n  static createInitialStats = (character: ICachedCharacter, database: ArtCharDatabase, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    character = deepClone(character)\r\n    const { key: characterKey, elementKey, level, ascension, hitMode, infusionAura, reactionMode, talent, constellation, equippedArtifacts, conditionalValues = {}, equippedWeapon } = character\r\n    const weapon = database._getWeapon(equippedWeapon) ?? defaultInitialWeapon(characterSheet.weaponTypeKey) // need to ensure all characters have a weapon\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"enemyLevel\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, Character.getStatValueWithOverride(character, characterSheet, weaponSheet, key)])) as ICalculatedStats\r\n    initialStats.characterHP = characterSheet.getBase(\"hp\", level, ascension)\r\n    initialStats.characterDEF = characterSheet.getBase(\"def\", level, ascension)\r\n    initialStats.characterATK = characterSheet.getBase(\"atk\", level, ascension)\r\n    initialStats.characterLevel = level\r\n    initialStats.characterEle = characterSheet.elementKey ?? elementKey ?? \"anemo\";\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = Object.fromEntries(Object.entries(talent ?? {}).map(([key, value]) => [key, value - 1])) as any;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = { key: weapon.key, refineIndex: weapon.refine - 1 }\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n\r\n    //enemy stuff\r\n    [\"physical\", ...allElements].forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]: any) => {\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    const specialStatKey = characterSheet.getSpecializedStat(ascension)\r\n    if (specialStatKey) {\r\n      const specializedStatVal = characterSheet.getSpecializedStatVal(ascension)\r\n      mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n    }\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats, initialStats.characterEle).forEach(s => mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponATK = weaponSheet.getMainStatValue(weapon.level, weapon.ascension)\r\n    initialStats.weaponATK = weaponATK\r\n    const weaponSubKey = weaponSheet.getSubStatKey()\r\n    if (weaponSubKey) mergeStats(initialStats, { [weaponSubKey]: weaponSheet.getSubStatValue(weapon.level, weapon.ascension) })\r\n    mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      if (keys[0] === \"character\" && keys[3] === \"talents\" && keys[4] !== elementKey) return //fix for Traveler, make sure conditionals match element.\r\n      if (!Conditional.canShow(conditional, initialStats)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n  //TODO: this needs weaponSheet/artifactsheets as a parameter.\r\n  static getDisplayStatKeys = (stats: ICalculatedStats, { characterSheet, weaponSheet, artifactSheets }: { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet> }) => {\r\n    const eleKey = stats.characterEle\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = characterSheet.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = characterSheet.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    const charFormulas = {}\r\n    const talentSheet = characterSheet.getTalent(eleKey)\r\n    const addFormula = (fields, key) => fields.forEach(field => {\r\n      if (!field.formula || !field?.canShow?.(stats)) return\r\n      if (!charFormulas[key]) charFormulas[key] = []\r\n      charFormulas[key].push((field.formula as any).keys)\r\n    })\r\n    const parseSection = (section, key) => {\r\n      //conditional\r\n      if (section.conditional && Conditional.canShow(section.conditional, stats)) {\r\n        const { fields }: { fields?: Array<IFieldDisplay> } = Conditional.resolve(section.conditional, stats, null)\r\n        fields && addFormula(fields, key)\r\n      }\r\n      //fields\r\n      if (section.fields) addFormula(section.fields, key)\r\n    }\r\n    talentSheet && Object.entries(talentSheet.sheets).forEach(([talentKey, { sections }]) => {\r\n      if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n      sections.forEach(section => parseSection(section, `talentKey_${talentKey}`))\r\n    })\r\n\r\n    const formKey = `weapon_${stats.weapon.key}`\r\n    weaponSheet.document && weaponSheet.document.map(section => parseSection(section, formKey))\r\n\r\n    stats.setToSlots && Object.entries(stats.setToSlots).map(([setKey, slots]) => [setKey, slots.length]).forEach(([setKey, num]) => {\r\n      const artifactSheet = artifactSheets[setKey] as ArtifactSheet\r\n      if (!artifactSheet) return\r\n      Object.entries(artifactSheet.setEffects).forEach(([setNum, { document }]) => {\r\n        if (num < parseInt(setNum)) return\r\n        document && document.map(section => parseSection(section, `artifact_${setKey}_${setNum}`))\r\n      })\r\n    })\r\n\r\n    return { basicKeys, ...charFormulas, transReactions }\r\n  }\r\n}","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useReducer, useState } from \"react\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Image, Modal, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Assets from \"../Assets/Assets\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allCharacterKeys, allElements, allWeaponTypeKeys, CharacterKey, WeaponTypeKey } from \"../Types/consts\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\nimport { Stars } from \"../Components/StarDisplay\";\r\nimport StatIcon, { uncoloredEleIcons } from \"../Components/StatIcon\";\r\nimport Character from './Character'\r\n\r\nexport function CharacterSelectionDropdownList({ onSelect, weaponTypeKey }: { onSelect: (ckey: CharacterKey) => void, weaponTypeKey?: WeaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  return <>{database._getCharKeys().filter(cKey =>\r\n    weaponTypeKey ? (characterSheets?.[cKey]?.weaponTypeKey === weaponTypeKey) : true\r\n  ).sort().map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>{characterSheet.nameWIthIcon}</Dropdown.Item>\r\n}\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\nexport function CharSelectionButton({ characterSheet, onSelect, filter }: { characterSheet?: CharacterSheet, onSelect: (cKey: CharacterKey) => void, filter?: characterFilter }) {\r\n  const [show, setshow] = useState(false)\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <Image src={characterSheet.thumbImg} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {characterSheet.name} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  return <>\r\n    <Button as={ButtonGroup} onClick={() => setshow(true)} >{HeaderIconDisplay}</Button>\r\n    <CharacterSelectionModal show={show} onHide={() => setshow(false)} onSelect={onSelect} filter={filter} />\r\n  </>\r\n}\r\n\r\nconst toggle = {\r\n  rarity: \"Rarity\",\r\n  level: \"Level\",\r\n  name: \"Name\"\r\n} as const\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true }: CharacterSelectionModalProps) {\r\n  const database = useContext(DatabaseContext)\r\n\r\n  const [sortBy, setsortBy] = useState(() => Object.keys(toggle)[0])\r\n  const [elementalFilter, elementalFilterDispatch] = useReducer(filterReducer, \"\")\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n\r\n  const sortingFunc = {\r\n    level: (ck) => database._getChar(ck)?.level ?? 0,\r\n    rarity: (ck) => characterSheets?.[ck]?.star,\r\n    name: (ck) => characterSheets?.[ck]?.name\r\n  }\r\n\r\n  const characterKeyList = !characterSheets ? [] : [...new Set(allCharacterKeys)].filter(cKey => filter(database._getChar(cKey), characterSheets[cKey])).filter(cKey => {\r\n    if (elementalFilter && elementalFilter !== characterSheets?.[cKey]?.elementKey) return false\r\n    if (weaponFilter && weaponFilter !== characterSheets?.[cKey]?.weaponTypeKey) return false\r\n    return true\r\n  }).sort((a, b) => {\r\n    if (sortBy === \"name\") {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      // names must be equal\r\n      return 0;\r\n    }\r\n    if (sortBy === \"level\") {\r\n      const diff = sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n    } else {\r\n      const diff = sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\r\n      if (diff) return diff\r\n      return sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\r\n    }\r\n  })\r\n\r\n  if (!characterSheets) return null\r\n  return <Modal show={show} size=\"xl\" contentClassName=\"bg-transparent\" onHide={onHide}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              {allElements.map(eleKey => <Button key={eleKey} variant={(!elementalFilter || elementalFilter === eleKey) ? eleKey : \"secondary\"} className=\"py-1 px-2 text-white\" onClick={() => elementalFilterDispatch(eleKey)} >\r\n                <h3 className=\"mb-0\">{uncoloredEleIcons[eleKey]}</h3>\r\n              </Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {allWeaponTypeKeys.map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"secondary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}>\r\n                  <h3 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h3></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <span>Sort by: </span>\r\n            <ToggleButtonGroup type=\"radio\" name=\"level\" value={sortBy} onChange={setsortBy}>\r\n              {Object.entries(toggle).map(([key, text]) =>\r\n                <ToggleButton key={key} value={key} variant={sortBy === key ? \"success\" : \"primary\"}>\r\n                  <h6 className=\"mb-0\">{text}</h6>\r\n                </ToggleButton>)}\r\n            </ToggleButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <Button onClick={onHide} variant=\"danger\"><FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body><Row>\r\n        {characterKeyList.map(characterKey => {\r\n          const characterSheet = characterSheets[characterKey]\r\n          const character = database._getChar(characterKey)\r\n          return <Col key={characterKey} lg={3} md={4} className=\"mb-2\">\r\n            <Button className=\"w-100\" variant=\"darkcontent\" onClick={() => { onHide(); onSelect(characterKey) }}>\r\n              <h5>{characterSheet.name}</h5>\r\n              <Row>\r\n                <Col xs=\"auto\" className=\"pr-0\">\r\n                  <Image src={characterSheet.thumbImg} className={`thumb-big grad-${characterSheet.star}star p-0`} thumbnail />\r\n                </Col>\r\n                <Col>\r\n                  {character ? <>\r\n                    <h5 className=\"mb-0\">Lv. {Character.getLevelString(character)} {`C${character.constellation}`}</h5>\r\n                    <h6 className=\"mb-0\">\r\n                      <Badge variant=\"info\"><strong className=\"mx-1\">{character.talent.auto}</strong></Badge>{` `}\r\n                      <Badge variant=\"info\"><strong className=\"mx-1\">{character.talent.skill}</strong></Badge>{` `}\r\n                      <Badge variant=\"info\"><strong className=\"mx-1\">{character.talent.burst}</strong></Badge>\r\n                    </h6>\r\n                  </> : <>\r\n                    <h4><Badge variant=\"primary\">NEW</Badge></h4>\r\n                  </>}\r\n                  <h6 className=\"mb-0\"><Stars stars={characterSheet.star} colored /></h6>\r\n                  <h3 className=\"mb-0\">{characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <Image src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n                </Col>\r\n              </Row>\r\n            </Button>\r\n          </Col>\r\n        })}\r\n      </Row></Card.Body>\r\n    </Card>\r\n  </Modal>\r\n}","import { faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport { CharacterKey, WeaponTypeKey } from \"../Types/consts\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\nimport { CharacterSelectionDropdownList } from \"../Character/CharacterSelection\";\r\n\r\nexport default function EquipmentDropdown({ location, onEquip, weaponTypeKey, disableUnequip = false, editable = false }: { location: CharacterKey | \"\", onEquip: (charKey: CharacterKey) => void, weaponTypeKey?: WeaponTypeKey, disableUnequip?: boolean, editable?: boolean }) {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const characterSheet = usePromise(CharacterSheet.get(location), [location])\r\n  const locationName = characterSheet?.name ? characterSheet.nameWIthIcon : <span><FontAwesomeIcon icon={faBriefcase} /> {t`filterLocation.inventory`}</span>\r\n\r\n  return editable ? <Dropdown>\r\n    <Dropdown.Toggle className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {!disableUnequip && <><Dropdown.Item onClick={() => { /* TODO */ }}><FontAwesomeIcon icon={faBriefcase} /> Inventory</Dropdown.Item>\r\n        <Dropdown.Divider /></>}\r\n      <CharacterSelectionDropdownList onSelect={onEquip} weaponTypeKey={weaponTypeKey} />\r\n    </Dropdown.Menu>\r\n  </Dropdown> : locationName\r\n}","import Formula from \"./Formula\"\r\nimport { Formulas, getStage, StatData } from \"./StatData\"\r\nimport { IBaseStat } from \"./Types/character\"\r\nimport { Modifier } from \"./Types/stats\"\r\n\r\n// Generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula: (s) => number) {\r\n  const dependency: Set<string> = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop.toString()) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.entries(Formulas).map(([key, value]) => [key, GetFormulaDependency(value)])\r\n)) as Dict<string, string[]>\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(baseStat: IBaseStat, modifiers: Modifier = {}, keys = Object.keys(StatData)): Dependencies {\r\n  const found = new Set<string>()\r\n  const dependencies = [new Set<string>(), new Set<string>()]\r\n  keys.forEach(key => InsertDependencies(baseStat, key, modifiers, dependencies, found))\r\n  return dependencies.flatMap(dep => [...dep])\r\n}\r\nfunction InsertDependencies(baseStat: IBaseStat, key: string, modifiers: Modifier, dependencies: Set<string>[], found: Set<string>) {\r\n  if (found.has(key)) return\r\n  found.add(key)\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(baseStat, k, modifiers, dependencies, found));\r\n  (modifiers[key] ?? []).forEach(path => Formula.getCurrent(path, baseStat)[1].forEach(k =>\r\n    InsertDependencies(baseStat, k, modifiers, dependencies, found)))\r\n  dependencies[getStage(key)].add(key)\r\n}\r\n\r\ntype Dependencies = string[]\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n","import { WeaponKey, WeaponTypeKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\n\r\nfunction defaultInitialWeaponKey(type: WeaponTypeKey): WeaponKey {\r\n  switch (type) {\r\n    case \"sword\": return \"DullBlade\"\r\n    case \"bow\": return \"HuntersBow\"\r\n    case \"claymore\": return \"WasterGreatsword\"\r\n    case \"polearm\": return \"BeginnersProtector\"\r\n    case \"catalyst\": return \"ApprenticesNotes\"\r\n    default: return \"DullBlade\"\r\n  }\r\n}\r\nexport const defaultInitialWeapon = (type: WeaponTypeKey): ICachedWeapon =>\r\n  initialWeapon(defaultInitialWeaponKey(type))\r\n\r\nexport const initialWeapon = (key: WeaponKey): ICachedWeapon => ({\r\n  id: \"\",\r\n  key,\r\n  level: 1,\r\n  ascension: 0,\r\n  refine: 1,\r\n  location: \"\"\r\n})","import { Badge } from \"react-bootstrap\"\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\"\r\nimport { initialBuildSettings } from \"../Build/BuildSetting\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { allSlotKeys, ArtifactSetKey, CharacterKey, ElementKey } from \"../Types/consts\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport CharacterSheet from \"./CharacterSheet\"\r\n\r\nexport function getFormulaTargetsDisplayHeading(key: string, { characterSheet, weaponSheet, artifactSheets }: { characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet> }, eleKey: ElementKey = \"anemo\") {\r\n  if (key === \"basicKeys\") return \"Basic Stats\"\r\n  else if (key === \"genericAvgHit\") return \"Generic Optimization Values\"\r\n  else if (key === \"transReactions\") return \"Transformation Reaction\"\r\n  else if (key.startsWith(\"talentKey_\")) {\r\n    const subkey = key.split(\"talentKey_\")[1]\r\n    return (characterSheet?.getTalentOfKey(subkey, eleKey)?.name ?? subkey)\r\n  } else if (key.startsWith(\"weapon_\")) {\r\n    const subkey = key.split(\"weapon_\")[1]\r\n    return (weaponSheet?.name ?? subkey)\r\n  } else if (key.startsWith(\"artifact_\")) {\r\n    const [, setKey, num] = key.split('_')\r\n    return <span>{artifactSheets[setKey]?.name} <Badge variant=\"success\">{num}-Set</Badge></span>\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key, // the game character this is based off\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])) as any,\r\n    equippedWeapon: \"\",\r\n    conditionalValues: {},\r\n    baseStatOverrides: {}, // overriding the baseStat\r\n    buildSettings: initialBuildSettings(),\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n  }\r\n}","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { Button, Card, Col, Image, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport EquipmentDropdown from \"../Components/EquipmentDropdown\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype CharacterCardProps = { weaponId: string, onEdit?: (weaponId: string) => void, onClick?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, cardClassName: string, bg?: string, footer?: boolean, editable?: boolean }\r\nexport default function WeaponCard({ weaponId, onEdit, onDelete, onClick, cardClassName = \"\", bg = \"\", footer = false, editable = false }: CharacterCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseWeapon, updateDatabaseWeapon] = useState(undefined as ICachedWeapon | undefined)\r\n  useEffect(() =>\r\n    weaponId ? database.followWeapon(weaponId, updateDatabaseWeapon) : undefined,\r\n    [weaponId, updateDatabaseWeapon, database])\r\n\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refine, id } = weapon\r\n  const equipOnChar = (charKey: CharacterKey) => database.setWeaponLocation(weaponId, charKey)\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponLevelName = WeaponSheet.getLevelString(weapon)\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text={\"lightfont\" as any}>\r\n    <Card.Header>\r\n      <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /> <h5 className=\"d-inline\">{weaponSheet.name}</h5>\r\n    </Card.Header>\r\n    <Card.Body onClick={() => onClick?.(weaponId)} className={onClick ? \"cursor-pointer\" : \"\"} >\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={weaponSheet.img} className={`thumb-big grad-${weaponSheet.rarity}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h5 className=\"mb-0\">Level {weaponLevelName} </h5>\r\n          <h5 >Refinement {refine}</h5>\r\n          <h6 className=\"mb-0\"><Stars stars={weaponSheet.rarity} colored /></h6>\r\n          {/* <h3 className=\"mb-0\"></h3> */}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statMap.map(([statKey, statVal]) => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIcon[statKey]} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n      {process.env.NODE_ENV === \"development\" && <span className=\"text-warning\">{id || `\"\"`} </span>}\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Row>\r\n        <Col >\r\n          <EquipmentDropdown location={weapon?.location} onEquip={equipOnChar} weaponTypeKey={weaponTypeKey} disableUnequip={!!weapon.location} editable={editable} />\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => onEdit(weaponId)}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              disabled={!!weapon.location}\r\n              onClick={() => onDelete(weaponId)}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useReducer, useState } from \"react\"\r\nimport { Button, ButtonGroup, Card, Col, Image, Modal, Row } from \"react-bootstrap\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey } from \"../Types/consts\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean\r\n}\r\n\r\nfunction filterReducer(oldFilter, newFilter) {\r\n  if (newFilter === oldFilter)\r\n    return \"\"\r\n  return newFilter\r\n}\r\n\r\nexport function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, weaponFilterDispatch] = useReducer(filterReducer, \"\")\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n  return <Modal show={show} size=\"xl\" contentClassName=\"bg-transparent\" onHide={onHide}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <ButtonGroup >\r\n              {allWeaponTypeKeys.map(weaponType =>\r\n                <Button key={weaponType} variant={(!weaponFilter || weaponFilter === weaponType) ? \"success\" : \"secondary\"} className=\"py-1 px-2\" onClick={() => weaponFilterDispatch(weaponType)}>\r\n                  <h3 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h3></Button>)}\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <Button onClick={onHide} variant=\"danger\"><FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          {weaponIdList.map(weaponKey => {\r\n            const weaponSheet = weaponSheets[weaponKey]\r\n            return <Col key={weaponKey} lg={3} md={4} className=\"mb-2\">\r\n              <Button className=\"w-100 h-100 align-top\" variant=\"darkcontent\" onClick={() => { onHide(); onSelect(weaponKey) }}>\r\n                <Row className=\"h-100\">\r\n                  <Col xs=\"auto\" className=\"pr-0\">\r\n                    <Image src={weaponSheet.img} className={`thumb-big grad-${weaponSheet.rarity}star p-0`} thumbnail />\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponSheet.weaponType]} className=\"inline-icon\" /> {weaponSheet.name}</h5>\r\n                    <h6 className=\"mb-0\"><Stars stars={weaponSheet.rarity} colored /></h6>\r\n                  </Col>\r\n                </Row>\r\n              </Button>\r\n            </Col>\r\n          })}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </Modal>\r\n}\r\n\r\nexport function WeaponSelectionButton({ weaponSheet, onSelect, filter }: { weaponSheet?: WeaponSheet, onSelect: (wKey: WeaponKey) => void, filter?: (sheet: WeaponSheet) => boolean }) {\r\n  const [show, setshow] = useState(false)\r\n  return <>\r\n    <Button as={ButtonGroup} onClick={() => setshow(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n    <WeaponSelectionModal show={show} onHide={() => setshow(false)} onSelect={onSelect} filter={filter} />\r\n  </>\r\n}","import React from 'react'; // TODO: check\n\nvar ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose: function onClose() {}\n});\nexport default ToastContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"closeLabel\", \"closeButton\", \"className\", \"children\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nvar defaultProps = {\n  closeLabel: 'Close',\n  closeButton: true\n};\nvar ToastHeader = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      closeLabel = _ref.closeLabel,\n      closeButton = _ref.closeButton,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  var context = useContext(ToastContext);\n  var handleClick = useEventCallback(function (e) {\n    if (context && context.onClose) {\n      context.onClose(e);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(bsPrefix, className)\n  }), children, closeButton && /*#__PURE__*/React.createElement(CloseButton, {\n    label: closeLabel,\n    onClick: handleClick,\n    className: \"ml-2 mb-1\",\n    \"data-dismiss\": \"toast\"\n  }));\n});\nToastHeader.displayName = 'ToastHeader';\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('toast-body');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\"];\nimport React, { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Fade from './Fade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nvar Toast = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$transition = _ref.transition,\n      Transition = _ref$transition === void 0 ? Fade : _ref$transition,\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? true : _ref$show,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? true : _ref$animation,\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 3000 : _ref$delay,\n      _ref$autohide = _ref.autohide,\n      autohide = _ref$autohide === void 0 ? false : _ref$autohide,\n      onClose = _ref.onClose,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose);\n  useEffect(function () {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  var autohideTimeout = useTimeout();\n  var autohideToast = !!(autohide && show);\n  var autohideFunc = useCallback(function () {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(function () {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  var toastContext = useMemo(function () {\n    return {\n      onClose: onClose\n    };\n  }, [onClose]);\n  var hasAnimation = !!(Transition && animation);\n  var toast = /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(bsPrefix, className, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: toastContext\n  }, hasAnimation && Transition ? /*#__PURE__*/React.createElement(Transition, {\n    in: show,\n    unmountOnExit: true\n  }, toast) : toast);\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","// @ts-nocheck\r\n// The *type* of these data are in schema and so are unknown at compile time.\r\n// Type annotation here will only amount to adding `any` everywhere\r\n\r\n/// Schema keys\r\n/// Common {\r\n///   encode?: A function that transform encoding object into the specified format\r\n///   decode?: A function that transform object in the specified format into the decoded object\r\n/// }\r\n///\r\n/// UInt: { type: \"uint\",\r\n///   length?: number of bytes, uses variable-length format if not set,\r\n/// }\r\n/// String: { type: \"string\" }\r\n/// Array: { type: \"array\",\r\n///   schemas?: Array of schemas, in the same order as the item,\r\n///   defaultSchema?: Default schema for when `schemas[i]` is `null`,\r\n/// }\r\n/// Object: { type: \"object\",\r\n///   schemas: A key-schema dictionary. All keys are encoded\r\n///   default: default value if the object[key] doesn't exist\r\n/// }\r\n/// Sparse: { type: \"sparse\",\r\n///   keys?: A list of permitted keys, `null` if all keys are permitted,\r\n///   keySchema: Common schema for keys,\r\n///   valueSchema: Common schema for values,\r\n/// }\r\n\r\nexport function encode(data, schema) {\r\n  return encodeItem(data, schema, null)\r\n}\r\nexport function decode(string, schema) {\r\n  const stream = new BlockStream(string)\r\n  const result = decodeItem(stream, schema, null)\r\n  stream.end()\r\n  return result\r\n}\r\n\r\nfunction encodeItem(data, schema, pathItem) {\r\n  try {\r\n    if (schema.encode)\r\n      data = schema.encode(data)\r\n    switch (schema.type) {\r\n      case \"uint\": return encodeUInt(data, schema)\r\n      case \"string\": return encodeString(data, schema)\r\n      case \"array\": return encodeArray(data, schema)\r\n      case \"object\": return encodeObject(data, schema)\r\n      case \"sparse\": return encodeSparse(data, schema)\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\nfunction decodeItem(stream, schema, pathItem) {\r\n  try {\r\n    let result\r\n    switch (schema.type) {\r\n      case \"uint\": result = decodeUInt(stream, schema); break\r\n      case \"string\": result = decodeString(stream, schema); break\r\n      case \"array\": result = decodeArray(stream, schema); break\r\n      case \"object\": result = decodeObject(stream, schema); break\r\n      case \"sparse\": result = decodeSparse(stream, schema); break\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n    if (schema.decode)\r\n      return schema.decode(result)\r\n    return result\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\n\r\nfunction encodeSparse(data, schema) {\r\n  const { keySchema, keys, valueSchema } = schema\r\n  const items = Object.entries(data).filter(([key]) => keys?.includes(key) ?? true)\r\n\r\n  return encodeLength(items.length) + items.map(([key, value]) =>\r\n    encodeItem(key, keySchema, key) + encodeItem(value, valueSchema, key)\r\n  ).join('')\r\n}\r\nfunction decodeSparse(stream, schema) {\r\n  const { keys, keySchema, valueSchema } = schema\r\n  const length = decodeLength(stream)\r\n\r\n  return Object.fromEntries([...new Array(length)].map(() => {\r\n    const key = decodeItem(stream, keySchema, null)\r\n    const value = decodeItem(stream, valueSchema, key)\r\n    return [key, value]\r\n  }).filter(([key]) => keys?.includes(key) ?? true))\r\n}\r\n\r\nfunction encodeObject(data, schema: { schemas: any[], default: any }) {\r\n  const { schemas = [] } = schema\r\n  return Object.entries(schemas).map(([key, schema]) =>\r\n    encodeItem(key in data ? data[key] : schema.default, schema, key)\r\n  ).join('')\r\n}\r\nfunction decodeObject(stream, schema) {\r\n  const { schemas = [] } = schema\r\n  return Object.fromEntries(Object.entries(schemas).map(([key, schema]) =>\r\n    [key, decodeItem(stream, schema, key)]\r\n  ))\r\n}\r\n\r\nfunction encodeArray(data, schema) {\r\n  const { schemas = [], defaultSchema } = schema\r\n  return encodeLength(data.length) + data.map((item, i) =>\r\n    encodeItem(item, schemas[i] ?? defaultSchema, i)\r\n  ).join('')\r\n}\r\nfunction decodeArray(stream, schema) {\r\n  const { schemas = [], defaultSchema } = schema, length = decodeLength(stream)\r\n  return [...new Array(length)].map((unused, i) =>\r\n    decodeItem(stream, schemas[i] ?? defaultSchema, i))\r\n}\r\n\r\nfunction encodeString(string, schema) {\r\n  if (!string.match(/^[a-z0-9\\-_]*$/i))\r\n    throw new Error(`Cannot encode string ${string}: not alphanumeric or -_`)\r\n  return encodeLength(string.length) + string\r\n}\r\nfunction decodeString(stream, schema) {\r\n  const string = stream.take(decodeLength(stream))\r\n  if (!string.match(/^[a-z0-9\\-_]*$/i))\r\n    throw new Error(`Cannot decode string ${string}: not alphanumeric or -_`)\r\n  return string\r\n}\r\n\r\nfunction encodeUInt(uint, schema) {\r\n  const string = uintToString(uint, schema.length)\r\n  return schema.length ? string : (encodeLength(string.length) + string)\r\n}\r\nfunction decodeUInt(stream, schema) {\r\n  let length = schema.length || decodeLength(stream)\r\n  return stringToUInt(stream.take(length))\r\n}\r\n\r\n// Keep the length low. We might want to reserve high bits for later extension.\r\nfunction encodeLength(length) {\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return uintToString(length, 1)\r\n}\r\nfunction decodeLength(stream) {\r\n  let length = stringToUInt(stream.take(1))\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return length\r\n}\r\n\r\nexport function uintToString(number, length = 0) {\r\n  if (number < 0) throw new Error(`Cannot encode negative number ${number}`)\r\n\r\n  var string = \"\"\r\n  while (number > 0) {\r\n    const remainder = number % 64\r\n    number = Math.floor(number / 64)\r\n    if (remainder < 10) // 0-9\r\n      string += String.fromCharCode(remainder + 48 - 0)\r\n    else if (remainder < 36) // a-z\r\n      string += String.fromCharCode(remainder + 97 - 10)\r\n    else if (remainder < 62) // A-Z\r\n      string += String.fromCharCode(remainder + 65 - 36)\r\n    else if (remainder === 62) // -\r\n      string += \"-\"\r\n    else if (remainder === 63) // _\r\n      string += \"_\"\r\n  }\r\n\r\n  if (!length)\r\n    return string\r\n\r\n  if (string.length > length)\r\n    throw new Error(`Cannot encode uint ${number}: value too large`)\r\n  return string.padEnd(length, \"0\")\r\n}\r\nexport function stringToUInt(string) {\r\n  let result = 0, multiplier = 1\r\n\r\n  for (let i = 0; i < string.length; i++) {\r\n    let code = string.charCodeAt(i)\r\n\r\n    if (48 <= code && code < 58) // 0-9\r\n      result += multiplier * (code - 48 + 0)\r\n    else if (97 <= code && code < 123) // a-z\r\n      result += multiplier * (code - 97 + 10)\r\n    else if (65 <= code && code < 91) // A-Z\r\n      result += multiplier * (code - 65 + 36)\r\n    else if (string[i] === '-')\r\n      result += multiplier * 62\r\n    else if (string[i] === '_')\r\n      result += multiplier * 63\r\n    else throw new Error(`Cannot parse UInt from \"${string}\", which contains \"${String.fromCharCode(code)}\"`)\r\n\r\n    multiplier *= 64\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nclass BlockStream {\r\n  string: string\r\n  offset: number\r\n  constructor(string) {\r\n    this.string = string\r\n    this.offset = 0\r\n  }\r\n  take(count) {\r\n    if (this.offset + count > this.string.length)\r\n      throw new Error(`Cannot take ${count} items from ${this.string.slice(this.offset)}`)\r\n\r\n    const result = this.string.slice(this.offset, this.offset + count)\r\n    this.offset += count\r\n    return result\r\n  }\r\n  end() {\r\n    if (this.string.length !== this.offset)\r\n      throw new Error(`Unused string ${this.string.slice(this.offset)}`)\r\n  }\r\n}\r\n","import { ascensionMaxLevel } from \"../Data/CharacterData\"\r\nimport { allSlotKeys, allElements, allArtifactSets, allHitModes, allReactionModes, allCharacterKeys, CharacterKey } from \"../Types/consts\"\r\nimport { crawlObject } from \"../Util/Util\"\r\nimport { uintToString, stringToUInt } from \"./CodingUtil\"\r\n\r\n// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\nconst stats = [\r\n  \"\", \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n  \"physical_dmg_\", \"anemo_dmg_\", \"cryo_dmg_\", \"dendro_dmg_\", \"electro_dmg_\", \"geo_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\",\r\n] as const\r\n\r\n// Common schemas\r\n\r\nconst uint = (length) => ({ type: \"uint\", length })\r\nconst float = {\r\n  type: \"string\",\r\n  encode: (value) => value.toString().replace(/\\./g, '_'),\r\n  decode: (string) => parseFloat(string.replace(/_/g, '.')),\r\n}\r\nconst string = { type: \"string\" }\r\nconst array = (defaultSchema, other = {}) => ({ type: \"array\", defaultSchema, ...other })\r\nconst object = (schemas, other = {}) => ({ type: \"object\", schemas, ...other })\r\nconst sparse = (keySchema, valueSchema, keys = null) => ({ type: \"sparse\", keys, keySchema, valueSchema })\r\n\r\n// Util schema\r\n\r\nconst optional = (list, defaultValue: any = undefined, length = 1) => ({\r\n  type: \"uint\", length,\r\n  encode: item => list.indexOf(item) + 1,\r\n  decode: index => list[index - 1] ?? defaultValue,\r\n})\r\nconst fixed = (list, length = 1) => ({\r\n  type: \"uint\", length,\r\n  encode: (item) => list.indexOf(item),\r\n  decode: (index) => list[index],\r\n})\r\nconst stat = fixed(stats)\r\nconst artifactSet = fixed(allArtifactSets)\r\nconst slot = fixed(allSlotKeys)\r\nconst characterKey = fixed(allCharacterKeys)\r\nconst hitMode = fixed(allHitModes)\r\nconst reactionMode = fixed([null, ...allReactionModes])\r\nconst element = optional(allElements, '')\r\n\r\n// Complex schema\r\n\r\nconst substat = object({\r\n  key: stat,\r\n  value: uint(2),\r\n}, {\r\n  encode: ({ key, value }) => {\r\n    let factor = key.endsWith(\"_\") ? 10 : 1 // one decimal place for percentage\r\n    return { key, value: value * factor }\r\n  },\r\n  decode: ({ key, value }) => {\r\n    let factor = key.endsWith(\"_\") ? 10 : 1 // one decomal place for percentage\r\n    return { key, value: value / factor }\r\n  }\r\n})\r\nconst conditionalValues = array(object({\r\n  path: array(string), value: array(string)\r\n}), {\r\n  encode: (conditionalValues) => {\r\n    let result: { path, value }[] = []\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (value, path) => {\r\n      result.push({ path, value: value.map(item => item.toString()) })\r\n    })\r\n    result.filter(({ path }) => {\r\n      switch (path[0]) {\r\n        case \"character\":\r\n          path[0] = \"c\"\r\n          path[1] = uintToString(allCharacterKeys.indexOf(path[1]))\r\n          break\r\n        case \"weapon\":\r\n          path[0] = \"w\"\r\n          break\r\n        case \"artifact\":\r\n          path[0] = \"a\"\r\n          path[1] = uintToString(allArtifactSets.indexOf(path[1]))\r\n          break\r\n        default: return false\r\n      }\r\n      return true\r\n    })\r\n    return result\r\n  },\r\n  decode: (pathvalues) => {\r\n    const conditionalValues = { weapon: {}, artifact: {}, character: {} }\r\n    for (const { path, value } of pathvalues) {\r\n      switch (path[0]) {\r\n        case \"c\":\r\n          path[0] = \"character\"\r\n          path[1] = allCharacterKeys[stringToUInt(path[1])]\r\n          break\r\n        case \"w\":\r\n          path[0] = \"weapon\"\r\n          break\r\n        case \"a\":\r\n          path[0] = \"artifact\"\r\n          path[1] = allArtifactSets[stringToUInt(path[1])]\r\n          break\r\n        default:\r\n          continue\r\n      }\r\n      const last = path.pop()\r\n      let current = conditionalValues\r\n      for (const key of path) {\r\n        const next = current[key] ?? {}\r\n        current[key] = next\r\n        current = next\r\n      }\r\n      value[0] = parseFloat(value[0])\r\n      current[last] = value\r\n    }\r\n    return conditionalValues\r\n  }\r\n})\r\n\r\n// V2\r\n\r\nconst artifactV2 = object({\r\n  setKey: artifactSet,\r\n  numStars: uint(1),\r\n  level: uint(2),\r\n  mainStatKey: stat,\r\n  slotKey: slot,\r\n  substats: array(substat)\r\n}, {\r\n  decode: art => {\r\n    art.id = \"\"\r\n    art.lock = false\r\n    return art\r\n  }\r\n})\r\nconst weaponV2 = object({\r\n  key: string,\r\n  levelKey: string,\r\n  refineIndex: uint(1),\r\n  overrideMainVal: float,\r\n  overrideSubVal: float,\r\n}, {\r\n  decode: object => {\r\n    const levelKey = object.levelKey\r\n    delete object.levelKey\r\n    delete object.overrideMainVal\r\n    delete object.overrideSubVal\r\n    const [, lvla] = levelKey.split(\"L\")\r\n    const level = parseInt(lvla)\r\n    const ascension = ascensionMaxLevel.findIndex(maxLevel => level <= maxLevel)\r\n    const addAsc = lvla.includes(\"A\")\r\n    if (level < 0 || level > 90 || ascension < 0) {\r\n      object.level = 1\r\n      object.ascension = 0\r\n    } else {\r\n      object.level = level\r\n      object.ascension = ascension + (addAsc ? 1 : 0)\r\n    }\r\n    return object\r\n  }\r\n})\r\nconst characterV2 = object({\r\n  characterKey,\r\n  hitMode,\r\n  reactionMode,\r\n  constellation: uint(1),\r\n  overrideLevel: uint(2),\r\n  levelKey: string,\r\n  infusionAura: element,\r\n  talentLevelKeys: object({ auto: uint(1), skill: uint(1), burst: uint(1) }),\r\n  baseStatOverrides: sparse(string, float),\r\n  weapon: weaponV2,\r\n  conditionalValues,\r\n  reserved: array(uint(1)),\r\n}, {\r\n  decode: (value) => {\r\n    const isAscended = value.levelKey.slice(-1) === \"A\"\r\n    const levelString = isAscended ? value.levelKey.slice(1, -1) : value.levelKey.slice(1)\r\n    value.level = parseInt(levelString)\r\n    switch (value.level) {\r\n      case 1: value.ascension = 0; break\r\n      case 20: value.ascension = 0; break\r\n      case 40: value.ascension = 1; break\r\n      case 50: value.ascension = 2; break\r\n      case 60: value.ascension = 3; break\r\n      case 70: value.ascension = 4; break\r\n      case 80: value.ascension = 5; break\r\n      case 90: value.ascension = 6; break\r\n    }\r\n    if (isAscended) {\r\n      value.ascension += 1\r\n    }\r\n    if (value.baseStatOverrides.characterLevel) {\r\n      value.level = value.baseStatOverrides.characterLevel\r\n      delete value.baseStatOverrides.characterLevel\r\n    }\r\n    if (value.baseStatOverrides.weaponLevel) {\r\n      value.weapon.level = value.baseStatOverrides.weaponLevel\r\n      delete value.baseStatOverrides.weaponLevel\r\n    }\r\n    if (value.overrideLevel) {\r\n      value.level = value.overrideLevel\r\n    }\r\n    delete value.overrideLevel\r\n    delete value.levelKey\r\n\r\n    if (value.characterKey === \"Traveler\") {\r\n      value.elementKey = allElements[value.reserved[0] - 1] ?? \"anemo\"\r\n    }\r\n    delete value.reserved\r\n    return value\r\n  },\r\n})\r\n\r\nconst flexV2 = object({\r\n  artifacts: array(artifactV2),\r\n  character: characterV2,\r\n})\r\n\r\n// V3\r\n\r\nconst artifactV3 = object({\r\n  setKey: artifactSet,\r\n  // numStars\r\n  level: uint(2),\r\n  // slotKey\r\n  mainStatKey: stat,\r\n  substats: array(substat),\r\n  location: optional(allCharacterKeys),\r\n\r\n  // Mixed\r\n  raritySlotKey: uint(1),\r\n}, {\r\n  encode: value => {\r\n    value.raritySlotKey = allSlotKeys.indexOf(value.slotKey) * 8 + value.rarity\r\n    return value\r\n  },\r\n  decode: value => {\r\n    value.rarity = value.raritySlotKey % 8\r\n    value.slotKey = allSlotKeys[(value.raritySlotKey - value.rarity) / 8]\r\n    return value\r\n  }\r\n})\r\nconst weaponV3 = object({\r\n  key: string,\r\n  // level, ascension, refine\r\n  location: optional(allCharacterKeys),\r\n\r\n  // Mixed\r\n  ascensionRefine: uint(1),\r\n  levelDiff: uint(1),\r\n}, {\r\n  encode: object => {\r\n    object.ascensionRefine = object.ascension * 8 + object.refine\r\n    object.levelDiff = ascensionMaxLevel[object.ascension] - object.level\r\n    return object\r\n  },\r\n  decode: object => {\r\n    object.refine = object.ascensionRefine % 8\r\n    object.ascension = (object.ascensionRefine - object.refine) / 8\r\n    object.level = ascensionMaxLevel[object.ascension] - object.levelDiff\r\n    return object\r\n  }\r\n})\r\nconst characterV3 = object({\r\n  key: characterKey,\r\n  // level, ascension\r\n  hitMode,\r\n  // elementKey\r\n  reactionMode,\r\n  conditionalValues,\r\n  baseStatOverrides: sparse(string, float),\r\n  talent: object({ auto: uint(1), skill: uint(1), burst: uint(1) }),\r\n  infusionAura: element,\r\n  // constellation\r\n\r\n  // Mixed\r\n  levelDiff: uint(1),\r\n  ascensionConstellation: uint(1),\r\n  reserved: array(uint(1)),\r\n}, {\r\n  encode: (value) => {\r\n    value.levelDiff = ascensionMaxLevel[value.ascension] - value.level\r\n    value.ascensionConstellation = value.ascension * 8 + value.constellation\r\n\r\n    if ((value.characterKey as CharacterKey) !== \"Traveler\") value.reserved = []\r\n    else value.reserved = [allElements.indexOf(value.elementKey)]\r\n\r\n    return value\r\n  },\r\n  decode: (value) => {\r\n    value.constellation = value.ascensionConstellation % 8\r\n    value.ascension = (value.ascensionConstellation - value.constellation) / 8\r\n    value.level = ascensionMaxLevel[value.ascension] - value.levelDiff\r\n\r\n    if ((value.characterKey as CharacterKey) === \"Traveler\")\r\n      value.elementKey = allElements[value.reserved[0]] ?? \"anemo\"\r\n    return value\r\n  },\r\n})\r\n\r\nconst flexV3 = object({\r\n  characters: array(characterV3),\r\n  artifacts: array(artifactV3),\r\n  weapons: array(weaponV3),\r\n})\r\n\r\nexport const schemas = {\r\n  flexV2, flexV3\r\n}\r\n// For testing purpose only, no need to maintain strict ordering\r\nexport const constants = {\r\n  reactionModes: [null, ...allReactionModes], stats\r\n}\r\n","import { ArtCharDatabase } from \"../Database/Database\";\r\nimport { SandboxStorage } from \"../Database/DBStorage\";\r\nimport { IArtifact } from \"../Types/artifact\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { decode, encode } from \"./CodingUtil\";\r\nimport { schemas } from \"./Schemas\";\r\n\r\nexport function createFlexObj(characterKey: CharacterKey, database: ArtCharDatabase): string | null {\r\n  const character = database._getChar(characterKey)\r\n  if (!character) return null;\r\n\r\n  const weapon = database._getWeapon(character.equippedWeapon)!\r\n  const artifacts = Object.values(character.equippedArtifacts)\r\n    .filter(art => art)\r\n    .map(id => database._getArt(id)!)\r\n\r\n  try {\r\n    return \"v=3&d=\" + encode({ characters: [character], weapons: [weapon], artifacts }, schemas.flexV3)\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${(error as any).path?.reverse() ?? []}: ${error}`)\r\n    return null\r\n  }\r\n}\r\n\r\nexport function parseFlexObj(string: string): [ArtCharDatabase, CharacterKey, number] | undefined {\r\n  const parameters = Object.fromEntries(string.split('&').map(s => s.split('=')))\r\n\r\n  try {\r\n    switch (parseInt(parameters.v)) {\r\n      case 2: return [...parseFlexObjV2(parameters.d), 2]\r\n      case 3: return [...parseFlexObjV3(parameters.d), 3]\r\n      default: return\r\n    }\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${(error as any).path?.reverse() ?? []}: ${error}`)\r\n    return\r\n  }\r\n}\r\n\r\nfunction parseFlexObjV2(string: string): [ArtCharDatabase, CharacterKey] {\r\n  const schema = schemas.flexV2\r\n  const decoded = decode(string, schema) as { character: any, artifacts: IArtifact[] }\r\n  const { character, artifacts } = decoded, newCharacterKey = character.characterKey, characterKey = newCharacterKey.toLowerCase() as CharacterKey\r\n  character.characterKey = characterKey\r\n\r\n  const storage = new SandboxStorage()\r\n  // DON'T CHANGE THIS.\r\n  // Flex v2 (decoding) scheme won't be updated even when newer\r\n  // db versions come along. So the object created from the url\r\n  // will remain a valid dbv7. The actual migration happens\r\n  // together with the validation down below.\r\n  storage.setString(\"db_ver\", \"7\")\r\n\r\n  storage.set(`char_${characterKey}`, character)\r\n  artifacts.forEach((artifact, i) => {\r\n    artifact.location = characterKey\r\n    storage.set(`artifact_${i + 1}`, artifact)\r\n  })\r\n\r\n  const database = new ArtCharDatabase(storage) // Validate storage\r\n\r\n  if (!database._getChar(newCharacterKey))\r\n    throw new Error(`Invalid flex object`)\r\n  return [database, newCharacterKey]\r\n}\r\n\r\nfunction parseFlexObjV3(string: string): [ArtCharDatabase, CharacterKey] {\r\n  const schema = schemas.flexV3\r\n  const { characters, artifacts, weapons } = decode(string, schema) as { characters: { key: CharacterKey }[], artifacts: any[], weapons: any[] }\r\n  const charKey = characters[0].key\r\n\r\n  const storage = new SandboxStorage()\r\n  // DON'T CHANGE THIS.\r\n  // Flex v3 (decoding) scheme won't be updated even when newer\r\n  // db versions come along. So the object created from the url\r\n  // will remain a valid dbv8. The actual migration happens\r\n  // together with the validation down below.\r\n  storage.setString(\"db_ver\", \"8\")\r\n\r\n  characters.forEach(character => storage.set(`char_${character.key}`, character))\r\n  artifacts.forEach((artifact, i) => storage.set(`artifact_${i}`, artifact))\r\n  weapons.forEach((weapon, i) => storage.set(`weapon_${i}`, weapon))\r\n\r\n  const database = new ArtCharDatabase(storage) // Validate storage\r\n\r\n  if (!database._getChar(charKey as any))\r\n    throw new Error(`Invalid flex object`)\r\n  return [database, charKey]\r\n}\r\n","import { Alert, Button, Card, Container, Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport '../StatDependency'\r\nimport { createFlexObj, parseFlexObj } from \"./FlexUtil\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useContext, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function FlexDisplay() {\r\n  const location = useLocation()\r\n  const database = useContext(DatabaseContext)\r\n  const searchStr = location.search\r\n  if (searchStr) {\r\n    const flexResult = parseFlexObj(searchStr.substring(1))\r\n    if (!flexResult) return <Redirect to={`/`} />\r\n    const [database, charKey, version] = flexResult\r\n    if (version !== 3)\r\n      return <Redirect to={`/flex?${createFlexObj(charKey, database)}`} />\r\n    return <DatabaseContext.Provider value={database}><Display characterKey={charKey} /></DatabaseContext.Provider>\r\n  } else {\r\n    const characterKey = (location as any).characterKey\r\n    if (!characterKey) return <Redirect to={`/`} />\r\n    const flexObj = createFlexObj(characterKey, database)\r\n    if (!flexObj) return <Redirect to={`/`} />\r\n    window.scrollTo(0, 0)//sometimes the window isnt scrolled to the top on redirect.\r\n    return <Redirect to={`/flex?${flexObj}`} />\r\n  }\r\n}\r\nfunction Display({ characterKey }) {\r\n  const [toast, settoast] = useState(false)\r\n  const url = window.location.href\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(url)\r\n    settoast(true)\r\n  }\r\n  const isUpToDate = false\r\n  return <Container className=\"my-2\">\r\n    <Toast onClose={() => settoast(false)} show={toast} delay={3000} autohide style={{\r\n      position: 'absolute',\r\n      top: 50,\r\n      right: 50,\r\n    }}>\r\n      <Toast.Header><b className=\"mr-auto\">Genshin Optimizer</b></Toast.Header>\r\n      <Toast.Body>URL copied to clipboard.</Toast.Body>\r\n    </Toast>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <InputGroup className=\"mb-0\">\r\n          <InputGroup.Prepend>\r\n            <Button onClick={copyToClipboard}>\r\n              <span><FontAwesomeIcon icon={faLink} /> Copy URL to clipboard</span>\r\n            </Button>\r\n          </InputGroup.Prepend>\r\n          <Form.Control readOnly value={window.location.href} onClick={e => e.target.select()} />\r\n        </InputGroup>\r\n        {isUpToDate && <Alert variant=\"warning\" className=\"py-2 mt-2 mb-0\">This URL is generated on an older database version of Genshin Optimizer. The character data below might not be displayed as intended.</Alert>}\r\n      </Card.Body>\r\n    </Card>\r\n    <CharacterDisplayCard characterKey={characterKey} editable={true} />\r\n  </Container>\r\n}"],"sourceRoot":""}