{"version":3,"sources":["ReactHooks/useCharacterReducer.tsx","Components/FieldDisplay.tsx","Components/CustomNumberInput.tsx","Components/Character/CharacterDropdownButton.tsx","Components/BootstrapTooltip.tsx","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/ExpandButton.tsx","Components/Character/LocationName.tsx","Components/TextButton.tsx","Components/StatDisplay.tsx","Character/StatInput.tsx","Artifact/ArtifactCard.tsx","Artifact/PercentBadge.tsx","Components/Weapon/WeaponSelectionModal.tsx","Weapon/WeaponCard.tsx","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Components/EnemyEditor.tsx","Components/HitModeEditor.tsx","Weapon/WeaponStatsCard.tsx","Weapon/WeaponDisplayCard.tsx","Components/FormulaCalcCard.tsx","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx"],"names":["useCharacterReducer","characterKey","database","useContext","DatabaseContext","useCallback","action","type","setWeaponLocation","id","character","_getChar","statKey","value","bonusStats","characterBaseStats","updateChar","FieldDisplay","field","buildContext","newBuild","equippedBuild","compareBuild","build","canShow","useMemo","fixedVal","fixed","fieldVal","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","parseInt","toFixed","diff","color","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","title","component","sx","cursor","ml","icon","faQuestionCircle","unit","display","justifyContent","FieldDisplayList","styled","List","theme","borderRadius","shape","overflow","margin","backgroundColor","palette","contentDark","main","contentDarker","StyledInputBase","InputBase","primary","transition","dark","CustomNumberInputButtonGroupWrapper","shouldForwardProp","prop","includes","padding","border","width","height","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","CustomNumberInput","onChange","disabled","float","props","useState","state","setState","sendChange","parseFunc","parseFloat","useEffect","toString","onInputChange","e","target","onKeyDOwn","key","aria-label","onBlur","onKeyDown","CharacterDropdownButton","inventory","noUnselect","filter","t","useTranslation","characterSheets","usePromise","CharacterSheet","getAll","characterSheet","get","characterKeys","_getCharKeys","ck","sort","name","startIcon","thumbImg","src","onClick","selected","variant","noWrap","CharacterMenuItemArray","selectedCharacterKey","map","BootstrapTooltip","className","arrow","classes","popper","tooltipClasses","common","black","tooltip","ConditionalSelector","conditional","conditionalValue","setConditional","stats","conditionalNum","conditionalStateKey","states","Object","values","text","evalIfFunc","maxStack","badge","SqBadge","DropdownButton","size","MenuItem","Divider","entries","flatMap","i","stateKey","condial","Array","keys","v","stack","Button","CheckBox","CheckBoxOutlineBlank","ConditionalDisplay","characterDispatch","Conditional","resolve","undefined","conditionalStats","fields","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","conditionalValues","deletePropPath","objClearEmpties","CardDark","CardContent","m","DocumentDisplay","sections","section","talentText","Box","pb","mb","length","ExpandButton","expand","other","transform","marginLeft","transitions","create","duration","shortest","LocationName","location","nameWIthIcon","DisabledButton","secondary","TextButton","children","DisplayStatDiff","label","val","oldVal","hasBonus","oldText","diffText","valueText","StatDisplay","isArray","Formula","characterHP","characterDEF","characterATK","weaponATK","Stat","getStatUnit","fixedUnit","StatIcon","getStatName","labelVariant","hasBonusStats","FlexButtonGroup","ButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","restProps","whiteSpace","flexBasis","flexGrow","px","inputProps","textAlign","endAdornment","allSubstatFilter","Set","allSubstats","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","effFilter","databaseArtifact","updateDatabaseArtifact","followArt","sheet","ArtifactSheet","_getArt","setKey","editable","localDatabase","art","lock","slotKey","rarity","level","mainStatKey","substats","exclude","mainStatLevel","Math","max","min","levelVariant","floor","mainStatVal","valueStringWithUnit","Artifact","mainStatValue","getArtifactEfficiency","currentEfficiency","maxEfficiency","artifactValid","slotName","getSlotName","slotDesc","getSlotDesc","slotDescTooltip","faInfoCircle","setEffects","setDescTooltip","setNumKey","setNum","setEffectDesc","fallback","minHeight","flexDirection","py","alignItems","pl","updateArt","container","flexWrap","item","stars","colored","xs","md","image","slotIcons","pt","stat","numRolls","rolls","rollColor","clamp","efficiency","effOpacity","statName","mr","opacity","has","my","valid","flexShrink","charKey","setArtLocation","faEdit","faBan","faChartLine","faTrashAlt","PercentBadge","badgeColor","WeaponSelectionModal","show","onHide","onSelect","propWeaponFilter","weaponFilter","weaponSheets","WeaponSheet","setWeaponfilter","weaponIdList","allWeaponKeys","wKey","weaponType","a","b","open","onClose","spacing","weaponKey","weaponSheet","lg","img","Assets","weaponTypes","large","WeaponCard","weaponId","canEquip","databaseWeapon","updateDatabaseWeapon","followWeapon","weapon","cs","weaponTypeKey","actionWrapperFunc","equipOnChar","ascension","refinement","weaponMainVal","getMainStatValue","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","statMap","passiveName","push","condition","wrapper","avatar","fontSize","titleTypographyProps","updateWeapon","ascensionMaxLevel","alignContent","mt","statVal","SetEffectDisplay","setEffectText","setStats","setNumStats","setStatsFields","document","setEffectDocument","StatDisplayComponent","sheets","statsDisplayKeys","sectionKey","sectionValues","header","getFormulaTargetsDisplayHeading","characterEle","sm","gutterBottom","mx","JSON","stringify","EnemyExpandCard","expanded","setexpanded","toggle","getStatValueWithBonus","allElements","element","EnemyResText","aria-expanded","p","in","timeout","unmountOnExit","EnemyEditor","immune","resKey","content","uncoloredEleIcons","bsProps","charBaseStats","fullWidth","href","rel","bgcolor","contentLight","getStatNameRaw","enemyLevel","eleKey","immunityStatKey","elementImmunity","faCheckSquare","faSquare","infusionVals","pyro","cryo","InfusionAuraDropdown","infusionAura","isMelee","ReactionToggle","reactionMode","charEleKey","exclusive","baseColor","hydro","HitModeToggle","hitMode","DamageOptionsCard","WeaponStatsCard","statsVals","s","Typography","WeaponDisplayCard","propWeaponId","charData","footer","useForceUpdate","databaseToken","onDatabaseUpdate","buildContextObj","_getWeapon","weaponDispatch","newWeapon","setLevel","findIndex","ascenML","setAscension","lowerAscension","refineIndex","ws","initialWeaponFilter","showModal","setshowModal","CardLight","Grid","k","startAdornment","ambiguousLevel","milestoneLevels","lv","as","lvlstr","Lock","LockOpen","CloseButton","SwapBtn","onChangeId","substatKey","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","description","process","getLevelString","passiveDescription","Provider","setCompareBuild","atk","setShow","close","clickHandler","weapons","dbWeapon","SwapHoriz","ModalWrapper","ImgIcon","FormulaCalcCard","ExpandMore","Collapse","CalculationDisplay","displayStatKeys","getDisplayStatKeys","Skeleton","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","reverse","Boolean","Accordion","AccordionSummary","expandIcon","printStat","AccordionDetails","subKey","formulaField","fieldFixed","fieldUnit","fieldFormula","fieldFormulaDependency","fieldValue","CharacterArtifactPane","history","useHistory","statKeys","edit","artid","pathname","artToEditId","artifactSheets","followAnyArt","equipArts","window","confirm","equippedArtifacts","equipArtifacts","unequipArts","objectFromKeyMap","allSlotKeys","SolidToggleButtonGroup","ToggleButton","Card","warning","setToSlots","setNumKeyArr","CharacterOverviewPane","constellation","tlvl","elementKey","CardMedia","cardImg","star","tKey","Badge","badgeContent","skillBoost","burstBoost","overlap","anchorOrigin","vertical","horizontal","lineHeight","getTalentOfKey","constellationName","equippedWeapon","MainStatsCards","additionalKeys","editStatKeys","otherStatKeys","forEach","ele","miscStatkeys","specializedStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","specializedStatUnit","displayNewBuildProps","StatDisplayCard","columnSpacing","rowSpacing","editContent","getStatNameWithPercent","setedit","faSave","CharacterTalentPane","ReactionDisplay","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","style","onClickTitle","ReactionComponents","superconduct_hit","sKey","electro","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","shattered_hit","information","crystalize_hit","crystalizeEleToDisplay","eleInterArr","ElementToReactionKeys","Ele","anemo","geo","talentLimits","talent","actionWrapeprFunc","CardActionArea","levelBoost","talentLvlKey","newTalentLevelKey","talentStats","getTalentStats","talentStatsFields","statsEle","talentSheet","ConditionalWrapper","TabPanel","current","role","hidden","aria-labelledby","CharacterDisplayCard","setCharacterKey","propNewBuild","tabName","initialCharacter","followChar","deepClone","tab","settab","onTab","calculateBuild","CharSelectDropdown","Tabs","Tab","HeaderIconDisplay","CharacterSelectionModal","ElementalData","talents"],"mappings":"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","file":"static/js/19.1d8124af.chunk.js","sourcesContent":["import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { characterBaseStats } from \"../Util/StatUtil\";\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"bonusStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey) {\r\n  const database = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"bonusStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey, value } = action\r\n        const bonusStats = character.bonusStats\r\n        if (bonusStats[statKey] === value) return\r\n\r\n        bonusStats[statKey] = value\r\n        if ((characterBaseStats(character)[statKey] ?? 0) === value)\r\n          delete bonusStats[statKey]\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\r\n  }, [characterKey, database])\r\n\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, List, ListItem, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { buildContext } from \"../Build/Build\";\r\nimport Character from \"../Character/Character\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\nimport ColorText from \"./ColoredText\";\r\n\r\nexport default function FieldDisplay({ field }: { field: IFieldDisplay }) {\r\n  const { newBuild, equippedBuild, compareBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild)\r\n  const canShow = useMemo(() => build ? field?.canShow?.(build) : false, [field, build])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", build)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      //compareAgainstEquipped\r\n      if (compareBuild && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</ColorText> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareBuild, fixedVal, equippedBuild, field, build])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", build), [field, build])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", build), [field, build])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build)\r\n    return fieldFormulaText ? <BootstrapTooltip placement=\"top\" title={<Typography>{fieldFormulaText}</Typography>}>\r\n      <Box component=\"span\" sx={{ cursor: \"help\", ml: 1 }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n    </BootstrapTooltip> : null\r\n  }, [field, build])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", build), [field, build])\r\n\r\n  if (!canShow) return null\r\n  return <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}  >\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <Typography color={`${fieldVariant}.main`}>{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</Typography>\r\n  </ListItem>\r\n}\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));","import { InputBase, InputProps, styled } from '@mui/material'\r\nimport { useCallback, useEffect, useState } from 'react'\r\ntype props = Omit<InputProps, \"onChange\"> & {\r\n  value?: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  allowEmpty?: boolean,\r\n}\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  transition: \"all 0.5s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-focused\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}))\r\n\r\n// wrap the Input with this when using the input in a buttongroup\r\nexport const CustomNumberInputButtonGroupWrapper = styled(\"button\", {\r\n  shouldForwardProp: (prop) => ![\"fullWidth\", \"disableRipple\", \"disableFocusRipple\", \"disableElevation\"].includes(prop as string)\r\n})(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  padding: 0,\r\n  overflow: \"hidden\",\r\n  border: \"none\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  \"& div\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"&.MuiButtonGroup-grouped:not(:last-of-type)\": {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n  },\r\n  \"&.MuiButtonGroup-grouped:not(:first-of-type)\": {\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n  },\r\n}))\r\n\r\nexport default function CustomNumberInput({ value, onChange, disabled = false, float = false, ...props }: props) {\r\n  const [state, setState] = useState(\"\")\r\n  const sendChange = useCallback(\r\n    () => {\r\n      if (state === \"\") return onChange(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state))\r\n    },\r\n    [onChange, state, float],\r\n  )\r\n  useEffect(() => setState(value?.toString() ?? \"\"), [value, setState]) // update value on value change\r\n  const onInputChange = useCallback(e => setState(e.target.value), [setState],)\r\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && sendChange(), [sendChange],)\r\n  return <StyledInputBase\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    type=\"number\"\r\n    onChange={onInputChange}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={onKeyDOwn}\r\n    {...props}\r\n  />\r\n}","import { BusinessCenter, Replay } from \"@mui/icons-material\";\r\nimport { Divider, ListItemIcon, MenuItem, Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport DropdownButton, { DropdownButtonProps } from \"../DropdownMenu/DropdownButton\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  value: CharacterKey | \"\"\r\n  onChange: (ck: CharacterKey | \"\") => void\r\n  filter?: (cs: CharacterSheet) => boolean\r\n  inventory?: boolean\r\n  noUnselect?: boolean\r\n}\r\n\r\nexport default function CharacterDropdownButton({ value, onChange, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const database = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\r\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck])).sort()\r\n  return <DropdownButton\r\n    {...props}\r\n    title={characterSheet?.name ?? (inventory ? t`inventory` : t`unselect`)}\r\n    color={value ? \"success\" : \"primary\"}\r\n    startIcon={characterSheet?.thumbImg ? <ImgIcon src={characterSheet.thumbImg} /> : (inventory ? <BusinessCenter /> : <Replay />)}>\r\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <BusinessCenter />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`inventory`}\r\n      </Typography>\r\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <Replay />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`unselect`}\r\n      </Typography>\r\n    </MenuItem>)}\r\n    {!noUnselect && <Divider key=\"div\" />}\r\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value)}\r\n  </DropdownButton >\r\n}\r\n\r\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\r\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\") {\r\n  return characterKeys.map(characterKey =>\r\n    <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\r\n      <ListItemIcon>\r\n        <ImgIcon src={characterSheets[characterKey].thumbImg} />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {characterSheets?.[characterKey]?.name}\r\n      </Typography>\r\n    </MenuItem>)\r\n}","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n}));\r\nexport default BootstrapTooltip","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, Divider, MenuItem } from '@mui/material';\r\nimport React from 'react';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled = false, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled?: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</SqBadge>\r\n    return <DropdownButton size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n      <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n        <span>Not Active</span>\r\n      </MenuItem>\r\n      <Divider />\r\n      {Object.entries(conditional.states).flatMap(([stateKey, condial]: any, i) =>\r\n        [...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n          <MenuItem key={stateKey + i} onClick={() => setConditional([stack, stateKey])} selected={conditionalStateKey === stateKey && conditionalNum === stack} disabled={conditionalStateKey === stateKey && conditionalNum === stack} >\r\n            {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n          </MenuItem>)\r\n      )}\r\n    </DropdownButton>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</SqBadge>\r\n      return <DropdownButton size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n        <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n          <span>Not Active</span>\r\n        </MenuItem>\r\n        <Divider />\r\n        {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <MenuItem key={stack} onClick={() => setConditional([stack])} selected={conditionalNum === stack} disabled={conditionalNum === stack}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </MenuItem>)}\r\n      </DropdownButton>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"small\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled} startIcon={conditionalNum ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n        {name}\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { CardContent } from \"@mui/material\"\r\nimport { useCallback, useContext, useMemo } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport IConditional from \"../Types/IConditional\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  characterKey: CharacterKey\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, characterKey }: ConditionalDisplayProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    if (!stats) return\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else if (conditional.keys)\r\n      layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats, characterDispatch])\r\n\r\n  if (!canShow || !stats) return null\r\n  return <CardDark>\r\n    <CardContent>\r\n      <ConditionalSelector\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </CardContent>\r\n    <FieldDisplayList sx={{ m: 0 }}>\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Box } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport { DocumentSection } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport ConditionalDisplay from \"./ConditionalDisplay\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype SkillDisplayCardProps = {\r\n  sections: DocumentSection[],\r\n  characterKey: CharacterKey,\r\n}\r\nexport default function DocumentDisplay({ sections, characterKey }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  return <div>{sections?.map((section, i) => {\r\n    if (!section.canShow!(build)) return null\r\n    const talentText = evalIfFunc(section.text, build)\r\n    const fields = section.fields ?? []\r\n    return <Box key={\"section\" + i} sx={{\r\n      pb: -1,\r\n      \"& > *\": {\r\n        mb: 1\r\n      }\r\n    }}>\r\n      <div>{talentText}</div>\r\n      {fields.length > 0 && <FieldDisplayList>\r\n        {fields?.map?.((field, i) => <FieldDisplay key={i} field={field} />)}\r\n      </FieldDisplayList>}\r\n      {!!section.conditional && <ConditionalDisplay conditional={section.conditional} characterKey={characterKey} />}\r\n    </Box>\r\n  })}</div>\r\n}\r\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\nconst ExpandButton = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: (theme as any).transitions.create('transform', {\r\n    duration: (theme as any).transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default ExpandButton","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\n\r\nexport default function LocationName({ location }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter /> {t`inventory`}</span>}\r\n  </Typography>\r\n\r\n}","import { Button, ButtonProps, styled } from \"@mui/material\";\r\n\r\nconst DisabledButton = styled(Button)(({ theme }) => ({\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.text.secondary,\r\n  }\r\n}))\r\n\r\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\r\n  return <DisabledButton {...props} disabled  >\r\n    {children}\r\n  </DisabledButton>\r\n}\r\n","import { Box, Typography } from \"@mui/material\"\r\nimport { useMemo } from \"react\"\r\nimport Character from \"../Character/Character\"\r\nimport Formula from \"../Formula\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat from \"../Stat\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { characterBaseStats } from \"../Util/StatUtil\"\r\nimport ColorText from \"./ColoredText\"\r\nimport StatIcon from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", hasBonus = false }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <ColorText color={diff > 0 ? \"success\" : \"error\"}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</ColorText>\r\n  const valueText = <>{oldText}{diffText}</>\r\n  return <Box display=\"flex\" justifyContent=\"space-between\" >\r\n    <Typography>{label}</Typography>\r\n    <Typography>\r\n      {hasBonus ? <strong>{valueText}</strong> : valueText}\r\n    </Typography>\r\n  </Box>\r\n}\r\ntype StatDisplayProps = {\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ character, equippedBuild, newBuild, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined, [statKey])\r\n\r\n  const { val, oldVal, fixed, unit, label, hasBonus } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        oldVal = characterBaseStats(character)[statKey] as number | undefined\r\n        if (build) {\r\n          if (statKey === \"finalHP\")\r\n            oldVal = build.characterHP\r\n          else if (statKey === \"finalDEF\")\r\n            oldVal = build.characterDEF\r\n          else if (statKey === \"finalATK\")\r\n            oldVal = build.characterATK + build.weaponATK\r\n        }\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <ColorText color={labelVariant} >{Character.getTalentFieldValue(field, \"text\", build)}</ColorText>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      unit = Character.getTalentFieldValue(field, \"unit\", build, \"\")\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    return { val, oldVal, fixed, unit, label, hasBonus: Character.hasBonusStats(character, statKey) }\r\n  }, [character, equippedBuild, newBuild, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, label: label as any, hasBonus }} />\r\n}","import { Replay } from \"@mui/icons-material\"\r\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\r\nimport { ReactNode } from \"react\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport TextButton from \"../Components/TextButton\"\r\n\r\ntype StatInputInput = ButtonGroupProps & {\r\n  name: Displayable,\r\n  children?: ReactNode,\r\n  value: number,\r\n  placeholder?: string,\r\n  defaultValue?: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n}\r\nconst FlexButtonGroup = styled(ButtonGroup)({\r\n  display: \"flex\"\r\n})\r\n\r\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, ...restProps }: StatInputInput) {\r\n  return <FlexButtonGroup {...restProps} >\r\n    {children}\r\n    <TextButton sx={{ whiteSpace: \"nowrap\" }} >\r\n      {name}\r\n    </TextButton>\r\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: 30, flexGrow: 1 }} >\r\n      <CustomNumberInput\r\n        sx={{ px: 1 }}\r\n        inputProps={{\r\n          sx: { textAlign: \"right\" }\r\n        }}\r\n        float={percent}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onValueChange}\r\n        disabled={disabled}\r\n        endAdornment={percent ? \"%\" : undefined}\r\n      />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\r\n      <Replay />\r\n    </Button>\r\n  </FlexButtonGroup>\r\n}","import { faBan, faChartLine, faEdit, faInfoCircle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Lock, LockOpen } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardActions, CardContent, CardMedia, Chip, Grid, IconButton, Skeleton, Tooltip, Typography } from '@mui/material';\r\nimport React, { Suspense, useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport BootstrapTooltip from '../Components/BootstrapTooltip';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton';\r\nimport LocationName from '../Components/Character/LocationName';\r\nimport ColorText from '../Components/ColoredText';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { database as localDatabase, DatabaseContext } from '../Database/Database';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport Stat from '../Stat';\r\nimport { allSubstats, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { valueStringWithUnit } from '../Util/UIUtil';\r\nimport { clamp } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport SlotNameWithIcon from './Component/SlotNameWIthIcon';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: ICachedArtifact, onEdit?: (string) => void, onDelete?: (string) => void, mainStatAssumptionLevel?: number, effFilter?: Set<SubstatKey> }\r\nconst allSubstatFilter = new Set(allSubstats)\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter }: Data): JSX.Element | null {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseArtifact, updateDatabaseArtifact] = useState(undefined as ICachedArtifact | undefined)\r\n  useEffect(() =>\r\n    artifactId ? database.followArt(artifactId, updateDatabaseArtifact) : undefined,\r\n    [artifactId, updateDatabaseArtifact, database])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? database._getArt(artifactId) : undefined))?.setKey), [artifactObj, artifactId])\r\n  const equipOnChar = (charKey: CharacterKey | \"\") => database.setArtLocation(artifactId!, charKey)\r\n\r\n  const editable = !artifactObj && database === localDatabase // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? databaseArtifact\r\n  if (!art) return null\r\n\r\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude, location = \"\" } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  const mainStatVal = <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{valueStringWithUnit(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, Stat.getStatUnit(mainStatKey))}</ColorText>\r\n  const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\r\n  const artifactValid = maxEfficiency !== 0\r\n  const slotName = sheet?.getSlotName(slotKey) || \"Unknown Piece Name\"\r\n  const slotDesc = sheet?.getSlotDesc(slotKey)\r\n  const slotDescTooltip = slotDesc && <BootstrapTooltip placement=\"top\" title={<Typography>{slotDesc}</Typography>}>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n  const setEffects = sheet?.setEffects\r\n  const setDescTooltip = sheet && setEffects && <BootstrapTooltip placement=\"top\" title={\r\n    <span>\r\n      {Object.keys(setEffects).map(setNumKey => <span key={setNumKey}>\r\n        <Typography variant=\"h6\"><SqBadge color=\"success\">{t(`setEffectNum`, { setNum: setNumKey })}</SqBadge></Typography>\r\n        <Typography>{sheet.setEffectDesc(setNumKey as any)}</Typography>\r\n      </span>)}\r\n    </span>\r\n  }>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <CardContent className={`grad-${rarity}star`} sx={{ py: 1 }}>\r\n        <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Chip label={<strong>{` +${level}`}</strong>} color={levelVariant as any} />\r\n          <Typography sx={{ pl: 1, flexGrow: 1 }}>{slotName} {slotDescTooltip}</Typography>\r\n          <IconButton color=\"secondary\" disabled={!editable} onClick={() => database.updateArt({ lock: !lock }, id)}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>\r\n        </Box>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item flexGrow={1}>\r\n            <Typography color=\"text.secondary\" variant=\"body2\">\r\n              <SlotNameWithIcon slotKey={slotKey} />\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {Stat.getStatName(mainStatKey)}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <strong>{mainStatVal}</strong>\r\n            </Typography>\r\n            <Stars stars={rarity} colored />\r\n            {/* {process.env.NODE_ENV === \"development\" && <Typography color=\"common.black\">{id || `\"\"`} </Typography>} */}\r\n          </Grid>\r\n          <Grid item xs={3} md={4}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={sheet?.slotIcons[slotKey] ?? \"\"}\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardContent sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\", pt: 1, pb: 0 }}>\r\n        {substats.map((stat: ICachedSubstat, i) => {\r\n          if (!stat.value) return null\r\n          const numRolls = stat.rolls?.length ?? 0\r\n          const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n          const efficiency = stat.efficiency ?? 0\r\n          const effOpacity = 0.3 + (efficiency / 100) * 0.7\r\n          const statName = Stat.getStatName(stat.key)\r\n          return (<Box key={i} sx={{ display: \"flex\" }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <SqBadge color={(numRolls ? rollColor : \"error\") as any} sx={{ mr: 1 }}><strong>{numRolls ? numRolls : \"?\"}</strong></SqBadge>\r\n              <Typography color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">{statName}{`+${valueStringWithUnit(stat.value, Stat.getStatUnit(stat.key))}`}</Typography>\r\n            </Box>\r\n            <Typography sx={{ opacity: effOpacity }}>{stat.key && effFilter.has(stat.key) ? valueStringWithUnit(efficiency, \"eff\") : \"-\"}</Typography>\r\n          </Box>)\r\n        })}\r\n        <Box sx={{ display: \"flex\", my: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.curSubEff`}</Typography>\r\n          <PercentBadge value={currentEfficiency} valid={artifactValid} />\r\n        </Box>\r\n        {currentEfficiency !== maxEfficiency && <Box sx={{ display: \"flex\", mb: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.maxSubEff`}</Typography>\r\n          <PercentBadge value={maxEfficiency} valid={artifactValid} />\r\n        </Box>}\r\n        <Box flexGrow={1} />\r\n        <Typography color=\"success.main\">{sheet?.name ?? \"Artifact Set\"} {setDescTooltip}</Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item xs=\"auto\" flexShrink={1}>\r\n            {editable ?\r\n              <CharacterDropdownButton size=\"small\" inventory value={location} onChange={equipOnChar} /> : <LocationName location={location} />}\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n          {editable && <Grid item xs=\"auto\">\r\n            <ButtonGroup sx={{ height: \"100%\" }}>\r\n              {!!onEdit && <Button color=\"info\" onClick={() => onEdit(id)} size=\"small\">\r\n                <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n              </Button>}\r\n              <Tooltip title={<Typography>{t`excludeArtifactTip`}</Typography>} placement=\"top\" arrow>\r\n                <Button onClick={() => database.updateArt({ exclude: !exclude }, id)} color={exclude ? \"error\" : \"success\"} size=\"small\">\r\n                  <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\r\n                </Button>\r\n              </Tooltip>\r\n              {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={lock}>\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n              </Button>}\r\n            </ButtonGroup>\r\n          </Grid>}\r\n        </Grid>\r\n      </CardActions>\r\n    </CardLight >\r\n  </Suspense>\r\n}\r\n","import SqBadge from '../Components/SqBadge';\r\nimport { clamp } from '../Util/Util';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`roll${clamp(Math.floor(value * 0.05) + 1, 1, 6)}`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"error\"\r\n  return <SqBadge color={badgeColor} >{text}</SqBadge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey | \"\">(propWeaponFilter ?? \"\")\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter(propWeaponFilter), [propWeaponFilter])\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.img} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, CardHeader, Grid, IconButton, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useEffect, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton'\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false }: WeaponCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [databaseWeapon, updateDatabaseWeapon] = useState(undefined as ICachedWeapon | undefined)\r\n  useEffect(() =>\r\n    weaponId ? database.followWeapon(weaponId, updateDatabaseWeapon) : undefined,\r\n    [weaponId, updateDatabaseWeapon, database])\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => onClick?.(weaponId)} sx={{ height: \"100%\" }}>{children}</CardActionArea>,\r\n    [onClick, weaponId],\r\n  )\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.setWeaponLocation(weaponId, charKey), [database, weaponId],)\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <div className={`grad-${weaponSheet.rarity}star`} >\r\n          <CardHeader title={weaponSheet.name} avatar={<ImgIcon sx={{ fontSize: \"2em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />} titleTypographyProps={{ variant: \"h6\" }}\r\n            action={!onClick && <IconButton color=\"secondary\" onClick={() => database.updateWeapon({ lock: !lock }, id)}>\r\n              {lock ? <Lock /> : <LockOpen />}\r\n            </IconButton>} />\r\n          <Box sx={{ px: 2 }}>\r\n            <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n              <Grid item flexGrow={1}>\r\n                <Typography component=\"span\" variant=\"h4\">Lv. {level}</Typography>\r\n                <Typography component=\"span\" variant=\"h4\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n                <Typography variant=\"h5\">Refinement <strong>{refinement}</strong></Typography>\r\n                <Typography><Stars stars={weaponSheet.rarity} colored /></Typography>\r\n              </Grid>\r\n              {/* use flex-end here to align the image to the bottom. */}\r\n              <Grid item container xs={3} md={4} alignContent=\"flex-end\">\r\n                <Box\r\n                  component=\"img\"\r\n                  src={weaponSheet.img}\r\n                  width=\"100%\"\r\n                  height=\"auto\"\r\n                  sx={{ mt: \"auto\" }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </div>\r\n        <CardContent>\r\n          {statMap.map(([statKey, statVal]) => {\r\n            let unit = Stat.getStatUnit(statKey)\r\n            return <Box key={statKey} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[statKey]} {Stat.getStatName(statKey)}</Typography>\r\n              <Typography>{statVal + unit}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n        {/* grow to fill the 100% heigh */}\r\n        <Box flexGrow={1} />\r\n        <Grid container sx={{ flexWrap: \"nowrap\", py: 1, px: 2 }} >\r\n          <Grid item xs=\"auto\" flexShrink={1}>\r\n            {canEquip ? <CharacterDropdownButton size=\"small\" noUnselect inventory value={location} onChange={equipOnChar} filter={filter} /> : <LocationName location={location} />}\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n          <Grid item xs=\"auto\">\r\n            <ButtonGroup sx={{ height: \"100%\" }}>\r\n              {!!onEdit && <Button color=\"info\" size=\"small\" onClick={() => onEdit(id)} >\r\n                <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n              </Button>}\r\n              {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n              </Button>}\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </CardLight>\r\n    </ConditionalWrapper>\r\n  </Suspense>\r\n}","import { Box, CardContent, Typography } from \"@mui/material\"\r\nimport CardDark from \"../../Components/Card/CardDark\"\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../../Components/FieldDisplay\"\r\nimport SqBadge from \"../../Components/SqBadge\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectDesc(setNumKey)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const document = sheet.setEffectDocument(setNumKey)\r\n  return <Box sx={{\r\n    mt: 1,\r\n    \"> div\": { mb: 1 },\r\n  }}>\r\n    <CardDark>\r\n      <CardContent>\r\n        <Typography><SqBadge color=\"success\">{setNumKey}-Set</SqBadge> {setEffectText}</Typography>\r\n      </CardContent>\r\n      <FieldDisplayList sx={{ m: 0 }}>\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n      </FieldDisplayList>\r\n    </CardDark>\r\n    {document ? <DocumentDisplay sections={document} characterKey={stats.characterKey} /> : null}\r\n  </Box>\r\n}\r\n","import { CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { ArtifactSheet } from \"../../Artifact/ArtifactSheet\"\r\nimport CardDark from \"../../Components/Card/CardDark\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICachedCharacter } from \"../../Types/character\"\r\nimport { ArtifactSetKey } from \"../../Types/consts\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../CharacterUtil\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  character: ICachedCharacter\r\n  statsDisplayKeys: any,\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ sheets, sheets: { characterSheet, weaponSheet }, character, equippedBuild, newBuild, statsDisplayKeys }: StatDisplayComponentProps) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Grid container spacing={1}>{Object.entries(statsDisplayKeys).map(([sectionKey, sectionValues]: any) => {\r\n    const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build?.characterEle)\r\n    return <Grid item key={sectionKey} xs={12} sm={6} md={4} lg={4}>\r\n      <CardDark sx={{ height: \"100%\", }}>\r\n        <CardContent>\r\n          <Typography variant=\"subtitle1\" gutterBottom>{header}</Typography>\r\n          <Divider sx={{ mb: 1, mx: -2 }} />\r\n          {sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statKey }} />)}\r\n        </CardContent>\r\n      </CardDark>\r\n    </Grid>\r\n  })}</Grid>\r\n}","import { faCheckSquare, faSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ExpandMore } from \"@mui/icons-material\";\r\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useState } from 'react';\r\nimport Character from \"../Character/Character\";\r\nimport StatInput from \"../Character/StatInput\";\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../Stat\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allElements, ElementKey } from \"../Types/consts\";\r\nimport { characterBaseStats } from \"../Util/StatUtil\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport ExpandButton from \"./ExpandButton\";\r\nimport { uncoloredEleIcons } from \"./StatIcon\";\r\n\r\nexport function EnemyExpandCard({ character }) {\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1} alignItems=\"center\">\r\n          <Grid container spacing={1}>\r\n            <Grid item>\r\n              <Chip size=\"small\" color=\"success\" label={<span>{Stat.getStatName(\"enemyLevel\")} <strong>{Character.getStatValueWithBonus(character, \"enemyLevel\")}</strong></span>} />\r\n            </Grid>\r\n            {[\"physical\", ...allElements].map(element => <Grid item key={element}>\r\n              <Typography key={element} ><EnemyResText element={element} character={character} /></Typography>\r\n            </Grid>)}\r\n            <Grid item>\r\n              <Typography>DEF Reduction {Character.getStatValueWithBonus(character, \"enemyDEFRed_\")}%</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <ExpandButton\r\n            expand={expanded}\r\n            onClick={toggle}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n            size=\"small\"\r\n            sx={{ p: 0 }}\r\n          >\r\n            <ExpandMore />\r\n          </ExpandButton>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <EnemyEditor character={character} />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nexport function EnemyResText({ character, element }: { character: ICachedCharacter, element: string }) {\r\n  const immune = !!Character.getStatValueWithBonus(character, `${element}_enemyImmunity`)\r\n  const resKey = `${element}_enemyRes_`\r\n  const content = immune ? <span >{uncoloredEleIcons[element]} IMMUNE</span> :\r\n    <span >{uncoloredEleIcons[element]}RES <strong>{Character.getStatValueWithBonus(character, resKey)}%</strong></span>\r\n  return <ColorText color={element}>{content}</ColorText>\r\n}\r\n\r\n\r\nexport function EnemyEditor({ character, character: { key: characterKey, }, bsProps = { xs: 12, md: 6 } }: { character: ICachedCharacter, bsProps?: object }) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const charBaseStats = characterBaseStats(character)\r\n  return <Grid container spacing={1}>\r\n    <Grid item {...bsProps}>\r\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n        To get the specific resistance values of enemies, please visit the wiki.\r\n      </Button>\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>Enemy Level</b>}\r\n        value={Character.getStatValueWithBonus(character, \"enemyLevel\")}\r\n        placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n        defaultValue={charBaseStats.enemyLevel}\r\n        onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey: \"enemyLevel\", value })}\r\n      />\r\n    </Grid>\r\n    {([\"physical\", ...allElements] as Array<ElementKey | \"physical\">).map(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      let immunityStatKey = `${eleKey}_enemyImmunity`\r\n      let elementImmunity = Character.getStatValueWithBonus(character, immunityStatKey)\r\n      return <Grid item key={eleKey} {...bsProps}>\r\n        <StatInput\r\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n          name={<b>{Stat.getStatName(statKey)}</b>}\r\n          value={Character.getStatValueWithBonus(character, statKey)}\r\n          placeholder={Stat.getStatNameRaw(statKey)}\r\n          defaultValue={charBaseStats[statKey]}\r\n          onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey, value })}\r\n          disabled={elementImmunity}\r\n          percent\r\n        >\r\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"bonusStats\", statKey: immunityStatKey, value: !elementImmunity })} >\r\n            <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n          </Button>\r\n        </StatInput>\r\n      </Grid>\r\n    })}\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{Stat.getStatName(\"enemyDEFRed_\")}</b>}\r\n        value={Character.getStatValueWithBonus(character, \"enemyDEFRed_\")}\r\n        placeholder={Stat.getStatNameRaw(\"enemyDEFRed_\")}\r\n        defaultValue={charBaseStats[\"enemyDEFRed_\"]}\r\n        onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey: \"enemyDEFRed_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\r\n    </Grid>\r\n  </Grid>\r\n}","import { CardContent, Grid, MenuItem, ToggleButton, ToggleButtonGroupProps } from \"@mui/material\";\r\nimport { useContext } from 'react';\r\nimport { buildContext } from \"../Build/Build\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\";\r\nimport usePromise from \"../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport DropdownButton, { DropdownButtonProps } from \"./DropdownMenu/DropdownButton\";\r\nimport SolidToggleButtonGroup from \"./SolidToggleButtonGroup\";\r\nimport StatIcon, { uncoloredEleIcons } from \"./StatIcon\";\r\nconst infusionVals = {\r\n  \"\": <span>No External Infusion</span>,\r\n  \"pyro\": <span >{uncoloredEleIcons.pyro} Pyro Infusion</span>,\r\n  \"cryo\": <span >{uncoloredEleIcons.cryo} Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  character: ICachedCharacter,\r\n}\r\nexport function InfusionAuraDropdown({ character: { infusionAura = \"\", key: characterKey }, ...props }: InfusionAuraDropdownProps) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!characterSheet?.isMelee()) return null\r\n  return <DropdownButton title={infusionVals[infusionAura]} color={infusionAura || \"secondary\"} {...props}>\r\n    {Object.entries(infusionVals).map(([key, text]) =>\r\n      <MenuItem key={key} sx={key ? { color: `${key}.main` } : undefined}\r\n        selected={key === infusionAura} disabled={key === infusionAura}\r\n        onClick={() => characterDispatch({ infusionAura: key })}>{text}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n\r\ntype ReactionToggleProps = Omit<ToggleButtonGroupProps, \"color\"> & {\r\n  character: ICachedCharacter,\r\n  build: ICalculatedStats,\r\n}\r\nexport function ReactionToggle({ character: { reactionMode = \"\", infusionAura, key: characterKey }, build, ...props }: ReactionToggleProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <SolidToggleButtonGroup exclusive baseColor=\"secondary\"\r\n    value={reactionMode} onChange={(e, reactionMode) => characterDispatch({ reactionMode })} {...props}>\r\n    <ToggleButton value=\"\" >No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value=\"pyro_vaporize\"  >\r\n      <ColorText color=\"vaporize\">Vaporize(Pyro){StatIcon.hydro}+{StatIcon.pyro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"}  >\r\n      <ColorText color=\"melt\">Melt(Pyro) {StatIcon.cryo}+{StatIcon.pyro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"}  >\r\n      <ColorText color=\"vaporize\">Vaporize(Hydro) {StatIcon.pyro}+{StatIcon.hydro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"}  >\r\n      <ColorText color=\"melt\">Melt(Cryo) {StatIcon.pyro}+{StatIcon.cryo}</ColorText>\r\n    </ToggleButton >}\r\n  </SolidToggleButtonGroup>\r\n}\r\ntype HitModeToggleProps = Omit<ToggleButtonGroupProps, \"color\"> & {\r\n  character: ICachedCharacter\r\n}\r\nexport function HitModeToggle({ character: { hitMode = \"avgHit\", key: characterKey }, ...props }: HitModeToggleProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  return <SolidToggleButtonGroup exclusive baseColor=\"secondary\"\r\n    value={hitMode} onChange={(e, hitMode) => characterDispatch({ hitMode })} {...props} >\r\n    <ToggleButton value=\"avgHit\">Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\">Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\">Crit Hit DMG</ToggleButton>\r\n  </SolidToggleButtonGroup>\r\n}\r\n\r\n\r\nexport function DamageOptionsCard({ character }: { character: ICachedCharacter }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        <Grid item><HitModeToggle character={character} size=\"small\" /></Grid>\r\n        <Grid item><InfusionAuraDropdown character={character} /></Grid>\r\n        <Grid item><ReactionToggle character={character} build={build} size=\"small\" /></Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\n","import { CardContent, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../Components/FieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nexport default function WeaponStatsCard({ title, statsVals = {}, stats }: { title: Displayable, statsVals?: object, stats: ICalculatedStats }) {\r\n  if ((Object.keys(statsVals) as string[]).filter(s => s !== \"modifiers\").length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <CardDark sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Typography>{title}</Typography>\r\n    </CardContent>\r\n    <FieldDisplayList>\r\n      {fields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ColorText from \"../Components/ColoredText\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/LevelData\"\r\nimport { database as localDatabase, DatabaseContext } from \"../Database/Database\"\r\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\nimport WeaponStatsCard from \"./WeaponStatsCard\"\r\n\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  charData?: {\r\n    character: ICachedCharacter,\r\n    characterSheet: CharacterSheet,\r\n    equippedBuild?: ICalculatedStats\r\n    newBuild?: ICalculatedStats\r\n    characterDispatch: (any) => void\r\n  }\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  charData,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  const buildContextObj = useContext(buildContext)\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(propWeaponId!)!,\r\n    [propWeaponId, databaseToken, database])\r\n  const { key, level, refinement, ascension, lock } = weapon\r\n  const { location = \"\", id } = weapon as Partial<ICachedWeapon>\r\n  const weaponSheet: WeaponSheet | undefined = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  useEffect(() =>\r\n    propWeaponId ? database.followWeapon(propWeaponId, onDatabaseUpdate) : undefined,\r\n    [propWeaponId, onDatabaseUpdate, database])\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const build = { ...(charData ? (charData.newBuild ?? charData.equippedBuild) : { weapon: { refineIndex: refinement - 1, level, ascension } }) } as any\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n  const [showModal, setshowModal] = useState(false)\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container spacing={1}>\r\n            <Grid item >\r\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n              <ButtonGroup>\r\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n                <DropdownButton title={`Refinement ${refinement}`}>\r\n                  <MenuItem>Select Weapon Refinement</MenuItem>\r\n                  <Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </MenuItem>)}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item >\r\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n                <CustomNumberInputButtonGroupWrapper >\r\n                  <CustomNumberInput onChange={setLevel} value={level}\r\n                    startAdornment=\"Lvl. \"\r\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                  />\r\n                </CustomNumberInputButtonGroupWrapper>\r\n                <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n                <DropdownButton title={\"Select Level\"} >\r\n                  {milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    const selected = lv === level && as === ascension\r\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                  })}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n                {lock ? \"Locked\" : \"Unlocked\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!!onClose && <Grid item  >\r\n          <CloseButton onClick={onClose} />\r\n        </Grid>}\r\n        {!!charData && database === localDatabase && <Grid item >\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, charData.character.key)} />\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      {(() => {\r\n        if (!weaponSheet) return null\r\n        const substatKey = weaponSheet.getSubStatKey()\r\n        const weaponDisplayMainVal = weaponSheet.getMainStatValue(level, ascension)\r\n        const weaponDisplaySubVal = weaponSheet.getSubStatValue(level, ascension)\r\n        const weaponPassiveName = weaponSheet.passiveName\r\n        const weaponBonusStats = weaponSheet.stats(build)\r\n        const sections = weaponSheet.document\r\n\r\n        return <Grid container spacing={1} >\r\n          <Grid item xs={12} sm={6} md={3} lg={4}>\r\n            <Box component=\"img\" src={weaponSheet.img} className={`grad-${weaponSheet.rarity}star`} sx={{ width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            <Typography><small>{weaponSheet.description}</small></Typography>\r\n          </Grid>\r\n          <Grid item sx={{ mb: -1 }} xs={12} sm={6} md={9} lg={8} >\r\n            <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {WeaponSheet.getLevelString(weapon)} {weaponPassiveName && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\r\n            <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n            <Typography variant=\"subtitle1\">{weaponPassiveName}</Typography>\r\n            <Typography gutterBottom>{weaponPassiveName && weaponSheet.passiveDescription(build)}</Typography>\r\n            {build && <buildContext.Provider value={charData ? buildContextObj : { equippedBuild: build, newBuild: undefined, compareBuild: false, setCompareBuild: undefined }}>\r\n              <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: substatKey ? weaponDisplaySubVal : undefined }} stats={build} />\r\n              <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            </buildContext.Provider>}\r\n            {charData && sections ? (() => {\r\n              const { equippedBuild, newBuild } = charData\r\n              const characterKey = (newBuild ? newBuild : equippedBuild)?.characterKey as CharacterKey | undefined\r\n              return !!characterKey && < DocumentDisplay  {...{ sections, equippedBuild, newBuild, characterKey }} />\r\n            })() : null}\r\n          </Grid>\r\n        </Grid>\r\n      })()}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} lg={4} md={6} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}","import { ExpandMore } from \"@mui/icons-material\"\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, Collapse, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo, useState } from \"react\"\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../Character/CharacterUtil\"\r\nimport Formula from \"../Formula\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat, { FormulaDisplay } from \"../Stat\"\r\nimport { GetDependencies } from \"../StatDependency\"\r\nimport { ArtifactSetKey } from \"../Types/consts\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardLight from \"./Card/CardLight\"\r\nimport ColorText from \"./ColoredText\"\r\nimport ExpandButton from \"./ExpandButton\"\r\n\r\nexport default function FormulaCalcCard({ sheets }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n}) {\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <Typography>Formulas {\"&\"} Calculations</Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">Expand to see every formula and all their calculations.</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <ExpandButton\r\n            expand={expanded}\r\n            onClick={toggle}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMore />\r\n          </ExpandButton>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <CalculationDisplay sheets={sheets} build={build} />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nfunction CalculationDisplay({ sheets, build }: {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  },\r\n  build: ICalculatedStats\r\n}) {\r\n  const displayStatKeys = useMemo(() => build && Character.getDisplayStatKeys(build, sheets), [build, sheets])\r\n  if (!build) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\r\n    {Object.entries(displayStatKeys).map(([sectionKey, fields]: [string, any]) => {\r\n      const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build.characterEle)\r\n      return <CardDark key={sectionKey} sx={{ mb: 1 }}>\r\n        <CardContent sx={{ pb: 1 }}>\r\n          <Typography variant=\"h6\">{header}</Typography>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          {fields.map((field, fieldIndex) => {\r\n            if (Array.isArray(field))\r\n              return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} />\r\n            else if (typeof field === \"string\") {//simple statKey field\r\n              const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, [field]), build?.modifiers).reverse()\r\n              return Boolean(subFormulaKeys.length) && <Accordion sx={{ bgcolor: \"contentLight.main\" }} key={fieldIndex}>\r\n                <AccordionSummary expandIcon={<ExpandMore />}>\r\n                  <Typography>{Stat.printStat(field, build)}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  {subFormulaKeys.map(subKey =>\r\n                    <Typography key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></Typography>\r\n                  )}\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            }\r\n            return null\r\n          })}\r\n        </CardContent>\r\n      </CardDark>\r\n    })}\r\n  </Suspense>\r\n}\r\n\r\nfunction FormulaCalculationField({ fieldKeys, build }: { fieldKeys: string[], build: ICalculatedStats }) {\r\n  const formula = usePromise(Formula.get(fieldKeys), [fieldKeys])\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const fieldFixed = Character.getTalentFieldValue(formulaField, \"fixed\", build) ?? 0\r\n  const fieldUnit = Character.getTalentFieldValue(formulaField, \"unit\", build) ?? \"\"\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.(fieldFixed)\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Accordion sx={{ bgcolor: \"contentLight.main\" }}>\r\n    <AccordionSummary expandIcon={<ExpandMore />}>\r\n      <Typography><Box color={`${fieldVariant}.main`} component=\"strong\">{fieldText}</Box> <ColorText color=\"info\">{fieldValue}{fieldUnit}</ColorText></Typography>\r\n    </AccordionSummary>\r\n    <AccordionDetails>\r\n      <Typography><Box color={`${fieldVariant}.main`} component=\"strong\">{fieldText}</Box> <ColorText color=\"info\">{fieldValue}</ColorText> = <small>{fieldFormulaText}</small></Typography>\r\n      {subFormulaKeys.map(subKey =>\r\n        <Typography key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></Typography>\r\n      )}\r\n    </AccordionDetails>\r\n  </Accordion>\r\n}","import { Button, Card, CardContent, Divider, Grid, ToggleButton, Typography } from '@mui/material';\r\nimport { useCallback, useContext, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { buildContext } from '../../Build/Build';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport SolidToggleButtonGroup from '../../Components/SolidToggleButtonGroup';\r\nimport { database as localDatabase, DatabaseContext } from '../../Database/Database';\r\nimport useForceUpdate from '../../ReactHooks/useForceUpdate';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport { allSlotKeys, ArtifactSetKey } from '../../Types/consts';\r\nimport { objectFromKeyMap } from '../../Util/Util';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  sheets: {\r\n    characterSheet: CharacterSheet\r\n    weaponSheet: WeaponSheet,\r\n    artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>\r\n  }\r\n  character: ICachedCharacter,\r\n}\r\nfunction CharacterArtifactPane({ sheets, character, character: { key: characterKey } }: CharacterArtifactPaneProps) {\r\n  const { newBuild, equippedBuild, compareBuild, setCompareBuild } = useContext(buildContext)\r\n  const database = useContext(DatabaseContext)\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = (newBuild ? newBuild : equippedBuild)\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => stats && Character.getDisplayStatKeys(stats, sheets), [stats, sheets])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  // TODO: We can also listen only to equipped artifacts\r\n  const [, updateArt] = useForceUpdate()\r\n  useEffect(() => database.followAnyArt(updateArt))\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && database.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n  }, [characterKey, newBuild, database])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    database.equipArtifacts(characterKey, objectFromKeyMap(allSlotKeys, () => \"\"))\r\n  }, [characterKey, database])\r\n  if (!stats) return null\r\n  return <>\r\n    <CardLight sx={{ mb: 1 }}>\r\n      <CardContent>\r\n        <StatDisplayComponent {...{ sheets, character, equippedBuild: (newBuild && !compareBuild) ? undefined : equippedBuild, newBuild, statsDisplayKeys: statKeys }} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            {newBuild ? <Button onClick={equipArts} className=\"mr-2\">Equip artifacts</Button> : (database === localDatabase && <Button color=\"error\" onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n          </Grid>\r\n          <Grid item>\r\n            {/* Compare against new build toggle */}\r\n            {!!newBuild && <SolidToggleButtonGroup exclusive value={compareBuild} onChange={(e, v) => setCompareBuild?.(v)} size=\"small\">\r\n              <ToggleButton value={false} >\r\n                <small>Show New artifact Stats</small>\r\n              </ToggleButton>\r\n              <ToggleButton value={true} >\r\n                <small>Compare against equipped artifacts</small>\r\n              </ToggleButton>\r\n            </SolidToggleButtonGroup>}\r\n          </Grid>\r\n          <Grid item flexGrow={1}></Grid>\r\n          <Grid item>{!!mainStatAssumptionLevel && <Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card>}</Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </CardLight>\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={6} md={4} >\r\n        <CardLight sx={{ height: \"100%\" }} ><CardContent sx={{ height: \"100%\" }}><Grid container spacing={2} flexDirection=\"column\" height=\"100%\" >\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n            <Grid item key={setKey}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>{artifactSheets?.[setKey].name ?? \"\"}</Typography>\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterKey }} />)}\r\n            </Grid>\r\n          )}\r\n        </Grid></CardContent></CardLight>\r\n      </Grid>\r\n      {allSlotKeys.map(slotKey =>\r\n        !!stats?.equippedArtifacts?.[slotKey] && <Grid item xs={6} md={4} key={stats?.equippedArtifacts?.[slotKey]} >\r\n          <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Badge, Box, Button, CardContent, CardMedia, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport { Stars } from \"../../Components/StarDisplay\";\r\nimport StatDisplay from \"../../Components/StatDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../../Stat\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport WeaponDisplayCard from \"../../Weapon/WeaponDisplayCard\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  weaponSheet: WeaponSheet\r\n  character: ICachedCharacter\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, weaponSheet, character, character: { constellation, key: characterKey } }: CharacterOverviewPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const { tlvl } = build\r\n  const elementKey = build.characterEle\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  return <Grid container spacing={1}>\r\n    <Grid item xs={12} md={3}  >\r\n      {/* Image card with star and name and level */}\r\n      <CardLight >\r\n        <CardMedia src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\r\n        <CardContent>\r\n          <Typography variant=\"h5\" >{characterSheet.name} <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} /> {StatIcon[elementKey]} </Typography>\r\n          <Typography><Stars stars={characterSheet.star} colored /></Typography>\r\n          <Typography variant=\"subtitle1\">Lvl. {Character.getLevelString(character)}</Typography>\r\n          <Grid container spacing={1}>\r\n            {[\"auto\", \"skill\", \"burst\"].map(tKey =>\r\n              <Grid item xs={4} key={tKey}>\r\n                <Badge badgeContent={tlvl[tKey] + 1} color={((tKey === \"skill\" && build.skillBoost) || (tKey === \"burst\" && build.burstBoost)) ? \"info\" : \"secondary\"}\r\n                  overlap=\"circular\"\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  sx={{\r\n                    \"& > .MuiBadge-badge\": {\r\n                      fontSize: \"1.25em\",\r\n                      padding: \".25em .4em\",\r\n                      borderRadius: \".5em\",\r\n                      lineHeight: 1,\r\n                      height: \"1.25em\"\r\n                    }\r\n                  }}>\r\n                  <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, build.characterEle)?.img} width=\"100%\" height=\"auto\" />\r\n                </Badge>\r\n              </Grid>)}\r\n          </Grid>\r\n          <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\r\n          <Grid container spacing={1}>\r\n            {[...Array(6).keys()].map(i =>\r\n              <Grid item xs={4} key={i}>\r\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i + 1}`, build.characterEle)?.img}\r\n                  sx={{\r\n                    cursor: \"pointer\",\r\n                    ...(constellation > i ? {} : { filter: \"brightness(50%)\" })\r\n                  }}\r\n                  width=\"100%\" height=\"auto\"\r\n                  onClick={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardLight>\r\n    </Grid>\r\n    <Grid item xs={12} md={9} sx={{\r\n      \"> div:not(:last-child)\": { mb: 1 }\r\n    }} >\r\n      <WeaponDisplayCard {...{ charData: { character, characterSheet, equippedBuild, newBuild, characterDispatch }, weaponId: character.equippedWeapon }} />\r\n      <MainStatsCards {...{ characterSheet, character, equippedBuild, newBuild }} />\r\n    </Grid>\r\n  </Grid >\r\n}\r\nconst EDIT = \"Edit Stats\"\r\nconst EXIT = \"EXIT\"\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction MainStatsCards({ characterSheet, character, character: { key: characterKey }, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp\", \"hp_\", \"def\", \"def_\", \"atk\", \"atk_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys: any[] = [];\r\n\r\n  [\"physical\", ...allElements].forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"plunging_dmg_\", \"plunging_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"electrocharged_dmg_\",\r\n    \"vaporize_dmg_\", \"swirl_dmg_\",\r\n    \"moveSPD_\", \"atkSPD_\",\r\n    \"weakspotDMG_\",\r\n  ]\r\n\r\n  const specializedStatKey = characterSheet.getSpecializedStat(character.ascension)\r\n  const specializedStatVal = characterSheet.getSpecializedStatVal(character.ascension)\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild }\r\n  return <>\r\n    <StatDisplayCard\r\n      title=\"Main Base Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {displayStatKeys.map(statKey => <Grid item key={statKey} xs={12} lg={6} >\r\n          <StatDisplay statKey={statKey} {...displayNewBuildProps} />\r\n        </Grid>)}\r\n        <Grid item xs={12} lg={6} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n          <span><b>Specialized:</b> <span>{specializedStatKey && StatIcon[specializedStatKey]} {Stat.getStatName(specializedStatKey)}</span></span>\r\n          <span >{`${specializedStatVal.toFixed(Stat.fixedUnit(specializedStatKey))}${specializedStatUnit}`}</span>\r\n        </Grid>\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {editStatKeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              disabled={undefined}\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatNameWithPercent(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Other Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey => <Grid item xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Grid>)}\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? (statKey === \"stamina\" ? 100 : 0)}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              defaultValue={statKey === \"stamina\" ? 100 : undefined}\r\n              onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Misc Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey => <Grid item xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Grid>)}\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"bonusStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n  </>\r\n}\r\nfunction StatDisplayCard({ title, content, editContent }) {\r\n  const [edit, setedit] = useState(false)\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <Typography variant=\"subtitle1\">{title}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button size=\"small\" color={edit ? \"error\" : \"info\"} onClick={() => setedit(!edit)} >\r\n            <span><FontAwesomeIcon icon={edit ? faSave : faEdit} /> {edit ? EXIT : EDIT}</span>\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      {edit ? editContent : content}\r\n    </CardContent>\r\n  </CardLight>\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\";\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport BootstrapTooltip from \"../../Components/BootstrapTooltip\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport ConditionalWrapper from \"../../Components/ConditionalWrapper\";\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../Components/DropdownMenu/DropdownButton\";\r\nimport FieldDisplay, { FieldDisplayList } from \"../../Components/FieldDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n}\r\nexport default function CharacterTalentPane({ characterSheet, character, character: { ascension, constellation, key: characterKey } }: CharacterTalentPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <>\r\n    <ReactionDisplay characterSheet={characterSheet} />\r\n    <Grid container spacing={1} sx={{ mb: 1 }}>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Grid item key={tKey} xs={12} md={6} lg={4} >\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>)}\r\n      {!!characterSheet.getTalentOfKey(\"sprint\", build?.characterEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Grid>}\r\n      {!!characterSheet.getTalentOfKey(\"passive\", build?.characterEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"passive\"\r\n          subtitle=\"Passive\"\r\n        />\r\n      </Grid>}\r\n    </Grid>\r\n    <Grid container spacing={1}>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalentOfKey(tKey, build?.characterEle)) return null\r\n        return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} >\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n    <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography>\r\n    <Grid container spacing={1}>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Grid item key={i} xs={12} md={4}\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet }: { characterSheet: CharacterSheet }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <CardLight sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Grid item key={key}><Ele stats={build} /></Grid>\r\n        })}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"superconduct.main\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.cryo} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"electrocharged.main\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.hydro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"overloaded.main\" >{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.pyro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} {StatIcon.pyro} + {StatIcon.anemo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} {StatIcon.electro}+{StatIcon.anemo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} {StatIcon.cryo} + {StatIcon.anemo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} {StatIcon.hydro} + {StatIcon.anemo}</span>\r\n} as const\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={swirlEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Box>\r\n  </CardDark>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <BootstrapTooltip placement=\"top\" title={<Typography>Claymores, Plunging Attacks and <ColorText color=\"geo\">Geo DMG</ColorText></Typography>}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <ColorText color=\"shattered\">{Stat.getStatName(sKey)} {StatIcon.hydro}+{StatIcon.cryo}+ <ColorText color=\"physical\"><small>Heavy Attack{information} </small></ColorText> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></ColorText>\r\n  </CardContent></CardDark>\r\n}\r\nconst crystalizeEleToDisplay = {\r\n  \"default\": <ColorText color=\"crystalize\">{Stat.getStatName(\"crystalize_hit\")} {StatIcon.electro}/{StatIcon.hydro}/{StatIcon.pyro}/{StatIcon.cryo}+{StatIcon.geo}</ColorText>,\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_crystalize_hit\")} {StatIcon.pyro}+{StatIcon.geo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_crystalize_hit\")} {StatIcon.electro}+{StatIcon.geo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_crystalize_hit\")} {StatIcon.cryo}+{StatIcon.geo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_crystalize_hit\")} {StatIcon.hydro}+{StatIcon.geo}</span>\r\n} as const\r\nfunction CrystalizeCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(crystalizeEleToDisplay)[0])\r\n  const sKey = ele === \"default\" ? \"crystalize_hit\" : `${ele}_crystalize_hit`\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={crystalizeEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(crystalizeEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Box>\r\n  </CardDark>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { talent, ascension, key: characterKey }, characterDispatch, talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const actionWrapeprFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\r\n    [onClickTitle],\r\n  )\r\n\r\n  if (!build) return null\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    const talentLvlKey = talent[talentKey] + levelBoost\r\n    const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n      talent[tKey] = newTalentLevelKey\r\n      characterDispatch({ talent })\r\n    }\r\n    header = <>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <DropdownButton fullWidth title={`Talent Lv. ${talentLvlKey}`} color={levelBoost ? \"info\" : \"primary\"}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <MenuItem key={i} selected={talent[talentKey] === (i + 1)} disabled={talent[talentKey] === (i + 1)} onClick={() => setTalentLevel(talentKey, i + 1)}>Talent Lv. {i + levelBoost + 1}</MenuItem>)}\r\n        </DropdownButton>\r\n      </CardContent>\r\n      <Divider />\r\n    </>\r\n\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const talentStatsFields = talentStats && statsToFields(talentStats, build)\r\n  const statsEle = talentStatsFields && !!talentStatsFields.length &&\r\n    <FieldDisplayList >\r\n      {talentStatsFields.map((field, i) =>\r\n        <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, build.characterEle)\r\n  const sections = talentSheet?.sections\r\n\r\n  return <CardLight sx={{ height: \"100%\" }}>\r\n    {header}\r\n    <CardContent>\r\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item>\r\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\r\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </ConditionalWrapper>\r\n      {/* Display document sections */}\r\n      {sections ? <DocumentDisplay {...{ sections, characterKey, equippedBuild, newBuild }} /> : null}\r\n      {statsEle}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Button, ButtonGroup, Card, CardContent, Divider, Grid, MenuItem, Skeleton, Tab, Tabs, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport { buildContext } from '../Build/Build';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport { CharacterSelectionModal } from '../Components/Character/CharacterSelectionModal';\r\nimport CloseButton from '../Components/CloseButton';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from '../Components/CustomNumberInput';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport { EnemyExpandCard } from '../Components/EnemyEditor';\r\nimport FormulaCalcCard from '../Components/FormulaCalcCard';\r\nimport { DamageOptionsCard } from '../Components/HitModeEditor';\r\nimport ImgIcon from '../Components/Image/ImgIcon';\r\nimport ElementalData from '../Data/ElementalData';\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from '../Data/LevelData';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport useCharacterReducer from '../ReactHooks/useCharacterReducer';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { ICachedCharacter } from '../Types/character';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { clamp, deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { initialCharacter } from './CharacterUtil';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  value: string;\r\n  current: string | boolean;\r\n}\r\n\r\nfunction TabPanel({ children, current, value, ...other }: TabPanelProps) {\r\n  if (value !== current) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== current}\r\n      id={`simple-tabpanel-${value}`}\r\n      aria-labelledby={`simple-tab-${value}`}\r\n      {...other}\r\n    >\r\n      {children}\r\n    </div>\r\n  </Suspense>\r\n}\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey, setCharacterKey, footer, newBuild: propNewBuild, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [compareBuild, setCompareBuild] = useState(false)\r\n  // Use databaseToken anywhere `database._get*` is used\r\n  // Use onDatabaseUpdate when `following` database entries\r\n  const [databaseToken, onDatabaseUpdate] = useForceUpdate()\r\n\r\n  // TODO: We probably don't need to fetch all sheets,\r\n  // though this wouldn't affect the performance currently.\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  const character = useMemo(() =>\r\n    databaseToken && (database._getChar(characterKey) ?? initialCharacter(characterKey)),\r\n    [characterKey, databaseToken, database])\r\n  const weapon = useMemo(() =>\r\n    databaseToken && database._getWeapon(character.equippedWeapon),\r\n    [character.equippedWeapon, databaseToken, database])\r\n\r\n  const characterSheet = characterSheets?.[characterKey]\r\n  const weaponSheet = weapon ? weaponSheets?.[weapon.key] : undefined\r\n  const sheets = characterSheet && weaponSheet && artifactSheets && { characterSheet, weaponSheet, artifactSheets }\r\n\r\n  useEffect(() => {\r\n    return database.followChar(characterKey, onDatabaseUpdate)\r\n  }, [characterKey, onDatabaseUpdate, database])\r\n\r\n  useEffect(() => database.followWeapon(character.equippedWeapon, onDatabaseUpdate),\r\n    [character.equippedWeapon, onDatabaseUpdate, database])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return undefined\r\n    return deepClone(propNewBuild)\r\n  }, [propNewBuild])\r\n\r\n  // set initial state to false, because it fails to check validity of the tab values on 1st load\r\n  const [tab, settab] = useState<string | boolean>(tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\"))\r\n\r\n  const onTab = useCallback((e, v) => settab(v), [settab])\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => databaseToken && characterSheet && weaponSheet && artifactSheets &&\r\n    Character.calculateBuild(character, database, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel),\r\n    [databaseToken, character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel, database])\r\n\r\n  // main CharacterDisplayCard\r\n  return <CardDark >\r\n    <buildContext.Provider value={{ newBuild, equippedBuild, compareBuild, setCompareBuild }}>\r\n      <CardContent sx={{\r\n        \"> div:not(:last-child)\": { mb: 1 },\r\n      }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item flexGrow={1}>\r\n            <CharSelectDropdown characterSheet={characterSheet} character={character} weaponSheet={weaponSheet} setCharacterKey={setCharacterKey} />\r\n          </Grid>\r\n          {!!mainStatAssumptionLevel && <Grid item><Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card></Grid>}\r\n          {!!onClose && <Grid item>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>}\r\n        </Grid>\r\n        <CardLight>\r\n          <Tabs\r\n            onChange={onTab}\r\n            value={tab}\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab value=\"character\" label=\"Character\" />\r\n            {!!newBuild && <Tab value=\"newartifacts\" label=\"New Artifacts\" />}\r\n            <Tab value=\"artifacts\" label={newBuild ? \"Current Artifacts\" : \"Artifacts\"} />\r\n            <Tab value=\"talent\" label=\"Talents\" />\r\n          </Tabs>\r\n        </CardLight>\r\n        <DamageOptionsCard character={character} />\r\n        {!!sheets && <FormulaCalcCard sheets={sheets} />}\r\n        <EnemyExpandCard character={character} />\r\n\r\n        {/* Character Panel */}\r\n        {characterSheet && weaponSheet && <TabPanel value=\"character\" current={tab}>\r\n          <CharacterOverviewPane characterSheet={characterSheet} weaponSheet={weaponSheet} character={character} />\r\n        </TabPanel >}\r\n        {/* Artifacts Panel */}\r\n        {sheets && <buildContext.Provider value={{ newBuild: undefined, equippedBuild, compareBuild, setCompareBuild }}>\r\n          <TabPanel value=\"artifacts\" current={tab} >\r\n            <CharacterArtifactPane sheets={sheets} character={character} />\r\n          </TabPanel >\r\n        </buildContext.Provider>}\r\n        {/* new build panel */}\r\n        {newBuild && sheets && <TabPanel value=\"newartifacts\" current={tab} >\r\n          <CharacterArtifactPane sheets={sheets} character={character} />\r\n        </TabPanel >}\r\n        {/* talent panel */}\r\n        {characterSheet && <TabPanel value=\"talent\" current={tab}>\r\n          <CharacterTalentPane characterSheet={characterSheet} character={character} />\r\n        </TabPanel >}\r\n      </CardContent>\r\n      {!!footer && <Divider />}\r\n      {footer && <CardContent sx={{ py: 1 }}>\r\n        {footer}\r\n      </CardContent>}\r\n    </buildContext.Provider>\r\n  </CardDark>\r\n}\r\n\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  weaponSheet?: WeaponSheet,\r\n  character: ICachedCharacter\r\n  disabled?: boolean\r\n  setCharacterKey?: (any: CharacterKey) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, weaponSheet, character, character: { key: characterKey, elementKey = \"anemo\", level = 1, ascension = 0 }, disabled, setCharacterKey }: CharSelectDropdownProps) {\r\n  const [showModal, setshowModal] = useState(false)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <ImgIcon src={characterSheet.thumbImg} sx={{ mr: 1 }} />\r\n    {characterSheet.name}\r\n  </span> : <span>Select a Character</span>\r\n  const setLevel = useCallback((level) => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    characterDispatch({ level, ascension })\r\n  }, [characterDispatch])\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\r\n    else characterDispatch({ ascension: lowerAscension })\r\n  }, [characterDispatch, ascension, level])\r\n  return <>{!disabled ? <>\r\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacterKey} />\r\n    <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n      <Button disabled={!setCharacterKey} onClick={() => setshowModal(true)} startIcon={<ImgIcon src={characterSheet?.thumbImg} />} >{characterSheet?.name ?? \"Select a Character\"}</Button>\r\n      {characterSheet?.sheet && \"talents\" in characterSheet?.sheet && <DropdownButton title={ElementalData[elementKey].name}>\r\n        {Object.keys(characterSheet.sheet.talents).map(eleKey =>\r\n          <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\r\n            <strong>{ElementalData[eleKey].name}</strong></MenuItem>)}\r\n      </DropdownButton>}\r\n      <CustomNumberInputButtonGroupWrapper >\r\n        <CustomNumberInput onChange={setLevel} value={level}\r\n          startAdornment=\"Lvl. \"\r\n          inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n          sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n          disabled={!characterSheet} />\r\n      </CustomNumberInputButtonGroupWrapper>\r\n      <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level) || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n      <DropdownButton title={\"Select Level\"} disabled={!characterSheet}>\r\n        {milestoneLevels.map(([lv, as]) => {\r\n          const sameLevel = lv === ascensionMaxLevel[as]\r\n          const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n          const selected = lv === level && as === ascension\r\n          return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n        })}\r\n      </DropdownButton>\r\n    </ButtonGroup>\r\n  </> : <Typography variant=\"h6\">{HeaderIconDisplay} {characterSheet && weaponSheet && Character.getLevelString(character)}</Typography>}</>\r\n}"],"sourceRoot":""}