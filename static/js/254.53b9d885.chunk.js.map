{"version":3,"file":"static/js/254.53b9d885.chunk.js","mappings":"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","sources":["Components/Weapon/WeaponSelectionModal.tsx","../node_modules/@mui/icons-material/esm/SwapHoriz.js","PageWeapon/WeaponDisplayCard.tsx"],"sourcesContent":["import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey | \"\">(propWeaponFilter ?? \"\")\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter(propWeaponFilter), [propWeaponFilter])\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.img} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.99 11 3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\"\n}), 'SwapHoriz');","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel, lowRarityMilestoneLevels } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { DataContext } from \"../DataContext\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const { data } = useContext(DataContext)\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = useWeapon(propWeaponId)\r\n  const { key = \"\", level = 0, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\r\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  //check the levels when switching from a 5* to a 1*, for example.\r\n  useEffect(() => {\r\n    if (!weaponSheet || !weaponDispatch || weaponSheet.key !== weapon?.key) return\r\n    if (weaponSheet.rarity <= 2 && (level > 70 || ascension > 4)) {\r\n      const [level, ascension] = lowRarityMilestoneLevels[0]\r\n      weaponDispatch({ level, ascension })\r\n    }\r\n  }, [weaponSheet, weapon, weaponDispatch, level, ascension])\r\n\r\n\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <ModalWrapper open={!!propWeaponId} onClose={onClose} containerProps={{ maxWidth: \"md\" }}><CardLight>\r\n    <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n    <CardContent >\r\n      {weaponSheet && weaponUIData && <Grid container spacing={1.5}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Grid container spacing={1.5}>\r\n            <Grid item xs={6} sm={12}>\r\n              <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            </Grid>\r\n            <Grid item xs={6} sm={12}>\r\n              <Typography><small>{weaponSheet.description}</small></Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n            <ButtonGroup>\r\n              <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n              {weaponSheet?.hasRefinement && <DropdownButton title={`Refinement ${refinement}`}>\r\n                <MenuItem>Select Weapon Refinement</MenuItem>\r\n                <Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </MenuItem>)}\r\n              </DropdownButton>}\r\n            </ButtonGroup>\r\n            {data?.get(input.charKey)?.value && <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, data.get(input.charKey).value as CharacterKey)} />}\r\n          </Box>\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n            <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n              <CustomNumberInputButtonGroupWrapper >\r\n                <CustomNumberInput onChange={setLevel} value={level}\r\n                  startAdornment=\"Lvl. \"\r\n                  inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                  sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                />\r\n              </CustomNumberInputButtonGroupWrapper>\r\n              {weaponSheet && <Button sx={{ pl: 1 }} disabled={!weaponSheet.ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>}\r\n              {weaponSheet && <DropdownButton title={\"Select Level\"} >\r\n                {weaponSheet.milestoneLevels.map(([lv, as]) => {\r\n                  const sameLevel = lv === ascensionMaxLevel[as]\r\n                  const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                  const selected = lv === level && as === ascension\r\n                  return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                })}\r\n              </DropdownButton>}\r\n            </ButtonGroup>\r\n\r\n            <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n              {lock ? \"Locked\" : \"Unlocked\"}\r\n            </Button>\r\n          </Box>\r\n          <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n          <Typography variant=\"subtitle1\"><strong>{weaponSheet.passiveName}</strong></Typography>\r\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\r\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n            <CardDark >\r\n              <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n              <Divider />\r\n              <FieldDisplayList>\r\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\r\n                  const n = weaponUIData.get(node)\r\n                  if (n.isEmpty || !n.value) return null\r\n                  return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\r\n                })}\r\n              </FieldDisplayList>\r\n            </CardDark>\r\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight ></ModalWrapper>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}\r\n"],"names":["WeaponSelectionModal","show","onHide","onSelect","filter","propWeaponFilter","weaponFilter","weaponSheets","usePromise","WeaponSheet","useState","setWeaponfilter","useEffect","weaponIdList","Set","allWeaponKeys","wKey","weaponType","sort","a","b","rarity","open","onClose","sx","py","container","item","flexGrow","value","onChange","disabled","size","onClick","spacing","map","weaponKey","weaponSheet","lg","md","height","display","component","src","img","width","className","px","variant","name","Assets","stars","colored","large","createSvgIcon","_jsx","d","WeaponDisplayCard","propWeaponId","weaponId","footer","data","useContext","DataContext","database","DatabaseContext","weapon","useWeapon","key","level","refinement","ascension","lock","location","id","weaponTypeKey","weaponDispatch","useCallback","newWeapon","updateWeapon","setLevel","clamp","ascensionMaxLevel","ascenML","setAscension","lowerAscension","characterSheet","CharacterSheet","undefined","ws","initialWeaponFilter","equipOnChar","charKey","setWeaponLocation","cs","showModal","setshowModal","imgAwaken","lowRarityMilestoneLevels","weaponUIData","useMemo","computeUIData","dataObjForWeapon","ModalWrapper","containerProps","maxWidth","CardLight","k","CardContent","Grid","xs","sm","Box","borderRadius","Typography","description","flexDirection","gap","flexWrap","justifyContent","ButtonGroup","Button","hasRefinement","DropdownButton","title","MenuItem","Divider","Array","keys","selected","get","input","SwapBtn","onChangeId","bgcolor","t","palette","contentLight","main","CustomNumberInput","startAdornment","inputProps","min","max","textAlign","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","color","startIcon","Lock","LockOpen","passiveName","gutterBottom","passiveDescription","CardDark","CardHeader","titleTypographyProps","FieldDisplay","node","i","n","isEmpty","ListItem","info","document","DocumentDisplay","sections","CharacterDropdownButton","noUnselect","inventory","CloseButton","setShow","close","clickHandler","weapons","dbWeapon","_getWeapon","SwapHoriz","ImgIcon","WeaponCard"],"sourceRoot":""}