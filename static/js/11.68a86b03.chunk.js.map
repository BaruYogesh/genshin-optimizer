{"version":3,"sources":["Util/ReactUtil.ts","Character/Character.ts","Artifact/ArtifactSheet.tsx","Character/CharacterSheet.ts","Util/FieldUtil.tsx","Data/ElementalData.ts","StatData.ts","Character/CharacterDisplay/Components/FieldDisplay.tsx","Assets/Element_Anemo.png","Assets/Assets.ts","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.tsx","Conditional/Conditional.ts","Weapon/WeaponSheet.ts","Components/CustomFormControl.tsx","Components/StatIcon.tsx","Formula.ts","Components/SlotIcon.ts","Data/ArtifactData.ts","Data/ArtifactLookupTable.ts","Artifact/Artifact.tsx","Conditional/ConditionalSelector.tsx","Character/CharacterDisplay/Components/ConditionalDisplay.tsx","Data/WeaponData.ts","Weapon/Weapon.ts","StatConstants.ts","Components/CharacterSelection.tsx","Components/StatDisplay.tsx","Character/StatInput.tsx","Artifact/ArtifactCard.tsx","Util/UIUtil.ts","Artifact/PercentBadge.tsx","StatDependency.ts","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplayCard.tsx","Components/WIPComponent.tsx","Data/CharacterData.ts","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Character/CharacterDisplay/DamageOptionsAndCalculation.tsx","FlexPage/CodingUtil.ts","FlexPage/Schemas.ts","FlexPage/FlexUtil.ts","FlexPage/FlexDisplay.tsx","Stat.tsx"],"names":["useForceUpdate","useState","stateDirty","update","useCallback","usePromise","promise","res","setRes","useEffect","pending","then","console","error","undefined","Character","this","Error","characterKey","character","CharacterDatabase","get","Object","values","equippedArtifacts","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getElementalName","elementalKey","defVal","ElementalData","name","getlevelKeys","keys","LevelsData","getlevelTemplateName","levelKey","getLevelString","characterSheet","weaponSheet","levelOverride","getStatValueWithOverride","getLevel","getIndexFromlevelkey","indexOf","level","getAscension","asend","getTalentFieldValue","field","key","stats","evalIfFunc","hasOverride","statKey","baseStatOverrides","getBaseStatValue","characetSheet","specializeStat","value","Weapon","getWeaponMainStatValWithOverride","weapon","includes","characterStatBase","baseStat","equipArtifacts","artIds","artIdsOnCharacter","allSlotKeys","slotKey","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifactOnSlot","equipArtifactBuild","calculateBuild","artifactSheets","artifacts","mainStatAssumptionLevel","fromEntries","map","art","i","entries","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","mainStatKey","mainStatValue","numStars","Math","max","min","substats","substat","stat","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","length","condStats","resolve","val","dependencies","GetDependencies","modifiers","PreprocessFormulas","formula","mergeStats","modifier","mkey","multiplier","hitMode","infusionAura","reactionMode","talentLevelKeys","constellation","ascension","statKeys","characterEle","elementKey","weaponType","weaponTypeKey","tlvl","allElements","eleKey","overrides","hasOwnProperty","specializedStatVal","specialStatKey","getTalentStatsAll","s","weaponSubKey","getWeaponSubstatKey","getWeaponSubstatValWithOverride","weaponCond","otherCond","artifactImport","imp","default","set","promiseSheets","allArtifactSets","sheets","data","rarity","pieces","icons","setEffects","conditionals","num","setNum","text","effects","grouped","sheet","push","allRarities","filter","artifactSetEffect","slots","charImport","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","isAutoElemental","isMelee","getTalent","talentKey","talent","getTalentStats","split","constell","talents","statsArr","talentStats","getDisplayStatKeys","basicKeys","transReactions","ElementToReactionKeys","Formula","formulas","charFormulas","canShow","genericAvgHit","reactions","startsWith","replace","cardImg","thumbImg","star","constellationName","Boolean","getAll","modifiersToFields","mStatKey","Stat","getStatName","variant","getStatVariant","reduce","accu","formulaText","printStat","toFixed","fixed","fixedUnit","unit","getStatUnit","statsToFields","statVals","statVal","className","StatIconEle","flat","fieldProcessing","physical","anemo","geo","electro","hydro","pyro","cryo","StatData","characterHP","pretty","const","characterDEF","characterATK","characterLevel","weaponATK","baseATK","hp","hp_","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","dendro","dependencyKeys","debug","constData","formulaList","tmp","constModifier","k","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","func","log","assign","hitMoves","move","moveName","clamp","hitElements","ele","eleName","opt","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","FieldDisplay","index","equippedBuild","newBuild","compareAgainstEquipped","useContext","compareAgainstEquippedContext","useMemo","fixedVal","fieldVal","retVal","fieldEquippedVal","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","overlay","icon","faQuestionCircle","style","cursor","Item","Assets","elements","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","faStar","Stars","stars","colored","Array","_","processed","Promise","all","addConditional","weaponImport","setObj","setNumObj","source","findConditionals","obj","callback","condKey","states","state","maxStack","fields","layeredAssignment","objPathValue","stacks","stateKey","conditionalStats","objMultiplication","crawlObject","isArray","WeaponSheet","loadWeaponSheet","allWeaponKeys","build","img","passiveName","desc","passiveDescription","description","baseStats","weaponKey","getWeaponsOfType","CustomFormControl","onChange","disabled","float","placeholder","allowEmpty","setstate","setstateDirty","sendChange","parseFunc","parseFloat","aria-label","e","target","onBlur","onKeyDown","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","formulaImport","src","f","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubstatsData","ArtifactSubstatsMinMax","getArrLastElement","ArtifactSlotsData","ArtifactSubstatLookupTable","errors","allSubstatRolls","total","substatRolls","getSubstatRolls","Set","roll","size","rolls","efficiency","getSubstatEfficiency","getStatNameWithPercent","find","some","minimum","rollInfo","low","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accurateValue","sum","cur","getArtifactEfficiency","currentEfficiency","maximumEfficiency","current","totalRolls","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","slotName","slotIcon","slotNameWithIcon","slotMainStats","setEffectsObjs","result","setEffect","setEffectObj","setStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","endsWith","high","numUpgrades","maxSubstatValues","getSubstatKeys","substatCloseEnough","value1","value2","closeEnoughFloat","closeEnoughInt","ceil","getSubstatRollData","substatKey","substatValue","rollData","table","lookupValue","a","b","clampPercent","ConditionalSelector","setConditional","conditionalNum","conditionalStateKey","badge","Badge","Dropdown","Toggle","whiteSpace","Menu","onClick","condial","Fragment","v","stack","Button","faCheckSquare","faSquare","ConditionalDisplay","characterDispatch","editable","fieldClassName","conditionalFields","displayFields","condV","deletePropPath","objClearEmpties","Card","bg","Header","ListGroup","WeaponLevelKeys","LevelNameData","WeaponTypeData","getLevelName","getLevelIndex","getWeaponMainStatVal","main","getWeaponSubstatVal","sub","getWeaponTypeName","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","DropDownItem","DisplayStatDiff","label","oldVal","oldText","diffText","xs","StatDisplay","invalid","labelVariant","StatInput","prependEle","defaultValue","onValueChange","percent","restProps","Prepend","Text","Append","pointerEvents","faUndo","ArtifactCard","artifactObj","onEdit","onDelete","forceUpdateHook","registerArtListener","unregisterArtListener","equipOnChar","equipArtifactOnChar","substatsValidation","lock","mainStatLevel","mainStatVal","artifactValid","locationName","border","md","slotIcons","thumbnail","slotNames","Body","Title","numRolls","effOpacity","statName","valueString","opacity","valid","Footer","Divider","faLock","faLockOpen","faEdit","faTrashAlt","round","PercentBadge","badgeColor","GetFormulaDependency","dependency","Proxy","prop","receiver","add","formulaKeyDependency","freeze","InsertDependencies","has","artLayoutSize","lg","CharacterArtifactPane","history","useHistory","edit","pathname","artToEditId","equipArts","window","confirm","unequipArts","sKey","StatDisplayComponent","statsDisplayKeys","Alert","Row","Col","setNumKeyArr","SetEffectDisplay","CharacterOverviewPane","editLevel","setEditLevel","Img","Image","InputGroup","OverlayTrigger","Tooltip","faSave","roundedCircle","WeaponStatsEditorCard","MainStatsCards","WeaponStatsCard","title","statsVals","WeaponStatsEditorCardWeaponDropdown","setStateWeapon","weaponSheets","DropdownButton","reverse","arr","ItemText","editing","SetEditing","showDescription","setShowDescription","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","faQuoteLeft","refineIndex","faGavel","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","miscStatkeys","specializedStatKey","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","as","CharacterSpecializedStatKey","getStatNameRaw","xl","CharacterTalentPane","props","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","charEleKey","eleInterArr","Ele","talentLimits","header","talentLvlKey","talentLvlKeyRaw","levelBoost","newTalentLevelKey","statsEle","Subtitle","document","section","talentText","createContext","CustomMenu","React","forwardRef","ref","children","labeledBy","minWidth","aria-labelledby","Children","toArray","child","initialCharacter","auto","characterReducer","action","CharacterDisplayCard","propCharacterKey","propCharacter","propSetCharacterKey","setCharacterKey","footer","propNewBuild","onClose","tabName","useReducer","setcompareAgainstEquipped","firstUpdate","useRef","char","newCKey","flexArts","commonPaneProps","DamageOptionsAndCalculationEle","hasTalentPage","DamageOptionsAndCalculation","CharSelectDropdown","ButtonGroup","faTimes","Provider","Tab","Container","defaultActiveKey","mountOnEnter","unmountOnExit","Nav","fill","Link","eventKey","WIPComponent","Content","Pane","HeaderIconDisplay","CharDropdownItem","lvlKey","setEffectText","setEffectTexts","setNumStats","setStatsFields","setEffectConditionals","ckey","cardbg","sectionValues","JSON","stringify","infusionVals","InfusionAuraDropdown","ReactionToggle","HitModeToggle","CalculationDisplay","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","Collapse","subKey","printFormula","formulaField","fieldFormula","fieldFormulaDependency","fieldValue","ContextAwareToggle","currentEventKey","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","href","rel","immunityStatKey","elementImmunity","encodeItem","schema","pathItem","encode","uint","string","uintToString","encodeLength","encodeUInt","match","encodeString","schemas","defaultSchema","item","join","encodeArray","encodeObject","keySchema","valueSchema","items","encodeSparse","path","decodeItem","stream","decodeLength","stringToUInt","take","decodeUInt","decodeString","unused","decodeArray","decodeObject","decodeSparse","decode","number","remainder","String","fromCharCode","padEnd","code","charCodeAt","BlockStream","offset","count","slice","toString","array","other","object","sparse","list","artifactSet","slot","allHitModes","allReactionModes","factor","pathvalues","last","next","isNaN","conditionalV1","srcKey","srcKey2","weaponV1","weaponV2","characterV1","overrideLevel","autoInfused","bool","int","artifactConditionals","talentConditionals","characterV2","reserved","flexV1","flexV2","_createFlexObj","parseFlexObjFromSchema","end","databaseVersion","CurrentDatabaseVersion","TestDisplay","useLocation","searchStr","search","parameters","d","parseFlexObj","substring","version","to","Display","flexObj","createFlexObj","scrollTo","toast","settoast","url","isUpToDate","Toast","show","delay","autohide","position","top","right","navigator","clipboard","writeText","faLink","Form","Control","readOnly","select","htmlStatsData","expand","statList","FormulaText","modifierText","options","statUnit","o"],"mappings":"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K,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,KACrsBC,EAAG,CAAE,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,SAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAE5kDrM,OAAQ,CACJgM,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KAC1LI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhD9M,IAAK,CACDyM,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriD5M,IAAK,CACDuM,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriD3M,KAAM,CACFsM,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,KAC/KI,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3sBC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,E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EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAC5qDL,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,KAC/KI,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,MAE1vB9M,IAAK,CACD0M,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,KAC/KI,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC5uBC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC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C,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAA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","file":"static/js/11.68a86b03.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>();\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => { pending = false }\r\n  }, [promise])\r\n  return res\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { ICharacter } from \"../Types/character\";\r\nimport { allElements, allSlotKeys, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = (): string[] => Object.keys(LevelsData)\r\n  static getlevelTemplateName = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getLevelString = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet) => {\r\n    const levelOverride = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n    return Character.getLevel(character.levelKey) === levelOverride ? Character.getlevelTemplateName(character.levelKey) : `Lvl. ${levelOverride}`\r\n  }\r\n  static getIndexFromlevelkey = (levelKey) => Character.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return evalIfFunc(field?.[key], stats)\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getBaseStatValue = (character: ICharacter, characetSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    const { levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return characetSheet.specializeStat.key\r\n    if (statKey === \"specializedStatVal\") return characetSheet.specializeStat.value[Character.getIndexFromlevelkey(levelKey)]\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon, weaponSheet)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return Character.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    if (statKey in characetSheet.baseStat) return characetSheet.baseStat[statKey][Character.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n  static getStatValueWithOverride = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    if (Character.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey: string, artIds: StrictDict<SlotKey, string>) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    const artIdsOnCharacter = character.equippedArtifacts;\r\n\r\n    //swap, by slot\r\n    allSlotKeys.forEach(slotKey => {\r\n      const artNotOnChar = ArtifactDatabase.get(artIds[slotKey])\r\n      if (!artNotOnChar) return\r\n      if (artNotOnChar?.location === characterKey) return; //it is already equipped\r\n      const artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      const notCharLoc = (artNotOnChar?.location ?? \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifactOnSlot(notCharLoc, slotKey, artOnChar?.id ?? \"\")\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char\r\n    CharacterDatabase.equipArtifactBuild(characterKey, artIds);\r\n  }\r\n  static remove(characterKey) {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return\r\n    Object.values(character.equippedArtifacts).forEach(artid =>\r\n      ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets, mainStatAssumptionLevel = 0) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.createInitialStats(character, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats, artifacts, artifactSheets) => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach((art: any) => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(stats.mainStatAssumptionLevel, art.numStars * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.value)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return stats\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of (Object.entries(val) as any)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of (Object.entries(modifier) as any))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n\r\n  static createInitialStats = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, infusionAura, reactionMode, talentLevelKeys, constellation, equippedArtifacts, conditionalValues = {}, weapon = { key: \"\" } } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, Character.getStatValueWithOverride(character, characterSheet, weaponSheet, key)]))\r\n    initialStats.characterEle = characterSheet.elementKey;\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = weapon\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n\r\n\r\n    //enemy stuff\r\n    [\"physical\", ...allElements].forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]: any) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n    Character.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats).forEach(s => Character.mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n    if (weaponSubKey) Character.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubstatValWithOverride(character?.weapon, weaponSheet) })\r\n    Character.mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      Character.mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n}","import { IArtifactSheet, SetEffectEntry, StatArr, StatDict } from \"../Types/artifact\";\r\nimport { allArtifactSets, allRarities, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  constructor(data: IArtifactSheet) { this.data = data }\r\n\r\n  get name(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slotNames(): Dict<SlotKey, string> { return this.data.pieces }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): StatDict {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectTexts(setNum: SetNum, stats: ICalculatedStats): Displayable {\r\n    let text = this.setEffects[setNum]?.text\r\n    return evalIfFunc(text ?? \"\", stats)\r\n  }\r\n  setEffectConditionals(setNum: SetNum, stats: ICalculatedStats) {\r\n    const effects = this.setEffects[setNum]\r\n    if (effects?.conditional || effects?.conditionals) {\r\n      return {\r\n        ...effects?.conditional && { default: effects?.conditional },\r\n        ...effects?.conditionals && effects?.conditionals\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static namesByMaxRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): [Rarity, [ArtifactSetKey, string][]][] {\r\n    const grouped: Dict<Rarity, [ArtifactSetKey, string][]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push([key, sheet.name])\r\n      else grouped[rarity] = [[key, sheet.name]]\r\n    })\r\n    return allRarities.map(rarity => [rarity, grouped[rarity] ?? []] as [Rarity, [ArtifactSetKey, string][]]).filter(([, group]) => group.length)\r\n  }\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): StatArr {\r\n    let artifactSetEffect: StatArr = []\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && Object.keys(value.stats ?? {}).length &&\r\n        Object.entries(value.stats!).forEach(([key, value]) =>\r\n          artifactSetEffect.push({ key, value }))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import Formula from \"../Formula\";\r\nimport { ElementToReactionKeys } from \"../StatData\";\r\nimport { ICharacterSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const charImport = import('../Data/Characters').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>)\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | string): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return this.sheet.elementKey }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get specializeStat() { return this.sheet.specializeStat }\r\n  get baseStat() { return this.sheet.baseStat }\r\n  get talent() { return this.sheet.talent }\r\n  get formula() { return this.sheet.formula }\r\n  get conditionals() { return this.sheet.conditionals }\r\n  isAutoElemental = () => this.sheet.weaponTypeKey === \"catalyst\"\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (talentKey: string) => this.talent[talentKey]\r\n  get hasTalentPage() { return Boolean(Object.keys(this.sheet.talent).length) } //TODO: remove when all chararacter sheets are complete\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalent(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats) => {\r\n    const talents = this.sheet.talent\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n\r\n  getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats || !Object.keys(stats).length) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = this.elementKey\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = this.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (Formula.formulas.character?.[characterKey]) {\r\n      const charFormulas = {}\r\n      Object.entries(Formula.formulas.character[characterKey]).forEach(([talentKey, formulas]: any) => {\r\n        Object.values(formulas as any).forEach((formula: any) => {\r\n          if (!formula.field.canShow(stats)) return\r\n          if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n          if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n          charFormulas[talentKey].push(formula.keys)\r\n        })\r\n      })\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {//TODO: doesnt have character sheet\r\n      //generic average hit parameters.\r\n      const genericAvgHit: string[] = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical\r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      else if (weaponTypeKey === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst\r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions: string[] = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n}\r\n","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier as any ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey as any] * (multiplier as any), 0),\r\n    formulaText: <span>{Object.entries(modifier as any ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}) {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]: any) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]: any) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]: any) => accu + c[k] * (m as any), 0)\r\n    const dynamicFunc = (s, c) => dynamicModifier.reduce((accu, [k, m]: any) => accu + s[k] * (m as any), 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Character from \"../../Character\";\r\nimport { compareAgainstEquippedContext } from \"../../CharacterDisplayCard\";\r\n\r\nexport default function FieldDisplay({ field, index, equippedBuild, newBuild, className = \"p-2\" }) {\r\n  const compareAgainstEquipped = useContext(compareAgainstEquippedContext)\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const canShow = useMemo(() => field.canShow(stats), [field, stats])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", stats)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", stats)?.[0]?.(stats)\r\n      //compareAgainstEquipped\r\n      if (compareAgainstEquipped && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareAgainstEquipped, fixedVal, equippedBuild, field, stats])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", stats), [field, stats])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", stats), [field, stats])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", stats)\r\n    return fieldFormulaText ? <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip id=\"field-formula\">{fieldFormulaText}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger> : null\r\n  }, [field, stats])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", stats), [field, stats])\r\n\r\n  if (!canShow) return null\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className={className}>\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</span>\r\n  </ListGroup.Item>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => {\r\n    addConditional(sheets, \"weapon\");\r\n  }),//attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => {\r\n    addConditional(sheets, \"artifact\")\r\n    //attach metadata prop setNumKey to the conditional\r\n    Object.values(sheets).forEach(setObj =>\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n        if (setNumObj.conditional) (setNumObj.conditional as any).setNumKey = setNumKey // TODO, typechecker says there's no `setNumKey`\r\n        if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach((c: any) => c.setNumKey = setNumKey)\r\n      }))\r\n  })\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","import { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new WeaponSheet(value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>)\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  constructor(weaponSheet: IWeaponSheet) { this.sheet = weaponSheet }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string) => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  get name() { return this.sheet.name }\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  get passiveName() { return this.sheet.passiveName }\r\n  passiveDescription(stats: ICalculatedStats) {\r\n    const desc = this.sheet.passiveDescription\r\n    return evalIfFunc(desc, stats)\r\n  }\r\n  get description() { return this.sheet.description }\r\n  get baseStats() { return this.sheet.baseStats }\r\n  stats = (build: ICalculatedStats): object | false | undefined => evalIfFunc(this.sheet.stats, build)\r\n  get conditionals() { return this.sheet.conditionals }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nexport default function CustomFormControl({ value, onChange, disabled = false, float = false, placeholder, allowEmpty = false }) {\r\n  const [state, setstate] = useState(value ?? \"\")\r\n  const [stateDirty, setstateDirty] = useState({})\r\n  const sendChange = useCallback(\r\n    () => {\r\n      setstateDirty({})\r\n      if (allowEmpty && state === \"\") return onChange(null)\r\n      if (state === \"\") setstate(0)\r\n      const parseFunc = float ? parseFloat : parseInt\r\n      onChange(parseFunc(state) || 0)\r\n    },\r\n    [onChange, state, float, allowEmpty],\r\n  )\r\n  useEffect(() => setstate(value ?? \"\"), [value, setstate, stateDirty])//update value on value change\r\n\r\n  return <FormControl\r\n    value={state}\r\n    aria-label=\"custom-input\"\r\n    className=\"hide-appearance\"\r\n    type=\"number\"\r\n    placeholder={placeholder}\r\n    onChange={e => setstate(e.target.value)}\r\n    onBlur={sendChange}\r\n    disabled={disabled}\r\n    onKeyDown={e => e.key === \"Enter\" && sendChange()}\r\n  />\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import ICalculatedStats from './Types/ICalculatedStats';\r\nimport { crawlObject, objPathValue } from './Util/Util';\r\n\r\n//Currently only import character formulas, but formulas from other sources should be able to be imported as well.\r\nexport const formulaImport = import('./Data/Characters/formula').then(imp => addFormula(imp.default, \"character\"))\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | undefined> => formulaImport.then(() => objPathValue(Formula.formulas, keys))\r\n}\r\n\r\nfunction addFormula(src, key) {\r\n  Formula.formulas[key] = src\r\n  crawlObject(src, [key], f => typeof f === \"function\", (formula, keys) => {\r\n    formula.keys = keys\r\n  })\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { SlotKey } from '../Types/consts'\r\n\r\nconst SlotIcon: StrictDict<SlotKey, IconDefinition> = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport { CompressMainStatKey, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactStarsData: Dict<Rarity, { subsBaselow: number, subBaseHigh: number, numUpgradesOrUnlocks: number }> = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData: StrictDict<Rarity, StrictDict<CompressMainStatKey, number[]>> = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 12.0, 14.6, 17.3, 19.9, 22.5, 25.2, 27.8, 30.5, 33.1, 35.7, 38.4, 41.0, 43.7, 46.3, 49.0, 51.6, 54.2, 56.9, 59.5, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.1, 23.7, 25.2, 26.7, 28.2, 29.8, 31.3, 32.8, 34.3, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubstatsData: StrictDict<SubstatKey, { [numStars: number]: number[] }> = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubstatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { SubstatKey } from \"../Types/artifact\"\r\n\r\nexport const ArtifactSubstatLookupTable: StrictDict<SubstatKey, { [numStar: number]: { [rounded: string]: number[][] } }> = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubstatsData, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { CompressMainStatKey, IArtifact, MainStatKey, StatDict, Substat, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, CharacterKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey) => slotKey ? ArtifactSlotsData[slotKey].name : \"\"\r\n  static slotIcon = (slotKey: SlotKey) => <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n  static slotNameWithIcon = (slotKey: SlotKey) => {\r\n    let name = Artifact.slotName(slotKey)\r\n    let slotIcon = Artifact.slotIcon(slotKey)\r\n    return <span>{slotIcon} {name}</span>\r\n  }\r\n\r\n  static slotMainStats = (slotKey: SlotKey): MainStatKey[] => ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): Dict<ArtifactSetKey, Dict<SetNum, StatDict>> => {\r\n    let result: Dict<ArtifactSetKey, Dict<SetNum, StatDict>> = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      let setEffect: Dict<SetNum, StatDict> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n        const setStats = evalIfFunc(setEffectObj.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        result[setKey][setNumKey][statKey] = (result[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: Dict<string, IArtifact>): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey, defVal = []) => {\r\n    if (statKey.endsWith(\"_dmg_\") && statKey !== \"physical_dmg_\")\r\n      return ArtifactMainStatsData[numStar][\"ele_dmg_\"]\r\n    return ArtifactMainStatsData[numStar][statKey as CompressMainStatKey] || defVal\r\n  }\r\n\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number | undefined =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } => {\r\n    const data = ArtifactStarsData[rarity]!\r\n    return { low: data.subsBaselow, high: data.subBaseHigh, numUpgrades: data.numUpgradesOrUnlocks }\r\n  }\r\n\r\n  static maxSubstatValues = (statKey: SubstatKey, numStars = maxStar): number => ArtifactSubstatsMinMax[statKey].max[numStars]\r\n  static getSubstatKeys = (): SubstatKey[] => Object.keys(ArtifactSubstatsData) as SubstatKey[]\r\n  static substatCloseEnough = (key: SubstatKey, value1: number, value2: number): boolean => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars: Rarity) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars]!.subBaseHigh + ArtifactStarsData[numStars]!.numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static getSubstatRollData = (substatKey: SubstatKey | \"\", numStars: Rarity) => ArtifactSubstatsData[substatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    if (!numStars || !substatKey || typeof substatValue !== \"number\" || !substatValue) return []\r\n    let rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    if (!rollData.length) return []\r\n\r\n    let table = ArtifactSubstatLookupTable[substatKey][numStars]\r\n    let lookupValue = substatValue.toFixed(1)\r\n\r\n    if (table[lookupValue])\r\n      return table[lookupValue].map(roll => roll.map(i => rollData[i]))\r\n    else return [] // Lookup fails\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state: IArtifact) {\r\n    const { numStars, level, substats } = state, errors: string[] = []\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = key ? Artifact.getSubstatRolls(key, value, numStars) : []\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls?.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            const key = substats[index].key\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    } else {\r\n      // Found valid build, filling missing data\r\n      for (const substat of substats)\r\n        substat.accurateValue = substat.rolls!.reduce((sum, cur) => sum + cur, 0)\r\n      const { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n      state.currentEfficiency = currentEfficiency\r\n      state.maximumEfficiency = maximumEfficiency\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(substats: Substat[], numStars: Rarity, level: number) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let current = substats.reduce((sum, { key, accurateValue }) => sum + (key ? (accurateValue! / ArtifactSubstatsMinMax[key].max[maxStar]) : 0), 0)\r\n    let maximum = current + rollsRemaining\r\n    let currentEfficiency = current * 100 / totalRolls\r\n    let maximumEfficiency = maximum * 100 / totalRolls\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    let setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId: string | undefined, characterKey: CharacterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifactOnSlot(intendedLocation, art.slotKey, art.id)\r\n\r\n    if (currentLocation) {\r\n      CharacterDatabase.equipArtifactOnSlot(currentLocation, slotKey, artifactToSwapWith?.id ?? \"\")\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId: string | undefined) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.equipArtifactOnSlot(location, slotKey, \"\")\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name: Displayable, disabled: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional([0])}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {Object.entries(conditional.states).map(([stateKey, condial]: any, i) =>\r\n          <React.Fragment key={i}>\r\n            {[...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n              <Dropdown.Item key={stateKey + i} onClick={() => setConditional([stack, stateKey])}>\r\n                {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>)}\r\n          </React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else {\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack > 1) {\r\n      //stacking conditional\r\n      const badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n          <h6 className=\"mb-0 d-inline\" style={{ whiteSpace: \"normal\" }}>{name} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setConditional([0])}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n            <Dropdown.Item key={stack} onClick={() => setConditional([stack])}>\r\n              {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n            </Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (maxStack === 1) {//single boolean conditional\r\n      return <Button size=\"sm\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled}>\r\n        <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {name}</h6>\r\n      </Button>\r\n    }\r\n  }\r\n  return null\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { Card, ListGroup } from \"react-bootstrap\"\r\nimport Conditional from \"../../../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../../../Conditional/ConditionalSelector\"\r\nimport ICalculatedStats from \"../../../Types/ICalculatedStats\"\r\nimport IConditional from \"../../../Types/IConditional\"\r\nimport statsToFields from \"../../../Util/FieldUtil\"\r\nimport { deletePropPath, layeredAssignment, objClearEmpties } from \"../../../Util/Util\"\r\nimport FieldDisplay from \"./FieldDisplay\"\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  characterDispatch: (any) => void,//TODO: characterDispatch type\r\n  editable: boolean,\r\n  fieldClassName?: string\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, equippedBuild, newBuild, characterDispatch, editable, fieldClassName }: ConditionalDisplayProps) {\r\n  const stats = newBuild ? newBuild : equippedBuild as ICalculatedStats\r\n  if (!stats) debugger\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats), [conditional, stats])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow && Conditional.resolve(conditional, stats, undefined), [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow && [...statsToFields(conditionalStats, stats), ...conditionalFields], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    characterDispatch({ conditionalValues: stats.conditionalValues })\r\n  }, [conditional, stats.conditionalValues, characterDispatch])\r\n\r\n  if (!canShow) return null\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\">\r\n    <Card.Header className=\"p-2\">\r\n      <ConditionalSelector disabled={!editable}\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild, className: fieldClassName }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}","const WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20/40\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40/50\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50/60\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60/70\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70/80\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80/90\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { LevelNameData, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData';\r\nimport WeaponSheet from './WeaponSheet';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey): number => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.main[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.sub?.[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatKey = (weaponSheet: WeaponSheet, defVal = \"\") => (weaponSheet.baseStats?.substatKey || defVal)\r\n\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = (): string[] => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubstatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n}","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [0,\r\n  17.2, 18.5, 19.9, 21.3, 22.6, 24.6, 26.6, 28.9, 31.4, 34.1,\r\n  37.2, 40.7, 44.4, 48.6, 53.7, 59.1, 64.4, 69.7, 75.1, 80.6,\r\n  86.1, 91.7, 97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n  142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n  215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n  336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n  509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n  742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n  968.6, 991.0, 1013.5, 1036.1, 1066.6, 1090.0, 1115.0, 1141.7, 1171.9, 1202.8,\r\n  1202.8, 1233.9, 1264.7, 1305.7, 1346.1, 1468.9, 1524.0, 1577.0, 1627.6, 1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [0,\r\n  91, 99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n  170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n  320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n  448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n  574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n  733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n  915, 936, 956, 982, 1003, 1017, 1036, 1057, 1075, 1096,\r\n  1114, 1135, 1149, 1170, 1191, 1205, 1224, 1243, 1260, 1277,\r\n  1293, 1308, 1317, 1327, 1336, 1349, 1366, 1384, 1403, 1424,\r\n  1450, 1478, 1507, 1543, 1570, 1580, 1589, 1673, 1682, 1691,\r\n]","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { usePromise } from \"../Util/ReactUtil\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return <>{CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey => <DropDownItem key={characterKey} characterKey={characterKey} onSelect={onSelect} />)}</>\r\n}\r\nfunction DropDownItem({ characterKey, onSelect }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => onSelect(characterKey)}>\r\n    {characterSheet.name}\r\n  </Dropdown.Item>\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { useMemo } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport Formula from \"../Formula\"\r\nimport Stat from \"../Stat\"\r\nimport { ICharacter } from \"../Types/character\"\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { usePromise } from \"../Util/ReactUtil\"\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\ntype StatDisplayProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  statKey: string\r\n}\r\nexport default function StatDisplay({ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined)\r\n\r\n  const { val, oldVal, fixed, unit, variant, label } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, variant, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        //statvaluewith override -> old\r\n        const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n        oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey, invalid as any)\r\n        oldVal === invalid && (oldVal = undefined)\r\n        if (statKey === \"finalHP\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterHP\")\r\n        else if (statKey === \"finalDEF\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterDEF\")\r\n        else if (statKey === \"finalATK\")\r\n          oldVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterATK\") + Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"weaponATK\")\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", build)}</span>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n    return { val, oldVal, fixed, unit, variant, label }\r\n  }, [character, characterSheet, weaponSheet, equippedBuild, newBuild, editable, statKey, formula])\r\n\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label: label as any }} />\r\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    <InputGroup.Append>\r\n      {Boolean(percent) && <InputGroup.Text>%</InputGroup.Text>}\r\n      {defaultValue !== undefined && <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip id=\"reset-tooltip\">Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>}\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterSheet from '../Character/CharacterSheet';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport Stat from '../Stat';\r\nimport { IArtifact, Substat } from '../Types/artifact';\r\nimport { useForceUpdate, usePromise } from '../Util/ReactUtil';\r\nimport { valueString } from '../Util/UIUtil';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport PercentBadge from './PercentBadge';\r\n\r\ntype Data = { artifactId?: string, artifactObj?: IArtifact, onEdit?: () => void, onDelete?: () => void, mainStatAssumptionLevel?: number }\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0 }: Data): JSX.Element | null {\r\n  const [, forceUpdateHook] = useForceUpdate()\r\n  useEffect(() => {\r\n    artifactId && ArtifactDatabase.registerArtListener(artifactId, forceUpdateHook)\r\n    return () => { artifactId && ArtifactDatabase.unregisterArtListener(artifactId, forceUpdateHook) }\r\n  }, [artifactId, forceUpdateHook])\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? (artifactId ? ArtifactDatabase.get(artifactId) : undefined))?.setKey))\r\n  const equipOnChar = (charKey) => Artifact.equipArtifactOnChar(artifactId, charKey)\r\n\r\n  const editable = !artifactObj //dont allow edit for flex artifacts\r\n  const art = artifactObj || ArtifactDatabase.get(artifactId);\r\n  const characterSheet = usePromise(CharacterSheet.get(art.location))\r\n  if (!art) return null\r\n  if (!art.maximumEfficiency) Artifact.substatsValidation(art)\r\n\r\n  const { slotKey, numStars, level, mainStatKey, substats, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, numStars * 4), level)\r\n  const mainStatVal = <span className={mainStatLevel !== level ? \"text-orange\" : \"\"}>{Artifact.mainStatValue(mainStatKey, numStars, mainStatLevel) ?? \"\"}{Stat.getStatUnit(mainStatKey)}</span>\r\n  const artifactValid = art.maximumEfficiency !== undefined\r\n  const locationName = characterSheet?.name ?? \"Inventory\"\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={sheet?.slotIcons[slotKey] ?? \"\"} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{sheet?.slotNames[slotKey] ?? \"Unknown Piece Name\"}</b></h6>\r\n          <div>{Artifact.slotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{sheet?.name ?? \"Artifact Set\"}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat: Substat, i) => {\r\n          if (!stat.value) return null\r\n          let numRolls = stat.rolls?.length ?? 0\r\n          let efficiency = stat.efficiency ?? 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${valueString(stat.value, Stat.getStatUnit(stat.key))}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{valueString(efficiency, \"eff\")}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <Row className=\"mt-auto\">\r\n        <Col>Current SS Eff.: <PercentBadge value={currentEfficiency} valid={artifactValid} {...{ className: \"float-right\" }} /></Col>\r\n        {currentEfficiency !== maximumEfficiency && <Col className=\"text-right\">Max SS Eff.: <PercentBadge value={maximumEfficiency} valid={artifactValid} /></Col>}\r\n      </Row>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {editable ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={equipOnChar} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{locationName}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {editable ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip id=\"lock-artifact-tip\">Locking a artifact will prevent the build generator from picking it for builds.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.update(art);\r\n                  }}>\r\n                  <FontAwesomeIcon icon={lock ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {!!onEdit && <Button variant=\"info\" size=\"sm\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {!!onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","export function valueString(value: number, unit: string): string {\r\n  switch (unit) {\r\n    case \"%\": return (Math.round(value * 10) / 10).toFixed(1)\r\n    case \"eff\": return value.toFixed(2)\r\n    default: return Math.round(value).toFixed(0)\r\n  }\r\n}","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`${Math.floor(value * 0.05) + 1}roll`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"danger\"\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{text}</Badge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0] as any] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","import { useCallback, useMemo } from 'react';\r\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { ICharacter } from '../../Types/character';\r\nimport { allSlotKeys, SlotKey } from '../../Types/consts';\r\nimport ICalculatedStats from '../../Types/ICalculatedStats';\r\nimport { usePromise } from '../../Util/ReactUtil';\r\nimport WeaponSheet from '../../Weapon/WeaponSheet';\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from '../CharacterSheet';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\nconst artLayoutSize = { xs: 12, md: 6, lg: 4 }\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  equippedBuild: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  artifacts?: any[]\r\n}\r\nfunction CharacterArtifactPane({ characterSheet, weaponSheet, character, character: { characterKey }, equippedBuild, newBuild, editable, characterDispatch, artifacts }: CharacterArtifactPaneProps) {\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = newBuild ? newBuild : equippedBuild\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => characterSheet.getDisplayStatKeys(stats), [stats, characterSheet])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && Character.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, newBuild, characterDispatch])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    Character.equipArtifacts(characterKey, Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])) as StrictDict<SlotKey, string>)\r\n    characterDispatch?.({ type: \"fromDB\" })\r\n  }, [characterKey, characterDispatch])\r\n  return <>\r\n    <Card className=\"h-100 mb-2\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n      <Card.Body>\r\n        <StatDisplayComponent {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys: statKeys, editable }} />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        {newBuild ? <Button onClick={equipArts}>Equip all artifacts to current character</Button> : (editable && <Button onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n        {Boolean(mainStatAssumptionLevel) && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert>}\r\n      </Card.Footer>\r\n    </Card>\r\n    <Row className=\"mb-n2\">\r\n      <Col {...artLayoutSize} className=\"d-flex flex-column\">\r\n        {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n          <Card key={setKey} className=\"mb-2 flex-grow-1\" bg=\"lightcontent\" text={\"lightfont\" as any}>\r\n            <Card.Header>{artifactSheets?.[setKey].name ?? \"\"}</Card.Header>\r\n            <Card.Body className=\"p-2 mb-n2\">\r\n              {(setNumKeyArr as any).map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      {artifacts ?\r\n        allSlotKeys.map(slotKey => {//from flex\r\n          const art = artifacts.find(art => art.slotKey === slotKey)\r\n          return Boolean(art) && <Col {...artLayoutSize} key={slotKey} className=\"mb-2\">\r\n            <ArtifactCard artifactObj={art} />\r\n          </Col>\r\n        }) : allSlotKeys.map(slotKey =>\r\n          Boolean(stats?.equippedArtifacts?.[slotKey]) && <Col {...artLayoutSize} key={stats?.equippedArtifacts?.[slotKey]} className=\"mb-2\">\r\n            <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n          </Col>\r\n        )}\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport Conditional from \"../../Conditional/Conditional\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport { allElements } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport { IConditionals } from \"../../Types/IConditional\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport Character from \"../Character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport StatInput from \"../StatInput\"\r\nimport ConditionalDisplay from \"./Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"./Components/FieldDisplay\"\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean;\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, weaponSheet, editable, character, character: { characterKey, constellation }, characterDispatch, equippedBuild, newBuild }: CharacterOverviewPaneProps) {\r\n  const [editLevel, setEditLevel] = useState(false)\r\n  const elementKey = characterSheet.elementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n        <Card.Img src={characterSheet.cardImg} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{characterSheet.name} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={characterSheet.star} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl placeholder={undefined} onChange={val => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: clamp(val, 1, 90), characterSheet, weaponSheet })} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"characterLevel\", value: Character.getLevel(character.levelKey), characterSheet, weaponSheet })} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip id=\"artifact-override-level\">Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"success\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{characterSheet.constellationName}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={characterSheet.getTalent(`constellation${i + 1}`)?.img} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n      <MainStatsCards {...{ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }} />\r\n    </Col>\r\n  </Row >\r\n}\r\n\r\nfunction WeaponStatsCard({ title, statsVals = {}, stats = {} }) {\r\n  if ((Object.keys(statsVals ?? {}) as any).length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <ListGroup className=\"text-white\" variant=\"flush\">\r\n      {fields.map((field, i) => <FieldDisplay newBuild={undefined} key={i} index={i} {...{ field, equippedBuild: stats, className: \"px-3 py-2\" }} />)}\r\n    </ListGroup>\r\n  </Card>\r\n}\r\n\r\n\r\nfunction WeaponStatsEditorCardWeaponDropdown({ weaponSheet, weaponTypeKey, setStateWeapon }: { weaponSheet: WeaponSheet, weaponTypeKey: string, setStateWeapon: (key: any, value: any) => void }) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  if (!weaponSheets) return null\r\n\r\n  return <DropdownButton title={weaponSheet.name}>\r\n    {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n      <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n      {Object.entries(WeaponSheet.getWeaponsOfType(weaponSheets, weaponTypeKey)).filter(([, weaponObj]: any) => weaponObj.rarity === star).map(([key, weaponObj]: any) =>\r\n        <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n          {weaponObj.name}\r\n        </Dropdown.Item>\r\n      )}\r\n      {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n    </React.Fragment>)}\r\n  </DropdownButton>\r\n}\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet\r\n  editable: boolean\r\n  character: ICharacter\r\n  characterDispatch: (any) => void\r\n  equippedBuild: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction WeaponStatsEditorCard({ characterSheet, weaponSheet, editable, character, character: { weapon }, characterDispatch, equippedBuild, newBuild }: WeaponStatsEditorCardProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => {\r\n    if (key === \"key\") {\r\n      if (value === weapon.key) return\r\n      else {\r\n        //reset the conditionalNum when we switch weapons\r\n        const { conditionalValues } = character\r\n        delete conditionalValues.weapon\r\n        characterDispatch({ conditionalValues })\r\n      }\r\n    }\r\n    character.weapon[key] = value\r\n    characterDispatch({ weapon: character.weapon })\r\n  }\r\n  const substatKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)\r\n  const weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)\r\n  const weaponPassiveName = weaponSheet.passiveName\r\n  const weaponBonusStats = weaponSheet.stats(build)\r\n  const conditionals = Conditional.conditionals.weapon[weapon.key] as IConditionals\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body >\r\n      <Row className=\"mb-n2\">\r\n        <Col xs={12} md={3} lg={4}>\r\n          <Image src={weaponSheet.img} className={`w-100 h-auto grad-${weaponSheet.rarity}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <WeaponStatsEditorCardWeaponDropdown weaponSheet={weaponSheet} weaponTypeKey={weaponTypeKey} setStateWeapon={setStateWeapon} />\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {substatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                prependEle={undefined}\r\n                disabled={undefined}\r\n                name={<span><span className=\"mr-2\">{StatIconEle(substatKey)}</span>{Stat.getStatName(substatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(substatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubstatVal(weaponSheet, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <h5 className=\"mb-0\">{weaponSheet.name} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n            <p><Stars stars={weaponSheet.rarity} /></p>\r\n            <h6>{weaponPassiveName}</h6>\r\n            <p>{weaponPassiveName && weaponSheet.passiveDescription(build)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: weaponDisplaySubVal }} stats={build} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n            {Boolean(conditionals) && Object.entries(conditionals).map(([stateKey, conditional]) =>\r\n              <ConditionalDisplay key={stateKey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} fieldClassName=\"py-2 px-3\" />)}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <small>{weaponSheet.description}</small>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  editable: boolean,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nfunction MainStatsCards({ characterSheet, weaponSheet, editable, character, characterDispatch, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys: any[] = [];\r\n\r\n  [\"physical\", ...allElements].forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: key, characterSheet, weaponSheet })} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")}\r\n                  onChange={value => characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value, characterSheet, weaponSheet })} />\r\n                <InputGroup.Append>\r\n                  {isPercentSpecialStatSelect && <InputGroup.Text>%</InputGroup.Text>}\r\n                  <Button onClick={() => {\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatKey\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatKey\"), characterSheet, weaponSheet })\r\n                    characterDispatch({ type: \"statOverride\", statKey: \"specializedStatVal\", value: Character.getBaseStatValue(character, characterSheet, weaponSheet, \"specializedStatVal\"), characterSheet, weaponSheet })\r\n                  }}\r\n                    disabled={!Character.hasOverride(character, \"specializedStatKey\") && !Character.hasOverride(character, \"specializedStatVal\")}\r\n                  >\r\n                    <FontAwesomeIcon icon={faUndo} />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined}\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  prependEle={undefined}\r\n                  disabled={undefined\r\n                  }\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                  defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay characterSheet={characterSheet} weaponSheet={weaponSheet} statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from 'react';\r\nimport { Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport statsToFields from \"../../Util/FieldUtil\";\r\nimport { evalIfFunc } from \"../../Util/Util\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport ConditionalDisplay from './Components/ConditionalDisplay';\r\nimport FieldDisplay from './Components/FieldDisplay';\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  editable: boolean,\r\n  characterDispatch: (any) => void,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n}\r\nexport default function CharacterTalentPane(props: CharacterTalentPaneProps) {\r\n  const { characterSheet, character: { levelKey, constellation }, editable, characterDispatch, newBuild, equippedBuild } = props\r\n  const ascension = Character.getAscension(levelKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n  const passivesList: Array<[tKey: string, tText: string, asc: number]> = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col><ReactionDisplay {...{ characterSheet, newBuild, equippedBuild }} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {!!characterSheet.getTalent(\"sprint\") && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalent(tKey)) return null\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => editable && characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet, newBuild, equippedBuild }: { characterSheet: CharacterSheet, newBuild?: ICalculatedStats, equippedBuild?: ICalculatedStats }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = characterSheet.elementKey\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\" variant=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip id=\"shatter-tooltip\">Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text={\"lightfont\" as any}><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: string,\r\n  subtitle: string,\r\n  ascension: number,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  editable: boolean,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { constellation, talentLevelKeys, }, characterDispatch, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, onClickTitle }: SkillDisplayCardProps) {\r\n  let build = newBuild ? newBuild : equippedBuild as ICalculatedStats //assumes at least one of them is not undefined\r\n  let header: Displayable | null = null\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n        talentLevelKeys[tKey] = newTalentLevelKey\r\n        characterDispatch({ talentLevelKeys })\r\n      }\r\n      header = <Card.Header>\r\n        <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n          {[...Array(talentLimits[ascension] + (talentKey === \"auto\" && !levelBoost ? 1 : 0)).keys()].map(i => //spcial consideration for Tartaglia\r\n            <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>{`Talent Level: ${talentLvlKey + 1}`}</Card.Header>\r\n    }\r\n  }\r\n  const talentStats = characterSheet.getTalentStats(talentKey, build)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"h-100\">\r\n    {header}\r\n    <Card.Body className=\"mb-n2\">\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={characterSheet.getTalent(talentKey)?.img} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{characterSheet.getTalent(talentKey)?.name}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {/* Display document sections */}\r\n      {characterSheet.getTalent(talentKey)?.document?.map((section, i) => {\r\n        if (!section.canShow!(build)) return null\r\n        const talentText = evalIfFunc(section.text, build)\r\n        let fields = section.fields ?? []\r\n        return <div className=\"my-2\" key={\"section\" + i}>\r\n          <div {...{ xs: 12 }}>\r\n            <div className=\"mb-2\">{talentText}</div>\r\n            {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n              {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n            </ListGroup>}\r\n          </div>\r\n          {!!section.conditional && <ConditionalDisplay {...{ conditional: section.conditional, equippedBuild, newBuild, characterDispatch, editable }} />}\r\n        </div>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { createContext, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\r\nimport { Alert, Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ArtifactSheet } from '../Artifact/ArtifactSheet';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ICharacter } from '../Types/character';\r\nimport { allCharacterKeys, allSlotKeys } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { usePromise } from '../Util/ReactUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport WeaponSheet from '../Weapon/WeaponSheet';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport DamageOptionsAndCalculation from './CharacterDisplay/DamageOptionsAndCalculation';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nexport const compareAgainstEquippedContext = createContext(undefined)\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }: any, ref: any) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" } as any}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\nconst initialCharacter = (characterKey): ICharacter => ({\r\n  characterKey: characterKey ?? \"\",//the game character this is based off\r\n  levelKey: \"L1\",//combination of level and ascension\r\n  hitMode: \"avgHit\",\r\n  reactionMode: null,\r\n  equippedArtifacts: Object.fromEntries(allSlotKeys.map(sKey => [sKey, \"\"])),\r\n  conditionalValues: {},\r\n  baseStatOverrides: {},//overriding the baseStat\r\n  weapon: {\r\n    key: \"\",\r\n    levelKey: WeaponLevelKeys[0],\r\n    refineIndex: 0,\r\n    overrideMainVal: 0,\r\n    overrideSubVal: 0,\r\n  },\r\n  talentLevelKeys: {\r\n    auto: 0,\r\n    skill: 0,\r\n    burst: 0,\r\n  },\r\n  infusionAura: \"\",\r\n  constellation: 0,\r\n})\r\n\r\ntype characterReducerOverwrite = {\r\n  type: \"overwrite\",\r\n  character: ICharacter\r\n}\r\ntype characterReducerFromDB = {\r\n  type: \"fromDB\",\r\n}\r\ntype characterReducerStatOverride = {\r\n  type: \"statOverride\",\r\n  statKey: string\r\n  value: number | string\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n}\r\ntype characterReducerOverwriteAction = characterReducerOverwrite | characterReducerFromDB | characterReducerStatOverride | Partial<ICharacter>\r\n\r\nfunction characterReducer(state: ICharacter, action: characterReducerOverwriteAction) {\r\n  if (\"type\" in action) switch (action?.type) {\r\n    case \"overwrite\":\r\n      return { ...state, ...action.character }\r\n    case \"fromDB\"://for equipping artifacts, that makes the changes in DB instead of in state.\r\n      return { ...state, ...CharacterDatabase.get(state.characterKey) ?? {} }\r\n    case \"statOverride\": {\r\n      const { statKey, value, characterSheet, weaponSheet, } = action\r\n      const baseStatOverrides = state.baseStatOverrides\r\n      const baseStatVal = Character.getBaseStatValue(state, characterSheet, weaponSheet, statKey)\r\n      if (baseStatVal === value)\r\n        delete baseStatOverrides[statKey]\r\n      else\r\n        baseStatOverrides[statKey] = value\r\n      return { ...state, baseStatOverrides }\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return { ...state, ...action }\r\n}\r\ntype CharacterDisplayCardProps = {\r\n  characterKey?: string,\r\n  character?: ICharacter,\r\n  setCharacterKey?: (any) => void\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  editable?: boolean,\r\n  onClose?: (any) => void,\r\n  tabName?: string\r\n}\r\nexport default function CharacterDisplayCard({ characterKey: propCharacterKey, character: propCharacter, setCharacterKey: propSetCharacterKey, footer, newBuild: propNewBuild, editable = false, onClose, tabName }: CharacterDisplayCardProps) {\r\n  const [character, characterDispatch] = useReducer(characterReducer, initialCharacter(propCharacterKey))\r\n  const [compareAgainstEquipped, setcompareAgainstEquipped] = useState(false)\r\n  const firstUpdate = useRef(true)\r\n  useEffect(() => {\r\n    if (!propCharacterKey) return\r\n    const char = { ...initialCharacter(propCharacterKey), ...CharacterDatabase.get(propCharacterKey) ?? {} }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacterKey])\r\n  useEffect(() => {\r\n    if (!propCharacter) return\r\n    const char = { ...initialCharacter(propCharacter.characterKey), ...propCharacter }\r\n    characterDispatch({ type: \"overwrite\", character: char })\r\n  }, [propCharacter])\r\n\r\n  useEffect(() => {\r\n    //skip saving on the first update, since those updates are from loading from DB\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false\r\n      return\r\n    }\r\n    //save character to DB\r\n    editable && CharacterDatabase.update(character)\r\n  }, [character, editable])\r\n\r\n  const characterKey = propCharacter?.characterKey ?? character.characterKey\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  const weaponSheets = usePromise(WeaponSheet.getAll())\r\n  useEffect(() => {\r\n    if (weaponSheets && characterSheet && !character.weapon.key) {\r\n      character.weapon.key = Object.keys(WeaponSheet.getWeaponsOfType(weaponSheets, characterSheet.weaponTypeKey))[0] ?? \"\"\r\n      characterDispatch({ weapon: character.weapon })\r\n    }\r\n  }, [characterSheet, weaponSheets, character.weapon])\r\n\r\n  const weaponSheet = usePromise(WeaponSheet.get(character.weapon.key))\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll())\r\n\r\n  const setCharacterKey = useCallback(\r\n    newCKey => {\r\n      let state = initialCharacter(newCKey)\r\n      const char = CharacterDatabase.get(newCKey)\r\n      if (char) state = { ...state, ...char }\r\n      characterDispatch({ type: \"overwrite\", character: state })\r\n      if (newCKey !== characterKey)\r\n        propSetCharacterKey?.(newCKey)\r\n    }, [characterKey, characterDispatch, propSetCharacterKey])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return\r\n    const newBuild = propNewBuild && deepClone(propNewBuild);\r\n    (newBuild as any).hitMode = character.hitMode;\r\n    (newBuild as any).reactionMode = character.reactionMode;\r\n    return newBuild\r\n  }, [propNewBuild, character.hitMode, character.reactionMode])\r\n\r\n  const { levelKey, artifacts: flexArts } = character\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => characterSheet && weaponSheet && artifactSheets && Character.calculateBuild(character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel), [character, characterSheet, weaponSheet, artifactSheets, mainStatAssumptionLevel])\r\n\r\n  const commonPaneProps = { character, newBuild, equippedBuild: (!newBuild || compareAgainstEquipped) ? equippedBuild : undefined, editable, characterDispatch, compareAgainstEquipped }\r\n  if (flexArts) (commonPaneProps as any).artifacts = flexArts//from flex\r\n  // main CharacterDisplayCard\r\n  const DamageOptionsAndCalculationEle = characterSheet?.hasTalentPage && weaponSheet && <DamageOptionsAndCalculation {...{ characterSheet, weaponSheet, character, characterDispatch, newBuild, equippedBuild }} className=\"mb-2\" />\r\n  return (<Card bg=\"darkcontent\" text={\"lightfont\" as any} >\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs={\"auto\"} className=\"mr-auto\">\r\n          {/* character selecter/display */}\r\n          <CharSelectDropdown characterSheet={characterSheet} character={character} weaponSheet={weaponSheet} editable={editable} levelKey={levelKey} characterDispatch={characterDispatch} setCharacterKey={setCharacterKey} />\r\n        </Col>\r\n        {Boolean(mainStatAssumptionLevel) && <Col xs=\"auto\"><Alert className=\"mb-0 py-1 h-100\" variant=\"orange\" ><b>Assume Main Stats are Level {mainStatAssumptionLevel}</b></Alert></Col>}\r\n        {/* Compare against new build toggle */}\r\n        {newBuild ? <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(false)}>\r\n              <small>Show New artifact Stats</small>\r\n            </Button>\r\n            <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => setcompareAgainstEquipped(true)}>\r\n              <small>Compare against equipped artifact</small>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col> : null}\r\n        {Boolean(onClose) && <Col xs=\"auto\" >\r\n          <Button variant=\"danger\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} /></Button>\r\n        </Col>}\r\n      </Row>\r\n    </Card.Header>\r\n    {characterKey && characterSheet && weaponSheet && <Card.Body>\r\n      <compareAgainstEquippedContext.Provider value={compareAgainstEquipped as any}>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 mx-0\" fill>\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\"><h5 className=\"mb-0\">Character</h5></Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\"><h5 className=\"mb-0\">New Artifacts</h5></Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\"><h5 className=\"mb-0\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</h5></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {process.env.NODE_ENV !== \"development\" && !characterSheet.hasTalentPage ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled><h5 className=\"mb-0\">Talents</h5> <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\"><h5 className=\"mb-0\">Talents</h5></Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterOverviewPane characterSheet={characterSheet} weaponSheet={weaponSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterArtifactPane characterSheet={characterSheet} weaponSheet={weaponSheet} artifacts={undefined} {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              {DamageOptionsAndCalculationEle}\r\n              <CharacterTalentPane characterSheet={characterSheet} {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </compareAgainstEquippedContext.Provider>\r\n    </Card.Body>}\r\n    {footer && <Card.Footer>\r\n      {footer}\r\n    </Card.Footer>}\r\n  </Card>)\r\n}\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  weaponSheet?: WeaponSheet,\r\n  character: ICharacter\r\n  editable: boolean\r\n  levelKey: string\r\n  characterDispatch: (any) => void\r\n  setCharacterKey: (any) => void\r\n}\r\nfunction CharSelectDropdown({ characterSheet, weaponSheet, character, editable, levelKey, characterDispatch, setCharacterKey }: CharSelectDropdownProps) {\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <Image src={characterSheet.thumbImg} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n    <h6 className=\"d-inline\"> {characterSheet.name} </h6>\r\n  </span> : <span>Select a Character</span>\r\n  return <>{editable ? <ButtonGroup>\r\n    <Dropdown as={ButtonGroup}>\r\n      <Dropdown.Toggle as={Button}>\r\n        {HeaderIconDisplay}\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu as={CustomMenu}>\r\n        {[...allCharacterKeys].sort().map(charKey => <CharDropdownItem key={charKey} characterKey={charKey} setCharacterKey={setCharacterKey} />)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n    <DropdownButton as={ButtonGroup} disabled={!characterSheet} title={\r\n      <h6 className=\"d-inline\">Stats Template: {Character.getlevelTemplateName(levelKey)} </h6>\r\n    }>\r\n      <Dropdown.ItemText>\r\n        <span>Select Base Stat Template</span>\r\n      </Dropdown.ItemText>\r\n      {Character.getlevelKeys().map(lvlKey =>\r\n        <Dropdown.Item key={lvlKey} onClick={() => characterDispatch({ levelKey: lvlKey })}>\r\n          <h6 >{Character.getlevelTemplateName(lvlKey)} </h6>\r\n        </Dropdown.Item>)}\r\n    </DropdownButton>\r\n  </ButtonGroup> : <span>{HeaderIconDisplay} {characterSheet && weaponSheet && Character.getLevelString(character, characterSheet, weaponSheet)}</span>}</>\r\n}\r\nfunction CharDropdownItem({ characterKey, setCharacterKey }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey))\r\n  if (!characterSheet) return null\r\n  return <Dropdown.Item onClick={() => setCharacterKey(characterKey)}>\r\n    <span >\r\n      <Image src={characterSheet.thumbImg} className={`thumb-small p-0 m-n1 grad-${characterSheet.star}star`} thumbnail />\r\n      <h6 className=\"d-inline ml-2\">{characterSheet.name} </h6>\r\n    </span>\r\n  </Dropdown.Item>\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip id=\"wip\">Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","// import characters from\r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20/40\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40/50\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50/60\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60/70\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70/80\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80/90\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterSpecializedStatKey\r\n}","import { Badge, Card, ListGroup } from \"react-bootstrap\"\r\nimport ConditionalDisplay from \"../../Character/CharacterDisplay/Components/ConditionalDisplay\"\r\nimport FieldDisplay from \"../../Character/CharacterDisplay/Components/FieldDisplay\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { usePromise } from \"../../Util/ReactUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, editable, characterDispatch }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey))\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectTexts(setNumKey, stats)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const conditionals = sheet.setEffectConditionals(setNumKey, stats)\r\n  return <>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2 w-100\" >\r\n      <Card.Header className=\"p-2\">\r\n        <Badge variant=\"success\">{setNumKey}-Set</Badge> {setEffectText}\r\n      </Card.Header>\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, equippedBuild, newBuild }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n    {Boolean(conditionals) && Object.entries(conditionals!).map(([ckey, conditional]) => <ConditionalDisplay key={ckey as any} {...{ conditional, equippedBuild, newBuild, characterDispatch, editable }} />)}\r\n  </>\r\n}\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  editable: boolean,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats\r\n  characterDispatch: (arg0: any) => void,\r\n}\r\n","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { ICharacter } from \"../../Types/character\"\r\nimport CharacterSheet from \"../CharacterSheet\"\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter\r\n  statsDisplayKeys: any,\r\n  editable: boolean,\r\n  cardbg?: string\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ characterSheet, weaponSheet, character, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }: StatDisplayComponentProps) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, sectionValues]: any) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text={\"lightfont\" as any} className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ characterSheet, weaponSheet, character, equippedBuild, newBuild, editable, statKey }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Formula from \"../../Formula\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport { ICharacter } from \"../../Types/character\";\r\nimport { allElements } from \"../../Types/consts\";\r\nimport ICalculatedStats from \"../../Types/ICalculatedStats\";\r\nimport { IFieldDisplay } from \"../../Types/IFieldDisplay\";\r\nimport { usePromise } from \"../../Util/ReactUtil\";\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\nconst infusionVals = {\r\n  \"\": <span>No Infusion</span>,\r\n  \"pyro\": <span >Pyro Infusion</span>,\r\n  \"cryo\": <span >Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className?: string\r\n}\r\nexport function InfusionAuraDropdown({ characterSheet, character: { infusionAura = \"\", characterKey }, characterDispatch, className }: InfusionAuraDropdownProps) {\r\n  if (!characterSheet.isMelee()) return null\r\n  return <Dropdown className={className}>\r\n    <Dropdown.Toggle variant={infusionAura || \"secondary\"}>{infusionVals[infusionAura]}</Dropdown.Toggle>\r\n    <Dropdown.Menu>\r\n      {Object.entries(infusionVals).map(([key, text]) => <Dropdown.Item key={key} className={`text-${key}`} onClick={() => characterDispatch({ infusionAura: key })}>{text}</Dropdown.Item>)}\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}\r\n\r\ntype ReactionToggleProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  className: string\r\n}\r\nexport function ReactionToggle({ characterSheet, character: { characterKey, reactionMode = \"none\", infusionAura }, characterDispatch, className }: ReactionToggleProps) {\r\n  if (reactionMode === null) reactionMode = \"none\"\r\n  const charEleKey = characterSheet.elementKey\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <ToggleButtonGroup className={className} type=\"radio\" name=\"reactionMode\" value={reactionMode} onChange={val => characterDispatch({ reactionMode: val === \"none\" ? null : val })}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nexport function HitModeToggle({ hitMode, characterDispatch, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={m => characterDispatch({ hitMode: m })} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ characterSheet, build }: { characterSheet: CharacterSheet, build: ICalculatedStats }) {\r\n  const displayStatKeys = useMemo(() => characterSheet.getDisplayStatKeys(build), [build, characterSheet])\r\n  return <div>\r\n    {Object.entries(displayStatKeys).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = characterSheet.getTalent(talentKey)?.name ?? talentKey\r\n      return <Card bg=\"darkcontent\" text={\"lightfont\" as any} key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              if (Array.isArray(field))\r\n                return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} fieldIndex={fieldIndex} />\r\n              else if (typeof field === \"string\") {//simple statKey field\r\n                const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, [field]), build?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              return null\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\nfunction FormulaCalculationField({ fieldKeys, build, fieldIndex }: { fieldKeys: string[], build: ICalculatedStats, fieldIndex: number, }) {\r\n  const formula = usePromise(Formula.get(fieldKeys))\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.()\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n    <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n      <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n      <Card.Body className=\"p-2\">\r\n        <div className=\"mb-n2\">\r\n          <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n          {subFormulaKeys.map(subKey =>\r\n            <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build)} = <small>{Stat.printFormula(subKey, build, build.modifiers, false)}</small></p>\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} variant=\"info\">\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\ntype DamageOptionsAndCalculationProps = {\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet\r\n  character: ICharacter,\r\n  characterDispatch: (any) => void,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  className: string\r\n}\r\nexport default function DamageOptionsAndCalculation({ characterSheet, weaponSheet, character, character: { hitMode }, characterDispatch, newBuild, equippedBuild, className }: DamageOptionsAndCalculationProps) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <div className={className}>\r\n    <Card bg=\"lightcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row className=\"mb-n2\">\r\n          <Col xs=\"auto\"><InfusionAuraDropdown characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><HitModeToggle hitMode={hitMode} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n          <Col xs=\"auto\"><ReactionToggle characterSheet={characterSheet} character={character as any} characterDispatch={characterDispatch} className=\"mb-2\" /></Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n    <Accordion >\r\n      <Card bg=\"lightcontent\" text={\"lightfont\" as any} >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"d-block\">Damage Calculation Options & Formulas</span>\r\n              <small>Expand below to edit enemy details and view calculation details.</small>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <ContextAwareToggle callback={undefined} {...{ as: Button }} eventKey=\"details\" />\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"details\">\r\n          <Card.Body className=\"p-2\">\r\n            <Card className=\"mb-2\" bg=\"darkcontent\" text={\"lightfont\" as any}>\r\n              <Card.Header>\r\n                <Row>\r\n                  <Col>Enemy Editor</Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button variant=\"warning\" size=\"sm\">\r\n                      <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">To get the specific resistance values of enemies, please visit the wiki.</a>\r\n                    </Button >\r\n                  </Col>\r\n                </Row>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-2\">\r\n                <Row >\r\n                  <Col xs={12} xl={6} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={undefined}\r\n                      disabled={undefined}\r\n                      percent={undefined}\r\n                      name={<b>Enemy Level</b>}\r\n                      value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                      defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, \"enemyLevel\")}\r\n                      onValueChange={value => characterDispatch({ type: \"statOverride\", statKey: \"enemyLevel\", value, characterSheet, weaponSheet })}\r\n                    />\r\n                  </Col>\r\n                  {[\"physical\", ...allElements].map(eleKey => {\r\n                    let statKey = `${eleKey}_enemyRes_`\r\n                    let immunityStatKey = `${eleKey}_enemyImmunity`\r\n                    let elementImmunity = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, immunityStatKey)\r\n                    return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                      <StatInput\r\n                        prependEle={<Button variant={eleKey} onClick={() => characterDispatch({ type: \"statOverride\", statKey: immunityStatKey, value: !elementImmunity, characterSheet, weaponSheet })} className=\"text-darkcontent\">\r\n                          <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                        name={<b>{Stat.getStatName(statKey)}</b>}\r\n                        value={Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey)}\r\n                        placeholder={Stat.getStatNameRaw(statKey)}\r\n                        defaultValue={Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey)}\r\n                        onValueChange={value => characterDispatch({ type: \"statOverride\", statKey, value, characterSheet, weaponSheet })}\r\n                        disabled={elementImmunity}\r\n                        percent\r\n                      />\r\n                    </Col>\r\n                  })}\r\n                  <Col xs={12}><small>Note: for negative resistances due to resistance shred like Zhongli's shield (e.g. -10%), enter the RAW value (-10). GO will half the value for you in the calculations.</small></Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <CalculationDisplay characterSheet={characterSheet} build={build} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  </div>\r\n}\r\n","/// Schema keys\r\n/// Common {\r\n///   encode?: A function that transform encoding object into the specified format\r\n///   decode?: A function that transform object in the specified format into the decoded object\r\n/// }\r\n///\r\n/// UInt: { type: \"uint\",\r\n///   length?: number of bytes, uses variable-length format if not set,\r\n/// }\r\n/// String: { type: \"string\" }\r\n/// Array: { type: \"array\",\r\n///   schemas?: Array of schemas, in the same order as the item,\r\n///   defaultSchema?: Default schema for when `schemas[i]` is `null`,\r\n/// }\r\n/// Object: { type: \"object\",\r\n///   schemas: A key-schema dictionary. All keys are encoded\r\n///   default: default value if the object[key] doesn't exist\r\n/// }\r\n/// Sparse: { type: \"sparse\",\r\n///   keys?: A list of permitted keys, `null` if all keys are permitted,\r\n///   keySchema: Common schema for keys,\r\n///   valueSchema: Common schema for values,\r\n/// }\r\n\r\nexport function encode(data, schema) {\r\n  return encodeItem(data, schema, null)\r\n}\r\nexport function decode(string, schema) {\r\n  const stream = new BlockStream(string)\r\n  const result = decodeItem(stream, schema, null)\r\n  stream.end()\r\n  return result\r\n}\r\n\r\nfunction encodeItem(data, schema, pathItem) {\r\n  try {\r\n    if (schema.encode)\r\n      data = schema.encode(data)\r\n    switch (schema.type) {\r\n      case \"uint\": return encodeUInt(data, schema)\r\n      case \"string\": return encodeString(data, schema)\r\n      case \"array\": return encodeArray(data, schema)\r\n      case \"object\": return encodeObject(data, schema)\r\n      case \"sparse\": return encodeSparse(data, schema)\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\nfunction decodeItem(stream, schema, pathItem) {\r\n  try {\r\n    let result\r\n    switch (schema.type) {\r\n      case \"uint\": result = decodeUInt(stream, schema); break\r\n      case \"string\": result = decodeString(stream, schema); break\r\n      case \"array\": result = decodeArray(stream, schema); break\r\n      case \"object\": result = decodeObject(stream, schema); break\r\n      case \"sparse\": result = decodeSparse(stream, schema); break\r\n      default: throw new Error(`Unsupported schema type ${schema.type} on array`)\r\n    }\r\n    if (schema.decode)\r\n      return schema.decode(result)\r\n    return result\r\n  } catch (error) {\r\n    error.path = error.path ?? []\r\n    error.path.push(pathItem)\r\n    throw error\r\n  }\r\n}\r\n\r\nfunction encodeSparse(data, schema) {\r\n  const { keySchema, keys, valueSchema } = schema\r\n  const items = Object.entries(data).filter(([key]) => keys?.includes(key) ?? true)\r\n\r\n  return encodeLength(items.length) + items.map(([key, value]) =>\r\n    encodeItem(key, keySchema, key) + encodeItem(value, valueSchema, key)\r\n  ).join('')\r\n}\r\nfunction decodeSparse(stream, schema) {\r\n  const { keys, keySchema, valueSchema } = schema\r\n  const length = decodeLength(stream)\r\n\r\n  return Object.fromEntries([...new Array(length)].map(() => {\r\n    const key = decodeItem(stream, keySchema, null)\r\n    const value = decodeItem(stream, valueSchema, key)\r\n    return [key, value]\r\n  }).filter(([key]) => keys?.includes(key) ?? true))\r\n}\r\n\r\nfunction encodeObject(data, schema: { schemas: any[], default: any }) {\r\n  const { schemas = [] } = schema\r\n  return Object.entries(schemas).map(([key, schema]) =>\r\n    encodeItem(key in data ? data[key] : schema.default, schema, key)\r\n  ).join('')\r\n}\r\nfunction decodeObject(stream, schema) {\r\n  const { schemas = [] } = schema\r\n  return Object.fromEntries(Object.entries(schemas).map(([key, schema]) =>\r\n    [key, decodeItem(stream, schema, key)]\r\n  ))\r\n}\r\n\r\nfunction encodeArray(data, schema) {\r\n  const { schemas = [], defaultSchema } = schema\r\n  return encodeLength(data.length) + data.map((item, i) =>\r\n    encodeItem(item, schemas[i] ?? defaultSchema, i)\r\n  ).join('')\r\n}\r\nfunction decodeArray(stream, schema) {\r\n  const { schemas = [], defaultSchema } = schema, length = decodeLength(stream)\r\n  return [...new Array(length)].map((unused, i) =>\r\n    decodeItem(stream, schemas[i] ?? defaultSchema, i))\r\n}\r\n\r\nfunction encodeString(string, schema) {\r\n  if (!string.match(/^[a-z0-9\\-_]+$/i))\r\n    throw new Error(`Cannot encode string ${string}: not alphanumeric or -_`)\r\n  return encodeLength(string.length) + string\r\n}\r\nfunction decodeString(stream, schema) {\r\n  const string = stream.take(decodeLength(stream))\r\n  if (!string.match(/^[a-z0-9\\-_]+$/i))\r\n    throw new Error(`Cannot decode string ${string}: not alphanumeric or -_`)\r\n  return string\r\n}\r\n\r\nfunction encodeUInt(uint, schema) {\r\n  const string = uintToString(uint, schema.length)\r\n  return schema.length ? string : (encodeLength(string.length) + string)\r\n}\r\nfunction decodeUInt(stream, schema) {\r\n  let length = schema.length || decodeLength(stream)\r\n  return stringToUInt(stream.take(length))\r\n}\r\n\r\n// Keep the length low. We might want to reserve high bits for later extension.\r\nfunction encodeLength(length) {\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return uintToString(length, 1)\r\n}\r\nfunction decodeLength(stream) {\r\n  let length = stringToUInt(stream.take(1))\r\n  if (length >= 32)\r\n    throw new Error(`Length (${length}) too large`)\r\n  return length\r\n}\r\n\r\nexport function uintToString(number, length = 0) {\r\n  if (number < 0) throw new Error(`Cannot encode negative number ${number}`)\r\n\r\n  var string = \"\"\r\n  while (number > 0) {\r\n    const remainder = number % 64\r\n    number = Math.floor(number / 64)\r\n    if (remainder < 10) // 0-9\r\n      string += String.fromCharCode(remainder + 48 - 0)\r\n    else if (remainder < 36) // a-z\r\n      string += String.fromCharCode(remainder + 97 - 10)\r\n    else if (remainder < 62) // A-Z\r\n      string += String.fromCharCode(remainder + 65 - 36)\r\n    else if (remainder === 62) // -\r\n      string += \"-\"\r\n    else if (remainder === 63) // _\r\n      string += \"_\"\r\n  }\r\n\r\n  if (!length)\r\n    return string\r\n\r\n  if (string.length > length)\r\n    throw new Error(`Cannot encode uint ${number}: value too large`)\r\n  return string.padEnd(length, \"0\")\r\n}\r\nexport function stringToUInt(string) {\r\n  let result = 0, multiplier = 1\r\n\r\n  for (let i = 0; i < string.length; i++) {\r\n    let code = string.charCodeAt(i)\r\n\r\n    if (48 <= code && code < 58) // 0-9\r\n      result += multiplier * (code - 48 + 0)\r\n    else if (97 <= code && code < 123) // a-z\r\n      result += multiplier * (code - 97 + 10)\r\n    else if (65 <= code && code < 91) // A-Z\r\n      result += multiplier * (code - 65 + 36)\r\n    else if (string[i] === '-')\r\n      result += multiplier * 62\r\n    else if (string[i] === '_')\r\n      result += multiplier * 63\r\n    else throw new Error(`Cannot parse UInt from \"${string}\", which contains \"${String.fromCharCode(code)}\"`)\r\n\r\n    multiplier *= 64\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nclass BlockStream {\r\n  string: string\r\n  offset: number\r\n  constructor(string) {\r\n    this.string = string\r\n    this.offset = 0\r\n  }\r\n  take(count) {\r\n    if (this.offset + count > this.string.length)\r\n      throw new Error(`Cannot take ${count} items from ${this.string.slice(this.offset)}`)\r\n\r\n    const result = this.string.slice(this.offset, this.offset + count)\r\n    this.offset += count\r\n    return result\r\n  }\r\n  end() {\r\n    if (this.string.length !== this.offset)\r\n      throw new Error(`Unused string ${this.string.slice(this.offset)}`)\r\n  }\r\n}\r\n","// DO NOT REMOVE ITEMS FROM THESE LISTS\r\n//        ONLY APPEND NEW ENTRIES\r\n// The index of items in this list is used to\r\n// compress the exported data. Removing an item\r\n// from this list will shift subsequent entries.\r\n\r\nimport { allSlotKeys, allElements, allArtifactSets, allHitModes, allReactionModes, allCharacterKeys } from \"../Types/consts\"\r\nimport { crawlObject } from \"../Util/Util\"\r\nimport { uintToString, stringToUInt } from \"./CodingUtil\"\r\n\r\nconst elements = ['', ...allElements] as const\r\nconst stats = [\r\n  \"\", \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n  \"physical_dmg_\", \"anemo_dmg_\", \"cryo_dmg_\", \"dendro_dmg_\", \"electro_dmg_\", \"geo_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\",\r\n] as const\r\n\r\n// Common schemas\r\n\r\nconst bool = {\r\n  type: \"uint\", length: 1,\r\n  encode: (bool) => bool ? 1 : 0,\r\n  decode: (int) => int !== 0,\r\n}\r\nconst uint = (length) => ({ type: \"uint\", length })\r\nconst float = {\r\n  type: \"string\",\r\n  encode: (value) => value.toString().replace(/\\./g, '_'),\r\n  decode: (string) => parseFloat(string.replace(/_/g, '.')),\r\n}\r\nconst string = { type: \"string\" }\r\nconst array = (defaultSchema, other = {}) => ({ type: \"array\", defaultSchema, ...other })\r\nconst object = (schemas, other = {}) => ({ type: \"object\", schemas, ...other })\r\nconst sparse = (keySchema, valueSchema, keys = null) => ({ type: \"sparse\", keys, keySchema, valueSchema })\r\n\r\n// Fixed schema\r\n\r\nconst fixed = (list, length = 1) => ({\r\n  type: \"uint\", length,\r\n  encode: (item) => list.indexOf(item),\r\n  decode: (index) => list[index],\r\n})\r\nconst stat = fixed(stats)\r\nconst artifactSet = fixed(allArtifactSets)\r\nconst slot = fixed(allSlotKeys)\r\nconst characterKey = fixed(allCharacterKeys)\r\nconst hitMode = fixed(allHitModes)\r\nconst reactionMode = fixed([null, ...allReactionModes])\r\nconst element = fixed(elements)\r\n\r\n// Complex schemas\r\n\r\nconst artifact = object({\r\n  setKey: artifactSet,\r\n  numStars: uint(1),\r\n  level: uint(2),\r\n  mainStatKey: stat,\r\n  slotKey: slot,\r\n  substats: array(\r\n    object({\r\n      key: stat,\r\n      value: uint(2),\r\n    }, {\r\n      encode: ({ key, value }) => {\r\n        let factor = key.endsWith(\"_\") ? 10 : 1 // one decimal place for percentage\r\n        return { key, value: value * factor }\r\n      },\r\n      decode: ({ key, value }) => {\r\n        let factor = key.endsWith(\"_\") ? 10 : 1 // one decomal place for percentage\r\n        return { key, value: value / factor }\r\n      }\r\n    })\r\n  )\r\n})\r\nconst conditionalValues = array(object({\r\n  path: array(string), value: array(string)\r\n}), {\r\n  encode: (conditionalValues) => {\r\n    let result: { path, value }[] = []\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (value, path) => {\r\n      result.push({ path, value: value.map(item => item.toString()) })\r\n    })\r\n    result.filter(({ path }) => {\r\n      switch (path[0]) {\r\n        case \"character\":\r\n          path[0] = \"c\"\r\n          path[1] = uintToString(allCharacterKeys.indexOf(path[1]))\r\n          break\r\n        case \"weapon\":\r\n          path[0] = \"w\"\r\n          break\r\n        case \"artifact\":\r\n          path[0] = \"a\"\r\n          path[1] = uintToString(allArtifactSets.indexOf(path[1]))\r\n          break\r\n        default: return false\r\n      }\r\n      return true\r\n    })\r\n    return result\r\n  },\r\n  decode: (pathvalues) => {\r\n    const conditionalValues = { weapon: {}, artifact: {}, character: {} }\r\n    for (const { path, value } of pathvalues) {\r\n      switch (path[0]) {\r\n        case \"c\":\r\n          path[0] = \"character\"\r\n          path[1] = allCharacterKeys[stringToUInt(path[1])]\r\n          break\r\n        case \"w\":\r\n          path[0] = \"weapon\"\r\n          break\r\n        case \"a\":\r\n          path[0] = \"artifact\"\r\n          path[1] = allArtifactSets[stringToUInt(path[1])]\r\n          break\r\n        default:\r\n          continue\r\n      }\r\n      const last = path.pop()\r\n      let current = conditionalValues\r\n      for (const key of path) {\r\n        const next = current[key] ?? {}\r\n        current[key] = next\r\n        current = next\r\n      }\r\n      current[last] = value.map(item => isNaN(parseFloat(item)) ? item : parseFloat(item))\r\n    }\r\n    return conditionalValues\r\n  }\r\n})\r\nconst conditionalV1 = array(object({\r\n  srcKey: string,\r\n  srcKey2: string,\r\n  conditionalNum: uint(1),\r\n}))\r\nconst weaponV1 = object({\r\n  key: string,\r\n  levelKey: string,\r\n  refineIndex: uint(1),\r\n  overrideMainVal: float,\r\n  overrideSubVal: float,\r\n  conditionalNum: uint(1),\r\n})\r\nconst weaponV2 = object({\r\n  key: string,\r\n  levelKey: string,\r\n  refineIndex: uint(1),\r\n  overrideMainVal: float,\r\n  overrideSubVal: float,\r\n})\r\nconst characterV1 = object({\r\n  characterKey,\r\n  hitMode,\r\n  reactionMode,\r\n  constellation: uint(1),\r\n  overrideLevel: uint(2),\r\n  levelKey: string,\r\n  autoInfused: bool,\r\n  talentLevelKeys: object({ auto: uint(1), skill: uint(1), burst: uint(1) }),\r\n  artifactConditionals: conditionalV1,\r\n  baseStatOverrides: sparse(string, float),\r\n  talentConditionals: conditionalV1,\r\n  weapon: weaponV1,\r\n}, {\r\n  decode: (character) => {\r\n    delete character.artifactConditionals\r\n    delete character.talentConditionals\r\n    delete character.weapon.conditionalNum\r\n    delete character.autoInfused\r\n    character.infusionAura = ''\r\n    character.conditionalValues = { weapon: {}, artifact: {}, character: {} }\r\n    return character\r\n  }\r\n})\r\nconst characterV2 = object({\r\n  characterKey,\r\n  hitMode,\r\n  reactionMode,\r\n  constellation: uint(1),\r\n  overrideLevel: uint(2),\r\n  levelKey: string,\r\n  infusionAura: element,\r\n  talentLevelKeys: object({ auto: uint(1), skill: uint(1), burst: uint(1) }),\r\n  baseStatOverrides: sparse(string, float),\r\n  weapon: weaponV2,\r\n  conditionalValues,\r\n  reserved: array(uint(1)),\r\n}, {\r\n  encode: (value) => { value.reserved = []; return value },\r\n  decode: (value) => { delete value.reserved; return value },\r\n})\r\n\r\nconst flexV1 = object({\r\n  artifacts: array(artifact),\r\n  character: characterV1,\r\n})\r\nconst flexV2 = object({\r\n  artifacts: array(artifact),\r\n  character: characterV2,\r\n})\r\n\r\nexport const schemas = {\r\n  flexV1, flexV2\r\n}\r\n// For testing purpose only, no need to maintain strict ordering\r\nexport const constants = {\r\n  reactionModes: [null, ...allReactionModes], stats\r\n}\r\n","import ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { CurrentDatabaseVersion } from \"../Database/DatabaseUtil\";\r\nimport { decode, encode } from \"./CodingUtil\";\r\nimport { schemas } from \"./Schemas\";\r\n\r\nexport function createFlexObj(characterKey) {\r\n  const character = CharacterDatabase.get(characterKey)\r\n  if (!character) return null\r\n\r\n  const artifacts = Object.values(character.equippedArtifacts)\r\n    .filter(art => art)\r\n    .map(id => ArtifactDatabase.get(id))\r\n\r\n  return _createFlexObj(character, artifacts)\r\n}\r\n\r\n// TODO: Remove this when all test URLs are converted to new format\r\nexport function _createFlexObj(character, artifacts) {\r\n  try {\r\n    return \"v=2&d=\" + encode({ character, artifacts }, schemas.flexV2)\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${error.path ?? []}: ${error}`)\r\n    return null\r\n  }\r\n}\r\n\r\nexport function parseFlexObj(string) {\r\n  const parameters = Object.fromEntries(string.split('&').map(s => s.split('=')))\r\n\r\n  try {\r\n    switch (parseInt(parameters.v)) {\r\n      case 2: return [parseFlexObjFromSchema(parameters.d, schemas.flexV2), 2]\r\n      case 1: return [parseFlexObjFromSchema(parameters.d, schemas.flexV1), 1]\r\n      default: return [null]\r\n    }\r\n  } catch (error) {\r\n    if (process.env.NODE_ENV === \"development\")\r\n      console.error(`Fail to encode data on path ${error.path ?? []}: ${error}`)\r\n    return [null]\r\n  }\r\n}\r\n\r\nfunction parseFlexObjFromSchema(string, schema) {\r\n  const { character, artifacts } = decode(string, schema)\r\n  artifacts.forEach(artifact => {\r\n    artifact.location = character.characterKey\r\n  })\r\n  return {\r\n    databaseVersion: CurrentDatabaseVersion,\r\n    artifacts, ...character\r\n  }\r\n}\r\n","import { Alert, Button, Card, Container, Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { CurrentDatabaseVersion } from '../Database/DatabaseUtil';\r\nimport '../StatDependency'\r\nimport { createFlexObj, parseFlexObj, _createFlexObj } from \"./FlexUtil\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TestDisplay() {\r\n  const location = useLocation()\r\n  const searchStr = location.search\r\n  if (searchStr) {\r\n    const [character, version] = parseFlexObj(searchStr.substring(1))\r\n    if (!character) return <Redirect to={`/`} />\r\n    if (version !== 2)\r\n      return <Redirect to={`/flex?${_createFlexObj(character, character.artifacts)}`} />\r\n    return <Display character={character} />\r\n  } else {\r\n    const characterKey = (location as any).characterKey\r\n    if (!characterKey) return <Redirect to={`/`} />\r\n    const flexObj = createFlexObj(characterKey)\r\n    if (!flexObj) return <Redirect to={`/`} />\r\n    window.scrollTo(0, 0)//sometimes the window isnt scrolled to the top on redirect.\r\n    return <Redirect to={`/flex?${flexObj}`} />\r\n  }\r\n}\r\nfunction Display({ character }) {\r\n  const [toast, settoast] = useState(false)\r\n  const url = window.location.href\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(url)\r\n    settoast(true)\r\n  }\r\n  const { databaseVersion = 0 } = character\r\n  const isUpToDate = databaseVersion < CurrentDatabaseVersion\r\n  return <Container className=\"my-2\">\r\n    <Toast onClose={() => settoast(false)} show={toast} delay={3000} autohide style={{\r\n      position: 'absolute',\r\n      top: 50,\r\n      right: 50,\r\n    }}>\r\n      <Toast.Header><b className=\"mr-auto\">Genshin Optimizer</b></Toast.Header>\r\n      <Toast.Body>URL copied to clipboard.</Toast.Body>\r\n    </Toast>\r\n    <Card bg=\"darkcontent\" text={\"lightfont\" as any} className=\"mb-2\">\r\n      <Card.Body className=\"p-2\">\r\n        <InputGroup className=\"mb-0\">\r\n          <InputGroup.Prepend>\r\n            <Button onClick={copyToClipboard}>\r\n              <span><FontAwesomeIcon icon={faLink} /> Copy URL to clipboard</span>\r\n            </Button>\r\n          </InputGroup.Prepend>\r\n          <Form.Control readOnly value={window.location.href} onClick={e => e.target.select()} />\r\n        </InputGroup>\r\n        {isUpToDate && <Alert variant=\"warning\" className=\"py-2 mt-2 mb-0\">This URL is generated on an older database version of Genshin Optimizer. The character data below might not be displayed as intended.</Alert>}\r\n      </Card.Body>\r\n    </Card>\r\n    <CharacterDisplayCard character={character} />\r\n  </Container>\r\n}","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n"],"sourceRoot":""}