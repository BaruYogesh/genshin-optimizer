{"version":3,"file":"static/js/171.ed9f424c.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactSetSlotTooltip.tsx","Components/BootstrapTooltip.tsx","Components/Artifact/ArtifactCardPico.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterSelectionModal.tsx","Components/ConditionalWrapper.tsx","Components/FieldDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponNameTooltip.tsx","DataContext.tsx","Data/Artifacts/ArtifactSheet.tsx","Data/Resonance.tsx","Data/SheetUtil.tsx","Data/Weapons/WeaponSheet.tsx","PageCharacter/CharacterCardPico.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharSelectionCallback.tsx","Util/CharacterUtil.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useTeamData.tsx"],"sourcesContent":["import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport { SlotKey } from \"../../Types/consts\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\r\n\r\ntype Data = {\r\n  slotKey: SlotKey,\r\n  sheet: ArtifactSheet | undefined,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function ArtifactSetSlotTooltip({ slotKey, sheet, children }: Data) {\r\n  const fallback = <Box>\r\n    <Skeleton variant=\"text\" width={100} />\r\n    <Skeleton variant=\"text\" width={100} />\r\n  </Box>\r\n  const title = <Suspense fallback={fallback}>\r\n    <Box>\r\n      <Typography><strong>{sheet?.name}</strong></Typography>\r\n      <Typography>{artifactSlotIcon(slotKey)} {sheet?.getSlotName?.(slotKey)}</Typography>\r\n    </Box>\r\n  </Suspense>\r\n\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 500,\r\n  },\r\n}));\r\nexport default BootstrapTooltip\r\n","import { Box, Grid, Typography } from '@mui/material';\r\nimport Assets from '../../Assets/Assets';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport KeyMap, { cacheValueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { SlotKey } from '../../Types/consts';\r\nimport ArtifactSetSlotTooltip from './ArtifactSetSlotTooltip';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\r\n  const artifactSheet = usePromise(art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\r\n  // Blank artifact slot icon\r\n  if (!art || !artifactSheet) return <Grid item key={key} xs={1}>\r\n    <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"70%\", height: \"70%\",\r\n            left: \"50%\", top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            opacity: 0.7\r\n          }}\r\n          component=\"img\"\r\n          src={Assets.slot[key]}\r\n        />\r\n      </Box>\r\n    </CardDark>\r\n  </Grid>\r\n\r\n  // Actual artifact icon + info\r\n  const { mainStatKey, rarity, level, mainStatVal } = art\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  return <Grid item key={key} xs={1}>\r\n    <CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\r\n      <ArtifactSetSlotTooltip slotKey={key} sheet={artifactSheet}>\r\n        <Box\r\n          component=\"img\"\r\n          className={`grad-${rarity}star`}\r\n          src={artifactSheet.slotIcons[key]}\r\n          maxWidth=\"100%\"\r\n          maxHeight=\"100%\"\r\n        />\r\n      </ArtifactSetSlotTooltip>\r\n      <Typography sx={{ position: \"absolute\", lineHeight: 1, pointerEvents: \"none\" }} variant=\"subtitle2\"><SqBadge color={levelVariant as any}>+{level}</SqBadge></Typography>\r\n      <Typography variant='h6' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, }}>\r\n        <BootstrapTooltip placement=\"top\" title={<Typography>{cacheValueString(mainStatVal, KeyMap.unit(mainStatKey))}{KeyMap.unit(mainStatKey)} {KeyMap.getStr(mainStatKey)}</Typography>} disableInteractive>\r\n          <SqBadge color=\"secondary\" sx={{ p: 0.25 }}>{StatIcon[mainStatKey]}</SqBadge>\r\n        </BootstrapTooltip>\r\n      </Typography>\r\n    </CardDark>\r\n  </Grid>\r\n}\r\n","import { Box, Grid, Typography } from '@mui/material';\r\nimport { useContext, useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponNameTooltip from './WeaponNameTooltip';\r\n\r\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = database._getWeapon(weaponId)\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n\r\n  const tooltipAddl = <Box>\r\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\r\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\r\n  </Box>\r\n\r\n  return <Grid item xs={1} height=\"100%\">\r\n    <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\r\n        <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\r\n          <Box\r\n            component=\"img\"\r\n            src={weaponSheet.img}\r\n            maxWidth=\"100%\"\r\n            maxHeight=\"100%\"\r\n            sx={{ mt: \"auto\" }}\r\n          />\r\n        </WeaponNameTooltip>\r\n      </Box>\r\n      <Typography variant='subtitle1' sx={{ position: \"absolute\", lineHeight: 1, pointerEvents: \"none\" }}>\r\n        <SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge>\r\n      </Typography>\r\n      {weaponSheet.hasRefinement && <Typography variant='subtitle1' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, pointerEvents: \"none\" }}>\r\n        <SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge>\r\n      </Typography>}\r\n    </CardDark>\r\n  </Grid>\r\n}\r\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <Typography>{StatIcon[node.info.key]} {val}</Typography>\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useContext, useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = database._getWeapon(weaponId)\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.img}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\r\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\r\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\r\n          <WeaponStat node={UIData.get(input.weapon.main)} />\r\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n        </Typography>\r\n\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <SqBadge color=\"secondary\">{StatIcon[node.info.key]} {val}</SqBadge>\r\n}\r\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { DataContext, dataContextObj, TeamData } from '../../DataContext';\r\nimport { uiInput as input } from '../../Formula';\r\nimport KeyMap from '../../KeyMap';\r\nimport CharacterCardPico from '../../PageCharacter/CharacterCardPico';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\r\nimport { range } from '../../Util/Util';\r\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\r\nimport CardLight from '../Card/CardLight';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport { NodeFieldDisplay } from '../FieldDisplay';\r\nimport SqBadge from '../SqBadge';\r\nimport { Stars } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\r\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey | \"\",\r\n  onClick?: (characterKey: CharacterKey, tab: string) => void,\r\n  onClickHeader?: (characterKey: CharacterKey, tab: string) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  characterChildren?: Displayable,\r\n  footer?: Displayable,\r\n  isTeammateCard?: boolean,\r\n}\r\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, footer, isTeammateCard }: CharacterCardProps) {\r\n  const { teamData: teamDataContext } = useContext(DataContext)\r\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\r\n  const { character, characterSheet, target: data } = teamData?.[characterKey] ?? {}\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey, \"overview\"), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!teamData || !character || !characterSheet || !data) return null;\r\n  const dataContextObj: dataContextObj = {\r\n    character,\r\n    data,\r\n    characterSheet,\r\n    mainStatAssumptionLevel: 0,\r\n    teamData,\r\n    characterDispatch\r\n  }\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <DataContext.Provider value={dataContextObj}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\r\n          <IconButton sx={{ p: 0.5 }} onClick={event => characterDispatch({ favorite: !character.favorite })}>\r\n            {character.favorite ? <Favorite /> : <FavoriteBorder />}\r\n          </IconButton>\r\n        </Box>\r\n        <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n          <Header onClick={!onClick ? onClickHeader : undefined} />\r\n          <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n            <Artifacts />\r\n            {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\r\n              <WeaponCardPico weaponId={character.equippedWeapon} />\r\n              {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} index={i} /></Grid>)}\r\n            </Grid>}\r\n            {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\r\n            {!isTeammateCard && <Stats />}\r\n            {weaponChildren}\r\n            {artifactChildren}\r\n            {characterChildren}\r\n          </CardContent>\r\n        </ConditionalWrapper>\r\n        {footer}\r\n      </CardLight>\r\n    </DataContext.Provider>\r\n  </Suspense>\r\n}\r\nfunction Header({ onClick }: { onClick?: (characterKey: CharacterKey, tab: string) => void }) {\r\n  const { data, characterSheet } = useContext(DataContext)\r\n  const characterKey = data.get(input.charKey).value as CharacterKey\r\n  const characterEle = data.get(input.charEle).value as ElementKey\r\n  const characterLevel = data.get(input.lvl).value\r\n  const constellation = data.get(input.constellation).value\r\n  const ascension = data.get(input.asc).value\r\n  const autoBoost = data.get(input.bonus.auto).value\r\n  const skillBoost = data.get(input.bonus.skill).value\r\n  const burstBoost = data.get(input.bonus.burst).value\r\n\r\n  const tAuto = data.get(input.total.auto).value\r\n  const tSkill = data.get(input.total.skill).value\r\n  const tBurst = data.get(input.total.burst).value\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey, \"overview\")} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterSheet.thumbImg}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} />\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n            <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n            <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item>\r\n            <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\r\n          </Grid>\r\n        </Grid>\r\n        <Typography mt={1} ><Stars stars={characterSheet.rarity} colored /></Typography>\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\nfunction Artifacts() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifacts = useMemo(() =>\r\n    allSlotKeys.map(k => [k, database._getArt(data.get(input.art[k].id).value ?? \"\")]),\r\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\r\n\r\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\r\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\r\n      <ArtifactCardPico key={key} artifactObj={art} slotKey={key} />\r\n    )}\r\n  </Grid>\r\n}\r\n\r\nfunction Stats() {\r\n  const { data } = useContext(DataContext)\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    {data.get(input.special).info.key && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\r\n      {StatIcon[data.get(input.special).info.key!]}\r\n      <Typography>{KeyMap.get(data.get(input.special).info.key!)}</Typography>\r\n    </Box>}\r\n  </Box>\r\n}\r\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, IconButton, Typography } from \"@mui/material\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport { uiInput as input } from \"../../Formula\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport useForceUpdate from \"../../ReactHooks/useForceUpdate\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport useTeamData from \"../../ReactHooks/useTeamData\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey, WeaponTypeKey } from \"../../Types/consts\";\r\nimport { characterFilterConfigs, characterSortConfigs } from \"../../Util/CharacterSort\";\r\nimport { filterFunction, sortFunction } from \"../../Util/SortByFilters\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport CardLight from \"../Card/CardLight\";\r\nimport CloseButton from \"../CloseButton\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport ModalWrapper from \"../ModalWrapper\";\r\nimport SortByButton from \"../SortByButton\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { Stars } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ElementToggle from \"../ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\";\r\n\r\nconst defaultSortKeys = [\"level\", \"rarity\", \"name\"]\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const sortKeys = useMemo(() => newFirst ? [\"new\", ...defaultSortKeys] : defaultSortKeys, [newFirst])\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  const [sortBy, setsortBy] = useState(sortKeys[0])\r\n  const [ascending, setascending] = useState(false)\r\n  const [elementalFilter, setelementalFilter] = useState<ElementKey | \"\">(\"\")\r\n  const [weaponFilter, setweaponFilter] = useState<WeaponTypeKey | \"\">(\"\")\r\n\r\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\r\n\r\n  const [favesDirty, setFavesDirty] = useForceUpdate()\r\n  useEffect(() => database.followAnyChar(setFavesDirty), [database, setFavesDirty])\r\n\r\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\r\n  const filterConfigs = useMemo(() => characterSheets && favesDirty && characterFilterConfigs(database, characterSheets), [favesDirty, database, characterSheets])\r\n  const ownedCharacterKeyList = useMemo(() => characterSheets ? [...new Set(allCharacterKeys)].filter(cKey => filter(database._getChar(cKey), characterSheets[cKey])) : [], [database, characterSheets, filter])\r\n  const characterKeyList = useMemo(() => (characterSheets && sortConfigs && filterConfigs) ?\r\n    ownedCharacterKeyList\r\n      .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"yes\" }, filterConfigs))\r\n      .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      .concat(\r\n        ownedCharacterKeyList\r\n          .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"no\" }, filterConfigs))\r\n          .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      )\r\n    : [],\r\n    [characterSheets, elementalFilter, weaponFilter, sortBy, ascending, sortConfigs, filterConfigs, ownedCharacterKeyList])\r\n\r\n  if (!characterSheets) return null\r\n  return <ModalWrapper open={show} onClose={onHide} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1} >\r\n          <Grid item>\r\n            <WeaponToggle sx={{ height: \"100%\" }} onChange={setweaponFilter} value={weaponFilter} size=\"small\" />\r\n          </Grid>\r\n          <Grid item flexGrow={1}>\r\n            <ElementToggle sx={{ height: \"100%\" }} onChange={setelementalFilter} value={elementalFilter} size=\"small\" />\r\n          </Grid>\r\n\r\n          <Grid item flexGrow={1} />\r\n\r\n          <Grid item >\r\n            <SortByButton sx={{ height: \"100%\" }}\r\n              sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\r\n              ascending={ascending} onChangeAsc={setascending} />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={6} md={4} lg={3} >\r\n          <CharacterBtn key={characterKey} characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n        </Grid>)}\r\n      </Grid></CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CharacterBtn({ onClick, characterKey }: { onClick: () => void, characterKey: CharacterKey, }) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const teamData = useTeamData(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const favorite = database._getChar(characterKey)?.favorite\r\n  const { target: data } = teamData?.[characterKey] ?? {}\r\n  if (!characterSheet) return null\r\n  const rarity = characterSheet.rarity\r\n  return <Box>\r\n    {favorite !== undefined && <Box display=\"flex\" position=\"absolute\" alignSelf=\"start\" zIndex={1}>\r\n      <IconButton sx={{ p: 0.5 }} onClick={() => characterDispatch({ favorite: !favorite })}>\r\n        {favorite ? <Favorite /> : <FavoriteBorder />}\r\n      </IconButton>\r\n    </Box>}\r\n    <CardActionArea onClick={onClick} >\r\n      <CardLight sx={{ display: \"flex\", alignItems: \"center\" }}  >\r\n        <Box component=\"img\" src={characterSheet.thumbImg} sx={{ width: 130, height: \"auto\" }} className={`grad-${rarity}star`} />\r\n        <Box sx={{ pl: 1 }}>\r\n          <Typography><strong>{characterSheet.name}</strong></Typography>\r\n          {data ? <>\r\n            <Typography variant=\"h6\"> {characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <ImgIcon src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} />{` `}{CharacterSheet.getLevelString(data.get(input.lvl).value, data.get(input.asc).value)}</Typography>\r\n            <Typography >\r\n              <SqBadge color=\"success\">{`C${data.get(input.constellation).value}`}</SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.auto).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.auto).value}</strong></SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.skill).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.skill).value}</strong></SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.burst).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.burst).value}</strong></SqBadge>\r\n            </Typography>\r\n          </> : <>\r\n            <Typography variant=\"h6\"><SqBadge color=\"primary\">NEW</SqBadge></Typography>\r\n          </>}\r\n          <small><Stars stars={rarity} colored /></small>\r\n        </Box>\r\n      </CardLight>\r\n    </CardActionArea >\r\n  </Box>\r\n}\r\n","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  falseWrapper?: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, List, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { DataContext, dataContextObj } from \"../DataContext\";\r\nimport { NodeDisplay } from \"../Formula/api\";\r\nimport KeyMap, { valueString } from \"../KeyMap\";\r\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\nimport ColorText from \"./ColoredText\";\r\nimport StatIcon from \"./StatIcon\";\r\nimport { data as dataNode } from '../Formula/utils'\r\nimport { Data } from \"../Formula/type\";\r\nimport { Groups } from \"@mui/icons-material\";\r\n\r\nexport default function FieldDisplay({ field, fieldContext, component }: { field: IFieldDisplay, fieldContext?: dataContextObj, component?: React.ElementType }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\r\n  if (!canShow) return null\r\n  if (\"node\" in field) {\r\n    // TODO: remove as Data\r\n    const node = fieldContext ? data.get(dataNode(field.node, { target: fieldContext.data.data[0] } as Data)) : data.get(field.node)\r\n    if (node.isEmpty) return null\r\n    if (oldData) {\r\n      const oldNode = fieldContext ? oldData.get(dataNode(field.node, { target: fieldContext.oldData!.data[0] } as Data)) : oldData.get(field.node)\r\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\r\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\r\n    }\r\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\r\n  }\r\n  return <BasicFieldDisplay field={field} component={component} />\r\n}\r\n\r\nfunction BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\r\n  const { data } = useContext(DataContext)\r\n  const v = evalIfFunc(field.value, data)\r\n  const variant = evalIfFunc(field.variant, data)\r\n  const text = field.text && <span>{field.text}</span>\r\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\r\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport function NodeFieldDisplay({ node, oldValue, suffix, component }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType }) {\r\n  if (node.isEmpty) return null\r\n\r\n  suffix = suffix && <span>{suffix}</span>\r\n  const icon = node.info.key && StatIcon[node.info.key]\r\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\r\n  const isTeamBuff = node.info.isTeamBuff\r\n  const fieldFormulaText = node.formula\r\n  let fieldVal = \"\" as Displayable\r\n  if (oldValue) {\r\n    const diff = node.value - oldValue\r\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\r\n  } else fieldVal = valueString(node.value, node.unit)\r\n  const formulaTextOverlay = !!node.formula && <BootstrapTooltip placement=\"top\" title={<Typography>{fieldFormulaText}</Typography>}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\r\n    <Typography sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >{fieldVal}{formulaTextOverlay}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));\r\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\r\n\r\ntype SolidColoredToggleButtonPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\r\n\r\n\r\nconst SolidColoredToggleButton = styled(ToggleButton, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\r\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"primary\", selectedColor = \"success\" }) => ({\r\n  '&': {\r\n    backgroundColor: theme.palette[baseColor].main,\r\n    color: theme.palette[baseColor].contrastText,\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: theme.palette[selectedColor].main,\r\n    color: theme.palette[selectedColor].contrastText,\r\n  },\r\n  '&.Mui-selected:hover': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n  '&.Mui-disabled': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected.Mui-disabled': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n}));\r\n\r\nexport default SolidColoredToggleButton","import { Box, ToggleButtonGroup } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\r\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport { uncoloredEleIcons } from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey | \"\") => void\r\n  value: ElementKey | \"\"\r\n}\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <ToggleButtonGroup exclusive onChange={cb} value={value || allElements} {...props}>\r\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} >\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{uncoloredEleIcons[ele]}</Box>\r\n    </SolidColoredToggleButton>)}\r\n  </ToggleButtonGroup>\r\n}\r\n","import { ToggleButton } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey | \"\") => void\r\n  value: WeaponTypeKey | \"\"\r\n}\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\r\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allWeaponTypeKeys} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}","import { Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\ntype Data = {\r\n  sheet: WeaponSheet,\r\n  addlText?: any,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\r\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\r\n    {addlText}\r\n  </Suspense>\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { createContext } from \"react\"\r\nimport CharacterSheet from \"./Data/Characters/CharacterSheet\"\r\nimport { UIData } from \"./Formula/uiData\"\r\nimport { ICachedCharacter } from \"./Types/character\"\r\nimport { CharacterKey } from \"./Types/consts\"\r\nimport { ICachedWeapon } from \"./Types/weapon\"\r\nimport WeaponSheet from \"./Data/Weapons/WeaponSheet\"\r\nimport { characterReducerAction } from \"./ReactHooks/useCharacterReducer\";\r\nexport type TeamData = Partial<Record<CharacterKey, {\r\n  target: UIData\r\n  buffs: Dict<CharacterKey, UIData>\r\n  character: ICachedCharacter\r\n  weapon: ICachedWeapon\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet,\r\n}>>\r\nexport type dataContextObj = {\r\n  character: ICachedCharacter\r\n  characterSheet: CharacterSheet\r\n  data: UIData\r\n  oldData?: UIData\r\n  mainStatAssumptionLevel: number\r\n  teamData: TeamData\r\n  characterDispatch: (action: characterReducerAction) => void\r\n}\r\n\r\n// If using this context without a Provider, then stuff will crash...\r\n// In theory, none of the components that uses this context should work without a provider...\r\nexport const DataContext = createContext({} as dataContextObj)\r\n","import ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport { Translate } from \"../../Components/Translate\";\r\nimport { mergeData } from \"../../Formula/api\";\r\nimport { Data } from \"../../Formula/type\";\r\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey } from \"../../Types/consts\";\r\nimport { DocumentSection } from \"../../Types/sheet\";\r\nimport { UIData } from \"../../Formula/uiData\"\r\nimport { input } from \"../../Formula\"\r\nimport SqBadge from \"../../Components/SqBadge\";\r\nimport IConditional from \"../../Types/IConditional\";\r\n\r\n// TODO: remove typecasting once all sheets populated\r\nconst artifactSheets = import(\".\").then(imp => imp.default)\r\n\r\nexport interface IArtifactSheet {\r\n  name: string, // only to stored the English name for OCR, otherwise, should come from localization pipeline\r\n  rarity: readonly ArtifactRarity[],\r\n  icons: Dict<SlotKey, string>,\r\n  setEffects: Dict<SetNum, SetEffectEntry>\r\n}\r\nexport interface SetEffectEntry {\r\n  document?: DocumentSection[],\r\n}\r\n\r\n\r\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\r\nconst allData = artifactSheets.then(as => mergeData(Object.values(as).map(s => s.data)))\r\nexport class ArtifactSheet {\r\n  readonly sheet: IArtifactSheet\r\n  readonly key: ArtifactSetKey\r\n  readonly data: Data\r\n  constructor(setKey: ArtifactSetKey, sheet: IArtifactSheet, data: Data) {\r\n    this.sheet = sheet\r\n    this.key = setKey\r\n    this.data = data\r\n  }\r\n\r\n  get name() { return tr(this.key, \"setName\") }\r\n  get defIconSrc() {\r\n    const slotKey = this.slots[0]\r\n    if (!this.slotIcons[slotKey]) return undefined\r\n    return this.slotIcons[slotKey]\r\n  }\r\n  get defIcon() { return <ImgIcon src={this.defIconSrc} sx={{ fontSize: \"1.5em\" }} /> }\r\n  /**\r\n   * @deprecated use src directly\r\n   */\r\n  get nameWithIcon() {\r\n    const slotKey = this.slots[0]\r\n    return <span><ImgIcon src={this.slotIcons[slotKey]} /> {tr(this.key, \"setName\")}</span>\r\n  }\r\n\r\n  //This is only for OCR, because we only scan in english right now.\r\n  get nameRaw(): string { return this.sheet.name }\r\n  get rarity(): readonly ArtifactRarity[] { return this.sheet.rarity }\r\n  get slots(): SlotKey[] {\r\n    switch (this.key) {\r\n      case \"PrayersForDestiny\":\r\n      case \"PrayersForIllumination\":\r\n      case \"PrayersForWisdom\":\r\n      case \"PrayersToSpringtime\": return [\"circlet\"]\r\n      default: return [...allSlotKeys]\r\n    }\r\n  }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.sheet.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.sheet.setEffects }\r\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\r\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\r\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\r\n  setEffectDocument = (setNum: SetNum) => this.sheet.setEffects[setNum]?.document\r\n\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set ? artifactSheets.then(a => a[set]) : undefined }\r\n  static get getAll() { return artifactSheets }\r\n  static get getAllData() { return allData }\r\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<ArtifactRarity, ArtifactSetKey[]> {\r\n    const grouped: Dict<ArtifactRarity, ArtifactSetKey[]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as ArtifactRarity\r\n      if (grouped[rarity]) grouped[rarity]!.push(key)\r\n      else grouped[rarity] = [key]\r\n    })\r\n    return grouped\r\n  }\r\n\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, data: UIData) {\r\n    const artifactSetEffect: Partial<Record<ArtifactSetKey, SetNum[]>> = {}\r\n    Object.entries(sheets).forEach(([setKey, sheet]) => {\r\n      const setNums = (Object.keys(sheet.setEffects).map(k => parseInt(k)) as SetNum[]).filter(sn => sheet.hasEnough(sn, data))\r\n      if (setNums.length) artifactSetEffect[setKey] = setNums\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n  hasEnough = (setNum: SetNum, data: UIData) => (data.get(input.artSet[this.key]).value ?? 0) >= setNum\r\n}\r\nexport const conditionalHeader = (tr: (string) => Displayable, img: string): IConditional[\"header\"] => {\r\n  return {\r\n    title: tr(\"setName\"),\r\n    icon: <ImgIcon size={2} sx={{ m: -1 }} src={img} />,\r\n    action: <SqBadge color=\"success\">4-set</SqBadge>\r\n  }\r\n}\r\n","import StatIcon from \"../Components/StatIcon\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { tally } from \"../Formula\";\r\nimport { inferInfoMut } from \"../Formula/api\";\r\nimport { UIData } from \"../Formula/uiData\";\r\nimport { equal, greaterEq, min, percent, sum } from \"../Formula/utils\";\r\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\r\nimport { DocumentSection } from \"../Types/sheet\";\r\nimport { objectKeyValueMap } from \"../Util/Util\";\r\nimport { condReadNode, sgt, st } from \"./SheetUtil\";\r\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\r\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\r\n\r\ntype IResonance = {\r\n  name: Displayable,\r\n  desc: Displayable,\r\n  icon: Displayable,\r\n  canShow: (data: UIData) => boolean\r\n  sections: DocumentSection[]\r\n}\r\n\r\n// Protective Canopy\r\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`,\r\ngreaterEq(sum(...allElementsWithPhy.map(i => min(1, tally[i]))), 4, percent(0.15))])\r\n\r\nconst protectiveCanopy: IResonance = {\r\n  name: tr(\"ProtectiveCanopy.name\"),\r\n  desc: tr(\"ProtectiveCanopy.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\r\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: Object.values(pcNodes).map(node => ({ node }))\r\n  }]\r\n}\r\n\r\n// Fervent Flames\r\nconst ffNode = greaterEq(tally.pyro, 2, percent(0.25))\r\nconst ferventFlames: IResonance = {\r\n  name: tr(\"FerventFlames.name\"),\r\n  desc: tr(\"FerventFlames.desc\"),\r\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.cryo\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: ffNode\r\n    }]\r\n  }]\r\n}\r\n\r\n// Soothing Waters\r\nconst swNode = greaterEq(tally.hydro, 2, percent(0.25))\r\nconst soothingWaters: IResonance = {\r\n  name: tr(\"SoothingWater.name\"),\r\n  desc: tr(\"SoothingWater.desc\"),\r\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.pyro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: swNode\r\n    }]\r\n  }]\r\n}\r\n\r\n//ShatteringIce\r\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\r\nconst condSI = condReadNode(condSIPath)\r\nconst siNode = greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15)))\r\nconst shatteringIce: IResonance = {\r\n  name: tr(\"ShatteringIce.name\"),\r\n  desc: tr(\"ShatteringIce.desc\"),\r\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.electro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }],\r\n    conditional: {\r\n      teamBuff: true,\r\n      path: condSIPath,\r\n      value: condSI,\r\n      name: trm(\"ShatteringIce.cond\"),\r\n      header: {\r\n        title: tr(\"ShatteringIce.name\"),\r\n        icon: StatIcon.cryo,\r\n      },\r\n      states: {\r\n        on: {\r\n          fields: [{\r\n            node: siNode\r\n          }]\r\n        }\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// High Voltage\r\nconst highVoltage: IResonance = {\r\n  name: tr(\"HighVoltage.name\"),\r\n  desc: tr(\"HighVoltage.desc\"),\r\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.hydro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}\r\n\r\n// Impetuous Winds\r\nconst iwNodeStam = greaterEq(tally.anemo, 2, percent(-0.15))\r\nconst iwNodeMove = greaterEq(tally.anemo, 2, percent(0.1))\r\nconst iwNodeCD = greaterEq(tally.anemo, 2, percent(-0.05))\r\nconst impetuousWinds: IResonance = {\r\n  name: tr(\"ImpetuousWinds.name\"),\r\n  desc: tr(\"ImpetuousWinds.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      node: iwNodeStam\r\n    }, {\r\n      node: iwNodeMove\r\n    }, {\r\n      node: iwNodeCD\r\n    }]\r\n  }]\r\n}\r\n\r\n// Enduring Rock\r\nconst condERPath = [\"resonance\", \"EnduringRock\"]\r\nconst condER = condReadNode(condERPath)\r\nconst erNodeshield_ = greaterEq(tally.geo, 2, percent(0.15))\r\nconst erNodeDMG_ = greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15)))\r\nconst erNodeRes_ = greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2)))\r\nconst enduringRock: IResonance = {\r\n  name: tr(\"EnduringRock.name\"),\r\n  desc: tr(\"EnduringRock.desc\"),\r\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"EnduringRock.desc\"),\r\n    fields: [{\r\n      node: erNodeshield_\r\n    }],\r\n    conditional: {\r\n      teamBuff: true,\r\n      path: condERPath,\r\n      value: condER,\r\n      header: {\r\n        title: tr(\"EnduringRock.name\"),\r\n        icon: StatIcon.geo,\r\n      },\r\n      name: st(\"protectedByShield\"),\r\n      states: {\r\n        on: {\r\n          fields: [{\r\n            node: erNodeDMG_\r\n          }, {\r\n            node: erNodeRes_\r\n          }, {\r\n            text: sgt(\"duration\"),\r\n            value: 15,\r\n            unit: \"s\"\r\n          }]\r\n        }\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\nexport const resonanceSheets: IResonance[] = [\r\n  protectiveCanopy,\r\n  ferventFlames,\r\n  soothingWaters,\r\n  shatteringIce,\r\n  highVoltage,\r\n  impetuousWinds,\r\n  enduringRock,\r\n]\r\n\r\nexport const resonanceData = inferInfoMut({\r\n  premod: {\r\n    ...pcNodes,\r\n    atk_: ffNode,\r\n    incHeal_: swNode,\r\n    staminaDec_: iwNodeStam,\r\n    moveSPD_: iwNodeMove,\r\n    cdRed_: iwNodeCD,\r\n    shield_: erNodeshield_,\r\n    all_dmg_: erNodeDMG_,\r\n    geo_enemyRes_: erNodeRes_,\r\n  },\r\n  total: {\r\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\r\n    critRate_: siNode\r\n  }\r\n})\r\n","import { Translate } from \"../Components/Translate\"\r\nimport { ReadNode } from \"../Formula/type\"\r\nimport { customStringRead } from \"../Formula/utils\"\r\nimport { ArtifactSetKey, CharacterKey, WeaponKey } from \"../Types/consts\"\r\n\r\nexport const st = (strKey: string, values?: object) => <Translate ns=\"sheet\" key18={strKey} values={values} />\r\nexport const sgt = (strKey: string) => <Translate ns=\"sheet_gen\" key18={strKey} />\r\n\r\nexport const condReadNode = (path: string[]) => customStringRead([\"conditional\", ...path])\r\nexport function cond(key: CharacterKey | WeaponKey | ArtifactSetKey, subKey: string): [path: string[], node: ReadNode<string>] {\r\n  const path = [key, subKey]\r\n  const node = condReadNode(path)\r\n  return [path, node]\r\n}\r\n\r\ntype Translated = [tr: ((i18key: string) => Displayable), tran: ((i18key: string, values?: object) => Displayable)]\r\nexport function trans(typeKey: \"char\", key: CharacterKey): Translated\r\nexport function trans(typeKey: \"weapon\", key: WeaponKey): Translated\r\nexport function trans(typeKey: \"artifact\", key: ArtifactSetKey): Translated\r\nexport function trans(typeKey: \"char\" | \"weapon\" | \"artifact\", key: CharacterKey | WeaponKey | ArtifactSetKey): Translated {\r\n  return [\r\n    (strKey: string) => <Translate ns={`${typeKey}_${key}_gen`} key18={strKey} />,\r\n    (strKey: string, values?: object) => <Translate ns={`${typeKey}_${key}`} key18={strKey} values={values} />\r\n  ]\r\n}\r\n","import { Translate } from '../../Components/Translate';\r\nimport { Data } from '../../Formula/type';\r\nimport { Rarity, WeaponKey, WeaponTypeKey } from '../../Types/consts';\r\nimport { DocumentSection } from '../../Types/sheet';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, lowRarityMilestoneLevels, milestoneLevels } from '../LevelData';\r\nimport type { WeaponData } from 'pipeline';\r\nimport IConditional from '../../Types/IConditional';\r\nimport ImgIcon from '../../Components/Image/ImgIcon';\r\nimport { input } from '../../Formula';\r\nimport SqBadge from '../../Components/SqBadge';\r\nconst weaponSheets = import('.').then(imp => imp.default)\r\n\r\nexport interface IWeaponSheet {\r\n  icon: string,\r\n  iconAwaken: string,\r\n  document: DocumentSection[],\r\n}\r\n\r\nexport default class WeaponSheet {\r\n  readonly key: WeaponKey;\r\n  readonly sheet: IWeaponSheet;\r\n  readonly data: Data;\r\n  readonly rarity: Rarity;\r\n  readonly weaponType: WeaponTypeKey;\r\n  constructor(key: WeaponKey, weaponSheet: IWeaponSheet, weaponData: WeaponData, data: Data) {\r\n    this.rarity = weaponData.rarity\r\n    this.weaponType = weaponData.weaponType\r\n    this.key = key\r\n    this.sheet = weaponSheet\r\n    this.data = data\r\n  }\r\n  static get = (weaponKey: WeaponKey | \"\"): Promise<WeaponSheet> | undefined => weaponKey ? weaponSheets.then(w => w[weaponKey]) : undefined\r\n  static get getAll() { return weaponSheets }\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICachedWeapon): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  get hasRefinement() { return this.rarity > 2 }\r\n  get passiveName() { return this.hasRefinement ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (refineIndex: number) => this.hasRefinement ? this.tr(`passiveDescription.${refineIndex}`) : \"\"\r\n  get img() { return this.sheet.icon }\r\n  get imgAwaken() { return this.sheet.iconAwaken }\r\n  get document() { return this.sheet.document }\r\n  get milestoneLevels(): Array<[number, number]> {\r\n    if (this.hasRefinement) return milestoneLevels as any\r\n    else return lowRarityMilestoneLevels as any\r\n  }\r\n  ambiguousLevel(level: number) {\r\n    if (this.hasRefinement) return ambiguousLevel(level)\r\n    else return ambiguousLevelLow(level)\r\n  }\r\n}\r\nexport const conditionalHeader = (tr: (string) => Displayable, img: string, imgAwaken: string, action?: Displayable): IConditional[\"header\"] => ({\r\n  title: tr(`passiveName`),\r\n  icon: data => <ImgIcon size={2} sx={{ m: -1 }} src={data.get(input.weapon.asc).value < 2 ? img : imgAwaken} />,\r\n  action: action && <SqBadge color=\"success\">{action}</SqBadge>,\r\n})\r\n\r\nexport const conditionaldesc = (tr: (string) => Displayable) =>\r\n  data => tr(`passiveDescription.${data.get(input.weapon.refineIndex).value}`)\r\n","import { Box, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense } from 'react';\r\nimport Assets from '../Assets/Assets';\r\nimport BootstrapTooltip from '../Components/BootstrapTooltip';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport StatIcon from '../Components/StatIcon';\r\nimport CharacterSheet from '../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../Data/LevelData';\r\nimport useCharacter from '../ReactHooks/useCharacter';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { CharacterKey } from '../Types/consts';\r\n\r\nexport default function CharacterCardPico({ characterKey = \"\", index }: { characterKey: CharacterKey | \"\", index: number }) {\r\n  const teammateSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const character = useCharacter(characterKey)\r\n  if (teammateSheet && character) {\r\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\r\n    </Suspense>\r\n\r\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <BootstrapTooltip placement=\"top\" title={title}>\r\n        <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\r\n          <Box\r\n            component=\"img\"\r\n            src={teammateSheet.thumbImgSide}\r\n            maxWidth=\"100%\"\r\n            maxHeight=\"100%\"\r\n            sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\r\n          />\r\n        </Box>\r\n      </BootstrapTooltip>\r\n      <Typography variant='subtitle1' sx={{ position: \"absolute\", lineHeight: 1, pointerEvents: \"none\" }}>\r\n        <SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge>\r\n      </Typography>\r\n      <Typography variant='subtitle1' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, pointerEvents: \"none\" }}>\r\n        <SqBadge color=\"secondary\" >C{character.constellation}</SqBadge>\r\n      </Typography>\r\n    </CardDark>\r\n  } else {\r\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\r\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\r\n    </CardDark>\r\n  }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database._getChar(characterKey))\r\n  useEffect(() => updateCharacter(database._getChar(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.followChar(characterKey, updateCharacter) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { useNavigate, useMatch } from \"react-router\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { initialCharacter } from \"../Util/CharacterUtil\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { defaultInitialWeapon } from \"../Util/WeaponUtil\";\r\n\r\n/**\r\n * Basically a history hook to go to the dedicated character page. Will create the character if it doesn't exist.\r\n * @returns\r\n */\r\nexport default function useCharSelectionCallback() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const navigate = useNavigate()\r\n  // Used to maintain the previous tab, if there is one\r\n  let { params: { tab = \"\" } } = useMatch({ path: \"/character/:charKey/:tab\", end: false }) ?? { params: { tab: \"\" } }\r\n  const cb = useCallback(\r\n    async (characterKey: CharacterKey) => {\r\n      const character = database._getChar(characterKey)\r\n      let navTab = tab\r\n      // Create a new character + weapon, with linking if char isnt in db.\r\n      if (!character) {\r\n        const newChar = initialCharacter(characterKey)\r\n        database.updateChar(newChar)\r\n        const characterSheet = await CharacterSheet.get(characterKey)\r\n        if (!characterSheet) return\r\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\r\n        const weaponId = database.createWeapon(weapon)\r\n        database.setWeaponLocation(weaponId, characterKey)\r\n        // If we are navigating to a new character,\r\n        // redirect to Overview, regardless of previous tab.\r\n        // Trying to enforce a certain UI flow when building new characters\r\n        navTab = \"\"\r\n      }\r\n      navigate(`/character/${characterKey}/${navTab}`)\r\n    },\r\n    [navigate, database, tab],\r\n  )\r\n  return cb\r\n}\r\n","import { initialBuildSettings } from \"../PageCharacter/Tabs/TabBuild/BuildSetting\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { allSlotKeys, CharacterKey } from \"../Types/consts\"\r\nimport { objectKeyMap } from \"./Util\"\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key, // the game character this is based off\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: \"\",\r\n    equippedArtifacts: objectKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    conditional: {},\r\n    bonusStats: {},\r\n    enemyOverride: {},\r\n    buildSettings: initialBuildSettings(),\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n    team: [\"\", \"\", \"\"],\r\n    compareData: false,\r\n    favorite: false,\r\n  }\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { deepClone } from \"../Util/Util\";\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerenemyOverrideAction = {\r\n  type: \"enemyOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"enemyOverride\": {\r\n        const character = database._getChar(characterKey)!\r\n        const enemyOverride = character.enemyOverride\r\n        const { statKey, value } = action\r\n        if (enemyOverride[statKey] === value) break\r\n        database.updateChar({ ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\r\n        break\r\n      }\r\n      case \"editStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey, value } = action\r\n\r\n        const bonusStats = deepClone(character.bonusStats)\r\n\r\n        if (bonusStats[statKey] === value) break\r\n        if (!value) delete bonusStats[statKey]\r\n        else bonusStats[statKey] = value\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { team } = character\r\n\r\n        const { index, charKey: newCharKey } = action\r\n        const oldCharKey = team[index]\r\n        team[index] = newCharKey\r\n\r\n        // move the old char to \"inventory\"\r\n        if (oldCharKey) {\r\n          const oldChar = database._getChar(oldCharKey)\r\n          if (oldChar) database.updateChar({ ...oldChar, team: [\"\", \"\", \"\"] })\r\n        }\r\n\r\n        // unequip new char from its old teammates\r\n        if (newCharKey) {\r\n          const newChar = database._getChar(newCharKey)\r\n          if (newChar) {\r\n            newChar.team.forEach(t => {\r\n              if (!t) return\r\n              const tChar = database._getChar(t)\r\n              tChar && database.updateChar({ ...tChar, team: tChar.team.map(c => c === newCharKey ? \"\" : c) as ICachedCharacter[\"team\"] })\r\n            })\r\n          }\r\n        }\r\n\r\n        // equip new char to new teammates\r\n        team.forEach((t, tind) => {\r\n          if (!t) return\r\n          const newChar = database._getChar(t)\r\n          if (newChar) database.updateChar({ ...newChar, team: [characterKey, ...team].filter((_, i) => i !== tind + 1) as ICachedCharacter[\"team\"] })\r\n        })\r\n\r\n        // update src character\r\n        database.updateChar({ ...character, team })\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\r\n  }, [characterKey, database])\r\n\r\n}\r\n","import { useContext, useEffect, useMemo } from \"react\";\r\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { resonanceData } from \"../Data/Resonance\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\r\nimport { TeamData } from \"../DataContext\";\r\nimport { common } from \"../Formula\";\r\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, uiDataForTeam } from \"../Formula/api\";\r\nimport { Data } from \"../Formula/type\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectMap } from \"../Util/Util\";\r\nimport useForceUpdate from \"./useForceUpdate\";\r\nimport usePromise from \"./usePromise\";\r\n\r\ntype TeamDataBundle = {\r\n  team: CharacterKey[],\r\n  teamData: Dict<CharacterKey, Data[]>\r\n  teamBundle: Dict<CharacterKey, CharBundle>\r\n}\r\n\r\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[]): TeamData | undefined {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n  const teamDataBundle = usePromise(getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt), [dbDirty, characterKey, database, mainStatAssumptionLevel, overrideArt])\r\n\r\n  const { team = [], teamData, teamBundle } = teamDataBundle ?? {}\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.followChar(characterKey, setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.followAnyArt(setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  const [t1, t2, t3, t4] = team\r\n  useEffect(() =>\r\n    t1 ? database.followChar(t1, setDbDirty) : undefined,\r\n    [t1, setDbDirty, database])\r\n  useEffect(() =>\r\n    t2 ? database.followChar(t2, setDbDirty) : undefined,\r\n    [t2, setDbDirty, database])\r\n  useEffect(() =>\r\n    t3 ? database.followChar(t3, setDbDirty) : undefined,\r\n    [t3, setDbDirty, database])\r\n  useEffect(() =>\r\n    t4 ? database.followChar(t4, setDbDirty) : undefined,\r\n    [t4, setDbDirty, database])\r\n\r\n  const calcData = useMemo(() => {\r\n    return teamData && uiDataForTeam(teamData, characterKey as CharacterKey)\r\n  }, [teamData, characterKey])\r\n  const data = useMemo(() => {\r\n    if (!calcData || !teamBundle) return\r\n    return objectMap(calcData, (obj, ck) => {\r\n      const { data: _, ...rest } = teamBundle[ck]!\r\n      return { ...obj, ...rest }\r\n    })\r\n  }, [calcData, teamBundle])\r\n\r\n  return data\r\n}\r\n\r\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[]):\r\n  Promise<TeamDataBundle | undefined> {\r\n  if (!characterKey) return\r\n  const char1DataBundle = await getCharDataBundle(database, characterKey, mainStatAssumptionLevel, overrideArt)\r\n  if (!char1DataBundle) return\r\n  const team: CharacterKey[] = [characterKey]\r\n  const teamBundle = { [characterKey]: char1DataBundle }\r\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\r\n\r\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\r\n    if (!ck) return\r\n    const databundle = await getCharDataBundle(database, ck)\r\n    if (!databundle) return\r\n    team.push(ck)\r\n    teamBundle[ck] = databundle\r\n    teamData[ck] = databundle.data\r\n  }))\r\n\r\n  return { team, teamData, teamBundle }\r\n}\r\ntype CharBundle = {\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  data: Data[]\r\n}\r\nasync function getCharDataBundle(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[])\r\n  : Promise<CharBundle | undefined> {\r\n  if (!characterKey) return\r\n  const character = database._getChar(characterKey)\r\n  if (!character) return\r\n  const weapon = database._getWeapon(character.equippedWeapon)\r\n  if (!weapon) return\r\n  const characterSheet = await CharacterSheet.get(characterKey)\r\n  const weaponSheet = await WeaponSheet.get(weapon.key)\r\n  const artifactSheetsData = await ArtifactSheet.getAllData\r\n  if (!characterSheet || !weaponSheet || !artifactSheetsData) return\r\n  const artifacts = (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database._getArt(a))).filter(a => a) as ICachedArtifact[]\r\n  const data = [\r\n    ...artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)),\r\n    dataObjForCharacter(character),\r\n    characterSheet.getData(character.elementKey),\r\n    dataObjForWeapon(weapon),\r\n    weaponSheet.data,\r\n    artifactSheetsData,\r\n    common, // NEED TO PUT THIS AT THE END\r\n    resonanceData,\r\n  ]\r\n  return { character, weapon, characterSheet, weaponSheet, data }\r\n}\r\n"],"names":["ArtifactSetSlotTooltip","slotKey","sheet","children","fallback","variant","width","title","Suspense","name","artifactSlotIcon","getSlotName","placement","disableInteractive","BootstrapTooltip","styled","className","props","arrow","classes","popper","theme","tooltipClasses","color","palette","common","black","backgroundColor","maxWidth","ArtifactCardPico","art","artifactObj","key","artifactSheet","usePromise","setKey","ArtifactSheet","Grid","item","xs","CardDark","sx","display","flexDirection","height","Box","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","mainStatVal","levelVariant","Math","floor","max","slotIcons","maxHeight","Typography","lineHeight","pointerEvents","SqBadge","bottom","right","cacheValueString","KeyMap","p","StatIcon","WeaponCardPico","weaponId","weapon","useContext","DatabaseContext","database","_getWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","tooltipAddl","WeaponStatPico","node","get","input","alignContent","WeaponNameTooltip","addlText","img","mt","hasRefinement","refinement","info","val","valueString","value","unit","undefined","WeaponFullCard","flexShrink","flexGrow","gutterBottom","gap","WeaponStat","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","footer","isTeammateCard","teamDataContext","DataContext","teamData","useTeamData","character","characterSheet","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterDispatch","useCharacterReducer","dataContextObj","mainStatAssumptionLevel","Skeleton","minHeight","CardLight","zIndex","IconButton","event","favorite","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","Header","CardContent","Artifacts","container","columns","spacing","equippedWeapon","range","map","i","CharacterCardPico","team","index","Stats","characterEle","characterLevel","constellation","ascension","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","py","pr","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","stars","colored","artifacts","allSlotKeys","k","_getArt","id","direction","Object","values","getDisplay","basic","n","alignItems","defaultSortKeys","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","sortKeys","useState","sortBy","setsortBy","ascending","setascending","elementalFilter","setelementalFilter","weaponFilter","setweaponFilter","characterSheets","CharacterSheet","useForceUpdate","favesDirty","setFavesDirty","useEffect","followAnyChar","sortConfigs","characterSortConfigs","filterConfigs","characterFilterConfigs","ownedCharacterKeyList","Set","allCharacterKeys","cKey","_getChar","characterKeyList","filterFunction","element","weaponType","sort","sortFunction","concat","open","onClose","onChange","onChangeAsc","md","CharacterBtn","pl","elementKey","weaponTypeKey","falseWrapper","FieldDisplay","field","fieldContext","oldData","canShow","dataNode","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","v","evalIfFunc","text","justifyContent","toFixed","fixed","icon","fieldText","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","formulaTextOverlay","cursor","faQuestionCircle","FieldDisplayList","List","borderRadius","shape","overflow","margin","contentDark","main","contentDarker","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","contrastText","dark","ElementToggle","cb","e","newVal","ToggleButtonGroup","exclusive","allElements","ele","fontSize","uncoloredEleIcons","WeaponToggle","allWeaponTypeKeys","wt","createContext","artifactSheets","then","imp","default","tr","strKey","ns","key18","allData","as","mergeData","s","getSlotDesc","setEffectDesc","setNum","setEffectDocument","setEffects","document","hasEnough","this","slots","defIconSrc","icons","set","a","sheets","grouped","entries","forEach","push","artifactSetEffect","setNums","keys","parseInt","sn","length","conditionalHeader","m","action","pcNodes","objectKeyValueMap","allElementsWithPhy","greaterEq","sum","min","tally","percent","protectiveCanopy","desc","sections","teamBuff","fields","ffNode","ferventFlames","st","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","conditional","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","resonanceSheets","sgt","resonanceData","inferInfoMut","premod","atk_","incHeal_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","total","critRate_","customStringRead","cond","subKey","trans","typeKey","weaponSheets","weaponData","passiveDescription","refineIndex","iconAwaken","milestoneLevels","lowRarityMilestoneLevels","ambiguousLevel","ambiguousLevelLow","weaponKey","w","getWeaponsOfType","fromEntries","getLevelString","imgAwaken","conditionaldesc","teammateSheet","updateCharacter","followChar","useCharacter","thumbImgSide","transformOrigin","useCharSelectionCallback","navigate","useNavigate","useMatch","end","params","tab","navTab","newChar","hitMode","reactionMode","equippedArtifacts","objectKeyMap","bonusStats","enemyOverride","buildSettings","initialBuildSettings","talent","auto","skill","burst","infusionAura","compareData","updateChar","defaultInitialWeapon","createWeapon","setWeaponLocation","type","statKey","deepClone","newCharKey","charKey","oldCharKey","oldChar","t","tChar","c","tind","_","overrideArt","dbDirty","setDbDirty","teamDataBundle","getTeamData","teamBundle","followAnyArt","t1","t2","t3","t4","calcData","uiDataForTeam","objectMap","obj","ck","rest","getCharDataBundle","char1DataBundle","Promise","all","databundle","artifactSheetsData","dataObjForArtifact","dataObjForCharacter","getData"],"sourceRoot":""}