{"version":3,"sources":["Character/Character.ts","Artifact/ArtifactSheet.tsx","Character/CharacterSheet.ts","Util/FieldUtil.tsx","Data/ElementalData.ts","StatData.ts","Assets/Element_Anemo.png","Assets/Assets.ts","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.tsx","Conditional/Conditional.ts","Weapon/WeaponSheet.ts","Components/StatIcon.tsx","Formula.ts","Components/SlotIcon.ts","Data/ArtifactData.ts","Data/ArtifactLookupTable.ts","Artifact/Artifact.tsx","Data/WeaponData.ts","Weapon/Weapon.ts","StatConstants.ts","StatDependency.ts","Data/CharacterData.ts","Stat.tsx","Util/ReactUtil.ts"],"names":["Character","this","Error","characterKey","character","CharacterDatabase","get","Object","values","equippedArtifacts","forEach","artid","ArtifactDatabase","moveToNewLocation","remove","getElementalName","elementalKey","defVal","ElementalData","name","getlevelKeys","keys","LevelsData","getlevelTemplateName","levelKey","getLevelString","characterSheet","weaponSheet","levelOverride","getStatValueWithOverride","getLevel","getIndexFromlevelkey","indexOf","level","getAscension","asend","getTalentFieldValue","field","key","stats","evalIfFunc","hasOverride","statKey","baseStatOverrides","getBaseStatValue","characetSheet","specializeStat","value","Weapon","getWeaponMainStatValWithOverride","weapon","includes","characterStatBase","baseStat","equipArtifacts","artIds","artIdsOnCharacter","allSlotKeys","slotKey","artNotOnChar","location","artOnChar","notCharLoc","id","equipArtifactOnSlot","equipArtifactBuild","calculateBuild","artifactSheets","artifacts","mainStatAssumptionLevel","fromEntries","map","art","i","entries","initialStats","createInitialStats","calculateBuildwithArtifact","setToSlots","Artifact","artifactSetEffectsStats","ArtifactSheet","setEffectsStats","deepClone","mainStatKey","mainStatValue","numStars","Math","max","min","substats","substat","stat","Conditional","parseConditionalValues","artifact","conditionalValues","conditional","conditionalValue","setKey","setNumKey","parseInt","length","condStats","resolve","val","dependencies","GetDependencies","modifiers","PreprocessFormulas","formula","mergeStats","modifier","mkey","multiplier","undefined","hitMode","infusionAura","reactionMode","talentLevelKeys","constellation","ascension","statKeys","characterEle","elementKey","weaponType","weaponTypeKey","tlvl","allElements","eleKey","overrides","hasOwnProperty","specializedStatVal","specialStatKey","getTalentStatsAll","s","weaponSubKey","getWeaponSubstatKey","getWeaponSubstatValWithOverride","weaponCond","otherCond","artifactImport","then","imp","default","set","promiseSheets","allArtifactSets","sheets","data","rarity","pieces","icons","setEffects","conditionals","num","setNum","text","effects","grouped","sheet","push","allRarities","filter","charStats","artifactSetEffect","slots","charImport","charKey","CharacterSheet","loadCharacterSheet","allCharacterKeys","charSheet","isAutoElemental","isMelee","getTalent","talentKey","talent","getTalentStats","split","constell","talents","statsArr","talentStats","getDisplayStatKeys","basicKeys","transReactions","ElementToReactionKeys","Formula","formulas","charFormulas","canShow","genericAvgHit","reactions","startsWith","replace","cardImg","thumbImg","star","constellationName","Boolean","getAll","modifiersToFields","mStatKey","Stat","getStatName","variant","getStatVariant","reduce","accu","formulaText","printStat","toFixed","fixed","fixedUnit","unit","getStatUnit","statsToFields","statVals","statVal","className","StatIconEle","flat","fieldProcessing","physical","anemo","geo","electro","hydro","pyro","cryo","StatData","characterHP","pretty","const","characterDEF","characterATK","characterLevel","weaponATK","baseATK","hp","hp_","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","infusionSelf","autoBoost","skillBoost","burstBoost","Formulas","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","ele","hitElements","dendro","dependencyKeys","debug","constData","formulaList","tmp","constModifier","k","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","func","console","log","error","assign","hitMoves","move","moveName","clamp","eleName","opt","res","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","Assets","elements","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","icon","faStar","Stars","stars","colored","Array","_","processed","Promise","all","addConditional","weaponImport","setObj","setNumObj","source","findConditionals","obj","callback","condKey","states","state","maxStack","fields","layeredAssignment","objPathValue","stacks","stateKey","conditionalStats","objMultiplication","crawlObject","isArray","WeaponSheet","loadWeaponSheet","allWeaponKeys","build","img","passiveName","desc","passiveDescription","description","baseStats","weaponKey","getWeaponsOfType","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","formulaImport","src","f","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubstatsData","ArtifactSubstatsMinMax","getArrLastElement","ArtifactSlotsData","ArtifactSubstatLookupTable","errors","allSubstatRolls","total","index","substatRolls","getSubstatRolls","Set","roll","size","rolls","efficiency","getSubstatEfficiency","getStatNameWithPercent","find","some","minimum","rollInfo","low","floor","remaining","rollsRemaining","maximum","totalPossibleRolls","minimumMaxRolls","Infinity","tryAllSubstats","maxRolls","pop","isFinite","accurateValue","sum","cur","getArtifactEfficiency","currentEfficiency","maximumEfficiency","current","totalRolls","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","slotName","slotIcon","slotNameWithIcon","slotMainStats","setEffectsObjs","result","setEffect","setEffectObj","setStats","splitArtifactsBySlot","databaseObj","mainStatValues","numStar","endsWith","high","numUpgrades","maxSubstatValues","getSubstatKeys","substatCloseEnough","value1","value2","closeEnoughFloat","closeEnoughInt","ceil","getSubstatRollData","substatKey","substatValue","rollData","table","lookupValue","a","b","clampPercent","WeaponLevelKeys","LevelNameData","WeaponTypeData","getLevelName","getLevelIndex","getWeaponMainStatVal","main","getWeaponSubstatVal","sub","getWeaponTypeName","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","GetFormulaDependency","dependency","Proxy","target","prop","receiver","add","formulaKeyDependency","freeze","InsertDependencies","has","CharacterSpecializedStatKey","htmlStatsData","getStatNamePretty","getStatNameRaw","expand","getPrintableFormulaStatKeyList","statList","FormulaText","printFormula","modifierText","options","statName","statUnit","o","useForceUpdate","useState","stateDirty","update","useCallback","usePromise","promise","setRes","useEffect","pending"],"mappings":"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IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3rBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEhhD1K,IAAK,CACDqK,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxKI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDxK,IAAK,CACDmK,EAAG,CAAE,MAAO,CAAC,CAAC,IAAK,MAAO,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,KACxLI,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KACtqBC,EAAG,CAAE,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAEriDvK,KAAM,CACFkK,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,MAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,KAC/KI,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,IAAO,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,KAC3sBC,EAAG,CAAE,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG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K,MAAO,CAAC,CAAC,IAAK,IAAO,CAAC,CAAC,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAAQ,CAAC,CAAC,EAA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","file":"static/js/5.1ff08520.chunk.js","sourcesContent":["import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactSheet } from \"../Artifact/ArtifactSheet\";\r\nimport Conditional from \"../Conditional/Conditional\";\r\nimport { characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport ArtifactDatabase from \"../Database/ArtifactDatabase\";\r\nimport CharacterDatabase from \"../Database/CharacterDatabase\";\r\nimport { PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport { ICharacter } from \"../Types/character\";\r\nimport { allElements, allSlotKeys, CharacterKey, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport WeaponSheet from \"../Weapon/WeaponSheet\";\r\nimport CharacterSheet from \"./CharacterSheet\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = (): string[] => Object.keys(LevelsData)\r\n  static getlevelTemplateName = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getLevelString = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet) => {\r\n    const levelOverride = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"characterLevel\")\r\n    return Character.getLevel(character.levelKey) === levelOverride ? Character.getlevelTemplateName(character.levelKey) : `Lvl. ${levelOverride}`\r\n  }\r\n  static getIndexFromlevelkey = (levelKey) => Character.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  static getTalentFieldValue = (field, key, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return evalIfFunc(field?.[key], stats)\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getBaseStatValue = (character: ICharacter, characetSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    const { levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return characetSheet.specializeStat.key\r\n    if (statKey === \"specializedStatVal\") return characetSheet.specializeStat.value[Character.getIndexFromlevelkey(levelKey)]\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon, weaponSheet)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return Character.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    if (statKey in characetSheet.baseStat) return characetSheet.baseStat[statKey][Character.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n  static getStatValueWithOverride = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, statKey: string, defVal = 0) => {\r\n    if (Character.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return Character.getBaseStatValue(character, characterSheet, weaponSheet, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey: CharacterKey | \"\", artIds: StrictDict<SlotKey, string>) => {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    const artIdsOnCharacter = character.equippedArtifacts;\r\n\r\n    //swap, by slot\r\n    allSlotKeys.forEach(slotKey => {\r\n      const artNotOnChar = ArtifactDatabase.get(artIds[slotKey])\r\n      if (artNotOnChar?.location === characterKey) return; //it is already equipped\r\n      const artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      const notCharLoc = (artNotOnChar?.location ?? \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifactOnSlot(notCharLoc, slotKey, artOnChar?.id ?? \"\")\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char\r\n    CharacterDatabase.equipArtifactBuild(characterKey, artIds);\r\n  }\r\n  static remove(characterKey) {\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (!character) return\r\n    Object.values(character.equippedArtifacts).forEach(artid =>\r\n      ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet, artifactSheets, mainStatAssumptionLevel = 0) => {\r\n    let artifacts\r\n    if (character.artifacts) //from flex\r\n      artifacts = Object.fromEntries(character.artifacts.map((art, i) => [i, art]))\r\n    else if (character.equippedArtifacts)\r\n      artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    else return {}//probably won't happen. just in case.\r\n    const initialStats = Character.createInitialStats(character, characterSheet, weaponSheet)\r\n    initialStats.mainStatAssumptionLevel = mainStatAssumptionLevel\r\n    return Character.calculateBuildwithArtifact(initialStats, artifacts, artifactSheets)\r\n  }\r\n\r\n  static calculateBuildwithArtifact = (initialStats, artifacts, artifactSheets) => {\r\n    const setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = ArtifactSheet.setEffectsStats(artifactSheets, initialStats, setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach((art: any) => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.mainStatValue(art.mainStatKey, art.numStars, Math.max(Math.min(stats.mainStatAssumptionLevel, art.numStars * 4), art.level))\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.value)\r\n    //setEffects conditionals\r\n    Conditional.parseConditionalValues({ artifact: stats?.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      if (parseInt(setNumKey) > (setToSlots?.[setKey]?.length ?? 0)) return\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    stats.equippedArtifacts = Object.fromEntries(Object.entries(artifacts).map(([key, val]: any) => [key, val?.id]))\r\n    stats.setToSlots = setToSlots\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return stats\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]: any) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of (Object.entries(val) as any)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of (Object.entries(modifier) as any))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else {\r\n      if (initialStats[key] === undefined) initialStats[key] = val\r\n      else if (typeof initialStats[key] === \"number\") initialStats[key] += val\r\n    }\r\n  })\r\n\r\n  static createInitialStats = (character: ICharacter, characterSheet: CharacterSheet, weaponSheet: WeaponSheet): ICalculatedStats => {\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, infusionAura, reactionMode, talentLevelKeys, constellation, equippedArtifacts, conditionalValues = {}, weapon = { key: \"\" } } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, Character.getStatValueWithOverride(character, characterSheet, weaponSheet, key)]))\r\n    initialStats.characterEle = characterSheet.elementKey;\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.infusionAura = infusionAura\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.conditionalValues = conditionalValues\r\n    initialStats.weaponType = characterSheet.weaponTypeKey\r\n    initialStats.tlvl = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    initialStats.weapon = weapon\r\n    initialStats.equippedArtifacts = equippedArtifacts;\r\n\r\n\r\n    //enemy stuff\r\n    [\"physical\", ...allElements].forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]: any) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, characterSheet, weaponSheet, \"specializedStatKey\")\r\n    Character.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n    //add stats from all talents\r\n    characterSheet.getTalentStatsAll(initialStats as ICalculatedStats).forEach(s => Character.mergeStats(initialStats, s))\r\n\r\n    //add levelBoosts, from Talent stats.\r\n    for (const key in initialStats.tlvl)\r\n      initialStats.tlvl[key] += initialStats[`${key}Boost`] ?? 0\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubstatKey(weaponSheet)\r\n    if (weaponSubKey) Character.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubstatValWithOverride(character?.weapon, weaponSheet) })\r\n    Character.mergeStats(initialStats, weaponSheet.stats(initialStats as ICalculatedStats))\r\n\r\n\r\n    //Handle conditionals, without artifact, since the pipeline for that comes later.\r\n    const { artifact: artifactCond, weapon: weaponCond, ...otherCond } = conditionalValues\r\n\r\n    //handle conditionals. only the conditional applicable to the equipped weapon is parsed.\r\n    Conditional.parseConditionalValues({ ...weapon.key && { weapon: { [weapon.key]: weaponCond?.[weapon.key] } }, ...otherCond }, (conditional, conditionalValue, keys) => {\r\n      const { stats: condStats } = Conditional.resolve(conditional, initialStats, conditionalValue)\r\n      Character.mergeStats(initialStats, condStats)\r\n    })\r\n    return initialStats as ICalculatedStats\r\n  }\r\n}","import { IArtifactSheet, SetEffectEntry, StatArr, StatDict } from \"../Types/artifact\";\r\nimport { allArtifactSets, allRarities, ArtifactSetKey, Rarity, SetNum, SlotKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { IConditionals } from \"../Types/IConditional\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const artifactImport = import(\"../Data/Artifacts\").then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([set, value]) =>\r\n    [set, new ArtifactSheet(value)])) as StrictDict<ArtifactSetKey, ArtifactSheet>)\r\nconst promiseSheets = Object.fromEntries(allArtifactSets.map(set =>\r\n  [set, artifactImport.then(sheets => sheets[set])])) as StrictDict<ArtifactSetKey, Promise<ArtifactSheet>>\r\n\r\nexport class ArtifactSheet {\r\n  readonly data: IArtifactSheet\r\n  constructor(data: IArtifactSheet) { this.data = data }\r\n\r\n  get name(): string { return this.data.name }\r\n  get rarity(): readonly Rarity[] { return this.data.rarity }\r\n  get slotNames(): Dict<SlotKey, string> { return this.data.pieces }\r\n  get slotIcons(): Dict<SlotKey, string> { return this.data.icons }\r\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.data.setEffects }\r\n  get conditionals(): IConditionals | undefined { return this.data.conditionals }\r\n  setNumStats(num: SetNum, stats: ICalculatedStats): StatDict {\r\n    return deepClone(evalIfFunc(this.setEffects[num]?.stats, stats) || {})\r\n  }\r\n  setEffectTexts(setNum: SetNum, stats: ICalculatedStats): Displayable {\r\n    let text = this.setEffects[setNum]?.text\r\n    return evalIfFunc(text ?? \"\", stats)\r\n  }\r\n  setEffectConditionals(setNum: SetNum, stats: ICalculatedStats) {\r\n    const effects = this.setEffects[setNum]\r\n    if (effects?.conditional || effects?.conditionals) {\r\n      return {\r\n        ...effects?.conditional && { default: effects?.conditional },\r\n        ...effects?.conditionals && effects?.conditionals\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  static getAll() { return artifactImport }\r\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set && promiseSheets[set] }\r\n\r\n  static namesByMaxRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): [Rarity, [ArtifactSetKey, string][]][] {\r\n    const grouped: Dict<Rarity, [ArtifactSetKey, string][]> = {}\r\n    Object.entries(sheets).forEach(([key, sheet]) => {\r\n      const rarity = Math.max(...sheet.rarity) as Rarity\r\n      if (grouped[rarity]) grouped[rarity]!.push([key, sheet.name])\r\n      else grouped[rarity] = [[key, sheet.name]]\r\n    })\r\n    return allRarities.map(rarity => [rarity, grouped[rarity] ?? []] as [Rarity, [ArtifactSetKey, string][]]).filter(([, group]) => group.length)\r\n  }\r\n  static setsWithMaxRarity(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, rarity: Rarity): [ArtifactSetKey, ArtifactSheet][] {\r\n    return Object.entries(sheets).filter(([, sheet]) => Math.max(...sheet.rarity) === rarity)\r\n  }\r\n  static setEffectsStats(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, charStats: ICalculatedStats, setToSlots: Dict<ArtifactSetKey, SlotKey[]>): StatArr {\r\n    let artifactSetEffect: StatArr = []\r\n    Object.entries(setToSlots).forEach(([set, slots]) =>\r\n      Object.entries(sheets[set]?.setEffects ?? {}).forEach(([num, value]) =>\r\n        parseInt(num) <= slots.length && Object.entries(evalIfFunc(value.stats, charStats) ?? {}).forEach(([key, value]) =>\r\n          artifactSetEffect.push({ key, value }))))\r\n    return artifactSetEffect\r\n  }\r\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, setToSlots: Dict<ArtifactSetKey, SlotKey[]>) {\r\n    let artifactSetEffect: Dict<ArtifactSetKey, SetNum[]> = {}\r\n    Object.entries(setToSlots).forEach(([set, slots]) => {\r\n      let setNum = Object.keys(sheets[set]?.setEffects ?? {})\r\n        .map(setNum => parseInt(setNum) as SetNum)\r\n        .filter(setNum => setNum <= slots.length)\r\n      if (setNum.length)\r\n        artifactSetEffect[set] = setNum\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n}","import Formula from \"../Formula\";\r\nimport { ElementToReactionKeys } from \"../StatData\";\r\nimport { ICharacterSheet } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport ICalculatedStats from \"../Types/ICalculatedStats\";\r\nimport { deepClone, evalIfFunc } from \"../Util/Util\";\r\n\r\nexport const charImport = import('../Data/Characters').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new CharacterSheet(value)])) as unknown as StrictDict<CharacterKey, CharacterSheet>)\r\n\r\nconst loadCharacterSheet = Object.fromEntries(allCharacterKeys.map(set =>\r\n  [set, charImport.then(sheets => sheets[set])])) as StrictDict<CharacterKey, Promise<CharacterSheet>>\r\n\r\nexport default class CharacterSheet {\r\n  sheet: ICharacterSheet;\r\n  constructor(charSheet: ICharacterSheet) { this.sheet = charSheet }\r\n  static get = (charKey: CharacterKey | \"\"): Promise<CharacterSheet> | undefined => charKey ? loadCharacterSheet[charKey] : undefined\r\n  static getAll = (): Promise<StrictDict<CharacterKey, CharacterSheet>> => charImport\r\n  get name() { return this.sheet.name }\r\n  get cardImg() { return this.sheet.cardImg }\r\n  get thumbImg() { return this.sheet.thumbImg }\r\n  get star() { return this.sheet.star }\r\n  get elementKey() { return this.sheet.elementKey }\r\n  get weaponTypeKey() { return this.sheet.weaponTypeKey }\r\n  get constellationName() { return this.sheet.constellationName }\r\n  get specializeStat() { return this.sheet.specializeStat }\r\n  get baseStat() { return this.sheet.baseStat }\r\n  get talent() { return this.sheet.talent }\r\n  get formula() { return this.sheet.formula }\r\n  get conditionals() { return this.sheet.conditionals }\r\n  isAutoElemental = () => this.sheet.weaponTypeKey === \"catalyst\"\r\n  isMelee = () => {\r\n    const weaponTypeKey = this.sheet.weaponTypeKey\r\n    return weaponTypeKey === \"sword\" || weaponTypeKey === \"polearm\" || weaponTypeKey === \"claymore\"\r\n  }\r\n\r\n  getTalent = (talentKey: string) => this.talent[talentKey]\r\n  get hasTalentPage() { return Boolean(Object.keys(this.sheet.talent).length) } //TODO: remove when all chararacter sheets are complete\r\n\r\n  getTalentStats = (talentKey: string, stats: ICalculatedStats) => {\r\n    const [, constell] = talentKey.split(\"constellation\")\r\n    if (parseInt(constell) > stats.constellation) return null\r\n    return evalIfFunc(this.getTalent(talentKey)?.stats, stats)\r\n  }\r\n  getTalentStatsAll = (stats: ICalculatedStats) => {\r\n    const talents = this.sheet.talent\r\n    const statsArr: any[] = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      const talentStats = this.getTalentStats(talentKey, stats)\r\n      if (talentStats) statsArr.push(talentStats)\r\n    })\r\n    return statsArr\r\n  }\r\n\r\n  getDisplayStatKeys = (stats, defVal = { basicKeys: [] }) => {\r\n    if (!stats || !Object.keys(stats).length) return defVal\r\n    const { characterKey } = stats\r\n    let eleKey = this.elementKey\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    const isAutoElemental = this.isAutoElemental\r\n    if (!isAutoElemental) basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.weaponTypeKey\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (Formula.formulas.character?.[characterKey]) {\r\n      const charFormulas = {}\r\n      Object.entries(Formula.formulas.character[characterKey]).forEach(([talentKey, formulas]: any) => {\r\n        Object.values(formulas as any).forEach((formula: any) => {\r\n          if (!formula.field.canShow(stats)) return\r\n          if (talentKey === \"normal\" || talentKey === \"charged\" || talentKey === \"plunging\") talentKey = \"auto\"\r\n          if (!charFormulas[talentKey]) charFormulas[talentKey] = []\r\n          charFormulas[talentKey].push(formula.keys)\r\n        })\r\n      })\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {//TODO: doesnt have character sheet\r\n      //generic average hit parameters.\r\n      const genericAvgHit: string[] = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical\r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      else if (weaponTypeKey === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst\r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions: string[] = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n}\r\n","import { StatIconEle } from \"../Components/StatIcon\"\r\nimport ElementalData from \"../Data/ElementalData\"\r\nimport Stat from \"../Stat\"\r\n\r\nfunction modifiersToFields(modifiers, stats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    canShow: () => true,\r\n    value: Object.entries(modifier as any ?? {}).reduce((accu, [mkey, multiplier]) => accu + stats[mkey as any] * (multiplier as any), 0),\r\n    formulaText: <span>{Object.entries(modifier as any ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nexport default function statsToFields(statVals, stats = {}) {\r\n  return Object.entries(statVals).map(([statKey, statVal]) => {\r\n    switch (statKey) {\r\n      case \"infusionSelf\":\r\n        return {\r\n          text: <span className={`text-${statVal}`}>{ElementalData[statVal as any]?.name} Infusion</span>,\r\n          canShow: () => true,\r\n        }\r\n      case \"modifiers\":\r\n        return modifiersToFields(statVal, stats)\r\n      default:\r\n        return {\r\n          text: <span>{StatIconEle(statKey)}{Stat.getStatName(statKey)}</span>,\r\n          variant: Stat.getStatVariant(statKey),\r\n          canShow: () => true,\r\n          value: statVal,\r\n          fixed: Stat.fixedUnit(statKey),\r\n          unit: Stat.getStatUnit(statKey)\r\n        }\r\n    }\r\n  }\r\n  ).flat()\r\n}\r\n\r\nexport function fieldProcessing(field) {\r\n  //attach the field prop to the formulas for reverse search\r\n  if (field.formula) field.formula.field = field\r\n  if (typeof field.canShow !== \"function\") field.canShow = () => true\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nexport interface StatItem {\r\n  name: string, pretty?: string, const?: boolean, default?: any, variant?: string,\r\n  unit?: \"%\" | \"multi\"\r\n}\r\n\r\nconst StatData: { [stat: string]: StatItem } = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true },\r\n\r\n  //infusion\r\n  infusionSelf: { name: \"Elemental Infusion\", const: true, default: \"\" },\r\n\r\n  //talentBoost\r\n  autoBoost: { name: \"Normal Attack Level Boost\", const: true, },\r\n  skillBoost: { name: \"Ele. Skill Level Boost\", const: true, },\r\n  burstBoost: { name: \"Ele. Burst Level Boost\", const: true, },\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n};\r\n\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].forEach(ele => {\r\n  StatData[`${ele}_crystalize_hit`] = { name: `Crystalize Shield ${hitElements[ele].name} Effective HP`, variant: ele }\r\n  Formulas[`${ele}_crystalize_hit`] = s => s.crystalize_hit * 2.5\r\n})\r\n\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"shattered_hit\", \"crystalize_hit\", \"electro_crystalize_hit\", \"pyro_crystalize_hit\", \"cryo_crystalize_hit\", \"hydro_crystalize_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\",\r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\",\r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(s[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * s[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * s[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]: any) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]: any) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]: any) => accu + c[k] * (m as any), 0)\r\n    const dynamicFunc = (s, c) => dynamicModifier.reduce((accu, [k, m]: any) => accu + s[k] * (m as any), 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { artifactImport } from \"../Artifact/ArtifactSheet\";\r\nimport { charImport } from \"../Character/CharacterSheet\";\r\nimport { fieldProcessing } from \"../Util/FieldUtil\";\r\nimport { crawlObject, deepClone, layeredAssignment, objMultiplication, objPathValue } from \"../Util/Util\";\r\nimport { weaponImport } from \"../Weapon/WeaponSheet\";\r\n\r\nconst processed = Promise.all([\r\n  charImport.then(sheets => addConditional(sheets, \"character\")), //attach character conditionals to Conditional\r\n  weaponImport.then(sheets => {\r\n    addConditional(sheets, \"weapon\");\r\n  }),//attach weapon conditionals to Conditional\r\n  artifactImport.then(sheets => {\r\n    addConditional(sheets, \"artifact\")\r\n    //attach metadata prop setNumKey to the conditional\r\n    Object.values(sheets).forEach(setObj =>\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setNumObj]) => {\r\n        if (setNumObj.conditional) (setNumObj.conditional as any).setNumKey = setNumKey // TODO, typechecker says there's no `setNumKey`\r\n        if (setNumObj.conditionals) Object.values(setNumObj.conditionals).forEach((c: any) => c.setNumKey = setNumKey)\r\n      }))\r\n  })\r\n])\r\n\r\nexport default class Conditional {\r\n  constructor() { if (this instanceof Conditional) throw Error('A static class cannot be instantiated.'); }\r\n  static processed = processed\r\n  static conditionals = { artifact: {}, character: {}, weapon: {} } //where all the conditionals are stored\r\n  static canShow = (conditional, stats) => conditional?.canShow(stats)\r\n  static resolve = (conditional, stats, conditionalValue, defVal = { stats: {}, fields: [], conditionalValue: [] }) => {\r\n    if (!conditionalValue) conditionalValue = objPathValue(stats.conditionalValues, conditional.keys)\r\n    const [stacks, stateKey] = (conditionalValue ?? [])\r\n    if (!stacks) return defVal\r\n    if (stateKey) {//complex format\r\n      if (conditional.states?.[stateKey]) conditional = conditional.states?.[stateKey]\r\n      else return defVal\r\n    }\r\n    let conditionalStats = conditional.stats\r\n    if (typeof conditionalStats === \"function\") conditionalStats = conditionalStats(stats)\r\n    if (conditionalStats) defVal.stats = objMultiplication(deepClone(conditionalStats), stacks)\r\n    if (conditional.fields) defVal.fields = conditional.fields\r\n    defVal.conditionalValue = conditionalValue\r\n    return defVal\r\n  }\r\n  static get = (keys, defVal = {}) => objPathValue(Conditional.conditionals, keys) ?? defVal\r\n\r\n  //where callback is a function (conditional, conditionalValue, keys)\r\n  static parseConditionalValues = (conditionalValues, callback) => {\r\n    crawlObject(conditionalValues, [], c => Array.isArray(c), (conditionalValue, keys) => {\r\n      const conditional = Conditional.get(keys, null as any)\r\n      conditionalValue && conditional && callback(conditional, conditionalValue, keys)\r\n    })\r\n  }\r\n}\r\n\r\n//general parsing of conditionals, and add it to Conditional\r\nfunction addConditional(source, key) {\r\n  function findConditionals(obj, keys, callback) {\r\n    if (keys.length > 10) return\r\n    if (obj?.conditionals) Object.entries(obj.conditionals).forEach(([condKey, conditional]) => callback(conditional, [...keys, condKey]))\r\n    else obj && typeof obj === \"object\" && Object.entries(obj).forEach(([key, val]) => findConditionals(val, [...keys, key], callback))\r\n  }\r\n  findConditionals(source, [key], (conditional, keys) => {\r\n    conditional.keys = keys\r\n    if (typeof conditional.canShow !== \"function\") conditional.canShow = () => true\r\n    if (conditional.states) {//complex format\r\n      Object.values(conditional.states).forEach((state: any) => {\r\n        state.maxStack = state.maxStack ?? 1 //maxStack of 1 by default\r\n        state.fields?.forEach?.(fieldProcessing)\r\n      })\r\n    } else { //simple format\r\n      conditional.maxStack = conditional.maxStack ?? 1 //maxStack of 1 by default\r\n      conditional.fields?.forEach?.(fieldProcessing)\r\n    }\r\n    layeredAssignment(Conditional.conditionals, keys, conditional)\r\n  })\r\n}\r\n\r\n","import { allWeaponKeys, WeaponKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { IWeaponSheet } from '../Types/weapon';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport const weaponImport = import('../Data/Weapons').then(imp =>\r\n  Object.fromEntries(Object.entries(imp.default).map(([charKey, value]) =>\r\n    [charKey, new WeaponSheet(value)])) as unknown as StrictDict<WeaponKey, WeaponSheet>)\r\n\r\nconst loadWeaponSheet = Object.fromEntries(allWeaponKeys.map(set =>\r\n  [set, weaponImport.then(sheets => sheets[set])])) as StrictDict<WeaponKey, Promise<WeaponSheet>>\r\n\r\nexport default class WeaponSheet {\r\n  sheet: IWeaponSheet;\r\n  constructor(weaponSheet: IWeaponSheet) { this.sheet = weaponSheet }\r\n  static get = (weaponKey: WeaponKey | string): Promise<WeaponSheet> | undefined => weaponKey ? loadWeaponSheet[weaponKey] : undefined\r\n  static getAll = (): Promise<StrictDict<WeaponKey, WeaponSheet>> => weaponImport\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string) => Object.fromEntries(Object.entries(sheets).filter(([key, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  get name() { return this.sheet.name }\r\n  get weaponType() { return this.sheet.weaponType }\r\n  get img() { return this.sheet.img }\r\n  get rarity() { return this.sheet.rarity }\r\n  get passiveName() { return this.sheet.passiveName }\r\n  passiveDescription(stats: ICalculatedStats) {\r\n    const desc = this.sheet.passiveDescription\r\n    return evalIfFunc(desc, stats)\r\n  }\r\n  get description() { return this.sheet.description }\r\n  get baseStats() { return this.sheet.baseStats }\r\n  stats = (build: ICalculatedStats): object | false | undefined => evalIfFunc(this.sheet.stats, build)\r\n  get conditionals() { return this.sheet.conditionals }\r\n}\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import ICalculatedStats from './Types/ICalculatedStats';\r\nimport { crawlObject, objPathValue } from './Util/Util';\r\n\r\n//Currently only import character formulas, but formulas from other sources should be able to be imported as well.\r\nexport const formulaImport = import('./Data/Characters/formula').then(imp => addFormula(imp.default, \"character\"))\r\n\r\nexport default class Formula {\r\n  constructor() { if (this instanceof Formula) throw Error('A static class cannot be instantiated.'); }\r\n  static formulas: any = {}\r\n  static get = (keys: string[]): Promise<((stats: ICalculatedStats) => any[]) | undefined> => formulaImport.then(() => objPathValue(Formula.formulas, keys))\r\n}\r\n\r\nfunction addFormula(src, key) {\r\n  Formula.formulas[key] = src\r\n  crawlObject(src, [key], f => typeof f === \"function\", (formula, keys) => {\r\n    formula.keys = keys\r\n  })\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { SlotKey } from '../Types/consts'\r\n\r\nconst SlotIcon: StrictDict<SlotKey, IconDefinition> = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport { CompressMainStatKey, MainStatKey, SubstatKey } from '../Types/artifact';\r\nimport { Rarity, SlotKey } from '../Types/consts'\r\n\r\nconst ArtifactStarsData: Dict<Rarity, { subsBaselow: number, subBaseHigh: number, numUpgradesOrUnlocks: number }> = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData: StrictDict<Rarity, StrictDict<CompressMainStatKey, number[]>> = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 12.0, 14.6, 17.3, 19.9, 22.5, 25.2, 27.8, 30.5, 33.1, 35.7, 38.4, 41.0, 43.7, 46.3, 49.0, 51.6, 54.2, 56.9, 59.5, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.1, 23.7, 25.2, 26.7, 28.2, 29.8, 31.3, 32.8, 34.3, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubstatsData: StrictDict<SubstatKey, { [numStars: number]: number[] }> = {\r\n  hp: { 3: [100.38, 114.72, 129.06, 143.4], 4: [167.3, 191.2, 215.1, 239], 5: [209.13, 239, 268.88, 298.75] },\r\n  atk: { 3: [6.54, 7.47, 8.4, 9.34], 4: [10.89, 12.45, 14.0, 15.56], 5: [13.62, 15.56, 17.51, 19.45] },\r\n  def: { 3: [7.78, 8.89, 10, 11.11], 4: [12.96, 14.82, 16.67, 18.52], 5: [16.2, 18.52, 20.83, 23.15] },\r\n  eleMas: { 3: [9.79, 11.19, 12.59, 13.99], 4: [13.06, 14.92, 16.79, 18.65], 5: [16.32, 18.65, 20.98, 23.31] },\r\n  atk_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  hp_: { 3: [2.45, 2.8, 3.15, 3.5], 4: [3.26, 3.73, 4.2, 4.66], 5: [4.08, 4.66, 5.25, 5.83] },\r\n  def_: { 3: [3.06, 3.5, 3.93, 4.37], 4: [4.08, 4.66, 5.25, 5.83], 5: [5.1, 5.8, 6.56, 7.29] },\r\n  enerRech_: { 3: [2.72, 3.11, 3.5, 3.89], 4: [3.63, 4.14, 4.66, 5.18], 5: [4.53, 5.18, 5.83, 6.48] },\r\n  critRate_: { 3: [1.63, 1.86, 2.1, 2.33], 4: [2.18, 2.49, 2.8, 3.11], 5: [2.72, 3.11, 3.5, 3.89] },\r\n  critDMG_: { 3: [3.26, 3.73, 4.2, 4.66], 4: [4.35, 4.97, 5.6, 6.22], 5: [5.44, 6.22, 6.99, 7.77] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubstatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData: StrictDict<SlotKey, { name: string, stats: MainStatKey[] }> = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactSlotsData,\r\n  ArtifactSubstatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { SubstatKey } from \"../Types/artifact\"\r\n\r\nexport const ArtifactSubstatLookupTable: StrictDict<SubstatKey, { [numStar: number]: { [rounded: string]: number[][] } }> = {\r\n    hp: {\r\n        3: { \"100.0\": [[0]], \"115.0\": [[1]], \"129.0\": [[2]], \"143.0\": [[3]], \"201.0\": [[0, 0]], \"215.0\": [[0, 1]], \"229.0\": [[1, 1]], \"244.0\": [[1, 2]], \"258.0\": [[2, 2]], \"272.0\": [[2, 3]], \"287.0\": [[3, 3]], },\r\n        4: { \"167.0\": [[0]], \"191.0\": [[1]], \"215.0\": [[2]], \"239.0\": [[3]], \"335.0\": [[0, 0]], \"359.0\": [[0, 1]], \"382.0\": [[1, 1]], \"406.0\": [[1, 2]], \"430.0\": [[2, 2]], \"454.0\": [[2, 3]], \"478.0\": [[3, 3]], \"502.0\": [[0, 0, 0]], \"526.0\": [[0, 0, 1]], \"550.0\": [[0, 1, 1]], \"574.0\": [[1, 1, 1]], \"598.0\": [[1, 1, 2]], \"621.0\": [[1, 2, 2]], \"645.0\": [[2, 2, 2]], \"669.0\": [[2, 2, 3], [0, 0, 0, 0]], \"693.0\": [[2, 3, 3], [0, 0, 0, 1]], \"717.0\": [[0, 0, 1, 1], [3, 3, 3]], \"741.0\": [[0, 1, 1, 1]], \"765.0\": [[1, 1, 1, 1]], \"789.0\": [[1, 1, 1, 2]], \"813.0\": [[1, 1, 2, 2]], \"837.0\": [[1, 2, 2, 2]], \"860.0\": [[2, 2, 2, 2]], \"884.0\": [[2, 2, 2, 3]], \"908.0\": [[2, 2, 3, 3]], \"932.0\": [[2, 3, 3, 3]], \"956.0\": [[3, 3, 3, 3]], },\r\n        5: { \"209.0\": [[0]], \"239.0\": [[1]], \"269.0\": [[2]], \"299.0\": [[3]], \"418.0\": [[0, 0]], \"448.0\": [[0, 1]], \"478.0\": [[1, 1]], \"508.0\": [[1, 2]], \"538.0\": [[1, 3]], \"568.0\": [[2, 3]], \"598.0\": [[3, 3]], \"627.0\": [[0, 0, 0]], \"657.0\": [[0, 0, 1]], \"687.0\": [[0, 1, 1]], \"717.0\": [[1, 1, 1]], \"747.0\": [[1, 1, 2]], \"777.0\": [[1, 1, 3]], \"807.0\": [[1, 2, 3]], \"837.0\": [[0, 0, 0, 0], [1, 3, 3]], \"866.0\": [[2, 3, 3], [0, 0, 0, 1]], \"896.0\": [[3, 3, 3], [0, 0, 1, 1]], \"926.0\": [[0, 1, 1, 1]], \"956.0\": [[1, 1, 1, 1]], \"986.0\": [[1, 1, 1, 2]], \"1016.0\": [[1, 1, 1, 3]], \"1046.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"1076.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"1105.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"1135.0\": [[1, 3, 3, 3], [0, 0, 1, 1, 1]], \"1165.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"1195.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"1225.0\": [[1, 1, 1, 1, 2]], \"1255.0\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"1285.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"1315.0\": [[1, 1, 1, 3, 3], [0, 0, 0, 0, 1, 1]], \"1344.0\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"1374.0\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"1404.0\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"1434.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"1464.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"1494.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"1524.0\": [[1, 1, 1, 1, 2, 3]], \"1554.0\": [[1, 1, 1, 1, 3, 3]], \"1583.0\": [[1, 1, 1, 2, 3, 3]], \"1613.0\": [[1, 1, 1, 3, 3, 3]], \"1643.0\": [[1, 1, 2, 3, 3, 3]], \"1673.0\": [[1, 1, 3, 3, 3, 3]], \"1703.0\": [[1, 2, 3, 3, 3, 3]], \"1733.0\": [[1, 3, 3, 3, 3, 3]], \"1763.0\": [[2, 3, 3, 3, 3, 3]], \"1793.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    eleMas: {\r\n        3: { \"10.0\": [[0]], \"11.0\": [[1]], \"13.0\": [[2]], \"14.0\": [[3]], \"20.0\": [[0, 0]], \"21.0\": [[0, 1]], \"22.0\": [[1, 1]], \"24.0\": [[1, 2]], \"25.0\": [[2, 2]], \"27.0\": [[2, 3]], \"28.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[1, 1]], \"32.0\": [[1, 2]], \"34.0\": [[1, 3]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 1, 1]], \"45.0\": [[1, 1, 1]], \"47.0\": [[1, 1, 2]], \"48.0\": [[1, 1, 3]], \"49.0\": [[1, 2, 2]], \"50.0\": [[1, 2, 3]], \"52.0\": [[1, 3, 3], [0, 0, 0, 0]], \"54.0\": [[2, 3, 3], [0, 0, 0, 1]], \"56.0\": [[3, 3, 3], [0, 0, 1, 1]], \"58.0\": [[0, 1, 1, 1]], \"60.0\": [[1, 1, 1, 1]], \"62.0\": [[1, 1, 1, 2]], \"63.0\": [[1, 1, 1, 3]], \"65.0\": [[1, 1, 2, 3]], \"67.0\": [[1, 1, 3, 3]], \"69.0\": [[1, 2, 3, 3]], \"71.0\": [[1, 3, 3, 3]], \"73.0\": [[2, 3, 3, 3]], \"75.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"33.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[1, 1]], \"40.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"47.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"54.0\": [[0, 1, 1]], \"56.0\": [[1, 1, 1]], \"58.0\": [[1, 1, 2]], \"61.0\": [[1, 2, 2]], \"63.0\": [[2, 2, 2]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"68.0\": [[0, 0, 0, 1], [2, 3, 3]], \"70.0\": [[3, 3, 3], [0, 0, 1, 1]], \"72.0\": [[0, 1, 1, 1]], \"75.0\": [[1, 1, 1, 1]], \"77.0\": [[1, 1, 1, 2]], \"79.0\": [[1, 1, 2, 2]], \"82.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"84.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"89.0\": [[2, 2, 3, 3], [0, 0, 1, 1, 1]], \"91.0\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"96.0\": [[1, 1, 1, 1, 2]], \"98.0\": [[1, 1, 1, 2, 2], [0, 0, 0, 0, 0, 0]], \"100.0\": [[1, 1, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"103.0\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"105.0\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"107.0\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"110.0\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"112.0\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"114.0\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"117.0\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"119.0\": [[1, 1, 1, 2, 2, 2]], \"121.0\": [[1, 1, 2, 2, 2, 2]], \"124.0\": [[1, 2, 2, 2, 2, 2]], \"126.0\": [[2, 2, 2, 2, 2, 2]], \"128.0\": [[2, 2, 2, 2, 2, 3]], \"131.0\": [[2, 2, 2, 2, 3, 3]], \"133.0\": [[2, 2, 2, 3, 3, 3]], \"135.0\": [[2, 2, 3, 3, 3, 3]], \"138.0\": [[2, 3, 3, 3, 3, 3]], \"140.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk: {\r\n        3: { \"7.0\": [[0]], \"8.0\": [[2]], \"9.0\": [[3]], \"13.0\": [[0, 0]], \"14.0\": [[0, 1]], \"15.0\": [[1, 1]], \"16.0\": [[1, 2]], \"17.0\": [[2, 2]], \"18.0\": [[2, 3]], \"19.0\": [[3, 3]], },\r\n        4: { \"11.0\": [[0]], \"12.0\": [[1]], \"14.0\": [[2]], \"16.0\": [[3]], \"22.0\": [[0, 0]], \"23.0\": [[0, 1]], \"25.0\": [[0, 2]], \"26.0\": [[1, 2]], \"28.0\": [[2, 2]], \"30.0\": [[2, 3]], \"31.0\": [[3, 3]], \"33.0\": [[0, 0, 0]], \"34.0\": [[0, 0, 1]], \"36.0\": [[0, 0, 2]], \"37.0\": [[0, 1, 2]], \"39.0\": [[0, 2, 2]], \"40.0\": [[1, 2, 2]], \"42.0\": [[2, 2, 2]], \"44.0\": [[0, 0, 0, 0], [2, 2, 3]], \"45.0\": [[2, 3, 3], [0, 0, 0, 1]], \"47.0\": [[3, 3, 3], [0, 0, 0, 2]], \"48.0\": [[0, 0, 1, 2]], \"50.0\": [[0, 0, 2, 2]], \"51.0\": [[0, 1, 2, 2]], \"53.0\": [[0, 2, 2, 2]], \"54.0\": [[1, 2, 2, 2]], \"56.0\": [[2, 2, 2, 2]], \"58.0\": [[2, 2, 2, 3]], \"59.0\": [[2, 2, 3, 3]], \"61.0\": [[2, 3, 3, 3]], \"62.0\": [[3, 3, 3, 3]], },\r\n        5: { \"14.0\": [[0]], \"16.0\": [[1]], \"18.0\": [[2]], \"19.0\": [[3]], \"27.0\": [[0, 0]], \"29.0\": [[0, 1]], \"31.0\": [[1, 1]], \"33.0\": [[1, 2]], \"35.0\": [[1, 3]], \"37.0\": [[2, 3]], \"39.0\": [[3, 3]], \"41.0\": [[0, 0, 0]], \"43.0\": [[0, 0, 1]], \"45.0\": [[0, 1, 1]], \"47.0\": [[1, 1, 1]], \"49.0\": [[1, 1, 2]], \"51.0\": [[1, 1, 3]], \"53.0\": [[1, 2, 3]], \"54.0\": [[1, 3, 3], [0, 0, 0, 0]], \"56.0\": [[0, 0, 0, 1], [2, 3, 3]], \"58.0\": [[3, 3, 3], [0, 0, 1, 1]], \"60.0\": [[0, 1, 1, 1]], \"62.0\": [[1, 1, 1, 1]], \"64.0\": [[1, 1, 1, 2]], \"66.0\": [[1, 1, 1, 3]], \"68.0\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"70.0\": [[0, 0, 0, 0, 1], [1, 1, 3, 3]], \"72.0\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"74.0\": [[0, 0, 1, 1, 1], [1, 3, 3, 3]], \"76.0\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"78.0\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"80.0\": [[1, 1, 1, 1, 2]], \"82.0\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"84.0\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"86.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"88.0\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"89.0\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"90.0\": [[0, 0, 0, 0, 2, 2]], \"91.0\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"93.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"95.0\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"97.0\": [[1, 1, 1, 1, 1, 3], [3, 3, 3, 3, 3]], \"99.0\": [[1, 1, 1, 1, 2, 3]], \"101.0\": [[1, 1, 1, 1, 3, 3]], \"103.0\": [[1, 1, 1, 2, 3, 3]], \"105.0\": [[1, 1, 1, 3, 3, 3]], \"107.0\": [[1, 1, 2, 3, 3, 3]], \"109.0\": [[1, 1, 3, 3, 3, 3]], \"111.0\": [[1, 2, 3, 3, 3, 3]], \"113.0\": [[1, 3, 3, 3, 3, 3]], \"115.0\": [[2, 3, 3, 3, 3, 3]], \"117.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def: {\r\n        3: { \"8.0\": [[0]], \"9.0\": [[1]], \"10.0\": [[2]], \"11.0\": [[3]], \"16.0\": [[0, 0]], \"17.0\": [[0, 1]], \"18.0\": [[1, 1]], \"19.0\": [[1, 2]], \"20.0\": [[2, 2]], \"21.0\": [[2, 3]], \"22.0\": [[3, 3]], },\r\n        4: { \"13.0\": [[0]], \"15.0\": [[1]], \"17.0\": [[2]], \"19.0\": [[3]], \"26.0\": [[0, 0]], \"28.0\": [[0, 1]], \"30.0\": [[0, 2]], \"31.0\": [[0, 3]], \"33.0\": [[2, 2]], \"35.0\": [[2, 3]], \"37.0\": [[3, 3]], \"39.0\": [[0, 0, 0]], \"41.0\": [[0, 0, 1]], \"43.0\": [[0, 0, 2]], \"44.0\": [[0, 0, 3]], \"46.0\": [[0, 2, 2]], \"48.0\": [[0, 2, 3]], \"50.0\": [[0, 3, 3]], \"52.0\": [[0, 0, 0, 0], [2, 2, 3]], \"54.0\": [[0, 0, 0, 1], [2, 3, 3]], \"56.0\": [[0, 0, 0, 2], [3, 3, 3]], \"57.0\": [[0, 0, 0, 3]], \"59.0\": [[0, 0, 2, 2]], \"61.0\": [[0, 0, 2, 3]], \"63.0\": [[0, 0, 3, 3]], \"65.0\": [[0, 2, 2, 3]], \"67.0\": [[0, 2, 3, 3]], \"69.0\": [[0, 3, 3, 3]], \"70.0\": [[2, 2, 3, 3]], \"72.0\": [[2, 3, 3, 3]], \"74.0\": [[3, 3, 3, 3]], },\r\n        5: { \"16.0\": [[0]], \"19.0\": [[1]], \"21.0\": [[2]], \"23.0\": [[3]], \"32.0\": [[0, 0]], \"35.0\": [[0, 1]], \"37.0\": [[0, 2]], \"39.0\": [[1, 2]], \"42.0\": [[2, 2]], \"44.0\": [[2, 3]], \"46.0\": [[3, 3]], \"49.0\": [[0, 0, 0]], \"51.0\": [[0, 0, 1]], \"53.0\": [[0, 0, 2]], \"56.0\": [[0, 1, 2]], \"58.0\": [[0, 2, 2]], \"60.0\": [[1, 2, 2]], \"62.0\": [[2, 2, 2]], \"63.0\": [[1, 2, 3]], \"65.0\": [[0, 0, 0, 0], [2, 2, 3]], \"67.0\": [[0, 0, 0, 1], [2, 3, 3]], \"69.0\": [[3, 3, 3], [0, 0, 0, 2]], \"72.0\": [[0, 0, 1, 2]], \"74.0\": [[0, 0, 2, 2]], \"76.0\": [[0, 1, 2, 2]], \"79.0\": [[0, 2, 2, 2]], \"81.0\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"83.0\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"86.0\": [[2, 2, 2, 3], [0, 0, 0, 0, 2]], \"88.0\": [[2, 2, 3, 3], [0, 0, 0, 1, 2]], \"90.0\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"93.0\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"95.0\": [[0, 0, 2, 2, 2]], \"97.0\": [[0, 0, 0, 0, 0, 0], [0, 1, 2, 2, 2]], \"100.0\": [[0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 2]], \"102.0\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 0, 2]], \"104.0\": [[0, 0, 0, 0, 1, 2], [2, 2, 2, 2, 2]], \"106.0\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"109.0\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"111.0\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"113.0\": [[2, 3, 3, 3, 3], [0, 0, 1, 2, 2, 2]], \"116.0\": [[3, 3, 3, 3, 3], [0, 0, 2, 2, 2, 2]], \"118.0\": [[0, 1, 2, 2, 2, 2]], \"120.0\": [[0, 2, 2, 2, 2, 2]], \"123.0\": [[1, 2, 2, 2, 2, 2]], \"125.0\": [[2, 2, 2, 2, 2, 2]], \"127.0\": [[2, 2, 2, 2, 2, 3]], \"130.0\": [[2, 2, 2, 2, 3, 3]], \"132.0\": [[2, 2, 2, 3, 3, 3]], \"134.0\": [[2, 2, 3, 3, 3, 3]], \"137.0\": [[2, 3, 3, 3, 3, 3]], \"139.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    def_: {\r\n        3: { \"3.1\": [[0]], \"3.5\": [[1]], \"3.9\": [[2]], \"4.4\": [[3]], \"6.1\": [[0, 0]], \"6.6\": [[0, 1]], \"7.0\": [[0, 2]], \"7.4\": [[1, 2]], \"7.9\": [[2, 2]], \"8.3\": [[2, 3]], \"8.7\": [[3, 3]], },\r\n        4: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[0, 0, 1, 1], [3, 3, 3]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3]], \"21.6\": [[1, 2, 3, 3]], \"22.2\": [[1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3]], },\r\n        5: { \"5.1\": [[0]], \"5.8\": [[1]], \"6.6\": [[2]], \"7.3\": [[3]], \"10.2\": [[0, 0]], \"10.9\": [[0, 1]], \"11.6\": [[1, 1]], \"11.7\": [[0, 2]], \"12.4\": [[1, 2]], \"13.1\": [[1, 3]], \"13.9\": [[2, 3]], \"14.6\": [[3, 3]], \"15.3\": [[0, 0, 0]], \"16.0\": [[0, 0, 1]], \"16.7\": [[0, 1, 1]], \"16.8\": [[0, 0, 2]], \"17.4\": [[1, 1, 1]], \"17.5\": [[0, 1, 2]], \"18.2\": [[1, 1, 2]], \"18.9\": [[1, 1, 3]], \"19.0\": [[0, 2, 3]], \"19.7\": [[1, 2, 3]], \"20.4\": [[0, 0, 0, 0], [1, 3, 3]], \"21.1\": [[2, 3, 3], [0, 0, 0, 1]], \"21.8\": [[0, 0, 1, 1]], \"21.9\": [[0, 0, 0, 2], [3, 3, 3]], \"22.5\": [[0, 1, 1, 1]], \"22.6\": [[0, 0, 1, 2]], \"23.2\": [[1, 1, 1, 1]], \"23.3\": [[0, 1, 1, 2]], \"24.0\": [[1, 1, 1, 2]], \"24.1\": [[0, 0, 2, 3]], \"24.7\": [[1, 1, 1, 3]], \"24.8\": [[0, 1, 2, 3]], \"25.5\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"26.2\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"26.9\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"27.0\": [[0, 0, 0, 0, 2], [2, 2, 2, 3]], \"27.6\": [[0, 0, 1, 1, 1]], \"27.7\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"28.3\": [[0, 1, 1, 1, 1]], \"28.4\": [[2, 3, 3, 3], [0, 0, 1, 1, 2]], \"29.0\": [[1, 1, 1, 1, 1]], \"29.1\": [[0, 1, 1, 1, 2]], \"29.2\": [[3, 3, 3, 3], [0, 0, 0, 2, 3]], \"29.8\": [[1, 1, 1, 1, 2]], \"29.9\": [[0, 0, 1, 2, 3]], \"30.5\": [[1, 1, 1, 1, 3]], \"30.6\": [[0, 1, 1, 2, 3], [0, 0, 0, 0, 0, 0]], \"31.3\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"32.0\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"32.1\": [[0, 2, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"32.7\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"32.8\": [[0, 0, 0, 0, 1, 2], [1, 2, 2, 2, 3]], \"33.4\": [[0, 0, 1, 1, 1, 1]], \"33.5\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"34.1\": [[0, 1, 1, 1, 1, 1]], \"34.2\": [[1, 2, 3, 3, 3], [0, 0, 1, 1, 1, 2]], \"34.3\": [[0, 0, 0, 0, 2, 3], [2, 2, 2, 3, 3]], \"34.8\": [[1, 1, 1, 1, 1, 1]], \"34.9\": [[0, 1, 1, 1, 1, 2]], \"35.0\": [[0, 0, 0, 1, 2, 3], [1, 3, 3, 3, 3]], \"35.6\": [[1, 1, 1, 1, 1, 2]], \"35.7\": [[0, 0, 1, 1, 2, 3], [2, 3, 3, 3, 3]], \"36.3\": [[1, 1, 1, 1, 1, 3]], \"36.4\": [[0, 1, 1, 1, 2, 3]], \"36.5\": [[3, 3, 3, 3, 3]], \"37.1\": [[1, 1, 1, 1, 2, 3]], \"37.2\": [[0, 0, 2, 2, 2, 3]], \"37.8\": [[1, 1, 1, 1, 3, 3]], \"37.9\": [[0, 1, 2, 2, 2, 3]], \"38.5\": [[1, 1, 1, 2, 3, 3]], \"38.6\": [[1, 1, 2, 2, 2, 3]], \"39.3\": [[1, 1, 1, 3, 3, 3]], \"39.4\": [[2, 2, 2, 2, 2, 2]], \"40.0\": [[1, 1, 2, 3, 3, 3]], \"40.1\": [[1, 2, 2, 2, 3, 3]], \"40.8\": [[1, 1, 3, 3, 3, 3]], \"41.5\": [[1, 2, 3, 3, 3, 3]], \"41.6\": [[2, 2, 2, 3, 3, 3]], \"42.3\": [[1, 3, 3, 3, 3, 3]], \"43.0\": [[2, 3, 3, 3, 3, 3]], \"43.7\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critRate_: {\r\n        3: { \"1.6\": [[0]], \"1.9\": [[1]], \"2.1\": [[2]], \"2.3\": [[3]], \"3.3\": [[0, 0]], \"3.5\": [[0, 1]], \"3.7\": [[1, 1]], \"4.0\": [[1, 2]], \"4.2\": [[1, 3]], \"4.4\": [[2, 3]], \"4.7\": [[3, 3]], },\r\n        4: { \"2.2\": [[0]], \"2.5\": [[1]], \"2.8\": [[2]], \"3.1\": [[3]], \"4.4\": [[0, 0]], \"4.7\": [[0, 1]], \"5.0\": [[1, 1]], \"5.3\": [[1, 2]], \"5.6\": [[2, 2]], \"5.9\": [[2, 3]], \"6.2\": [[3, 3]], \"6.5\": [[0, 0, 0]], \"6.9\": [[0, 0, 1]], \"7.2\": [[0, 1, 1]], \"7.5\": [[1, 1, 1]], \"7.8\": [[1, 1, 2]], \"8.1\": [[1, 2, 2]], \"8.4\": [[2, 2, 2]], \"8.7\": [[0, 0, 0, 0], [2, 2, 3]], \"9.0\": [[2, 3, 3], [0, 0, 0, 1]], \"9.3\": [[3, 3, 3], [0, 0, 1, 1]], \"9.7\": [[0, 1, 1, 1]], \"10.0\": [[1, 1, 1, 1]], \"10.3\": [[1, 1, 1, 2]], \"10.6\": [[1, 1, 2, 2]], \"10.9\": [[1, 2, 2, 2]], \"11.2\": [[2, 2, 2, 2]], \"11.5\": [[2, 2, 2, 3]], \"11.8\": [[2, 2, 3, 3]], \"12.1\": [[2, 3, 3, 3]], \"12.4\": [[3, 3, 3, 3]], },\r\n        5: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], \"8.2\": [[0, 0, 0]], \"8.6\": [[0, 0, 1]], \"8.9\": [[0, 1, 1]], \"9.3\": [[1, 1, 1]], \"9.7\": [[1, 1, 2]], \"10.1\": [[1, 2, 2]], \"10.5\": [[2, 2, 2]], \"10.9\": [[0, 0, 0, 0], [2, 2, 3]], \"11.3\": [[2, 3, 3], [0, 0, 0, 1]], \"11.7\": [[0, 0, 1, 1], [3, 3, 3]], \"12.1\": [[0, 1, 1, 1]], \"12.4\": [[1, 1, 1, 1]], \"12.8\": [[1, 1, 1, 2]], \"13.2\": [[1, 1, 2, 2]], \"13.6\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"14.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"14.4\": [[0, 0, 0, 1, 1], [2, 2, 2, 3]], \"14.8\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"15.2\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"15.6\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"15.9\": [[1, 1, 1, 1, 2]], \"16.3\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"16.7\": [[0, 0, 0, 0, 0, 1], [1, 1, 2, 2, 2]], \"17.1\": [[1, 2, 2, 2, 2], [0, 0, 0, 0, 1, 1]], \"17.5\": [[0, 0, 0, 1, 1, 1], [2, 2, 2, 2, 2]], \"17.9\": [[2, 2, 2, 2, 3], [0, 0, 1, 1, 1, 1]], \"18.3\": [[2, 2, 2, 3, 3], [0, 1, 1, 1, 1, 1]], \"18.7\": [[1, 1, 1, 1, 1, 1], [2, 2, 3, 3, 3]], \"19.1\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"19.4\": [[1, 1, 1, 1, 2, 2]], \"19.5\": [[3, 3, 3, 3, 3]], \"19.8\": [[1, 1, 1, 2, 2, 2]], \"20.2\": [[1, 1, 2, 2, 2, 2]], \"20.6\": [[1, 2, 2, 2, 2, 2]], \"21.0\": [[2, 2, 2, 2, 2, 2]], \"21.4\": [[2, 2, 2, 2, 2, 3]], \"21.8\": [[2, 2, 2, 2, 3, 3]], \"22.2\": [[2, 2, 2, 3, 3, 3]], \"22.6\": [[2, 2, 3, 3, 3, 3]], \"23.0\": [[2, 3, 3, 3, 3, 3]], \"23.3\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    atk_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[0, 0, 0, 0], [1, 3, 3]], \"16.9\": [[0, 0, 0, 1], [2, 3, 3]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[0, 0, 0, 0, 0], [1, 1, 2, 3]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[0, 0, 0, 1, 1], [1, 2, 3, 3]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[0, 0, 0, 1, 2], [1, 3, 3, 3]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[1, 1, 1, 1, 1], [3, 3, 3, 3]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[1, 1, 1, 1, 3], [0, 0, 0, 0, 0, 0]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[1, 1, 2, 3, 3], [0, 0, 0, 1, 1, 1]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[1, 1, 3, 3, 3], [0, 0, 1, 1, 1, 1]], \"27.4\": [[1, 2, 3, 3, 3], [0, 1, 1, 1, 1, 1]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[1, 1, 1, 1, 1, 2], [2, 3, 3, 3, 3]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[3, 3, 3, 3, 3], [0, 1, 1, 2, 2, 2]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    critDMG_: {\r\n        5: { \"5.4\": [[0]], \"6.2\": [[1]], \"7.0\": [[2]], \"7.8\": [[3]], \"10.9\": [[0, 0]], \"11.7\": [[0, 1]], \"12.4\": [[0, 2]], \"13.2\": [[1, 2]], \"14.0\": [[2, 2]], \"14.8\": [[2, 3]], \"15.5\": [[3, 3]], \"16.3\": [[0, 0, 0]], \"17.1\": [[0, 0, 1]], \"17.9\": [[0, 0, 2]], \"18.7\": [[0, 1, 2]], \"19.4\": [[0, 2, 2]], \"20.2\": [[1, 2, 2]], \"21.0\": [[2, 2, 2]], \"21.8\": [[0, 0, 0, 0], [2, 2, 3]], \"22.5\": [[2, 3, 3], [0, 0, 0, 1]], \"23.3\": [[3, 3, 3], [0, 0, 0, 2]], \"24.1\": [[0, 0, 1, 2]], \"24.9\": [[0, 0, 2, 2]], \"25.6\": [[0, 1, 2, 2]], \"25.7\": [[1, 1, 1, 2]], \"26.4\": [[0, 2, 2, 2]], \"27.2\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"28.0\": [[2, 2, 2, 2], [0, 0, 0, 0, 1]], \"28.7\": [[2, 2, 2, 3]], \"28.8\": [[1, 2, 3, 3], [0, 0, 0, 0, 2]], \"29.5\": [[0, 0, 0, 1, 2], [2, 2, 3, 3]], \"30.3\": [[0, 0, 0, 2, 2], [2, 3, 3, 3]], \"31.1\": [[3, 3, 3, 3], [0, 0, 1, 2, 2]], \"31.9\": [[0, 0, 2, 2, 2]], \"32.6\": [[0, 1, 2, 2, 2], [0, 0, 0, 0, 0, 0]], \"32.7\": [[1, 1, 1, 1, 3]], \"33.4\": [[0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 1]], \"34.2\": [[0, 0, 0, 0, 0, 2], [1, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2], [0, 0, 0, 0, 1, 2]], \"35.7\": [[0, 0, 0, 0, 2, 2], [2, 2, 2, 2, 3]], \"35.8\": [[0, 0, 0, 1, 1, 2], [1, 1, 3, 3, 3]], \"36.5\": [[2, 2, 2, 3, 3], [0, 0, 0, 1, 2, 2]], \"37.3\": [[0, 0, 0, 2, 2, 2], [2, 2, 3, 3, 3]], \"38.1\": [[0, 0, 1, 2, 2, 2], [2, 3, 3, 3, 3]], \"38.8\": [[0, 0, 2, 2, 2, 2]], \"38.9\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"39.6\": [[0, 1, 2, 2, 2, 2]], \"40.4\": [[0, 2, 2, 2, 2, 2]], \"41.2\": [[1, 2, 2, 2, 2, 2]], \"41.9\": [[2, 2, 2, 2, 2, 2]], \"42.0\": [[1, 2, 2, 2, 2, 3]], \"42.7\": [[2, 2, 2, 2, 2, 3]], \"43.5\": [[2, 2, 2, 2, 3, 3]], \"44.3\": [[2, 2, 2, 3, 3, 3]], \"45.1\": [[2, 2, 3, 3, 3, 3]], \"45.8\": [[2, 3, 3, 3, 3, 3]], \"46.6\": [[3, 3, 3, 3, 3, 3]], },\r\n        3: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], },\r\n        4: { \"4.4\": [[0]], \"5.0\": [[1]], \"5.6\": [[2]], \"6.2\": [[3]], \"8.7\": [[0, 0]], \"9.3\": [[0, 1]], \"9.9\": [[1, 1]], \"10.0\": [[0, 2]], \"10.6\": [[1, 2]], \"11.2\": [[1, 3]], \"11.8\": [[2, 3]], \"12.4\": [[3, 3]], \"13.1\": [[0, 0, 0]], \"13.7\": [[0, 0, 1]], \"14.3\": [[0, 1, 1]], \"14.9\": [[1, 1, 1]], \"15.5\": [[1, 1, 2]], \"15.6\": [[0, 2, 2]], \"16.2\": [[1, 1, 3]], \"16.8\": [[1, 2, 3]], \"17.4\": [[0, 0, 0, 0], [1, 3, 3]], \"18.0\": [[0, 0, 0, 1], [2, 3, 3]], \"18.6\": [[0, 0, 1, 1]], \"18.7\": [[3, 3, 3], [0, 0, 0, 2]], \"19.3\": [[0, 1, 1, 1]], \"19.9\": [[1, 1, 1, 1]], \"20.5\": [[1, 1, 1, 2]], \"21.1\": [[1, 1, 1, 3]], \"21.2\": [[0, 2, 2, 2]], \"21.8\": [[1, 1, 2, 3]], \"22.4\": [[1, 1, 3, 3]], \"23.0\": [[1, 2, 3, 3]], \"23.6\": [[1, 3, 3, 3]], \"24.3\": [[2, 3, 3, 3]], \"24.9\": [[3, 3, 3, 3]], },\r\n    },\r\n    hp_: {\r\n        3: { \"2.5\": [[0]], \"2.8\": [[1]], \"3.2\": [[2]], \"3.5\": [[3]], \"4.9\": [[0, 0]], \"5.3\": [[0, 1]], \"5.6\": [[1, 1]], \"6.0\": [[1, 2]], \"6.3\": [[2, 2]], \"6.7\": [[2, 3]], \"7.0\": [[3, 3]], },\r\n        4: { \"3.3\": [[0]], \"3.7\": [[1]], \"4.2\": [[2]], \"4.7\": [[3]], \"6.5\": [[0, 0]], \"7.0\": [[0, 1]], \"7.5\": [[1, 1]], \"7.9\": [[0, 3]], \"8.4\": [[1, 3]], \"8.9\": [[2, 3]], \"9.3\": [[3, 3]], \"9.8\": [[0, 0, 0]], \"10.3\": [[0, 0, 1]], \"10.7\": [[0, 1, 1]], \"11.2\": [[0, 0, 3]], \"11.7\": [[0, 1, 3]], \"12.1\": [[1, 1, 3]], \"12.6\": [[0, 3, 3]], \"13.0\": [[0, 0, 0, 0]], \"13.1\": [[1, 3, 3]], \"13.5\": [[2, 3, 3], [0, 0, 0, 1]], \"14.0\": [[3, 3, 3], [0, 0, 1, 1]], \"14.4\": [[0, 0, 0, 3]], \"14.5\": [[0, 1, 1, 1]], \"14.9\": [[0, 0, 1, 3]], \"15.4\": [[0, 1, 1, 3]], \"15.8\": [[0, 0, 3, 3]], \"15.9\": [[1, 1, 1, 3]], \"16.3\": [[0, 1, 3, 3]], \"16.8\": [[1, 1, 3, 3]], \"17.2\": [[0, 3, 3, 3]], \"17.3\": [[1, 2, 3, 3]], \"17.7\": [[1, 3, 3, 3]], \"18.2\": [[2, 3, 3, 3]], \"18.6\": [[3, 3, 3, 3]], },\r\n        5: { \"4.1\": [[0]], \"4.7\": [[1]], \"5.3\": [[2]], \"5.8\": [[3]], \"8.2\": [[0, 0]], \"8.7\": [[0, 1]], \"9.3\": [[1, 1]], \"9.9\": [[1, 2]], \"10.5\": [[1, 3]], \"11.1\": [[2, 3]], \"11.7\": [[3, 3]], \"12.2\": [[0, 0, 0]], \"12.8\": [[0, 0, 1]], \"13.4\": [[0, 1, 1]], \"14.0\": [[1, 1, 1]], \"14.6\": [[1, 1, 2]], \"15.2\": [[1, 1, 3]], \"15.7\": [[1, 2, 3]], \"15.8\": [[2, 2, 2]], \"16.3\": [[1, 3, 3], [0, 0, 0, 0]], \"16.9\": [[2, 3, 3], [0, 0, 0, 1]], \"17.5\": [[3, 3, 3], [0, 0, 1, 1]], \"18.1\": [[0, 1, 1, 1]], \"18.6\": [[1, 1, 1, 1]], \"18.7\": [[0, 1, 1, 2]], \"19.2\": [[1, 1, 1, 2]], \"19.8\": [[1, 1, 1, 3]], \"20.4\": [[1, 1, 2, 3], [0, 0, 0, 0, 0]], \"21.0\": [[1, 1, 3, 3], [0, 0, 0, 0, 1]], \"21.6\": [[1, 2, 3, 3], [0, 0, 0, 1, 1]], \"22.1\": [[0, 0, 1, 1, 1]], \"22.2\": [[1, 3, 3, 3], [0, 0, 0, 1, 2]], \"22.7\": [[2, 3, 3, 3], [0, 1, 1, 1, 1]], \"23.3\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"23.9\": [[1, 1, 1, 1, 2]], \"24.5\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 3]], \"25.1\": [[1, 1, 1, 2, 3], [0, 0, 0, 0, 0, 1]], \"25.6\": [[0, 0, 0, 0, 1, 1], [1, 1, 1, 3, 3]], \"25.7\": [[1, 1, 2, 2, 3], [0, 0, 0, 0, 0, 2]], \"26.2\": [[0, 0, 0, 1, 1, 1], [1, 1, 2, 3, 3]], \"26.3\": [[2, 2, 2, 2, 2]], \"26.8\": [[0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 3]], \"27.4\": [[0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 3]], \"28.0\": [[1, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"28.6\": [[2, 3, 3, 3, 3], [1, 1, 1, 1, 1, 2]], \"29.1\": [[1, 1, 1, 1, 1, 3]], \"29.2\": [[0, 1, 1, 2, 2, 2], [3, 3, 3, 3, 3]], \"29.7\": [[1, 1, 1, 1, 2, 3]], \"30.3\": [[1, 1, 1, 1, 3, 3]], \"30.9\": [[1, 1, 1, 2, 3, 3]], \"31.5\": [[1, 1, 1, 3, 3, 3]], \"32.1\": [[1, 1, 2, 3, 3, 3]], \"32.6\": [[1, 1, 3, 3, 3, 3]], \"32.7\": [[1, 2, 2, 3, 3, 3]], \"33.2\": [[1, 2, 3, 3, 3, 3]], \"33.8\": [[1, 3, 3, 3, 3, 3]], \"34.4\": [[2, 3, 3, 3, 3, 3]], \"35.0\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n    enerRech_: {\r\n        3: { \"2.7\": [[0]], \"3.1\": [[1]], \"3.5\": [[2]], \"3.9\": [[3]], \"5.4\": [[0, 0]], \"5.8\": [[0, 1]], \"6.2\": [[1, 1]], \"6.6\": [[1, 2]], \"7.0\": [[2, 2]], \"7.4\": [[2, 3]], \"7.8\": [[3, 3]], },\r\n        4: { \"3.6\": [[0]], \"4.1\": [[1]], \"4.7\": [[2]], \"5.2\": [[3]], \"7.3\": [[0, 0]], \"7.8\": [[0, 1]], \"8.3\": [[1, 1]], \"8.8\": [[1, 2]], \"9.3\": [[2, 2]], \"9.8\": [[2, 3]], \"10.4\": [[3, 3]], \"10.9\": [[0, 0, 0]], \"11.4\": [[0, 0, 1]], \"11.9\": [[0, 1, 1]], \"12.4\": [[1, 1, 1]], \"12.9\": [[1, 1, 2]], \"13.0\": [[0, 2, 2]], \"13.5\": [[1, 2, 2]], \"14.0\": [[2, 2, 2]], \"14.5\": [[0, 0, 0, 0], [2, 2, 3]], \"15.0\": [[2, 3, 3], [0, 0, 0, 1]], \"15.5\": [[3, 3, 3], [0, 0, 1, 1]], \"15.6\": [[0, 0, 0, 2]], \"16.1\": [[0, 1, 1, 1]], \"16.6\": [[1, 1, 1, 1]], \"17.1\": [[1, 1, 1, 2]], \"17.6\": [[1, 1, 2, 2]], \"18.1\": [[1, 2, 2, 2]], \"18.6\": [[2, 2, 2, 2]], \"18.7\": [[0, 2, 3, 3]], \"19.2\": [[2, 2, 2, 3]], \"19.7\": [[2, 2, 3, 3]], \"20.2\": [[2, 3, 3, 3]], \"20.7\": [[3, 3, 3, 3]], },\r\n        5: { \"4.5\": [[0]], \"5.2\": [[1]], \"5.8\": [[2]], \"6.5\": [[3]], \"9.1\": [[0, 0]], \"9.7\": [[0, 1]], \"10.4\": [[1, 1]], \"11.0\": [[1, 2]], \"11.7\": [[2, 2]], \"12.3\": [[2, 3]], \"13.0\": [[3, 3]], \"13.6\": [[0, 0, 0]], \"14.2\": [[0, 0, 1]], \"14.9\": [[0, 1, 1]], \"15.5\": [[1, 1, 1]], \"16.2\": [[1, 1, 2]], \"16.8\": [[1, 2, 2]], \"17.5\": [[2, 2, 2]], \"18.1\": [[2, 2, 3], [0, 0, 0, 0]], \"18.8\": [[0, 0, 0, 1], [2, 3, 3]], \"19.4\": [[3, 3, 3], [0, 0, 1, 1]], \"20.1\": [[0, 1, 1, 1]], \"20.7\": [[1, 1, 1, 1]], \"21.4\": [[1, 1, 1, 2]], \"22.0\": [[1, 1, 2, 2]], \"22.7\": [[0, 0, 0, 0, 0], [1, 2, 2, 2]], \"23.3\": [[0, 0, 0, 0, 1], [2, 2, 2, 2]], \"24.0\": [[2, 2, 2, 3], [0, 0, 0, 1, 1]], \"24.6\": [[0, 0, 1, 1, 1], [2, 2, 3, 3]], \"25.3\": [[0, 1, 1, 1, 1], [2, 3, 3, 3]], \"25.9\": [[3, 3, 3, 3], [1, 1, 1, 1, 1]], \"26.6\": [[1, 1, 1, 1, 2]], \"27.2\": [[0, 0, 0, 0, 0, 0], [1, 1, 1, 2, 2]], \"27.8\": [[0, 0, 0, 0, 0, 1]], \"27.9\": [[1, 1, 2, 2, 2]], \"28.5\": [[0, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2]], \"29.1\": [[0, 0, 0, 1, 1, 1]], \"29.2\": [[2, 2, 2, 2, 2]], \"29.8\": [[0, 0, 1, 1, 1, 1], [2, 2, 2, 2, 3]], \"30.4\": [[0, 1, 1, 1, 1, 1]], \"30.5\": [[2, 2, 2, 3, 3]], \"31.1\": [[2, 2, 3, 3, 3], [1, 1, 1, 1, 1, 1]], \"31.7\": [[1, 1, 1, 1, 1, 2]], \"31.8\": [[2, 3, 3, 3, 3]], \"32.4\": [[3, 3, 3, 3, 3], [1, 1, 1, 1, 2, 2]], \"33.0\": [[1, 1, 1, 2, 2, 2]], \"33.7\": [[1, 1, 2, 2, 2, 2]], \"34.3\": [[1, 2, 2, 2, 2, 2]], \"35.0\": [[2, 2, 2, 2, 2, 2]], \"35.6\": [[2, 2, 2, 2, 2, 3]], \"36.3\": [[2, 2, 2, 2, 3, 3]], \"36.9\": [[2, 2, 2, 3, 3, 3]], \"37.6\": [[2, 2, 3, 3, 3, 3]], \"38.2\": [[2, 3, 3, 3, 3, 3]], \"38.9\": [[3, 3, 3, 3, 3, 3]], },\r\n    },\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainStatsData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubstatsData, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport ArtifactDatabase from '../Database/ArtifactDatabase';\r\nimport CharacterDatabase from '../Database/CharacterDatabase';\r\nimport { ArtifactSubstatLookupTable } from '../Data/ArtifactLookupTable';\r\nimport Stat from '../Stat';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone, evalIfFunc } from '../Util/Util';\r\nimport { CompressMainStatKey, IArtifact, MainStatKey, StatDict, Substat, SubstatKey } from '../Types/artifact';\r\nimport { SlotKey, Rarity, ArtifactSetKey, allSlotKeys, SetNum, CharacterKey } from '../Types/consts';\r\nimport ICalculatedStats from '../Types/ICalculatedStats';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport Conditional from '../Conditional/Conditional';\r\n\r\nconst maxStar: Rarity = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SLOT\r\n  static slotName = (slotKey: SlotKey) => slotKey ? ArtifactSlotsData[slotKey].name : \"\"\r\n  static slotIcon = (slotKey: SlotKey) => <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" />\r\n  static slotNameWithIcon = (slotKey: SlotKey) => {\r\n    let name = Artifact.slotName(slotKey)\r\n    let slotIcon = Artifact.slotIcon(slotKey)\r\n    return <span>{slotIcon} {name}</span>\r\n  }\r\n\r\n  static slotMainStats = (slotKey: SlotKey): MainStatKey[] => ArtifactSlotsData[slotKey].stats\r\n\r\n  static setEffectsObjs = (artifactSheets: StrictDict<ArtifactSetKey, ArtifactSheet>, stats: ICalculatedStats): Dict<ArtifactSetKey, Dict<SetNum, StatDict>> => {\r\n    let result: Dict<ArtifactSetKey, Dict<SetNum, StatDict>> = {};\r\n    //accumulate the non-conditional stats\r\n    Object.entries(artifactSheets).forEach(([setKey, setObj]) => {\r\n      let setEffect: Dict<SetNum, StatDict> = {}\r\n      Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n        const setStats = evalIfFunc(setEffectObj.stats, stats)\r\n        if (setStats) setEffect[setNumKey] = deepClone(setStats)\r\n      })\r\n      if (Object.keys(setEffect).length > 0)\r\n        result[setKey] = setEffect;\r\n    })\r\n    Conditional.parseConditionalValues({ artifact: stats.conditionalValues?.artifact }, (conditional, conditionalValue, [, setKey]) => {\r\n      const { setNumKey } = conditional\r\n      const { stats: condStats } = Conditional.resolve(conditional, stats, conditionalValue)\r\n      result[setKey] ?? (result[setKey] = {})\r\n      result[setKey][setNumKey] ?? (result[setKey][setNumKey] = {})\r\n      Object.entries(condStats).forEach(([statKey, value]) =>\r\n        result[setKey][setNumKey][statKey] = (result[setKey][setNumKey][statKey] ?? 0) + value)\r\n    })\r\n    return result\r\n  }\r\n\r\n  static splitArtifactsBySlot = (databaseObj: Dict<string, IArtifact>): Dict<SlotKey, IArtifact[]> =>\r\n    Object.fromEntries(allSlotKeys.map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //MAIN STATS\r\n  static mainStatValues = (numStar: Rarity, statKey: MainStatKey, defVal = []) => {\r\n    if (statKey.endsWith(\"_dmg_\") && statKey !== \"physical_dmg_\")\r\n      return ArtifactMainStatsData[numStar][\"ele_dmg_\"]\r\n    return ArtifactMainStatsData[numStar][statKey as CompressMainStatKey] || defVal\r\n  }\r\n\r\n  static mainStatValue = (key: MainStatKey, numStars: Rarity, level: number): number | undefined =>\r\n    Artifact.mainStatValues(numStars, key)[level]\r\n\r\n  //SUBSTATS\r\n  static rollInfo = (rarity: Rarity): { low: number, high: number, numUpgrades: number } => {\r\n    const data = ArtifactStarsData[rarity]!\r\n    return { low: data.subsBaselow, high: data.subBaseHigh, numUpgrades: data.numUpgradesOrUnlocks }\r\n  }\r\n\r\n  static maxSubstatValues = (statKey: SubstatKey, numStars = maxStar): number => ArtifactSubstatsMinMax[statKey].max[numStars]\r\n  static getSubstatKeys = (): SubstatKey[] => Object.keys(ArtifactSubstatsData) as SubstatKey[]\r\n  static substatCloseEnough = (key: SubstatKey, value1: number, value2: number): boolean => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars: Rarity) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars]!.subBaseHigh + ArtifactStarsData[numStars]!.numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level: number, numStars: Rarity) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static getSubstatRollData = (substatKey: SubstatKey | \"\", numStars: Rarity) => ArtifactSubstatsData[substatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (substatKey: SubstatKey, substatValue: number, numStars: Rarity): number[][] => {\r\n    if (!numStars || !substatKey || typeof substatValue !== \"number\" || !substatValue) return []\r\n    let rollData = Artifact.getSubstatRollData(substatKey, numStars)\r\n    if (!rollData.length) return []\r\n\r\n    let table = ArtifactSubstatLookupTable[substatKey][numStars]\r\n    let lookupValue = substatValue.toFixed(1)\r\n\r\n    if (table[lookupValue])\r\n      return table[lookupValue].map(roll => roll.map(i => rollData[i]))\r\n    else return [] // Lookup fails\r\n  }\r\n  static getSubstatEfficiency = (substatKey: SubstatKey | \"\", rolls: number[]): number => {\r\n    const sum = rolls.reduce((a, b) => a + b, 0)\r\n    const max = substatKey ? Artifact.maxSubstatValues(substatKey) * rolls.length : 0\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state: IArtifact) {\r\n    const { numStars, level, substats } = state, errors: string[] = []\r\n\r\n    const allSubstatRolls: { index: number, substatRolls: number[][] }[] = []\r\n    let total = 0\r\n    substats.forEach((substat, index) => {\r\n      const { key, value } = substat, substatRolls = key ? Artifact.getSubstatRolls(key, value, numStars) : []\r\n\r\n      if (substatRolls.length) {\r\n        const possibleLengths = new Set(substatRolls.map(roll => roll.length))\r\n        if (possibleLengths.size !== 1)\r\n          allSubstatRolls.push({ index, substatRolls })\r\n        else\r\n          total += substatRolls[0].length\r\n\r\n        substat.rolls = substatRolls[0]\r\n        substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n      } else {\r\n        if (substat.key)\r\n          errors.push(`Invalid substat ${Stat.getStatNameWithPercent(substat.key)}`)\r\n\r\n        substat.rolls = []\r\n        substat.efficiency = 0\r\n      }\r\n    })\r\n\r\n    if (errors.length) return errors\r\n    {\r\n      let substat = substats.find(substat => (substat.rolls?.length ?? 0) > 1)\r\n      if (substat && substats.some((substat) => !substat.rolls?.length))\r\n        return [`Substat ${Stat.getStatNameWithPercent(substat.key)} has > 1 roll, but not all substats are unlocked.`]\r\n    }\r\n\r\n    const { low } = Artifact.rollInfo(numStars)\r\n    const minimum = low + Math.floor(level / 4)\r\n    const remaining = Artifact.rollsRemaining(level, numStars);\r\n    const maximum = Artifact.totalPossibleRolls(numStars);\r\n\r\n    let minimumMaxRolls = Infinity\r\n    function tryAllSubstats(rolls: { index: number, roll: number[] }[], maxRolls: number, total: number) {\r\n      if (rolls.length === allSubstatRolls.length) {\r\n        if (total + remaining <= maximum && total >= minimum && maxRolls < minimumMaxRolls) {\r\n          minimumMaxRolls = maxRolls\r\n          for (const { index, roll } of rolls) {\r\n            const key = substats[index].key\r\n            substats[index].rolls = roll\r\n            substats[index].efficiency = Artifact.getSubstatEfficiency(key, roll)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const { index, substatRolls } = allSubstatRolls[rolls.length]\r\n      for (const roll of substatRolls) {\r\n        rolls.push({ index, roll })\r\n        tryAllSubstats(rolls, Math.max(maxRolls, roll.length), total + roll.length)\r\n        rolls.pop()\r\n      }\r\n    }\r\n\r\n    tryAllSubstats([], 0, total)\r\n\r\n    if (!isFinite(minimumMaxRolls)) {\r\n      // No build found\r\n      const total = substats.reduce((accu, current) => accu + (current.rolls?.length ?? 0), 0)\r\n      if (total < minimum)\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have at least ${minimum} rolls. It currently has ${total} rolls.`)\r\n      else {\r\n        errors.push(`${numStars}-star artifact (level ${level}) should have no more than ${maximum - remaining} rolls. It currently has ${total} rolls.`)\r\n      }\r\n    } else {\r\n      // Found valid build, filling missing data\r\n      for (const substat of substats)\r\n        substat.accurateValue = substat.rolls!.reduce((sum, cur) => sum + cur, 0)\r\n      const { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n      state.currentEfficiency = currentEfficiency\r\n      state.maximumEfficiency = maximumEfficiency\r\n    }\r\n\r\n    return errors\r\n  }\r\n  static getArtifactEfficiency(substats: Substat[], numStars: Rarity, level: number) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let current = substats.reduce((sum, { key, accurateValue }) => sum + (key ? (accurateValue! / ArtifactSubstatsMinMax[key].max[maxStar]) : 0), 0)\r\n    let maximum = current + rollsRemaining\r\n    let currentEfficiency = current * 100 / totalRolls\r\n    let maximumEfficiency = maximum * 100 / totalRolls\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  //start with {slotKey:art} end with {setKey:[slotKey]}\r\n  static setToSlots = (artifacts: Dict<SlotKey, IArtifact>): Dict<ArtifactSetKey, SlotKey[]> => {\r\n    let setToSlots: Dict<ArtifactSetKey, SlotKey[]> = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey]!.push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  };\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId: string | undefined, characterKey: CharacterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifactOnSlot(intendedLocation, art.slotKey, art.id)\r\n\r\n    if (currentLocation) {\r\n      CharacterDatabase.equipArtifactOnSlot(currentLocation, slotKey, artifactToSwapWith?.id ?? \"\")\r\n    }\r\n  }\r\n  static unequipArtifact(artifactId: string | undefined) {\r\n    const art = ArtifactDatabase.get(artifactId)\r\n    if (!art || !art.location) return\r\n    const location = art.location\r\n    const slotKey = art.slotKey\r\n    CharacterDatabase.equipArtifactOnSlot(location, slotKey, \"\")\r\n    ArtifactDatabase.moveToNewLocation(artifactId)\r\n  }\r\n}\r\n","const WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20/40\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40/50\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50/60\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60/70\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70/80\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80/90\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { LevelNameData, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData';\r\nimport WeaponSheet from './WeaponSheet';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey): number => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.main[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatVal = (weaponSheet: WeaponSheet, levelKey, defVal = 0) => (weaponSheet.baseStats.sub?.[Weapon.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubstatKey = (weaponSheet: WeaponSheet, defVal = \"\") => (weaponSheet.baseStats?.substatKey || defVal)\r\n\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = (): string[] => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || Weapon.getWeaponMainStatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubstatValWithOverride = (weaponObj: any, weaponSheet: WeaponSheet, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || Weapon.getWeaponSubstatVal(weaponSheet, weaponObj?.levelKey, defVal);\r\n}","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [\"pyro\"] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [\"physical\"] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [\"electro\"] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [\"cryo\"] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [\"pyro\", \"hydro\", \"electro\", \"cryo\"] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [0,\r\n  17.2, 18.5, 19.9, 21.3, 22.6, 24.6, 26.6, 28.9, 31.4, 34.1,\r\n  37.2, 40.7, 44.4, 48.6, 53.7, 59.1, 64.4, 69.7, 75.1, 80.6,\r\n  86.1, 91.7, 97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n  142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n  215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n  336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n  509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n  742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n  968.6, 991.0, 1013.5, 1036.1, 1066.6, 1090.0, 1115.0, 1141.7, 1171.9, 1202.8,\r\n  1202.8, 1233.9, 1264.7, 1305.7, 1346.1, 1468.9, 1524.0, 1577.0, 1627.6, 1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [0,\r\n  91, 99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n  170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n  320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n  448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n  574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n  733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n  915, 936, 956, 982, 1003, 1017, 1036, 1057, 1075, 1096,\r\n  1114, 1135, 1149, 1170, 1191, 1205, 1224, 1243, 1260, 1277,\r\n  1293, 1308, 1317, 1327, 1336, 1349, 1366, 1384, 1403, 1424,\r\n  1450, 1478, 1507, 1543, 1570, 1580, 1589, 1673, 1682, 1691,\r\n]","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key as any) &&\r\n      console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]: any) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key =>\r\n      !StatData[key as any]?.const &&\r\n      console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0] as any] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","// import characters from\r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20/40\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40/50\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50/60\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60/70\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70/80\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80/90\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterSpecializedStatKey\r\n}","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = Stat.getStatName(key, defVal) as any\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList: any[] = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {Stat.printStat(mkey, stats)} * {(multiplier as any)?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n};\r\n[\"pyro\", \"cryo\", \"electro\", \"hydro\"].map(ele => FormulaText[`${ele}_crystalize_hit`] = o => <span>250% * {f(o, `crystalize_hit`)}</span>)\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} * {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ele] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}\r\n\r\nexport function usePromise<T>(promise: Promise<T> | undefined): T | undefined {\r\n  const [res, setRes] = useState<T | undefined>();\r\n  useEffect(() => {\r\n    let pending = true\r\n    promise?.then(res => pending && setRes(() => res), console.error) ?? setRes(undefined)\r\n    return () => { pending = false }\r\n  }, [promise])\r\n  return res\r\n}\r\n"],"sourceRoot":""}