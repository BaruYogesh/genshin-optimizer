{"version":3,"file":"static/js/427.66b15d98.chunk.js","mappings":"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","sources":["Data/Weapons/WeaponSheet.tsx","PageHome/InventoryCard.tsx","PageHome/VidGuideCard.tsx","PageHome/QuickLinksCard.tsx","PageHome/ResinCard.tsx","PageHome/TeamCard.tsx","PageHome/index.tsx","PageTools/ResinCounter.tsx","PageTools/TeyvatTime.tsx","Util/TimeUtil.ts"],"sourcesContent":["import type { WeaponData } from 'pipeline';\r\nimport ImgIcon from '../../Components/Image/ImgIcon';\r\nimport SqBadge from '../../Components/SqBadge';\r\nimport { Translate } from '../../Components/Translate';\r\nimport { input } from '../../Formula';\r\nimport { Data } from '../../Formula/type';\r\nimport { Rarity, WeaponKey, WeaponTypeKey } from '../../Types/consts';\r\nimport { DocumentSection, IDocumentHeader } from '../../Types/sheet';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, lowRarityMilestoneLevels, milestoneLevels } from '../LevelData';\r\n\r\nconst weaponSheets = import('.').then(imp => imp.default)\r\n\r\nexport interface IWeaponSheet {\r\n  icon: string,\r\n  iconAwaken: string,\r\n  document: DocumentSection[],\r\n}\r\n\r\nexport default class WeaponSheet {\r\n  readonly key: WeaponKey;\r\n  readonly sheet: IWeaponSheet;\r\n  readonly data: Data;\r\n  readonly rarity: Rarity;\r\n  readonly weaponType: WeaponTypeKey;\r\n  constructor(key: WeaponKey, weaponSheet: IWeaponSheet, weaponData: WeaponData, data: Data) {\r\n    this.rarity = weaponData.rarity\r\n    this.weaponType = weaponData.weaponType\r\n    this.key = key\r\n    this.sheet = weaponSheet\r\n    this.data = data\r\n  }\r\n  static get = (weaponKey: WeaponKey | \"\"): Promise<WeaponSheet> | undefined => weaponKey ? weaponSheets.then(w => w[weaponKey]) : undefined\r\n  static get getAll() { return weaponSheets }\r\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([_, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\r\n  static getLevelString = (weapon: ICachedWeapon): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\r\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\r\n  get name() { return this.tr(\"name\") }\r\n  get hasRefinement() { return this.rarity > 2 }\r\n  get passiveName() { return this.hasRefinement ? this.tr(\"passiveName\") : \"\" }\r\n  get description() { return this.tr(\"description\") }\r\n  passiveDescription = (refineIndex: number) => this.hasRefinement ? this.tr(`passiveDescription.${refineIndex}`) : \"\"\r\n  get document() { return this.sheet.document }\r\n  get milestoneLevels(): Array<[number, number]> {\r\n    if (this.hasRefinement) return milestoneLevels as any\r\n    else return lowRarityMilestoneLevels as any\r\n  }\r\n  ambiguousLevel(level: number) {\r\n    if (this.hasRefinement) return ambiguousLevel(level)\r\n    else return ambiguousLevelLow(level)\r\n  }\r\n  getImg(ascsion: number) {\r\n    return ascsion < 2 ? this.sheet.icon : this.sheet.iconAwaken\r\n  }\r\n}\r\nexport const headerTemplate = (weaponKey: WeaponKey, img: string, imgAwaken: string, action?: Displayable): IDocumentHeader => {\r\n  const tr = (strKey: string) => <Translate ns={`weapon_${weaponKey}_gen`} key18={strKey} />\r\n  return {\r\n    title: tr(`passiveName`),\r\n    icon: data => <ImgIcon size={2} sx={{ m: -1 }} src={data.get(input.weapon.asc).value < 2 ? img : imgAwaken} />,\r\n    action: action && <SqBadge color=\"success\">{action}</SqBadge>,\r\n    description: data => tr(`passiveDescription.${data.get(input.weapon.refineIndex).value}`)\r\n  }\r\n}\r\n","import { BusinessCenter, People } from \"@mui/icons-material\"\r\nimport { CardActionArea, CardContent, CardHeader, Chip, Divider, Typography, useMediaQuery } from \"@mui/material\"\r\nimport { useTheme } from \"@mui/system\"\r\nimport { useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Assets from \"../Assets/Assets\"\r\nimport { slotIconSVG } from \"../Components/Artifact/SlotNameWIthIcon\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport FontAwesomeSvgIcon from \"../Components/FontAwesomeSvgIcon\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { elementSvg } from \"../Components/StatIcon\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport { allElements, allSlotKeys, allWeaponTypeKeys } from \"../Types/consts\"\r\nimport { objectKeyMap } from \"../Util/Util\"\r\n\r\n\r\nexport default function InventoryCard() {\r\n  const { t } = useTranslation([\"page_home\", \"ui\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n  const { characterTally, characterTotal } = useMemo(() => {\r\n    const chars = database.chars.keys\r\n    const tally = objectKeyMap(allElements, () => 0)\r\n    if (characterSheets) chars.forEach(ck => {\r\n      let elementKey = characterSheets[ck]!.elementKey\r\n      if (!elementKey)\r\n        elementKey = database.chars.get(ck)!.elementKey ?? \"anemo\"\r\n      tally[elementKey] = tally[elementKey] + 1\r\n    })\r\n    return { characterTally: tally, characterTotal: chars.length }\r\n  }, [database, characterSheets])\r\n\r\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\r\n  const { weaponTally, weaponTotal } = useMemo(() => {\r\n    const weapons = database.weapons.values\r\n    const tally = objectKeyMap(allWeaponTypeKeys, () => 0)\r\n    if (weaponSheets) weapons.forEach(wp => {\r\n      let type = weaponSheets[wp.key].weaponType\r\n      tally[type] = tally[type] + 1\r\n    })\r\n    return { weaponTally: tally, weaponTotal: weapons.length }\r\n  }, [database, weaponSheets])\r\n\r\n  const { artifactTally, artifactTotal } = useMemo(() => {\r\n    const tally = objectKeyMap(allSlotKeys, () => 0)\r\n    const arts = database.arts.values\r\n    arts.forEach(art => {\r\n      const slotKey = art.slotKey\r\n      tally[slotKey] = tally[slotKey] + 1\r\n    })\r\n    return { artifactTally: tally, artifactTotal: arts.length }\r\n  }, [database])\r\n  const theme = useTheme();\r\n  const smaller = !useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n  return <CardDark>\r\n    <CardHeader title={<Typography variant=\"h5\">{t`inventoryCard.title`}</Typography>} avatar={<BusinessCenter fontSize=\"large\" />} />\r\n    <Divider />\r\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n      <CardLight>\r\n        <CardActionArea sx={{ display: \"flex\", justifyContent: \"space-between\", p: 2, gap: 1, flexWrap: \"wrap\" }} component={RouterLink} to=\"/characters\" >\r\n          <Chip label={<strong>{t<string>(`ui:tabs.characters`)} {characterTotal}</strong>} icon={<People />} sx={{ flexBasis: smaller ? \"100%\" : \"auto\", flexGrow: 1 }} color={characterTotal ? \"primary\" : \"secondary\"} />\r\n          {Object.entries(characterTally).map(([ele, num]) => <Chip key={ele} sx={{ flexGrow: 1 }} color={num ? ele : \"secondary\"} icon={<FontAwesomeSvgIcon icon={elementSvg[ele]} />} label={<strong>{num}</strong>} />)}\r\n        </CardActionArea>\r\n      </CardLight>\r\n      <CardLight>\r\n        <CardActionArea sx={{ display: \"flex\", justifyContent: \"space-between\", p: 2, gap: 1, flexWrap: \"wrap\" }} component={RouterLink} to=\"/weapons\" >\r\n          <Chip label={<strong>{t<string>(`ui:tabs.weapons`)} {weaponTotal}</strong>} icon={Assets.svg.anvil} sx={{ flexBasis: smaller ? \"100%\" : \"auto\", flexGrow: 1 }} color={weaponTotal ? \"primary\" : \"secondary\"} />\r\n          {Object.entries(weaponTally).map(([wt, num]) => <Chip key={wt} sx={{ flexGrow: 1 }} color={num ? \"success\" : \"secondary\"} icon={<ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />} label={<strong>{num}</strong>} />)}\r\n        </CardActionArea>\r\n      </CardLight>\r\n      <CardLight>\r\n        <CardActionArea sx={{ display: \"flex\", justifyContent: \"space-between\", p: 2, gap: 1, flexWrap: \"wrap\" }} component={RouterLink} to=\"/artifacts\">\r\n          <Chip label={<strong>{t<string>(`ui:tabs.artifacts`)} {artifactTotal}</strong>} icon={<FontAwesomeSvgIcon icon={slotIconSVG.flower} />} sx={{ flexBasis: smaller ? \"100%\" : \"auto\", flexGrow: 1 }} color={artifactTotal ? \"primary\" : \"secondary\"} />\r\n          {Object.entries(artifactTally).map(([slotKey, num]) => <Chip key={slotKey} sx={{ flexGrow: 1 }} color={num ? \"success\" : \"secondary\"} icon={<FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />} label={<strong>{num}</strong>} />)}\r\n        </CardActionArea>\r\n      </CardLight>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","import { YouTube } from \"@mui/icons-material\";\r\nimport { Box, CardContent, CardHeader, Divider, Grid, Link, Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardDark from \"../Components/Card/CardDark\";\r\n\r\nconst embeds = JSON.parse(process.env.REACT_APP_URLS_GUIDES ?? \"[]\") as string[]\r\n\r\nexport default function VidGuideCard() {\r\n  const { t } = useTranslation([\"page_home\", \"ui\"])\r\n  if (!embeds.length) return null\r\n  return <CardDark>\r\n    <CardHeader title={<Typography variant=\"h5\" component={Link} color=\"inherit\" href={process.env.REACT_APP_URL_YOUTUBE_TUTPL} target=\"_blank\" rel=\"noopener\">{t`vidGuideCard.title`}</Typography>} avatar={<YouTube fontSize=\"large\" />} />\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container columns={{ xs: 1, sm: 2 }} spacing={2} >\r\n        {embeds.map(embed => <Grid item xs={1} key={embed}>\r\n          <Box key={embed} sx={{\r\n            position: \"relative\",\r\n            pb: \"56.25%\",\r\n            /* 16:9 */\r\n            pt: \"25px\",\r\n            height: 0,\r\n            borderRadius: 2,\r\n            overflow: \"hidden\",\r\n            \"> iframe\": {\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }\r\n          }}>\r\n            <iframe width=\"560\" height=\"349\" title=\"Genshin Optimizer Guide\" src={`https://www.youtube-nocookie.com/embed/${embed}`} frameBorder={0} allowFullScreen />\r\n          </Box>\r\n        </Grid>)}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","import { faDiscord, faPatreon, faPaypal, faTwitch } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { Article, GitHub, Handshake, InsertLink, Scanner, Twitter, YouTube } from \"@mui/icons-material\"\r\nimport { Box, Button, CardContent, CardHeader, Divider, Link, Tooltip, Typography } from \"@mui/material\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport FontAwesomeSvgIcon from \"../Components/FontAwesomeSvgIcon\"\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nconst smallIcons = [{\r\n  tooltip: \"Genshin Optimizer Discord\",\r\n  icon: <FontAwesomeSvgIcon icon={faDiscord} />,\r\n  url: process.env.REACT_APP_URL_DISCORD_GO,\r\n  color: \"discord\",\r\n}, {\r\n  tooltip: \"Genshin Optimizer Github\",\r\n  icon: <GitHub />,\r\n  url: process.env.REACT_APP_URL_GITHUB_GO,\r\n  color: \"white\",\r\n}, {\r\n  tooltip: \"Youtube (frzyc)\",\r\n  icon: <YouTube />,\r\n  url: process.env.REACT_APP_URL_YOUTUBE_FRZYC,\r\n  color: \"red\",\r\n}, {\r\n  tooltip: \"Twitch (frzyc)\",\r\n  icon: <FontAwesomeSvgIcon icon={faTwitch} />,\r\n  url: process.env.REACT_APP_URL_TWITCH_FRZYC,\r\n  color: \"twitch\",\r\n}, {\r\n  tooltip: \"Twitter (frzyc)\",\r\n  icon: <Twitter />,\r\n  url: process.env.REACT_APP_URL_TWITTER_FRZYC,\r\n  color: \"twitter\",\r\n}, {\r\n  tooltip: \"Patreon (frzyc)\",\r\n  icon: <FontAwesomeSvgIcon icon={faPatreon} />,\r\n  url: process.env.REACT_APP_URL_PATREON_FRZYC,\r\n  color: \"patreon\",\r\n}, {\r\n  tooltip: \"PayPal (frzyc)\",\r\n  icon: <FontAwesomeSvgIcon icon={faPaypal} />,\r\n  url: process.env.REACT_APP_URL_PAYPAL_FRZYC,\r\n  color: \"paypal\",\r\n},] as const\r\n\r\nconst buttons = [{\r\n  title: t => t`quickLinksCard.buttons.tyGuide.title`,\r\n  icon: <YouTube />,\r\n  tooltip: t => t`quickLinksCard.buttons.tyGuide.tooltip`,\r\n  url: process.env.REACT_APP_URL_YOUTUBE_TUTPL,\r\n  color: \"red\",\r\n}, {\r\n  title: t => t`quickLinksCard.buttons.scanners.title`,\r\n  icon: <Scanner />,\r\n  tooltip: t => t`quickLinksCard.buttons.scanners.tooltip`,\r\n  to: \"/scanner\",\r\n  color: \"primary\",\r\n}, {\r\n  title: t => t`quickLinksCard.buttons.kqm.title`,\r\n  icon: <Handshake />,\r\n  tooltip: t => t`quickLinksCard.buttons.kqm.tooltip`,\r\n  url: process.env.REACT_APP_URL_WEBSITE_KQM,\r\n  color: \"keqing\",\r\n}, {\r\n  title: t => t`quickLinksCard.buttons.devDiscord.title`,\r\n  icon: <FontAwesomeSvgIcon icon={faDiscord} />,\r\n  tooltip: t => t`quickLinksCard.buttons.devDiscord.tooltip`,\r\n  url: process.env.REACT_APP_URL_DISCORD_GDEV,\r\n  color: \"discord\",\r\n}, {\r\n  title: t => t`quickLinksCard.buttons.good.title`,\r\n  icon: <Article />,\r\n  tooltip: t => t`quickLinksCard.buttons.good.tooltip`,\r\n  to: \"/doc\",\r\n  color: \"primary\",\r\n}] as const\r\n\r\nexport default function QuickLinksCard() {\r\n  const { t } = useTranslation([\"page_home\", \"ui\"])\r\n  return <CardDark>\r\n    <CardHeader title={<Typography variant=\"h5\">{t`quickLinksCard.title`}</Typography>} avatar={<InsertLink fontSize=\"large\" />} />\r\n    <Divider />\r\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n\r\n      <Box display=\"flex\" justifyContent=\"space-between\" gap={1}>\r\n        {smallIcons.map(({ tooltip, icon, url, color }) => <Tooltip key={tooltip} title={tooltip} placement=\"top\" arrow>\r\n          <Button fullWidth color={color} key={tooltip} sx={{ p: 1, minWidth: 0 }} component={Link} href={url} target=\"_blank\" rel=\"noopener\">{icon}</Button>\r\n        </Tooltip>)}\r\n      </Box>\r\n      {buttons.map((btnProps, i) => {\r\n        const { title, icon, tooltip, color } = btnProps\r\n        let button;\r\n        if (\"to\" in btnProps)\r\n          button = <Button fullWidth key={i} color={color} component={RouterLink} to={btnProps.to} startIcon={icon}>{title(t)}</Button>\r\n        if (\"url\" in btnProps)\r\n          button = <Button fullWidth key={i} color={color} component={Link} href={btnProps.url} target=\"_blank\" rel=\"noopener\" startIcon={icon}>{title(t)}</Button>\r\n        return <Tooltip key={i} title={tooltip(t)} placement=\"top\" arrow>\r\n          {button}\r\n        </Tooltip>\r\n      })}\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","import { AccessTimeFilled } from \"@mui/icons-material\"\r\nimport { CardActionArea, CardContent, CardHeader, Divider, Typography } from \"@mui/material\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { initToolsDisplayResin, RESIN_MAX, RESIN_RECH_MS } from \"../PageTools/ResinCounter\"\r\nimport { initToolsDisplayTimezone, timeZones } from \"../PageTools/TeyvatTime\"\r\nimport useDBState from \"../ReactHooks/useDBState\"\r\nimport { SECOND_MS } from \"../Util/TimeUtil\"\r\n\r\nexport default function ResinCard() {\r\n  const [{ timeZoneKey }] = useDBState(\"ToolsDisplayTimezone\", initToolsDisplayTimezone)\r\n  const [time, setTime] = useState(new Date(Date.now() + timeZones[timeZoneKey]))\r\n\r\n  useEffect(() => {\r\n    let setSecondTimeout = () => {\r\n      setTime(new Date(Date.now() + timeZones[timeZoneKey]))\r\n      return setTimeout(() => {\r\n        interval = setSecondTimeout()\r\n      }, SECOND_MS - (Date.now() % SECOND_MS));\r\n    }\r\n    let interval = setSecondTimeout()\r\n    return () => clearTimeout(interval)\r\n  }, [timeZoneKey])\r\n\r\n  const [{ resin, date }, setResinState] = useDBState(\"ToolsDisplayResin\", initToolsDisplayResin)\r\n  const resinIncrement = useRef(undefined as undefined | NodeJS.Timeout)\r\n\r\n  const setResin = (newResin: number) => {\r\n    if (newResin >= RESIN_MAX) {\r\n      resinIncrement.current && clearTimeout(resinIncrement.current)\r\n      resinIncrement.current = undefined\r\n    } else\r\n      resinIncrement.current = setTimeout(() => console.log(\"set resin\", newResin + 1), RESIN_RECH_MS);\r\n    setResinState({ resin: newResin, date: new Date().getTime() })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (resin < RESIN_MAX) {\r\n      const now = Date.now()\r\n      const resinToMax = RESIN_MAX - resin\r\n      const resinSinceLastDate = Math.min(Math.floor((now - date) / (RESIN_RECH_MS)), resinToMax)\r\n      const catchUpResin = resin + resinSinceLastDate\r\n      const newDate = date + resinSinceLastDate * RESIN_RECH_MS\r\n      setResinState({ resin: catchUpResin, date: newDate })\r\n      if (catchUpResin < RESIN_MAX)\r\n        resinIncrement.current = setTimeout(() => setResin(catchUpResin + 1), now - newDate);\r\n    }\r\n    return () => resinIncrement.current && clearTimeout(resinIncrement.current)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return <CardDark>\r\n    <CardHeader title={<Typography variant=\"h5\">{timeZoneKey}{' '}{time.toLocaleTimeString([], { timeZone: \"UTC\" })}</Typography>} avatar={<AccessTimeFilled fontSize=\"large\" />} />\r\n    <Divider />\r\n    <CardContent>\r\n      <CardLight>\r\n        <CardActionArea sx={{ p: 2 }} component={RouterLink} to=\"/tools\">\r\n          <Typography variant=\"h2\" sx={{ textAlign: \"center\" }}>\r\n            <ImgIcon src={Assets.resin.fragile} />\r\n            <span>{resin}/{RESIN_MAX}</span>\r\n          </Typography>\r\n        </CardActionArea>\r\n      </CardLight>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","import { Box, CardContent, CardHeader, Divider, Grid, Link, Typography } from \"@mui/material\";\r\nimport CardDark from \"../Components/Card/CardDark\";\r\nimport CardLight from \"../Components/Card/CardLight\";\r\nimport frzyc from \"./teamIcons/frzyc.png\"\r\nimport lantua from \"./teamIcons/lantua.png\"\r\nimport van from \"./teamIcons/van.png\"\r\nimport stain from \"./teamIcons/stain.png\"\r\nimport sin from \"./teamIcons/sin.png\"\r\nimport { Groups } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst team = [{\r\n  name: \"frzyc\",\r\n  img: frzyc,\r\n  title: t => t`teamCard.jobTitle.leadDev`,\r\n  subtitle: \"Insomniac in Chief\",\r\n  url: process.env.REACT_APP_URL_GITHUB_FRZYC\r\n}, {\r\n  name: \"Lantua\",\r\n  img: lantua,\r\n  title: t => t`teamCard.jobTitle.dev`,\r\n  subtitle: \"Copium Calculator\",\r\n  url: process.env.REACT_APP_URL_GITHUB_LANTUA\r\n}, {\r\n  name: \"Van\",\r\n  img: van,\r\n  title: t => t`teamCard.jobTitle.dev`,\r\n  subtitle: \"Waverider Stowaway\",\r\n  url: process.env.REACT_APP_URL_GITHUB_VAN\r\n}, {\r\n  name: \"✦ Sin ✦\",\r\n  img: sin,\r\n  title: t => t`teamCard.jobTitle.mod`,\r\n  subtitle: \"Ohh, shiny.\",\r\n  url: \"\"\r\n}, {\r\n  name: \"Stain\",\r\n  img: stain,\r\n  title: t => t`teamCard.jobTitle.mod`,\r\n  subtitle: \"Australia Man\",\r\n  url: \"\"\r\n},] as const\r\n\r\nexport default function TeamCard() {\r\n  const { t } = useTranslation([\"page_home\", \"ui\"])\r\n  return <CardDark>\r\n    <CardHeader title={<Typography variant=\"h5\">{t`teamCard.title`}</Typography>} avatar={<Groups fontSize=\"large\" />} />\r\n    <Divider />\r\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n      <Grid container columns={{ xs: 6, md: 5 }} spacing={1}>\r\n        {team.map(({ name, img, title, subtitle, url }, i) => <Grid item key={name} xs={i < 2 ? 3 : 2} md={1}>\r\n          <CardLight sx={{ height: \"100%\" }}>\r\n            <CardContent>\r\n              <Box component=\"img\" src={img} sx={{ width: \"100%\", height: \"auto\", borderRadius: \"50%\" }} />\r\n              <Box display=\"flex\" flexDirection=\"column\">\r\n                {url ? <Typography variant=\"h6\" sx={{ textAlign: \"center\" }} color=\"inherit\" component={Link} href={url} target=\"_blank\" rel=\"noopener\"><strong>{name}</strong></Typography> :\r\n                  <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}><strong>{name}</strong></Typography>}\r\n                <Typography variant=\"subtitle1\" sx={{ textAlign: \"center\" }}>\r\n                  {title(t)}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ textAlign: \"center\", transform: name === \"Stain\" ? \"rotate(180deg)\" : undefined }} color=\"secondary.light\">\r\n                  {subtitle}\r\n                </Typography>\r\n              </Box>\r\n            </CardContent>\r\n          </CardLight>\r\n        </Grid>)}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","import { Box, CardContent, Grid, Link, Typography, useMediaQuery } from \"@mui/material\"\r\nimport { useTheme } from \"@mui/system\"\r\nimport ReactGA from 'react-ga4'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport InventoryCard from \"./InventoryCard\"\r\nimport VidGuideCard from \"./VidGuideCard\"\r\nimport QuickLinksCard from \"./QuickLinksCard\"\r\nimport ResinCard from \"./ResinCard\"\r\nimport TeamCard from \"./TeamCard\"\r\n\r\nexport default function PageHome() {\r\n  // TODO: translations\r\n  // const { t } = useTranslation(\"page_home\")\r\n  const theme = useTheme();\r\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  ReactGA.send({ hitType: \"pageview\", page: '/home' })\r\n  if (lg) return <Grid container spacing={2} direction={\"row-reverse\"} sx={{ my: 2 }}>\r\n    <Grid item xs={12} lg={5} xl={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n      <QuickLinksCard />\r\n      <ResinCard />\r\n    </Grid>\r\n    <Grid item xs={12} lg={7} xl={8} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n      <IntroCard />\r\n      <InventoryCard />\r\n      <VidGuideCard />\r\n      <TeamCard />\r\n    </Grid>\r\n\r\n  </Grid>\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    <IntroCard />\r\n    <QuickLinksCard />\r\n    <InventoryCard />\r\n    <ResinCard />\r\n    <VidGuideCard />\r\n    <TeamCard />\r\n  </Box >\r\n}\r\n\r\nfunction IntroCard() {\r\n  const { t } = useTranslation(\"page_home\")\r\n  return <CardDark>\r\n    <CardContent>\r\n      <Typography variant=\"subtitle1\">\r\n        <Trans t={t} i18nKey=\"intro\" >\r\n          The <strong>ultimate</strong> <Link href=\"https://genshin.mihoyo.com/\" target=\"_blank\" rel=\"noreferrer\"><i>Genshin Impact</i></Link> calculator, GO will keep track of your artifact/weapon/character inventory, and help you create the best build based on how you play, with what you have.\r\n        </Trans>\r\n      </Typography>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","import { Button, ButtonGroup, CardContent, Divider, Grid, InputBase, Typography } from '@mui/material';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Assets from '../Assets/Assets';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport ImgIcon from '../Components/Image/ImgIcon';\r\nimport useDBState from '../ReactHooks/useDBState';\r\nimport { MINUTE_MS, timeString } from '../Util/TimeUtil';\r\n\r\nexport const RESIN_MAX = 160\r\nexport const RESIN_RECH_MS = 8 * MINUTE_MS\r\nexport function initToolsDisplayResin() {\r\n  return {\r\n    resin: RESIN_MAX,\r\n    date: new Date().getTime()\r\n  }\r\n}\r\n\r\nexport default function ResinCounter() {\r\n  const [{ resin, date }, setResinState] = useDBState(\"ToolsDisplayResin\", initToolsDisplayResin)\r\n  const resinIncrement = useRef(undefined as undefined | NodeJS.Timeout)\r\n\r\n  const setResin = (newResin: number) => {\r\n    if (newResin >= RESIN_MAX) {\r\n      resinIncrement.current && clearTimeout(resinIncrement.current)\r\n      resinIncrement.current = undefined\r\n    } else\r\n      resinIncrement.current = setTimeout(() => console.log(\"set resin\", newResin + 1), RESIN_RECH_MS);\r\n    setResinState({ resin: newResin, date: new Date().getTime() })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (resin < RESIN_MAX) {\r\n      const now = Date.now()\r\n      const resinToMax = RESIN_MAX - resin\r\n      const resinSinceLastDate = Math.min(Math.floor((now - date) / (RESIN_RECH_MS)), resinToMax)\r\n      const catchUpResin = resin + resinSinceLastDate\r\n      const newDate = date + resinSinceLastDate * RESIN_RECH_MS\r\n      setResinState({ resin: catchUpResin, date: newDate })\r\n      if (catchUpResin < RESIN_MAX)\r\n        resinIncrement.current = setTimeout(() => setResin(catchUpResin + 1), now - newDate);\r\n    }\r\n    return () => resinIncrement.current && clearTimeout(resinIncrement.current)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const nextResinDateNum = resin >= RESIN_MAX ? date : date + RESIN_RECH_MS;\r\n\r\n  const resinFullDateNum = resin >= RESIN_MAX ? date : (date + (RESIN_MAX - resin) * RESIN_RECH_MS)\r\n  const resinFullDate = new Date(resinFullDateNum)\r\n\r\n  const nextDeltaString = timeString(Math.abs(nextResinDateNum - Date.now()))\r\n\r\n  return <CardDark>\r\n    <Grid container sx={{ px: 2, py: 1 }} spacing={2} >\r\n      <Grid item>\r\n        <ImgIcon src={Assets.resin.fragile} sx={{ fontSize: \"2em\" }} />\r\n      </Grid>\r\n      <Grid item >\r\n        <Typography variant=\"h6\">Resin Counter</Typography>\r\n      </Grid>\r\n    </Grid>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <Typography variant=\"h2\">\r\n            <ImgIcon src={Assets.resin.fragile} />\r\n            <InputBase type=\"number\" sx={{ width: \"2em\", fontSize: \"4rem\" }} value={resin} inputProps={{ min: 0, max: 999, sx: { textAlign: \"right\" } }} onChange={(e => setResin(parseInt(e.target.value)))} />\r\n            <span>/{RESIN_MAX}</span>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <ButtonGroup fullWidth >\r\n            <Button onClick={() => setResin(0)} disabled={resin === 0}>0</Button>\r\n            <Button onClick={() => setResin(resin - 1)} disabled={resin === 0}>-1</Button>\r\n            <Button onClick={() => setResin(resin - 20)} disabled={resin < 20}>-20</Button>\r\n            <Button onClick={() => setResin(resin - 40)} disabled={resin < 40}>-40</Button>\r\n            <Button onClick={() => setResin(resin - 60)} disabled={resin < 60}>-60</Button>\r\n            <Button onClick={() => setResin(resin + 1)}>+1</Button>\r\n            <Button onClick={() => setResin(resin + 60)}>+60</Button>\r\n            <Button onClick={() => setResin(RESIN_MAX)} disabled={resin === RESIN_MAX}>MAX {RESIN_MAX}</Button>\r\n          </ButtonGroup>\r\n          <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>\r\n            {resin < RESIN_MAX ? <span>Next resin in {nextDeltaString}, full Resin at {resinFullDate.toLocaleTimeString()} {resinFullDate.toLocaleDateString()}</span> :\r\n              <span>Resin has been full for at least {nextDeltaString}, since {resinFullDate.toLocaleTimeString()} {resinFullDate.toLocaleDateString()}</span>}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"caption\">Because we do not provide a mechanism to synchronize resin time, actual resin recharge time might be as much as 8 minutes earlier than predicted.</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CardContent, Divider, Grid, MenuItem, Typography } from '@mui/material';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport useDBState from '../ReactHooks/useDBState';\r\nimport { DAY_MS, HOUR_MS, MINUTE_MS, SECOND_MS, timeString } from '../Util/TimeUtil';\r\n\r\nexport const timeZones = {\r\n  \"America\": - 5 * HOUR_MS,\r\n  \"Europe\": HOUR_MS,\r\n  \"Asia\": 8 * HOUR_MS,\r\n  \"TW, HK, MO\": 8 * HOUR_MS,\r\n}\r\ntype TimeZoneKey = keyof typeof timeZones\r\n\r\nexport function initToolsDisplayTimezone() {\r\n  return { timeZoneKey: Object.keys(timeZones)[0] as TimeZoneKey }\r\n}\r\nexport default function TeyvatTime() {\r\n  const [{ timeZoneKey }, setTimeZone] = useDBState(\"ToolsDisplayTimezone\", initToolsDisplayTimezone)\r\n  const setTimeZoneKey = useCallback((timeZoneKey) => setTimeZone({ timeZoneKey }), [setTimeZone])\r\n\r\n  const [time, setTime] = useState(new Date(Date.now() + timeZones[timeZoneKey]))\r\n  //set a timer. timer resets when timezone is changed.\r\n  useEffect(() => {\r\n    let setSecondTimeout = () => {\r\n      setTime(new Date(Date.now() + timeZones[timeZoneKey]))\r\n      return setTimeout(() => {\r\n        interval = setSecondTimeout()\r\n      }, SECOND_MS - (Date.now() % SECOND_MS));\r\n    }\r\n    let interval = setSecondTimeout()\r\n    return () => clearTimeout(interval)\r\n  }, [timeZoneKey])\r\n\r\n  let resetTime = new Date(time)\r\n  if (resetTime.getUTCHours() < 4) {\r\n    resetTime.setUTCHours(4, 0, 0, 0)\r\n  } else {\r\n    resetTime = new Date(resetTime.getTime() + DAY_MS)\r\n    resetTime.setUTCHours(4, 0, 0, 0)\r\n  }\r\n  let remaningTimeMs = resetTime.getTime() - time.getTime()\r\n  let remainingResetString = timeString(remaningTimeMs)\r\n\r\n  return <CardDark>\r\n    <Grid container sx={{ px: 2, py: 1 }} spacing={2}>\r\n      <Grid item>\r\n        <Typography variant=\"h6\"><FontAwesomeIcon icon={faClock} className=\"fa-fw\" /></Typography>\r\n      </Grid>\r\n      <Grid item flexGrow={1}>\r\n        <Typography variant=\"h6\">Teyvat Time</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <DropdownButton title={timeZoneKey}>\r\n          {Object.keys(timeZones).map(zoneKey =>\r\n            <MenuItem key={zoneKey} selected={timeZoneKey === zoneKey} disabled={timeZoneKey === zoneKey} onClick={() => setTimeZoneKey(zoneKey)} >{zoneKey}</MenuItem>)}\r\n        </DropdownButton>\r\n      </Grid>\r\n    </Grid>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container justifyContent=\"center\" spacing={3}>\r\n        <Grid item sx={{ my: 4 }}>\r\n          <Typography variant=\"h2\">\r\n            {time.toLocaleTimeString([], { timeZone: \"UTC\" })}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item display=\"flex\" flexDirection=\"column\" justifyContent=\"space-around\">\r\n          <Typography>Server Date: <b>{time.toDateString()}</b></Typography>\r\n          <Typography>Time until reset: <b>{remainingResetString}</b></Typography>\r\n          <Typography>Resin until reset: <b>{Math.floor(remaningTimeMs / (8 * MINUTE_MS))}</b></Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","import { strPadLeft } from \"./Util\"\r\n\r\nexport const SECOND_MS = 1000\r\nexport const MINUTE_MS = 60 * SECOND_MS\r\nexport const HOUR_MS = 60 * MINUTE_MS\r\nexport const DAY_MS = 24 * HOUR_MS\r\n\r\nexport function msToUnits(ms: number) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nexport function timeString(ms: number) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nexport function timeStringMs(ms: number) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\n"],"names":["weaponSheets","then","imp","default","WeaponSheet","key","weaponSheet","weaponData","data","sheet","rarity","weaponType","tr","strKey","ns","key18","passiveDescription","refineIndex","hasRefinement","this","document","milestoneLevels","lowRarityMilestoneLevels","level","ambiguousLevel","ambiguousLevelLow","ascsion","icon","iconAwaken","get","weaponKey","w","undefined","getWeaponsOfType","sheets","Object","fromEntries","entries","filter","getLevelString","weapon","ascensionMaxLevel","ascension","headerTemplate","img","imgAwaken","action","title","size","sx","m","src","input","value","color","description","InventoryCard","t","useTranslation","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","useMemo","chars","keys","tally","objectKeyMap","allElements","forEach","ck","elementKey","characterTally","characterTotal","length","weapons","values","allWeaponTypeKeys","wp","type","weaponTally","weaponTotal","allSlotKeys","arts","art","slotKey","artifactTally","artifactTotal","theme","useTheme","smaller","useMediaQuery","breakpoints","up","CardDark","CardHeader","Typography","variant","avatar","BusinessCenter","fontSize","Divider","CardContent","display","flexDirection","gap","CardLight","CardActionArea","justifyContent","p","flexWrap","component","RouterLink","to","Chip","label","People","flexBasis","flexGrow","map","ele","num","FontAwesomeSvgIcon","elementSvg","Assets","wt","ImgIcon","slotIconSVG","embeds","JSON","parse","process","VidGuideCard","Link","href","target","rel","YouTube","Grid","container","columns","xs","sm","spacing","embed","item","Box","position","pb","pt","height","borderRadius","overflow","top","left","width","frameBorder","allowFullScreen","smallIcons","tooltip","faDiscord","url","GitHub","faTwitch","Twitter","faPatreon","faPaypal","buttons","Scanner","Handshake","Article","QuickLinksCard","InsertLink","Tooltip","placement","arrow","Button","fullWidth","minWidth","btnProps","i","button","startIcon","ResinCard","useDBState","initToolsDisplayTimezone","timeZoneKey","useState","Date","now","timeZones","time","setTime","useEffect","interval","setSecondTimeout","setTimeout","SECOND_MS","clearTimeout","initToolsDisplayResin","resin","date","setResinState","resinIncrement","useRef","RESIN_MAX","resinToMax","resinSinceLastDate","Math","min","floor","RESIN_RECH_MS","catchUpResin","newDate","current","newResin","console","log","getTime","toLocaleTimeString","timeZone","AccessTimeFilled","textAlign","team","name","frzyc","subtitle","lantua","van","sin","stain","TeamCard","Groups","md","transform","PageHome","lg","ReactGA","hitType","page","direction","my","xl","IntroCard","Trans","i18nKey","MINUTE_MS","ResinCounter","setResin","nextResinDateNum","resinFullDate","nextDeltaString","timeString","abs","px","py","inputProps","max","onChange","e","parseInt","onClick","disabled","mt","toLocaleDateString","HOUR_MS","TeyvatTime","setTimeZone","setTimeZoneKey","useCallback","resetTime","getUTCHours","setUTCHours","DAY_MS","remaningTimeMs","remainingResetString","faClock","className","zoneKey","selected","toDateString","msToUnits","ms","milliseconds","seconds","minutes","hours","timeText","strPadLeft","timeStringMs"],"sourceRoot":""}